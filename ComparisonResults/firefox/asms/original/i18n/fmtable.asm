; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\fmtable.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@Formattable@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::Formattable::getStaticClassID'::`2'::classID
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??8Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator==
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	??1Formattable@icu_56@@UAE@XZ			; icu_56::Formattable::~Formattable
PUBLIC	??_GFormattable@icu_56@@UAEPAXI@Z		; icu_56::Formattable::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFormattable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFormattable@icu_56@@UAEPAXI@Z PROC			; icu_56::Formattable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFormattable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Formattable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EFormattable@icu_56@@UAEPAXI@Z		; icu_56::Formattable::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFormattable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFormattable@icu_56@@UAEPAXI@Z PROC			; icu_56::Formattable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	224					; 000000e0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFormattable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Formattable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T46782 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T46782[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46782[ebp]
	or	ecx, 1
	mov	DWORD PTR $T46782[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T37751 = -312						; size = 64
_i$37746 = -45						; size = 1
_sym$37744 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$37744[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$37744[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$37746[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$37746[ebp]
	add	al, 1
	mov	BYTE PTR _i$37746[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$37746[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$37744[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$37744[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$37744[ebp]
	push	eax
	lea	ecx, DWORD PTR $T37751[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$37746[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37751[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37751[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T46804 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T46804[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46804[ebp]
	or	ecx, 1
	mov	DWORD PTR $T46804[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
EXTRN	??8DigitList@icu_56@@QBECABV01@@Z:PROC		; icu_56::DigitList::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	?getStaticClassID@Formattable@icu_56@@SAPAXXZ	; icu_56::Formattable::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@Formattable@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@Formattable@icu_56@@SAPAXXZ PROC	; icu_56::Formattable::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\fmtable.cpp
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@Formattable@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@Formattable@icu_56@@SAPAXXZ ENDP	; icu_56::Formattable::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@Formattable@icu_56@@UBEPAXXZ	; icu_56::Formattable::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@Formattable@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@Formattable@icu_56@@UBEPAXXZ PROC	; icu_56::Formattable::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@Formattable@icu_56@@SAPAXXZ ; icu_56::Formattable::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@Formattable@icu_56@@UBEPAXXZ ENDP	; icu_56::Formattable::getDynamicClassID
_TEXT	ENDS
PUBLIC	?init@Formattable@icu_56@@AAEXXZ		; icu_56::Formattable::init
EXTRN	__imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@Formattable@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?init@Formattable@icu_56@@AAEXXZ PROC			; icu_56::Formattable::init, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 2
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 105
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 106
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@Formattable@icu_56@@AAEXXZ ENDP			; icu_56::Formattable::init
_TEXT	ENDS
PUBLIC	??_7Formattable@icu_56@@6B@			; icu_56::Formattable::`vftable'
PUBLIC	??0Formattable@icu_56@@QAE@XZ			; icu_56::Formattable::Formattable
PUBLIC	??_R4Formattable@icu_56@@6B@			; icu_56::Formattable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFormattable@icu_56@@@8			; icu_56::Formattable `RTTI Type Descriptor'
PUBLIC	??_R3Formattable@icu_56@@8			; icu_56::Formattable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Formattable@icu_56@@8			; icu_56::Formattable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Formattable@icu_56@@8		; icu_56::Formattable::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT ??_R1A@?0A@EA@Formattable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Formattable@icu_56@@8 DD FLAT:??_R0?AVFormattable@icu_56@@@8 ; icu_56::Formattable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Formattable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Formattable@icu_56@@8
rdata$r	SEGMENT
??_R2Formattable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Formattable@icu_56@@8 ; icu_56::Formattable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Formattable@icu_56@@8
rdata$r	SEGMENT
??_R3Formattable@icu_56@@8 DD 00H			; icu_56::Formattable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Formattable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormattable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFormattable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Formattable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFormattable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Formattable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Formattable@icu_56@@6B@ DD 00H			; icu_56::Formattable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFormattable@icu_56@@@8
	DD	FLAT:??_R3Formattable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Formattable@icu_56@@6B@
CONST	SEGMENT
??_7Formattable@icu_56@@6B@ DD FLAT:??_R4Formattable@icu_56@@6B@ ; icu_56::Formattable::`vftable'
	DD	FLAT:??_EFormattable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@Formattable@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@XZ$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0Formattable@icu_56@@QAE@XZ PROC			; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 114
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@XZ ENDP			; icu_56::Formattable::Formattable
PUBLIC	??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z	; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_date$ = 8						; size = 8
___formal$ = 16						; size = 4
??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z PROC		; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [eax+8]
; Line 124
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@NW4ISDATE@01@@Z ENDP		; icu_56::Formattable::Formattable
PUBLIC	??0Formattable@icu_56@@QAE@N@Z			; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@N@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 8
??0Formattable@icu_56@@QAE@N@Z PROC			; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 1
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _value$[ebp]
	fstp	QWORD PTR [eax+8]
; Line 134
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@N@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@N@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@N@Z ENDP			; icu_56::Formattable::Formattable
PUBLIC	??0Formattable@icu_56@@QAE@H@Z			; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@H@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
??0Formattable@icu_56@@QAE@H@Z PROC			; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 141
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 142
	mov	eax, DWORD PTR _value$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx
; Line 143
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@H@Z ENDP			; icu_56::Formattable::Formattable
PUBLIC	??0Formattable@icu_56@@QAE@_J@Z			; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@_J@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@_J@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@_J@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 8
??0Formattable@icu_56@@QAE@_J@Z PROC			; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 150
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 5
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _value$[ebp+4]
	mov	DWORD PTR [eax+12], edx
; Line 153
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@_J@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@_J@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@_J@Z ENDP			; icu_56::Formattable::Formattable
PUBLIC	?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::setDecimalNumber
PUBLIC	??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_status$ = 12						; size = 4
??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 158
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 160
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::setDecimalNumber
; Line 161
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::Formattable
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z ; icu_56::Formattable::Formattable
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z$2
__ehfuncinfo$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z
_TEXT	SEGMENT
tv95 = -244						; size = 4
$T46967 = -236						; size = 4
$T46968 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_stringToCopy$ = 8					; size = 4
??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z PROC	; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 168
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 169
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 3
; Line 171
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46968[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T46968[ebp], 0
	je	SHORT $LN3@Formattabl
	mov	esi, esp
	mov	eax, DWORD PTR _stringToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46968[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46968[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T46968[ebp]
	mov	DWORD PTR tv95[ebp], edx
	jmp	SHORT $LN4@Formattabl
$LN3@Formattabl:
	mov	DWORD PTR tv95[ebp], 0
$LN4@Formattabl:
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T46967[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46967[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 172
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T46968[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z ENDP	; icu_56::Formattable::Formattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z ; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_stringToAdopt$ = 8					; size = 4
??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z PROC	; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 180
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 3
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stringToAdopt$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 183
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@PAVUnicodeString@1@@Z ENDP	; icu_56::Formattable::Formattable
PUBLIC	??0Formattable@icu_56@@QAE@PAVUObject@1@@Z	; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@PAVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_objectToAdopt$ = 8					; size = 4
??0Formattable@icu_56@@QAE@PAVUObject@1@@Z PROC		; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 6
; Line 189
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _objectToAdopt$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 190
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@PAVUObject@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@PAVUObject@1@@Z ENDP		; icu_56::Formattable::Formattable
PUBLIC	??0Formattable@icu_56@@QAE@PBV01@H@Z		; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@PBV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@PBV01@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@PBV01@H@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@PBV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@PBV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@PBV01@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_arrayToCopy$ = 8					; size = 4
_count$ = 12						; size = 4
??0Formattable@icu_56@@QAE@PBV01@H@Z PROC		; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@PBV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 197
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 198
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 4
; Line 199
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _arrayToCopy$[ebp]
	push	ecx
	call	?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z ; icu_56::createArrayCopy
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 201
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@PBV01@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@PBV01@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@PBV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@PBV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@PBV01@H@Z ENDP		; icu_56::Formattable::Formattable
PUBLIC	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Formattable::operator=
PUBLIC	??_U@YAPAXI@Z					; operator new[]
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z$0
__ehfuncinfo$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z
_TEXT	SEGMENT
tv90 = -272						; size = 4
tv79 = -268						; size = 4
$T47014 = -260						; size = 4
$T47015 = -248						; size = 4
$T47016 = -236						; size = 4
_i$39184 = -32						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_array$ = 8						; size = 4
_count$ = 12						; size = 4
?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z PROC ; icu_56::createArrayCopy, COMDAT
; Line 76
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 77
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR $T47014[ebp], eax
	cmp	DWORD PTR $T47014[ebp], 0
	jne	SHORT $LN7@createArra
	push	4
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN8@createArra
$LN7@createArra:
	xor	ecx, ecx
	mov	eax, DWORD PTR $T47014[ebp]
	mov	edx, 224				; 000000e0H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
$LN8@createArra:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T47016[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47016[ebp], 0
	je	SHORT $LN9@createArra
	mov	edx, DWORD PTR $T47016[ebp]
	mov	eax, DWORD PTR $T47014[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	OFFSET ??0Formattable@icu_56@@QAE@XZ	; icu_56::Formattable::Formattable
	mov	ecx, DWORD PTR $T47014[ebp]
	push	ecx
	push	224					; 000000e0H
	mov	edx, DWORD PTR $T47016[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T47016[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN10@createArra
$LN9@createArra:
	mov	DWORD PTR tv90[ebp], 0
$LN10@createArra:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T47015[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T47015[ebp]
	mov	DWORD PTR _result$[ebp], edx
; Line 78
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN4@createArra
; Line 79
	mov	DWORD PTR _i$39184[ebp], 0
	jmp	SHORT $LN3@createArra
$LN2@createArra:
	mov	eax, DWORD PTR _i$39184[ebp]
	add	eax, 1
	mov	DWORD PTR _i$39184[ebp], eax
$LN3@createArra:
	mov	eax, DWORD PTR _i$39184[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN4@createArra
; Line 80
	mov	eax, DWORD PTR _i$39184[ebp]
	imul	eax, 224				; 000000e0H
	add	eax, DWORD PTR _array$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$39184[ebp]
	imul	ecx, 224				; 000000e0H
	add	ecx, DWORD PTR _result$[ebp]
	call	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::Formattable::operator=
	jmp	SHORT $LN2@createArra
$LN4@createArra:
; Line 82
	mov	eax, DWORD PTR _result$[ebp]
; Line 83
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47016[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z ENDP ; icu_56::createArrayCopy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_U@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_U@YAPAXI@Z PROC					; operator new[], COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 428
	mov	DWORD PTR _q$[ebp], 0
; Line 429
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 430
	mov	eax, DWORD PTR _q$[ebp]
; Line 431
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_U@YAPAXI@Z ENDP					; operator new[]
_TEXT	ENDS
PUBLIC	??0Formattable@icu_56@@QAE@ABV01@@Z		; icu_56::Formattable::Formattable
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\fmtable.cpp
xdata$x	SEGMENT
__unwindtable$??0Formattable@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Formattable@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0Formattable@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Formattable@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Formattable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0Formattable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Formattable::Formattable, COMDAT
; _this$ = ecx
; Line 209
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Formattable@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::init
; Line 211
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::Formattable::operator=
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Formattable@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Formattable@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Formattable@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Formattable@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Formattable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Formattable::Formattable
PUBLIC	??_GCharString@icu_56@@QAEPAXI@Z		; icu_56::CharString::`scalar deleting destructor'
PUBLIC	?dispose@Formattable@icu_56@@AAEXXZ		; icu_56::Formattable::dispose
EXTRN	__imp_??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z:PROC
EXTRN	??0DigitList@icu_56@@QAE@ABV01@@Z:PROC		; icu_56::DigitList::DigitList
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z$2
__ehfuncinfo$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4Formattable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv184 = -328						; size = 4
tv175 = -328						; size = 4
tv162 = -328						; size = 4
tv128 = -328						; size = 4
tv69 = -328						; size = 4
$T47042 = -320						; size = 4
$T47043 = -308						; size = 4
$T47046 = -296						; size = 4
$T47047 = -284						; size = 4
$T47050 = -272						; size = 4
$T47051 = -260						; size = 4
$T47054 = -248						; size = 4
$T47055 = -236						; size = 4
_status$39265 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??4Formattable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Formattable::operator=, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _source$[ebp]
	je	$LN1@operator@2
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR [eax+152], edx
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv69[ebp], ecx
	cmp	DWORD PTR tv69[ebp], 6
	ja	$LN10@operator@2
	mov	edx, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN30@operator@2[edx*4]
$LN9@operator@2:
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 233
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z ; icu_56::createArrayCopy
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 234
	jmp	$LN10@operator@2
$LN8@operator@2:
; Line 237
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47043[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47043[ebp], 0
	je	SHORT $LN15@operator@2
	mov	esi, esp
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR $T47043[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T47043[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	eax, DWORD PTR $T47043[ebp]
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN16@operator@2
$LN15@operator@2:
	mov	DWORD PTR tv128[ebp], 0
$LN16@operator@2:
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T47042[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T47042[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 238
	jmp	SHORT $LN10@operator@2
$LN7@operator@2:
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	fld	QWORD PTR [ecx+8]
	fstp	QWORD PTR [eax+8]
; Line 242
	jmp	SHORT $LN10@operator@2
$LN6@operator@2:
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
; Line 247
	jmp	SHORT $LN10@operator@2
$LN5@operator@2:
; Line 250
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	fld	QWORD PTR [ecx+8]
	fstp	QWORD PTR [eax+8]
; Line 251
	jmp	SHORT $LN10@operator@2
$LN4@operator@2:
; Line 253
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?objectClone@icu_56@@YAPAVUObject@1@PBV21@@Z ; icu_56::objectClone
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN10@operator@2:
; Line 257
	mov	DWORD PTR _status$39265[ebp], 0
; Line 258
	mov	eax, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@operator@2
; Line 259
	mov	esi, esp
	push	112					; 00000070H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47047[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T47047[ebp], 0
	je	SHORT $LN17@operator@2
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR $T47047[ebp]
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN18@operator@2
$LN17@operator@2:
	mov	DWORD PTR tv162[ebp], 0
$LN18@operator@2:
	mov	edx, DWORD PTR tv162[ebp]
	mov	DWORD PTR $T47046[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T47046[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN3@operator@2:
; Line 261
	mov	eax, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN1@operator@2
; Line 262
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47051[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T47051[ebp], 0
	je	SHORT $LN19@operator@2
	mov	esi, esp
	lea	eax, DWORD PTR _status$39265[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR $T47051[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv175[ebp], eax
	jmp	SHORT $LN20@operator@2
$LN19@operator@2:
	mov	DWORD PTR tv175[ebp], 0
$LN20@operator@2:
	mov	eax, DWORD PTR tv175[ebp]
	mov	DWORD PTR $T47050[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T47050[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 263
	mov	eax, DWORD PTR _status$39265[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@2
; Line 264
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T47055[ebp], ecx
	mov	edx, DWORD PTR $T47055[ebp]
	mov	DWORD PTR $T47054[ebp], edx
	cmp	DWORD PTR $T47054[ebp], 0
	je	SHORT $LN21@operator@2
	push	1
	mov	ecx, DWORD PTR $T47054[ebp]
	call	??_GCharString@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv184[ebp], eax
	jmp	SHORT $LN22@operator@2
$LN21@operator@2:
	mov	DWORD PTR tv184[ebp], 0
$LN22@operator@2:
; Line 265
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN1@operator@2:
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@operator@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN29@operator@2:
	DD	1
	DD	$LN28@operator@2
$LN28@operator@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN26@operator@2
$LN26@operator@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
	npad	1
$LN30@operator@2:
	DD	$LN5@operator@2
	DD	$LN7@operator@2
	DD	$LN6@operator@2
	DD	$LN8@operator@2
	DD	$LN9@operator@2
	DD	$LN6@operator@2
	DD	$LN4@operator@2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47043[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T47047[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T47051[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4Formattable@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4Formattable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Formattable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?objectClone@icu_56@@YAPAVUObject@1@PBV21@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?objectClone@icu_56@@YAPAVUObject@1@PBV21@@Z PROC	; icu_56::objectClone, COMDAT
; File d:\mozilla\intl\icu\source\i18n\fmtable.cpp
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 61
	mov	eax, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?objectClone@icu_56@@YAPAVUObject@1@PBV21@@Z ENDP	; icu_56::objectClone
_TEXT	ENDS
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCharString@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharString@icu_56@@QAEPAXI@Z PROC			; icu_56::CharString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharString@icu_56@@QAEPAXI@Z ENDP			; icu_56::CharString::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv87 = -237						; size = 1
tv198 = -236						; size = 4
tv197 = -232						; size = 4
tv69 = -232						; size = 4
tv81 = -229						; size = 1
tv75 = -229						; size = 1
_equal$ = -29						; size = 1
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator==, COMDAT
; _this$ = ecx
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN18@operator@3
	mov	al, 1
	jmp	$LN19@operator@3
$LN18@operator@3:
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+152]
	cmp	edx, DWORD PTR [ecx+152]
	je	SHORT $LN17@operator@3
	xor	al, al
	jmp	$LN19@operator@3
$LN17@operator@3:
; Line 285
	mov	BYTE PTR _equal$[ebp], 1
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv69[ebp], ecx
	cmp	DWORD PTR tv69[ebp], 6
	ja	$LN15@operator@3
	mov	edx, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN27@operator@3[edx*4]
$LN14@operator@3:
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	fld	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx+8]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN21@operator@3
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN22@operator@3
$LN21@operator@3:
	mov	BYTE PTR tv75[ebp], 0
$LN22@operator@3:
	mov	dl, BYTE PTR tv75[ebp]
	mov	BYTE PTR _equal$[ebp], dl
; Line 289
	jmp	$LN15@operator@3
$LN13@operator@3:
; Line 291
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	fld	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx+8]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN23@operator@3
	mov	BYTE PTR tv81[ebp], 1
	jmp	SHORT $LN24@operator@3
$LN23@operator@3:
	mov	BYTE PTR tv81[ebp], 0
$LN24@operator@3:
	mov	dl, BYTE PTR tv81[ebp]
	mov	BYTE PTR _equal$[ebp], dl
; Line 292
	jmp	$LN15@operator@3
$LN12@operator@3:
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	DWORD PTR tv197[ebp], eax
	mov	DWORD PTR tv198[ebp], ecx
	mov	edx, DWORD PTR tv197[ebp]
	mov	eax, DWORD PTR tv198[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN25@operator@3
	mov	edx, DWORD PTR tv197[ebp]
	mov	eax, DWORD PTR tv198[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN25@operator@3
	mov	BYTE PTR tv87[ebp], 1
	jmp	SHORT $LN26@operator@3
$LN25@operator@3:
	mov	BYTE PTR tv87[ebp], 0
$LN26@operator@3:
	mov	dl, BYTE PTR tv87[ebp]
	mov	BYTE PTR _equal$[ebp], dl
; Line 296
	jmp	$LN15@operator@3
$LN11@operator@3:
; Line 298
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _equal$[ebp], al
; Line 299
	jmp	$LN15@operator@3
$LN10@operator@3:
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	je	SHORT $LN9@operator@3
; Line 302
	mov	BYTE PTR _equal$[ebp], 0
; Line 303
	jmp	$LN15@operator@3
$LN9@operator@3:
; Line 306
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@operator@3
$LN7@operator@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@operator@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jge	SHORT $LN6@operator@3
; Line 307
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _that$[ebp]
	add	eax, DWORD PTR [ecx+8]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 224				; 000000e0H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	call	??9Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator!=
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@operator@3
; Line 308
	mov	BYTE PTR _equal$[ebp], 0
; Line 309
	jmp	SHORT $LN6@operator@3
$LN5@operator@3:
; Line 311
	jmp	SHORT $LN7@operator@3
$LN6@operator@3:
; Line 312
	jmp	SHORT $LN15@operator@3
$LN4@operator@3:
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@operator@3
	mov	eax, DWORD PTR _that$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@operator@3
$LN2@operator@3:
; Line 315
	mov	BYTE PTR _equal$[ebp], 0
; Line 316
	jmp	SHORT $LN1@operator@3
$LN3@operator@3:
; Line 317
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?objectEquals@icu_56@@YACPBVUObject@1@0@Z ; icu_56::objectEquals
	add	esp, 8
	mov	BYTE PTR _equal$[ebp], al
$LN1@operator@3:
$LN15@operator@3:
; Line 323
	mov	al, BYTE PTR _equal$[ebp]
$LN19@operator@3:
; Line 324
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN27@operator@3:
	DD	$LN14@operator@3
	DD	$LN13@operator@3
	DD	$LN12@operator@3
	DD	$LN11@operator@3
	DD	$LN10@operator@3
	DD	$LN12@operator@3
	DD	$LN4@operator@3
??8Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator==
_TEXT	ENDS
EXTRN	??8Measure@icu_56@@QBECABVUObject@1@@Z:PROC	; icu_56::Measure::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?objectEquals@icu_56@@YACPBVUObject@1@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?objectEquals@icu_56@@YACPBVUObject@1@0@Z PROC		; icu_56::objectEquals, COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 55
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??8Measure@icu_56@@QBECABVUObject@1@@Z	; icu_56::Measure::operator==
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?objectEquals@icu_56@@YACPBVUObject@1@0@Z ENDP		; icu_56::objectEquals
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Formattable@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Formattable@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1Formattable@icu_56@@UAE@XZ$1
__ehfuncinfo$??1Formattable@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1Formattable@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1Formattable@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1Formattable@icu_56@@UAE@XZ PROC			; icu_56::Formattable::~Formattable, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1Formattable@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Formattable@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 330
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 331
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Formattable@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1Formattable@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1Formattable@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1Formattable@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1Formattable@icu_56@@UAE@XZ ENDP			; icu_56::Formattable::~Formattable
PUBLIC	??_GDigitList@icu_56@@QAEPAXI@Z			; icu_56::DigitList::`scalar deleting destructor'
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dispose@Formattable@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv129 = -356						; size = 4
tv160 = -352						; size = 4
tv150 = -352						; size = 4
tv138 = -352						; size = 4
tv128 = -352						; size = 4
tv78 = -352						; size = 4
tv65 = -352						; size = 4
$T47105 = -344						; size = 4
$T47106 = -332						; size = 4
$T47107 = -320						; size = 4
$T47112 = -308						; size = 4
$T47113 = -296						; size = 4
$T47116 = -284						; size = 4
$T47117 = -272						; size = 4
$T47120 = -260						; size = 4
$T47121 = -248						; size = 4
$T47101 = -236						; size = 4
$T47102 = -224						; size = 4
_stackData$ = -20					; size = 4
_this$ = -8						; size = 4
?dispose@Formattable@icu_56@@AAEXXZ PROC		; icu_56::Formattable::dispose, COMDAT
; _this$ = ecx
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 3
	je	SHORT $LN6@dispose
	cmp	DWORD PTR tv65[ebp], 4
	je	SHORT $LN5@dispose
	cmp	DWORD PTR tv65[ebp], 6
	je	$LN4@dispose
	jmp	$LN7@dispose
$LN6@dispose:
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T47102[ebp], ecx
	mov	edx, DWORD PTR $T47102[ebp]
	mov	DWORD PTR $T47101[ebp], edx
	cmp	DWORD PTR $T47101[ebp], 0
	je	SHORT $LN11@dispose
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47101[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47101[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN12@dispose
$LN11@dispose:
	mov	DWORD PTR tv78[ebp], 0
$LN12@dispose:
; Line 341
	jmp	$LN7@dispose
$LN5@dispose:
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T47107[ebp], ecx
	mov	edx, DWORD PTR $T47107[ebp]
	mov	DWORD PTR $T47106[ebp], edx
	mov	eax, DWORD PTR $T47106[ebp]
	mov	DWORD PTR $T47105[ebp], eax
	cmp	DWORD PTR $T47105[ebp], 0
	je	SHORT $LN15@dispose
	mov	ecx, DWORD PTR $T47105[ebp]
	cmp	DWORD PTR [ecx-4], 0
	je	SHORT $LN13@dispose
	mov	esi, esp
	push	3
	mov	edx, DWORD PTR $T47106[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T47106[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN14@dispose
$LN13@dispose:
	mov	eax, DWORD PTR $T47105[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	DWORD PTR tv128[ebp], 0
$LN14@dispose:
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv129[ebp], ecx
	jmp	SHORT $LN16@dispose
$LN15@dispose:
	mov	DWORD PTR tv129[ebp], 0
$LN16@dispose:
; Line 344
	jmp	SHORT $LN7@dispose
$LN4@dispose:
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T47113[ebp], ecx
	mov	edx, DWORD PTR $T47113[ebp]
	mov	DWORD PTR $T47112[ebp], edx
	cmp	DWORD PTR $T47112[ebp], 0
	je	SHORT $LN17@dispose
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47112[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47112[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN7@dispose
$LN17@dispose:
	mov	DWORD PTR tv138[ebp], 0
$LN7@dispose:
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 2
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T47117[ebp], ecx
	mov	edx, DWORD PTR $T47117[ebp]
	mov	DWORD PTR $T47116[ebp], edx
	cmp	DWORD PTR $T47116[ebp], 0
	je	SHORT $LN19@dispose
	push	1
	mov	ecx, DWORD PTR $T47116[ebp]
	call	??_GCharString@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN20@dispose
$LN19@dispose:
	mov	DWORD PTR tv150[ebp], 0
$LN20@dispose:
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 358
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _stackData$[ebp], eax
; Line 359
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _stackData$[ebp]
	je	SHORT $LN2@dispose
; Line 360
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T47121[ebp], ecx
	mov	edx, DWORD PTR $T47121[ebp]
	mov	DWORD PTR $T47120[ebp], edx
	cmp	DWORD PTR $T47120[ebp], 0
	je	SHORT $LN21@dispose
	push	1
	mov	ecx, DWORD PTR $T47120[ebp]
	call	??_GDigitList@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN22@dispose
$LN21@dispose:
	mov	DWORD PTR tv160[ebp], 0
$LN22@dispose:
; Line 361
	jmp	SHORT $LN1@dispose
$LN2@dispose:
; Line 362
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	??_GDigitList@icu_56@@QAEPAXI@Z
$LN1@dispose:
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?dispose@Formattable@icu_56@@AAEXXZ ENDP		; icu_56::Formattable::dispose
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
EXTRN	??1DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::~DigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDigitList@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDigitList@icu_56@@QAEPAXI@Z PROC			; icu_56::DigitList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDigitList@icu_56@@QAEPAXI@Z ENDP			; icu_56::DigitList::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?clone@Formattable@icu_56@@QBEPAV12@XZ		; icu_56::Formattable::clone
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\fmtable.cpp
xdata$x	SEGMENT
__unwindtable$?clone@Formattable@icu_56@@QBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@Formattable@icu_56@@QBEPAV12@XZ$0
__ehfuncinfo$?clone@Formattable@icu_56@@QBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@Formattable@icu_56@@QBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@Formattable@icu_56@@QBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T47130 = -236						; size = 4
$T47131 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@Formattable@icu_56@@QBEPAV12@XZ PROC		; icu_56::Formattable::clone, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@Formattable@icu_56@@QBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 369
	mov	esi, esp
	push	224					; 000000e0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47131[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47131[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47131[ebp]
	call	??0Formattable@icu_56@@QAE@ABV01@@Z	; icu_56::Formattable::Formattable
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T47130[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T47130[ebp]
; Line 370
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@Formattable@icu_56@@QBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47131[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@Formattable@icu_56@@QBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@Formattable@icu_56@@QBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@Formattable@icu_56@@QBEPAV12@XZ ENDP		; icu_56::Formattable::clone
PUBLIC	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ	; icu_56::Formattable::getType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ PROC	; icu_56::Formattable::getType, COMDAT
; _this$ = ecx
; Line 376
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+152]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ENDP	; icu_56::Formattable::getType
_TEXT	ENDS
PUBLIC	?isNumeric@Formattable@icu_56@@QBECXZ		; icu_56::Formattable::isNumeric
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNumeric@Formattable@icu_56@@QBECXZ
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
?isNumeric@Formattable@icu_56@@QBECXZ PROC		; icu_56::Formattable::isNumeric, COMDAT
; _this$ = ecx
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	jle	SHORT $LN1@isNumeric
	cmp	DWORD PTR tv65[ebp], 2
	jle	SHORT $LN2@isNumeric
	cmp	DWORD PTR tv65[ebp], 5
	je	SHORT $LN2@isNumeric
	jmp	SHORT $LN1@isNumeric
$LN2@isNumeric:
; Line 386
	mov	al, 1
	jmp	SHORT $LN5@isNumeric
$LN1@isNumeric:
; Line 388
	xor	al, al
$LN5@isNumeric:
; Line 390
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNumeric@Formattable@icu_56@@QBECXZ ENDP		; icu_56::Formattable::isNumeric
_TEXT	ENDS
PUBLIC	__real@c1e0000000000000
PUBLIC	__real@41dfffffffc00000
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@c1e0000000000000
CONST	SEGMENT
__real@c1e0000000000000 DQ 0c1e0000000000000r	; -2.14748e+009
CONST	ENDS
;	COMDAT __real@41dfffffffc00000
CONST	SEGMENT
__real@41dfffffffc00000 DQ 041dfffffffc00000r	; 2.14748e+009
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv164 = -208						; size = 4
tv156 = -208						; size = 4
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 397
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@getLong
; Line 398
	xor	eax, eax
	jmp	$LN16@getLong
$LN18@getLong:
; Line 401
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 1
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 5
	ja	$LN2@getLong
	mov	eax, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN23@getLong[eax*4]
$LN15@getLong:
; Line 403
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	$LN16@getLong
$LN14@getLong:
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jl	SHORT $LN13@getLong
	jg	SHORT $LN21@getLong
	mov	edx, DWORD PTR tv156[ebp]
	cmp	DWORD PTR [edx+8], 2147483647		; 7fffffffH
	jbe	SHORT $LN13@getLong
$LN21@getLong:
; Line 406
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 407
	mov	eax, 2147483647				; 7fffffffH
	jmp	$LN16@getLong
	jmp	SHORT $LN10@getLong
$LN13@getLong:
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	cmp	DWORD PTR [ecx+12], -1
	jg	SHORT $LN11@getLong
	jl	SHORT $LN22@getLong
	mov	edx, DWORD PTR tv164[ebp]
	cmp	DWORD PTR [edx+8], -2147483648		; 80000000H
	jae	SHORT $LN11@getLong
$LN22@getLong:
; Line 409
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 410
	mov	eax, -2147483648			; 80000000H
	jmp	$LN16@getLong
; Line 411
	jmp	SHORT $LN10@getLong
$LN11@getLong:
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	$LN16@getLong
$LN10@getLong:
; Line 415
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@41dfffffffc00000
	fcomp	QWORD PTR [eax+8]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN8@getLong
; Line 416
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 417
	mov	eax, 2147483647				; 7fffffffH
	jmp	$LN16@getLong
	jmp	SHORT $LN5@getLong
$LN8@getLong:
; Line 418
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@c1e0000000000000
	fcomp	QWORD PTR [eax+8]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN6@getLong
; Line 419
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 420
	mov	eax, -2147483648			; 80000000H
	jmp	SHORT $LN16@getLong
; Line 421
	jmp	SHORT $LN5@getLong
$LN6@getLong:
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	call	__ftol2_sse
	jmp	SHORT $LN16@getLong
$LN5@getLong:
; Line 425
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@getLong
; Line 426
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 427
	xor	eax, eax
	jmp	SHORT $LN16@getLong
$LN3@getLong:
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?instanceOfMeasure@icu_56@@YACPBVUObject@1@@Z ; icu_56::instanceOfMeasure
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getLong
; Line 432
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
	mov	ecx, eax
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
	jmp	SHORT $LN16@getLong
$LN2@getLong:
; Line 435
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 436
	xor	eax, eax
$LN16@getLong:
; Line 438
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN23@getLong:
	DD	$LN10@getLong
	DD	$LN15@getLong
	DD	$LN2@getLong
	DD	$LN2@getLong
	DD	$LN14@getLong
	DD	$LN5@getLong
?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	??_R0?AVMeasure@icu_56@@@8			; icu_56::Measure `RTTI Type Descriptor'
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVMeasure@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasure@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Measure `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasure@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?instanceOfMeasure@icu_56@@YACPBVUObject@1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?instanceOfMeasure@icu_56@@YACPBVUObject@1@@Z PROC	; icu_56::instanceOfMeasure, COMDAT
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	push	0
	push	OFFSET ??_R0?AVMeasure@icu_56@@@8
	push	OFFSET ??_R0?AVUObject@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	test	eax, eax
	setne	al
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?instanceOfMeasure@icu_56@@YACPBVUObject@1@@Z ENDP	; icu_56::instanceOfMeasure
_TEXT	ENDS
PUBLIC	__real@4340000000000000
PUBLIC	__real@c3e0000000000000
PUBLIC	__real@43e0000000000000
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JAAW4UErrorCode@@@Z ; icu_56::Formattable::getInt64
EXTRN	?getInt64@DigitList@icu_56@@QAE_JXZ:PROC	; icu_56::DigitList::getInt64
EXTRN	_fabs:PROC
EXTRN	__ftol2:PROC
;	COMDAT __real@4340000000000000
CONST	SEGMENT
__real@4340000000000000 DQ 04340000000000000r	; 9.0072e+015
CONST	ENDS
;	COMDAT __real@c3e0000000000000
CONST	SEGMENT
__real@c3e0000000000000 DQ 0c3e0000000000000r	; -9.22337e+018
CONST	ENDS
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+018
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv92 = -228						; size = 8
tv69 = -224						; size = 4
_val$39412 = -24					; size = 8
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 449
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@getInt64
; Line 451
	xor	eax, eax
	xor	edx, edx
	jmp	$LN15@getInt64
$LN17@getInt64:
; Line 454
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 1
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 5
	ja	$LN2@getInt64
	mov	eax, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN22@getInt64[eax*4]
$LN14@getInt64:
; Line 457
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	jmp	$LN15@getInt64
$LN13@getInt64:
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@43e0000000000000
	fcomp	QWORD PTR [eax+8]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN12@getInt64
; Line 460
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 461
	or	eax, -1
	mov	edx, 2147483647				; 7fffffffH
	jmp	$LN15@getInt64
	jmp	$LN5@getInt64
$LN12@getInt64:
; Line 462
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@c3e0000000000000
	fcomp	QWORD PTR [eax+8]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN10@getInt64
; Line 463
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 464
	xor	eax, eax
	mov	edx, -2147483648			; 80000000H
	jmp	$LN15@getInt64
	jmp	$LN5@getInt64
$LN10@getInt64:
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+8]
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	fcomp	QWORD PTR __real@4340000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN8@getInt64
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN8@getInt64
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?getInt64@DigitList@icu_56@@QAE_JXZ	; icu_56::DigitList::getInt64
	mov	DWORD PTR _val$39412[ebp], eax
	mov	DWORD PTR _val$39412[ebp+4], edx
; Line 467
	mov	eax, DWORD PTR _val$39412[ebp]
	or	eax, DWORD PTR _val$39412[ebp+4]
	je	SHORT $LN7@getInt64
; Line 468
	mov	eax, DWORD PTR _val$39412[ebp]
	mov	edx, DWORD PTR _val$39412[ebp+4]
	jmp	$LN15@getInt64
; Line 469
	jmp	SHORT $LN6@getInt64
$LN7@getInt64:
; Line 470
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 471
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fcomp	QWORD PTR [eax+8]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN20@getInt64
	mov	DWORD PTR tv92[ebp], -1
	mov	DWORD PTR tv92[ebp+4], 2147483647	; 7fffffffH
	jmp	SHORT $LN21@getInt64
$LN20@getInt64:
	mov	DWORD PTR tv92[ebp], 0
	mov	DWORD PTR tv92[ebp+4], -2147483648	; 80000000H
$LN21@getInt64:
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR tv92[ebp+4]
	jmp	SHORT $LN15@getInt64
$LN6@getInt64:
; Line 473
	jmp	SHORT $LN5@getInt64
$LN8@getInt64:
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	call	__ftol2
	jmp	SHORT $LN15@getInt64
$LN5@getInt64:
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@getInt64
; Line 478
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 479
	xor	eax, eax
	xor	edx, edx
	jmp	SHORT $LN15@getInt64
$LN3@getInt64:
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?instanceOfMeasure@icu_56@@YACPBVUObject@1@@Z ; icu_56::instanceOfMeasure
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getInt64
; Line 483
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
	mov	ecx, eax
	call	?getInt64@Formattable@icu_56@@QBE_JAAW4UErrorCode@@@Z ; icu_56::Formattable::getInt64
	jmp	SHORT $LN15@getInt64
$LN2@getInt64:
; Line 486
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 487
	xor	eax, eax
	xor	edx, edx
$LN15@getInt64:
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN22@getInt64:
	DD	$LN13@getInt64
	DD	$LN14@getInt64
	DD	$LN2@getInt64
	DD	$LN2@getInt64
	DD	$LN14@getInt64
	DD	$LN5@getInt64
?getInt64@Formattable@icu_56@@QBE_JAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 495
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@getDouble
; Line 496
	fldz
	jmp	$LN7@getDouble
$LN9@getDouble:
; Line 499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 1
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 5
	ja	SHORT $LN2@getDouble
	mov	eax, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN12@getDouble[eax*4]
$LN6@getDouble:
; Line 502
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+8]
	jmp	SHORT $LN7@getDouble
$LN5@getDouble:
; Line 504
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	jmp	SHORT $LN7@getDouble
$LN4@getDouble:
; Line 506
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@getDouble
; Line 507
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 508
	fldz
	jmp	SHORT $LN7@getDouble
$LN3@getDouble:
; Line 511
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?instanceOfMeasure@icu_56@@YACPBVUObject@1@@Z ; icu_56::instanceOfMeasure
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getDouble
; Line 513
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
	mov	ecx, eax
	call	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDouble
	jmp	SHORT $LN7@getDouble
$LN2@getDouble:
; Line 516
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 517
	fldz
$LN7@getDouble:
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@getDouble:
	DD	$LN5@getDouble
	DD	$LN6@getDouble
	DD	$LN2@getDouble
	DD	$LN2@getDouble
	DD	$LN6@getDouble
	DD	$LN4@getDouble
?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ ; icu_56::Formattable::getObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ PROC	; icu_56::Formattable::getObject, COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 6
	jne	SHORT $LN3@getObject
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@getObject
$LN3@getObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@getObject:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ ENDP	; icu_56::Formattable::getObject
_TEXT	ENDS
PUBLIC	?setDouble@Formattable@icu_56@@QAEXN@Z		; icu_56::Formattable::setDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDouble@Formattable@icu_56@@QAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?setDouble@Formattable@icu_56@@QAEXN@Z PROC		; icu_56::Formattable::setDouble, COMDAT
; _this$ = ecx
; Line 531
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 532
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 1
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+8]
; Line 535
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setDouble@Formattable@icu_56@@QAEXN@Z ENDP		; icu_56::Formattable::setDouble
_TEXT	ENDS
PUBLIC	?setLong@Formattable@icu_56@@QAEXH@Z		; icu_56::Formattable::setLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLong@Formattable@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_l$ = 8							; size = 4
?setLong@Formattable@icu_56@@QAEXH@Z PROC		; icu_56::Formattable::setLong, COMDAT
; _this$ = ecx
; Line 542
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 543
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 2
; Line 545
	mov	eax, DWORD PTR _l$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx
; Line 546
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLong@Formattable@icu_56@@QAEXH@Z ENDP		; icu_56::Formattable::setLong
_TEXT	ENDS
PUBLIC	?setInt64@Formattable@icu_56@@QAEX_J@Z		; icu_56::Formattable::setInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setInt64@Formattable@icu_56@@QAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ll$ = 8						; size = 8
?setInt64@Formattable@icu_56@@QAEX_J@Z PROC		; icu_56::Formattable::setInt64, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 5
; Line 556
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ll$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _ll$[ebp+4]
	mov	DWORD PTR [eax+12], edx
; Line 557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setInt64@Formattable@icu_56@@QAEX_J@Z ENDP		; icu_56::Formattable::setInt64
_TEXT	ENDS
PUBLIC	?setDate@Formattable@icu_56@@QAEXN@Z		; icu_56::Formattable::setDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDate@Formattable@icu_56@@QAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?setDate@Formattable@icu_56@@QAEXN@Z PROC		; icu_56::Formattable::setDate, COMDAT
; _this$ = ecx
; Line 564
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 565
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0
; Line 567
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+8]
; Line 568
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setDate@Formattable@icu_56@@QAEXN@Z ENDP		; icu_56::Formattable::setDate
_TEXT	ENDS
PUBLIC	?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::Formattable::setString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z$0
__ehfuncinfo$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T47187 = -236						; size = 4
$T47188 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_stringToCopy$ = 8					; size = 4
?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::Formattable::setString, COMDAT
; _this$ = ecx
; Line 575
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 576
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 577
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 3
; Line 578
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47188[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47188[ebp], 0
	je	SHORT $LN3@setString
	mov	esi, esp
	mov	eax, DWORD PTR _stringToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47188[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T47188[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T47188[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@setString
$LN3@setString:
	mov	DWORD PTR tv74[ebp], 0
$LN4@setString:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T47187[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T47187[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 579
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47188[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::Formattable::setString
PUBLIC	?setArray@Formattable@icu_56@@QAEXPBV12@H@Z	; icu_56::Formattable::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@Formattable@icu_56@@QAEXPBV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_count$ = 12						; size = 4
?setArray@Formattable@icu_56@@QAEXPBV12@H@Z PROC	; icu_56::Formattable::setArray, COMDAT
; _this$ = ecx
; Line 586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 587
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 4
; Line 589
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _array$[ebp]
	push	ecx
	call	?createArrayCopy@icu_56@@YAPAVFormattable@1@PBV21@H@Z ; icu_56::createArrayCopy
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 590
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 591
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setArray@Formattable@icu_56@@QAEXPBV12@H@Z ENDP	; icu_56::Formattable::setArray
_TEXT	ENDS
PUBLIC	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ; icu_56::Formattable::adoptString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_stringToAdopt$ = 8					; size = 4
?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z PROC ; icu_56::Formattable::adoptString, COMDAT
; _this$ = ecx
; Line 598
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 599
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 600
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 3
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stringToAdopt$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 602
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ENDP ; icu_56::Formattable::adoptString
_TEXT	ENDS
PUBLIC	?adoptArray@Formattable@icu_56@@QAEXPAV12@H@Z	; icu_56::Formattable::adoptArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptArray@Formattable@icu_56@@QAEXPAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_count$ = 12						; size = 4
?adoptArray@Formattable@icu_56@@QAEXPAV12@H@Z PROC	; icu_56::Formattable::adoptArray, COMDAT
; _this$ = ecx
; Line 609
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 610
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 4
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 613
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 614
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?adoptArray@Formattable@icu_56@@QAEXPAV12@H@Z ENDP	; icu_56::Formattable::adoptArray
_TEXT	ENDS
PUBLIC	?adoptObject@Formattable@icu_56@@QAEXPAVUObject@2@@Z ; icu_56::Formattable::adoptObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptObject@Formattable@icu_56@@QAEXPAVUObject@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_objectToAdopt$ = 8					; size = 4
?adoptObject@Formattable@icu_56@@QAEXPAVUObject@2@@Z PROC ; icu_56::Formattable::adoptObject, COMDAT
; _this$ = ecx
; Line 617
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 619
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 6
; Line 620
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _objectToAdopt$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 621
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptObject@Formattable@icu_56@@QAEXPAVUObject@2@@Z ENDP ; icu_56::Formattable::adoptObject
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
_status$ = 12						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 626
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 3
	je	SHORT $LN4@getString
; Line 628
	push	3
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 629
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 630
	jmp	SHORT $LN3@getString
$LN4@getString:
; Line 631
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@getString
; Line 632
	push	7
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 633
	jmp	SHORT $LN3@getString
$LN2@getString:
; Line 634
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getString:
; Line 637
	mov	eax, DWORD PTR _result$[ebp]
; Line 638
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z
_TEXT	SEGMENT
_ec$ = 8						; size = 4
_err$ = 12						; size = 4
?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z PROC	; icu_56::setError, COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 91
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@setError
; Line 92
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@setError:
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ENDP	; icu_56::setError
_TEXT	ENDS
PUBLIC	?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ ; icu_56::Formattable::getBogus
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 643
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 3
	je	SHORT $LN2@getString@2
; Line 645
	push	3
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 646
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ ; icu_56::Formattable::getBogus
	jmp	SHORT $LN3@getString@2
$LN2@getString@2:
; Line 648
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN1@getString@2
; Line 649
	push	7
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ ; icu_56::Formattable::getBogus
	jmp	SHORT $LN3@getString@2
$LN1@getString@2:
; Line 652
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
$LN3@getString@2:
; Line 653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 658
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 659
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 3
	je	SHORT $LN2@getString@3
; Line 660
	push	3
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 661
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ ; icu_56::Formattable::getBogus
	jmp	SHORT $LN3@getString@3
$LN2@getString@3:
; Line 663
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN1@getString@3
; Line 664
	push	7
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 665
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ ; icu_56::Formattable::getBogus
	jmp	SHORT $LN3@getString@3
$LN1@getString@3:
; Line 667
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
$LN3@getString@3:
; Line 668
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAHAAW4UErrorCode@@@Z ; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
_status$ = 12						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAHAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 673
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 4
	je	SHORT $LN1@getArray
; Line 675
	push	3
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 676
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax], 0
; Line 677
	xor	eax, eax
	jmp	SHORT $LN2@getArray
$LN1@getArray:
; Line 679
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
; Line 680
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
$LN2@getArray:
; Line 681
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getArray@Formattable@icu_56@@QBEPBV12@AAHAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getBogus, COMDAT
; _this$ = ecx
; Line 688
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 689
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
; Line 690
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBogus@Formattable@icu_56@@ABEPAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getBogus
_TEXT	ENDS
PUBLIC	?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::internalGetCharString
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?getDecimalNumber@Formattable@icu_56@@QAE?AVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::getDecimalNumber
EXTRN	__imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDecimalNumber@Formattable@icu_56@@QAE?AVStringPiece@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_decimalStr$ = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_status$ = 12						; size = 4
?getDecimalNumber@Formattable@icu_56@@QAE?AVStringPiece@2@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDecimalNumber, COMDAT
; _this$ = ecx
; Line 694
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 695
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getDecimal
; Line 696
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@getDecimal
$LN4@getDecimal:
; Line 698
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@getDecimal
; Line 699
	mov	esi, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@getDecimal
$LN3@getDecimal:
; Line 702
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::internalGetCharString
	mov	DWORD PTR _decimalStr$[ebp], eax
; Line 703
	cmp	DWORD PTR _decimalStr$[ebp], 0
	jne	SHORT $LN2@getDecimal
; Line 704
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@getDecimal
; Line 705
	jmp	SHORT $LN5@getDecimal
$LN2@getDecimal:
; Line 706
	mov	esi, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _decimalStr$[ebp]
	call	DWORD PTR __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@getDecimal:
; Line 708
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getDecimalNumber@Formattable@icu_56@@QAE?AVStringPiece@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDecimalNumber
_TEXT	ENDS
EXTRN	?getDecimal@DigitList@icu_56@@QAEXAAVCharString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitList::getDecimal
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
EXTRN	?set@DigitList@icu_56@@QAEX_J@Z:PROC		; icu_56::DigitList::set
EXTRN	?set@DigitList@icu_56@@QAEXH@Z:PROC		; icu_56::DigitList::set
EXTRN	?set@DigitList@icu_56@@QAEXN@Z:PROC		; icu_56::DigitList::set
EXTRN	??0DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::DigitList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv138 = -268						; size = 4
tv79 = -268						; size = 4
tv76 = -268						; size = 4
$T47222 = -260						; size = 4
$T47223 = -248						; size = 4
$T47226 = -236						; size = 4
$T47227 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::internalGetCharString, COMDAT
; _this$ = ecx
; Line 710
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 711
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN10@internalGe
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN6@internalGe
; Line 718
	mov	esi, esp
	push	112					; 00000070H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47223[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47223[ebp], 0
	je	SHORT $LN13@internalGe
	mov	ecx, DWORD PTR $T47223[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN14@internalGe
$LN13@internalGe:
	mov	DWORD PTR tv76[ebp], 0
$LN14@internalGe:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T47222[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T47222[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 719
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN8@internalGe
; Line 720
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 721
	xor	eax, eax
	jmp	$LN11@internalGe
$LN8@internalGe:
; Line 724
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 1
	je	SHORT $LN5@internalGe
	cmp	DWORD PTR tv79[ebp], 2
	je	SHORT $LN4@internalGe
	cmp	DWORD PTR tv79[ebp], 5
	je	SHORT $LN3@internalGe
	jmp	SHORT $LN2@internalGe
$LN5@internalGe:
; Line 726
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getDouble@Formattable@icu_56@@QBENXZ	; icu_56::Formattable::getDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
; Line 727
	jmp	SHORT $LN6@internalGe
$LN4@internalGe:
; Line 729
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHXZ	; icu_56::Formattable::getLong
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 730
	jmp	SHORT $LN6@internalGe
$LN3@internalGe:
; Line 732
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getInt64@Formattable@icu_56@@QBE_JXZ	; icu_56::Formattable::getInt64
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?set@DigitList@icu_56@@QAEX_J@Z		; icu_56::DigitList::set
; Line 733
	jmp	SHORT $LN6@internalGe
$LN2@internalGe:
; Line 736
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
; Line 737
	xor	eax, eax
	jmp	$LN11@internalGe
$LN6@internalGe:
; Line 741
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47227[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T47227[ebp], 0
	je	SHORT $LN15@internalGe
	mov	esi, esp
	mov	ecx, DWORD PTR $T47227[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN16@internalGe
$LN15@internalGe:
	mov	DWORD PTR tv138[ebp], 0
$LN16@internalGe:
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T47226[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T47226[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 742
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@internalGe
; Line 743
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 744
	xor	eax, eax
	jmp	SHORT $LN11@internalGe
$LN1@internalGe:
; Line 746
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?getDecimal@DigitList@icu_56@@QAEXAAVCharString@2@AAW4UErrorCode@@@Z ; icu_56::DigitList::getDecimal
$LN10@internalGe:
; Line 748
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN11@internalGe:
; Line 749
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47223[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T47227[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::internalGetCharString
PUBLIC	?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ ; icu_56::Formattable::getInternalDigitList
EXTRN	?clear@DigitList@icu_56@@QAEXXZ:PROC		; icu_56::DigitList::clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ$0
__ehfuncinfo$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ
_TEXT	SEGMENT
tv85 = -280						; size = 4
tv72 = -280						; size = 4
$T47240 = -272						; size = 4
$T47241 = -260						; size = 4
$T47244 = -248						; size = 4
$T47245 = -236						; size = 4
_stackData$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getInternalDigitList, COMDAT
; _this$ = ecx
; Line 753
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 754
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _stackData$[ebp], eax
; Line 755
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _stackData$[ebp]
	je	$LN2@getInterna
; Line 756
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T47241[ebp], ecx
	mov	edx, DWORD PTR $T47241[ebp]
	mov	DWORD PTR $T47240[ebp], edx
	cmp	DWORD PTR $T47240[ebp], 0
	je	SHORT $LN5@getInterna
	push	1
	mov	ecx, DWORD PTR $T47240[ebp]
	call	??_GDigitList@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN6@getInterna
$LN5@getInterna:
	mov	DWORD PTR tv72[ebp], 0
$LN6@getInterna:
; Line 757
	push	0
	mov	eax, DWORD PTR _stackData$[ebp]
	push	eax
	push	112					; 00000070H
	call	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ; icu_56::DigitList::operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T47245[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47245[ebp], 0
	je	SHORT $LN7@getInterna
	mov	ecx, DWORD PTR $T47245[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN8@getInterna
$LN7@getInterna:
	mov	DWORD PTR tv85[ebp], 0
$LN8@getInterna:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T47244[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T47244[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 758
	jmp	SHORT $LN1@getInterna
$LN2@getInterna:
; Line 759
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?clear@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::clear
$LN1@getInterna:
; Line 761
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 762
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ$0:
	push	0
	mov	eax, DWORD PTR _stackData$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47245[ebp]
	push	ecx
	call	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ; icu_56::DigitList::operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getInternalDigitList
PUBLIC	?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z ; icu_56::Formattable::adoptDigitList
EXTRN	?getDouble@DigitList@icu_56@@QBENXZ:PROC	; icu_56::DigitList::getDouble
EXTRN	?fitsIntoInt64@DigitList@icu_56@@QAECC@Z:PROC	; icu_56::DigitList::fitsIntoInt64
EXTRN	?getLong@DigitList@icu_56@@QAEHXZ:PROC		; icu_56::DigitList::getLong
EXTRN	?fitsIntoLong@DigitList@icu_56@@QAECC@Z:PROC	; icu_56::DigitList::fitsIntoLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dl$ = 8						; size = 4
?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z PROC ; icu_56::Formattable::adoptDigitList, COMDAT
; _this$ = ecx
; Line 766
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 767
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _dl$[ebp]
	jne	SHORT $LN6@adoptDigit
; Line 768
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN6@adoptDigit:
; Line 770
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 772
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dl$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 774
	cmp	DWORD PTR _dl$[ebp], 0
	jne	SHORT $LN5@adoptDigit
; Line 775
	jmp	$LN7@adoptDigit
$LN5@adoptDigit:
; Line 781
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?fitsIntoLong@DigitList@icu_56@@QAECC@Z	; icu_56::DigitList::fitsIntoLong
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@adoptDigit
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 2
; Line 783
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?getLong@DigitList@icu_56@@QAEHXZ	; icu_56::DigitList::getLong
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx
	jmp	SHORT $LN1@adoptDigit
$LN4@adoptDigit:
; Line 784
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?fitsIntoInt64@DigitList@icu_56@@QAECC@Z ; icu_56::DigitList::fitsIntoInt64
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@adoptDigit
; Line 785
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 5
; Line 786
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?getInt64@DigitList@icu_56@@QAE_JXZ	; icu_56::DigitList::getInt64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx
; Line 787
	jmp	SHORT $LN1@adoptDigit
$LN2@adoptDigit:
; Line 788
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 1
; Line 789
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?getDouble@DigitList@icu_56@@QBENXZ	; icu_56::DigitList::getDouble
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [ecx+8]
$LN1@adoptDigit:
$LN7@adoptDigit:
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z ENDP ; icu_56::Formattable::adoptDigitList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z:PROC ; icu_56::DigitList::set
EXTRN	__imp_??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv135 = -368						; size = 4
tv139 = -364						; size = 4
tv130 = -364						; size = 4
tv76 = -364						; size = 4
$T47260 = -356						; size = 4
$T47261 = -344						; size = 4
$T47264 = -332						; size = 8
$T47265 = -316						; size = 4
$T47266 = -304						; size = 4
$T39591 = -292						; size = 56
_dnum$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_numberString$ = 8					; size = 4
_status$ = 12						; size = 4
?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z PROC ; icu_56::Formattable::setDecimalNumber, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 797
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@setDecimal
; Line 798
	jmp	$LN4@setDecimal
$LN3@setDecimal:
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@Formattable@icu_56@@AAEXXZ	; icu_56::Formattable::dispose
; Line 806
	mov	esi, esp
	push	112					; 00000070H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47261[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47261[ebp], 0
	je	SHORT $LN6@setDecimal
	mov	ecx, DWORD PTR $T47261[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN7@setDecimal
$LN6@setDecimal:
	mov	DWORD PTR tv76[ebp], 0
$LN7@setDecimal:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T47260[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T47260[ebp]
	mov	DWORD PTR _dnum$[ebp], ecx
; Line 807
	cmp	DWORD PTR _dnum$[ebp], 0
	jne	SHORT $LN2@setDecimal
; Line 808
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 809
	jmp	$LN4@setDecimal
$LN2@setDecimal:
; Line 811
	push	0
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR $T47264[ebp]
	push	ecx
	mov	edi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _numberString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T39591[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv135[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv135[ebp]
	call	DWORD PTR __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _dnum$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39591[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 812
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@setDecimal
; Line 813
	mov	eax, DWORD PTR _dnum$[ebp]
	mov	DWORD PTR $T47266[ebp], eax
	mov	ecx, DWORD PTR $T47266[ebp]
	mov	DWORD PTR $T47265[ebp], ecx
	cmp	DWORD PTR $T47265[ebp], 0
	je	SHORT $LN8@setDecimal
	push	1
	mov	ecx, DWORD PTR $T47265[ebp]
	call	??_GDigitList@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN9@setDecimal
$LN8@setDecimal:
	mov	DWORD PTR tv130[ebp], 0
$LN9@setDecimal:
; Line 814
	jmp	SHORT $LN4@setDecimal
$LN1@setDecimal:
; Line 816
	mov	eax, DWORD PTR _dnum$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z ; icu_56::Formattable::adoptDigitList
$LN4@setDecimal:
; Line 820
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47261[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39591[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-372]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setDecimalNumber@Formattable@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::setDecimalNumber
PUBLIC	_ufmt_open_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_open_56
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T47279 = -224						; size = 4
$T47280 = -212						; size = 4
_fmt$ = -8						; size = 4
_status$ = 8						; size = 4
_ufmt_open_56 PROC					; COMDAT
; Line 903
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 904
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ufmt_open_
; Line 905
	xor	eax, eax
	jmp	SHORT $LN3@ufmt_open_
$LN2@ufmt_open_:
; Line 907
	mov	esi, esp
	push	224					; 000000e0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47280[ebp], eax
	cmp	DWORD PTR $T47280[ebp], 0
	je	SHORT $LN5@ufmt_open_
	mov	ecx, DWORD PTR $T47280[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@ufmt_open_
$LN5@ufmt_open_:
	mov	DWORD PTR tv75[ebp], 0
$LN6@ufmt_open_:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T47279[ebp], eax
	mov	ecx, DWORD PTR $T47279[ebp]
	call	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ; icu_56::Formattable::toUFormattable
	mov	DWORD PTR _fmt$[ebp], eax
; Line 909
	cmp	DWORD PTR _fmt$[ebp], 0
	jne	SHORT $LN1@ufmt_open_
; Line 910
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@ufmt_open_:
; Line 912
	mov	eax, DWORD PTR _fmt$[ebp]
$LN3@ufmt_open_:
; Line 913
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_open_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_close_56
_TEXT	SEGMENT
tv76 = -232						; size = 4
$T47285 = -224						; size = 4
$T47286 = -212						; size = 4
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_ufmt_close_56 PROC					; COMDAT
; Line 916
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 917
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 919
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR $T47286[ebp], eax
	mov	ecx, DWORD PTR $T47286[ebp]
	mov	DWORD PTR $T47285[ebp], ecx
	cmp	DWORD PTR $T47285[ebp], 0
	je	SHORT $LN3@ufmt_close
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T47285[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T47285[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@ufmt_close
$LN3@ufmt_close:
	mov	DWORD PTR tv76[ebp], 0
$LN1@ufmt_close:
; Line 920
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_close_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getType_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getType_56
_TEXT	SEGMENT
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getType_56 PROC					; COMDAT
; Line 923
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 924
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ufmt_getTy
; Line 925
	mov	eax, 7
	jmp	SHORT $LN2@ufmt_getTy
$LN1@ufmt_getTy:
; Line 927
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 928
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ; icu_56::Formattable::getType
$LN2@ufmt_getTy:
; Line 929
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getType_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_isNumeric_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_isNumeric_56
_TEXT	SEGMENT
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_ufmt_isNumeric_56 PROC					; COMDAT
; Line 933
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 934
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 935
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?isNumeric@Formattable@icu_56@@QBECXZ	; icu_56::Formattable::isNumeric
; Line 936
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_isNumeric_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getDate_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getDate_56
_TEXT	SEGMENT
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getDate_56 PROC					; COMDAT
; Line 939
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 940
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 942
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
; Line 943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getDate_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getDouble_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getDouble_56
_TEXT	SEGMENT
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getDouble_56 PROC					; COMDAT
; Line 946
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 947
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 949
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDouble
; Line 950
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getDouble_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getLong_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getLong_56
_TEXT	SEGMENT
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getLong_56 PROC					; COMDAT
; Line 953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 954
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 956
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 957
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getLong_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getObject_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getObject_56
_TEXT	SEGMENT
_ret$ = -20						; size = 4
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getObject_56 PROC					; COMDAT
; Line 961
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 962
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 964
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ ; icu_56::Formattable::getObject
	mov	DWORD PTR _ret$[ebp], eax
; Line 967
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN1@ufmt_getOb
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ; icu_56::Formattable::getType
	cmp	eax, 6
	je	SHORT $LN1@ufmt_getOb
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ufmt_getOb
; Line 968
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@ufmt_getOb:
; Line 970
	mov	eax, DWORD PTR _ret$[ebp]
; Line 971
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getObject_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getUChars_56
EXTRN	__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getUChars_56
_TEXT	SEGMENT
_str$ = -20						; size = 4
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_len$ = 12						; size = 4
_status$ = 16						; size = 4
_ufmt_getUChars_56 PROC					; COMDAT
; Line 974
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 975
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 978
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ; icu_56::Formattable::getType
	cmp	eax, 3
	je	SHORT $LN3@ufmt_getUC
; Line 979
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ufmt_getUC
; Line 980
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN2@ufmt_getUC:
; Line 982
	xor	eax, eax
	jmp	SHORT $LN4@ufmt_getUC
$LN3@ufmt_getUC:
; Line 986
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::getString
	mov	DWORD PTR _str$[ebp], eax
; Line 987
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ufmt_getUC
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN1@ufmt_getUC
; Line 988
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@ufmt_getUC:
; Line 990
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@ufmt_getUC:
; Line 991
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getUChars_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getArrayLength_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getArrayLength_56
_TEXT	SEGMENT
_count$ = -20						; size = 4
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getArrayLength_56 PROC				; COMDAT
; Line 994
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 995
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 998
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getArray@Formattable@icu_56@@QBEPBV12@AAHAAW4UErrorCode@@@Z ; icu_56::Formattable::getArray
; Line 999
	mov	eax, DWORD PTR _count$[ebp]
; Line 1000
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ufmt_getAr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@ufmt_getAr:
	DD	1
	DD	$LN4@ufmt_getAr
$LN4@ufmt_getAr:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@ufmt_getAr
$LN3@ufmt_getAr:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_ufmt_getArrayLength_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getArrayItemByIndex_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getArrayItemByIndex_56
_TEXT	SEGMENT
_count$ = -20						; size = 4
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_n$ = 12						; size = 4
_status$ = 16						; size = 4
_ufmt_getArrayItemByIndex_56 PROC			; COMDAT
; Line 1003
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1004
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 1006
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getArray@Formattable@icu_56@@QBEPBV12@AAHAAW4UErrorCode@@@Z ; icu_56::Formattable::getArray
; Line 1007
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ufmt_getAr@2
; Line 1008
	xor	eax, eax
	jmp	SHORT $LN6@ufmt_getAr@2
	jmp	SHORT $LN6@ufmt_getAr@2
$LN5@ufmt_getAr@2:
; Line 1009
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN2@ufmt_getAr@2
	mov	eax, DWORD PTR _n$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jl	SHORT $LN3@ufmt_getAr@2
$LN2@ufmt_getAr@2:
; Line 1010
	push	8
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?setError@icu_56@@YAXAAW4UErrorCode@@W42@@Z ; icu_56::setError
	add	esp, 8
; Line 1011
	xor	eax, eax
	jmp	SHORT $LN6@ufmt_getAr@2
; Line 1012
	jmp	SHORT $LN6@ufmt_getAr@2
$LN3@ufmt_getAr@2:
; Line 1013
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	??AFormattable@icu_56@@QAEAAV01@H@Z	; icu_56::Formattable::operator[]
	mov	ecx, eax
	call	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ; icu_56::Formattable::toUFormattable
$LN6@ufmt_getAr@2:
; Line 1015
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ufmt_getAr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@ufmt_getAr@2:
	DD	1
	DD	$LN9@ufmt_getAr@2
$LN9@ufmt_getAr@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@ufmt_getAr@2
$LN8@ufmt_getAr@2:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_ufmt_getArrayItemByIndex_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getDecNumChars_56
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?length@CharString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getDecNumChars_56
_TEXT	SEGMENT
_charString$ = -20					; size = 4
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_len$ = 12						; size = 4
_status$ = 16						; size = 4
_ufmt_getDecNumChars_56 PROC				; COMDAT
; Line 1018
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1019
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ufmt_getDe
; Line 1020
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	$LN6@ufmt_getDe
$LN5@ufmt_getDe:
; Line 1022
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 1023
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?internalGetCharString@Formattable@icu_56@@QAEPAVCharString@2@AAW4UErrorCode@@@Z ; icu_56::Formattable::internalGetCharString
	mov	DWORD PTR _charString$[ebp], eax
; Line 1024
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ufmt_getDe
; Line 1025
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN6@ufmt_getDe
$LN4@ufmt_getDe:
; Line 1027
	cmp	DWORD PTR _charString$[ebp], 0
	jne	SHORT $LN3@ufmt_getDe
; Line 1028
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1029
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN6@ufmt_getDe
; Line 1030
	jmp	SHORT $LN6@ufmt_getDe
$LN3@ufmt_getDe:
; Line 1031
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN1@ufmt_getDe
; Line 1032
	mov	esi, esp
	mov	ecx, DWORD PTR _charString$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@ufmt_getDe:
; Line 1034
	mov	esi, esp
	mov	ecx, DWORD PTR _charString$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@ufmt_getDe:
; Line 1036
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getDecNumChars_56 ENDP
_TEXT	ENDS
PUBLIC	_ufmt_getInt64_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ufmt_getInt64_56
_TEXT	SEGMENT
_obj$ = -8						; size = 4
_fmt$ = 8						; size = 4
_status$ = 12						; size = 4
_ufmt_getInt64_56 PROC					; COMDAT
; Line 1039
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1040
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	call	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
	add	esp, 4
	mov	DWORD PTR _obj$[ebp], eax
; Line 1041
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getInt64@Formattable@icu_56@@QBE_JAAW4UErrorCode@@@Z ; icu_56::Formattable::getInt64
; Line 1042
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ufmt_getInt64_56 ENDP
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$43849 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$43849[ebp], eax
; Line 597
	cmp	DWORD PTR _p$43849[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$43849[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$43849[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$43849[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
_TEXT	ENDS
END

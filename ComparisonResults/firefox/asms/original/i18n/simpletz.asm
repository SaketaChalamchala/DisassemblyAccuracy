; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\simpletz.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?STATICMONTHLENGTH@SimpleTimeZone@icu_56@@0QBCB	; icu_56::SimpleTimeZone::STATICMONTHLENGTH
_BSS	SEGMENT
?classID@?1??getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::SimpleTimeZone::getStaticClassID'::`2'::classID
	ALIGN	4

_gLock	DB	020H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?STATICMONTHLENGTH@SimpleTimeZone@icu_56@@0QBCB DB 01fH	; icu_56::SimpleTimeZone::STATICMONTHLENGTH
	DB	01dH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
_DST_STR DW	028H
	DW	044H
	DW	053H
	DW	054H
	DW	029H
	DW	00H
_STD_STR DW	028H
	DW	053H
	DW	054H
	DW	044H
	DW	029H
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9TimeZone@icu_56@@QBECABV01@@Z		; icu_56::TimeZone::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZone@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZone@icu_56@@QBECABV01@@Z PROC			; icu_56::TimeZone::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\timezone.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZone@icu_56@@QBECABV01@@Z ENDP			; icu_56::TimeZone::operator!=
_TEXT	ENDS
PUBLIC	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZone::getID, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	mov	eax, DWORD PTR _ID$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZone::getID
_TEXT	ENDS
PUBLIC	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::TimeZone::setID, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::TimeZone::setID
_TEXT	ENDS
PUBLIC	??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::BasicTimeZone::operator=
EXTRN	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::TimeZone::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::BasicTimeZone::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZone::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::BasicTimeZone::operator=
_TEXT	ENDS
PUBLIC	??1SimpleTimeZone@icu_56@@UAE@XZ		; icu_56::SimpleTimeZone::~SimpleTimeZone
PUBLIC	??_GSimpleTimeZone@icu_56@@UAEPAXI@Z		; icu_56::SimpleTimeZone::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleTimeZone@icu_56@@UAEPAXI@Z PROC		; icu_56::SimpleTimeZone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleTimeZone@icu_56@@UAE@XZ	; icu_56::SimpleTimeZone::~SimpleTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleTimeZone@icu_56@@UAEPAXI@Z ENDP		; icu_56::SimpleTimeZone::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ESimpleTimeZone@icu_56@@UAEPAXI@Z		; icu_56::SimpleTimeZone::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ESimpleTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleTimeZone@icu_56@@UAEPAXI@Z PROC		; icu_56::SimpleTimeZone::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1SimpleTimeZone@icu_56@@UAE@XZ	; icu_56::SimpleTimeZone::~SimpleTimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	136					; 00000088H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleTimeZone@icu_56@@UAE@XZ	; icu_56::SimpleTimeZone::~SimpleTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleTimeZone@icu_56@@UAEPAXI@Z ENDP		; icu_56::SimpleTimeZone::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfWeekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_status$ = 24						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\simpletz.h
; Line 886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeekInMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 888
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_time$ = 16						; size = 4
_status$ = 20						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 894
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_after$ = 24						; size = 1
_status$ = 28						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 898
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 899
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _after$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 900
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfWeekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_status$ = 24						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 904
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 905
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeekInMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 906
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_time$ = 16						; size = 4
_status$ = 20						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 909
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 910
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 911
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_after$ = 24						; size = 1
_status$ = 28						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 914
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 915
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _after$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 916
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getOffset
EXTRN	?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z:PROC ; icu_56::TimeZone::getOffset
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_local$ = 16						; size = 1
_rawOffsetRef$ = 20					; size = 4
_dstOffsetRef$ = 24					; size = 4
_ec$ = 28						; size = 4
?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 920
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 921
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstOffsetRef$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawOffsetRef$[ebp]
	push	edx
	movzx	eax, BYTE PTR _local$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ; icu_56::TimeZone::getOffset
; Line 922
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getOffset
_TEXT	ENDS
PUBLIC	?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTime
EXTRN	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::getTimeInMillis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z PROC	; icu_56::Calendar::getTime, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\calendar.h
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTimeInMillis
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ENDP	; icu_56::Calendar::getTime
_TEXT	ENDS
PUBLIC	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime
EXTRN	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::setTimeInMillis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_status$ = 16						; size = 4
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z PROC	; icu_56::Calendar::setTime, COMDAT
; _this$ = ecx
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ENDP	; icu_56::Calendar::setTime
_TEXT	ENDS
PUBLIC	??9Calendar@icu_56@@QBECABV01@@Z		; icu_56::Calendar::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Calendar@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9Calendar@icu_56@@QBECABV01@@Z PROC			; icu_56::Calendar::operator!=, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Calendar@icu_56@@QBECABV01@@Z ENDP			; icu_56::Calendar::operator!=
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1545
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1559
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+124], 0
	jle	SHORT $LN3@internalGe
	mov	edx, DWORD PTR _field$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN4@internalGe
$LN3@internalGe:
	mov	edx, DWORD PTR _defaultValue$[ebp]
	mov	DWORD PTR tv71[ebp], edx
$LN4@internalGe:
	mov	eax, DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1569
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGetTime@Calendar@icu_56@@IBENXZ	; icu_56::Calendar::internalGetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGetTime@Calendar@icu_56@@IBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalGetTime@Calendar@icu_56@@IBENXZ PROC		; icu_56::Calendar::internalGetTime, COMDAT
; _this$ = ecx
; Line 1898
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+224]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalGetTime@Calendar@icu_56@@IBENXZ ENDP		; icu_56::Calendar::internalGetTime
_TEXT	ENDS
PUBLIC	?internalSetTime@Calendar@icu_56@@IAEXN@Z	; icu_56::Calendar::internalSetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetTime@Calendar@icu_56@@IAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_time$ = 8						; size = 8
?internalSetTime@Calendar@icu_56@@IAEXN@Z PROC		; icu_56::Calendar::internalSetTime, COMDAT
; _this$ = ecx
; Line 1907
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [eax+224]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetTime@Calendar@icu_56@@IAEXN@Z ENDP		; icu_56::Calendar::internalSetTime
_TEXT	ENDS
PUBLIC	?getGregorianYear@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianYear@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianYear@Calendar@icu_56@@IBEHXZ PROC		; icu_56::Calendar::getGregorianYear, COMDAT
; _this$ = ecx
; Line 1970
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1971
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+272]
; Line 1972
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianYear@Calendar@icu_56@@IBEHXZ ENDP		; icu_56::Calendar::getGregorianYear
_TEXT	ENDS
PUBLIC	?getGregorianMonth@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianMonth@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianMonth@Calendar@icu_56@@IBEHXZ PROC		; icu_56::Calendar::getGregorianMonth, COMDAT
; _this$ = ecx
; Line 1979
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1980
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+276]
; Line 1981
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianMonth@Calendar@icu_56@@IBEHXZ ENDP		; icu_56::Calendar::getGregorianMonth
_TEXT	ENDS
PUBLIC	?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianDayOfYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ PROC	; icu_56::Calendar::getGregorianDayOfYear, COMDAT
; _this$ = ecx
; Line 1988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1989
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+280]
; Line 1990
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ ENDP	; icu_56::Calendar::getGregorianDayOfYear
_TEXT	ENDS
PUBLIC	?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianDayOfMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ PROC	; icu_56::Calendar::getGregorianDayOfMonth, COMDAT
; _this$ = ecx
; Line 1997
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1998
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+284]
; Line 1999
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ ENDP	; icu_56::Calendar::getGregorianDayOfMonth
_TEXT	ENDS
PUBLIC	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z ; icu_56::Calendar::createInstance
EXTRN	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::createInstance
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_zone$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z PROC ; icu_56::Calendar::createInstance, COMDAT
; Line 2500
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2502
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _zone$[ebp]
	push	ecx
	call	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::Calendar::createInstance
	add	esp, 12					; 0000000cH
; Line 2503
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::createInstance
_TEXT	ENDS
PUBLIC	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_up$ = 12						; size = 1
_status$ = 16						; size = 4
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z PROC ; icu_56::Calendar::roll, COMDAT
; _this$ = ecx
; Line 2509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2510
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _up$[ebp]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2
	add	ecx, -1
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2511
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::roll
_TEXT	ENDS
PUBLIC	?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_up$ = 12						; size = 1
_status$ = 16						; size = 4
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z PROC ; icu_56::Calendar::roll, COMDAT
; _this$ = ecx
; Line 2516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2517
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _up$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Line 2518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::roll
_TEXT	ENDS
PUBLIC	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_value$ = 12						; size = 4
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z PROC ; icu_56::Calendar::internalSet, COMDAT
; _this$ = ecx
; Line 2531
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2532
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], edx
; Line 2533
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+124], 1
; Line 2534
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _field$[ebp]
	mov	BYTE PTR [eax+100], 1
; Line 2535
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ENDP ; icu_56::Calendar::internalSet
_TEXT	ENDS
PUBLIC	?weekNumber@Calendar@icu_56@@IAEHHH@Z		; icu_56::Calendar::weekNumber
EXTRN	?weekNumber@Calendar@icu_56@@IAEHHHH@Z:PROC	; icu_56::Calendar::weekNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?weekNumber@Calendar@icu_56@@IAEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dayOfPeriod$ = 8					; size = 4
_dayOfWeek$ = 12					; size = 4
?weekNumber@Calendar@icu_56@@IAEHHH@Z PROC		; icu_56::Calendar::weekNumber, COMDAT
; _this$ = ecx
; Line 2540
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2541
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfPeriod$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfPeriod$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?weekNumber@Calendar@icu_56@@IAEHHHH@Z	; icu_56::Calendar::weekNumber
; Line 2542
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?weekNumber@Calendar@icu_56@@IAEHHH@Z ENDP		; icu_56::Calendar::weekNumber
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9TimeZoneNames@icu_56@@QBECABV01@@Z		; icu_56::TimeZoneNames::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZoneNames@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9TimeZoneNames@icu_56@@QBECABV01@@Z PROC		; icu_56::TimeZoneNames::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\tznames.h
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZoneNames@icu_56@@QBECABV01@@Z ENDP		; icu_56::TimeZoneNames::operator!=
_TEXT	ENDS
PUBLIC	??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection::`vftable'
PUBLIC	??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z ; icu_56::TimeZoneNames::MatchInfoCollection::MatchInfoCollection
PUBLIC	??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8 ; icu_56::TimeZoneNames::MatchInfoCollection `RTTI Type Descriptor'
PUBLIC	??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ; icu_56::TimeZoneNames::MatchInfoCollection::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8 DD FLAT:??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8 DD 00H	; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMatchInfoCollection@TimeZoneNames@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@
rdata$r	SEGMENT
??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@ DD 00H ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8
	DD	FLAT:??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@
CONST	SEGMENT
??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@ DD FLAT:??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection::`vftable'
	DD	FLAT:??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::MatchInfoCollection, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@MatchInfoC
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@MatchInfoC
$LN3@MatchInfoC:
	mov	DWORD PTR tv68[ebp], 0
$LN4@MatchInfoC:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::MatchInfoCollection
_TEXT	ENDS
PUBLIC	??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::TimeZoneNames::MatchInfoCollection::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::operator=
_TEXT	ENDS
PUBLIC	??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ; icu_56::TimeZoneNames::MatchInfoCollection::`scalar deleting destructor'
EXTRN	??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ:PROC ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TimeZoneNames@icu_56@@6B@			; icu_56::TimeZoneNames::`vftable'
PUBLIC	??0TimeZoneNames@icu_56@@QAE@XZ			; icu_56::TimeZoneNames::TimeZoneNames
PUBLIC	??_R4TimeZoneNames@icu_56@@6B@			; icu_56::TimeZoneNames::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTimeZoneNames@icu_56@@@8		; icu_56::TimeZoneNames `RTTI Type Descriptor'
PUBLIC	??_R3TimeZoneNames@icu_56@@8			; icu_56::TimeZoneNames::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZoneNames@icu_56@@8			; icu_56::TimeZoneNames::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeZoneNames@icu_56@@8		; icu_56::TimeZoneNames::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETimeZoneNames@icu_56@@UAEPAXI@Z		; icu_56::TimeZoneNames::`vector deleting destructor'
EXTRN	?getExemplarLocationName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@@Z:PROC ; icu_56::TimeZoneNames::getExemplarLocationName
EXTRN	?getDisplayName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@W4UTimeZoneNameType@@NAAV32@@Z:PROC ; icu_56::TimeZoneNames::getDisplayName
;	COMDAT ??_R1A@?0A@EA@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZoneNames@icu_56@@8 DD FLAT:??_R0?AVTimeZoneNames@icu_56@@@8 ; icu_56::TimeZoneNames::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZoneNames@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZoneNames@icu_56@@8 DD 00H			; icu_56::TimeZoneNames::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZoneNames@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZoneNames@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneNames `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZoneNames@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TimeZoneNames@icu_56@@6B@
rdata$r	SEGMENT
??_R4TimeZoneNames@icu_56@@6B@ DD 00H			; icu_56::TimeZoneNames::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTimeZoneNames@icu_56@@@8
	DD	FLAT:??_R3TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7TimeZoneNames@icu_56@@6B@
CONST	SEGMENT
??_7TimeZoneNames@icu_56@@6B@ DD FLAT:??_R4TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::`vftable'
	DD	FLAT:??_ETimeZoneNames@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getExemplarLocationName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@@Z
	DD	FLAT:?getDisplayName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@W4UTimeZoneNameType@@NAAV32@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TimeZoneNames@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TimeZoneNames@icu_56@@QAE@XZ PROC			; icu_56::TimeZoneNames::TimeZoneNames, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TimeZoneNames@icu_56@@QAE@XZ ENDP			; icu_56::TimeZoneNames::TimeZoneNames
_TEXT	ENDS
PUBLIC	??0TimeZoneNames@icu_56@@QAE@ABV01@@Z		; icu_56::TimeZoneNames::TimeZoneNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TimeZoneNames@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TimeZoneNames@icu_56@@QAE@ABV01@@Z PROC		; icu_56::TimeZoneNames::TimeZoneNames, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0TimeZoneNames@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::TimeZoneNames::TimeZoneNames
_TEXT	ENDS
PUBLIC	??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::TimeZoneNames::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::TimeZoneNames::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::TimeZoneNames::operator=
_TEXT	ENDS
PUBLIC	??_GTimeZoneNames@icu_56@@UAEPAXI@Z		; icu_56::TimeZoneNames::`scalar deleting destructor'
EXTRN	??1TimeZoneNames@icu_56@@UAE@XZ:PROC		; icu_56::TimeZoneNames::~TimeZoneNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTimeZoneNames@icu_56@@UAEPAXI@Z PROC		; icu_56::TimeZoneNames::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneNames@icu_56@@UAE@XZ		; icu_56::TimeZoneNames::~TimeZoneNames
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTimeZoneNames@icu_56@@UAEPAXI@Z ENDP		; icu_56::TimeZoneNames::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETimeZoneNames@icu_56@@UAEPAXI@Z PROC		; icu_56::TimeZoneNames::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1TimeZoneNames@icu_56@@UAE@XZ	; icu_56::TimeZoneNames::~TimeZoneNames
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneNames@icu_56@@UAE@XZ		; icu_56::TimeZoneNames::~TimeZoneNames
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETimeZoneNames@icu_56@@UAEPAXI@Z ENDP		; icu_56::TimeZoneNames::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::SimpleDateFormat::get2DigitYearStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::SimpleDateFormat::get2DigitYearStart, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\smpdtfmt.h
; Line 1587
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+744]
; Line 1589
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleDateFormat::get2DigitYearStart
_TEXT	ENDS
PUBLIC	?getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ ; icu_56::SimpleTimeZone::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ PROC	; icu_56::SimpleTimeZone::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\simpletz.cpp
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ ENDP	; icu_56::SimpleTimeZone::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@SimpleTimeZone@icu_56@@UBEPAXXZ ; icu_56::SimpleTimeZone::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@SimpleTimeZone@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@SimpleTimeZone@icu_56@@UBEPAXXZ PROC	; icu_56::SimpleTimeZone::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@SimpleTimeZone@icu_56@@SAPAXXZ ; icu_56::SimpleTimeZone::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@SimpleTimeZone@icu_56@@UBEPAXXZ ENDP	; icu_56::SimpleTimeZone::getDynamicClassID
_TEXT	ENDS
PUBLIC	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
PUBLIC	??_7SimpleTimeZone@icu_56@@6B@			; icu_56::SimpleTimeZone::`vftable'
PUBLIC	??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z ; icu_56::SimpleTimeZone::SimpleTimeZone
PUBLIC	??_R4SimpleTimeZone@icu_56@@6B@			; icu_56::SimpleTimeZone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleTimeZone@icu_56@@@8		; icu_56::SimpleTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3SimpleTimeZone@icu_56@@8			; icu_56::SimpleTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleTimeZone@icu_56@@8			; icu_56::SimpleTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleTimeZone@icu_56@@8		; icu_56::SimpleTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@BasicTimeZone@icu_56@@8		; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBasicTimeZone@icu_56@@@8		; icu_56::BasicTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeZone@icu_56@@8		; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTimeZone@icu_56@@@8			; icu_56::TimeZone `RTTI Type Descriptor'
PUBLIC	??_R3TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Base Class Array'
PUBLIC	??8SimpleTimeZone@icu_56@@UBECABVTimeZone@1@@Z	; icu_56::SimpleTimeZone::operator==
PUBLIC	?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getOffset
PUBLIC	?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getOffset
PUBLIC	?setRawOffset@SimpleTimeZone@icu_56@@UAEXH@Z	; icu_56::SimpleTimeZone::setRawOffset
PUBLIC	?getRawOffset@SimpleTimeZone@icu_56@@UBEHXZ	; icu_56::SimpleTimeZone::getRawOffset
PUBLIC	?useDaylightTime@SimpleTimeZone@icu_56@@UBECXZ	; icu_56::SimpleTimeZone::useDaylightTime
PUBLIC	?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::inDaylightTime
PUBLIC	?hasSameRules@SimpleTimeZone@icu_56@@UBECABVTimeZone@2@@Z ; icu_56::SimpleTimeZone::hasSameRules
PUBLIC	?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ ; icu_56::SimpleTimeZone::clone
PUBLIC	?getDSTSavings@SimpleTimeZone@icu_56@@UBEHXZ	; icu_56::SimpleTimeZone::getDSTSavings
PUBLIC	?getNextTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ; icu_56::SimpleTimeZone::getNextTransition
PUBLIC	?getPreviousTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ; icu_56::SimpleTimeZone::getPreviousTransition
PUBLIC	?countTransitionRules@SimpleTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::countTransitionRules
PUBLIC	?getTimeZoneRules@SimpleTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getTimeZoneRules
PUBLIC	?getOffsetFromLocal@SimpleTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getOffsetFromLocal
PUBLIC	?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getOffset
EXTRN	??1BasicTimeZone@icu_56@@UAE@XZ:PROC		; icu_56::BasicTimeZone::~BasicTimeZone
EXTRN	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z:PROC ; icu_56::BasicTimeZone::BasicTimeZone
EXTRN	?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::hasEquivalentTransitions
EXTRN	?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::getSimpleRulesNear
;	COMDAT ??_R2TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8 ; icu_56::TimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZone@icu_56@@8 DD 00H				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::TimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZone@icu_56@@8 DD FLAT:??_R0?AVTimeZone@icu_56@@@8 ; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2BasicTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3BasicTimeZone@icu_56@@8 DD 00H			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBasicTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBasicTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BasicTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBasicTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 DD FLAT:??_R0?AVBasicTimeZone@icu_56@@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SimpleTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleTimeZone@icu_56@@8 DD FLAT:??_R0?AVSimpleTimeZone@icu_56@@@8 ; icu_56::SimpleTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleTimeZone@icu_56@@8 ; icu_56::SimpleTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleTimeZone@icu_56@@8 DD 00H			; icu_56::SimpleTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2SimpleTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleTimeZone@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleTimeZone@icu_56@@6B@ DD 00H			; icu_56::SimpleTimeZone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleTimeZone@icu_56@@@8
	DD	FLAT:??_R3SimpleTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleTimeZone@icu_56@@6B@
CONST	SEGMENT
??_7SimpleTimeZone@icu_56@@6B@ DD FLAT:??_R4SimpleTimeZone@icu_56@@6B@ ; icu_56::SimpleTimeZone::`vftable'
	DD	FLAT:??_ESimpleTimeZone@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@SimpleTimeZone@icu_56@@UBEPAXXZ
	DD	FLAT:??8SimpleTimeZone@icu_56@@UBECABVTimeZone@1@@Z
	DD	FLAT:?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z
	DD	FLAT:?setRawOffset@SimpleTimeZone@icu_56@@UAEXH@Z
	DD	FLAT:?getRawOffset@SimpleTimeZone@icu_56@@UBEHXZ
	DD	FLAT:?useDaylightTime@SimpleTimeZone@icu_56@@UBECXZ
	DD	FLAT:?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
	DD	FLAT:?hasSameRules@SimpleTimeZone@icu_56@@UBECABVTimeZone@2@@Z
	DD	FLAT:?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	DD	FLAT:?getDSTSavings@SimpleTimeZone@icu_56@@UBEHXZ
	DD	FLAT:?getNextTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	FLAT:?getPreviousTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	FLAT:?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	DD	FLAT:?countTransitionRules@SimpleTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?getTimeZoneRules@SimpleTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	DD	FLAT:?getOffsetFromLocal@SimpleTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHHAAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z$0
__ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rawOffsetGMT$ = 8					; size = 4
_ID$ = 12						; size = 4
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z PROC ; icu_56::SimpleTimeZone::SimpleTimeZone, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleTimeZone@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+69], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+70], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+85], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+86], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rawOffsetGMT$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+100], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 3600000		; 0036ee80H
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
; Line 82
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@@Z ENDP ; icu_56::SimpleTimeZone::SimpleTimeZone
PUBLIC	?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::construct
PUBLIC	??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::SimpleTimeZone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rawOffsetGMT$ = 8					; size = 4
_ID$ = 12						; size = 4
_savingsStartMonth$ = 16				; size = 1
_savingsStartDay$ = 20					; size = 1
_savingsStartDayOfWeek$ = 24				; size = 1
_savingsStartTime$ = 28					; size = 4
_savingsEndMonth$ = 32					; size = 1
_savingsEndDay$ = 36					; size = 1
_savingsEndDayOfWeek$ = 40				; size = 1
_savingsEndTime$ = 44					; size = 4
_status$ = 48						; size = 4
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::SimpleTimeZone, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleTimeZone@icu_56@@6B@
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
; Line 100
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3600000					; 0036ee80H
	push	0
	mov	ecx, DWORD PTR _savingsEndTime$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _savingsEndDayOfWeek$[ebp]
	push	edx
	movzx	eax, BYTE PTR _savingsEndDay$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _savingsEndMonth$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _savingsStartTime$[ebp]
	push	edx
	movzx	eax, BYTE PTR _savingsStartDayOfWeek$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _savingsStartDay$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _savingsStartMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _rawOffsetGMT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::construct
; Line 101
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::SimpleTimeZone
PUBLIC	??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::SimpleTimeZone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rawOffsetGMT$ = 8					; size = 4
_ID$ = 12						; size = 4
_savingsStartMonth$ = 16				; size = 1
_savingsStartDay$ = 20					; size = 1
_savingsStartDayOfWeek$ = 24				; size = 1
_savingsStartTime$ = 28					; size = 4
_savingsEndMonth$ = 32					; size = 1
_savingsEndDay$ = 36					; size = 1
_savingsEndDayOfWeek$ = 40				; size = 1
_savingsEndTime$ = 44					; size = 4
_savingsDST$ = 48					; size = 4
_status$ = 52						; size = 4
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::SimpleTimeZone, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleTimeZone@icu_56@@6B@
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
; Line 119
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _savingsDST$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _savingsEndTime$[ebp]
	push	edx
	movzx	eax, BYTE PTR _savingsEndDayOfWeek$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _savingsEndDay$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _savingsEndMonth$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _savingsStartTime$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _savingsStartDayOfWeek$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _savingsStartDay$[ebp]
	push	edx
	movzx	eax, BYTE PTR _savingsStartMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffsetGMT$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::construct
; Line 120
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHCCCHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::SimpleTimeZone
PUBLIC	??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::SimpleTimeZone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rawOffsetGMT$ = 8					; size = 4
_ID$ = 12						; size = 4
_savingsStartMonth$ = 16				; size = 1
_savingsStartDay$ = 20					; size = 1
_savingsStartDayOfWeek$ = 24				; size = 1
_savingsStartTime$ = 28					; size = 4
_savingsStartTimeMode$ = 32				; size = 4
_savingsEndMonth$ = 36					; size = 1
_savingsEndDay$ = 40					; size = 1
_savingsEndDayOfWeek$ = 44				; size = 1
_savingsEndTime$ = 48					; size = 4
_savingsEndTimeMode$ = 52				; size = 4
_savingsDST$ = 56					; size = 4
_status$ = 60						; size = 4
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::SimpleTimeZone, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleTimeZone@icu_56@@6B@
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
; Line 140
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _savingsDST$[ebp]
	push	ecx
	mov	edx, DWORD PTR _savingsEndTimeMode$[ebp]
	push	edx
	mov	eax, DWORD PTR _savingsEndTime$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _savingsEndDayOfWeek$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _savingsEndDay$[ebp]
	push	edx
	movzx	eax, BYTE PTR _savingsEndMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _savingsStartTimeMode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _savingsStartTime$[ebp]
	push	edx
	movzx	eax, BYTE PTR _savingsStartDayOfWeek$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _savingsStartDay$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _savingsStartMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _rawOffsetGMT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::construct
; Line 141
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::SimpleTimeZone
PUBLIC	?decodeRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rawOffsetGMT$ = 8					; size = 4
_savingsStartMonth$ = 12				; size = 1
_savingsStartDay$ = 16					; size = 1
_savingsStartDayOfWeek$ = 20				; size = 1
_savingsStartTime$ = 24					; size = 4
_savingsStartTimeMode$ = 28				; size = 4
_savingsEndMonth$ = 32					; size = 1
_savingsEndDay$ = 36					; size = 1
_savingsEndDayOfWeek$ = 40				; size = 1
_savingsEndTime$ = 44					; size = 4
_savingsEndTimeMode$ = 48				; size = 4
_savingsDST$ = 52					; size = 4
_status$ = 56						; size = 4
?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::construct, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rawOffsetGMT$[ebp]
	mov	DWORD PTR [eax+96], ecx
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savingsStartMonth$[ebp]
	mov	BYTE PTR [eax+68], cl
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savingsStartDay$[ebp]
	mov	BYTE PTR [eax+69], cl
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savingsStartDayOfWeek$[ebp]
	mov	BYTE PTR [eax+70], cl
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savingsStartTime$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savingsStartTimeMode$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savingsEndMonth$[ebp]
	mov	BYTE PTR [eax+84], cl
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savingsEndDay$[ebp]
	mov	BYTE PTR [eax+85], cl
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savingsEndDayOfWeek$[ebp]
	mov	BYTE PTR [eax+86], cl
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savingsEndTime$[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savingsEndTimeMode$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savingsDST$[ebp]
	mov	DWORD PTR [eax+112], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 1
; Line 176
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?decodeRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeRules
; Line 178
	cmp	DWORD PTR _savingsDST$[ebp], 0
	jg	SHORT $LN2@construct
; Line 179
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN2@construct:
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
?construct@SimpleTimeZone@icu_56@@AAEXHCCCHW4TimeMode@12@CCCH0HAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::construct
_TEXT	ENDS
PUBLIC	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SimpleTimeZone@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SimpleTimeZone@icu_56@@UAE@XZ$0
__ehfuncinfo$??1SimpleTimeZone@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SimpleTimeZone@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1SimpleTimeZone@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1SimpleTimeZone@icu_56@@UAE@XZ PROC			; icu_56::SimpleTimeZone::~SimpleTimeZone, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SimpleTimeZone@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleTimeZone@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 188
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SimpleTimeZone@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??1SimpleTimeZone@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SimpleTimeZone@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SimpleTimeZone@icu_56@@UAE@XZ ENDP			; icu_56::SimpleTimeZone::~SimpleTimeZone
PUBLIC	??4SimpleTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::SimpleTimeZone::operator=
PUBLIC	??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z		; icu_56::SimpleTimeZone::SimpleTimeZone
EXTRN	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::BasicTimeZone::BasicTimeZone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z PROC		; icu_56::SimpleTimeZone::SimpleTimeZone, COMDAT
; _this$ = ecx
; Line 195
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z	; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleTimeZone@icu_56@@6B@
; Line 196
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4SimpleTimeZone@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::SimpleTimeZone::operator=
; Line 197
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::SimpleTimeZone::SimpleTimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SimpleTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??4SimpleTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::SimpleTimeZone::operator=, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _right$[ebp]
	je	$LN1@operator@2
; Line 207
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZone::operator=
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+96], edx
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+69]
	mov	BYTE PTR [eax+69], dl
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+70]
	mov	BYTE PTR [eax+70], dl
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+84]
	mov	BYTE PTR [eax+84], dl
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+85]
	mov	BYTE PTR [eax+85], dl
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+86]
	mov	BYTE PTR [eax+86], dl
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR [eax+88], edx
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax+92], edx
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	dl, BYTE PTR [ecx+100]
	mov	BYTE PTR [eax+100], dl
; Line 224
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
$LN1@operator@2:
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
; Line 227
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4SimpleTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::SimpleTimeZone::operator=
_TEXT	ENDS
EXTRN	??8TimeZone@icu_56@@UBECABV01@@Z:PROC		; icu_56::TimeZone::operator==
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8SimpleTimeZone@icu_56@@UBECABVTimeZone@1@@Z
_TEXT	SEGMENT
tv130 = -205						; size = 1
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8SimpleTimeZone@icu_56@@UBECABVTimeZone@1@@Z PROC	; icu_56::SimpleTimeZone::operator==, COMDAT
; _this$ = ecx
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	je	SHORT $LN4@operator@3
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator@3
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8TimeZone@icu_56@@UBECABV01@@Z	; icu_56::TimeZone::operator==
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@operator@3
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@operator@3
$LN3@operator@3:
	mov	BYTE PTR tv130[ebp], 0
	jmp	SHORT $LN5@operator@3
$LN4@operator@3:
	mov	BYTE PTR tv130[ebp], 1
$LN5@operator@3:
	mov	al, BYTE PTR tv130[ebp]
; Line 238
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8SimpleTimeZone@icu_56@@UBECABVTimeZone@1@@Z ENDP	; icu_56::SimpleTimeZone::operator==
_TEXT	ENDS
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0
__ehfuncinfo$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T83166 = -236						; size = 4
$T83167 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ PROC	; icu_56::SimpleTimeZone::clone, COMDAT
; _this$ = ecx
; Line 245
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	esi, esp
	push	136					; 00000088H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83167[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83167[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83167[ebp]
	call	??0SimpleTimeZone@icu_56@@QAE@ABV01@@Z	; icu_56::SimpleTimeZone::SimpleTimeZone
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T83166[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T83166[ebp]
; Line 247
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T83167[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@SimpleTimeZone@icu_56@@UBEPAVTimeZone@2@XZ ENDP	; icu_56::SimpleTimeZone::clone
PUBLIC	?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z	; icu_56::SimpleTimeZone::setStartYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_year$ = 8						; size = 4
?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z PROC	; icu_56::SimpleTimeZone::setStartYear, COMDAT
; _this$ = ecx
; Line 260
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	mov	DWORD PTR [eax+92], ecx
; Line 262
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
; Line 263
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z ENDP	; icu_56::SimpleTimeZone::setStartYear
_TEXT	ENDS
PUBLIC	?decodeStartRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfWeekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_mode$ = 24						; size = 4
_status$ = 28						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _month$[ebp]
	mov	BYTE PTR [eax+68], cl
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _dayOfWeekInMonth$[ebp]
	mov	BYTE PTR [eax+69], cl
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _dayOfWeek$[ebp]
	mov	BYTE PTR [eax+70], cl
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _time$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 315
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?decodeStartRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeStartRule
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_time$ = 16						; size = 4
_mode$ = 20						; size = 4
_status$ = 24						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 325
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 326
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_mode$ = 24						; size = 4
_after$ = 28						; size = 1
_status$ = 32						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 333
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	movsx	eax, BYTE PTR _after$[ebp]
	test	eax, eax
	je	SHORT $LN3@setStartRu
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@setStartRu
$LN3@setStartRu:
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	neg	edx
	mov	DWORD PTR tv73[ebp], edx
$LN4@setStartRu:
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?decodeEndRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfWeekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_mode$ = 24						; size = 4
_status$ = 28						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 361
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _month$[ebp]
	mov	BYTE PTR [eax+84], cl
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _dayOfWeekInMonth$[ebp]
	mov	BYTE PTR [eax+85], cl
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _dayOfWeek$[ebp]
	mov	BYTE PTR [eax+86], cl
; Line 365
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _time$[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 367
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?decodeEndRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeEndRule
; Line 368
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_time$ = 16						; size = 4
_mode$ = 20						; size = 4
_status$ = 24						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 376
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 377
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_mode$ = 24						; size = 4
_after$ = 28						; size = 1
_status$ = 32						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 387
	movsx	eax, BYTE PTR _after$[ebp]
	test	eax, eax
	je	SHORT $LN3@setEndRule
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@setEndRule
$LN3@setEndRule:
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	neg	edx
	mov	DWORD PTR tv73[ebp], edx
$LN4@setEndRule:
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?monthLength@Grego@icu_56@@SACHH@Z		; icu_56::Grego::monthLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_day$ = 20						; size = 4
_dayOfWeek$ = 24					; size = 1
_millis$ = 28						; size = 4
_status$ = 32						; size = 4
?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 395
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 403
	cmp	DWORD PTR _month$[ebp], 0
	jl	SHORT $LN1@getOffset
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jle	SHORT $LN2@getOffset
$LN1@getOffset:
; Line 404
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 405
	xor	eax, eax
	jmp	SHORT $LN3@getOffset
$LN2@getOffset:
; Line 408
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	eax, al
	push	eax
	mov	ecx, DWORD PTR _millis$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _day$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	movzx	eax, BYTE PTR _era$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getOffset:
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getOffset
_TEXT	ENDS
PUBLIC	?isLeapYear@Grego@icu_56@@SACH@Z		; icu_56::Grego::isLeapYear
EXTRN	?MONTH_LENGTH@Grego@icu_56@@0QBCB:BYTE		; icu_56::Grego::MONTH_LENGTH
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?monthLength@Grego@icu_56@@SACHH@Z
_TEXT	SEGMENT
_year$ = 8						; size = 4
_month$ = 12						; size = 4
?monthLength@Grego@icu_56@@SACHH@Z PROC			; icu_56::Grego::monthLength, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 265
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _month$[ebp]
	mov	al, BYTE PTR ?MONTH_LENGTH@Grego@icu_56@@0QBCB[edx+ecx]
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?monthLength@Grego@icu_56@@SACHH@Z ENDP			; icu_56::Grego::monthLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isLeapYear@Grego@icu_56@@SACH@Z
_TEXT	SEGMENT
tv70 = -193						; size = 1
_year$ = 8						; size = 4
?isLeapYear@Grego@icu_56@@SACH@Z PROC			; icu_56::Grego::isLeapYear, COMDAT
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 260
	mov	eax, DWORD PTR _year$[ebp]
	and	eax, 3
	jne	SHORT $LN4@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 400				; 00000190H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@isLeapYear
$LN3@isLeapYear:
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@isLeapYear
$LN4@isLeapYear:
	mov	BYTE PTR tv70[ebp], 0
$LN5@isLeapYear:
	mov	al, BYTE PTR tv70[ebp]
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLeapYear@Grego@icu_56@@SACH@Z ENDP			; icu_56::Grego::isLeapYear
_TEXT	ENDS
PUBLIC	?previousMonthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::previousMonthLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_day$ = 20						; size = 4
_dayOfWeek$ = 24					; size = 1
_millis$ = 28						; size = 4
___formal$ = 32						; size = 4
_status$ = 36						; size = 4
?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getOffset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\simpletz.cpp
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 424
	cmp	DWORD PTR _month$[ebp], 0
	jl	SHORT $LN1@getOffset@2
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jle	SHORT $LN2@getOffset@2
$LN1@getOffset@2:
; Line 425
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 426
	or	eax, -1
	jmp	SHORT $LN3@getOffset@2
$LN2@getOffset@2:
; Line 435
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?previousMonthLength@Grego@icu_56@@SACHH@Z ; icu_56::Grego::previousMonthLength
	add	esp, 8
	movsx	eax, al
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	eax, al
	push	eax
	mov	ecx, DWORD PTR _millis$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _day$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	movzx	eax, BYTE PTR _era$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getOffset@2:
; Line 436
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?previousMonthLength@Grego@icu_56@@SACHH@Z
_TEXT	SEGMENT
tv70 = -196						; size = 4
_y$ = 8							; size = 4
_m$ = 12						; size = 4
?previousMonthLength@Grego@icu_56@@SACHH@Z PROC		; icu_56::Grego::previousMonthLength, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 269
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 270
	cmp	DWORD PTR _m$[ebp], 0
	jle	SHORT $LN3@previousMo
	mov	eax, DWORD PTR _m$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	edx, al
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@previousMo
$LN3@previousMo:
	mov	DWORD PTR tv70[ebp], 31			; 0000001fH
$LN4@previousMo:
	mov	al, BYTE PTR tv70[ebp]
; Line 271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?previousMonthLength@Grego@icu_56@@SACHH@Z ENDP		; icu_56::Grego::previousMonthLength
_TEXT	ENDS
PUBLIC	?compareToRule@SimpleTimeZone@icu_56@@CAHCCCCCHHW4EMode@12@CCCH@Z ; icu_56::SimpleTimeZone::compareToRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv177 = -260						; size = 4
tv178 = -256						; size = 4
tv147 = -256						; size = 4
_endCompare$ = -56					; size = 4
_startCompare$ = -44					; size = 4
_southern$ = -29					; size = 1
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_day$ = 20						; size = 4
_dayOfWeek$ = 24					; size = 1
_millis$ = 28						; size = 4
_monthLength$ = 32					; size = 4
_prevMonthLength$ = 36					; size = 4
_status$ = 40						; size = 4
?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getOffset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\simpletz.cpp
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 444
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@getOffset@3
	xor	eax, eax
	jmp	$LN13@getOffset@3
$LN12@getOffset@3:
; Line 458
	movzx	eax, BYTE PTR _era$[ebp]
	cmp	eax, 1
	je	SHORT $LN9@getOffset@3
	movzx	eax, BYTE PTR _era$[ebp]
	test	eax, eax
	jne	SHORT $LN10@getOffset@3
$LN9@getOffset@3:
	cmp	DWORD PTR _month$[ebp], 0
	jl	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jg	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _day$[ebp], 1
	jl	SHORT $LN10@getOffset@3
	mov	eax, DWORD PTR _day$[ebp]
	cmp	eax, DWORD PTR _monthLength$[ebp]
	jg	SHORT $LN10@getOffset@3
	movzx	eax, BYTE PTR _dayOfWeek$[ebp]
	cmp	eax, 1
	jl	SHORT $LN10@getOffset@3
	movzx	eax, BYTE PTR _dayOfWeek$[ebp]
	cmp	eax, 7
	jg	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _millis$[ebp], 0
	jl	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _millis$[ebp], 86400000	; 05265c00H
	jge	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _monthLength$[ebp], 28	; 0000001cH
	jl	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _monthLength$[ebp], 31	; 0000001fH
	jg	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _prevMonthLength$[ebp], 28	; 0000001cH
	jl	SHORT $LN10@getOffset@3
	cmp	DWORD PTR _prevMonthLength$[ebp], 31	; 0000001fH
	jle	SHORT $LN11@getOffset@3
$LN10@getOffset@3:
; Line 459
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 460
	or	eax, -1
	jmp	$LN13@getOffset@3
$LN11@getOffset@3:
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _result$[ebp], ecx
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	je	SHORT $LN7@getOffset@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	cmp	ecx, DWORD PTR [eax+92]
	jl	SHORT $LN7@getOffset@3
	movzx	eax, BYTE PTR _era$[ebp]
	cmp	eax, 1
	je	SHORT $LN8@getOffset@3
$LN7@getOffset@3:
; Line 467
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN13@getOffset@3
$LN8@getOffset@3:
; Line 471
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+84]
	cmp	ecx, eax
	setg	cl
	mov	BYTE PTR _southern$[ebp], cl
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 2
	jne	SHORT $LN15@getOffset@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	neg	edx
	mov	DWORD PTR tv147[ebp], edx
	jmp	SHORT $LN16@getOffset@3
$LN15@getOffset@3:
	mov	DWORD PTR tv147[ebp], 0
$LN16@getOffset@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+69]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+70]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	mov	edx, DWORD PTR _millis$[ebp]
	push	edx
	movzx	eax, BYTE PTR _dayOfWeek$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _day$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _prevMonthLength$[ebp]
	push	edx
	movzx	eax, BYTE PTR _monthLength$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _month$[ebp]
	push	ecx
	call	?compareToRule@SimpleTimeZone@icu_56@@CAHCCCCCHHW4EMode@12@CCCH@Z ; icu_56::SimpleTimeZone::compareToRule
	add	esp, 48					; 00000030H
	mov	DWORD PTR _startCompare$[ebp], eax
; Line 480
	mov	DWORD PTR _endCompare$[ebp], 0
; Line 488
	movsx	eax, BYTE PTR _southern$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR _startCompare$[ebp], 0
	setge	cl
	cmp	eax, ecx
	je	$LN6@getOffset@3
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN19@getOffset@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR tv178[ebp], edx
	jmp	SHORT $LN20@getOffset@3
$LN19@getOffset@3:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 2
	jne	SHORT $LN17@getOffset@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	neg	edx
	mov	DWORD PTR tv177[ebp], edx
	jmp	SHORT $LN18@getOffset@3
$LN17@getOffset@3:
	mov	DWORD PTR tv177[ebp], 0
$LN18@getOffset@3:
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR tv178[ebp], eax
$LN20@getOffset@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+85]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+86]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR tv178[ebp]
	push	edx
	mov	eax, DWORD PTR _millis$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _dayOfWeek$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _day$[ebp]
	push	edx
	movzx	eax, BYTE PTR _prevMonthLength$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _monthLength$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _month$[ebp]
	push	edx
	call	?compareToRule@SimpleTimeZone@icu_56@@CAHCCCCCHHW4EMode@12@CCCH@Z ; icu_56::SimpleTimeZone::compareToRule
	add	esp, 48					; 00000030H
	mov	DWORD PTR _endCompare$[ebp], eax
$LN6@getOffset@3:
; Line 502
	movsx	eax, BYTE PTR _southern$[ebp]
	test	eax, eax
	jne	SHORT $LN3@getOffset@3
	cmp	DWORD PTR _startCompare$[ebp], 0
	jl	SHORT $LN3@getOffset@3
	cmp	DWORD PTR _endCompare$[ebp], 0
	jl	SHORT $LN4@getOffset@3
$LN3@getOffset@3:
	movsx	eax, BYTE PTR _southern$[ebp]
	test	eax, eax
	je	SHORT $LN5@getOffset@3
	cmp	DWORD PTR _startCompare$[ebp], 0
	jge	SHORT $LN4@getOffset@3
	cmp	DWORD PTR _endCompare$[ebp], 0
	jge	SHORT $LN5@getOffset@3
$LN4@getOffset@3:
; Line 503
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR _result$[ebp], ecx
$LN5@getOffset@3:
; Line 505
	mov	eax, DWORD PTR _result$[ebp]
$LN13@getOffset@3:
; Line 506
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?getOffset@SimpleTimeZone@icu_56@@UBEHEHHHEHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?dayToFields@Grego@icu_56@@SAXNAAH000@Z		; icu_56::Grego::dayToFields
PUBLIC	__real@4194997000000000
EXTRN	_uprv_floor_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@4194997000000000
; File d:\mozilla\intl\icu\source\i18n\simpletz.cpp
CONST	SEGMENT
__real@4194997000000000 DQ 04194997000000000r	; 8.64e+007
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getOffsetFromLocal@SimpleTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv282 = -296						; size = 4
tv272 = -296						; size = 4
_recalc$ = -93						; size = 1
_millis$ = -84						; size = 4
_day$ = -72						; size = 8
_dow$ = -56						; size = 4
_dom$ = -44						; size = 4
_month$ = -32						; size = 4
_year$ = -20						; size = 4
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_nonExistingTimeOpt$ = 16				; size = 4
_duplicatedTimeOpt$ = 20				; size = 4
_rawOffsetGMT$ = 24					; size = 4
_savingsDST$ = 28					; size = 4
_status$ = 32						; size = 4
?getOffsetFromLocal@SimpleTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getOffsetFromLocal, COMDAT
; _this$ = ecx
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 511
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@getOffsetF
; Line 512
	jmp	$LN10@getOffsetF
$LN9@getOffsetF:
; Line 515
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _rawOffsetGMT$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 517
	fld	QWORD PTR _date$[ebp]
	fdiv	QWORD PTR __real@4194997000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fstp	QWORD PTR _day$[ebp]
; Line 518
	fld	QWORD PTR _day$[ebp]
	fmul	QWORD PTR __real@4194997000000000
	fsubr	QWORD PTR _date$[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _millis$[ebp], eax
; Line 520
	lea	eax, DWORD PTR _dow$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dom$[ebp]
	push	ecx
	lea	edx, DWORD PTR _month$[ebp]
	push	edx
	lea	eax, DWORD PTR _year$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _day$[ebp]
	fstp	QWORD PTR [esp]
	call	?dayToFields@Grego@icu_56@@SAXNAAH000@Z	; icu_56::Grego::dayToFields
	add	esp, 24					; 00000018H
; Line 525
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	eax, al
	push	eax
	mov	ecx, DWORD PTR _millis$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dow$[ebp]
	push	edx
	mov	eax, DWORD PTR _dom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _rawOffsetGMT$[ebp]
	sub	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _savingsDST$[ebp]
	mov	DWORD PTR [edx], eax
; Line 526
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@getOffsetF
; Line 527
	jmp	$LN10@getOffsetF
$LN8@getOffsetF:
; Line 530
	mov	BYTE PTR _recalc$[ebp], 0
; Line 533
	mov	eax, DWORD PTR _savingsDST$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@getOffsetF
; Line 535
	mov	eax, DWORD PTR _nonExistingTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 1
	je	SHORT $LN5@getOffsetF
	mov	eax, DWORD PTR _nonExistingTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 3
	je	SHORT $LN6@getOffsetF
	mov	eax, DWORD PTR _nonExistingTimeOpt$[ebp]
	and	eax, 12					; 0000000cH
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN6@getOffsetF
$LN5@getOffsetF:
; Line 536
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv272[ebp], eax
	fild	DWORD PTR tv272[ebp]
	fsubr	QWORD PTR _date$[ebp]
	fstp	QWORD PTR _date$[ebp]
; Line 537
	mov	BYTE PTR _recalc$[ebp], 1
$LN6@getOffsetF:
; Line 539
	jmp	SHORT $LN3@getOffsetF
$LN7@getOffsetF:
; Line 541
	mov	eax, DWORD PTR _duplicatedTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 3
	je	SHORT $LN2@getOffsetF
	mov	eax, DWORD PTR _duplicatedTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 1
	je	SHORT $LN3@getOffsetF
	mov	eax, DWORD PTR _duplicatedTimeOpt$[ebp]
	and	eax, 12					; 0000000cH
	cmp	eax, 4
	jne	SHORT $LN3@getOffsetF
$LN2@getOffsetF:
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv282[ebp], eax
	fild	DWORD PTR tv282[ebp]
	fsubr	QWORD PTR _date$[ebp]
	fstp	QWORD PTR _date$[ebp]
; Line 543
	mov	BYTE PTR _recalc$[ebp], 1
$LN3@getOffsetF:
; Line 546
	movsx	eax, BYTE PTR _recalc$[ebp]
	test	eax, eax
	je	$LN1@getOffsetF
; Line 547
	fld	QWORD PTR _date$[ebp]
	fdiv	QWORD PTR __real@4194997000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fstp	QWORD PTR _day$[ebp]
; Line 548
	fld	QWORD PTR _day$[ebp]
	fmul	QWORD PTR __real@4194997000000000
	fsubr	QWORD PTR _date$[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _millis$[ebp], eax
; Line 549
	lea	eax, DWORD PTR _dow$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dom$[ebp]
	push	ecx
	lea	edx, DWORD PTR _month$[ebp]
	push	edx
	lea	eax, DWORD PTR _year$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _day$[ebp]
	fstp	QWORD PTR [esp]
	call	?dayToFields@Grego@icu_56@@SAXNAAH000@Z	; icu_56::Grego::dayToFields
	add	esp, 24					; 00000018H
; Line 553
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	eax, al
	push	eax
	mov	ecx, DWORD PTR _millis$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dow$[ebp]
	push	edx
	mov	eax, DWORD PTR _dom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _rawOffsetGMT$[ebp]
	sub	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _savingsDST$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@getOffsetF:
$LN10@getOffsetF:
; Line 555
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@getOffsetF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	3
$LN17@getOffsetF:
	DD	4
	DD	$LN16@getOffsetF
$LN16@getOffsetF:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@getOffsetF
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@getOffsetF
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN14@getOffsetF
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN15@getOffsetF
$LN15@getOffsetF:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN14@getOffsetF:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN13@getOffsetF:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN12@getOffsetF:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
?getOffsetFromLocal@SimpleTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getOffsetFromLocal
_TEXT	ENDS
EXTRN	?dayToFields@Grego@icu_56@@SAXNAAH0000@Z:PROC	; icu_56::Grego::dayToFields
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dayToFields@Grego@icu_56@@SAXNAAH000@Z
_TEXT	SEGMENT
_doy_unused$ = -8					; size = 4
_day$ = 8						; size = 8
_year$ = 16						; size = 4
_month$ = 20						; size = 4
_dom$ = 24						; size = 4
_dow$ = 28						; size = 4
?dayToFields@Grego@icu_56@@SAXNAAH000@Z PROC		; icu_56::Grego::dayToFields, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	lea	eax, DWORD PTR _doy_unused$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dom$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _day$[ebp]
	fstp	QWORD PTR [esp]
	call	?dayToFields@Grego@icu_56@@SAXNAAH0000@Z ; icu_56::Grego::dayToFields
	add	esp, 28					; 0000001cH
; Line 277
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@dayToField
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@dayToField:
	DD	1
	DD	$LN4@dayToField
$LN4@dayToField:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@dayToField
$LN3@dayToField:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?dayToFields@Grego@icu_56@@SAXNAAH000@Z ENDP		; icu_56::Grego::dayToFields
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareToRule@SimpleTimeZone@icu_56@@CAHCCCCCHHW4EMode@12@CCCH@Z
_TEXT	SEGMENT
tv128 = -208						; size = 4
_ruleDayOfMonth$ = -8					; size = 4
_month$ = 8						; size = 1
_monthLen$ = 12						; size = 1
_prevMonthLen$ = 16					; size = 1
_dayOfMonth$ = 20					; size = 1
_dayOfWeek$ = 24					; size = 1
_millis$ = 28						; size = 4
_millisDelta$ = 32					; size = 4
_ruleMode$ = 36						; size = 4
_ruleMonth$ = 40					; size = 1
_ruleDayOfWeek$ = 44					; size = 1
_ruleDay$ = 48						; size = 1
_ruleMillis$ = 52					; size = 4
?compareToRule@SimpleTimeZone@icu_56@@CAHCCCCCHHW4EMode@12@CCCH@Z PROC ; icu_56::SimpleTimeZone::compareToRule, COMDAT
; File d:\mozilla\intl\icu\source\i18n\simpletz.cpp
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 576
	mov	eax, DWORD PTR _millis$[ebp]
	add	eax, DWORD PTR _millisDelta$[ebp]
	mov	DWORD PTR _millis$[ebp], eax
$LN25@compareToR:
; Line 577
	cmp	DWORD PTR _millis$[ebp], 86400000	; 05265c00H
	jl	SHORT $LN22@compareToR
; Line 578
	mov	eax, DWORD PTR _millis$[ebp]
	sub	eax, 86400000				; 05265c00H
	mov	DWORD PTR _millis$[ebp], eax
; Line 579
	mov	al, BYTE PTR _dayOfMonth$[ebp]
	add	al, 1
	mov	BYTE PTR _dayOfMonth$[ebp], al
; Line 580
	movsx	eax, BYTE PTR _dayOfWeek$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	add	edx, 1
	mov	BYTE PTR _dayOfWeek$[ebp], dl
; Line 581
	movsx	eax, BYTE PTR _dayOfMonth$[ebp]
	movsx	ecx, BYTE PTR _monthLen$[ebp]
	cmp	eax, ecx
	jle	SHORT $LN23@compareToR
; Line 582
	mov	BYTE PTR _dayOfMonth$[ebp], 1
; Line 587
	mov	al, BYTE PTR _month$[ebp]
	add	al, 1
	mov	BYTE PTR _month$[ebp], al
$LN23@compareToR:
; Line 589
	jmp	SHORT $LN25@compareToR
$LN22@compareToR:
; Line 590
	cmp	DWORD PTR _millis$[ebp], 0
	jge	SHORT $LN21@compareToR
; Line 591
	mov	eax, DWORD PTR _millis$[ebp]
	add	eax, 86400000				; 05265c00H
	mov	DWORD PTR _millis$[ebp], eax
; Line 592
	mov	al, BYTE PTR _dayOfMonth$[ebp]
	sub	al, 1
	mov	BYTE PTR _dayOfMonth$[ebp], al
; Line 593
	movsx	eax, BYTE PTR _dayOfWeek$[ebp]
	add	eax, 5
	cdq
	mov	ecx, 7
	idiv	ecx
	add	edx, 1
	mov	BYTE PTR _dayOfWeek$[ebp], dl
; Line 594
	movsx	eax, BYTE PTR _dayOfMonth$[ebp]
	cmp	eax, 1
	jge	SHORT $LN20@compareToR
; Line 595
	mov	al, BYTE PTR _prevMonthLen$[ebp]
	mov	BYTE PTR _dayOfMonth$[ebp], al
; Line 596
	mov	al, BYTE PTR _month$[ebp]
	sub	al, 1
	mov	BYTE PTR _month$[ebp], al
$LN20@compareToR:
; Line 598
	jmp	SHORT $LN22@compareToR
$LN21@compareToR:
; Line 602
	movsx	eax, BYTE PTR _month$[ebp]
	movsx	ecx, BYTE PTR _ruleMonth$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN19@compareToR
	or	eax, -1
	jmp	$LN26@compareToR
	jmp	SHORT $LN18@compareToR
$LN19@compareToR:
; Line 603
	movsx	eax, BYTE PTR _month$[ebp]
	movsx	ecx, BYTE PTR _ruleMonth$[ebp]
	cmp	eax, ecx
	jle	SHORT $LN18@compareToR
	mov	eax, 1
	jmp	$LN26@compareToR
$LN18@compareToR:
; Line 606
	mov	DWORD PTR _ruleDayOfMonth$[ebp], 0
; Line 609
	movsx	eax, BYTE PTR _ruleDay$[ebp]
	movsx	ecx, BYTE PTR _monthLen$[ebp]
	cmp	eax, ecx
	jle	SHORT $LN16@compareToR
; Line 610
	mov	al, BYTE PTR _monthLen$[ebp]
	mov	BYTE PTR _ruleDay$[ebp], al
$LN16@compareToR:
; Line 613
	mov	eax, DWORD PTR _ruleMode$[ebp]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR tv128[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv128[ebp], ecx
	cmp	DWORD PTR tv128[ebp], 3
	ja	$LN14@compareToR
	mov	edx, DWORD PTR tv128[ebp]
	jmp	DWORD PTR $LN28@compareToR[edx*4]
$LN13@compareToR:
; Line 617
	movsx	eax, BYTE PTR _ruleDay$[ebp]
	mov	DWORD PTR _ruleDayOfMonth$[ebp], eax
; Line 618
	jmp	$LN14@compareToR
$LN12@compareToR:
; Line 626
	movsx	eax, BYTE PTR _ruleDay$[ebp]
	test	eax, eax
	jle	SHORT $LN11@compareToR
; Line 628
	movsx	ecx, BYTE PTR _ruleDay$[ebp]
	sub	ecx, 1
	imul	ecx, 7
	movsx	eax, BYTE PTR _ruleDayOfWeek$[ebp]
	add	eax, 7
	movsx	edx, BYTE PTR _dayOfWeek$[ebp]
	movsx	esi, BYTE PTR _dayOfMonth$[ebp]
	sub	edx, esi
	add	edx, 1
	sub	eax, edx
	cdq
	mov	esi, 7
	idiv	esi
	lea	eax, DWORD PTR [ecx+edx+1]
	mov	DWORD PTR _ruleDayOfMonth$[ebp], eax
; Line 632
	jmp	SHORT $LN10@compareToR
$LN11@compareToR:
; Line 638
	movsx	ecx, BYTE PTR _monthLen$[ebp]
	movsx	edx, BYTE PTR _ruleDay$[ebp]
	add	edx, 1
	imul	edx, 7
	add	ecx, edx
	movsx	eax, BYTE PTR _dayOfWeek$[ebp]
	movsx	edx, BYTE PTR _monthLen$[ebp]
	add	eax, edx
	movsx	edx, BYTE PTR _dayOfMonth$[ebp]
	sub	eax, edx
	add	eax, 7
	movsx	edx, BYTE PTR _ruleDayOfWeek$[ebp]
	sub	eax, edx
	cdq
	mov	esi, 7
	idiv	esi
	sub	ecx, edx
	mov	DWORD PTR _ruleDayOfMonth$[ebp], ecx
$LN10@compareToR:
; Line 640
	jmp	SHORT $LN14@compareToR
$LN9@compareToR:
; Line 644
	movsx	ecx, BYTE PTR _ruleDay$[ebp]
	movsx	eax, BYTE PTR _ruleDayOfWeek$[ebp]
	add	eax, 49					; 00000031H
	movsx	edx, BYTE PTR _ruleDay$[ebp]
	sub	eax, edx
	movsx	edx, BYTE PTR _dayOfWeek$[ebp]
	sub	eax, edx
	movsx	edx, BYTE PTR _dayOfMonth$[ebp]
	add	eax, edx
	cdq
	mov	esi, 7
	idiv	esi
	add	ecx, edx
	mov	DWORD PTR _ruleDayOfMonth$[ebp], ecx
; Line 645
	jmp	SHORT $LN14@compareToR
$LN8@compareToR:
; Line 649
	movsx	ecx, BYTE PTR _ruleDay$[ebp]
	movsx	edx, BYTE PTR _ruleDayOfWeek$[ebp]
	mov	eax, 49					; 00000031H
	sub	eax, edx
	movsx	edx, BYTE PTR _ruleDay$[ebp]
	add	eax, edx
	movsx	edx, BYTE PTR _dayOfWeek$[ebp]
	add	eax, edx
	movsx	edx, BYTE PTR _dayOfMonth$[ebp]
	sub	eax, edx
	cdq
	mov	esi, 7
	idiv	esi
	sub	ecx, edx
	mov	DWORD PTR _ruleDayOfMonth$[ebp], ecx
$LN14@compareToR:
; Line 656
	movsx	eax, BYTE PTR _dayOfMonth$[ebp]
	cmp	eax, DWORD PTR _ruleDayOfMonth$[ebp]
	jge	SHORT $LN7@compareToR
	or	eax, -1
	jmp	SHORT $LN26@compareToR
	jmp	SHORT $LN6@compareToR
$LN7@compareToR:
; Line 657
	movsx	eax, BYTE PTR _dayOfMonth$[ebp]
	cmp	eax, DWORD PTR _ruleDayOfMonth$[ebp]
	jle	SHORT $LN6@compareToR
	mov	eax, 1
	jmp	SHORT $LN26@compareToR
$LN6@compareToR:
; Line 660
	mov	eax, DWORD PTR _millis$[ebp]
	cmp	eax, DWORD PTR _ruleMillis$[ebp]
	jge	SHORT $LN4@compareToR
	or	eax, -1
	jmp	SHORT $LN26@compareToR
	jmp	SHORT $LN26@compareToR
$LN4@compareToR:
; Line 661
	mov	eax, DWORD PTR _millis$[ebp]
	cmp	eax, DWORD PTR _ruleMillis$[ebp]
	jle	SHORT $LN2@compareToR
	mov	eax, 1
	jmp	SHORT $LN26@compareToR
	jmp	SHORT $LN26@compareToR
$LN2@compareToR:
; Line 662
	xor	eax, eax
$LN26@compareToR:
; Line 663
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN28@compareToR:
	DD	$LN13@compareToR
	DD	$LN12@compareToR
	DD	$LN9@compareToR
	DD	$LN8@compareToR
?compareToRule@SimpleTimeZone@icu_56@@CAHCCCCCHHW4EMode@12@CCCH@Z ENDP ; icu_56::SimpleTimeZone::compareToRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRawOffset@SimpleTimeZone@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRawOffset@SimpleTimeZone@icu_56@@UBEHXZ PROC	; icu_56::SimpleTimeZone::getRawOffset, COMDAT
; _this$ = ecx
; Line 669
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 670
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
; Line 671
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRawOffset@SimpleTimeZone@icu_56@@UBEHXZ ENDP	; icu_56::SimpleTimeZone::getRawOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setRawOffset@SimpleTimeZone@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offsetMillis$ = 8					; size = 4
?setRawOffset@SimpleTimeZone@icu_56@@UAEXH@Z PROC	; icu_56::SimpleTimeZone::setRawOffset, COMDAT
; _this$ = ecx
; Line 677
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 678
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offsetMillis$[ebp]
	mov	DWORD PTR [eax+96], ecx
; Line 679
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
; Line 680
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setRawOffset@SimpleTimeZone@icu_56@@UAEXH@Z ENDP	; icu_56::SimpleTimeZone::setRawOffset
_TEXT	ENDS
PUBLIC	?setDSTSavings@SimpleTimeZone@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDSTSavings@SimpleTimeZone@icu_56@@QAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_millisSavedDuringDST$ = 8				; size = 4
_status$ = 12						; size = 4
?setDSTSavings@SimpleTimeZone@icu_56@@QAEXHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setDSTSavings, COMDAT
; _this$ = ecx
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 687
	cmp	DWORD PTR _millisSavedDuringDST$[ebp], 0
	jg	SHORT $LN2@setDSTSavi
; Line 688
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 690
	jmp	SHORT $LN1@setDSTSavi
$LN2@setDSTSavi:
; Line 691
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _millisSavedDuringDST$[ebp]
	mov	DWORD PTR [eax+112], ecx
$LN1@setDSTSavi:
; Line 693
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
; Line 694
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?setDSTSavings@SimpleTimeZone@icu_56@@QAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDSTSavings@SimpleTimeZone@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDSTSavings@SimpleTimeZone@icu_56@@UBEHXZ PROC	; icu_56::SimpleTimeZone::getDSTSavings, COMDAT
; _this$ = ecx
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 701
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
; Line 702
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDSTSavings@SimpleTimeZone@icu_56@@UBEHXZ ENDP	; icu_56::SimpleTimeZone::getDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?useDaylightTime@SimpleTimeZone@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?useDaylightTime@SimpleTimeZone@icu_56@@UBECXZ PROC	; icu_56::SimpleTimeZone::useDaylightTime, COMDAT
; _this$ = ecx
; Line 708
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 709
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+100]
; Line 710
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?useDaylightTime@SimpleTimeZone@icu_56@@UBECXZ ENDP	; icu_56::SimpleTimeZone::useDaylightTime
_TEXT	ENDS
EXTRN	??0GregorianCalendar@icu_56@@QAE@ABVTimeZone@1@AAW4UErrorCode@@@Z:PROC ; icu_56::GregorianCalendar::GregorianCalendar
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z$0
__ehfuncinfo$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv81 = -292						; size = 4
$T83252 = -284						; size = 4
$T83253 = -272						; size = 4
$T83256 = -260						; size = 4
$T83257 = -248						; size = 4
_result$ = -41						; size = 1
_gc$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_date$ = 8						; size = 8
_status$ = 16						; size = 4
?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::inDaylightTime, COMDAT
; _this$ = ecx
; Line 719
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 723
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@inDaylight
	xor	al, al
	jmp	$LN3@inDaylight
$LN2@inDaylight:
; Line 724
	mov	esi, esp
	push	648					; 00000288H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83253[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83253[ebp], 0
	je	SHORT $LN5@inDaylight
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T83253[ebp]
	call	??0GregorianCalendar@icu_56@@QAE@ABVTimeZone@1@AAW4UErrorCode@@@Z ; icu_56::GregorianCalendar::GregorianCalendar
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN6@inDaylight
$LN5@inDaylight:
	mov	DWORD PTR tv81[ebp], 0
$LN6@inDaylight:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T83252[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T83252[ebp]
	mov	DWORD PTR _gc$[ebp], eax
; Line 726
	cmp	DWORD PTR _gc$[ebp], 0
	jne	SHORT $LN1@inDaylight
; Line 727
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 728
	xor	al, al
	jmp	$LN3@inDaylight
$LN1@inDaylight:
; Line 730
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _gc$[ebp]
	call	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime
; Line 731
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gc$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _gc$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _result$[ebp], al
; Line 732
	mov	eax, DWORD PTR _gc$[ebp]
	mov	DWORD PTR $T83257[ebp], eax
	mov	ecx, DWORD PTR $T83257[ebp]
	mov	DWORD PTR $T83256[ebp], ecx
	cmp	DWORD PTR $T83256[ebp], 0
	je	SHORT $LN7@inDaylight
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T83256[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T83256[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN8@inDaylight
$LN7@inDaylight:
	mov	DWORD PTR tv140[ebp], 0
$LN8@inDaylight:
; Line 733
	mov	al, BYTE PTR _result$[ebp]
$LN3@inDaylight:
; Line 734
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T83253[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?inDaylightTime@SimpleTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::inDaylightTime
EXTRN	__imp_??9type_info@@QBE_NABV0@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasSameRules@SimpleTimeZone@icu_56@@UBECABVTimeZone@2@@Z
_TEXT	SEGMENT
tv179 = -217						; size = 1
_that$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?hasSameRules@SimpleTimeZone@icu_56@@UBECABVTimeZone@2@@Z PROC ; icu_56::SimpleTimeZone::hasSameRules, COMDAT
; _this$ = ecx
; Line 745
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 746
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN2@hasSameRul
	mov	al, 1
	jmp	$LN3@hasSameRul
$LN2@hasSameRul:
; Line 747
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@hasSameRul
	xor	al, al
	jmp	$LN3@hasSameRul
$LN1@hasSameRul:
; Line 748
	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR _that$[ebp], eax
; Line 766
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+96]
	cmp	edx, DWORD PTR [ecx+96]
	jne	$LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	mov	edx, DWORD PTR _that$[ebp]
	movsx	eax, BYTE PTR [edx+100]
	cmp	ecx, eax
	jne	$LN6@hasSameRul
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+100]
	test	edx, edx
	je	$LN7@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+112]
	cmp	edx, DWORD PTR [ecx+112]
	jne	$LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+104]
	cmp	edx, DWORD PTR [ecx+104]
	jne	$LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	mov	edx, DWORD PTR _that$[ebp]
	movsx	eax, BYTE PTR [edx+68]
	cmp	ecx, eax
	jne	$LN6@hasSameRul
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+69]
	mov	eax, DWORD PTR _that$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	edx, ecx
	jne	$LN6@hasSameRul
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+70]
	mov	ecx, DWORD PTR _that$[ebp]
	movsx	edx, BYTE PTR [ecx+70]
	cmp	eax, edx
	jne	$LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+72]
	cmp	edx, DWORD PTR [ecx+72]
	jne	$LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+76]
	cmp	edx, DWORD PTR [ecx+76]
	jne	SHORT $LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+108]
	jne	SHORT $LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	mov	edx, DWORD PTR _that$[ebp]
	movsx	eax, BYTE PTR [edx+84]
	cmp	ecx, eax
	jne	SHORT $LN6@hasSameRul
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+85]
	mov	eax, DWORD PTR _that$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	cmp	edx, ecx
	jne	SHORT $LN6@hasSameRul
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+86]
	mov	ecx, DWORD PTR _that$[ebp]
	movsx	edx, BYTE PTR [ecx+86]
	cmp	eax, edx
	jne	SHORT $LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+88]
	cmp	edx, DWORD PTR [ecx+88]
	jne	SHORT $LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+80]
	cmp	edx, DWORD PTR [ecx+80]
	jne	SHORT $LN6@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+92]
	cmp	edx, DWORD PTR [ecx+92]
	jne	SHORT $LN6@hasSameRul
$LN7@hasSameRul:
	mov	BYTE PTR tv179[ebp], 1
	jmp	SHORT $LN8@hasSameRul
$LN6@hasSameRul:
	mov	BYTE PTR tv179[ebp], 0
$LN8@hasSameRul:
	mov	al, BYTE PTR tv179[ebp]
$LN3@hasSameRul:
; Line 767
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasSameRules@SimpleTimeZone@icu_56@@UBECABVTimeZone@2@@Z ENDP ; icu_56::SimpleTimeZone::hasSameRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?decodeRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?decodeRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::decodeRules, COMDAT
; _this$ = ecx
; Line 836
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 837
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?decodeStartRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeStartRule
; Line 838
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?decodeEndRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::decodeEndRule
; Line 839
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?decodeRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::decodeRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?decodeStartRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?decodeStartRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::decodeStartRule, COMDAT
; _this$ = ecx
; Line 867
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 868
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@decodeStar
	jmp	$LN21@decodeStar
$LN20@decodeStar:
; Line 870
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	test	ecx, ecx
	je	SHORT $LN23@decodeStar
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+85]
	test	eax, eax
	je	SHORT $LN23@decodeStar
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN24@decodeStar
$LN23@decodeStar:
	mov	DWORD PTR tv75[ebp], 0
$LN24@decodeStar:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR tv75[ebp]
	mov	BYTE PTR [ecx+100], dl
; Line 871
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	je	SHORT $LN19@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	jne	SHORT $LN19@decodeStar
; Line 872
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 3600000		; 0036ee80H
$LN19@decodeStar:
; Line 874
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	test	ecx, ecx
	je	$LN21@decodeStar
; Line 875
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	jl	SHORT $LN16@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	cmp	ecx, 11					; 0000000bH
	jle	SHORT $LN17@decodeStar
$LN16@decodeStar:
; Line 876
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 877
	jmp	$LN21@decodeStar
$LN17@decodeStar:
; Line 880
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jl	SHORT $LN14@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 86400000		; 05265c00H
	jg	SHORT $LN14@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jl	SHORT $LN14@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 2
	jle	SHORT $LN15@decodeStar
$LN14@decodeStar:
; Line 881
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 882
	jmp	$LN21@decodeStar
$LN15@decodeStar:
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	test	ecx, ecx
	jne	SHORT $LN13@decodeStar
; Line 885
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 886
	jmp	SHORT $LN12@decodeStar
$LN13@decodeStar:
; Line 887
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	test	ecx, ecx
	jle	SHORT $LN11@decodeStar
; Line 888
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 889
	jmp	SHORT $LN10@decodeStar
$LN11@decodeStar:
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	neg	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+70], cl
; Line 891
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	test	ecx, ecx
	jle	SHORT $LN9@decodeStar
; Line 892
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 3
; Line 893
	jmp	SHORT $LN10@decodeStar
$LN9@decodeStar:
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	neg	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+69], cl
; Line 895
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 4
$LN10@decodeStar:
; Line 898
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	cmp	ecx, 7
	jle	SHORT $LN12@decodeStar
; Line 899
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 900
	jmp	SHORT $LN21@decodeStar
$LN12@decodeStar:
; Line 903
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 2
	jne	SHORT $LN6@decodeStar
; Line 904
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, -5					; fffffffbH
	jl	SHORT $LN4@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, 5
	jle	SHORT $LN5@decodeStar
$LN4@decodeStar:
; Line 905
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 906
	jmp	SHORT $LN21@decodeStar
$LN5@decodeStar:
; Line 907
	jmp	SHORT $LN21@decodeStar
$LN6@decodeStar:
; Line 908
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, 1
	jl	SHORT $LN1@decodeStar
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+68]
	movsx	edx, BYTE PTR ?STATICMONTHLENGTH@SimpleTimeZone@icu_56@@0QBCB[eax]
	cmp	ecx, edx
	jle	SHORT $LN21@decodeStar
$LN1@decodeStar:
; Line 909
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN21@decodeStar:
; Line 913
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?decodeStartRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::decodeStartRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?decodeEndRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?decodeEndRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::decodeEndRule, COMDAT
; _this$ = ecx
; Line 922
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 923
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@decodeEndR
	jmp	$LN21@decodeEndR
$LN20@decodeEndR:
; Line 925
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	test	ecx, ecx
	je	SHORT $LN23@decodeEndR
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+85]
	test	eax, eax
	je	SHORT $LN23@decodeEndR
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN24@decodeEndR
$LN23@decodeEndR:
	mov	DWORD PTR tv75[ebp], 0
$LN24@decodeEndR:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR tv75[ebp]
	mov	BYTE PTR [ecx+100], dl
; Line 926
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	je	SHORT $LN19@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	jne	SHORT $LN19@decodeEndR
; Line 927
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 3600000		; 0036ee80H
$LN19@decodeEndR:
; Line 929
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	je	$LN21@decodeEndR
; Line 930
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	jl	SHORT $LN16@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	cmp	ecx, 11					; 0000000bH
	jle	SHORT $LN17@decodeEndR
$LN16@decodeEndR:
; Line 931
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 932
	jmp	$LN21@decodeEndR
$LN17@decodeEndR:
; Line 935
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 0
	jl	SHORT $LN14@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 86400000		; 05265c00H
	jg	SHORT $LN14@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jl	SHORT $LN14@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 2
	jle	SHORT $LN15@decodeEndR
$LN14@decodeEndR:
; Line 936
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 937
	jmp	$LN21@decodeEndR
$LN15@decodeEndR:
; Line 939
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	test	ecx, ecx
	jne	SHORT $LN13@decodeEndR
; Line 940
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 1
; Line 941
	jmp	SHORT $LN12@decodeEndR
$LN13@decodeEndR:
; Line 942
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	test	ecx, ecx
	jle	SHORT $LN11@decodeEndR
; Line 943
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 2
; Line 944
	jmp	SHORT $LN10@decodeEndR
$LN11@decodeEndR:
; Line 945
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	neg	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+86], cl
; Line 946
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	jle	SHORT $LN9@decodeEndR
; Line 947
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 3
; Line 948
	jmp	SHORT $LN10@decodeEndR
$LN9@decodeEndR:
; Line 949
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	neg	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+85], cl
; Line 950
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 4
$LN10@decodeEndR:
; Line 953
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	cmp	ecx, 7
	jle	SHORT $LN12@decodeEndR
; Line 954
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 955
	jmp	SHORT $LN21@decodeEndR
$LN12@decodeEndR:
; Line 958
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 2
	jne	SHORT $LN6@decodeEndR
; Line 959
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	cmp	ecx, -5					; fffffffbH
	jl	SHORT $LN4@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	cmp	ecx, 5
	jle	SHORT $LN5@decodeEndR
$LN4@decodeEndR:
; Line 960
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 961
	jmp	SHORT $LN21@decodeEndR
$LN5@decodeEndR:
; Line 962
	jmp	SHORT $LN21@decodeEndR
$LN6@decodeEndR:
; Line 963
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	cmp	ecx, 1
	jl	SHORT $LN1@decodeEndR
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+84]
	movsx	edx, BYTE PTR ?STATICMONTHLENGTH@SimpleTimeZone@icu_56@@0QBCB[eax]
	cmp	ecx, edx
	jle	SHORT $LN21@decodeEndR
$LN1@decodeEndR:
; Line 964
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN21@decodeEndR:
; Line 968
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?decodeEndRule@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::decodeEndRule
_TEXT	ENDS
PUBLIC	?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::checkTransitionRules
EXTRN	?setTo@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z:PROC ; icu_56::TimeZoneTransition::setTo
EXTRN	?setFrom@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z:PROC ; icu_56::TimeZoneTransition::setFrom
EXTRN	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z:PROC ; icu_56::TimeZoneTransition::setTime
EXTRN	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getRawOffset
EXTRN	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getDSTSavings
EXTRN	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z:PROC ; icu_56::TimeZoneTransition::operator=
EXTRN	?getTime@TimeZoneTransition@icu_56@@QBENXZ:PROC	; icu_56::TimeZoneTransition::getTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNextTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
_TEXT	SEGMENT
_dstAvail$ = -89					; size = 1
_stdAvail$ = -77					; size = 1
_dstDate$ = -68						; size = 8
_stdDate$ = -52						; size = 8
_firstTransitionTime$ = -36				; size = 8
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_inclusive$ = 16					; size = 1
_result$ = 20						; size = 4
?getNextTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z PROC ; icu_56::SimpleTimeZone::getNextTransition, COMDAT
; _this$ = ecx
; Line 971
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 972
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	jne	SHORT $LN8@getNextTra
; Line 973
	xor	al, al
	jmp	$LN9@getNextTra
$LN8@getNextTra:
; Line 976
	mov	DWORD PTR _status$[ebp], 0
; Line 977
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::checkTransitionRules
; Line 978
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@getNextTra
; Line 979
	xor	al, al
	jmp	$LN9@getNextTra
$LN7@getNextTra:
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _firstTransitionTime$[ebp]
; Line 983
	fld	QWORD PTR _firstTransitionTime$[ebp]
	fcomp	QWORD PTR _base$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN5@getNextTra
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	je	SHORT $LN6@getNextTra
	fld	QWORD PTR _base$[ebp]
	fld	QWORD PTR _firstTransitionTime$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@getNextTra
$LN5@getNextTra:
; Line 984
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
$LN6@getNextTra:
; Line 987
	mov	esi, esp
	lea	eax, DWORD PTR _stdDate$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _stdAvail$[ebp], al
; Line 988
	mov	esi, esp
	lea	eax, DWORD PTR _dstDate$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _dstAvail$[ebp], al
; Line 989
	movsx	eax, BYTE PTR _stdAvail$[ebp]
	test	eax, eax
	je	SHORT $LN4@getNextTra
	movsx	eax, BYTE PTR _dstAvail$[ebp]
	test	eax, eax
	je	SHORT $LN3@getNextTra
	fld	QWORD PTR _dstDate$[ebp]
	fcomp	QWORD PTR _stdDate$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@getNextTra
$LN3@getNextTra:
; Line 990
	sub	esp, 8
	fld	QWORD PTR _stdDate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 991
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setFrom@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setFrom
; Line 992
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTo@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setTo
; Line 993
	mov	al, 1
	jmp	SHORT $LN9@getNextTra
$LN4@getNextTra:
; Line 995
	movsx	eax, BYTE PTR _dstAvail$[ebp]
	test	eax, eax
	je	SHORT $LN2@getNextTra
	movsx	eax, BYTE PTR _stdAvail$[ebp]
	test	eax, eax
	je	SHORT $LN1@getNextTra
	fld	QWORD PTR _stdDate$[ebp]
	fcomp	QWORD PTR _dstDate$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@getNextTra
$LN1@getNextTra:
; Line 996
	sub	esp, 8
	fld	QWORD PTR _dstDate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 997
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setFrom@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setFrom
; Line 998
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTo@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setTo
; Line 999
	mov	al, 1
	jmp	SHORT $LN9@getNextTra
$LN2@getNextTra:
; Line 1001
	xor	al, al
$LN9@getNextTra:
; Line 1002
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@getNextTra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN15@getNextTra:
	DD	3
	DD	$LN14@getNextTra
$LN14@getNextTra:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@getNextTra
	DD	-52					; ffffffccH
	DD	8
	DD	$LN12@getNextTra
	DD	-68					; ffffffbcH
	DD	8
	DD	$LN13@getNextTra
$LN13@getNextTra:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN12@getNextTra:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN11@getNextTra:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?getNextTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ENDP ; icu_56::SimpleTimeZone::getNextTransition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPreviousTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
_TEXT	SEGMENT
_dstAvail$ = -89					; size = 1
_stdAvail$ = -77					; size = 1
_dstDate$ = -68						; size = 8
_stdDate$ = -52						; size = 8
_firstTransitionTime$ = -36				; size = 8
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_inclusive$ = 16					; size = 1
_result$ = 20						; size = 4
?getPreviousTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z PROC ; icu_56::SimpleTimeZone::getPreviousTransition, COMDAT
; _this$ = ecx
; Line 1005
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1006
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	jne	SHORT $LN8@getPreviou
; Line 1007
	xor	al, al
	jmp	$LN9@getPreviou
$LN8@getPreviou:
; Line 1010
	mov	DWORD PTR _status$[ebp], 0
; Line 1011
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::checkTransitionRules
; Line 1012
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@getPreviou
; Line 1013
	xor	al, al
	jmp	$LN9@getPreviou
$LN7@getPreviou:
; Line 1016
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _firstTransitionTime$[ebp]
; Line 1017
	fld	QWORD PTR _firstTransitionTime$[ebp]
	fcomp	QWORD PTR _base$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN5@getPreviou
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	jne	SHORT $LN6@getPreviou
	fld	QWORD PTR _base$[ebp]
	fld	QWORD PTR _firstTransitionTime$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@getPreviou
$LN5@getPreviou:
; Line 1018
	xor	al, al
	jmp	$LN9@getPreviou
$LN6@getPreviou:
; Line 1021
	mov	esi, esp
	lea	eax, DWORD PTR _stdDate$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _stdAvail$[ebp], al
; Line 1022
	mov	esi, esp
	lea	eax, DWORD PTR _dstDate$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _dstAvail$[ebp], al
; Line 1023
	movsx	eax, BYTE PTR _stdAvail$[ebp]
	test	eax, eax
	je	SHORT $LN4@getPreviou
	movsx	eax, BYTE PTR _dstAvail$[ebp]
	test	eax, eax
	je	SHORT $LN3@getPreviou
	fld	QWORD PTR _dstDate$[ebp]
	fcomp	QWORD PTR _stdDate$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@getPreviou
$LN3@getPreviou:
; Line 1024
	sub	esp, 8
	fld	QWORD PTR _stdDate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setFrom@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setFrom
; Line 1026
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTo@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setTo
; Line 1027
	mov	al, 1
	jmp	SHORT $LN9@getPreviou
$LN4@getPreviou:
; Line 1029
	movsx	eax, BYTE PTR _dstAvail$[ebp]
	test	eax, eax
	je	SHORT $LN2@getPreviou
	movsx	eax, BYTE PTR _stdAvail$[ebp]
	test	eax, eax
	je	SHORT $LN1@getPreviou
	fld	QWORD PTR _stdDate$[ebp]
	fcomp	QWORD PTR _dstDate$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@getPreviou
$LN1@getPreviou:
; Line 1030
	sub	esp, 8
	fld	QWORD PTR _dstDate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 1031
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setFrom@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setFrom
; Line 1032
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTo@TimeZoneTransition@icu_56@@QAEXABVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::setTo
; Line 1033
	mov	al, 1
	jmp	SHORT $LN9@getPreviou
$LN2@getPreviou:
; Line 1035
	xor	al, al
$LN9@getPreviou:
; Line 1036
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@getPreviou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN15@getPreviou:
	DD	3
	DD	$LN14@getPreviou
$LN14@getPreviou:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@getPreviou
	DD	-52					; ffffffccH
	DD	8
	DD	$LN12@getPreviou
	DD	-68					; ffffffbcH
	DD	8
	DD	$LN13@getPreviou
$LN13@getPreviou:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN12@getPreviou:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN11@getPreviou:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?getPreviousTransition@SimpleTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ENDP ; icu_56::SimpleTimeZone::getPreviousTransition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ PROC ; icu_56::SimpleTimeZone::clearTransitionRules, COMDAT
; _this$ = ecx
; Line 1039
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 1041
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 1042
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 1043
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 1044
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
; Line 1045
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ENDP ; icu_56::SimpleTimeZone::clearTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv151 = -304						; size = 4
tv137 = -304						; size = 4
tv91 = -304						; size = 4
tv77 = -304						; size = 4
$T83301 = -296						; size = 4
$T83302 = -284						; size = 4
$T83305 = -272						; size = 4
$T83306 = -260						; size = 4
$T83309 = -248						; size = 4
$T83310 = -236						; size = 4
$T83313 = -224						; size = 4
$T83314 = -212						; size = 4
_this$ = -8						; size = 4
?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ PROC ; icu_56::SimpleTimeZone::deleteTransitionRules, COMDAT
; _this$ = ecx
; Line 1048
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1049
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN4@deleteTran
; Line 1050
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR $T83302[ebp], ecx
	mov	edx, DWORD PTR $T83302[ebp]
	mov	DWORD PTR $T83301[ebp], edx
	cmp	DWORD PTR $T83301[ebp], 0
	je	SHORT $LN7@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83301[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83301[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@deleteTran
$LN7@deleteTran:
	mov	DWORD PTR tv77[ebp], 0
$LN4@deleteTran:
; Line 1052
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN3@deleteTran
; Line 1053
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR $T83306[ebp], ecx
	mov	edx, DWORD PTR $T83306[ebp]
	mov	DWORD PTR $T83305[ebp], edx
	cmp	DWORD PTR $T83305[ebp], 0
	je	SHORT $LN9@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83305[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83305[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN3@deleteTran
$LN9@deleteTran:
	mov	DWORD PTR tv91[ebp], 0
$LN3@deleteTran:
; Line 1055
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN2@deleteTran
; Line 1056
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR $T83310[ebp], ecx
	mov	edx, DWORD PTR $T83310[ebp]
	mov	DWORD PTR $T83309[ebp], edx
	cmp	DWORD PTR $T83309[ebp], 0
	je	SHORT $LN11@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83309[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83309[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN2@deleteTran
$LN11@deleteTran:
	mov	DWORD PTR tv137[ebp], 0
$LN2@deleteTran:
; Line 1058
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN1@deleteTran
; Line 1059
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR $T83314[ebp], ecx
	mov	edx, DWORD PTR $T83314[ebp]
	mov	DWORD PTR $T83313[ebp], edx
	cmp	DWORD PTR $T83313[ebp], 0
	je	SHORT $LN13@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83313[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83313[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN1@deleteTran
$LN13@deleteTran:
	mov	DWORD PTR tv151[ebp], 0
$LN1@deleteTran:
; Line 1061
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::clearTransitionRules
; Line 1062
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ENDP ; icu_56::SimpleTimeZone::deleteTransitionRules
_TEXT	ENDS
PUBLIC	?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::initTransitionRules
EXTRN	_umtx_unlock_56:PROC
EXTRN	_umtx_lock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ncThis$75797 = -20					; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::checkTransitionRules, COMDAT
; _this$ = ecx
; Line 1081
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1082
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@checkTrans
; Line 1083
	jmp	SHORT $LN3@checkTrans
$LN2@checkTrans:
; Line 1085
	push	OFFSET _gLock
	call	_umtx_lock_56
	add	esp, 4
; Line 1086
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+116]
	test	ecx, ecx
	jne	SHORT $LN1@checkTrans
; Line 1087
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _ncThis$75797[ebp], eax
; Line 1088
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ncThis$75797[ebp]
	call	?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::initTransitionRules
$LN1@checkTrans:
; Line 1090
	push	OFFSET _gLock
	call	_umtx_unlock_56
	add	esp, 4
$LN3@checkTrans:
; Line 1091
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::checkTransitionRules
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z:PROC ; icu_56::TimeZoneTransition::TimeZoneTransition
EXTRN	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z:PROC ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
EXTRN	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z:PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
EXTRN	__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z:PROC
EXTRN	?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB:DWORD	; icu_56::AnnualTimeZoneRule::MAX_YEAR
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	020H
	DD	FLAT:__unwindtable$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$6
	DD	08H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$12
	DD	0eH
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$13
	DD	0fH
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$13
	DD	011H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$15
	DD	013H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$16
	DD	014H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$16
	DD	016H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$19
	DD	019H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$20
	DD	01aH
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$21
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$20
	DD	01cH
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$21
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$22
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$23
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv543 = -1316						; size = 4
tv492 = -1316						; size = 4
tv390 = -1316						; size = 4
tv244 = -1316						; size = 4
tv662 = -1312						; size = 4
tv646 = -1312						; size = 4
tv630 = -1312						; size = 4
tv609 = -1312						; size = 4
tv739 = -1308						; size = 4
tv725 = -1308						; size = 4
tv714 = -1308						; size = 4
tv691 = -1308						; size = 4
tv657 = -1304						; size = 4
tv641 = -1304						; size = 4
tv625 = -1304						; size = 4
tv604 = -1304						; size = 4
tv735 = -1300						; size = 4
tv721 = -1300						; size = 4
tv710 = -1300						; size = 4
tv687 = -1300						; size = 4
tv588 = -1300						; size = 4
tv564 = -1300						; size = 4
tv513 = -1300						; size = 4
tv352 = -1300						; size = 4
tv332 = -1300						; size = 4
tv312 = -1300						; size = 4
tv293 = -1300						; size = 4
tv276 = -1300						; size = 4
tv274 = -1300						; size = 4
tv199 = -1300						; size = 4
tv179 = -1300						; size = 4
tv159 = -1300						; size = 4
tv140 = -1300						; size = 4
tv91 = -1300						; size = 4
tv89 = -1300						; size = 4
$T75837 = -1292						; size = 64
$T75838 = -1220						; size = 64
$T75869 = -1148						; size = 64
$T75870 = -1076						; size = 64
$T75877 = -1004						; size = 64
$T75878 = -932						; size = 64
$T75888 = -860						; size = 64
$T75889 = -788						; size = 64
$T83324 = -716						; size = 4
$T83325 = -704						; size = 4
$T83328 = -692						; size = 4
$T83329 = -680						; size = 4
$T83332 = -668						; size = 4
$T83333 = -656						; size = 4
$T83336 = -644						; size = 4
$T83337 = -632						; size = 4
$T83340 = -620						; size = 4
$T83341 = -608						; size = 4
$T83346 = -596						; size = 4
$T83347 = -584						; size = 4
$T83350 = -572						; size = 4
$T83351 = -560						; size = 4
$T83354 = -548						; size = 4
$T83355 = -536						; size = 4
$T83358 = -524						; size = 4
$T83359 = -512						; size = 4
$T83362 = -500						; size = 4
$T83363 = -488						; size = 4
$T83366 = -476						; size = 4
$T83367 = -464						; size = 4
$T83370 = -452						; size = 4
$T83371 = -440						; size = 4
$T83374 = -428						; size = 4
$T83375 = -416						; size = 4
$T83378 = -404						; size = 4
$T83379 = -392						; size = 4
$T83382 = -380						; size = 4
$T83383 = -368						; size = 4
$T83392 = -356						; size = 4
_firstDstStart$75810 = -152				; size = 8
_firstStdStart$75809 = -136				; size = 8
_timeRuleType$75808 = -120				; size = 4
_dtRule$75807 = -108					; size = 4
_tzid$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::initTransitionRules, COMDAT
; _this$ = ecx
; Line 1094
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1304				; 00000518H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1316]
	mov	ecx, 326				; 00000146H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T83392[ebp], 0
; Line 1095
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@initTransi
; Line 1096
	jmp	$LN27@initTransi
$LN26@initTransi:
; Line 1098
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+116]
	test	ecx, ecx
	je	SHORT $LN25@initTransi
; Line 1099
	jmp	$LN27@initTransi
$LN25@initTransi:
; Line 1101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 1102
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1103
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 1105
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	je	$LN24@initTransi
; Line 1112
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 1
	jne	SHORT $LN29@initTransi
	mov	DWORD PTR tv89[ebp], 1
	jmp	SHORT $LN30@initTransi
$LN29@initTransi:
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+76], 2
	setne	dl
	sub	edx, 1
	and	edx, 2
	mov	DWORD PTR tv89[ebp], edx
$LN30@initTransi:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR _timeRuleType$75808[ebp], eax
; Line 1113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR tv91[ebp], ecx
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, 1
	mov	DWORD PTR tv91[ebp], edx
	cmp	DWORD PTR tv91[ebp], 3
	ja	$LN17@initTransi
	mov	eax, DWORD PTR tv91[ebp]
	jmp	DWORD PTR $LN109@initTransi[eax*4]
$LN21@initTransi:
; Line 1115
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83325[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T83325[ebp], 0
	je	SHORT $LN31@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR $T83325[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN32@initTransi
$LN31@initTransi:
	mov	DWORD PTR tv140[ebp], 0
$LN32@initTransi:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T83324[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T83324[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], edx
; Line 1116
	jmp	$LN22@initTransi
$LN20@initTransi:
; Line 1118
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83329[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T83329[ebp], 0
	je	SHORT $LN33@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+69]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+68]
	push	edx
	mov	ecx, DWORD PTR $T83329[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv159[ebp], eax
	jmp	SHORT $LN34@initTransi
$LN33@initTransi:
	mov	DWORD PTR tv159[ebp], 0
$LN34@initTransi:
	mov	eax, DWORD PTR tv159[ebp]
	mov	DWORD PTR $T83328[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83328[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], ecx
; Line 1119
	jmp	$LN22@initTransi
$LN19@initTransi:
; Line 1121
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83333[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T83333[ebp], 0
	je	SHORT $LN35@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+69]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+68]
	push	edx
	mov	ecx, DWORD PTR $T83333[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN36@initTransi
$LN35@initTransi:
	mov	DWORD PTR tv179[ebp], 0
$LN36@initTransi:
	mov	eax, DWORD PTR tv179[ebp]
	mov	DWORD PTR $T83332[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83332[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], ecx
; Line 1122
	jmp	$LN22@initTransi
$LN18@initTransi:
; Line 1124
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83337[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T83337[ebp], 0
	je	SHORT $LN37@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+69]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+68]
	push	edx
	mov	ecx, DWORD PTR $T83337[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN38@initTransi
$LN37@initTransi:
	mov	DWORD PTR tv199[ebp], 0
$LN38@initTransi:
	mov	eax, DWORD PTR tv199[ebp]
	mov	DWORD PTR $T83336[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83336[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], ecx
; Line 1125
	jmp	SHORT $LN22@initTransi
$LN17@initTransi:
; Line 1127
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
; Line 1128
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@initTransi
$LN22@initTransi:
; Line 1131
	cmp	DWORD PTR _dtRule$75807[ebp], 0
	jne	SHORT $LN16@initTransi
; Line 1132
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1133
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@initTransi
$LN16@initTransi:
; Line 1137
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83341[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T83341[ebp], 0
	je	$LN39@initTransi
	mov	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	mov	eax, DWORD PTR _dtRule$75807[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	push	OFFSET _DST_STR
	lea	ecx, DWORD PTR $T75837[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv687[ebp], eax
	mov	ecx, DWORD PTR tv687[ebp]
	mov	DWORD PTR tv604[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR $T83392[ebp]
	or	edx, 1
	mov	DWORD PTR $T83392[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv604[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T75838[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv691[ebp], eax
	mov	eax, DWORD PTR tv691[ebp]
	mov	DWORD PTR tv609[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR $T83392[ebp]
	or	ecx, 2
	mov	DWORD PTR $T83392[ebp], ecx
	mov	edx, DWORD PTR tv609[ebp]
	push	edx
	mov	ecx, DWORD PTR $T83341[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv244[ebp], eax
	jmp	SHORT $LN40@initTransi
$LN39@initTransi:
	mov	DWORD PTR tv244[ebp], 0
$LN40@initTransi:
	mov	eax, DWORD PTR tv244[ebp]
	mov	DWORD PTR $T83340[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T83340[ebp]
	mov	DWORD PTR [ecx+132], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 2
	je	SHORT $LN73@initTransi
	and	DWORD PTR $T83392[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75838[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN73@initTransi:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83392[ebp]
	and	ecx, 1
	je	SHORT $LN74@initTransi
	and	DWORD PTR $T83392[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75837[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN74@initTransi:
; Line 1140
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	jne	SHORT $LN15@initTransi
; Line 1141
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1142
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 1143
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@initTransi
$LN15@initTransi:
; Line 1147
	mov	esi, esp
	lea	eax, DWORD PTR _firstDstStart$75810[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1151
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 1
	jne	SHORT $LN41@initTransi
	mov	DWORD PTR tv274[ebp], 1
	jmp	SHORT $LN42@initTransi
$LN41@initTransi:
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+80], 2
	setne	dl
	sub	edx, 1
	and	edx, 2
	mov	DWORD PTR tv274[ebp], edx
$LN42@initTransi:
	mov	eax, DWORD PTR tv274[ebp]
	mov	DWORD PTR _timeRuleType$75808[ebp], eax
; Line 1152
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR tv276[ebp], ecx
	mov	edx, DWORD PTR tv276[ebp]
	sub	edx, 1
	mov	DWORD PTR tv276[ebp], edx
	cmp	DWORD PTR tv276[ebp], 3
	ja	$LN13@initTransi
	mov	eax, DWORD PTR tv276[ebp]
	jmp	DWORD PTR $LN110@initTransi[eax*4]
$LN12@initTransi:
; Line 1154
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83347[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T83347[ebp], 0
	je	SHORT $LN43@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR $T83347[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv293[ebp], eax
	jmp	SHORT $LN44@initTransi
$LN43@initTransi:
	mov	DWORD PTR tv293[ebp], 0
$LN44@initTransi:
	mov	ecx, DWORD PTR tv293[ebp]
	mov	DWORD PTR $T83346[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T83346[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], edx
; Line 1155
	jmp	$LN13@initTransi
$LN11@initTransi:
; Line 1157
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83351[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T83351[ebp], 0
	je	SHORT $LN45@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+85]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+84]
	push	edx
	mov	ecx, DWORD PTR $T83351[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv312[ebp], eax
	jmp	SHORT $LN46@initTransi
$LN45@initTransi:
	mov	DWORD PTR tv312[ebp], 0
$LN46@initTransi:
	mov	eax, DWORD PTR tv312[ebp]
	mov	DWORD PTR $T83350[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83350[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], ecx
; Line 1158
	jmp	$LN13@initTransi
$LN10@initTransi:
; Line 1160
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83355[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T83355[ebp], 0
	je	SHORT $LN47@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+85]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+84]
	push	edx
	mov	ecx, DWORD PTR $T83355[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv332[ebp], eax
	jmp	SHORT $LN48@initTransi
$LN47@initTransi:
	mov	DWORD PTR tv332[ebp], 0
$LN48@initTransi:
	mov	eax, DWORD PTR tv332[ebp]
	mov	DWORD PTR $T83354[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83354[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], ecx
; Line 1161
	jmp	$LN13@initTransi
$LN9@initTransi:
; Line 1163
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83359[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T83359[ebp], 0
	je	SHORT $LN49@initTransi
	mov	eax, DWORD PTR _timeRuleType$75808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+86]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+85]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+84]
	push	edx
	mov	ecx, DWORD PTR $T83359[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv352[ebp], eax
	jmp	SHORT $LN50@initTransi
$LN49@initTransi:
	mov	DWORD PTR tv352[ebp], 0
$LN50@initTransi:
	mov	eax, DWORD PTR tv352[ebp]
	mov	DWORD PTR $T83358[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83358[ebp]
	mov	DWORD PTR _dtRule$75807[ebp], ecx
$LN13@initTransi:
; Line 1168
	cmp	DWORD PTR _dtRule$75807[ebp], 0
	jne	SHORT $LN8@initTransi
; Line 1169
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1170
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 1171
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@initTransi
$LN8@initTransi:
; Line 1175
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83363[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	cmp	DWORD PTR $T83363[ebp], 0
	je	$LN51@initTransi
	mov	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	mov	eax, DWORD PTR _dtRule$75807[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	push	OFFSET _STD_STR
	lea	ecx, DWORD PTR $T75869[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv710[ebp], eax
	mov	ecx, DWORD PTR tv710[ebp]
	mov	DWORD PTR tv625[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR $T83392[ebp]
	or	edx, 4
	mov	DWORD PTR $T83392[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv625[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T75870[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv714[ebp], eax
	mov	eax, DWORD PTR tv714[ebp]
	mov	DWORD PTR tv630[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR $T83392[ebp]
	or	ecx, 8
	mov	DWORD PTR $T83392[ebp], ecx
	mov	edx, DWORD PTR tv630[ebp]
	push	edx
	mov	ecx, DWORD PTR $T83363[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv390[ebp], eax
	jmp	SHORT $LN52@initTransi
$LN51@initTransi:
	mov	DWORD PTR tv390[ebp], 0
$LN52@initTransi:
	mov	eax, DWORD PTR tv390[ebp]
	mov	DWORD PTR $T83362[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T83362[ebp]
	mov	DWORD PTR [ecx+128], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 8
	je	SHORT $LN84@initTransi
	and	DWORD PTR $T83392[ebp], -9		; fffffff7H
	mov	esi, esp
	lea	ecx, DWORD PTR $T75870[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN84@initTransi:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83392[ebp]
	and	ecx, 4
	je	SHORT $LN85@initTransi
	and	DWORD PTR $T83392[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75869[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN85@initTransi:
; Line 1178
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jne	SHORT $LN7@initTransi
; Line 1179
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1180
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 1181
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@initTransi
$LN7@initTransi:
; Line 1185
	mov	esi, esp
	lea	eax, DWORD PTR _firstStdStart$75809[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1188
	fld	QWORD PTR _firstDstStart$75810[ebp]
	fcomp	QWORD PTR _firstStdStart$75809[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN6@initTransi
; Line 1189
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83367[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	cmp	DWORD PTR $T83367[ebp], 0
	je	$LN53@initTransi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	push	OFFSET _DST_STR
	lea	ecx, DWORD PTR $T75877[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv721[ebp], eax
	mov	ecx, DWORD PTR tv721[ebp]
	mov	DWORD PTR tv641[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR $T83392[ebp]
	or	edx, 16					; 00000010H
	mov	DWORD PTR $T83392[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv641[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T75878[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv725[ebp], eax
	mov	eax, DWORD PTR tv725[ebp]
	mov	DWORD PTR tv646[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, DWORD PTR $T83392[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR $T83392[ebp], ecx
	mov	edx, DWORD PTR tv646[ebp]
	push	edx
	mov	ecx, DWORD PTR $T83367[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv492[ebp], eax
	jmp	SHORT $LN54@initTransi
$LN53@initTransi:
	mov	DWORD PTR tv492[ebp], 0
$LN54@initTransi:
	mov	eax, DWORD PTR tv492[ebp]
	mov	DWORD PTR $T83366[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T83366[ebp]
	mov	DWORD PTR [ecx+120], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 32					; 00000020H
	je	SHORT $LN91@initTransi
	and	DWORD PTR $T83392[ebp], -33		; ffffffdfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75878[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN91@initTransi:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83392[ebp]
	and	ecx, 16					; 00000010H
	je	SHORT $LN92@initTransi
	and	DWORD PTR $T83392[ebp], -17		; ffffffefH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75877[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN92@initTransi:
; Line 1190
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83371[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	cmp	DWORD PTR $T83371[ebp], 0
	je	SHORT $LN55@initTransi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _firstStdStart$75809[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T83371[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z ; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	DWORD PTR tv513[ebp], eax
	jmp	SHORT $LN56@initTransi
$LN55@initTransi:
	mov	DWORD PTR tv513[ebp], 0
$LN56@initTransi:
	mov	ecx, DWORD PTR tv513[ebp]
	mov	DWORD PTR $T83370[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T83370[ebp]
	mov	DWORD PTR [edx+124], eax
; Line 1191
	jmp	$LN5@initTransi
$LN6@initTransi:
; Line 1192
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83375[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	cmp	DWORD PTR $T83375[ebp], 0
	je	$LN57@initTransi
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	push	OFFSET _STD_STR
	lea	ecx, DWORD PTR $T75888[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv735[ebp], eax
	mov	ecx, DWORD PTR tv735[ebp]
	mov	DWORD PTR tv657[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR $T83392[ebp]
	or	edx, 64					; 00000040H
	mov	DWORD PTR $T83392[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv657[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T75889[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv739[ebp], eax
	mov	eax, DWORD PTR tv739[ebp]
	mov	DWORD PTR tv662[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	ecx, DWORD PTR $T83392[ebp]
	or	ecx, 128				; 00000080H
	mov	DWORD PTR $T83392[ebp], ecx
	mov	edx, DWORD PTR tv662[ebp]
	push	edx
	mov	ecx, DWORD PTR $T83375[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv543[ebp], eax
	jmp	SHORT $LN58@initTransi
$LN57@initTransi:
	mov	DWORD PTR tv543[ebp], 0
$LN58@initTransi:
	mov	eax, DWORD PTR tv543[ebp]
	mov	DWORD PTR $T83374[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T83374[ebp]
	mov	DWORD PTR [ecx+120], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 128				; 00000080H
	je	SHORT $LN99@initTransi
	and	DWORD PTR $T83392[ebp], -129		; ffffff7fH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN99@initTransi:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T83392[ebp]
	and	ecx, 64					; 00000040H
	je	SHORT $LN100@initTransi
	and	DWORD PTR $T83392[ebp], -65		; ffffffbfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75888[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN100@initTransi:
; Line 1193
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83379[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	cmp	DWORD PTR $T83379[ebp], 0
	je	SHORT $LN59@initTransi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _firstDstStart$75810[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T83379[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z ; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	DWORD PTR tv564[ebp], eax
	jmp	SHORT $LN60@initTransi
$LN59@initTransi:
	mov	DWORD PTR tv564[ebp], 0
$LN60@initTransi:
	mov	ecx, DWORD PTR tv564[ebp]
	mov	DWORD PTR $T83378[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T83378[ebp]
	mov	DWORD PTR [edx+124], eax
$LN5@initTransi:
; Line 1196
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN3@initTransi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	jne	SHORT $LN4@initTransi
$LN3@initTransi:
; Line 1197
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1198
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 1199
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@initTransi
$LN4@initTransi:
; Line 1202
	jmp	$LN1@initTransi
$LN24@initTransi:
; Line 1204
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83383[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	cmp	DWORD PTR $T83383[ebp], 0
	je	SHORT $LN61@initTransi
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T83383[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv588[ebp], eax
	jmp	SHORT $LN62@initTransi
$LN61@initTransi:
	mov	DWORD PTR tv588[ebp], 0
$LN62@initTransi:
	mov	edx, DWORD PTR tv588[ebp]
	mov	DWORD PTR $T83382[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T83382[ebp]
	mov	DWORD PTR [eax+120], ecx
; Line 1206
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jne	SHORT $LN1@initTransi
; Line 1207
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@SimpleTimeZone@icu_56@@AAEXXZ ; icu_56::SimpleTimeZone::deleteTransitionRules
; Line 1209
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN27@initTransi
$LN1@initTransi:
; Line 1213
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 1
; Line 1214
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN27@initTransi:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN108@initTransi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1316				; 00000524H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN108@initTransi:
	DD	3
	DD	$LN107@initTransi
$LN107@initTransi:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN103@initTransi
	DD	-136					; ffffff78H
	DD	8
	DD	$LN104@initTransi
	DD	-152					; ffffff68H
	DD	8
	DD	$LN105@initTransi
$LN105@initTransi:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN104@initTransi:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN103@initTransi:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
	npad	3
$LN109@initTransi:
	DD	$LN21@initTransi
	DD	$LN20@initTransi
	DD	$LN19@initTransi
	DD	$LN18@initTransi
$LN110@initTransi:
	DD	$LN12@initTransi
	DD	$LN11@initTransi
	DD	$LN10@initTransi
	DD	$LN9@initTransi
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T83325[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T83329[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T83333[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T83337[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T83341[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$6:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 1
	je	$LN70@initTransi
	and	DWORD PTR $T83392[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75837[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN70@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$7:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 2
	je	$LN72@initTransi
	and	DWORD PTR $T83392[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75838[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN72@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T83347[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T83351[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	mov	eax, DWORD PTR $T83355[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$11:
	mov	esi, esp
	mov	eax, DWORD PTR $T83359[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$12:
	mov	esi, esp
	mov	eax, DWORD PTR $T83363[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$13:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 4
	je	$LN81@initTransi
	and	DWORD PTR $T83392[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75869[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN81@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$14:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 8
	je	$LN83@initTransi
	and	DWORD PTR $T83392[ebp], -9		; fffffff7H
	mov	esi, esp
	lea	ecx, DWORD PTR $T75870[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN83@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$15:
	mov	esi, esp
	mov	eax, DWORD PTR $T83367[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$16:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 16					; 00000010H
	je	$LN88@initTransi
	and	DWORD PTR $T83392[ebp], -17		; ffffffefH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75877[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN88@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$17:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 32					; 00000020H
	je	$LN90@initTransi
	and	DWORD PTR $T83392[ebp], -33		; ffffffdfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75878[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN90@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$18:
	mov	esi, esp
	mov	eax, DWORD PTR $T83371[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$19:
	mov	esi, esp
	mov	eax, DWORD PTR $T83375[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$20:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 64					; 00000040H
	je	$LN96@initTransi
	and	DWORD PTR $T83392[ebp], -65		; ffffffbfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75888[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN96@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$21:
	mov	eax, DWORD PTR $T83392[ebp]
	and	eax, 128				; 00000080H
	je	$LN98@initTransi
	and	DWORD PTR $T83392[ebp], -129		; ffffff7fH
	mov	esi, esp
	lea	ecx, DWORD PTR $T75889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN98@initTransi:
	ret	0
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$22:
	mov	esi, esp
	mov	eax, DWORD PTR $T83379[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$23:
	mov	esi, esp
	mov	eax, DWORD PTR $T83383[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initTransitionRules@SimpleTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::initTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countTransitionRules@SimpleTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?countTransitionRules@SimpleTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::countTransitionRules, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [eax+100]
	neg	eax
	sbb	eax, eax
	and	eax, 2
; Line 1219
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?countTransitionRules@SimpleTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::countTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getTimeZoneRules@SimpleTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_cnt$ = -20						; size = 4
_this$ = -8						; size = 4
_initial$ = 8						; size = 4
_trsrules$ = 12						; size = 4
_trscount$ = 16						; size = 4
_status$ = 20						; size = 4
?getTimeZoneRules@SimpleTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getTimeZoneRules, COMDAT
; _this$ = ecx
; Line 1225
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1226
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getTimeZon
; Line 1227
	jmp	$LN6@getTimeZon
$LN5@getTimeZon:
; Line 1229
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@SimpleTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::checkTransitionRules
; Line 1230
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getTimeZon
; Line 1231
	jmp	SHORT $LN6@getTimeZon
$LN4@getTimeZon:
; Line 1233
	mov	eax, DWORD PTR _initial$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax], edx
; Line 1234
	mov	DWORD PTR _cnt$[ebp], 0
; Line 1235
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN3@getTimeZon
; Line 1236
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR _cnt$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN2@getTimeZon
; Line 1237
	mov	eax, DWORD PTR _cnt$[ebp]
	mov	ecx, DWORD PTR _trsrules$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+128]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _cnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _cnt$[ebp], eax
$LN2@getTimeZon:
; Line 1239
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR _cnt$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN3@getTimeZon
; Line 1240
	mov	eax, DWORD PTR _cnt$[ebp]
	mov	ecx, DWORD PTR _trsrules$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+132]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _cnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _cnt$[ebp], eax
$LN3@getTimeZon:
; Line 1243
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR _cnt$[ebp]
	mov	DWORD PTR [eax], ecx
$LN6@getTimeZon:
; Line 1244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getTimeZoneRules@SimpleTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getTimeZoneRules
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::~EnumSet<enum UDateFormatBooleanAttribute,0,4>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::~EnumSet<enum UDateFormatBooleanAttribute,0,4>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::~EnumSet<enum UDateFormatBooleanAttribute,0,4>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
PUBLIC	?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get
PUBLIC	?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 0
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	ecx, DWORD PTR _toCheck$[ebp]
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
_TEXT	ENDS
END

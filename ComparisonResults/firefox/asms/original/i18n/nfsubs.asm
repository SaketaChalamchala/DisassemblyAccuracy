; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\nfsubs.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?LTLT@NumeratorSubstitution@icu_56@@0QB_WB	; icu_56::NumeratorSubstitution::LTLT
_BSS	SEGMENT
?classID@?1??getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::NFSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::SameValueSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::MultiplierSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::ModulusSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::IntegralPartSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::FractionalPartSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::AbsoluteValueSubstitution::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::NumeratorSubstitution::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_gEqualsEquals DW 03dH
	DW	03dH
	DW	00H
	ORG $+2
_gGreaterGreaterGreaterThan DW 03eH
	DW	03eH
	DW	03eH
	DW	00H
_gGreaterGreaterThan DW 03eH
	DW	03eH
	DW	00H
	ORG $+2
?LTLT@NumeratorSubstitution@icu_56@@0QB_WB DW 03cH	; icu_56::NumeratorSubstitution::LTLT
	DW	03cH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T48494 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T48494[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48494[ebp]
	or	ecx, 1
	mov	DWORD PTR $T48494[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T36101 = -312						; size = 64
_i$36096 = -45						; size = 1
_sym$36094 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$36094[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$36094[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$36096[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$36096[ebp]
	add	al, 1
	mov	BYTE PTR _i$36096[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$36096[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$36094[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$36094[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$36094[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36101[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$36096[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T36101[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36101[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T48516 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T48516[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48516[ebp]
	or	ecx, 1
	mov	DWORD PTR $T48516[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ	; icu_56::RuleBasedNumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ PROC	; icu_56::RuleBasedNumberFormat::isLenient, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\rbnf.h
; Line 1053
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1054
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+592]
; Line 1055
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ ENDP	; icu_56::RuleBasedNumberFormat::isLenient
_TEXT	ENDS
PUBLIC	?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet, COMDAT
; _this$ = ecx
; Line 1060
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1061
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+368]
; Line 1062
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
_TEXT	ENDS
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
EXTRN	??8DigitList@icu_56@@QBECABV01@@Z:PROC		; icu_56::DigitList::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	??1NFSubstitution@icu_56@@UAE@XZ		; icu_56::NFSubstitution::~NFSubstitution
PUBLIC	??_7SameValueSubstitution@icu_56@@6B@		; icu_56::SameValueSubstitution::`vftable'
PUBLIC	??1SameValueSubstitution@icu_56@@UAE@XZ		; icu_56::SameValueSubstitution::~SameValueSubstitution
PUBLIC	??_R4SameValueSubstitution@icu_56@@6B@		; icu_56::SameValueSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSameValueSubstitution@icu_56@@@8	; icu_56::SameValueSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3SameValueSubstitution@icu_56@@8		; icu_56::SameValueSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SameValueSubstitution@icu_56@@8		; icu_56::SameValueSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SameValueSubstitution@icu_56@@8	; icu_56::SameValueSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@NFSubstitution@icu_56@@8		; icu_56::NFSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNFSubstitution@icu_56@@@8		; icu_56::NFSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3NFSubstitution@icu_56@@8			; icu_56::NFSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NFSubstitution@icu_56@@8			; icu_56::NFSubstitution::`RTTI Base Class Array'
PUBLIC	?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ ; icu_56::SameValueSubstitution::getDynamicClassID
PUBLIC	??8NFSubstitution@icu_56@@UBECABV01@@Z		; icu_56::NFSubstitution::operator==
PUBLIC	?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z ; icu_56::NFSubstitution::setDivisor
PUBLIC	?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z ; icu_56::NFSubstitution::toString
PUBLIC	?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFSubstitution::doSubstitution
PUBLIC	?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFSubstitution::doSubstitution
PUBLIC	?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z ; icu_56::SameValueSubstitution::transformNumber
PUBLIC	?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z ; icu_56::SameValueSubstitution::transformNumber
PUBLIC	?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::NFSubstitution::doParse
PUBLIC	?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z ; icu_56::SameValueSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z ; icu_56::SameValueSubstitution::calcUpperBound
PUBLIC	?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ ; icu_56::SameValueSubstitution::tokenChar
PUBLIC	?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ ; icu_56::NFSubstitution::isModulusSubstitution
EXTRN	??_ESameValueSubstitution@icu_56@@UAEPAXI@Z:PROC ; icu_56::SameValueSubstitution::`vector deleting destructor'
;	COMDAT ??_R2NFSubstitution@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
rdata$r	SEGMENT
??_R2NFSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8 ; icu_56::NFSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NFSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3NFSubstitution@icu_56@@8 DD 00H			; icu_56::NFSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NFSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNFSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNFSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NFSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNFSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@NFSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NFSubstitution@icu_56@@8 DD FLAT:??_R0?AVNFSubstitution@icu_56@@@8 ; icu_56::NFSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NFSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SameValueSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SameValueSubstitution@icu_56@@8 DD FLAT:??_R0?AVSameValueSubstitution@icu_56@@@8 ; icu_56::SameValueSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SameValueSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SameValueSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2SameValueSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SameValueSubstitution@icu_56@@8 ; icu_56::SameValueSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SameValueSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3SameValueSubstitution@icu_56@@8 DD 00H		; icu_56::SameValueSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SameValueSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSameValueSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSameValueSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SameValueSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSameValueSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SameValueSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4SameValueSubstitution@icu_56@@6B@ DD 00H		; icu_56::SameValueSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSameValueSubstitution@icu_56@@@8
	DD	FLAT:??_R3SameValueSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SameValueSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7SameValueSubstitution@icu_56@@6B@ DD FLAT:??_R4SameValueSubstitution@icu_56@@6B@ ; icu_56::SameValueSubstitution::`vftable'
	DD	FLAT:??_ESameValueSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8NFSubstitution@icu_56@@UBECABV01@@Z
	DD	FLAT:?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1SameValueSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SameValueSubstitution@icu_56@@UAE@XZ PROC		; icu_56::SameValueSubstitution::~SameValueSubstitution, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SameValueSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SameValueSubstitution@icu_56@@UAE@XZ ENDP		; icu_56::SameValueSubstitution::~SameValueSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::SameValueSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _number$[ebp]
	mov	edx, DWORD PTR _number$[ebp+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::SameValueSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z PROC ; icu_56::SameValueSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _number$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::SameValueSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
___formal$ = 16						; size = 8
?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::SameValueSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _newRuleValue$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::SameValueSubstitution::composeRuleValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldUpperBound$ = 8					; size = 8
?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z PROC ; icu_56::SameValueSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _oldUpperBound$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::SameValueSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ PROC	; icu_56::SameValueSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 61					; 0000003dH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ ENDP	; icu_56::SameValueSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GSameValueSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSameValueSubstitution@icu_56@@UAEPAXI@Z PROC	; icu_56::SameValueSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SameValueSubstitution@icu_56@@UAE@XZ	; icu_56::SameValueSubstitution::~SameValueSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSameValueSubstitution@icu_56@@UAEPAXI@Z ENDP	; icu_56::SameValueSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7MultiplierSubstitution@icu_56@@6B@		; icu_56::MultiplierSubstitution::`vftable'
PUBLIC	??1MultiplierSubstitution@icu_56@@UAE@XZ	; icu_56::MultiplierSubstitution::~MultiplierSubstitution
PUBLIC	??_R4MultiplierSubstitution@icu_56@@6B@		; icu_56::MultiplierSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMultiplierSubstitution@icu_56@@@8	; icu_56::MultiplierSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3MultiplierSubstitution@icu_56@@8		; icu_56::MultiplierSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MultiplierSubstitution@icu_56@@8		; icu_56::MultiplierSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MultiplierSubstitution@icu_56@@8	; icu_56::MultiplierSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ ; icu_56::MultiplierSubstitution::getDynamicClassID
PUBLIC	??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ; icu_56::MultiplierSubstitution::operator==
PUBLIC	?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z ; icu_56::MultiplierSubstitution::setDivisor
PUBLIC	?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z ; icu_56::MultiplierSubstitution::transformNumber
PUBLIC	?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z ; icu_56::MultiplierSubstitution::transformNumber
PUBLIC	?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z ; icu_56::MultiplierSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z ; icu_56::MultiplierSubstitution::calcUpperBound
PUBLIC	?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ ; icu_56::MultiplierSubstitution::tokenChar
EXTRN	??_EMultiplierSubstitution@icu_56@@UAEPAXI@Z:PROC ; icu_56::MultiplierSubstitution::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@MultiplierSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MultiplierSubstitution@icu_56@@8 DD FLAT:??_R0?AVMultiplierSubstitution@icu_56@@@8 ; icu_56::MultiplierSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MultiplierSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MultiplierSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2MultiplierSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MultiplierSubstitution@icu_56@@8 ; icu_56::MultiplierSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MultiplierSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3MultiplierSubstitution@icu_56@@8 DD 00H		; icu_56::MultiplierSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2MultiplierSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMultiplierSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMultiplierSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MultiplierSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMultiplierSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MultiplierSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4MultiplierSubstitution@icu_56@@6B@ DD 00H		; icu_56::MultiplierSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMultiplierSubstitution@icu_56@@@8
	DD	FLAT:??_R3MultiplierSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MultiplierSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7MultiplierSubstitution@icu_56@@6B@ DD FLAT:??_R4MultiplierSubstitution@icu_56@@6B@ ; icu_56::MultiplierSubstitution::`vftable'
	DD	FLAT:??_EMultiplierSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
	DD	FLAT:?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1MultiplierSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MultiplierSubstitution@icu_56@@UAE@XZ PROC		; icu_56::MultiplierSubstitution::~MultiplierSubstitution, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MultiplierSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MultiplierSubstitution@icu_56@@UAE@XZ ENDP		; icu_56::MultiplierSubstitution::~MultiplierSubstitution
_TEXT	ENDS
EXTRN	?util64_fromDouble@icu_56@@YA_JN@Z:PROC		; icu_56::util64_fromDouble
EXTRN	_uprv_pow_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_radix$ = 8						; size = 4
_exponent$ = 12						; size = 4
_status$ = 16						; size = 4
?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::MultiplierSubstitution::setDivisor, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	fild	DWORD PTR _exponent$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fild	DWORD PTR _radix$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_pow_56
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [eax+16]
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	DWORD PTR [ecx+28], edx
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+16]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@setDivisor
; Line 92
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN1@setDivisor:
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::MultiplierSubstitution::setDivisor
_TEXT	ENDS
EXTRN	__alldiv:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::MultiplierSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	__alldiv
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::MultiplierSubstitution::transformNumber
_TEXT	ENDS
PUBLIC	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
EXTRN	_uprv_floor_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z PROC ; icu_56::MultiplierSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	test	eax, eax
	je	SHORT $LN2@transformN
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _number$[ebp]
	fdiv	QWORD PTR [eax+16]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	jmp	SHORT $LN1@transformN
; Line 105
	jmp	SHORT $LN1@transformN
$LN2@transformN:
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _number$[ebp]
	fdiv	QWORD PTR [eax+16]
$LN1@transformN:
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::MultiplierSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ PROC ; icu_56::NFSubstitution::getRuleSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfsubs.h
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ENDP ; icu_56::NFSubstitution::getRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
___formal$ = 16						; size = 8
?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::MultiplierSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _newRuleValue$[ebp]
	fmul	QWORD PTR [eax+16]
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::MultiplierSubstitution::composeRuleValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z PROC ; icu_56::MultiplierSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::MultiplierSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ PROC	; icu_56::MultiplierSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 60					; 0000003cH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ ENDP	; icu_56::MultiplierSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GMultiplierSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMultiplierSubstitution@icu_56@@UAEPAXI@Z PROC	; icu_56::MultiplierSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MultiplierSubstitution@icu_56@@UAE@XZ ; icu_56::MultiplierSubstitution::~MultiplierSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMultiplierSubstitution@icu_56@@UAEPAXI@Z ENDP	; icu_56::MultiplierSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ModulusSubstitution@icu_56@@6B@		; icu_56::ModulusSubstitution::`vftable'
PUBLIC	??1ModulusSubstitution@icu_56@@UAE@XZ		; icu_56::ModulusSubstitution::~ModulusSubstitution
PUBLIC	??_R4ModulusSubstitution@icu_56@@6B@		; icu_56::ModulusSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVModulusSubstitution@icu_56@@@8		; icu_56::ModulusSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3ModulusSubstitution@icu_56@@8		; icu_56::ModulusSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ModulusSubstitution@icu_56@@8		; icu_56::ModulusSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ModulusSubstitution@icu_56@@8	; icu_56::ModulusSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ ; icu_56::ModulusSubstitution::getDynamicClassID
PUBLIC	??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ; icu_56::ModulusSubstitution::operator==
PUBLIC	?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z ; icu_56::ModulusSubstitution::setDivisor
PUBLIC	?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z ; icu_56::ModulusSubstitution::toString
PUBLIC	?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::ModulusSubstitution::doSubstitution
PUBLIC	?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::ModulusSubstitution::doSubstitution
PUBLIC	?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z ; icu_56::ModulusSubstitution::transformNumber
PUBLIC	?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z ; icu_56::ModulusSubstitution::transformNumber
PUBLIC	?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::ModulusSubstitution::doParse
PUBLIC	?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z ; icu_56::ModulusSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z ; icu_56::ModulusSubstitution::calcUpperBound
PUBLIC	?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ	; icu_56::ModulusSubstitution::tokenChar
PUBLIC	?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ ; icu_56::ModulusSubstitution::isModulusSubstitution
EXTRN	??_EModulusSubstitution@icu_56@@UAEPAXI@Z:PROC	; icu_56::ModulusSubstitution::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ModulusSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ModulusSubstitution@icu_56@@8 DD FLAT:??_R0?AVModulusSubstitution@icu_56@@@8 ; icu_56::ModulusSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ModulusSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ModulusSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2ModulusSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ModulusSubstitution@icu_56@@8 ; icu_56::ModulusSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ModulusSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3ModulusSubstitution@icu_56@@8 DD 00H		; icu_56::ModulusSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ModulusSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVModulusSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVModulusSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ModulusSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVModulusSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ModulusSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4ModulusSubstitution@icu_56@@6B@ DD 00H		; icu_56::ModulusSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVModulusSubstitution@icu_56@@@8
	DD	FLAT:??_R3ModulusSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ModulusSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7ModulusSubstitution@icu_56@@6B@ DD FLAT:??_R4ModulusSubstitution@icu_56@@6B@ ; icu_56::ModulusSubstitution::`vftable'
	DD	FLAT:??_EModulusSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
	DD	FLAT:?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1ModulusSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ModulusSubstitution@icu_56@@UAE@XZ PROC		; icu_56::ModulusSubstitution::~ModulusSubstitution, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ModulusSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ModulusSubstitution@icu_56@@UAE@XZ ENDP		; icu_56::ModulusSubstitution::~ModulusSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_radix$ = 8						; size = 4
_exponent$ = 12						; size = 4
_status$ = 16						; size = 4
?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::ModulusSubstitution::setDivisor, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	fild	DWORD PTR _exponent$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fild	DWORD PTR _radix$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_pow_56
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [eax+16]
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	DWORD PTR [ecx+28], edx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+16]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@setDivisor@2
; Line 143
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN1@setDivisor@2:
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::ModulusSubstitution::setDivisor
_TEXT	ENDS
EXTRN	__allrem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::ModulusSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	__allrem
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::ModulusSubstitution::transformNumber
_TEXT	ENDS
EXTRN	_uprv_fmod_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z PROC ; icu_56::ModulusSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_fmod_56
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::ModulusSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
_oldRuleValue$ = 16					; size = 8
?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::ModulusSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _oldRuleValue$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_fmod_56
	add	esp, 16					; 00000010H
	fsubr	QWORD PTR _oldRuleValue$[ebp]
	fadd	QWORD PTR _newRuleValue$[ebp]
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::ModulusSubstitution::composeRuleValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z PROC ; icu_56::ModulusSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::ModulusSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ PROC ; icu_56::ModulusSubstitution::isModulusSubstitution, COMDAT
; _this$ = ecx
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ ENDP ; icu_56::ModulusSubstitution::isModulusSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ PROC	; icu_56::ModulusSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 62					; 0000003eH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ ENDP	; icu_56::ModulusSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GModulusSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GModulusSubstitution@icu_56@@UAEPAXI@Z PROC		; icu_56::ModulusSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ModulusSubstitution@icu_56@@UAE@XZ	; icu_56::ModulusSubstitution::~ModulusSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GModulusSubstitution@icu_56@@UAEPAXI@Z ENDP		; icu_56::ModulusSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IntegralPartSubstitution@icu_56@@6B@	; icu_56::IntegralPartSubstitution::`vftable'
PUBLIC	??1IntegralPartSubstitution@icu_56@@UAE@XZ	; icu_56::IntegralPartSubstitution::~IntegralPartSubstitution
PUBLIC	??_R4IntegralPartSubstitution@icu_56@@6B@	; icu_56::IntegralPartSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIntegralPartSubstitution@icu_56@@@8	; icu_56::IntegralPartSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3IntegralPartSubstitution@icu_56@@8		; icu_56::IntegralPartSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IntegralPartSubstitution@icu_56@@8		; icu_56::IntegralPartSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IntegralPartSubstitution@icu_56@@8 ; icu_56::IntegralPartSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ ; icu_56::IntegralPartSubstitution::getDynamicClassID
PUBLIC	?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z ; icu_56::IntegralPartSubstitution::transformNumber
PUBLIC	?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z ; icu_56::IntegralPartSubstitution::transformNumber
PUBLIC	?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z ; icu_56::IntegralPartSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z ; icu_56::IntegralPartSubstitution::calcUpperBound
PUBLIC	?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ ; icu_56::IntegralPartSubstitution::tokenChar
EXTRN	??_EIntegralPartSubstitution@icu_56@@UAEPAXI@Z:PROC ; icu_56::IntegralPartSubstitution::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@IntegralPartSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IntegralPartSubstitution@icu_56@@8 DD FLAT:??_R0?AVIntegralPartSubstitution@icu_56@@@8 ; icu_56::IntegralPartSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IntegralPartSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2IntegralPartSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2IntegralPartSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@IntegralPartSubstitution@icu_56@@8 ; icu_56::IntegralPartSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3IntegralPartSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3IntegralPartSubstitution@icu_56@@8 DD 00H		; icu_56::IntegralPartSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2IntegralPartSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIntegralPartSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVIntegralPartSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::IntegralPartSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIntegralPartSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IntegralPartSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4IntegralPartSubstitution@icu_56@@6B@ DD 00H	; icu_56::IntegralPartSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIntegralPartSubstitution@icu_56@@@8
	DD	FLAT:??_R3IntegralPartSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7IntegralPartSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7IntegralPartSubstitution@icu_56@@6B@ DD FLAT:??_R4IntegralPartSubstitution@icu_56@@6B@ ; icu_56::IntegralPartSubstitution::`vftable'
	DD	FLAT:??_EIntegralPartSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8NFSubstitution@icu_56@@UBECABV01@@Z
	DD	FLAT:?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1IntegralPartSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IntegralPartSubstitution@icu_56@@UAE@XZ PROC		; icu_56::IntegralPartSubstitution::~IntegralPartSubstitution, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IntegralPartSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1IntegralPartSubstitution@icu_56@@UAE@XZ ENDP		; icu_56::IntegralPartSubstitution::~IntegralPartSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::IntegralPartSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _number$[ebp]
	mov	edx, DWORD PTR _number$[ebp+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::IntegralPartSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z PROC ; icu_56::IntegralPartSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::IntegralPartSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
_oldRuleValue$ = 16					; size = 8
?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::IntegralPartSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _newRuleValue$[ebp]
	fadd	QWORD PTR _oldRuleValue$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::IntegralPartSubstitution::composeRuleValue
_TEXT	ENDS
PUBLIC	__real@7fefffffffffffff
;	COMDAT __real@7fefffffffffffff
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z PROC ; icu_56::IntegralPartSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR __real@7fefffffffffffff
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::IntegralPartSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ PROC ; icu_56::IntegralPartSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 60					; 0000003cH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ ENDP ; icu_56::IntegralPartSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GIntegralPartSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIntegralPartSubstitution@icu_56@@UAEPAXI@Z PROC	; icu_56::IntegralPartSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IntegralPartSubstitution@icu_56@@UAE@XZ ; icu_56::IntegralPartSubstitution::~IntegralPartSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIntegralPartSubstitution@icu_56@@UAEPAXI@Z ENDP	; icu_56::IntegralPartSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7FractionalPartSubstitution@icu_56@@6B@	; icu_56::FractionalPartSubstitution::`vftable'
PUBLIC	??1FractionalPartSubstitution@icu_56@@UAE@XZ	; icu_56::FractionalPartSubstitution::~FractionalPartSubstitution
PUBLIC	??_R4FractionalPartSubstitution@icu_56@@6B@	; icu_56::FractionalPartSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFractionalPartSubstitution@icu_56@@@8	; icu_56::FractionalPartSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3FractionalPartSubstitution@icu_56@@8	; icu_56::FractionalPartSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FractionalPartSubstitution@icu_56@@8	; icu_56::FractionalPartSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FractionalPartSubstitution@icu_56@@8 ; icu_56::FractionalPartSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ ; icu_56::FractionalPartSubstitution::getDynamicClassID
PUBLIC	??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ; icu_56::FractionalPartSubstitution::operator==
PUBLIC	?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::FractionalPartSubstitution::doSubstitution
PUBLIC	?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::FractionalPartSubstitution::doSubstitution
PUBLIC	?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z ; icu_56::FractionalPartSubstitution::transformNumber
PUBLIC	?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z ; icu_56::FractionalPartSubstitution::transformNumber
PUBLIC	?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::FractionalPartSubstitution::doParse
PUBLIC	?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z ; icu_56::FractionalPartSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z ; icu_56::FractionalPartSubstitution::calcUpperBound
PUBLIC	?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ ; icu_56::FractionalPartSubstitution::tokenChar
EXTRN	??_EFractionalPartSubstitution@icu_56@@UAEPAXI@Z:PROC ; icu_56::FractionalPartSubstitution::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@FractionalPartSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FractionalPartSubstitution@icu_56@@8 DD FLAT:??_R0?AVFractionalPartSubstitution@icu_56@@@8 ; icu_56::FractionalPartSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FractionalPartSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FractionalPartSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2FractionalPartSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FractionalPartSubstitution@icu_56@@8 ; icu_56::FractionalPartSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FractionalPartSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3FractionalPartSubstitution@icu_56@@8 DD 00H	; icu_56::FractionalPartSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2FractionalPartSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFractionalPartSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFractionalPartSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FractionalPartSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFractionalPartSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FractionalPartSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4FractionalPartSubstitution@icu_56@@6B@ DD 00H	; icu_56::FractionalPartSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFractionalPartSubstitution@icu_56@@@8
	DD	FLAT:??_R3FractionalPartSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FractionalPartSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7FractionalPartSubstitution@icu_56@@6B@ DD FLAT:??_R4FractionalPartSubstitution@icu_56@@6B@ ; icu_56::FractionalPartSubstitution::`vftable'
	DD	FLAT:??_EFractionalPartSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
	DD	FLAT:?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1FractionalPartSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FractionalPartSubstitution@icu_56@@UAE@XZ PROC	; icu_56::FractionalPartSubstitution::~FractionalPartSubstitution, COMDAT
; _this$ = ecx
; Line 237
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FractionalPartSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FractionalPartSubstitution@icu_56@@UAE@XZ ENDP	; icu_56::FractionalPartSubstitution::~FractionalPartSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::FractionalPartSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::FractionalPartSubstitution::doSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::FractionalPartSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	xor	edx, edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::FractionalPartSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z PROC ; icu_56::FractionalPartSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fsubr	QWORD PTR _number$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::FractionalPartSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
_oldRuleValue$ = 16					; size = 8
?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::FractionalPartSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _newRuleValue$[ebp]
	fadd	QWORD PTR _oldRuleValue$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::FractionalPartSubstitution::composeRuleValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z PROC ; icu_56::FractionalPartSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::FractionalPartSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ PROC ; icu_56::FractionalPartSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 62					; 0000003eH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ ENDP ; icu_56::FractionalPartSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GFractionalPartSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFractionalPartSubstitution@icu_56@@UAEPAXI@Z PROC	; icu_56::FractionalPartSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FractionalPartSubstitution@icu_56@@UAE@XZ ; icu_56::FractionalPartSubstitution::~FractionalPartSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFractionalPartSubstitution@icu_56@@UAEPAXI@Z ENDP	; icu_56::FractionalPartSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7AbsoluteValueSubstitution@icu_56@@6B@	; icu_56::AbsoluteValueSubstitution::`vftable'
PUBLIC	??1AbsoluteValueSubstitution@icu_56@@UAE@XZ	; icu_56::AbsoluteValueSubstitution::~AbsoluteValueSubstitution
PUBLIC	??_R4AbsoluteValueSubstitution@icu_56@@6B@	; icu_56::AbsoluteValueSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAbsoluteValueSubstitution@icu_56@@@8	; icu_56::AbsoluteValueSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3AbsoluteValueSubstitution@icu_56@@8	; icu_56::AbsoluteValueSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AbsoluteValueSubstitution@icu_56@@8	; icu_56::AbsoluteValueSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AbsoluteValueSubstitution@icu_56@@8 ; icu_56::AbsoluteValueSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ ; icu_56::AbsoluteValueSubstitution::getDynamicClassID
PUBLIC	?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z ; icu_56::AbsoluteValueSubstitution::transformNumber
PUBLIC	?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z ; icu_56::AbsoluteValueSubstitution::transformNumber
PUBLIC	?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z ; icu_56::AbsoluteValueSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z ; icu_56::AbsoluteValueSubstitution::calcUpperBound
PUBLIC	?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ ; icu_56::AbsoluteValueSubstitution::tokenChar
EXTRN	??_EAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z:PROC ; icu_56::AbsoluteValueSubstitution::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@AbsoluteValueSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AbsoluteValueSubstitution@icu_56@@8 DD FLAT:??_R0?AVAbsoluteValueSubstitution@icu_56@@@8 ; icu_56::AbsoluteValueSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AbsoluteValueSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2AbsoluteValueSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2AbsoluteValueSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@AbsoluteValueSubstitution@icu_56@@8 ; icu_56::AbsoluteValueSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3AbsoluteValueSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3AbsoluteValueSubstitution@icu_56@@8 DD 00H		; icu_56::AbsoluteValueSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2AbsoluteValueSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAbsoluteValueSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVAbsoluteValueSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::AbsoluteValueSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAbsoluteValueSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AbsoluteValueSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4AbsoluteValueSubstitution@icu_56@@6B@ DD 00H	; icu_56::AbsoluteValueSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAbsoluteValueSubstitution@icu_56@@@8
	DD	FLAT:??_R3AbsoluteValueSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7AbsoluteValueSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7AbsoluteValueSubstitution@icu_56@@6B@ DD FLAT:??_R4AbsoluteValueSubstitution@icu_56@@6B@ ; icu_56::AbsoluteValueSubstitution::`vftable'
	DD	FLAT:??_EAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8NFSubstitution@icu_56@@UBECABV01@@Z
	DD	FLAT:?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1AbsoluteValueSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1AbsoluteValueSubstitution@icu_56@@UAE@XZ PROC	; icu_56::AbsoluteValueSubstitution::~AbsoluteValueSubstitution, COMDAT
; _this$ = ecx
; Line 259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AbsoluteValueSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AbsoluteValueSubstitution@icu_56@@UAE@XZ ENDP	; icu_56::AbsoluteValueSubstitution::~AbsoluteValueSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
tv66 = -212						; size = 8
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::AbsoluteValueSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _number$[ebp+4], 0
	jl	SHORT $LN3@transformN@2
	jg	SHORT $LN5@transformN@2
	cmp	DWORD PTR _number$[ebp], 0
	jb	SHORT $LN3@transformN@2
$LN5@transformN@2:
	mov	eax, DWORD PTR _number$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR _number$[ebp+4]
	mov	DWORD PTR tv66[ebp+4], ecx
	jmp	SHORT $LN4@transformN@2
$LN3@transformN@2:
	mov	edx, DWORD PTR _number$[ebp]
	neg	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	adc	eax, 0
	neg	eax
	mov	DWORD PTR tv66[ebp], edx
	mov	DWORD PTR tv66[ebp+4], eax
$LN4@transformN@2:
	mov	eax, DWORD PTR tv66[ebp]
	mov	edx, DWORD PTR tv66[ebp+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::AbsoluteValueSubstitution::transformNumber
_TEXT	ENDS
EXTRN	_uprv_fabs_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z PROC ; icu_56::AbsoluteValueSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_fabs_56
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::AbsoluteValueSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
___formal$ = 16						; size = 8
?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::AbsoluteValueSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _newRuleValue$[ebp]
	fchs
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::AbsoluteValueSubstitution::composeRuleValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z PROC ; icu_56::AbsoluteValueSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR __real@7fefffffffffffff
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::AbsoluteValueSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ PROC ; icu_56::AbsoluteValueSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 62					; 0000003eH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ ENDP ; icu_56::AbsoluteValueSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z PROC	; icu_56::AbsoluteValueSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AbsoluteValueSubstitution@icu_56@@UAE@XZ ; icu_56::AbsoluteValueSubstitution::~AbsoluteValueSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z ENDP	; icu_56::AbsoluteValueSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7NumeratorSubstitution@icu_56@@6B@		; icu_56::NumeratorSubstitution::`vftable'
PUBLIC	??1NumeratorSubstitution@icu_56@@UAE@XZ		; icu_56::NumeratorSubstitution::~NumeratorSubstitution
PUBLIC	??_R4NumeratorSubstitution@icu_56@@6B@		; icu_56::NumeratorSubstitution::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumeratorSubstitution@icu_56@@@8	; icu_56::NumeratorSubstitution `RTTI Type Descriptor'
PUBLIC	??_R3NumeratorSubstitution@icu_56@@8		; icu_56::NumeratorSubstitution::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumeratorSubstitution@icu_56@@8		; icu_56::NumeratorSubstitution::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumeratorSubstitution@icu_56@@8	; icu_56::NumeratorSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ ; icu_56::NumeratorSubstitution::getDynamicClassID
PUBLIC	??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ; icu_56::NumeratorSubstitution::operator==
PUBLIC	?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NumeratorSubstitution::doSubstitution
PUBLIC	?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NumeratorSubstitution::doSubstitution
PUBLIC	?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z ; icu_56::NumeratorSubstitution::transformNumber
PUBLIC	?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z ; icu_56::NumeratorSubstitution::transformNumber
PUBLIC	?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::NumeratorSubstitution::doParse
PUBLIC	?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z ; icu_56::NumeratorSubstitution::composeRuleValue
PUBLIC	?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z ; icu_56::NumeratorSubstitution::calcUpperBound
PUBLIC	?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ ; icu_56::NumeratorSubstitution::tokenChar
EXTRN	??_ENumeratorSubstitution@icu_56@@UAEPAXI@Z:PROC ; icu_56::NumeratorSubstitution::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@NumeratorSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumeratorSubstitution@icu_56@@8 DD FLAT:??_R0?AVNumeratorSubstitution@icu_56@@@8 ; icu_56::NumeratorSubstitution::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumeratorSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumeratorSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R2NumeratorSubstitution@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumeratorSubstitution@icu_56@@8 ; icu_56::NumeratorSubstitution::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NFSubstitution@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumeratorSubstitution@icu_56@@8
rdata$r	SEGMENT
??_R3NumeratorSubstitution@icu_56@@8 DD 00H		; icu_56::NumeratorSubstitution::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2NumeratorSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumeratorSubstitution@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumeratorSubstitution@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumeratorSubstitution `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumeratorSubstitution@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumeratorSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumeratorSubstitution@icu_56@@6B@ DD 00H		; icu_56::NumeratorSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumeratorSubstitution@icu_56@@@8
	DD	FLAT:??_R3NumeratorSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumeratorSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7NumeratorSubstitution@icu_56@@6B@ DD FLAT:??_R4NumeratorSubstitution@icu_56@@6B@ ; icu_56::NumeratorSubstitution::`vftable'
	DD	FLAT:??_ENumeratorSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
	DD	FLAT:?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z
	DD	FLAT:?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z
	DD	FLAT:?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z
	DD	FLAT:?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1NumeratorSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1NumeratorSubstitution@icu_56@@UAE@XZ PROC		; icu_56::NumeratorSubstitution::~NumeratorSubstitution, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumeratorSubstitution@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1NumeratorSubstitution@icu_56@@UAE@XZ ENDP		; icu_56::NumeratorSubstitution::~NumeratorSubstitution
_TEXT	ENDS
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z PROC ; icu_56::NumeratorSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	__allmul
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z ENDP ; icu_56::NumeratorSubstitution::transformNumber
_TEXT	ENDS
EXTRN	_uprv_round_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z PROC ; icu_56::NumeratorSubstitution::transformNumber, COMDAT
; _this$ = ecx
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _number$[ebp]
	fmul	QWORD PTR [eax+16]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_round_56
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::NumeratorSubstitution::transformNumber
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::NumeratorSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::NumeratorSubstitution::doSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newRuleValue$ = 8					; size = 8
_oldRuleValue$ = 16					; size = 8
?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z PROC ; icu_56::NumeratorSubstitution::composeRuleValue, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	QWORD PTR _newRuleValue$[ebp]
	fdiv	QWORD PTR _oldRuleValue$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z ENDP ; icu_56::NumeratorSubstitution::composeRuleValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z PROC ; icu_56::NumeratorSubstitution::calcUpperBound, COMDAT
; _this$ = ecx
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z ENDP ; icu_56::NumeratorSubstitution::calcUpperBound
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ PROC	; icu_56::NumeratorSubstitution::tokenChar, COMDAT
; _this$ = ecx
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 60					; 0000003cH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ ENDP	; icu_56::NumeratorSubstitution::tokenChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GNumeratorSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumeratorSubstitution@icu_56@@UAEPAXI@Z PROC	; icu_56::NumeratorSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumeratorSubstitution@icu_56@@UAE@XZ	; icu_56::NumeratorSubstitution::~NumeratorSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumeratorSubstitution@icu_56@@UAEPAXI@Z ENDP	; icu_56::NumeratorSubstitution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::SameValueSubstitution::SameValueSubstitution
PUBLIC	??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::ModulusSubstitution::ModulusSubstitution
PUBLIC	??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::FractionalPartSubstitution::FractionalPartSubstitution
PUBLIC	??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::AbsoluteValueSubstitution::AbsoluteValueSubstitution
PUBLIC	??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::MultiplierSubstitution::MultiplierSubstitution
PUBLIC	?getDivisor@NFRule@icu_56@@QBENXZ		; icu_56::NFRule::getDivisor
PUBLIC	??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NumeratorSubstitution::NumeratorSubstitution
PUBLIC	?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isFractionRuleSet
PUBLIC	??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::IntegralPartSubstitution::IntegralPartSubstitution
PUBLIC	?getBaseValue@NFRule@icu_56@@QBE_JXZ		; icu_56::NFRule::getBaseValue
PUBLIC	?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::makeSubstitution
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv155 = -384						; size = 4
tv421 = -380						; size = 8
tv412 = -380						; size = 8
tv403 = -380						; size = 8
tv382 = -380						; size = 8
tv352 = -380						; size = 8
tv328 = -380						; size = 8
tv319 = -380						; size = 8
tv310 = -380						; size = 8
tv297 = -380						; size = 8
tv253 = -376						; size = 4
tv238 = -376						; size = 4
tv215 = -376						; size = 4
tv191 = -376						; size = 4
tv173 = -376						; size = 4
tv130 = -376						; size = 4
tv71 = -376						; size = 4
$T48803 = -368						; size = 4
$T48804 = -356						; size = 4
$T48807 = -344						; size = 4
$T48808 = -332						; size = 4
$T48811 = -320						; size = 4
$T48812 = -308						; size = 4
$T48815 = -296						; size = 4
$T48816 = -284						; size = 4
$T48819 = -272						; size = 4
$T48820 = -260						; size = 4
$T48823 = -248						; size = 4
$T48824 = -236						; size = 4
$T48827 = -224						; size = 4
$T48828 = -212						; size = 4
__$EHRec$ = -12						; size = 12
_pos$ = 8						; size = 4
_rule$ = 12						; size = 4
_predecessor$ = 16					; size = 4
_ruleSet$ = 20						; size = 4
_formatter$ = 24					; size = 4
_description$ = 28					; size = 4
_status$ = 32						; size = 4
?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::NFSubstitution::makeSubstitution, COMDAT
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 322
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN21@makeSubsti
; Line 323
	xor	eax, eax
	jmp	$LN22@makeSubsti
$LN21@makeSubsti:
; Line 326
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 60			; 0000003cH
	je	SHORT $LN18@makeSubsti
	cmp	DWORD PTR tv71[ebp], 61			; 0000003dH
	je	$LN3@makeSubsti
	cmp	DWORD PTR tv71[ebp], 62			; 0000003eH
	je	$LN11@makeSubsti
	jmp	$LN1@makeSubsti
$LN18@makeSubsti:
; Line 331
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv297[ebp], eax
	mov	DWORD PTR tv297[ebp+4], edx
	mov	eax, DWORD PTR tv297[ebp]
	and	eax, DWORD PTR tv297[ebp+4]
	cmp	eax, -1
	jne	SHORT $LN17@makeSubsti
; Line 333
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 334
	xor	eax, eax
	jmp	$LN22@makeSubsti
; Line 339
	jmp	$LN11@makeSubsti
$LN17@makeSubsti:
; Line 341
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv310[ebp], eax
	mov	DWORD PTR tv310[ebp+4], edx
	cmp	DWORD PTR tv310[ebp], -2		; fffffffeH
	jne	SHORT $LN45@makeSubsti
	cmp	DWORD PTR tv310[ebp+4], -1
	je	SHORT $LN14@makeSubsti
$LN45@makeSubsti:
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv319[ebp], eax
	mov	DWORD PTR tv319[ebp+4], edx
	cmp	DWORD PTR tv319[ebp], -3		; fffffffdH
	jne	SHORT $LN46@makeSubsti
	cmp	DWORD PTR tv319[ebp+4], -1
	je	SHORT $LN14@makeSubsti
$LN46@makeSubsti:
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv328[ebp], eax
	mov	DWORD PTR tv328[ebp+4], edx
	cmp	DWORD PTR tv328[ebp], -4		; fffffffcH
	jne	$LN15@makeSubsti
	cmp	DWORD PTR tv328[ebp+4], -1
	jne	SHORT $LN15@makeSubsti
$LN14@makeSubsti:
; Line 342
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48804[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T48804[ebp], 0
	je	SHORT $LN24@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48804[ebp]
	call	??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::IntegralPartSubstitution::IntegralPartSubstitution
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN25@makeSubsti
$LN24@makeSubsti:
	mov	DWORD PTR tv130[ebp], 0
$LN25@makeSubsti:
	mov	ecx, DWORD PTR tv130[ebp]
	mov	DWORD PTR $T48803[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48803[ebp]
	jmp	$LN22@makeSubsti
	jmp	$LN11@makeSubsti
$LN15@makeSubsti:
; Line 347
	mov	ecx, DWORD PTR _ruleSet$[ebp]
	call	?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ ; icu_56::NFRuleSet::isFractionRuleSet
	movsx	eax, al
	test	eax, eax
	je	$LN12@makeSubsti
; Line 349
	mov	esi, esp
	push	40					; 00000028H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48808[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T48808[ebp], 0
	je	SHORT $LN26@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _formatter$[ebp]
	call	?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv352[ebp], eax
	mov	DWORD PTR tv352[ebp+4], edx
	fild	QWORD PTR tv352[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T48808[ebp]
	call	??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NumeratorSubstitution::NumeratorSubstitution
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN27@makeSubsti
$LN26@makeSubsti:
	mov	DWORD PTR tv155[ebp], 0
$LN27@makeSubsti:
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T48807[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48807[ebp]
	jmp	$LN22@makeSubsti
; Line 353
	jmp	$LN11@makeSubsti
$LN12@makeSubsti:
; Line 355
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48812[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T48812[ebp], 0
	je	SHORT $LN28@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDivisor@NFRule@icu_56@@QBENXZ	; icu_56::NFRule::getDivisor
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48812[ebp]
	call	??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::MultiplierSubstitution::MultiplierSubstitution
	mov	DWORD PTR tv173[ebp], eax
	jmp	SHORT $LN29@makeSubsti
$LN28@makeSubsti:
	mov	DWORD PTR tv173[ebp], 0
$LN29@makeSubsti:
	mov	ecx, DWORD PTR tv173[ebp]
	mov	DWORD PTR $T48811[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48811[ebp]
	jmp	$LN22@makeSubsti
$LN11@makeSubsti:
; Line 362
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv382[ebp], eax
	mov	DWORD PTR tv382[ebp+4], edx
	mov	eax, DWORD PTR tv382[ebp]
	and	eax, DWORD PTR tv382[ebp+4]
	cmp	eax, -1
	jne	SHORT $LN9@makeSubsti
; Line 363
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48816[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T48816[ebp], 0
	je	SHORT $LN30@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48816[ebp]
	call	??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::AbsoluteValueSubstitution::AbsoluteValueSubstitution
	mov	DWORD PTR tv191[ebp], eax
	jmp	SHORT $LN31@makeSubsti
$LN30@makeSubsti:
	mov	DWORD PTR tv191[ebp], 0
$LN31@makeSubsti:
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR $T48815[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48815[ebp]
	jmp	$LN22@makeSubsti
; Line 368
	jmp	$LN3@makeSubsti
$LN9@makeSubsti:
; Line 370
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv403[ebp], eax
	mov	DWORD PTR tv403[ebp+4], edx
	cmp	DWORD PTR tv403[ebp], -2		; fffffffeH
	jne	SHORT $LN47@makeSubsti
	cmp	DWORD PTR tv403[ebp+4], -1
	je	SHORT $LN6@makeSubsti
$LN47@makeSubsti:
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv412[ebp], eax
	mov	DWORD PTR tv412[ebp+4], edx
	cmp	DWORD PTR tv412[ebp], -3		; fffffffdH
	jne	SHORT $LN48@makeSubsti
	cmp	DWORD PTR tv412[ebp+4], -1
	je	SHORT $LN6@makeSubsti
$LN48@makeSubsti:
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getBaseValue@NFRule@icu_56@@QBE_JXZ	; icu_56::NFRule::getBaseValue
	mov	DWORD PTR tv421[ebp], eax
	mov	DWORD PTR tv421[ebp+4], edx
	cmp	DWORD PTR tv421[ebp], -4		; fffffffcH
	jne	$LN7@makeSubsti
	cmp	DWORD PTR tv421[ebp+4], -1
	jne	SHORT $LN7@makeSubsti
$LN6@makeSubsti:
; Line 371
	mov	esi, esp
	push	20					; 00000014H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48820[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T48820[ebp], 0
	je	SHORT $LN32@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48820[ebp]
	call	??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::FractionalPartSubstitution::FractionalPartSubstitution
	mov	DWORD PTR tv215[ebp], eax
	jmp	SHORT $LN33@makeSubsti
$LN32@makeSubsti:
	mov	DWORD PTR tv215[ebp], 0
$LN33@makeSubsti:
	mov	ecx, DWORD PTR tv215[ebp]
	mov	DWORD PTR $T48819[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48819[ebp]
	jmp	$LN22@makeSubsti
	jmp	$LN3@makeSubsti
$LN7@makeSubsti:
; Line 376
	mov	ecx, DWORD PTR _ruleSet$[ebp]
	call	?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ ; icu_56::NFRuleSet::isFractionRuleSet
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@makeSubsti
; Line 378
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 379
	xor	eax, eax
	jmp	$LN22@makeSubsti
; Line 383
	jmp	$LN3@makeSubsti
$LN4@makeSubsti:
; Line 385
	mov	esi, esp
	push	40					; 00000028H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48824[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T48824[ebp], 0
	je	SHORT $LN34@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR _predecessor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDivisor@NFRule@icu_56@@QBENXZ	; icu_56::NFRule::getDivisor
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T48824[ebp]
	call	??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::ModulusSubstitution::ModulusSubstitution
	mov	DWORD PTR tv238[ebp], eax
	jmp	SHORT $LN35@makeSubsti
$LN34@makeSubsti:
	mov	DWORD PTR tv238[ebp], 0
$LN35@makeSubsti:
	mov	edx, DWORD PTR tv238[ebp]
	mov	DWORD PTR $T48823[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48823[ebp]
	jmp	SHORT $LN22@makeSubsti
$LN3@makeSubsti:
; Line 391
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48828[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T48828[ebp], 0
	je	SHORT $LN36@makeSubsti
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48828[ebp]
	call	??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::SameValueSubstitution::SameValueSubstitution
	mov	DWORD PTR tv253[ebp], eax
	jmp	SHORT $LN37@makeSubsti
$LN36@makeSubsti:
	mov	DWORD PTR tv253[ebp], 0
$LN37@makeSubsti:
	mov	ecx, DWORD PTR tv253[ebp]
	mov	DWORD PTR $T48827[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T48827[ebp]
	jmp	SHORT $LN22@makeSubsti
$LN1@makeSubsti:
; Line 396
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 398
	xor	eax, eax
$LN22@makeSubsti:
; Line 399
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T48804[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T48808[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T48812[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T48816[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T48820[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T48824[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T48828[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-388]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::NFSubstitution::makeSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBaseValue@NFRule@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBaseValue@NFRule@icu_56@@QBE_JXZ PROC		; icu_56::NFRule::getBaseValue, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrule.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBaseValue@NFRule@icu_56@@QBE_JXZ ENDP		; icu_56::NFRule::getBaseValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDivisor@NFRule@icu_56@@QBENXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getDivisor@NFRule@icu_56@@QBENXZ PROC			; icu_56::NFRule::getDivisor, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	mov	DWORD PTR tv73[ebp], ecx
	fild	DWORD PTR tv73[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [edx+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_pow_56
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDivisor@NFRule@icu_56@@QBENXZ ENDP			; icu_56::NFRule::getDivisor
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ PROC	; icu_56::NFRuleSet::isFractionRuleSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+116]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ ENDP	; icu_56::NFRuleSet::isFractionRuleSet
_TEXT	ENDS
PUBLIC	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
xdata$x	SEGMENT
__unwindtable$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__pos$ = 8						; size = 4
__divisor$ = 12						; size = 8
__ruleSet$ = 20						; size = 4
_description$ = 24					; size = 4
_status$ = 28						; size = 4
??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::MultiplierSubstitution::MultiplierSubstitution, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MultiplierSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __divisor$[ebp]
	fstp	QWORD PTR [eax+16]
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	DWORD PTR [ecx+28], edx
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+16]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@Multiplier
; Line 82
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN1@Multiplier:
; Line 84
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
__ehhandler$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::MultiplierSubstitution::MultiplierSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__pos$ = 8						; size = 4
__ruleSet$ = 12						; size = 4
_description$ = 16					; size = 4
_status$ = 20						; size = 4
??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::IntegralPartSubstitution::IntegralPartSubstitution, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IntegralPartSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::IntegralPartSubstitution::IntegralPartSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__pos$ = 8						; size = 4
__ruleSet$ = 12						; size = 4
_description$ = 16					; size = 4
_status$ = 20						; size = 4
??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::AbsoluteValueSubstitution::AbsoluteValueSubstitution, COMDAT
; _this$ = ecx
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AbsoluteValueSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::AbsoluteValueSubstitution::AbsoluteValueSubstitution
_TEXT	ENDS
PUBLIC	?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z ; icu_56::NumeratorSubstitution::fixdesc
PUBLIC	__$ArrayPad$
EXTRN	__imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv132 = -300						; size = 4
tv134 = -296						; size = 4
$T40889 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__pos$ = 8						; size = 4
__denominator$ = 12					; size = 8
__ruleSet$ = 20						; size = 4
_description$ = 24					; size = 4
_status$ = 28						; size = 4
??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::NumeratorSubstitution::NumeratorSubstitution, COMDAT
; _this$ = ecx
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T40889[ebp]
	push	edx
	call	?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z ; icu_56::NumeratorSubstitution::fixdesc
	add	esp, 8
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv132[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv132[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T40889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumeratorSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __denominator$[ebp]
	fstp	QWORD PTR [eax+16]
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	DWORD PTR [ecx+28], edx
; Line 281
	mov	esi, esp
	push	2
	push	OFFSET ?LTLT@NumeratorSubstitution@icu_56@@0QB_WB ; icu_56::NumeratorSubstitution::LTLT
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+32], al
; Line 282
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
__ehhandler$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::NumeratorSubstitution::NumeratorSubstitution
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z$0
__ehfuncinfo$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z
_TEXT	SEGMENT
$T48885 = -288						; size = 4
_result$40887 = -84					; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_desc$ = 12						; size = 4
?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z PROC ; icu_56::NumeratorSubstitution::fixdesc, COMDAT
; Line 266
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T48885[ebp], 0
; Line 267
	mov	esi, esp
	push	2
	push	OFFSET ?LTLT@NumeratorSubstitution@icu_56@@0QB_WB ; icu_56::NumeratorSubstitution::LTLT
	mov	ecx, DWORD PTR _desc$[ebp]
	call	DWORD PTR __imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@fixdesc
; Line 268
	mov	esi, esp
	mov	ecx, DWORD PTR _desc$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	push	0
	mov	eax, DWORD PTR _desc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$40887[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 269
	mov	esi, esp
	lea	eax, DWORD PTR _result$40887[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48885[ebp]
	or	ecx, 1
	mov	DWORD PTR $T48885[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _result$40887[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@fixdesc
$LN1@fixdesc:
; Line 271
	mov	esi, esp
	mov	eax, DWORD PTR _desc$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48885[ebp]
	or	ecx, 1
	mov	DWORD PTR $T48885[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@fixdesc:
; Line 272
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@fixdesc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@fixdesc:
	DD	1
	DD	$LN9@fixdesc
$LN9@fixdesc:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN7@fixdesc
$LN7@fixdesc:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$40887[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z ENDP ; icu_56::NumeratorSubstitution::fixdesc
PUBLIC	?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ ; icu_56::NFRuleSet::getOwner
PUBLIC	??_7NFSubstitution@icu_56@@6B@			; icu_56::NFSubstitution::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??_R4NFSubstitution@icu_56@@6B@			; icu_56::NFSubstitution::`RTTI Complete Object Locator'
PUBLIC	?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ ; icu_56::NFSubstitution::getDynamicClassID
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::DecimalFormat
EXTRN	?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ:PROC ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
EXTRN	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedNumberFormat::findRuleSet
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	??_ENFSubstitution@icu_56@@UAEPAXI@Z:PROC	; icu_56::NFSubstitution::`vector deleting destructor'
;	COMDAT ??_R4NFSubstitution@icu_56@@6B@
rdata$r	SEGMENT
??_R4NFSubstitution@icu_56@@6B@ DD 00H			; icu_56::NFSubstitution::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNFSubstitution@icu_56@@@8
	DD	FLAT:??_R3NFSubstitution@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NFSubstitution@icu_56@@6B@
CONST	SEGMENT
??_7NFSubstitution@icu_56@@6B@ DD FLAT:??_R4NFSubstitution@icu_56@@6B@ ; icu_56::NFSubstitution::`vftable'
	DD	FLAT:??_ENFSubstitution@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ
	DD	FLAT:??8NFSubstitution@icu_56@@UBECABV01@@Z
	DD	FLAT:?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
	DD	FLAT:?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv202 = -368						; size = 4
tv187 = -368						; size = 4
$T48900 = -360						; size = 4
$T48901 = -348						; size = 4
$T48904 = -336						; size = 4
$T48905 = -324						; size = 4
_tempNumberFormat$40991 = -120				; size = 4
_sym$40989 = -108					; size = 4
_workingDescription$ = -96				; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__pos$ = 8						; size = 4
__ruleSet$ = 12						; size = 4
_description$ = 16					; size = 4
_status$ = 20						; size = 4
??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::NFSubstitution::NFSubstitution, COMDAT
; _this$ = ecx
; Line 406
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NFSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __pos$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 411
	mov	esi, esp
	mov	eax, DWORD PTR _description$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 413
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 2
	jl	$LN15@NFSubstitu
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	esi, ax
	mov	edi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	edi, esp
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	esi, eax
	jne	SHORT $LN15@NFSubstitu
; Line 415
	mov	esi, esp
	push	1
	mov	edi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 416
	mov	esi, esp
	push	1
	push	0
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN14@NFSubstitu
$LN15@NFSubstitu:
; Line 418
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN14@NFSubstitu
; Line 420
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 421
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@NFSubstitu
$LN14@NFSubstitu:
; Line 424
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN12@NFSubstitu
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __ruleSet$[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	$LN11@NFSubstitu
$LN12@NFSubstitu:
; Line 430
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 37					; 00000025H
	jne	SHORT $LN10@NFSubstitu
; Line 434
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __ruleSet$[ebp]
	call	?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ ; icu_56::NFRuleSet::getOwner
	mov	ecx, eax
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	$LN11@NFSubstitu
$LN10@NFSubstitu:
; Line 436
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 35					; 00000023H
	je	SHORT $LN7@NFSubstitu
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 48					; 00000030H
	jne	$LN8@NFSubstitu
$LN7@NFSubstitu:
; Line 441
	mov	ecx, DWORD PTR __ruleSet$[ebp]
	call	?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ ; icu_56::NFRuleSet::getOwner
	mov	ecx, eax
	call	?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
	mov	DWORD PTR _sym$40989[ebp], eax
; Line 442
	cmp	DWORD PTR _sym$40989[ebp], 0
	jne	SHORT $LN6@NFSubstitu
; Line 443
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 444
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@NFSubstitu
$LN6@NFSubstitu:
; Line 446
	mov	esi, esp
	push	388					; 00000184H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48901[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T48901[ebp], 0
	je	SHORT $LN18@NFSubstitu
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sym$40989[ebp]
	push	ecx
	lea	edx, DWORD PTR _workingDescription$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T48901[ebp]
	call	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat
	mov	DWORD PTR tv187[ebp], eax
	jmp	SHORT $LN19@NFSubstitu
$LN18@NFSubstitu:
	mov	DWORD PTR tv187[ebp], 0
$LN19@NFSubstitu:
	mov	eax, DWORD PTR tv187[ebp]
	mov	DWORD PTR $T48900[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T48900[ebp]
	mov	DWORD PTR _tempNumberFormat$40991[ebp], ecx
; Line 448
	cmp	DWORD PTR _tempNumberFormat$40991[ebp], 0
	jne	SHORT $LN5@NFSubstitu
; Line 449
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 450
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@NFSubstitu
$LN5@NFSubstitu:
; Line 452
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@NFSubstitu
; Line 453
	mov	eax, DWORD PTR _tempNumberFormat$40991[ebp]
	mov	DWORD PTR $T48905[ebp], eax
	mov	ecx, DWORD PTR $T48905[ebp]
	mov	DWORD PTR $T48904[ebp], ecx
	cmp	DWORD PTR $T48904[ebp], 0
	je	SHORT $LN20@NFSubstitu
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48904[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48904[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv202[ebp], eax
	jmp	SHORT $LN21@NFSubstitu
$LN20@NFSubstitu:
	mov	DWORD PTR tv202[ebp], 0
$LN21@NFSubstitu:
; Line 454
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN16@NFSubstitu
$LN4@NFSubstitu:
; Line 456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tempNumberFormat$40991[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN11@NFSubstitu
$LN8@NFSubstitu:
; Line 458
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN2@NFSubstitu
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __ruleSet$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 470
	jmp	SHORT $LN11@NFSubstitu
$LN2@NFSubstitu:
; Line 474
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN11@NFSubstitu:
; Line 476
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@NFSubstitu:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@NFSubstitu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN28@NFSubstitu:
	DD	1
	DD	$LN27@NFSubstitu
$LN27@NFSubstitu:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN25@NFSubstitu
$LN25@NFSubstitu:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _workingDescription$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T48901[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-372]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::NFSubstitution::NFSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ PROC ; icu_56::NFRuleSet::getOwner, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ ENDP ; icu_56::NFRuleSet::getOwner
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GNFSubstitution@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNFSubstitution@icu_56@@UAEPAXI@Z PROC		; icu_56::NFSubstitution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNFSubstitution@icu_56@@UAEPAXI@Z ENDP		; icu_56::NFSubstitution::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
xdata$x	SEGMENT
__unwindtable$??1NFSubstitution@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1NFSubstitution@icu_56@@UAE@XZ$0
__ehfuncinfo$??1NFSubstitution@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1NFSubstitution@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1NFSubstitution@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv85 = -244						; size = 4
$T48928 = -236						; size = 4
$T48929 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1NFSubstitution@icu_56@@UAE@XZ PROC			; icu_56::NFSubstitution::~NFSubstitution, COMDAT
; _this$ = ecx
; Line 479
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1NFSubstitution@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NFSubstitution@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T48929[ebp], ecx
	mov	edx, DWORD PTR $T48929[ebp]
	mov	DWORD PTR $T48928[ebp], edx
	cmp	DWORD PTR $T48928[ebp], 0
	je	SHORT $LN3@NFSubstitu@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48928[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48928[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@NFSubstitu@2
$LN3@NFSubstitu@2:
	mov	DWORD PTR tv85[ebp], 0
$LN4@NFSubstitu@2:
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 482
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1NFSubstitution@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1NFSubstitution@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1NFSubstitution@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1NFSubstitution@icu_56@@UAE@XZ ENDP			; icu_56::NFSubstitution::~NFSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::NFSubstitution::setDivisor, COMDAT
; _this$ = ecx
; Line 492
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 494
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::NFSubstitution::setDivisor
_TEXT	ENDS
PUBLIC	?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::setDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newSymbols$ = 8					; size = 4
___formal$ = 12						; size = 4
?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z PROC ; icu_56::NFSubstitution::setDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@setDecimal
; Line 499
	mov	esi, esp
	mov	eax, DWORD PTR _newSymbols$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setDecimal:
; Line 501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ENDP ; icu_56::NFSubstitution::setDecimalFormatSymbols
_TEXT	ENDS
PUBLIC	?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ ; icu_56::NFSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ PROC	; icu_56::NFSubstitution::getStaticClassID, COMDAT
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ ENDP	; icu_56::NFSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ PROC	; icu_56::NFSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ ; icu_56::NFSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ ENDP	; icu_56::NFSubstitution::getDynamicClassID
_TEXT	ENDS
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8NFSubstitution@icu_56@@UBECABV01@@Z
_TEXT	SEGMENT
tv141 = -209						; size = 1
tv139 = -208						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8NFSubstitution@icu_56@@UBECABV01@@Z PROC		; icu_56::NFSubstitution::operator==, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 526
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	$LN3@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 0
	sete	cl
	mov	edx, DWORD PTR _rhs$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+8], 0
	sete	al
	cmp	ecx, eax
	jne	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN4@operator@2
	mov	edx, DWORD PTR _rhs$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+12], 0
	sete	al
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN5@operator@2
$LN4@operator@2:
	mov	esi, esp
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	mov	DWORD PTR tv139[ebp], ecx
$LN5@operator@2:
	cmp	DWORD PTR tv139[ebp], 0
	je	SHORT $LN3@operator@2
	mov	BYTE PTR tv141[ebp], 1
	jmp	SHORT $LN6@operator@2
$LN3@operator@2:
	mov	BYTE PTR tv141[ebp], 0
$LN6@operator@2:
	mov	al, BYTE PTR tv141[ebp]
; Line 527
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8NFSubstitution@icu_56@@UBECABV01@@Z ENDP		; icu_56::NFSubstitution::operator==
_TEXT	ENDS
PUBLIC	?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRuleSet::getName
PUBLIC	__$ArrayPad$
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z$0
__ehfuncinfo$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_temp$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z PROC ; icu_56::NFSubstitution::toString, COMDAT
; _this$ = ecx
; Line 537
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 542
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 543
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 545
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 546
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@toString
; Line 547
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRuleSet::getName
	jmp	SHORT $LN2@toString
$LN3@toString:
; Line 548
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@toString
; Line 549
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+280]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@toString:
; Line 551
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 553
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@toString
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@toString:
	DD	1
	DD	$LN9@toString
$LN9@toString:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN7@toString
$LN7@toString:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z ENDP ; icu_56::NFSubstitution::toString
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z PROC ; icu_56::NFRuleSet::getName, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ENDP ; icu_56::NFRuleSet::getName
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z:PROC
EXTRN	??1Formattable@icu_56@@UAE@XZ:PROC		; icu_56::Formattable::~Formattable
EXTRN	?format@Format@icu_56@@QBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::Format::format
EXTRN	??0Formattable@icu_56@@QAE@N@Z:PROC		; icu_56::Formattable::Formattable
EXTRN	?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMaximumFractionDigits
EXTRN	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::format
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
xdata$x	SEGMENT
__unwindtable$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
__ehfuncinfo$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T41059 = -536						; size = 224
_temp$41058 = -112					; size = 64
_numberToFormat$41055 = -40				; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
__pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::NFSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 571
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 572
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN4@doSubstitu
; Line 576
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __pos$[ebp]
	add	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	push	ecx
	mov	esi, esp
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
	jmp	$LN2@doSubstitu
$LN4@doSubstitu:
; Line 577
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN2@doSubstitu
; Line 582
	fild	QWORD PTR _number$[ebp]
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _numberToFormat$41055[ebp]
; Line 583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMaximumFractionDigits
	test	eax, eax
	jne	SHORT $LN1@doSubstitu
; Line 584
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$41055[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fstp	QWORD PTR _numberToFormat$41055[ebp]
$LN1@doSubstitu:
; Line 587
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41058[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 588
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$41055[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR $T41059[ebp]
	call	??0Formattable@icu_56@@QAE@N@Z		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$41058[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41059[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?format@Format@icu_56@@QBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::Format::format
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T41059[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
; Line 589
	mov	esi, esp
	lea	eax, DWORD PTR _temp$41058[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __pos$[ebp]
	add	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 590
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41058[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@doSubstitu:
; Line 591
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@doSubstitu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN12@doSubstitu:
	DD	1
	DD	$LN11@doSubstitu
$LN11@doSubstitu:
	DD	-112					; ffffff90H
	DD	64					; 00000040H
	DD	$LN9@doSubstitu
$LN9@doSubstitu:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41058[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T41059[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::NFSubstitution::doSubstitution
PUBLIC	__$ArrayPad$
EXTRN	?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::format
EXTRN	?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:PROC ; icu_56::NFRule::doFormat
EXTRN	?findDoubleRule@NFRuleSet@icu_56@@ABEPBVNFRule@2@N@Z:PROC ; icu_56::NFRuleSet::findDoubleRule
EXTRN	_uprv_getInfinity_56:PROC
EXTRN	_uprv_isInfinite_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$41076 = -124					; size = 64
_infiniteRule$41070 = -52				; size = 4
_numberToFormat$ = -40					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
__pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::NFSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _numberToFormat$[ebp]
; Line 609
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_isInfinite_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@doSubstitu@2
; Line 611
	call	_uprv_getInfinity_56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?findDoubleRule@NFRuleSet@icu_56@@ABEPBVNFRule@2@N@Z ; icu_56::NFRuleSet::findDoubleRule
	mov	DWORD PTR _infiniteRule$41070[ebp], eax
; Line 612
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __pos$[ebp]
	add	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _infiniteRule$41070[ebp]
	call	?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRule::doFormat
; Line 613
	jmp	$LN7@doSubstitu@2
$LN6@doSubstitu@2:
; Line 618
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN5@doSubstitu@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN5@doSubstitu@2
; Line 619
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __pos$[ebp]
	add	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 624
	jmp	$LN1@doSubstitu@2
$LN5@doSubstitu@2:
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@doSubstitu@2
; Line 626
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __pos$[ebp]
	add	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
	jmp	SHORT $LN1@doSubstitu@2
$LN3@doSubstitu@2:
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@doSubstitu@2
; Line 628
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41076[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 629
	lea	eax, DWORD PTR _temp$41076[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z ; icu_56::NumberFormat::format
; Line 630
	mov	esi, esp
	lea	eax, DWORD PTR _temp$41076[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __pos$[ebp]
	add	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 631
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41076[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@doSubstitu@2:
$LN7@doSubstitu@2:
; Line 633
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@doSubstitu@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN13@doSubstitu@2:
	DD	1
	DD	$LN12@doSubstitu@2
$LN12@doSubstitu@2:
	DD	-124					; ffffff84H
	DD	64					; 00000040H
	DD	$LN10@doSubstitu@2
$LN10@doSubstitu@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41076[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::NFSubstitution::doSubstitution
EXTRN	?setLong@Formattable@icu_56@@QAEXH@Z:PROC	; icu_56::Formattable::setLong
EXTRN	?setDouble@Formattable@icu_56@@QAEXN@Z:PROC	; icu_56::Formattable::setDouble
EXTRN	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getDouble
EXTRN	?createInstance@NumberFormat@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::createInstance
EXTRN	__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z:PROC ; icu_56::NFRuleSet::parse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
_TEXT	SEGMENT
tv141 = -284						; size = 4
$T48997 = -276						; size = 4
$T48998 = -264						; size = 4
_tempResult$41097 = -60					; size = 8
_status$41096 = -44					; size = 4
_fmt$41089 = -32					; size = 4
_status$41088 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_parsePosition$ = 12					; size = 4
_baseValue$ = 16					; size = 8
_upperBound$ = 24					; size = 8
_lenientParse$ = 32					; size = 1
_result$ = 36						; size = 4
?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z PROC ; icu_56::NFSubstitution::doParse, COMDAT
; _this$ = ecx
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 690
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _upperBound$[ebp]
; Line 698
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN7@doParse
; Line 699
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z ; icu_56::NFRuleSet::parse
; Line 700
	movsx	eax, BYTE PTR _lenientParse$[ebp]
	test	eax, eax
	je	$LN11@doParse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ ; icu_56::NFRuleSet::isFractionRuleSet
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN11@doParse
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN11@doParse
; Line 701
	mov	DWORD PTR _status$41088[ebp], 0
; Line 702
	lea	eax, DWORD PTR _status$41088[ebp]
	push	eax
	call	?createInstance@NumberFormat@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ; icu_56::NumberFormat::createInstance
	add	esp, 4
	mov	DWORD PTR _fmt$41089[ebp], eax
; Line 703
	mov	eax, DWORD PTR _status$41088[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@doParse
; Line 704
	mov	esi, esp
	mov	eax, DWORD PTR _parsePosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _fmt$41089[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _fmt$41089[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@doParse:
; Line 706
	mov	eax, DWORD PTR _fmt$41089[ebp]
	mov	DWORD PTR $T48998[ebp], eax
	mov	ecx, DWORD PTR $T48998[ebp]
	mov	DWORD PTR $T48997[ebp], ecx
	cmp	DWORD PTR $T48997[ebp], 0
	je	SHORT $LN10@doParse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48997[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48997[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN11@doParse
$LN10@doParse:
	mov	DWORD PTR tv141[ebp], 0
$LN11@doParse:
; Line 707
	jmp	SHORT $LN3@doParse
$LN7@doParse:
; Line 710
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN3@doParse
; Line 711
	mov	esi, esp
	mov	eax, DWORD PTR _parsePosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@doParse:
; Line 718
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@doParse
; Line 719
	mov	DWORD PTR _status$41096[ebp], 0
; Line 720
	lea	eax, DWORD PTR _status$41096[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDouble
	fstp	QWORD PTR _tempResult$41097[ebp]
; Line 744
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _baseValue$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _tempResult$41097[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _tempResult$41097[ebp]
; Line 745
	sub	esp, 8
	fld	QWORD PTR _tempResult$41097[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 746
	mov	al, 1
	jmp	SHORT $LN1@doParse
; Line 748
	jmp	SHORT $LN1@doParse
$LN2@doParse:
; Line 749
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setLong@Formattable@icu_56@@QAEXH@Z	; icu_56::Formattable::setLong
; Line 750
	xor	al, al
$LN1@doParse:
; Line 752
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@doParse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN15@doParse:
	DD	2
	DD	$LN14@doParse
$LN14@doParse:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@doParse
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN13@doParse
$LN13@doParse:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN12@doParse:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ENDP ; icu_56::NFSubstitution::doParse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ PROC ; icu_56::NFSubstitution::isModulusSubstitution, COMDAT
; _this$ = ecx
; Line 761
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 762
	xor	al, al
; Line 763
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ ENDP ; icu_56::NFSubstitution::isModulusSubstitution
_TEXT	ENDS
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__pos$ = 8						; size = 4
__ruleSet$ = 12						; size = 4
_description$ = 16					; size = 4
_status$ = 20						; size = 4
??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::SameValueSubstitution::SameValueSubstitution, COMDAT
; _this$ = ecx
; Line 778
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SameValueSubstitution@icu_56@@6B@
; Line 779
	mov	esi, esp
	push	2
	push	OFFSET _gEqualsEquals
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@SameValueS
; Line 781
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN2@SameValueS:
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
__ehhandler$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::SameValueSubstitution::SameValueSubstitution
PUBLIC	?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ ; icu_56::SameValueSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::SameValueSubstitution::getStaticClassID, COMDAT
; Line 785
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::SameValueSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::SameValueSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 785
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ ; icu_56::SameValueSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::SameValueSubstitution::getDynamicClassID
_TEXT	ENDS
PUBLIC	?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ ; icu_56::MultiplierSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::MultiplierSubstitution::getStaticClassID, COMDAT
; Line 791
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::MultiplierSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::MultiplierSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ ; icu_56::MultiplierSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::MultiplierSubstitution::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
_TEXT	SEGMENT
tv80 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z PROC ; icu_56::MultiplierSubstitution::operator==, COMDAT
; _this$ = ecx
; Line 794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 796
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8NFSubstitution@icu_56@@UBECABV01@@Z	; icu_56::NFSubstitution::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	fld	QWORD PTR [edx+16]
	fld	QWORD PTR [eax+16]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator@3
	mov	BYTE PTR tv80[ebp], 1
	jmp	SHORT $LN4@operator@3
$LN3@operator@3:
	mov	BYTE PTR tv80[ebp], 0
$LN4@operator@3:
	mov	al, BYTE PTR tv80[ebp]
; Line 797
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ENDP ; icu_56::MultiplierSubstitution::operator==
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv148 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__pos$ = 8						; size = 4
__divisor$ = 12						; size = 8
_predecessor$ = 20					; size = 4
__ruleSet$ = 24						; size = 4
_description$ = 28					; size = 4
_status$ = 32						; size = 4
??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::ModulusSubstitution::ModulusSubstitution, COMDAT
; _this$ = ecx
; Line 818
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ModulusSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __divisor$[ebp]
	fstp	QWORD PTR [eax+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 819
	sub	esp, 8
	fld	QWORD PTR __divisor$[ebp]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	DWORD PTR [ecx+28], edx
; Line 825
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	edx, DWORD PTR tv148[ebp]
	mov	eax, DWORD PTR [ecx+24]
	or	eax, DWORD PTR [edx+28]
	jne	SHORT $LN2@ModulusSub
; Line 826
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN2@ModulusSub:
; Line 829
	mov	esi, esp
	push	3
	push	OFFSET _gGreaterGreaterGreaterThan
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@ModulusSub
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _predecessor$[ebp]
	mov	DWORD PTR [eax+32], ecx
$LN1@ModulusSub:
; Line 837
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
__ehhandler$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::ModulusSubstitution::ModulusSubstitution
PUBLIC	?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ ; icu_56::ModulusSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::ModulusSubstitution::getStaticClassID, COMDAT
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::ModulusSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::ModulusSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ ; icu_56::ModulusSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::ModulusSubstitution::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
_TEXT	SEGMENT
tv87 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z PROC ; icu_56::ModulusSubstitution::operator==, COMDAT
; _this$ = ecx
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 845
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8NFSubstitution@icu_56@@UBECABV01@@Z	; icu_56::NFSubstitution::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	fld	QWORD PTR [edx+16]
	fld	QWORD PTR [eax+16]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	cmp	eax, DWORD PTR [edx+32]
	jne	SHORT $LN3@operator@4
	mov	BYTE PTR tv87[ebp], 1
	jmp	SHORT $LN4@operator@4
$LN3@operator@4:
	mov	BYTE PTR tv87[ebp], 0
$LN4@operator@4:
	mov	al, BYTE PTR tv87[ebp]
; Line 846
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ENDP ; icu_56::ModulusSubstitution::operator==
_TEXT	ENDS
PUBLIC	?getPos@NFSubstitution@icu_56@@QBEHXZ		; icu_56::NFSubstitution::getPos
EXTRN	?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:PROC ; icu_56::NFRule::doFormat
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_numberToFormat$41166 = -24				; size = 8
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
__pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::ModulusSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 863
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 867
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN2@doSubstitu@3
; Line 868
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR __pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _toInsertInto$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFSubstitution::doSubstitution
; Line 872
	jmp	SHORT $LN3@doSubstitu@3
$LN2@doSubstitu@3:
; Line 873
	mov	esi, esp
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _numberToFormat$41166[ebp], eax
	mov	DWORD PTR _numberToFormat$41166[ebp+4], edx
; Line 874
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	mov	eax, DWORD PTR _numberToFormat$41166[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _numberToFormat$41166[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	call	?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRule::doFormat
$LN3@doSubstitu@3:
; Line 876
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::ModulusSubstitution::doSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPos@NFSubstitution@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPos@NFSubstitution@icu_56@@QBEHXZ PROC		; icu_56::NFSubstitution::getPos, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfsubs.h
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getPos@NFSubstitution@icu_56@@QBEHXZ ENDP		; icu_56::NFSubstitution::getPos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_numberToFormat$41177 = -24				; size = 8
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
__pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::ModulusSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
; Line 888
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 892
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN2@doSubstitu@4
; Line 893
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR __pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _toInsertInto$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFSubstitution::doSubstitution
; Line 897
	jmp	SHORT $LN1@doSubstitu@4
$LN2@doSubstitu@4:
; Line 898
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _numberToFormat$41177[ebp]
; Line 900
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$41177[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRule::doFormat
$LN1@doSubstitu@4:
; Line 902
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::ModulusSubstitution::doSubstitution
_TEXT	ENDS
EXTRN	?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z:PROC ; icu_56::NFRule::doParse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
_TEXT	SEGMENT
_tempResult$41191 = -36					; size = 8
_status$41190 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_parsePosition$ = 12					; size = 4
_baseValue$ = 16					; size = 8
_upperBound$ = 24					; size = 8
_lenientParse$ = 32					; size = 1
_result$ = 36						; size = 4
?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z PROC ; icu_56::ModulusSubstitution::doParse, COMDAT
; _this$ = ecx
; Line 924
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 927
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN3@doParse@2
; Line 928
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _lenientParse$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _baseValue$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _parsePosition$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::NFSubstitution::doParse
	jmp	$LN2@doParse@2
; Line 933
	jmp	$LN2@doParse@2
$LN3@doParse@2:
; Line 934
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	push	0
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z ; icu_56::NFRule::doParse
; Line 936
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@doParse@2
; Line 937
	mov	DWORD PTR _status$41190[ebp], 0
; Line 938
	lea	eax, DWORD PTR _status$41190[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDouble
	fstp	QWORD PTR _tempResult$41191[ebp]
; Line 939
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _baseValue$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _tempResult$41191[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _tempResult$41191[ebp]
; Line 940
	sub	esp, 8
	fld	QWORD PTR _tempResult$41191[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
$LN1@doParse@2:
; Line 943
	mov	al, 1
$LN2@doParse@2:
; Line 945
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@doParse@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN8@doParse@2:
	DD	1
	DD	$LN7@doParse@2
$LN7@doParse@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@doParse@2
$LN6@doParse@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ENDP ; icu_56::ModulusSubstitution::doParse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z PROC ; icu_56::ModulusSubstitution::toString, COMDAT
; _this$ = ecx
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 960
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN2@toString@2
; Line 961
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 963
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 964
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 965
	jmp	SHORT $LN3@toString@2
$LN2@toString@2:
; Line 966
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z ; icu_56::NFSubstitution::toString
$LN3@toString@2:
; Line 968
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z ENDP ; icu_56::ModulusSubstitution::toString
_TEXT	ENDS
PUBLIC	?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ ; icu_56::IntegralPartSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::IntegralPartSubstitution::getStaticClassID, COMDAT
; Line 973
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::IntegralPartSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::IntegralPartSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 973
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ ; icu_56::IntegralPartSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::IntegralPartSubstitution::getDynamicClassID
_TEXT	ENDS
PUBLIC	?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ ; icu_56::NFRuleSet::makeIntoFractionRuleSet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__pos$ = 8						; size = 4
__ruleSet$ = 12						; size = 4
_description$ = 16					; size = 4
_status$ = 20						; size = 4
??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::FractionalPartSubstitution::FractionalPartSubstitution, COMDAT
; _this$ = ecx
; Line 994
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ruleSet$[ebp]
	push	edx
	mov	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::NFSubstitution
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FractionalPartSubstitution@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 1
; Line 998
	mov	esi, esp
	push	2
	push	OFFSET _gGreaterGreaterThan
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@Fractional
	mov	esi, esp
	push	3
	push	OFFSET _gGreaterGreaterGreaterThan
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@Fractional
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	cmp	DWORD PTR __ruleSet$[ebp], eax
	jne	SHORT $LN4@Fractional
$LN3@Fractional:
; Line 999
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 1
; Line 1000
	mov	esi, esp
	push	3
	push	OFFSET _gGreaterGreaterGreaterThan
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Fractional
; Line 1001
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
$LN2@Fractional:
; Line 1003
	jmp	SHORT $LN5@Fractional
$LN4@Fractional:
; Line 1005
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	mov	ecx, eax
	call	?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ ; icu_56::NFRuleSet::makeIntoFractionRuleSet
$LN5@Fractional:
; Line 1007
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NFSubstitution@icu_56@@UAE@XZ	; icu_56::NFSubstitution::~NFSubstitution
__ehhandler$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::FractionalPartSubstitution::FractionalPartSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ PROC	; icu_56::NFRuleSet::makeIntoFractionRuleSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ ENDP	; icu_56::NFRuleSet::makeIntoFractionRuleSet
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??1DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::~DigitList
EXTRN	?getDigit@DigitList@icu_56@@QAEDH@Z:PROC	; icu_56::DigitList::getDigit
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
EXTRN	?getDecimalAt@DigitList@icu_56@@QAEHXZ:PROC	; icu_56::DigitList::getDecimalAt
EXTRN	?getCount@DigitList@icu_56@@QBEHXZ:PROC		; icu_56::DigitList::getCount
EXTRN	?reduce@DigitList@icu_56@@QAEXXZ:PROC		; icu_56::DigitList::reduce
EXTRN	?roundFixedPoint@DigitList@icu_56@@QAEXH@Z:PROC	; icu_56::DigitList::roundFixedPoint
EXTRN	?set@DigitList@icu_56@@QAEXN@Z:PROC		; icu_56::DigitList::set
EXTRN	??0DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::DigitList
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
xdata$x	SEGMENT
__unwindtable$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv145 = -384						; size = 4
_digit$41236 = -184					; size = 8
_didx$41230 = -168					; size = 4
_pad$41229 = -153					; size = 1
_dl$41228 = -144					; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
__pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::FractionalPartSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 1026
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1029
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN8@doSubstitu@5
; Line 1030
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR __pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _toInsertInto$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFSubstitution::doSubstitution
; Line 1038
	jmp	$LN7@doSubstitu@5
$LN8@doSubstitu@5:
; Line 1056
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1057
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
; Line 1058
	push	20					; 00000014H
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	?roundFixedPoint@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::roundFixedPoint
; Line 1059
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 1061
	mov	BYTE PTR _pad$41229[ebp], 0
; Line 1062
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	?getCount@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getCount
	sub	eax, 1
	mov	DWORD PTR _didx$41230[ebp], eax
	jmp	SHORT $LN6@doSubstitu@5
$LN5@doSubstitu@5:
	mov	eax, DWORD PTR _didx$41230[ebp]
	sub	eax, 1
	mov	DWORD PTR _didx$41230[ebp], eax
$LN6@doSubstitu@5:
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	?getDecimalAt@DigitList@icu_56@@QAEHXZ	; icu_56::DigitList::getDecimalAt
	cmp	DWORD PTR _didx$41230[ebp], eax
	jl	$LN4@doSubstitu@5
; Line 1066
	movsx	eax, BYTE PTR _pad$41229[ebp]
	test	eax, eax
	je	SHORT $LN3@doSubstitu@5
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN3@doSubstitu@5
; Line 1067
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1068
	jmp	SHORT $LN2@doSubstitu@5
$LN3@doSubstitu@5:
; Line 1069
	mov	BYTE PTR _pad$41229[ebp], 1
$LN2@doSubstitu@5:
; Line 1071
	cmp	DWORD PTR _didx$41230[ebp], 0
	jl	SHORT $LN11@doSubstitu@5
	mov	eax, DWORD PTR _didx$41230[ebp]
	push	eax
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	?getDigit@DigitList@icu_56@@QAEDH@Z	; icu_56::DigitList::getDigit
	movsx	ecx, al
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR tv145[ebp], ecx
	jmp	SHORT $LN12@doSubstitu@5
$LN11@doSubstitu@5:
	mov	DWORD PTR tv145[ebp], 0
$LN12@doSubstitu@5:
	mov	eax, DWORD PTR tv145[ebp]
	cdq
	mov	DWORD PTR _digit$41236[ebp], eax
	mov	DWORD PTR _digit$41236[ebp+4], edx
; Line 1072
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	mov	eax, DWORD PTR _digit$41236[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _digit$41236[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	mov	ecx, eax
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1073
	jmp	$LN5@doSubstitu@5
$LN4@doSubstitu@5:
; Line 1075
	movsx	eax, BYTE PTR _pad$41229[ebp]
	test	eax, eax
	jne	SHORT $LN1@doSubstitu@5
; Line 1078
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR __pos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	mov	ecx, eax
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
$LN1@doSubstitu@5:
; Line 1080
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dl$41228[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
$LN7@doSubstitu@5:
; Line 1081
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@doSubstitu@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN17@doSubstitu@5:
	DD	1
	DD	$LN16@doSubstitu@5
$LN16@doSubstitu@5:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN14@doSubstitu@5
$LN14@doSubstitu@5:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _dl$41228[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-388]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::FractionalPartSubstitution::doSubstitution
PUBLIC	__real@4024000000000000
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1ParsePosition@icu_56@@UAE@XZ:PROC
EXTRN	?getDouble@DigitList@icu_56@@QBENXZ:PROC	; icu_56::DigitList::getDouble
EXTRN	__imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	?append@DigitList@icu_56@@QAEXD@Z:PROC		; icu_56::DigitList::append
EXTRN	??0Formattable@icu_56@@QAE@XZ:PROC		; icu_56::Formattable::Formattable
EXTRN	__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_??0ParsePosition@icu_56@@QAE@H@Z:PROC
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$3
__ehfuncinfo$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
_TEXT	SEGMENT
tv231 = -784						; size = 8
tv225 = -780						; size = 4
tv169 = -780						; size = 4
$T49091 = -772						; size = 4
$T49092 = -760						; size = 4
$T49095 = -748						; size = 4
$T49096 = -736						; size = 4
$T49101 = -721						; size = 1
_status$41260 = -520					; size = 4
_temp$41259 = -508					; size = 224
_fmt$41255 = -276					; size = 4
_dl$41254 = -264					; size = 112
_digit$41253 = -144					; size = 4
_result$41252 = -132					; size = 8
_workPos$41251 = -116					; size = 12
_workText$41250 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_parsePosition$ = 12					; size = 4
_baseValue$ = 16					; size = 8
___formal$ = 24						; size = 8
_lenientParse$ = 32					; size = 1
_resVal$ = 36						; size = 4
?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z PROC ; icu_56::FractionalPartSubstitution::doParse, COMDAT
; _this$ = ecx
; Line 1111
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 772				; 00000304H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-784]
	mov	ecx, 193				; 000000c1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1114
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN11@doParse@3
; Line 1115
	mov	eax, DWORD PTR _resVal$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _lenientParse$[ebp]
	push	ecx
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _baseValue$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _parsePosition$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::NFSubstitution::doParse
	jmp	$LN10@doParse@3
; Line 1121
	jmp	$LN10@doParse@3
$LN11@doParse@3:
; Line 1122
	mov	esi, esp
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1123
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1124
	fldz
	fstp	QWORD PTR _result$41252[ebp]
; Line 1128
	lea	ecx, DWORD PTR _dl$41254[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1129
	mov	DWORD PTR _fmt$41255[ebp], 0
$LN9@doParse@3:
; Line 1130
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN8@doParse@3
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN8@doParse@3
; Line 1131
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1132
	lea	ecx, DWORD PTR _temp$41259[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1133
	lea	eax, DWORD PTR _temp$41259[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	push	ecx
	lea	edx, DWORD PTR _workText$41250[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	mov	ecx, eax
	call	?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z ; icu_56::NFRuleSet::parse
; Line 1134
	mov	DWORD PTR _status$41260[ebp], 0
; Line 1135
	lea	eax, DWORD PTR _status$41260[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$41259[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
	mov	DWORD PTR _digit$41253[ebp], eax
; Line 1140
	movsx	eax, BYTE PTR _lenientParse$[ebp]
	test	eax, eax
	je	$LN4@doParse@3
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN4@doParse@3
; Line 1141
	cmp	DWORD PTR _fmt$41255[ebp], 0
	jne	$LN5@doParse@3
; Line 1142
	mov	DWORD PTR _status$41260[ebp], 0
; Line 1143
	lea	eax, DWORD PTR _status$41260[ebp]
	push	eax
	call	?createInstance@NumberFormat@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ; icu_56::NumberFormat::createInstance
	add	esp, 4
	mov	DWORD PTR _fmt$41255[ebp], eax
; Line 1144
	mov	eax, DWORD PTR _status$41260[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@doParse@3
; Line 1145
	mov	eax, DWORD PTR _fmt$41255[ebp]
	mov	DWORD PTR $T49092[ebp], eax
	mov	ecx, DWORD PTR $T49092[ebp]
	mov	DWORD PTR $T49091[ebp], ecx
	cmp	DWORD PTR $T49091[ebp], 0
	je	SHORT $LN14@doParse@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T49091[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T49091[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN15@doParse@3
$LN14@doParse@3:
	mov	DWORD PTR tv169[ebp], 0
$LN15@doParse@3:
; Line 1146
	mov	DWORD PTR _fmt$41255[ebp], 0
$LN5@doParse@3:
; Line 1149
	cmp	DWORD PTR _fmt$41255[ebp], 0
	je	SHORT $LN4@doParse@3
; Line 1150
	mov	esi, esp
	lea	eax, DWORD PTR _workPos$41251[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$41259[ebp]
	push	ecx
	lea	edx, DWORD PTR _workText$41250[ebp]
	push	edx
	mov	eax, DWORD PTR _fmt$41255[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _fmt$41255[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1151
	lea	eax, DWORD PTR _status$41260[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$41259[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
	mov	DWORD PTR _digit$41253[ebp], eax
$LN4@doParse@3:
; Line 1155
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN1@doParse@3
; Line 1156
	mov	eax, DWORD PTR _digit$41253[ebp]
	add	eax, 48					; 00000030H
	push	eax
	lea	ecx, DWORD PTR _dl$41254[ebp]
	call	?append@DigitList@icu_56@@QAEXD@Z	; icu_56::DigitList::append
; Line 1159
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	mov	edi, esp
	push	esi
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
; Line 1160
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@doParse@3:
; Line 1161
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN1@doParse@3
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN1@doParse@3
; Line 1162
	mov	esi, esp
	push	1
	push	0
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1163
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1164
	jmp	SHORT $LN2@doParse@3
$LN1@doParse@3:
; Line 1166
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _temp$41259[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	jmp	$LN9@doParse@3
$LN8@doParse@3:
; Line 1167
	mov	eax, DWORD PTR _fmt$41255[ebp]
	mov	DWORD PTR $T49096[ebp], eax
	mov	ecx, DWORD PTR $T49096[ebp]
	mov	DWORD PTR $T49095[ebp], ecx
	cmp	DWORD PTR $T49095[ebp], 0
	je	SHORT $LN16@doParse@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T49095[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T49095[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv225[ebp], eax
	jmp	SHORT $LN17@doParse@3
$LN16@doParse@3:
	mov	DWORD PTR tv225[ebp], 0
$LN17@doParse@3:
; Line 1169
	lea	ecx, DWORD PTR _dl$41254[ebp]
	call	?getCount@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getCount
	test	eax, eax
	jne	SHORT $LN18@doParse@3
	fldz
	fstp	QWORD PTR tv231[ebp]
	jmp	SHORT $LN19@doParse@3
$LN18@doParse@3:
	lea	ecx, DWORD PTR _dl$41254[ebp]
	call	?getDouble@DigitList@icu_56@@QBENXZ	; icu_56::DigitList::getDouble
	fstp	QWORD PTR tv231[ebp]
$LN19@doParse@3:
	fld	QWORD PTR tv231[ebp]
	fstp	QWORD PTR _result$41252[ebp]
; Line 1170
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _baseValue$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _result$41252[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _result$41252[ebp]
; Line 1171
	sub	esp, 8
	fld	QWORD PTR _result$41252[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _resVal$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 1172
	mov	BYTE PTR $T49101[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _dl$41254[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T49101[ebp]
$LN10@doParse@3:
; Line 1174
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@doParse@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 784				; 00000310H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN31@doParse@3:
	DD	5
	DD	$LN30@doParse@3
$LN30@doParse@3:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN24@doParse@3
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN25@doParse@3
	DD	-264					; fffffef8H
	DD	112					; 00000070H
	DD	$LN26@doParse@3
	DD	-508					; fffffe04H
	DD	224					; 000000e0H
	DD	$LN27@doParse@3
	DD	-520					; fffffdf8H
	DD	4
	DD	$LN28@doParse@3
$LN28@doParse@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN27@doParse@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN26@doParse@3:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
$LN25@doParse@3:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN24@doParse@3:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$41250[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41251[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2:
	lea	ecx, DWORD PTR _dl$41254[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$3:
	lea	ecx, DWORD PTR _temp$41259[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__ehhandler$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-788]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ENDP ; icu_56::FractionalPartSubstitution::doParse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
_TEXT	SEGMENT
tv82 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z PROC ; icu_56::FractionalPartSubstitution::operator==, COMDAT
; _this$ = ecx
; Line 1178
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1180
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8NFSubstitution@icu_56@@UBECABV01@@Z	; icu_56::NFSubstitution::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator@5
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx+16]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	cmp	eax, edx
	jne	SHORT $LN3@operator@5
	mov	BYTE PTR tv82[ebp], 1
	jmp	SHORT $LN4@operator@5
$LN3@operator@5:
	mov	BYTE PTR tv82[ebp], 0
$LN4@operator@5:
	mov	al, BYTE PTR tv82[ebp]
; Line 1181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ENDP ; icu_56::FractionalPartSubstitution::operator==
_TEXT	ENDS
PUBLIC	?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ ; icu_56::FractionalPartSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::FractionalPartSubstitution::getStaticClassID, COMDAT
; Line 1183
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::FractionalPartSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::FractionalPartSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 1183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ ; icu_56::FractionalPartSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::FractionalPartSubstitution::getDynamicClassID
_TEXT	ENDS
PUBLIC	?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ ; icu_56::AbsoluteValueSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::AbsoluteValueSubstitution::getStaticClassID, COMDAT
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::AbsoluteValueSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::AbsoluteValueSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ ; icu_56::AbsoluteValueSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::AbsoluteValueSubstitution::getDynamicClassID
_TEXT	ENDS
PUBLIC	?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ ; icu_56::NFSubstitution::getNumberFormat
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
__ehfuncinfo$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T41319 = -592						; size = 224
_temp$41318 = -168					; size = 64
_len$41309 = -96					; size = 4
_nf$41308 = -84						; size = 8
_aruleSet$ = -68					; size = 4
_longNF$ = -56						; size = 8
_numberToFormat$ = -40					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
_apos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::NumeratorSubstitution::doSubstitution, COMDAT
; _this$ = ecx
; Line 1197
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 584				; 00000248H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-596]
	mov	ecx, 146				; 00000092H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1201
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _numberToFormat$[ebp]
; Line 1202
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	call	?util64_fromDouble@icu_56@@YA_JN@Z	; icu_56::util64_fromDouble
	add	esp, 8
	mov	DWORD PTR _longNF$[ebp], eax
	mov	DWORD PTR _longNF$[ebp+4], edx
; Line 1204
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	mov	DWORD PTR _aruleSet$[ebp], eax
; Line 1205
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN7@doSubstitu@6
	cmp	DWORD PTR _aruleSet$[ebp], 0
	je	$LN7@doSubstitu@6
; Line 1207
	mov	eax, DWORD PTR _longNF$[ebp]
	mov	DWORD PTR _nf$41308[ebp], eax
	mov	ecx, DWORD PTR _longNF$[ebp+4]
	mov	DWORD PTR _nf$41308[ebp+4], ecx
; Line 1208
	mov	esi, esp
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$41309[ebp], eax
$LN6@doSubstitu@6:
; Line 1209
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _nf$41308[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _nf$41308[ebp]
	push	ecx
	call	__allmul
	mov	DWORD PTR _nf$41308[ebp], eax
	mov	DWORD PTR _nf$41308[ebp+4], edx
	fild	QWORD PTR _nf$41308[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fcomp	QWORD PTR [edx+16]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN5@doSubstitu@6
; Line 1210
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR _apos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1211
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR _apos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	push	0
	push	0
	mov	ecx, DWORD PTR _aruleSet$[ebp]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1212
	jmp	SHORT $LN6@doSubstitu@6
$LN5@doSubstitu@6:
; Line 1213
	mov	esi, esp
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _len$41309[ebp]
	add	eax, DWORD PTR _apos$[ebp]
	mov	DWORD PTR _apos$[ebp], eax
$LN7@doSubstitu@6:
; Line 1218
	fild	QWORD PTR _longNF$[ebp]
	fld	QWORD PTR _numberToFormat$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@doSubstitu@6
	cmp	DWORD PTR _aruleSet$[ebp], 0
	je	SHORT $LN4@doSubstitu@6
; Line 1219
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR _apos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	mov	eax, DWORD PTR _longNF$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _longNF$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _aruleSet$[ebp]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1224
	jmp	$LN1@doSubstitu@6
$LN4@doSubstitu@6:
; Line 1225
	cmp	DWORD PTR _aruleSet$[ebp], 0
	je	SHORT $LN2@doSubstitu@6
; Line 1226
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recursionCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR _apos$[ebp]
	push	eax
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _aruleSet$[ebp]
	call	?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1227
	jmp	$LN1@doSubstitu@6
$LN2@doSubstitu@6:
; Line 1228
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41318[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1229
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR $T41319[ebp]
	call	??0Formattable@icu_56@@QAE@N@Z		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$41318[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41319[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ ; icu_56::NFSubstitution::getNumberFormat
	mov	ecx, eax
	call	?format@Format@icu_56@@QBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::Format::format
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T41319[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
; Line 1230
	mov	esi, esp
	lea	eax, DWORD PTR _temp$41318[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	add	eax, DWORD PTR _apos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1231
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41318[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@doSubstitu@6:
; Line 1233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@doSubstitu@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 596				; 00000254H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN15@doSubstitu@6:
	DD	1
	DD	$LN14@doSubstitu@6
$LN14@doSubstitu@6:
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN12@doSubstitu@6
$LN12@doSubstitu@6:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$41318[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T41319[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__ehhandler$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-600]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::NumeratorSubstitution::doSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ PROC ; icu_56::NFSubstitution::getNumberFormat, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfsubs.h
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ ENDP ; icu_56::NFSubstitution::getNumberFormat
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	__$ArrayPad$
;	COMDAT __real@3ff0000000000000
; File d:\mozilla\intl\icu\source\i18n\nfsubs.cpp
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2
__ehfuncinfo$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
_TEXT	SEGMENT
tv182 = -632						; size = 8
$T49154 = -617						; size = 1
_pow$41346 = -416					; size = 4
_d$41345 = -404						; size = 8
_n$41344 = -388						; size = 8
_temp$41334 = -372					; size = 224
_workPos$41333 = -140					; size = 12
_workText$ = -120					; size = 64
_zeroCount$ = -48					; size = 4
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_parsePosition$ = 12					; size = 4
_baseValue$ = 16					; size = 8
_upperBound$ = 24					; size = 8
___formal$ = 32						; size = 1
_result$ = 36						; size = 4
?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z PROC ; icu_56::NumeratorSubstitution::doParse, COMDAT
; _this$ = ecx
; Line 1242
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 620				; 0000026cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-632]
	mov	ecx, 155				; 0000009bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1249
	mov	DWORD PTR _status$[ebp], 0
; Line 1250
	mov	DWORD PTR _zeroCount$[ebp], 0
; Line 1251
	mov	esi, esp
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1253
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN11@doParse@4
; Line 1254
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1255
	lea	ecx, DWORD PTR _temp$41334[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 2
$LN10@doParse@4:
; Line 1257
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN9@doParse@4
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN9@doParse@4
; Line 1258
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1259
	lea	eax, DWORD PTR _temp$41334[ebp]
	push	eax
	sub	esp, 8
	fld1
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	push	ecx
	lea	edx, DWORD PTR _workText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ ; icu_56::NFSubstitution::getRuleSet
	mov	ecx, eax
	call	?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z ; icu_56::NFRuleSet::parse
; Line 1260
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@doParse@4
; Line 1263
	jmp	$LN9@doParse@4
$LN8@doParse@4:
; Line 1266
	mov	eax, DWORD PTR _zeroCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _zeroCount$[ebp], eax
; Line 1267
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	mov	edi, esp
	push	esi
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
; Line 1268
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@doParse@4:
; Line 1269
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN6@doParse@4
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN6@doParse@4
; Line 1270
	mov	esi, esp
	push	1
	push	0
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1271
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1272
	jmp	SHORT $LN7@doParse@4
$LN6@doParse@4:
; Line 1273
	jmp	$LN10@doParse@4
$LN9@doParse@4:
; Line 1275
	mov	esi, esp
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1276
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1277
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1278
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _temp$41334[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@doParse@4:
; Line 1281
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN14@doParse@4
	fld1
	fstp	QWORD PTR tv182[ebp]
	jmp	SHORT $LN15@doParse@4
$LN14@doParse@4:
	fld	QWORD PTR _baseValue$[ebp]
	fstp	QWORD PTR tv182[ebp]
$LN15@doParse@4:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	0
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR tv182[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _parsePosition$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ; icu_56::NFSubstitution::doParse
; Line 1283
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN5@doParse@4
; Line 1288
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
	cdq
	mov	DWORD PTR _n$41344[ebp], eax
	mov	DWORD PTR _n$41344[ebp+4], edx
; Line 1289
	mov	DWORD PTR _d$41345[ebp], 1
	mov	DWORD PTR _d$41345[ebp+4], 0
; Line 1290
	mov	DWORD PTR _pow$41346[ebp], 0
$LN4@doParse@4:
; Line 1291
	mov	eax, DWORD PTR _d$41345[ebp+4]
	cmp	eax, DWORD PTR _n$41344[ebp+4]
	jg	SHORT $LN3@doParse@4
	jl	SHORT $LN19@doParse@4
	mov	ecx, DWORD PTR _d$41345[ebp]
	cmp	ecx, DWORD PTR _n$41344[ebp]
	ja	SHORT $LN3@doParse@4
$LN19@doParse@4:
; Line 1292
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _d$41345[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _d$41345[ebp]
	push	ecx
	call	__allmul
	mov	DWORD PTR _d$41345[ebp], eax
	mov	DWORD PTR _d$41345[ebp+4], edx
; Line 1293
	mov	eax, DWORD PTR _pow$41346[ebp]
	add	eax, 1
	mov	DWORD PTR _pow$41346[ebp], eax
; Line 1294
	jmp	SHORT $LN4@doParse@4
$LN3@doParse@4:
; Line 1296
	cmp	DWORD PTR _zeroCount$[ebp], 0
	jle	SHORT $LN1@doParse@4
; Line 1297
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _d$41345[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _d$41345[ebp]
	push	ecx
	call	__allmul
	mov	DWORD PTR _d$41345[ebp], eax
	mov	DWORD PTR _d$41345[ebp+4], edx
; Line 1298
	mov	eax, DWORD PTR _zeroCount$[ebp]
	sub	eax, 1
	mov	DWORD PTR _zeroCount$[ebp], eax
; Line 1299
	jmp	SHORT $LN3@doParse@4
$LN1@doParse@4:
; Line 1301
	fild	QWORD PTR _n$41344[ebp]
	fild	QWORD PTR _d$41345[ebp]
	fdivp	ST(1), ST(0)
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
$LN5@doParse@4:
; Line 1304
	mov	BYTE PTR $T49154[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T49154[ebp]
; Line 1305
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@doParse@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 632				; 00000278H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN26@doParse@4:
	DD	4
	DD	$LN25@doParse@4
$LN25@doParse@4:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN20@doParse@4
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN21@doParse@4
	DD	-140					; ffffff74H
	DD	12					; 0000000cH
	DD	$LN22@doParse@4
	DD	-372					; fffffe8cH
	DD	224					; 000000e0H
	DD	$LN23@doParse@4
$LN23@doParse@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN22@doParse@4:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN21@doParse@4:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN20@doParse@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _workPos$41333[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2:
	lea	ecx, DWORD PTR _temp$41334[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__ehhandler$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-636]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z ENDP ; icu_56::NumeratorSubstitution::doParse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z
_TEXT	SEGMENT
tv80 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z PROC ; icu_56::NumeratorSubstitution::operator==, COMDAT
; _this$ = ecx
; Line 1309
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1311
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8NFSubstitution@icu_56@@UBECABV01@@Z	; icu_56::NFSubstitution::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator@6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	fld	QWORD PTR [edx+16]
	fld	QWORD PTR [eax+16]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator@6
	mov	BYTE PTR tv80[ebp], 1
	jmp	SHORT $LN4@operator@6
$LN3@operator@6:
	mov	BYTE PTR tv80[ebp], 0
$LN4@operator@6:
	mov	al, BYTE PTR tv80[ebp]
; Line 1312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z ENDP ; icu_56::NumeratorSubstitution::operator==
_TEXT	ENDS
PUBLIC	?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ ; icu_56::NumeratorSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ PROC ; icu_56::NumeratorSubstitution::getStaticClassID, COMDAT
; Line 1314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ ENDP ; icu_56::NumeratorSubstitution::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ PROC ; icu_56::NumeratorSubstitution::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 1314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ ; icu_56::NumeratorSubstitution::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ ENDP ; icu_56::NumeratorSubstitution::getDynamicClassID
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$45524 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$45524[ebp], eax
; Line 597
	cmp	DWORD PTR _p$45524[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$45524[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$45524[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$45524[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
_TEXT	ENDS
END

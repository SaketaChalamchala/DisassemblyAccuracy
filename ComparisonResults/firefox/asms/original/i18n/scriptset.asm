; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\scriptset.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0ScriptSet@icu_56@@QAE@XZ			; icu_56::ScriptSet::ScriptSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScriptSet@icu_56@@QAE@XZ
_TEXT	SEGMENT
_i$35242 = -20						; size = 4
_this$ = -8						; size = 4
??0ScriptSet@icu_56@@QAE@XZ PROC			; icu_56::ScriptSet::ScriptSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\scriptset.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	DWORD PTR _i$35242[ebp], 0
	jmp	SHORT $LN3@ScriptSet
$LN2@ScriptSet:
	mov	eax, DWORD PTR _i$35242[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35242[ebp], eax
$LN3@ScriptSet:
	cmp	DWORD PTR _i$35242[ebp], 6
	jae	SHORT $LN4@ScriptSet
; Line 31
	mov	eax, DWORD PTR _i$35242[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 32
	jmp	SHORT $LN2@ScriptSet
$LN4@ScriptSet:
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ScriptSet@icu_56@@QAE@XZ ENDP			; icu_56::ScriptSet::ScriptSet
_TEXT	ENDS
PUBLIC	??1ScriptSet@icu_56@@QAE@XZ			; icu_56::ScriptSet::~ScriptSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ScriptSet@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ScriptSet@icu_56@@QAE@XZ PROC			; icu_56::ScriptSet::~ScriptSet, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScriptSet@icu_56@@QAE@XZ ENDP			; icu_56::ScriptSet::~ScriptSet
_TEXT	ENDS
PUBLIC	??4ScriptSet@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::ScriptSet::operator=
PUBLIC	??0ScriptSet@icu_56@@QAE@ABV01@@Z		; icu_56::ScriptSet::ScriptSet
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScriptSet@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0ScriptSet@icu_56@@QAE@ABV01@@Z PROC			; icu_56::ScriptSet::ScriptSet, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::ScriptSet::operator=
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptSet@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::ScriptSet::ScriptSet
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4ScriptSet@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_i$35258 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4ScriptSet@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::ScriptSet::operator=, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	DWORD PTR _i$35258[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _i$35258[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35258[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _i$35258[ebp], 6
	jae	SHORT $LN1@operator
; Line 45
	mov	eax, DWORD PTR _i$35258[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$35258[ebp]
	mov	esi, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 46
	jmp	SHORT $LN2@operator
$LN1@operator:
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptSet@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::ScriptSet::operator=
_TEXT	ENDS
PUBLIC	??8ScriptSet@icu_56@@QBECABV01@@Z		; icu_56::ScriptSet::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8ScriptSet@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_i$35267 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8ScriptSet@icu_56@@QBECABV01@@Z PROC			; icu_56::ScriptSet::operator==, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	DWORD PTR _i$35267[ebp], 0
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	eax, DWORD PTR _i$35267[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35267[ebp], eax
$LN4@operator@2:
	cmp	DWORD PTR _i$35267[ebp], 6
	jae	SHORT $LN2@operator@2
; Line 53
	mov	eax, DWORD PTR _i$35267[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$35267[ebp]
	mov	esi, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	cmp	eax, DWORD PTR [esi+edx*4]
	je	SHORT $LN1@operator@2
; Line 54
	xor	al, al
	jmp	SHORT $LN5@operator@2
$LN1@operator@2:
; Line 56
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 57
	mov	al, 1
$LN5@operator@2:
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8ScriptSet@icu_56@@QBECABV01@@Z ENDP			; icu_56::ScriptSet::operator==
_TEXT	ENDS
PUBLIC	?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::test
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_bit$ = -32						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_script$ = 8						; size = 4
_status$ = 12						; size = 4
?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z PROC ; icu_56::ScriptSet::test, COMDAT
; _this$ = ecx
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@test
; Line 62
	xor	al, al
	jmp	SHORT $LN4@test
$LN3@test:
; Line 64
	cmp	DWORD PTR _script$[ebp], 0
	jl	SHORT $LN1@test
	cmp	DWORD PTR _script$[ebp], 192		; 000000c0H
	jl	SHORT $LN2@test
$LN1@test:
; Line 65
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 66
	xor	al, al
	jmp	SHORT $LN4@test
$LN2@test:
; Line 68
	mov	eax, DWORD PTR _script$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _index$[ebp], eax
; Line 69
	mov	ecx, DWORD PTR _script$[ebp]
	and	ecx, 31					; 0000001fH
	mov	eax, 1
	shl	eax, cl
	mov	DWORD PTR _bit$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	and	edx, DWORD PTR _bit$[ebp]
	setne	al
$LN4@test:
; Line 71
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z ENDP ; icu_56::ScriptSet::test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_bit$ = -32						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_script$ = 8						; size = 4
_status$ = 12						; size = 4
?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z PROC ; icu_56::ScriptSet::set, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\scriptset.cpp
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@set
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN4@set
$LN3@set:
; Line 78
	cmp	DWORD PTR _script$[ebp], 0
	jl	SHORT $LN1@set
	cmp	DWORD PTR _script$[ebp], 192		; 000000c0H
	jl	SHORT $LN2@set
$LN1@set:
; Line 79
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN4@set
$LN2@set:
; Line 82
	mov	eax, DWORD PTR _script$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _index$[ebp], eax
; Line 83
	mov	ecx, DWORD PTR _script$[ebp]
	and	ecx, 31					; 0000001fH
	mov	eax, 1
	shl	eax, cl
	mov	DWORD PTR _bit$[ebp], eax
; Line 84
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	or	edx, DWORD PTR _bit$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
$LN4@set:
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ENDP ; icu_56::ScriptSet::set
_TEXT	ENDS
PUBLIC	?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_bit$ = -32						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_script$ = 8						; size = 4
_status$ = 12						; size = 4
?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z PROC ; icu_56::ScriptSet::reset, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@reset
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN4@reset
$LN3@reset:
; Line 92
	cmp	DWORD PTR _script$[ebp], 0
	jl	SHORT $LN1@reset
	cmp	DWORD PTR _script$[ebp], 192		; 000000c0H
	jl	SHORT $LN2@reset
$LN1@reset:
; Line 93
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN4@reset
$LN2@reset:
; Line 96
	mov	eax, DWORD PTR _script$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _index$[ebp], eax
; Line 97
	mov	ecx, DWORD PTR _script$[ebp]
	and	ecx, 31					; 0000001fH
	mov	eax, 1
	shl	eax, cl
	mov	DWORD PTR _bit$[ebp], eax
; Line 98
	mov	eax, DWORD PTR _bit$[ebp]
	not	eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
$LN4@reset:
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ENDP ; icu_56::ScriptSet::reset
_TEXT	ENDS
PUBLIC	?Union@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::ScriptSet::Union
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Union@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_i$35310 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?Union@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z PROC		; icu_56::ScriptSet::Union, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 105
	mov	DWORD PTR _i$35310[ebp], 0
	jmp	SHORT $LN3@Union
$LN2@Union:
	mov	eax, DWORD PTR _i$35310[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35310[ebp], eax
$LN3@Union:
	cmp	DWORD PTR _i$35310[ebp], 6
	jae	SHORT $LN1@Union
; Line 106
	mov	eax, DWORD PTR _i$35310[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$35310[ebp]
	mov	esi, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	or	eax, DWORD PTR [esi+edx*4]
	mov	ecx, DWORD PTR _i$35310[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 107
	jmp	SHORT $LN2@Union
$LN1@Union:
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Union@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ENDP		; icu_56::ScriptSet::Union
_TEXT	ENDS
PUBLIC	?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::ScriptSet::intersect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_i$35319 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::ScriptSet::intersect, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	DWORD PTR _i$35319[ebp], 0
	jmp	SHORT $LN3@intersect
$LN2@intersect:
	mov	eax, DWORD PTR _i$35319[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35319[ebp], eax
$LN3@intersect:
	cmp	DWORD PTR _i$35319[ebp], 6
	jae	SHORT $LN1@intersect
; Line 113
	mov	eax, DWORD PTR _i$35319[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$35319[ebp]
	mov	esi, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	and	eax, DWORD PTR [esi+edx*4]
	mov	ecx, DWORD PTR _i$35319[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 114
	jmp	SHORT $LN2@intersect
$LN1@intersect:
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::ScriptSet::intersect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::intersect
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T42067 = -260						; size = 4
_t$ = -56						; size = 24
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_script$ = 8						; size = 4
_status$ = 12						; size = 4
?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z PROC ; icu_56::ScriptSet::intersect, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	lea	ecx, DWORD PTR _t$[ebp]
	call	??0ScriptSet@icu_56@@QAE@XZ		; icu_56::ScriptSet::ScriptSet
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 120
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _t$[ebp]
	call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set
; Line 121
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@intersect@2
; Line 122
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::ScriptSet::intersect
$LN1@intersect@2:
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T42067[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1ScriptSet@icu_56@@QAE@XZ		; icu_56::ScriptSet::~ScriptSet
	mov	eax, DWORD PTR $T42067[ebp]
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@intersect@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN8@intersect@2:
	DD	1
	DD	$LN7@intersect@2
$LN7@intersect@2:
	DD	-56					; ffffffc8H
	DD	24					; 00000018H
	DD	$LN5@intersect@2
$LN5@intersect@2:
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1ScriptSet@icu_56@@QAE@XZ		; icu_56::ScriptSet::~ScriptSet
__ehhandler$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ENDP ; icu_56::ScriptSet::intersect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?intersects@ScriptSet@icu_56@@QBECABV12@@Z	; icu_56::ScriptSet::intersects
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?intersects@ScriptSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_i$35336 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?intersects@ScriptSet@icu_56@@QBECABV12@@Z PROC		; icu_56::ScriptSet::intersects, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\scriptset.cpp
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	DWORD PTR _i$35336[ebp], 0
	jmp	SHORT $LN4@intersects
$LN3@intersects:
	mov	eax, DWORD PTR _i$35336[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35336[ebp], eax
$LN4@intersects:
	cmp	DWORD PTR _i$35336[ebp], 6
	jae	SHORT $LN2@intersects
; Line 129
	mov	eax, DWORD PTR _i$35336[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$35336[ebp]
	mov	esi, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	and	eax, DWORD PTR [esi+edx*4]
	je	SHORT $LN1@intersects
; Line 130
	mov	al, 1
	jmp	SHORT $LN5@intersects
$LN1@intersects:
; Line 132
	jmp	SHORT $LN3@intersects
$LN2@intersects:
; Line 133
	xor	al, al
$LN5@intersects:
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?intersects@ScriptSet@icu_56@@QBECABV12@@Z ENDP		; icu_56::ScriptSet::intersects
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?contains@ScriptSet@icu_56@@QBECABV12@@Z	; icu_56::ScriptSet::contains
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?contains@ScriptSet@icu_56@@QBECABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?contains@ScriptSet@icu_56@@QBECABV12@@Z$0
__ehfuncinfo$?contains@ScriptSet@icu_56@@QBECABV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?contains@ScriptSet@icu_56@@QBECABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?contains@ScriptSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
$T42091 = -257						; size = 1
_t$ = -56						; size = 24
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
?contains@ScriptSet@icu_56@@QBECABV12@@Z PROC		; icu_56::ScriptSet::contains, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?contains@ScriptSet@icu_56@@QBECABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	??0ScriptSet@icu_56@@QAE@ABV01@@Z	; icu_56::ScriptSet::ScriptSet
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 138
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::ScriptSet::intersect
; Line 139
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	??8ScriptSet@icu_56@@QBECABV01@@Z	; icu_56::ScriptSet::operator==
	mov	BYTE PTR $T42091[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1ScriptSet@icu_56@@QAE@XZ		; icu_56::ScriptSet::~ScriptSet
	mov	al, BYTE PTR $T42091[ebp]
; Line 140
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@contains
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@contains:
	DD	1
	DD	$LN6@contains
$LN6@contains:
	DD	-56					; ffffffc8H
	DD	24					; 00000018H
	DD	$LN4@contains
$LN4@contains:
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?contains@ScriptSet@icu_56@@QBECABV12@@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1ScriptSet@icu_56@@QAE@XZ		; icu_56::ScriptSet::~ScriptSet
__ehhandler$?contains@ScriptSet@icu_56@@QBECABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?contains@ScriptSet@icu_56@@QBECABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?contains@ScriptSet@icu_56@@QBECABV12@@Z ENDP		; icu_56::ScriptSet::contains
PUBLIC	?setAll@ScriptSet@icu_56@@QAEAAV12@XZ		; icu_56::ScriptSet::setAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAll@ScriptSet@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_i$35351 = -20						; size = 4
_this$ = -8						; size = 4
?setAll@ScriptSet@icu_56@@QAEAAV12@XZ PROC		; icu_56::ScriptSet::setAll, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 144
	mov	DWORD PTR _i$35351[ebp], 0
	jmp	SHORT $LN3@setAll
$LN2@setAll:
	mov	eax, DWORD PTR _i$35351[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35351[ebp], eax
$LN3@setAll:
	cmp	DWORD PTR _i$35351[ebp], 6
	jae	SHORT $LN1@setAll
; Line 145
	mov	eax, DWORD PTR _i$35351[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], -1
; Line 146
	jmp	SHORT $LN2@setAll
$LN1@setAll:
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setAll@ScriptSet@icu_56@@QAEAAV12@XZ ENDP		; icu_56::ScriptSet::setAll
_TEXT	ENDS
PUBLIC	?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ		; icu_56::ScriptSet::resetAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_i$35359 = -20						; size = 4
_this$ = -8						; size = 4
?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ PROC		; icu_56::ScriptSet::resetAll, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 152
	mov	DWORD PTR _i$35359[ebp], 0
	jmp	SHORT $LN3@resetAll
$LN2@resetAll:
	mov	eax, DWORD PTR _i$35359[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35359[ebp], eax
$LN3@resetAll:
	cmp	DWORD PTR _i$35359[ebp], 6
	jae	SHORT $LN1@resetAll
; Line 153
	mov	eax, DWORD PTR _i$35359[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 154
	jmp	SHORT $LN2@resetAll
$LN1@resetAll:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ ENDP		; icu_56::ScriptSet::resetAll
_TEXT	ENDS
PUBLIC	?countMembers@ScriptSet@icu_56@@QBEHXZ		; icu_56::ScriptSet::countMembers
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countMembers@ScriptSet@icu_56@@QBEHXZ
_TEXT	SEGMENT
_x$35373 = -44						; size = 4
_i$35368 = -32						; size = 4
_count$ = -20						; size = 4
_this$ = -8						; size = 4
?countMembers@ScriptSet@icu_56@@QBEHXZ PROC		; icu_56::ScriptSet::countMembers, COMDAT
; _this$ = ecx
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	mov	DWORD PTR _count$[ebp], 0
; Line 162
	mov	DWORD PTR _i$35368[ebp], 0
	jmp	SHORT $LN5@countMembe
$LN4@countMembe:
	mov	eax, DWORD PTR _i$35368[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35368[ebp], eax
$LN5@countMembe:
	cmp	DWORD PTR _i$35368[ebp], 6
	jae	SHORT $LN3@countMembe
; Line 163
	mov	eax, DWORD PTR _i$35368[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _x$35373[ebp], edx
$LN2@countMembe:
; Line 164
	cmp	DWORD PTR _x$35373[ebp], 0
	jbe	SHORT $LN1@countMembe
; Line 165
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 166
	mov	eax, DWORD PTR _x$35373[ebp]
	sub	eax, 1
	and	eax, DWORD PTR _x$35373[ebp]
	mov	DWORD PTR _x$35373[ebp], eax
; Line 167
	jmp	SHORT $LN2@countMembe
$LN1@countMembe:
; Line 168
	jmp	SHORT $LN4@countMembe
$LN3@countMembe:
; Line 169
	mov	eax, DWORD PTR _count$[ebp]
; Line 170
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?countMembers@ScriptSet@icu_56@@QBEHXZ ENDP		; icu_56::ScriptSet::countMembers
_TEXT	ENDS
PUBLIC	?hashCode@ScriptSet@icu_56@@QBEHXZ		; icu_56::ScriptSet::hashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@ScriptSet@icu_56@@QBEHXZ
_TEXT	SEGMENT
_i$35381 = -32						; size = 4
_hash$ = -20						; size = 4
_this$ = -8						; size = 4
?hashCode@ScriptSet@icu_56@@QBEHXZ PROC			; icu_56::ScriptSet::hashCode, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	mov	DWORD PTR _hash$[ebp], 0
; Line 174
	mov	DWORD PTR _i$35381[ebp], 0
	jmp	SHORT $LN3@hashCode
$LN2@hashCode:
	mov	eax, DWORD PTR _i$35381[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35381[ebp], eax
$LN3@hashCode:
	cmp	DWORD PTR _i$35381[ebp], 6
	jge	SHORT $LN1@hashCode
; Line 175
	mov	eax, DWORD PTR _i$35381[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _hash$[ebp]
	xor	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _hash$[ebp], edx
; Line 176
	jmp	SHORT $LN2@hashCode
$LN1@hashCode:
; Line 177
	mov	eax, DWORD PTR _hash$[ebp]
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@ScriptSet@icu_56@@QBEHXZ ENDP			; icu_56::ScriptSet::hashCode
_TEXT	ENDS
PUBLIC	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z		; icu_56::ScriptSet::nextSetBit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextSetBit@ScriptSet@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_scriptIndex$35392 = -32				; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_fromIndex$ = 8						; size = 4
?nextSetBit@ScriptSet@icu_56@@QBEHH@Z PROC		; icu_56::ScriptSet::nextSetBit, COMDAT
; _this$ = ecx
; Line 180
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	cmp	DWORD PTR _fromIndex$[ebp], 0
	jge	SHORT $LN5@nextSetBit
; Line 183
	or	eax, -1
	jmp	SHORT $LN6@nextSetBit
$LN5@nextSetBit:
; Line 185
	mov	DWORD PTR _status$[ebp], 0
; Line 186
	mov	eax, DWORD PTR _fromIndex$[ebp]
	mov	DWORD PTR _scriptIndex$35392[ebp], eax
	jmp	SHORT $LN4@nextSetBit
$LN3@nextSetBit:
	mov	eax, DWORD PTR _scriptIndex$35392[ebp]
	add	eax, 1
	mov	DWORD PTR _scriptIndex$35392[ebp], eax
$LN4@nextSetBit:
	cmp	DWORD PTR _scriptIndex$35392[ebp], 192	; 000000c0H
	jge	SHORT $LN2@nextSetBit
; Line 187
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _scriptIndex$35392[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::test
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@nextSetBit
; Line 188
	mov	eax, DWORD PTR _scriptIndex$35392[ebp]
	jmp	SHORT $LN6@nextSetBit
$LN1@nextSetBit:
; Line 190
	jmp	SHORT $LN3@nextSetBit
$LN2@nextSetBit:
; Line 191
	or	eax, -1
$LN6@nextSetBit:
; Line 192
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@nextSetBit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN10@nextSetBit:
	DD	1
	DD	$LN9@nextSetBit
$LN9@nextSetBit:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@nextSetBit
$LN8@nextSetBit:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?nextSetBit@ScriptSet@icu_56@@QBEHH@Z ENDP		; icu_56::ScriptSet::nextSetBit
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::ScriptSet::displayScripts
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	_uscript_getShortName_56:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z$0
__ehfuncinfo$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
tv88 = -336						; size = 4
tv89 = -332						; size = 4
$T35411 = -324						; size = 64
_scriptName$35410 = -60					; size = 4
_i$35404 = -48						; size = 4
_firstTime$ = -33					; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dest$ = 8						; size = 4
?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::ScriptSet::displayScripts, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	BYTE PTR _firstTime$[ebp], 1
; Line 196
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z	; icu_56::ScriptSet::nextSetBit
	mov	DWORD PTR _i$35404[ebp], eax
	jmp	SHORT $LN4@displayScr
$LN3@displayScr:
	mov	eax, DWORD PTR _i$35404[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z	; icu_56::ScriptSet::nextSetBit
	mov	DWORD PTR _i$35404[ebp], eax
$LN4@displayScr:
	cmp	DWORD PTR _i$35404[ebp], 0
	jl	$LN2@displayScr
; Line 197
	movsx	eax, BYTE PTR _firstTime$[ebp]
	test	eax, eax
	jne	SHORT $LN1@displayScr
; Line 198
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@displayScr:
; Line 200
	mov	BYTE PTR _firstTime$[ebp], 0
; Line 201
	mov	eax, DWORD PTR _i$35404[ebp]
	push	eax
	call	_uscript_getShortName_56
	add	esp, 4
	mov	DWORD PTR _scriptName$35410[ebp], eax
; Line 202
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _scriptName$35410[ebp]
	push	eax
	lea	ecx, DWORD PTR $T35411[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv88[ebp]
	push	edx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T35411[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 203
	jmp	$LN3@displayScr
$LN2@displayScr:
; Line 204
	mov	eax, DWORD PTR _dest$[ebp]
; Line 205
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T35411[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::ScriptSet::displayScripts
PUBLIC	__$ArrayPad$
PUBLIC	?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::parseScripts
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	_u_getPropertyValueEnum_56:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	_u_isUWhiteSpace_56:PROC
EXTRN	__imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T42128 = -396						; size = 4
$T42129 = -384						; size = 4
_sc$35428 = -180					; size = 4
_buf$35427 = -168					; size = 40
_c$35423 = -120						; size = 4
_i$35419 = -108						; size = 4
_oneScriptName$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_scriptString$ = 8					; size = 4
_status$ = 12						; size = 4
?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::ScriptSet::parseScripts, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ	; icu_56::ScriptSet::resetAll
; Line 209
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parseScrip
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN10@parseScrip
$LN9@parseScrip:
; Line 212
	mov	esi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 213
	mov	DWORD PTR _i$35419[ebp], 0
$LN8@parseScrip:
	mov	esi, esp
	mov	ecx, DWORD PTR _scriptString$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$35419[ebp], eax
	jge	$LN7@parseScrip
; Line 214
	mov	esi, esp
	mov	eax, DWORD PTR _i$35419[ebp]
	push	eax
	mov	ecx, DWORD PTR _scriptString$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$35423[ebp], eax
; Line 215
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _i$35419[ebp]
	push	eax
	mov	ecx, DWORD PTR _scriptString$[ebp]
	call	DWORD PTR __imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _i$35419[ebp], eax
; Line 216
	mov	eax, DWORD PTR _c$35423[ebp]
	push	eax
	call	_u_isUWhiteSpace_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@parseScrip
; Line 217
	mov	esi, esp
	mov	eax, DWORD PTR _c$35423[ebp]
	push	eax
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 218
	mov	esi, esp
	mov	ecx, DWORD PTR _scriptString$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$35419[ebp], eax
	jge	SHORT $LN6@parseScrip
; Line 219
	jmp	$LN8@parseScrip
$LN6@parseScrip:
; Line 222
	mov	esi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN4@parseScrip
; Line 224
	mov	esi, esp
	push	0
	push	39					; 00000027H
	lea	eax, DWORD PTR _buf$35427[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 225
	mov	BYTE PTR _buf$35427[ebp+39], 0
; Line 226
	lea	eax, DWORD PTR _buf$35427[ebp]
	push	eax
	push	4106					; 0000100aH
	call	_u_getPropertyValueEnum_56
	add	esp, 8
	mov	DWORD PTR _sc$35428[ebp], eax
; Line 227
	cmp	DWORD PTR _sc$35428[ebp], -1
	jne	SHORT $LN3@parseScrip
; Line 228
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 229
	jmp	SHORT $LN2@parseScrip
$LN3@parseScrip:
; Line 230
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sc$35428[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set
$LN2@parseScrip:
; Line 232
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseScrip
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T42128[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T42128[ebp]
	jmp	SHORT $LN10@parseScrip
$LN1@parseScrip:
; Line 235
	mov	esi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@parseScrip:
; Line 237
	jmp	$LN8@parseScrip
$LN7@parseScrip:
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T42129[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T42129[ebp]
$LN10@parseScrip:
; Line 239
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@parseScrip
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@parseScrip:
	DD	2
	DD	$LN17@parseScrip
$LN17@parseScrip:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN14@parseScrip
	DD	-168					; ffffff58H
	DD	40					; 00000028H
	DD	$LN15@parseScrip
$LN15@parseScrip:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN14@parseScrip:
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _oneScriptName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseScripts@ScriptSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::ScriptSet::parseScripts
PUBLIC	_uhash_equalsScriptSet_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_equalsScriptSet_56
_TEXT	SEGMENT
_s2$ = -20						; size = 4
_s1$ = -8						; size = 4
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_uhash_equalsScriptSet_56 PROC				; COMDAT
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 245
	mov	eax, DWORD PTR _key1$[ebp]
	mov	DWORD PTR _s1$[ebp], eax
; Line 246
	mov	eax, DWORD PTR _key2$[ebp]
	mov	DWORD PTR _s2$[ebp], eax
; Line 247
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	??8ScriptSet@icu_56@@QBECABV01@@Z	; icu_56::ScriptSet::operator==
; Line 248
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_equalsScriptSet_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_compareScriptSet_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_compareScriptSet_56
_TEXT	SEGMENT
_i1$ = -56						; size = 4
_i0$ = -44						; size = 4
_diff$ = -32						; size = 4
_s1$ = -20						; size = 4
_s0$ = -8						; size = 4
_key0$ = 8						; size = 4
_key1$ = 12						; size = 4
_uhash_compareScriptSet_56 PROC				; COMDAT
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 252
	mov	eax, DWORD PTR _key0$[ebp]
	mov	DWORD PTR _s0$[ebp], eax
; Line 253
	mov	eax, DWORD PTR _key1$[ebp]
	mov	DWORD PTR _s1$[ebp], eax
; Line 254
	mov	ecx, DWORD PTR _s0$[ebp]
	call	?countMembers@ScriptSet@icu_56@@QBEHXZ	; icu_56::ScriptSet::countMembers
	mov	esi, eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?countMembers@ScriptSet@icu_56@@QBEHXZ	; icu_56::ScriptSet::countMembers
	sub	esi, eax
	mov	DWORD PTR _diff$[ebp], esi
; Line 255
	je	SHORT $LN3@uhash_comp
	mov	al, BYTE PTR _diff$[ebp]
	jmp	SHORT $LN4@uhash_comp
$LN3@uhash_comp:
; Line 256
	push	0
	mov	ecx, DWORD PTR _s0$[ebp]
	call	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z	; icu_56::ScriptSet::nextSetBit
	mov	DWORD PTR _i0$[ebp], eax
; Line 257
	push	0
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z	; icu_56::ScriptSet::nextSetBit
	mov	DWORD PTR _i1$[ebp], eax
$LN2@uhash_comp:
; Line 258
	mov	eax, DWORD PTR _i0$[ebp]
	sub	eax, DWORD PTR _i1$[ebp]
	mov	DWORD PTR _diff$[ebp], eax
	jne	SHORT $LN1@uhash_comp
	cmp	DWORD PTR _i0$[ebp], 0
	jle	SHORT $LN1@uhash_comp
; Line 259
	mov	eax, DWORD PTR _i0$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _s0$[ebp]
	call	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z	; icu_56::ScriptSet::nextSetBit
	mov	DWORD PTR _i0$[ebp], eax
; Line 260
	mov	eax, DWORD PTR _i1$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?nextSetBit@ScriptSet@icu_56@@QBEHH@Z	; icu_56::ScriptSet::nextSetBit
	mov	DWORD PTR _i1$[ebp], eax
; Line 261
	jmp	SHORT $LN2@uhash_comp
$LN1@uhash_comp:
; Line 262
	mov	al, BYTE PTR _diff$[ebp]
$LN4@uhash_comp:
; Line 263
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_compareScriptSet_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_hashScriptSet_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_hashScriptSet_56
_TEXT	SEGMENT
_s$ = -8						; size = 4
_key$ = 8						; size = 4
_uhash_hashScriptSet_56 PROC				; COMDAT
; Line 266
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 267
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 268
	mov	ecx, DWORD PTR _s$[ebp]
	call	?hashCode@ScriptSet@icu_56@@QBEHXZ	; icu_56::ScriptSet::hashCode
; Line 269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_hashScriptSet_56 ENDP
_TEXT	ENDS
PUBLIC	??_GScriptSet@icu_56@@QAEPAXI@Z			; icu_56::ScriptSet::`scalar deleting destructor'
PUBLIC	_uhash_deleteScriptSet_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_deleteScriptSet_56
_TEXT	SEGMENT
tv68 = -232						; size = 4
$T42150 = -224						; size = 4
$T42151 = -212						; size = 4
_s$ = -8						; size = 4
_obj$ = 8						; size = 4
_uhash_deleteScriptSet_56 PROC				; COMDAT
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 273
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 274
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR $T42151[ebp], eax
	mov	ecx, DWORD PTR $T42151[ebp]
	mov	DWORD PTR $T42150[ebp], ecx
	cmp	DWORD PTR $T42150[ebp], 0
	je	SHORT $LN3@uhash_dele
	push	1
	mov	ecx, DWORD PTR $T42150[ebp]
	call	??_GScriptSet@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@uhash_dele
$LN3@uhash_dele:
	mov	DWORD PTR tv68[ebp], 0
$LN1@uhash_dele:
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_deleteScriptSet_56 ENDP
_TEXT	ENDS
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GScriptSet@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GScriptSet@icu_56@@QAEPAXI@Z PROC			; icu_56::ScriptSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptSet@icu_56@@QAE@XZ		; icu_56::ScriptSet::~ScriptSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptSet@icu_56@@QAEPAXI@Z ENDP			; icu_56::ScriptSet::`scalar deleting destructor'
_TEXT	ENDS
END

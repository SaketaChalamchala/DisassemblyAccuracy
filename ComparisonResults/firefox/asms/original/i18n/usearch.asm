; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\usearch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
_g_nfcImpl DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	_usearch_openFromCollator_56
PUBLIC	_usearch_open_56
EXTRN	_ucol_close_56:PROC
EXTRN	_ucol_open_56:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_open_56
_TEXT	SEGMENT
_result$73142 = -20					; size = 4
_collator$73141 = -8					; size = 4
_pattern$ = 8						; size = 4
_patternlength$ = 12					; size = 4
_text$ = 16						; size = 4
_textlength$ = 20					; size = 4
_locale$ = 24						; size = 4
_breakiter$ = 28					; size = 4
_status$ = 32						; size = 4
_usearch_open_56 PROC					; COMDAT
; File d:\mozilla\intl\icu\source\i18n\usearch.cpp
; Line 2598
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2599
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@usearch_op
; Line 2600
	xor	eax, eax
	jmp	$LN7@usearch_op
$LN6@usearch_op:
; Line 2608
	cmp	DWORD PTR _locale$[ebp], 0
	je	SHORT $LN5@usearch_op
; Line 2610
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	call	_ucol_open_56
	add	esp, 8
	mov	DWORD PTR _collator$73141[ebp], eax
; Line 2614
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _breakiter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _collator$73141[ebp]
	push	edx
	mov	eax, DWORD PTR _textlength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patternlength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_usearch_openFromCollator_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _result$73142[ebp], eax
; Line 2616
	cmp	DWORD PTR _result$73142[ebp], 0
	je	SHORT $LN3@usearch_op
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@usearch_op
$LN3@usearch_op:
; Line 2617
	cmp	DWORD PTR _collator$73141[ebp], 0
	je	SHORT $LN2@usearch_op
; Line 2618
	mov	eax, DWORD PTR _collator$73141[ebp]
	push	eax
	call	_ucol_close_56
	add	esp, 4
$LN2@usearch_op:
; Line 2620
	xor	eax, eax
	jmp	SHORT $LN7@usearch_op
; Line 2622
	jmp	SHORT $LN1@usearch_op
$LN4@usearch_op:
; Line 2623
	mov	eax, DWORD PTR _result$73142[ebp]
	mov	BYTE PTR [eax+4156], 1
$LN1@usearch_op:
; Line 2625
	mov	eax, DWORD PTR _result$73142[ebp]
	jmp	SHORT $LN7@usearch_op
$LN5@usearch_op:
; Line 2627
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2628
	xor	eax, eax
$LN7@usearch_op:
; Line 2629
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_open_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	_usearch_close_56
EXTRN	_ucol_openElements_56:PROC
EXTRN	_ubrk_setText_56:PROC
EXTRN	_ubrk_open_56:PROC
EXTRN	_ucol_getLocaleByType_56:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	__imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:PROC
EXTRN	_ucol_getVariableTop_56:PROC
EXTRN	_ucol_getStrength_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	_ucol_getAttribute_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_openFromCollator_56
_TEXT	SEGMENT
_result$73162 = -8					; size = 4
_pattern$ = 8						; size = 4
_patternlength$ = 12					; size = 4
_text$ = 16						; size = 4
_textlength$ = 20					; size = 4
_collator$ = 24						; size = 4
_breakiter$ = 28					; size = 4
_status$ = 32						; size = 4
_usearch_openFromCollator_56 PROC			; COMDAT
; File d:\mozilla\intl\icu\source\i18n\usearch.cpp
; Line 2639
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2640
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@usearch_op@2
; Line 2641
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN16@usearch_op@2:
; Line 2649
	cmp	DWORD PTR _pattern$[ebp], 0
	je	SHORT $LN14@usearch_op@2
	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN14@usearch_op@2
	cmp	DWORD PTR _collator$[ebp], 0
	jne	SHORT $LN15@usearch_op@2
$LN14@usearch_op@2:
; Line 2650
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2651
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN15@usearch_op@2:
; Line 2655
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _collator$[ebp]
	push	ecx
	call	_ucol_getAttribute_56
	add	esp, 12					; 0000000cH
	cmp	eax, 17					; 00000011H
	jne	SHORT $LN13@usearch_op@2
; Line 2656
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 2657
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN13@usearch_op@2:
; Line 2660
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN12@usearch_op@2
; Line 2661
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?initializeFCD@@YAXPAW4UErrorCode@@@Z	; initializeFCD
	add	esp, 4
; Line 2662
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@usearch_op@2
; Line 2663
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN11@usearch_op@2:
; Line 2667
	cmp	DWORD PTR _textlength$[ebp], -1
	jne	SHORT $LN10@usearch_op@2
; Line 2668
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _textlength$[ebp], eax
$LN10@usearch_op@2:
; Line 2670
	cmp	DWORD PTR _patternlength$[ebp], -1
	jne	SHORT $LN9@usearch_op@2
; Line 2671
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _patternlength$[ebp], eax
$LN9@usearch_op@2:
; Line 2673
	cmp	DWORD PTR _textlength$[ebp], 0
	jle	SHORT $LN7@usearch_op@2
	cmp	DWORD PTR _patternlength$[ebp], 0
	jg	SHORT $LN8@usearch_op@2
$LN7@usearch_op@2:
; Line 2674
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2675
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN8@usearch_op@2:
; Line 2678
	push	5200					; 00001450H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$73162[ebp], eax
; Line 2679
	cmp	DWORD PTR _result$73162[ebp], 0
	jne	SHORT $LN6@usearch_op@2
; Line 2680
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2681
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN6@usearch_op@2:
; Line 2684
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR _collator$[ebp]
	mov	DWORD PTR [eax+4136], ecx
; Line 2685
	mov	eax, DWORD PTR _collator$[ebp]
	push	eax
	call	_ucol_getStrength_56
	add	esp, 4
	mov	ecx, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [ecx+4160], eax
; Line 2686
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax+4160]
	push	ecx
	call	?getMask@@YAIW4UColAttributeValue@@@Z	; getMask
	add	esp, 4
	mov	edx, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [edx+4164], eax
; Line 2689
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _collator$[ebp]
	push	ecx
	call	_ucol_getAttribute_56
	add	esp, 12					; 0000000cH
	cmp	eax, 20					; 00000014H
	sete	dl
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	BYTE PTR [eax+4172], dl
; Line 2690
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collator$[ebp]
	push	ecx
	call	_ucol_getVariableTop_56
	add	esp, 8
	mov	edx, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [edx+4168], eax
; Line 2692
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	DWORD PTR __imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [ecx+4140], eax
; Line 2694
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@usearch_op@2
; Line 2695
	mov	eax, DWORD PTR _result$73162[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2696
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN5@usearch_op@2:
; Line 2699
	push	32					; 00000020H
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [ecx], eax
; Line 2700
	mov	eax, DWORD PTR _result$73162[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@usearch_op@2
; Line 2701
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2702
	mov	eax, DWORD PTR _result$73162[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2703
	xor	eax, eax
	jmp	$LN17@usearch_op@2
$LN4@usearch_op@2:
; Line 2706
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _text$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 2707
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _textlength$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 2709
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2710
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR _patternlength$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 2711
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 2712
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [eax+1052], 0
; Line 2714
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _breakiter$[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 2716
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _result$73162[ebp]
	mov	edx, DWORD PTR [ecx+4136]
	push	edx
	call	_ucol_getLocaleByType_56
	add	esp, 12					; 0000000cH
	push	eax
	push	0
	call	_ubrk_open_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _result$73162[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+12], eax
; Line 2717
	cmp	DWORD PTR _breakiter$[ebp], 0
	je	SHORT $LN3@usearch_op@2
; Line 2718
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _breakiter$[ebp]
	push	eax
	call	_ubrk_setText_56
	add	esp, 16					; 00000010H
$LN3@usearch_op@2:
; Line 2722
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	BYTE PTR [eax+4156], 0
; Line 2723
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], 0
; Line 2724
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+20], -1
; Line 2725
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [eax+4152], 0
; Line 2727
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _collator$[ebp]
	push	eax
	call	_ucol_openElements_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [ecx+4144], eax
; Line 2728
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	DWORD PTR [eax+4148], 0
; Line 2729
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_op@2
; Line 2730
	mov	eax, DWORD PTR _result$73162[ebp]
	push	eax
	call	_usearch_close_56
	add	esp, 4
; Line 2731
	xor	eax, eax
	jmp	SHORT $LN17@usearch_op@2
$LN2@usearch_op@2:
; Line 2734
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+8], 0
; Line 2735
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+9], 0
; Line 2736
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	xor	edx, edx
	mov	WORD PTR [ecx+10], dx
; Line 2737
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+28], 1
; Line 2738
	mov	eax, DWORD PTR _result$73162[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+29], 1
; Line 2740
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$73162[ebp]
	push	ecx
	call	?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z ; initialize
	add	esp, 8
; Line 2742
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@usearch_op@2
; Line 2743
	mov	eax, DWORD PTR _result$73162[ebp]
	push	eax
	call	_usearch_close_56
	add	esp, 4
; Line 2744
	xor	eax, eax
	jmp	SHORT $LN17@usearch_op@2
$LN1@usearch_op@2:
; Line 2747
	mov	eax, DWORD PTR _result$73162[ebp]
	jmp	SHORT $LN17@usearch_op@2
$LN12@usearch_op@2:
; Line 2749
	xor	eax, eax
$LN17@usearch_op@2:
; Line 2750
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_openFromCollator_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMask@@YAIW4UColAttributeValue@@@Z
_TEXT	SEGMENT
tv64 = -196						; size = 4
_strength$ = 8						; size = 4
?getMask@@YAIW4UColAttributeValue@@@Z PROC		; getMask, COMDAT
; File d:\mozilla\intl\icu\source\i18n\usearch.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	eax, DWORD PTR _strength$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN3@getMask
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN2@getMask
	jmp	SHORT $LN1@getMask
$LN3@getMask:
; Line 68
	mov	eax, -65536				; ffff0000H
	jmp	SHORT $LN6@getMask
$LN2@getMask:
; Line 70
	mov	eax, -256				; ffffff00H
	jmp	SHORT $LN6@getMask
$LN1@getMask:
; Line 73
	or	eax, -1
$LN6@getMask:
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMask@@YAIW4UColAttributeValue@@@Z ENDP		; getMask
_TEXT	ENDS
EXTRN	_ucln_i18n_registerCleanup_56:PROC
EXTRN	__imp_?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeFCD@@YAXPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_status$ = 8						; size = 4
?initializeFCD@@YAXPAW4UErrorCode@@@Z PROC		; initializeFCD, COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 113
	cmp	DWORD PTR _g_nfcImpl, 0
	jne	SHORT $LN2@initialize
; Line 114
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	DWORD PTR __imp_?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_nfcImpl, eax
; Line 115
	push	OFFSET _usearch_cleanup
	push	20					; 00000014H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
$LN2@initialize:
; Line 117
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initializeFCD@@YAXPAW4UErrorCode@@@Z ENDP		; initializeFCD
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _usearch_cleanup
_TEXT	SEGMENT
_usearch_cleanup PROC					; COMDAT
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 99
	mov	DWORD PTR _g_nfcImpl, 0
; Line 100
	mov	al, 1
; Line 101
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_cleanup ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv81 = -244						; size = 4
_minlength$73107 = -44					; size = 2
_cesize$73106 = -32					; size = 4
_pattern$73105 = -20					; size = 4
_expandlength$ = -8					; size = 2
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z PROC ; initialize, COMDAT
; Line 547
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 548
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initializePattern@@YAFPAUUStringSearch@@PAW4UErrorCode@@@Z ; initializePattern
	add	esp, 8
	mov	WORD PTR _expandlength$[ebp], ax
; Line 549
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@initialize@2
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	$LN1@initialize@2
; Line 550
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 8
	mov	DWORD PTR _pattern$73105[ebp], eax
; Line 551
	mov	eax, DWORD PTR _pattern$73105[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _cesize$73106[ebp], ecx
; Line 554
	movsx	eax, WORD PTR _expandlength$[ebp]
	cmp	DWORD PTR _cesize$73106[ebp], eax
	jle	SHORT $LN4@initialize@2
	movsx	ecx, WORD PTR _cesize$73106[ebp]
	movsx	edx, WORD PTR _expandlength$[ebp]
	sub	ecx, edx
	mov	DWORD PTR tv81[ebp], ecx
	jmp	SHORT $LN5@initialize@2
$LN4@initialize@2:
	mov	DWORD PTR tv81[ebp], 1
$LN5@initialize@2:
	mov	ax, WORD PTR tv81[ebp]
	mov	WORD PTR _minlength$73107[ebp], ax
; Line 555
	mov	eax, DWORD PTR _pattern$73105[ebp]
	mov	cx, WORD PTR _minlength$73107[ebp]
	mov	WORD PTR [eax+3098], cx
; Line 557
	movzx	eax, WORD PTR _minlength$73107[ebp]
	push	eax
	movzx	ecx, WORD PTR _minlength$73107[ebp]
	push	ecx
	movzx	edx, WORD PTR _expandlength$[ebp]
	push	edx
	mov	eax, DWORD PTR _cesize$73106[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$73105[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pattern$73105[ebp]
	add	eax, 3614				; 00000e1eH
	push	eax
	mov	ecx, DWORD PTR _pattern$73105[ebp]
	add	ecx, 3100				; 00000c1cH
	push	ecx
	call	?setShiftTable@@YAXQAF0PAHHFFF@Z	; setShiftTable
	add	esp, 28					; 0000001cH
; Line 558
	jmp	SHORT $LN2@initialize@2
$LN1@initialize@2:
; Line 560
	xor	eax, eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	WORD PTR [ecx+3106], ax
$LN2@initialize@2:
; Line 561
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z ENDP ; initialize
_TEXT	ENDS
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializePattern@@YAFPAUUStringSearch@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_index$ = -44						; size = 4
_length$ = -32						; size = 4
_patterntext$ = -20					; size = 4
_pattern$ = -8						; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
?initializePattern@@YAFPAUUStringSearch@@PAW4UErrorCode@@@Z PROC ; initializePattern, COMDAT
; Line 436
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 437
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@initialize@3
	xor	eax, eax
	jmp	$LN7@initialize@3
$LN6@initialize@3:
; Line 438
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 8
	mov	DWORD PTR _pattern$[ebp], eax
; Line 439
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _patterntext$[ebp], ecx
; Line 440
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
; Line 441
	mov	DWORD PTR _index$[ebp], 0
; Line 444
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4160], 0
	jne	SHORT $LN5@initialize@3
; Line 445
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	BYTE PTR [eax+3096], 0
; Line 446
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	BYTE PTR [eax+3097], 0
; Line 447
	jmp	$LN4@initialize@3
$LN5@initialize@3:
; Line 449
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	lea	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patterntext$[ebp]
	push	edx
	call	?getFCD@@YAGPB_WPAHH@Z			; getFCD
	add	esp, 12					; 0000000cH
	movzx	eax, ax
	sar	eax, 8
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	BYTE PTR [ecx+3096], al
; Line 450
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 451
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _patterntext$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN3@initialize@3
	cmp	DWORD PTR _index$[ebp], 0
	jle	SHORT $LN3@initialize@3
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _patterntext$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	jne	SHORT $LN3@initialize@3
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN3@initialize@3:
; Line 453
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	lea	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patterntext$[ebp]
	push	edx
	call	?getFCD@@YAGPB_WPAHH@Z			; getFCD
	add	esp, 12					; 0000000cH
	movzx	eax, ax
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	BYTE PTR [ecx+3097], al
$LN4@initialize@3:
; Line 457
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+1052], 0
	je	SHORT $LN2@initialize@3
; Line 458
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 1056				; 00000420H
	mov	ecx, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [ecx+1052], eax
	je	SHORT $LN1@initialize@3
; Line 459
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1052]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@initialize@3:
; Line 462
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [eax+1052], 0
$LN2@initialize@3:
; Line 466
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initializePatternCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ; initializePatternCETable
	add	esp, 8
$LN7@initialize@3:
; Line 467
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@initialize@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@initialize@3:
	DD	1
	DD	$LN10@initialize@3
$LN10@initialize@3:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN9@initialize@3
$LN9@initialize@3:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?initializePattern@@YAFPAUUStringSearch@@PAW4UErrorCode@@@Z ENDP ; initializePattern
_TEXT	ENDS
EXTRN	__imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD@@YAGPB_WPAHH@Z
_TEXT	SEGMENT
_result$ = -20						; size = 2
_temp$ = -8						; size = 4
_str$ = 8						; size = 4
_offset$ = 12						; size = 4
_strlength$ = 16					; size = 4
?getFCD@@YAGPB_WPAHH@Z PROC				; getFCD, COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _str$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _temp$[ebp], eax
; Line 134
	mov	eax, DWORD PTR _strlength$[ebp]
	mov	ecx, DWORD PTR _str$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	esi, esp
	push	edx
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _g_nfcImpl
	call	DWORD PTR __imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _result$[ebp], ax
; Line 135
	mov	eax, DWORD PTR _temp$[ebp]
	sub	eax, DWORD PTR _str$[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 136
	mov	ax, WORD PTR _result$[ebp]
; Line 137
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@getFCD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@getFCD:
	DD	1
	DD	$LN4@getFCD
$LN4@getFCD:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@getFCD
$LN3@getFCD:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?getFCD@@YAGPB_WPAHH@Z ENDP				; getFCD
_TEXT	ENDS
EXTRN	_ucol_getMaxExpansion_56:PROC
EXTRN	_ucol_getOffset_56:PROC
EXTRN	_ucol_next_56:PROC
EXTRN	_ucol_setText_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializePatternCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$73030 = -116					; size = 4
_newce$73028 = -104					; size = 4
_ce$ = -92						; size = 4
_result$ = -80						; size = 2
_offset$ = -68						; size = 2
_coleiter$ = -56					; size = 4
_patternlength$ = -44					; size = 4
_cetable$ = -32						; size = 4
_cetablesize$ = -20					; size = 4
_pattern$ = -8						; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
?initializePatternCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z PROC ; initializePatternCETable, COMDAT
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 293
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 8
	mov	DWORD PTR _pattern$[ebp], eax
; Line 294
	mov	DWORD PTR _cetablesize$[ebp], 256	; 00000100H
; Line 295
	mov	eax, DWORD PTR _pattern$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _cetable$[ebp], eax
; Line 296
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _patternlength$[ebp], ecx
; Line 297
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4152]
	mov	DWORD PTR _coleiter$[ebp], ecx
; Line 299
	cmp	DWORD PTR _coleiter$[ebp], 0
	jne	SHORT $LN9@initialize@4
; Line 301
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4136]
	push	edx
	call	_ucol_openElements_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _coleiter$[ebp], eax
; Line 305
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _coleiter$[ebp]
	mov	DWORD PTR [eax+4152], ecx
; Line 307
	jmp	SHORT $LN8@initialize@4
$LN9@initialize@4:
; Line 308
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _coleiter$[ebp]
	push	edx
	call	_ucol_setText_56
	add	esp, 16					; 00000010H
$LN8@initialize@4:
; Line 310
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@initialize@4
; Line 311
	xor	eax, eax
	jmp	$LN10@initialize@4
$LN7@initialize@4:
; Line 314
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _cetable$[ebp]
	je	SHORT $LN6@initialize@4
	mov	eax, DWORD PTR _pattern$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN6@initialize@4
; Line 315
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN6@initialize@4:
; Line 318
	xor	eax, eax
	mov	WORD PTR _offset$[ebp], ax
; Line 319
	xor	eax, eax
	mov	WORD PTR _result$[ebp], ax
$LN5@initialize@4:
; Line 323
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coleiter$[ebp]
	push	ecx
	call	_ucol_next_56
	add	esp, 8
	mov	DWORD PTR _ce$[ebp], eax
	cmp	DWORD PTR _ce$[ebp], -1
	je	$LN4@initialize@4
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN4@initialize@4
; Line 324
	mov	eax, DWORD PTR _ce$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?getCE@@YAHPBUUStringSearch@@I@Z	; getCE
	add	esp, 8
	mov	DWORD PTR _newce$73028[ebp], eax
; Line 325
	cmp	DWORD PTR _newce$73028[ebp], 0
	je	SHORT $LN3@initialize@4
; Line 329
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coleiter$[ebp]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	edx, DWORD PTR _patternlength$[ebp]
	sub	edx, eax
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _newce$73028[ebp]
	push	eax
	lea	ecx, DWORD PTR _cetablesize$[ebp]
	push	ecx
	movzx	edx, WORD PTR _offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _cetable$[ebp]
	push	eax
	call	?addTouint32_tArray@@YAPAHPAHIPAIIIPAW4UErrorCode@@@Z ; addTouint32_tArray
	add	esp, 24					; 00000018H
	mov	DWORD PTR _temp$73030[ebp], eax
; Line 330
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initialize@4
; Line 331
	xor	eax, eax
	jmp	SHORT $LN10@initialize@4
$LN2@initialize@4:
; Line 333
	mov	ax, WORD PTR _offset$[ebp]
	add	ax, 1
	mov	WORD PTR _offset$[ebp], ax
; Line 334
	mov	eax, DWORD PTR _cetable$[ebp]
	cmp	eax, DWORD PTR _temp$73030[ebp]
	je	SHORT $LN1@initialize@4
	mov	eax, DWORD PTR _pattern$[ebp]
	add	eax, 16					; 00000010H
	cmp	DWORD PTR _cetable$[ebp], eax
	je	SHORT $LN1@initialize@4
; Line 335
	mov	eax, DWORD PTR _cetable$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@initialize@4:
; Line 337
	mov	eax, DWORD PTR _temp$73030[ebp]
	mov	DWORD PTR _cetable$[ebp], eax
$LN3@initialize@4:
; Line 339
	mov	eax, DWORD PTR _ce$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coleiter$[ebp]
	push	ecx
	call	_ucol_getMaxExpansion_56
	add	esp, 8
	sub	eax, 1
	movzx	edx, ax
	movzx	eax, WORD PTR _result$[ebp]
	add	eax, edx
	mov	WORD PTR _result$[ebp], ax
; Line 340
	jmp	$LN5@initialize@4
$LN4@initialize@4:
; Line 342
	movzx	eax, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _cetable$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 343
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR _cetable$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 344
	movzx	eax, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 346
	mov	ax, WORD PTR _result$[ebp]
$LN10@initialize@4:
; Line 347
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@initialize@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@initialize@4:
	DD	1
	DD	$LN13@initialize@4
$LN13@initialize@4:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@initialize@4
$LN12@initialize@4:
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?initializePatternCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ENDP ; initializePatternCETable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCE@@YAHPBUUStringSearch@@I@Z
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_sourcece$ = 12						; size = 4
?getCE@@YAHPBUUStringSearch@@I@Z PROC			; getCE, COMDAT
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 152
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _sourcece$[ebp]
	and	ecx, DWORD PTR [eax+4164]
	mov	DWORD PTR _sourcece$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _strsrch$[ebp]
	movsx	ecx, BYTE PTR [eax+4172]
	test	ecx, ecx
	je	SHORT $LN6@getCE
; Line 160
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4168]
	cmp	ecx, DWORD PTR _sourcece$[ebp]
	jbe	SHORT $LN5@getCE
; Line 161
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4160], 3
	jl	SHORT $LN4@getCE
; Line 162
	mov	eax, DWORD PTR _sourcece$[ebp]
	and	eax, -65536				; ffff0000H
	mov	DWORD PTR _sourcece$[ebp], eax
; Line 164
	jmp	SHORT $LN5@getCE
$LN4@getCE:
; Line 165
	mov	DWORD PTR _sourcece$[ebp], 0
$LN5@getCE:
; Line 167
	jmp	SHORT $LN2@getCE
$LN6@getCE:
; Line 168
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4160], 3
	jl	SHORT $LN2@getCE
	cmp	DWORD PTR _sourcece$[ebp], 0
	jne	SHORT $LN2@getCE
; Line 169
	mov	DWORD PTR _sourcece$[ebp], 65535	; 0000ffffH
$LN2@getCE:
; Line 172
	mov	eax, DWORD PTR _sourcece$[ebp]
; Line 173
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCE@@YAHPBUUStringSearch@@I@Z ENDP			; getCE
_TEXT	ENDS
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addTouint32_tArray@@YAPAHPAHIPAIIIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$72988 = -20					; size = 4
_newlength$ = -8					; size = 4
_destination$ = 8					; size = 4
_offset$ = 12						; size = 4
_destinationlength$ = 16				; size = 4
_value$ = 20						; size = 4
_increments$ = 24					; size = 4
_status$ = 28						; size = 4
?addTouint32_tArray@@YAPAHPAHIPAIIIPAW4UErrorCode@@@Z PROC ; addTouint32_tArray, COMDAT
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 217
	mov	eax, DWORD PTR _destinationlength$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _newlength$[ebp], ecx
; Line 218
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _newlength$[ebp]
	jne	SHORT $LN2@addTouint3
; Line 219
	mov	eax, DWORD PTR _newlength$[ebp]
	add	eax, DWORD PTR _increments$[ebp]
	mov	DWORD PTR _newlength$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newlength$[ebp]
	shl	ecx, 2
	push	ecx
	call	?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z ; allocateMemory
	add	esp, 8
	mov	DWORD PTR _temp$72988[ebp], eax
; Line 222
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@addTouint3
; Line 223
	xor	eax, eax
	jmp	SHORT $LN3@addTouint3
$LN1@addTouint3:
; Line 225
	push	1
	mov	eax, DWORD PTR _destination$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _offset$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _destination$[ebp]
	push	edx
	mov	eax, DWORD PTR _temp$72988[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 226
	mov	eax, DWORD PTR _destinationlength$[ebp]
	mov	ecx, DWORD PTR _newlength$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 227
	mov	eax, DWORD PTR _temp$72988[ebp]
	mov	DWORD PTR _destination$[ebp], eax
$LN2@addTouint3:
; Line 229
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _destination$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 230
	mov	eax, DWORD PTR _destination$[ebp]
$LN3@addTouint3:
; Line 231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?addTouint32_tArray@@YAPAHPAHIPAIIIPAW4UErrorCode@@@Z ENDP ; addTouint32_tArray
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_result$ = -8						; size = 4
_size$ = 8						; size = 4
_status$ = 12						; size = 4
?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z PROC		; allocateMemory, COMDAT
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 186
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 187
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@allocateMe
; Line 188
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@allocateMe:
; Line 190
	mov	eax, DWORD PTR _result$[ebp]
; Line 191
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z ENDP		; allocateMemory
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setShiftTable@@YAXQAF0PAHHFFF@Z
_TEXT	SEGMENT
tv143 = -220						; size = 4
tv81 = -220						; size = 4
_temp$73091 = -20					; size = 4
_count$ = -8						; size = 4
_shift$ = 8						; size = 4
_backshift$ = 12					; size = 4
_cetable$ = 16						; size = 4
_cesize$ = 20						; size = 4
_expansionsize$ = 24					; size = 2
_defaultforward$ = 28					; size = 2
_defaultbackward$ = 32					; size = 2
?setShiftTable@@YAXQAF0PAHHFFF@Z PROC			; setShiftTable, COMDAT
; Line 486
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 492
	mov	DWORD PTR _count$[ebp], 0
	jmp	SHORT $LN12@setShiftTa
$LN11@setShiftTa:
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN12@setShiftTa:
	cmp	DWORD PTR _count$[ebp], 257		; 00000101H
	jge	SHORT $LN10@setShiftTa
; Line 493
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	mov	dx, WORD PTR _defaultforward$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 494
	jmp	SHORT $LN11@setShiftTa
$LN10@setShiftTa:
; Line 495
	mov	eax, DWORD PTR _cesize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _cesize$[ebp], eax
; Line 496
	mov	DWORD PTR _count$[ebp], 0
	jmp	SHORT $LN9@setShiftTa
$LN8@setShiftTa:
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN9@setShiftTa:
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _cesize$[ebp]
	jge	SHORT $LN7@setShiftTa
; Line 498
	movsx	eax, WORD PTR _defaultforward$[ebp]
	sub	eax, DWORD PTR _count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _temp$73091[ebp], eax
; Line 499
	cmp	DWORD PTR _temp$73091[ebp], 1
	jle	SHORT $LN15@setShiftTa
	mov	eax, DWORD PTR _temp$73091[ebp]
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN16@setShiftTa
$LN15@setShiftTa:
	mov	DWORD PTR tv81[ebp], 1
$LN16@setShiftTa:
	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _cetable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	?hashFromCE32@@YAHI@Z			; hashFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _shift$[ebp]
	mov	dx, WORD PTR tv81[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 500
	jmp	SHORT $LN8@setShiftTa
$LN7@setShiftTa:
; Line 501
	mov	eax, DWORD PTR _cesize$[ebp]
	mov	ecx, DWORD PTR _cetable$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	?hashFromCE32@@YAHI@Z			; hashFromCE32
	add	esp, 4
	mov	ecx, 1
	mov	edx, DWORD PTR _shift$[ebp]
	mov	WORD PTR [edx+eax*2], cx
; Line 503
	push	0
	call	?hashFromCE32@@YAHI@Z			; hashFromCE32
	add	esp, 4
	mov	ecx, 1
	mov	edx, DWORD PTR _shift$[ebp]
	mov	WORD PTR [edx+eax*2], cx
; Line 505
	mov	DWORD PTR _count$[ebp], 0
	jmp	SHORT $LN6@setShiftTa
$LN5@setShiftTa:
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN6@setShiftTa:
	cmp	DWORD PTR _count$[ebp], 257		; 00000101H
	jge	SHORT $LN4@setShiftTa
; Line 506
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _backshift$[ebp]
	mov	dx, WORD PTR _defaultbackward$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 507
	jmp	SHORT $LN5@setShiftTa
$LN4@setShiftTa:
; Line 508
	mov	eax, DWORD PTR _cesize$[ebp]
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN3@setShiftTa
$LN2@setShiftTa:
	mov	eax, DWORD PTR _count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN3@setShiftTa:
	cmp	DWORD PTR _count$[ebp], 0
	jle	SHORT $LN1@setShiftTa
; Line 511
	movsx	eax, WORD PTR _expansionsize$[ebp]
	cmp	DWORD PTR _count$[ebp], eax
	jle	SHORT $LN17@setShiftTa
	movsx	ecx, WORD PTR _expansionsize$[ebp]
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, ecx
	movsx	eax, dx
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN18@setShiftTa
$LN17@setShiftTa:
	mov	DWORD PTR tv143[ebp], 1
$LN18@setShiftTa:
	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _cetable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	?hashFromCE32@@YAHI@Z			; hashFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _backshift$[ebp]
	mov	dx, WORD PTR tv143[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 512
	jmp	SHORT $LN2@setShiftTa
$LN1@setShiftTa:
; Line 513
	mov	eax, DWORD PTR _cetable$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?hashFromCE32@@YAHI@Z			; hashFromCE32
	add	esp, 4
	mov	edx, 1
	mov	ecx, DWORD PTR _backshift$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 514
	push	0
	call	?hashFromCE32@@YAHI@Z			; hashFromCE32
	add	esp, 4
	mov	ecx, 1
	mov	edx, DWORD PTR _backshift$[ebp]
	mov	WORD PTR [edx+eax*2], cx
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setShiftTable@@YAXQAF0PAHHFFF@Z ENDP			; setShiftTable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?hashFromCE32@@YAHI@Z
_TEXT	SEGMENT
_hc$ = -8						; size = 4
_ce$ = 8						; size = 4
?hashFromCE32@@YAHI@Z PROC				; hashFromCE32, COMDAT
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	mov	eax, DWORD PTR _ce$[ebp]
	shr	eax, 24					; 00000018H
	imul	eax, 37					; 00000025H
	mov	ecx, DWORD PTR _ce$[ebp]
	shr	ecx, 16					; 00000010H
	add	eax, ecx
	imul	eax, 37					; 00000025H
	mov	edx, DWORD PTR _ce$[ebp]
	shr	edx, 8
	add	eax, edx
	imul	eax, 37					; 00000025H
	add	eax, DWORD PTR _ce$[ebp]
	mov	DWORD PTR _hc$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _hc$[ebp]
	cdq
	mov	ecx, 257				; 00000101H
	idiv	ecx
	mov	DWORD PTR _hc$[ebp], edx
; Line 90
	cmp	DWORD PTR _hc$[ebp], 0
	jge	SHORT $LN1@hashFromCE
; Line 91
	mov	eax, DWORD PTR _hc$[ebp]
	add	eax, 257				; 00000101H
	mov	DWORD PTR _hc$[ebp], eax
$LN1@hashFromCE:
; Line 93
	mov	eax, DWORD PTR _hc$[ebp]
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hashFromCE32@@YAHI@Z ENDP				; hashFromCE32
_TEXT	ENDS
PUBLIC	??_GUCollationPCE@icu_56@@QAEPAXI@Z		; icu_56::UCollationPCE::`scalar deleting destructor'
EXTRN	_ubrk_close_56:PROC
EXTRN	_ucol_closeElements_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_close_56
_TEXT	SEGMENT
tv92 = -220						; size = 4
$T80615 = -212						; size = 4
$T80616 = -200						; size = 4
_strsrch$ = 8						; size = 4
_usearch_close_56 PROC					; COMDAT
; Line 2753
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2754
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	$LN6@usearch_cl
; Line 2756
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	je	SHORT $LN4@usearch_cl
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN4@usearch_cl
; Line 2757
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN4@usearch_cl:
; Line 2761
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+1052], 0
	je	SHORT $LN3@usearch_cl
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 1056				; 00000420H
	mov	ecx, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [ecx+1052], eax
	je	SHORT $LN3@usearch_cl
; Line 2762
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1052]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN3@usearch_cl:
; Line 2765
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4148]
	mov	DWORD PTR $T80616[ebp], ecx
	mov	edx, DWORD PTR $T80616[ebp]
	mov	DWORD PTR $T80615[ebp], edx
	cmp	DWORD PTR $T80615[ebp], 0
	je	SHORT $LN8@usearch_cl
	push	1
	mov	ecx, DWORD PTR $T80615[ebp]
	call	??_GUCollationPCE@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN9@usearch_cl
$LN8@usearch_cl:
	mov	DWORD PTR tv92[ebp], 0
$LN9@usearch_cl:
; Line 2766
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_closeElements_56
	add	esp, 4
; Line 2767
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4152]
	push	ecx
	call	_ucol_closeElements_56
	add	esp, 4
; Line 2769
	mov	eax, DWORD PTR _strsrch$[ebp]
	movsx	ecx, BYTE PTR [eax+4156]
	test	ecx, ecx
	je	SHORT $LN2@usearch_cl
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4136], 0
	je	SHORT $LN2@usearch_cl
; Line 2770
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4136]
	push	ecx
	call	_ucol_close_56
	add	esp, 4
$LN2@usearch_cl:
; Line 2774
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN1@usearch_cl
; Line 2775
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ubrk_close_56
	add	esp, 4
$LN1@usearch_cl:
; Line 2779
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 2780
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN6@usearch_cl:
; Line 2782
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_close_56 ENDP
_TEXT	ENDS
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1UCollationPCE@icu_56@@QAE@XZ:PROC		; icu_56::UCollationPCE::~UCollationPCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUCollationPCE@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUCollationPCE@icu_56@@QAEPAXI@Z PROC		; icu_56::UCollationPCE::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UCollationPCE@icu_56@@QAE@XZ		; icu_56::UCollationPCE::~UCollationPCE
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUCollationPCE@icu_56@@QAEPAXI@Z ENDP		; icu_56::UCollationPCE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z ; `anonymous namespace'::initTextProcessedIter
EXTRN	?init@UCollationPCE@icu_56@@QAEXPAUUCollationElements@@@Z:PROC ; icu_56::UCollationPCE::init
EXTRN	??0UCollationPCE@icu_56@@QAE@PAUUCollationElements@@@Z:PROC ; icu_56::UCollationPCE::UCollationPCE
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z$0
__ehfuncinfo$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv80 = -232						; size = 4
$T80623 = -224						; size = 4
$T80624 = -212						; size = 4
__$EHRec$ = -12						; size = 12
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z PROC ; `anonymous namespace'::initTextProcessedIter, COMDAT
; Line 2786
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2787
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@initTextPr
	xor	al, al
	jmp	$LN5@initTextPr
$LN4@initTextPr:
; Line 2788
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4148], 0
	jne	$LN3@initTextPr
; Line 2789
	mov	esi, esp
	push	288					; 00000120H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T80624[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T80624[ebp], 0
	je	SHORT $LN7@initTextPr
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	mov	ecx, DWORD PTR $T80624[ebp]
	call	??0UCollationPCE@icu_56@@QAE@PAUUCollationElements@@@Z ; icu_56::UCollationPCE::UCollationPCE
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN8@initTextPr
$LN7@initTextPr:
	mov	DWORD PTR tv80[ebp], 0
$LN8@initTextPr:
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T80623[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR $T80623[ebp]
	mov	DWORD PTR [eax+4148], ecx
; Line 2790
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4148], 0
	jne	SHORT $LN2@initTextPr
; Line 2791
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2792
	xor	al, al
	jmp	SHORT $LN5@initTextPr
$LN2@initTextPr:
; Line 2794
	jmp	SHORT $LN1@initTextPr
$LN3@initTextPr:
; Line 2795
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [edx+4148]
	call	?init@UCollationPCE@icu_56@@QAEXPAUUCollationElements@@@Z ; icu_56::UCollationPCE::init
$LN1@initTextPr:
; Line 2797
	mov	al, 1
$LN5@initTextPr:
; Line 2798
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T80624[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z ENDP ; `anonymous namespace'::initTextProcessedIter
PUBLIC	_usearch_setOffset_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_setOffset_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_position$ = 12						; size = 4
_status$ = 16						; size = 4
_usearch_setOffset_56 PROC				; COMDAT
; Line 2807
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2808
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@usearch_se
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN4@usearch_se
; Line 2809
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?isOutOfBounds@@YACHH@Z			; isOutOfBounds
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@usearch_se
; Line 2810
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 8
; Line 2812
	jmp	SHORT $LN1@usearch_se
$LN2@usearch_se:
; Line 2813
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4144]
	push	edx
	call	?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ; setColEIterOffset
	add	esp, 8
$LN1@usearch_se:
; Line 2815
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+20], -1
; Line 2816
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], 0
; Line 2817
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+29], 0
$LN4@usearch_se:
; Line 2819
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_setOffset_56 ENDP
_TEXT	ENDS
EXTRN	_ucol_setOffset_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setColEIterOffset@@YAXPAUUCollationElements@@H@Z
_TEXT	SEGMENT
_status$ = -8						; size = 4
_elems$ = 8						; size = 4
_offset$ = 12						; size = 4
?setColEIterOffset@@YAXPAUUCollationElements@@H@Z PROC	; setColEIterOffset, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	mov	DWORD PTR _status$[ebp], 0
; Line 54
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _elems$[ebp]
	push	edx
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
; Line 55
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setColEIte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@setColEIte:
	DD	1
	DD	$LN4@setColEIte
$LN4@setColEIte:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@setColEIte
$LN3@setColEIte:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ENDP	; setColEIterOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isOutOfBounds@@YACHH@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_textlength$ = 8					; size = 4
_offset$ = 12						; size = 4
?isOutOfBounds@@YACHH@Z PROC				; isOutOfBounds, COMDAT
; Line 1061
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1062
	cmp	DWORD PTR _offset$[ebp], 0
	jl	SHORT $LN3@isOutOfBou
	mov	eax, DWORD PTR _offset$[ebp]
	cmp	eax, DWORD PTR _textlength$[ebp]
	jg	SHORT $LN3@isOutOfBou
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isOutOfBou
$LN3@isOutOfBou:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isOutOfBou:
	mov	al, BYTE PTR tv66[ebp]
; Line 1063
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isOutOfBounds@@YACHH@Z ENDP				; isOutOfBounds
_TEXT	ENDS
PUBLIC	_usearch_getOffset_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getOffset_56
_TEXT	SEGMENT
_result$73217 = -8					; size = 4
_strsrch$ = 8						; size = 4
_usearch_getOffset_56 PROC				; COMDAT
; Line 2822
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2823
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN2@usearch_ge
; Line 2824
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _result$73217[ebp], eax
; Line 2825
	mov	eax, DWORD PTR _result$73217[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?isOutOfBounds@@YACHH@Z			; isOutOfBounds
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@usearch_ge
; Line 2826
	or	eax, -1
	jmp	SHORT $LN3@usearch_ge
$LN1@usearch_ge:
; Line 2828
	mov	eax, DWORD PTR _result$73217[ebp]
	jmp	SHORT $LN3@usearch_ge
$LN2@usearch_ge:
; Line 2830
	or	eax, -1
$LN3@usearch_ge:
; Line 2831
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getOffset_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_setAttribute_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_setAttribute_56
_TEXT	SEGMENT
tv69 = -196						; size = 4
_strsrch$ = 8						; size = 4
_attribute$ = 12					; size = 4
_value$ = 16						; size = 4
_status$ = 20						; size = 4
_usearch_setAttribute_56 PROC				; COMDAT
; Line 2837
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2838
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN11@usearch_se@2
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN11@usearch_se@2
; Line 2839
	mov	eax, DWORD PTR _attribute$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	cmp	DWORD PTR tv69[ebp], 0
	je	SHORT $LN8@usearch_se@2
	cmp	DWORD PTR tv69[ebp], 1
	je	SHORT $LN7@usearch_se@2
	cmp	DWORD PTR tv69[ebp], 2
	je	SHORT $LN6@usearch_se@2
	jmp	SHORT $LN2@usearch_se@2
$LN8@usearch_se@2:
; Line 2842
	xor	eax, eax
	cmp	DWORD PTR _value$[ebp], 1
	sete	al
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx+8], al
; Line 2843
	jmp	SHORT $LN11@usearch_se@2
$LN7@usearch_se@2:
; Line 2846
	xor	eax, eax
	cmp	DWORD PTR _value$[ebp], 1
	sete	al
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx+9], al
; Line 2847
	jmp	SHORT $LN11@usearch_se@2
$LN6@usearch_se@2:
; Line 2849
	cmp	DWORD PTR _value$[ebp], 3
	je	SHORT $LN4@usearch_se@2
	cmp	DWORD PTR _value$[ebp], 4
	jne	SHORT $LN5@usearch_se@2
$LN4@usearch_se@2:
; Line 2850
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dx, WORD PTR _value$[ebp]
	mov	WORD PTR [ecx+10], dx
; Line 2851
	jmp	SHORT $LN3@usearch_se@2
$LN5@usearch_se@2:
; Line 2852
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	xor	edx, edx
	mov	WORD PTR [ecx+10], dx
$LN3@usearch_se@2:
; Line 2854
	jmp	SHORT $LN11@usearch_se@2
$LN2@usearch_se@2:
; Line 2857
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN11@usearch_se@2:
; Line 2860
	cmp	DWORD PTR _value$[ebp], 5
	jne	SHORT $LN12@usearch_se@2
; Line 2861
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN12@usearch_se@2:
; Line 2863
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_setAttribute_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getAttribute_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getAttribute_56
_TEXT	SEGMENT
tv65 = -208						; size = 4
_value$73251 = -8					; size = 2
_strsrch$ = 8						; size = 4
_attribute$ = 12					; size = 4
_usearch_getAttribute_56 PROC				; COMDAT
; Line 2868
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2869
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN10@usearch_ge@2
; Line 2870
	mov	eax, DWORD PTR _attribute$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 3
	ja	SHORT $LN10@usearch_ge@2
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN13@usearch_ge@2[ecx*4]
$LN7@usearch_ge@2:
; Line 2873
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	eax, BYTE PTR [ecx+8]
	sub	eax, 1
	neg	eax
	sbb	eax, eax
	add	eax, 1
	jmp	SHORT $LN11@usearch_ge@2
$LN6@usearch_ge@2:
; Line 2876
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	eax, BYTE PTR [ecx+9]
	sub	eax, 1
	neg	eax
	sbb	eax, eax
	add	eax, 1
	jmp	SHORT $LN11@usearch_ge@2
$LN5@usearch_ge@2:
; Line 2879
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR _value$73251[ebp], dx
; Line 2880
	movsx	eax, WORD PTR _value$73251[ebp]
	cmp	eax, 3
	je	SHORT $LN3@usearch_ge@2
	movsx	eax, WORD PTR _value$73251[ebp]
	cmp	eax, 4
	jne	SHORT $LN4@usearch_ge@2
$LN3@usearch_ge@2:
; Line 2881
	movsx	eax, WORD PTR _value$73251[ebp]
	jmp	SHORT $LN11@usearch_ge@2
; Line 2882
	jmp	SHORT $LN1@usearch_ge@2
$LN4@usearch_ge@2:
; Line 2883
	mov	eax, 2
	jmp	SHORT $LN11@usearch_ge@2
$LN1@usearch_ge@2:
; Line 2887
	or	eax, -1
	jmp	SHORT $LN11@usearch_ge@2
$LN10@usearch_ge@2:
; Line 2890
	or	eax, -1
$LN11@usearch_ge@2:
; Line 2891
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@usearch_ge@2:
	DD	$LN7@usearch_ge@2
	DD	$LN6@usearch_ge@2
	DD	$LN5@usearch_ge@2
	DD	$LN1@usearch_ge@2
_usearch_getAttribute_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getMatchedStart_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getMatchedStart_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_usearch_getMatchedStart_56 PROC			; COMDAT
; Line 2895
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2896
	cmp	DWORD PTR _strsrch$[ebp], 0
	jne	SHORT $LN1@usearch_ge@3
; Line 2897
	or	eax, -1
	jmp	SHORT $LN2@usearch_ge@3
$LN1@usearch_ge@3:
; Line 2899
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+20]
$LN2@usearch_ge@3:
; Line 2900
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getMatchedStart_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getMatchedText_56
EXTRN	_u_terminateUChars_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getMatchedText_56
_TEXT	SEGMENT
_copyindex$ = -20					; size = 4
_copylength$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_result$ = 12						; size = 4
_resultCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
_usearch_getMatchedText_56 PROC				; COMDAT
; Line 2907
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2908
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@usearch_ge@4
; Line 2909
	or	eax, -1
	jmp	$LN7@usearch_ge@4
$LN6@usearch_ge@4:
; Line 2912
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN4@usearch_ge@4
	cmp	DWORD PTR _resultCapacity$[ebp], 0
	jl	SHORT $LN4@usearch_ge@4
	cmp	DWORD PTR _resultCapacity$[ebp], 0
	jle	SHORT $LN5@usearch_ge@4
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN5@usearch_ge@4
$LN4@usearch_ge@4:
; Line 2913
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2914
	or	eax, -1
	jmp	$LN7@usearch_ge@4
$LN5@usearch_ge@4:
; Line 2917
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _copylength$[ebp], edx
; Line 2918
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _copyindex$[ebp], edx
; Line 2919
	cmp	DWORD PTR _copyindex$[ebp], -1
	jne	SHORT $LN3@usearch_ge@4
; Line 2920
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _resultCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
; Line 2921
	or	eax, -1
	jmp	SHORT $LN7@usearch_ge@4
$LN3@usearch_ge@4:
; Line 2924
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	cmp	eax, DWORD PTR _copylength$[ebp]
	jge	SHORT $LN2@usearch_ge@4
; Line 2925
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	DWORD PTR _copylength$[ebp], eax
$LN2@usearch_ge@4:
; Line 2927
	cmp	DWORD PTR _copylength$[ebp], 0
	jle	SHORT $LN1@usearch_ge@4
; Line 2929
	push	1
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _copyindex$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _copylength$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _copyindex$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@usearch_ge@4:
; Line 2932
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _resultCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
$LN7@usearch_ge@4:
; Line 2933
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getMatchedText_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getMatchedLength_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getMatchedLength_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_usearch_getMatchedLength_56 PROC			; COMDAT
; Line 2937
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2938
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN1@usearch_ge@5
; Line 2939
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+24]
	jmp	SHORT $LN2@usearch_ge@5
$LN1@usearch_ge@5:
; Line 2941
	or	eax, -1
$LN2@usearch_ge@5:
; Line 2942
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getMatchedLength_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_setBreakIterator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_setBreakIterator_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_breakiter$ = 12					; size = 4
_status$ = 16						; size = 4
_usearch_setBreakIterator_56 PROC			; COMDAT
; Line 2949
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2950
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@usearch_se@3
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN3@usearch_se@3
; Line 2951
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _breakiter$[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 2952
	cmp	DWORD PTR _breakiter$[ebp], 0
	je	SHORT $LN3@usearch_se@3
; Line 2954
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _breakiter$[ebp]
	push	ecx
	call	_ubrk_setText_56
	add	esp, 16					; 00000010H
$LN3@usearch_se@3:
; Line 2957
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_setBreakIterator_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getBreakIterator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getBreakIterator_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_usearch_getBreakIterator_56 PROC			; COMDAT
; Line 2961
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2962
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN1@usearch_ge@6
; Line 2963
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN2@usearch_ge@6
$LN1@usearch_ge@6:
; Line 2965
	xor	eax, eax
$LN2@usearch_ge@6:
; Line 2966
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getBreakIterator_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_setText_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_setText_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_text$ = 12						; size = 4
_textlength$ = 16					; size = 4
_status$ = 20						; size = 4
_usearch_setText_56 PROC				; COMDAT
; Line 2974
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2975
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN7@usearch_se@4
; Line 2977
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN4@usearch_se@4
	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN4@usearch_se@4
	cmp	DWORD PTR _textlength$[ebp], -1
	jl	SHORT $LN4@usearch_se@4
	cmp	DWORD PTR _textlength$[ebp], 0
	jne	SHORT $LN5@usearch_se@4
$LN4@usearch_se@4:
; Line 2978
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2980
	jmp	$LN7@usearch_se@4
$LN5@usearch_se@4:
; Line 2981
	cmp	DWORD PTR _textlength$[ebp], -1
	jne	SHORT $LN2@usearch_se@4
; Line 2982
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _textlength$[ebp], eax
$LN2@usearch_se@4:
; Line 2984
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _text$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 2985
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _textlength$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 2986
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_setText_56
	add	esp, 16					; 00000010H
; Line 2987
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+20], -1
; Line 2988
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], 0
; Line 2989
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+29], 1
; Line 2991
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN1@usearch_se@4
; Line 2993
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_ubrk_setText_56
	add	esp, 16					; 00000010H
$LN1@usearch_se@4:
; Line 2995
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ubrk_setText_56
	add	esp, 16					; 00000010H
$LN7@usearch_se@4:
; Line 2999
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_setText_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getText_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getText_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_length$ = 12						; size = 4
_usearch_getText_56 PROC				; COMDAT
; Line 3003
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3004
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN1@usearch_ge@7
; Line 3005
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _length$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
; Line 3006
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN2@usearch_ge@7
$LN1@usearch_ge@7:
; Line 3008
	xor	eax, eax
$LN2@usearch_ge@7:
; Line 3009
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getText_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_setCollator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_setCollator_56
_TEXT	SEGMENT
tv75 = -220						; size = 4
$T80673 = -212						; size = 4
$T80674 = -200						; size = 4
_strsrch$ = 8						; size = 4
_collator$ = 12						; size = 4
_status$ = 16						; size = 4
_usearch_setCollator_56 PROC				; COMDAT
; Line 3014
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3015
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@usearch_se@5
; Line 3016
	cmp	DWORD PTR _collator$[ebp], 0
	jne	SHORT $LN3@usearch_se@5
; Line 3017
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 3018
	jmp	$LN5@usearch_se@5
$LN3@usearch_se@5:
; Line 3021
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	$LN5@usearch_se@5
; Line 3022
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4148]
	mov	DWORD PTR $T80674[ebp], ecx
	mov	edx, DWORD PTR $T80674[ebp]
	mov	DWORD PTR $T80673[ebp], edx
	cmp	DWORD PTR $T80673[ebp], 0
	je	SHORT $LN7@usearch_se@5
	push	1
	mov	ecx, DWORD PTR $T80673[ebp]
	call	??_GUCollationPCE@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN8@usearch_se@5
$LN7@usearch_se@5:
	mov	DWORD PTR tv75[ebp], 0
$LN8@usearch_se@5:
; Line 3023
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [eax+4148], 0
; Line 3024
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_closeElements_56
	add	esp, 4
; Line 3025
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4152]
	push	ecx
	call	_ucol_closeElements_56
	add	esp, 4
; Line 3026
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [eax+4152], 0
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [ecx+4144], 0
; Line 3027
	mov	eax, DWORD PTR _strsrch$[ebp]
	movsx	ecx, BYTE PTR [eax+4156]
	test	ecx, ecx
	je	SHORT $LN1@usearch_se@5
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4136]
	cmp	ecx, DWORD PTR _collator$[ebp]
	je	SHORT $LN1@usearch_se@5
; Line 3028
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4136]
	push	ecx
	call	_ucol_close_56
	add	esp, 4
; Line 3029
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	BYTE PTR [eax+4156], 0
$LN1@usearch_se@5:
; Line 3031
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _collator$[ebp]
	mov	DWORD PTR [eax+4136], ecx
; Line 3032
	mov	eax, DWORD PTR _collator$[ebp]
	push	eax
	call	_ucol_getStrength_56
	add	esp, 4
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [ecx+4160], eax
; Line 3033
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4160]
	push	ecx
	call	?getMask@@YAIW4UColAttributeValue@@@Z	; getMask
	add	esp, 4
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [edx+4164], eax
; Line 3035
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ubrk_close_56
	add	esp, 4
; Line 3037
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _collator$[ebp]
	push	edx
	call	_ucol_getLocaleByType_56
	add	esp, 12					; 0000000cH
	push	eax
	push	0
	call	_ubrk_open_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+12], eax
; Line 3042
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _collator$[ebp]
	push	ecx
	call	_ucol_getAttribute_56
	add	esp, 12					; 0000000cH
	cmp	eax, 20					; 00000014H
	sete	dl
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	BYTE PTR [eax+4172], dl
; Line 3044
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collator$[ebp]
	push	ecx
	call	_ucol_getVariableTop_56
	add	esp, 8
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [edx+4168], eax
; Line 3048
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _collator$[ebp]
	push	ecx
	call	_ucol_openElements_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [edx+4144], eax
; Line 3050
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _collator$[ebp]
	push	edx
	call	_ucol_openElements_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [ecx+4152], eax
; Line 3052
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z ; initialize
	add	esp, 8
$LN5@usearch_se@5:
; Line 3063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_setCollator_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getCollator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getCollator_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_usearch_getCollator_56 PROC				; COMDAT
; Line 3066
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3067
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN1@usearch_ge@8
; Line 3068
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [eax+4136]
	jmp	SHORT $LN2@usearch_ge@8
$LN1@usearch_ge@8:
; Line 3070
	xor	eax, eax
$LN2@usearch_ge@8:
; Line 3071
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getCollator_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_setPattern_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_setPattern_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_pattern$ = 12						; size = 4
_patternlength$ = 16					; size = 4
_status$ = 20						; size = 4
_usearch_setPattern_56 PROC				; COMDAT
; Line 3077
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3078
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@usearch_se@6
; Line 3079
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN4@usearch_se@6
	cmp	DWORD PTR _pattern$[ebp], 0
	jne	SHORT $LN5@usearch_se@6
$LN4@usearch_se@6:
; Line 3080
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 3082
	jmp	SHORT $LN7@usearch_se@6
$LN5@usearch_se@6:
; Line 3083
	cmp	DWORD PTR _patternlength$[ebp], -1
	jne	SHORT $LN2@usearch_se@6
; Line 3084
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _patternlength$[ebp], eax
$LN2@usearch_se@6:
; Line 3086
	cmp	DWORD PTR _patternlength$[ebp], 0
	jne	SHORT $LN1@usearch_se@6
; Line 3087
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 3088
	jmp	SHORT $LN7@usearch_se@6
$LN1@usearch_se@6:
; Line 3090
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3091
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _patternlength$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 3092
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z ; initialize
	add	esp, 8
$LN7@usearch_se@6:
; Line 3095
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_setPattern_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_getPattern_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_getPattern_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_length$ = 12						; size = 4
_usearch_getPattern_56 PROC				; COMDAT
; Line 3100
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3101
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN1@usearch_ge@9
; Line 3102
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
; Line 3103
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN2@usearch_ge@9
$LN1@usearch_ge@9:
; Line 3105
	xor	eax, eax
$LN2@usearch_ge@9:
; Line 3106
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_getPattern_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_next_56
PUBLIC	_usearch_first_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_first_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_first_56 PROC					; COMDAT
; Line 3112
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3113
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN2@usearch_fi
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_fi
; Line 3114
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+28], 1
; Line 3115
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3116
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_fi
; Line 3117
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_next_56
	add	esp, 8
	jmp	SHORT $LN3@usearch_fi
$LN2@usearch_fi:
; Line 3120
	or	eax, -1
$LN3@usearch_fi:
; Line 3121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_first_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_following_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_following_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_position$ = 12						; size = 4
_status$ = 16						; size = 4
_usearch_following_56 PROC				; COMDAT
; Line 3126
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3127
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN2@usearch_fo
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_fo
; Line 3128
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+28], 1
; Line 3130
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	push	edx
	call	_usearch_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3131
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_fo
; Line 3132
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_next_56
	add	esp, 8
	jmp	SHORT $LN3@usearch_fo
$LN2@usearch_fo:
; Line 3135
	or	eax, -1
$LN3@usearch_fo:
; Line 3136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_following_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_previous_56
PUBLIC	_usearch_last_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_last_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_last_56 PROC					; COMDAT
; Line 3140
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3141
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN2@usearch_la
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_la
; Line 3142
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+28], 0
; Line 3143
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3144
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_la
; Line 3145
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_previous_56
	add	esp, 8
	jmp	SHORT $LN3@usearch_la
$LN2@usearch_la:
; Line 3148
	or	eax, -1
$LN3@usearch_la:
; Line 3149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_last_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_preceding_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_preceding_56
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
_position$ = 12						; size = 4
_status$ = 16						; size = 4
_usearch_preceding_56 PROC				; COMDAT
; Line 3154
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3155
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	SHORT $LN2@usearch_pr
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_pr
; Line 3156
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+28], 0
; Line 3158
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	push	edx
	call	_usearch_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3159
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_pr
; Line 3160
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_previous_56
	add	esp, 8
	jmp	SHORT $LN3@usearch_pr
$LN2@usearch_pr:
; Line 3163
	or	eax, -1
$LN3@usearch_pr:
; Line 3164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_preceding_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_handleNextExact_56
PUBLIC	_usearch_handleNextCanonical_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_next_56
_TEXT	SEGMENT
tv141 = -232						; size = 4
_textlength$73375 = -32					; size = 4
_search$73374 = -20					; size = 4
_offset$73373 = -8					; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_next_56 PROC					; COMDAT
; Line 3190
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3191
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN22@usearch_ne
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	$LN22@usearch_ne
; Line 3194
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	_usearch_getOffset_56
	add	esp, 4
	mov	DWORD PTR _offset$73373[ebp], eax
; Line 3195
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _search$73374[ebp], ecx
; Line 3196
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	BYTE PTR [eax+29], 0
; Line 3197
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _textlength$73375[ebp], ecx
; Line 3198
	mov	eax, DWORD PTR _search$73374[ebp]
	movsx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	SHORT $LN21@usearch_ne
; Line 3213
	mov	eax, DWORD PTR _offset$73373[ebp]
	cmp	eax, DWORD PTR _textlength$73375[ebp]
	je	SHORT $LN19@usearch_ne
	mov	eax, DWORD PTR _search$73374[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN20@usearch_ne
	mov	eax, DWORD PTR _search$73374[ebp]
	cmp	DWORD PTR [eax+20], -1
	je	SHORT $LN20@usearch_ne
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR _offset$73373[ebp]
	add	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _textlength$73375[ebp]
	jle	SHORT $LN20@usearch_ne
$LN19@usearch_ne:
; Line 3215
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 3216
	or	eax, -1
	jmp	$LN23@usearch_ne
$LN20@usearch_ne:
; Line 3220
	jmp	SHORT $LN18@usearch_ne
$LN21@usearch_ne:
; Line 3226
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	BYTE PTR [eax+28], 1
; Line 3227
	mov	eax, DWORD PTR _search$73374[ebp]
	cmp	DWORD PTR [eax+20], -1
	je	SHORT $LN18@usearch_ne
; Line 3230
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	eax, DWORD PTR [eax+20]
	jmp	$LN23@usearch_ne
$LN18@usearch_ne:
; Line 3234
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN22@usearch_ne
; Line 3235
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN15@usearch_ne
; Line 3236
	mov	eax, DWORD PTR _search$73374[ebp]
	cmp	DWORD PTR [eax+20], -1
	jne	SHORT $LN14@usearch_ne
; Line 3237
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR _offset$73373[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 3239
	jmp	$LN13@usearch_ne
$LN14@usearch_ne:
; Line 3240
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _search$73374[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	ecx, WORD PTR [eax+ecx*2]
	and	ecx, -1024				; fffffc00H
	mov	edx, DWORD PTR _search$73374[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 1
	mov	edx, DWORD PTR _search$73374[ebp]
	mov	DWORD PTR [edx+20], eax
	cmp	ecx, 55296				; 0000d800H
	jne	SHORT $LN25@usearch_ne
	mov	DWORD PTR tv141[ebp], 1
	jmp	SHORT $LN26@usearch_ne
$LN25@usearch_ne:
	mov	DWORD PTR tv141[ebp], 0
$LN26@usearch_ne:
	cmp	DWORD PTR tv141[ebp], 0
	je	SHORT $LN13@usearch_ne
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _textlength$73375[ebp]
	je	SHORT $LN13@usearch_ne
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _search$73374[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	ecx, WORD PTR [eax+ecx*2]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 56320				; 0000dc00H
	jne	SHORT $LN13@usearch_ne
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _search$73374[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN13@usearch_ne:
; Line 3243
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 3244
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4144]
	push	eax
	call	?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ; setColEIterOffset
	add	esp, 8
; Line 3246
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _textlength$73375[ebp]
	jne	SHORT $LN11@usearch_ne
; Line 3247
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	DWORD PTR [eax+20], -1
$LN11@usearch_ne:
; Line 3250
	jmp	$LN10@usearch_ne
$LN15@usearch_ne:
; Line 3251
	mov	eax, DWORD PTR _search$73374[ebp]
	cmp	DWORD PTR [eax+24], 0
	jle	SHORT $LN9@usearch_ne
; Line 3253
	mov	eax, DWORD PTR _search$73374[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN8@usearch_ne
; Line 3254
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$73373[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4144]
	push	eax
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3256
	jmp	SHORT $LN7@usearch_ne
$LN8@usearch_ne:
; Line 3258
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _search$73374[ebp]
	mov	edx, DWORD PTR _offset$73373[ebp]
	add	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
$LN7@usearch_ne:
; Line 3261
	jmp	SHORT $LN6@usearch_ne
$LN9@usearch_ne:
; Line 3266
	mov	eax, DWORD PTR _offset$73373[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _search$73374[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN6@usearch_ne:
; Line 3269
	mov	eax, DWORD PTR _search$73374[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN5@usearch_ne
; Line 3271
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_handleNextCanonical_56
	add	esp, 8
; Line 3273
	jmp	SHORT $LN10@usearch_ne
$LN5@usearch_ne:
; Line 3274
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_handleNextExact_56
	add	esp, 8
$LN10@usearch_ne:
; Line 3278
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@usearch_ne
; Line 3279
	or	eax, -1
	jmp	SHORT $LN23@usearch_ne
$LN3@usearch_ne:
; Line 3283
	mov	eax, DWORD PTR _search$73374[ebp]
	cmp	DWORD PTR [eax+20], -1
	jne	SHORT $LN2@usearch_ne
; Line 3284
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _search$73374[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3285
	jmp	SHORT $LN1@usearch_ne
$LN2@usearch_ne:
; Line 3286
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _search$73374[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
$LN1@usearch_ne:
; Line 3290
	mov	eax, DWORD PTR _search$73374[ebp]
	mov	eax, DWORD PTR [eax+20]
	jmp	SHORT $LN23@usearch_ne
$LN22@usearch_ne:
; Line 3293
	or	eax, -1
$LN23@usearch_ne:
; Line 3294
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_next_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setMatchNotFound@@YAXPAUUStringSearch@@@Z
_TEXT	SEGMENT
_strsrch$ = 8						; size = 4
?setMatchNotFound@@YAXPAUUStringSearch@@@Z PROC		; setMatchNotFound, COMDAT
; Line 767
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 769
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+20], -1
; Line 770
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], 0
; Line 771
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+28]
	test	edx, edx
	je	SHORT $LN2@setMatchNo
; Line 772
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ; setColEIterOffset
	add	esp, 8
; Line 774
	jmp	SHORT $LN3@setMatchNo
$LN2@setMatchNo:
; Line 775
	push	0
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ; setColEIterOffset
	add	esp, 8
$LN3@setMatchNo:
; Line 777
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setMatchNotFound@@YAXPAUUStringSearch@@@Z ENDP		; setMatchNotFound
_TEXT	ENDS
PUBLIC	_usearch_handlePreviousExact_56
PUBLIC	_usearch_handlePreviousCanonical_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_previous_56
_TEXT	SEGMENT
tv136 = -232						; size = 4
tv130 = -232						; size = 4
_matchedindex$73406 = -32				; size = 4
_search$73403 = -20					; size = 4
_offset$73402 = -8					; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_previous_56 PROC				; COMDAT
; Line 3298
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3299
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN17@usearch_pr@2
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	$LN17@usearch_pr@2
; Line 3301
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _search$73403[ebp], ecx
; Line 3302
	mov	eax, DWORD PTR _search$73403[ebp]
	movsx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	SHORT $LN16@usearch_pr@2
; Line 3303
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _offset$73402[ebp], ecx
; Line 3304
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	BYTE PTR [eax+28], 0
; Line 3305
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	BYTE PTR [eax+29], 0
; Line 3306
	mov	eax, DWORD PTR _offset$73402[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4144]
	push	edx
	call	?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ; setColEIterOffset
	add	esp, 8
; Line 3308
	jmp	SHORT $LN15@usearch_pr@2
$LN16@usearch_pr@2:
; Line 3309
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	_usearch_getOffset_56
	add	esp, 4
	mov	DWORD PTR _offset$73402[ebp], eax
$LN15@usearch_pr@2:
; Line 3312
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _matchedindex$73406[ebp], ecx
; Line 3313
	mov	eax, DWORD PTR _search$73403[ebp]
	movsx	ecx, BYTE PTR [eax+28]
	cmp	ecx, 1
	jne	SHORT $LN14@usearch_pr@2
; Line 3319
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	BYTE PTR [eax+28], 0
; Line 3320
	cmp	DWORD PTR _matchedindex$73406[ebp], -1
	je	SHORT $LN13@usearch_pr@2
; Line 3321
	mov	eax, DWORD PTR _matchedindex$73406[ebp]
	jmp	$LN18@usearch_pr@2
$LN13@usearch_pr@2:
; Line 3324
	jmp	SHORT $LN12@usearch_pr@2
$LN14@usearch_pr@2:
; Line 3338
	cmp	DWORD PTR _offset$73402[ebp], 0
	je	SHORT $LN10@usearch_pr@2
	cmp	DWORD PTR _matchedindex$73406[ebp], 0
	jne	SHORT $LN12@usearch_pr@2
$LN10@usearch_pr@2:
; Line 3339
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 3340
	or	eax, -1
	jmp	$LN18@usearch_pr@2
$LN12@usearch_pr@2:
; Line 3345
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN17@usearch_pr@2
; Line 3346
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN8@usearch_pr@2
; Line 3348
	cmp	DWORD PTR _matchedindex$73406[ebp], -1
	jne	SHORT $LN20@usearch_pr@2
	mov	eax, DWORD PTR _offset$73402[ebp]
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN21@usearch_pr@2
$LN20@usearch_pr@2:
	mov	ecx, DWORD PTR _matchedindex$73406[ebp]
	mov	DWORD PTR tv130[ebp], ecx
$LN21@usearch_pr@2:
	mov	edx, DWORD PTR _search$73403[ebp]
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 3349
	mov	eax, DWORD PTR _search$73403[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN7@usearch_pr@2
; Line 3350
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 3353
	jmp	$LN6@usearch_pr@2
$LN7@usearch_pr@2:
; Line 3354
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR _search$73403[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR _search$73403[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR tv136[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 56320				; 0000dc00H
	jne	SHORT $LN5@usearch_pr@2
	mov	eax, DWORD PTR _search$73403[ebp]
	cmp	DWORD PTR [eax+20], 0
	jle	SHORT $LN5@usearch_pr@2
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _search$73403[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	ecx, WORD PTR [eax+ecx*2-2]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 55296				; 0000d800H
	jne	SHORT $LN5@usearch_pr@2
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	edx, DWORD PTR _search$73403[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN5@usearch_pr@2:
; Line 3355
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4144]
	push	eax
	call	?setColEIterOffset@@YAXPAUUCollationElements@@H@Z ; setColEIterOffset
	add	esp, 8
; Line 3357
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	DWORD PTR [eax+24], 0
$LN6@usearch_pr@2:
; Line 3360
	jmp	SHORT $LN4@usearch_pr@2
$LN8@usearch_pr@2:
; Line 3361
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	je	SHORT $LN3@usearch_pr@2
; Line 3363
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_handlePreviousCanonical_56
	add	esp, 8
; Line 3366
	jmp	SHORT $LN4@usearch_pr@2
$LN3@usearch_pr@2:
; Line 3367
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_handlePreviousExact_56
	add	esp, 8
$LN4@usearch_pr@2:
; Line 3372
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@usearch_pr@2
; Line 3373
	or	eax, -1
	jmp	SHORT $LN18@usearch_pr@2
$LN1@usearch_pr@2:
; Line 3376
	mov	eax, DWORD PTR _search$73403[ebp]
	mov	eax, DWORD PTR [eax+20]
	jmp	SHORT $LN18@usearch_pr@2
$LN17@usearch_pr@2:
; Line 3379
	or	eax, -1
$LN18@usearch_pr@2:
; Line 3380
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usearch_previous_56 ENDP
_TEXT	ENDS
PUBLIC	_usearch_reset_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_reset_56
_TEXT	SEGMENT
_newStrength$73430 = -68				; size = 4
_varTop$73429 = -56					; size = 4
_shift$73428 = -41					; size = 1
_ceMask$73427 = -32					; size = 4
_sameCollAttribute$73426 = -17				; size = 1
_status$73425 = -8					; size = 4
_strsrch$ = 8						; size = 4
_usearch_reset_56 PROC					; COMDAT
; Line 3385
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3391
	cmp	DWORD PTR _strsrch$[ebp], 0
	je	$LN9@usearch_re
; Line 3392
	mov	DWORD PTR _status$73425[ebp], 0
; Line 3393
	mov	BYTE PTR _sameCollAttribute$73426[ebp], 1
; Line 3399
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4136]
	push	ecx
	call	_ucol_getStrength_56
	add	esp, 4
	mov	DWORD PTR _newStrength$73430[ebp], eax
; Line 3401
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4160], 3
	jge	SHORT $LN5@usearch_re
	cmp	DWORD PTR _newStrength$73430[ebp], 3
	jge	SHORT $LN6@usearch_re
$LN5@usearch_re:
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4160], 3
	jl	SHORT $LN7@usearch_re
	cmp	DWORD PTR _newStrength$73430[ebp], 3
	jge	SHORT $LN7@usearch_re
$LN6@usearch_re:
; Line 3402
	mov	BYTE PTR _sameCollAttribute$73426[ebp], 0
$LN7@usearch_re:
; Line 3405
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4136]
	push	ecx
	call	_ucol_getStrength_56
	add	esp, 4
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	DWORD PTR [edx+4160], eax
; Line 3406
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4160]
	push	ecx
	call	?getMask@@YAIW4UColAttributeValue@@@Z	; getMask
	add	esp, 4
	mov	DWORD PTR _ceMask$73427[ebp], eax
; Line 3407
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4164]
	cmp	ecx, DWORD PTR _ceMask$73427[ebp]
	je	SHORT $LN4@usearch_re
; Line 3408
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _ceMask$73427[ebp]
	mov	DWORD PTR [eax+4164], ecx
; Line 3409
	mov	BYTE PTR _sameCollAttribute$73426[ebp], 0
$LN4@usearch_re:
; Line 3414
	lea	eax, DWORD PTR _status$73425[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4136]
	push	edx
	call	_ucol_getAttribute_56
	add	esp, 12					; 0000000cH
	cmp	eax, 20					; 00000014H
	sete	al
	mov	BYTE PTR _shift$73428[ebp], al
; Line 3415
	mov	eax, DWORD PTR _strsrch$[ebp]
	movsx	ecx, BYTE PTR [eax+4172]
	movsx	edx, BYTE PTR _shift$73428[ebp]
	cmp	ecx, edx
	je	SHORT $LN3@usearch_re
; Line 3416
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	cl, BYTE PTR _shift$73428[ebp]
	mov	BYTE PTR [eax+4172], cl
; Line 3417
	mov	BYTE PTR _sameCollAttribute$73426[ebp], 0
$LN3@usearch_re:
; Line 3421
	lea	eax, DWORD PTR _status$73425[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4136]
	push	edx
	call	_ucol_getVariableTop_56
	add	esp, 8
	mov	DWORD PTR _varTop$73429[ebp], eax
; Line 3422
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4168]
	cmp	ecx, DWORD PTR _varTop$73429[ebp]
	je	SHORT $LN2@usearch_re
; Line 3423
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _varTop$73429[ebp]
	mov	DWORD PTR [eax+4168], ecx
; Line 3424
	mov	BYTE PTR _sameCollAttribute$73426[ebp], 0
$LN2@usearch_re:
; Line 3426
	movsx	eax, BYTE PTR _sameCollAttribute$73426[ebp]
	test	eax, eax
	jne	SHORT $LN1@usearch_re
; Line 3427
	lea	eax, DWORD PTR _status$73425[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z ; initialize
	add	esp, 8
$LN1@usearch_re:
; Line 3431
	lea	eax, DWORD PTR _status$73425[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4144]
	push	edx
	call	_ucol_setText_56
	add	esp, 16					; 00000010H
; Line 3432
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], 0
; Line 3433
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+20], -1
; Line 3434
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+8], 0
; Line 3435
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+9], 0
; Line 3436
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	xor	edx, edx
	mov	WORD PTR [ecx+10], dx
; Line 3437
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+28], 1
; Line 3438
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+29], 1
$LN9@usearch_re:
; Line 3440
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@usearch_re
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@usearch_re:
	DD	1
	DD	$LN12@usearch_re
$LN12@usearch_re:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN11@usearch_re
$LN11@usearch_re:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_usearch_reset_56 ENDP
_TEXT	ENDS
PUBLIC	??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z ; icu_56::`anonymous namespace'::CEIBuffer::CEIBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_c$73490 = -44						; size = 2
_patTextLimit$73486 = -32				; size = 4
_patText$73484 = -20					; size = 4
_this$ = -8						; size = 4
_ss$ = 8						; size = 4
_status$ = 12						; size = 4
??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z PROC ; icu_56::`anonymous namespace'::CEIBuffer::CEIBuffer, COMDAT
; _this$ = ecx
; Line 3483
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3484
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1536], ecx
; Line 3485
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ss$[ebp]
	mov	DWORD PTR [eax+1556], ecx
; Line 3486
	mov	eax, DWORD PTR _ss$[ebp]
	mov	ecx, DWORD PTR [eax+1048]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1540], ecx
; Line 3487
	mov	eax, DWORD PTR _ss$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, WORD PTR [ecx+10]
	test	edx, edx
	je	$LN12@CEIBuffer
; Line 3488
	mov	eax, DWORD PTR _ss$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _patText$73484[ebp], ecx
; Line 3489
	cmp	DWORD PTR _patText$73484[ebp], 0
	je	$LN12@CEIBuffer
; Line 3490
	mov	eax, DWORD PTR _ss$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _patText$73484[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _patTextLimit$73486[ebp], eax
$LN10@CEIBuffer:
; Line 3491
	mov	eax, DWORD PTR _patText$73484[ebp]
	cmp	eax, DWORD PTR _patTextLimit$73486[ebp]
	jae	$LN12@CEIBuffer
; Line 3492
	mov	eax, DWORD PTR _patText$73484[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$73490[ebp], cx
	mov	edx, DWORD PTR _patText$73484[ebp]
	add	edx, 2
	mov	DWORD PTR _patText$73484[ebp], edx
; Line 3493
	movzx	eax, WORD PTR _c$73490[ebp]
	cmp	eax, 4352				; 00001100H
	jl	SHORT $LN6@CEIBuffer
	movzx	eax, WORD PTR _c$73490[ebp]
	cmp	eax, 4446				; 0000115eH
	jle	SHORT $LN7@CEIBuffer
$LN6@CEIBuffer:
	movzx	eax, WORD PTR _c$73490[ebp]
	cmp	eax, 12593				; 00003131H
	jl	SHORT $LN5@CEIBuffer
	movzx	eax, WORD PTR _c$73490[ebp]
	cmp	eax, 12622				; 0000314eH
	jle	SHORT $LN7@CEIBuffer
$LN5@CEIBuffer:
	movzx	eax, WORD PTR _c$73490[ebp]
	cmp	eax, 12645				; 00003165H
	jl	SHORT $LN8@CEIBuffer
	movzx	eax, WORD PTR _c$73490[ebp]
	cmp	eax, 12678				; 00003186H
	jg	SHORT $LN8@CEIBuffer
$LN7@CEIBuffer:
; Line 3494
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1540]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1540], ecx
; Line 3495
	jmp	SHORT $LN4@CEIBuffer
$LN8@CEIBuffer:
; Line 3497
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1540]
	add	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1540], ecx
$LN4@CEIBuffer:
; Line 3499
	jmp	$LN10@CEIBuffer
$LN12@CEIBuffer:
; Line 3502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ss$[ebp]
	mov	edx, DWORD PTR [ecx+4144]
	mov	DWORD PTR [eax+1552], edx
; Line 3503
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1544], 0
; Line 3504
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1548], 0
; Line 3506
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ss$[ebp]
	push	ecx
	call	?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z ; `anonymous namespace'::initTextProcessedIter
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN3@CEIBuffer
	jmp	SHORT $LN13@CEIBuffer
$LN3@CEIBuffer:
; Line 3508
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1540], 96		; 00000060H
	jle	SHORT $LN13@CEIBuffer
; Line 3509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1540]
	shl	ecx, 4
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1536], eax
; Line 3510
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1536], 0
	jne	SHORT $LN13@CEIBuffer
; Line 3511
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN13@CEIBuffer:
; Line 3514
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z ENDP ; icu_56::`anonymous namespace'::CEIBuffer::CEIBuffer
_TEXT	ENDS
PUBLIC	??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ	; icu_56::`anonymous namespace'::CEIBuffer::~CEIBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ PROC		; icu_56::`anonymous namespace'::CEIBuffer::~CEIBuffer, COMDAT
; _this$ = ecx
; Line 3519
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3520
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1536]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@CEIBuffer@2
; Line 3521
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1536]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@CEIBuffer@2:
; Line 3523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ ENDP		; icu_56::`anonymous namespace'::CEIBuffer::~CEIBuffer
_TEXT	ENDS
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA ; `icu_56::`anonymous namespace'::CEIBuffer::get'::`2'::__LINE__Var
PUBLIC	?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::get
EXTRN	?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z:PROC ; icu_56::UCollationPCE::nextProcessed
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'c', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA DD 0dccH ; `icu_56::`anonymous namespace'::CEIBuffer::get'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z
_TEXT	SEGMENT
_status$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z PROC	; icu_56::`anonymous namespace'::CEIBuffer::get, COMDAT
; _this$ = ecx
; Line 3532
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3533
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cdq
	idiv	DWORD PTR [ecx+1540]
	mov	DWORD PTR _i$[ebp], edx
; Line 3535
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+1544]
	jl	SHORT $LN3@get
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+1548]
	jge	SHORT $LN3@get
; Line 3538
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1536]
	jmp	$LN4@get
$LN3@get:
; Line 3544
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+1548]
	je	SHORT $LN2@get
; Line 3545
	xor	eax, eax
	jne	SHORT $LN6@get
	mov	ecx, DWORD PTR ?__LINE__Var@?1??get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA
	add	ecx, 13					; 0000000dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@get:
; Line 3547
	xor	eax, eax
	jmp	$LN4@get
$LN2@get:
; Line 3551
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1548]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1548], ecx
; Line 3553
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1548]
	sub	edx, DWORD PTR [ecx+1544]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR [eax+1540]
	jl	SHORT $LN1@get
; Line 3555
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1544]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1544], ecx
$LN1@get:
; Line 3558
	mov	DWORD PTR _status$[ebp], 0
; Line 3560
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1536]
	lea	ecx, DWORD PTR [eax+ecx+12]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1536]
	lea	edx, DWORD PTR [ecx+edx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1556]
	mov	ecx, DWORD PTR [ecx+4148]
	call	?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z ; icu_56::UCollationPCE::nextProcessed
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+1536]
	mov	DWORD PTR [ecx+esi], eax
	mov	DWORD PTR [ecx+esi+4], edx
; Line 3562
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1536]
$LN4@get:
; Line 3563
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@get:
	DD	1
	DD	$LN8@get
$LN8@get:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@get
$LN7@get:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ENDP	; icu_56::`anonymous namespace'::CEIBuffer::get
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA ; `icu_56::`anonymous namespace'::CEIBuffer::getPrevious'::`2'::__LINE__Var
PUBLIC	?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
EXTRN	?previousProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z:PROC ; icu_56::UCollationPCE::previousProcessed
;	COMDAT ?__LINE__Var@?1??getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA DD 0df3H ; `icu_56::`anonymous namespace'::CEIBuffer::getPrevious'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z
_TEXT	SEGMENT
_status$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z PROC ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious, COMDAT
; _this$ = ecx
; Line 3571
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3572
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cdq
	idiv	DWORD PTR [ecx+1540]
	mov	DWORD PTR _i$[ebp], edx
; Line 3574
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+1544]
	jl	SHORT $LN3@getPreviou
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+1548]
	jge	SHORT $LN3@getPreviou
; Line 3577
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1536]
	jmp	$LN4@getPreviou
$LN3@getPreviou:
; Line 3583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+1548]
	je	SHORT $LN2@getPreviou
; Line 3584
	xor	eax, eax
	jne	SHORT $LN6@getPreviou
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA
	add	ecx, 13					; 0000000dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getPreviou:
; Line 3586
	xor	eax, eax
	jmp	$LN4@getPreviou
$LN2@getPreviou:
; Line 3590
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1548]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1548], ecx
; Line 3592
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1548]
	sub	edx, DWORD PTR [ecx+1544]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR [eax+1540]
	jl	SHORT $LN1@getPreviou
; Line 3594
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1544]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1544], ecx
$LN1@getPreviou:
; Line 3597
	mov	DWORD PTR _status$[ebp], 0
; Line 3599
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1536]
	lea	ecx, DWORD PTR [eax+ecx+12]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1536]
	lea	edx, DWORD PTR [ecx+edx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1556]
	mov	ecx, DWORD PTR [ecx+4148]
	call	?previousProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z ; icu_56::UCollationPCE::previousProcessed
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+1536]
	mov	DWORD PTR [ecx+esi], eax
	mov	DWORD PTR [ecx+esi+4], edx
; Line 3601
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1536]
$LN4@getPreviou:
; Line 3602
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@getPreviou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@getPreviou:
	DD	1
	DD	$LN8@getPreviou
$LN8@getPreviou:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@getPreviou
$LN7@getPreviou:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ENDP ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
_TEXT	ENDS
PUBLIC	?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z	; `anonymous namespace'::codePointAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z
_TEXT	SEGMENT
___c2$73586 = -20					; size = 2
_c$73584 = -8						; size = 4
_search$ = 8						; size = 4
_index$ = 12						; size = 4
?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z PROC	; `anonymous namespace'::codePointAt, COMDAT
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3815
	mov	eax, DWORD PTR _search$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@codePointA
; Line 3817
	mov	eax, DWORD PTR _search$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _c$73584[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	eax, DWORD PTR _c$73584[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN2@codePointA
	mov	eax, DWORD PTR _search$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN2@codePointA
	mov	eax, DWORD PTR _search$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	mov	ax, WORD PTR [ecx+edx*2]
	mov	WORD PTR ___c2$73586[ebp], ax
	movzx	ecx, WORD PTR ___c2$73586[ebp]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 56320				; 0000dc00H
	jne	SHORT $LN2@codePointA
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	eax, DWORD PTR _c$73584[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$73586[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$73584[ebp], edx
$LN2@codePointA:
; Line 3818
	mov	eax, DWORD PTR _c$73584[ebp]
	jmp	SHORT $LN4@codePointA
$LN3@codePointA:
; Line 3820
	or	eax, -1
$LN4@codePointA:
; Line 3821
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z ENDP	; `anonymous namespace'::codePointAt
_TEXT	ENDS
PUBLIC	?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z ; `anonymous namespace'::codePointBefore
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z
_TEXT	SEGMENT
___c2$73597 = -20					; size = 2
_c$73595 = -8						; size = 4
_search$ = 8						; size = 4
_index$ = 12						; size = 4
?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z PROC	; `anonymous namespace'::codePointBefore, COMDAT
; Line 3823
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3824
	cmp	DWORD PTR _index$[ebp], 0
	jle	SHORT $LN3@codePointB
; Line 3826
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _search$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _index$[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	mov	DWORD PTR _c$73595[ebp], ecx
	mov	eax, DWORD PTR _c$73595[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN2@codePointB
	cmp	DWORD PTR _index$[ebp], 0
	jle	SHORT $LN2@codePointB
	mov	eax, DWORD PTR _search$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	mov	ax, WORD PTR [ecx+edx*2-2]
	mov	WORD PTR ___c2$73597[ebp], ax
	movzx	ecx, WORD PTR ___c2$73597[ebp]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 55296				; 0000d800H
	jne	SHORT $LN2@codePointB
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	movzx	eax, WORD PTR ___c2$73597[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$73595[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$73595[ebp], edx
$LN2@codePointB:
; Line 3827
	mov	eax, DWORD PTR _c$73595[ebp]
	jmp	SHORT $LN4@codePointB
$LN3@codePointB:
; Line 3829
	or	eax, -1
$LN4@codePointB:
; Line 3830
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z ENDP	; `anonymous namespace'::codePointBefore
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_usearch_search_56
EXTRN	__allshr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_search_56
_TEXT	SEGMENT
tv249 = -2005						; size = 1
tv443 = -2004						; size = 8
tv397 = -2004						; size = 8
tv380 = -2000						; size = 4
tv370 = -2000						; size = 4
tv350 = -2000						; size = 4
$T80732 = -1989						; size = 1
_nba$73670 = -1788					; size = 4
_allowMidclusterMatch$73665 = -1773			; size = 1
_secondIx$73663 = -1764					; size = 4
_ceMatch$73656 = -1752					; size = 4
_nextCEI$73643 = -1740					; size = 4
_lastCEI$73642 = -1728					; size = 4
_ceMatch$73631 = -1716					; size = 4
_firstCEI$73626 = -1704					; size = 4
_patCE$73625 = -1692					; size = 8
_targetIxOffset$73624 = -1676				; size = 4
_maxLimit$ = -1664					; size = 4
_minLimit$ = -1652					; size = 4
_mLimit$ = -1640					; size = 4
_mStart$ = -1628					; size = 4
_found$ = -1613						; size = 1
_patIx$ = -1604						; size = 4
_targetCEI$ = -1592					; size = 4
_targetIx$ = -1580					; size = 4
_ceb$ = -1568						; size = 1560
__$ArrayPad$ = -4					; size = 4
_strsrch$ = 8						; size = 4
_startIdx$ = 12						; size = 4
_matchStart$ = 16					; size = 4
_matchLimit$ = 20					; size = 4
_status$ = 24						; size = 4
_usearch_search_56 PROC					; COMDAT
; Line 3839
	push	ebp
	mov	ebp, esp
	sub	esp, 2008				; 000007d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2008]
	mov	ecx, 502				; 000001f6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3840
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN48@usearch_se@7
; Line 3841
	xor	al, al
	jmp	$LN49@usearch_se@7
$LN48@usearch_se@7:
; Line 3862
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN46@usearch_se@7
	cmp	DWORD PTR _startIdx$[ebp], 0
	jl	SHORT $LN46@usearch_se@7
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _startIdx$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jg	SHORT $LN46@usearch_se@7
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN47@usearch_se@7
$LN46@usearch_se@7:
; Line 3863
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 3864
	xor	al, al
	jmp	$LN49@usearch_se@7
$LN47@usearch_se@7:
; Line 3867
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+1052], 0
	jne	SHORT $LN45@usearch_se@7
; Line 3868
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ; initializePatternPCETable
	add	esp, 8
$LN45@usearch_se@7:
; Line 3871
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startIdx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4144]
	push	eax
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
; Line 3872
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z ; icu_56::`anonymous namespace'::CEIBuffer::CEIBuffer
; Line 3875
	mov	DWORD PTR _targetIx$[ebp], 0
; Line 3876
	mov	DWORD PTR _targetCEI$[ebp], 0
; Line 3880
	mov	DWORD PTR _mStart$[ebp], -1
; Line 3881
	mov	DWORD PTR _mLimit$[ebp], -1
; Line 3901
	mov	DWORD PTR _targetIx$[ebp], 0
	jmp	SHORT $LN44@usearch_se@7
$LN43@usearch_se@7:
	mov	eax, DWORD PTR _targetIx$[ebp]
	add	eax, 1
	mov	DWORD PTR _targetIx$[ebp], eax
$LN44@usearch_se@7:
; Line 3903
	mov	BYTE PTR _found$[ebp], 1
; Line 3906
	mov	DWORD PTR _targetIxOffset$73624[ebp], 0
; Line 3907
	mov	DWORD PTR _patCE$73625[ebp], 0
	mov	DWORD PTR _patCE$73625[ebp+4], 0
; Line 3911
	mov	eax, DWORD PTR _targetIx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::get
	mov	DWORD PTR _firstCEI$73626[ebp], eax
; Line 3912
	cmp	DWORD PTR _firstCEI$73626[ebp], 0
	jne	SHORT $LN41@usearch_se@7
; Line 3913
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 3914
	mov	BYTE PTR _found$[ebp], 0
; Line 3915
	jmp	$LN42@usearch_se@7
$LN41@usearch_se@7:
; Line 3918
	mov	DWORD PTR _patIx$[ebp], 0
	jmp	SHORT $LN40@usearch_se@7
$LN39@usearch_se@7:
	mov	eax, DWORD PTR _patIx$[ebp]
	add	eax, 1
	mov	DWORD PTR _patIx$[ebp], eax
$LN40@usearch_se@7:
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _patIx$[ebp]
	cmp	ecx, DWORD PTR [eax+1048]
	jge	$LN38@usearch_se@7
; Line 3919
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1052]
	mov	edx, DWORD PTR _patIx$[ebp]
	mov	eax, DWORD PTR [ecx+edx*8]
	mov	DWORD PTR _patCE$73625[ebp], eax
	mov	ecx, DWORD PTR [ecx+edx*8+4]
	mov	DWORD PTR _patCE$73625[ebp+4], ecx
; Line 3920
	mov	eax, DWORD PTR _targetIx$[ebp]
	add	eax, DWORD PTR _patIx$[ebp]
	add	eax, DWORD PTR _targetIxOffset$73624[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::get
	mov	DWORD PTR _targetCEI$[ebp], eax
; Line 3924
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _patCE$73625[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _patCE$73625[ebp]
	push	ecx
	mov	edx, DWORD PTR _targetCEI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	call	?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z ; compareCE64s
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ceMatch$73631[ebp], eax
; Line 3925
	cmp	DWORD PTR _ceMatch$73631[ebp], 0
	jne	SHORT $LN37@usearch_se@7
; Line 3926
	mov	BYTE PTR _found$[ebp], 0
; Line 3927
	jmp	SHORT $LN38@usearch_se@7
	jmp	SHORT $LN36@usearch_se@7
$LN37@usearch_se@7:
; Line 3928
	cmp	DWORD PTR _ceMatch$73631[ebp], 0
	jle	SHORT $LN36@usearch_se@7
; Line 3929
	cmp	DWORD PTR _ceMatch$73631[ebp], 1
	jne	SHORT $LN34@usearch_se@7
; Line 3931
	mov	eax, DWORD PTR _patIx$[ebp]
	sub	eax, 1
	mov	DWORD PTR _patIx$[ebp], eax
; Line 3932
	mov	eax, DWORD PTR _targetIxOffset$73624[ebp]
	add	eax, 1
	mov	DWORD PTR _targetIxOffset$73624[ebp], eax
; Line 3933
	jmp	SHORT $LN36@usearch_se@7
$LN34@usearch_se@7:
; Line 3935
	mov	eax, DWORD PTR _targetIxOffset$73624[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetIxOffset$73624[ebp], eax
$LN36@usearch_se@7:
; Line 3938
	jmp	$LN39@usearch_se@7
$LN38@usearch_se@7:
; Line 3939
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _targetIxOffset$73624[ebp]
	add	ecx, DWORD PTR [eax+1048]
	mov	DWORD PTR _targetIxOffset$73624[ebp], ecx
; Line 3941
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN32@usearch_se@7
	cmp	DWORD PTR _targetCEI$[ebp], 0
	je	SHORT $LN31@usearch_se@7
	mov	eax, DWORD PTR _targetCEI$[ebp]
	mov	DWORD PTR tv350[ebp], eax
	mov	ecx, DWORD PTR tv350[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN31@usearch_se@7
	mov	edx, DWORD PTR tv350[ebp]
	cmp	DWORD PTR [edx+4], 2147483647		; 7fffffffH
	je	SHORT $LN32@usearch_se@7
$LN31@usearch_se@7:
; Line 3943
	jmp	$LN43@usearch_se@7
$LN32@usearch_se@7:
; Line 3946
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN30@usearch_se@7
; Line 3948
	jmp	$LN42@usearch_se@7
$LN30@usearch_se@7:
; Line 3957
	mov	eax, DWORD PTR _targetIxOffset$73624[ebp]
	mov	ecx, DWORD PTR _targetIx$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::get
	mov	DWORD PTR _lastCEI$73642[ebp], eax
; Line 3959
	mov	eax, DWORD PTR _firstCEI$73626[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _mStart$[ebp], ecx
; Line 3960
	mov	eax, DWORD PTR _lastCEI$73642[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _minLimit$[ebp], ecx
; Line 3970
	mov	DWORD PTR _nextCEI$73643[ebp], 0
; Line 3971
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, WORD PTR [ecx+10]
	test	edx, edx
	jne	SHORT $LN29@usearch_se@7
; Line 3972
	mov	eax, DWORD PTR _targetIx$[ebp]
	add	eax, DWORD PTR _targetIxOffset$73624[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::get
	mov	DWORD PTR _nextCEI$73643[ebp], eax
; Line 3973
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _maxLimit$[ebp], ecx
; Line 3974
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	ecx, DWORD PTR _nextCEI$73643[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN28@usearch_se@7
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	DWORD PTR tv370[ebp], eax
	mov	ecx, DWORD PTR tv370[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN55@usearch_se@7
	mov	edx, DWORD PTR tv370[ebp]
	cmp	DWORD PTR [edx+4], 2147483647		; 7fffffffH
	je	SHORT $LN28@usearch_se@7
$LN55@usearch_se@7:
; Line 3975
	mov	BYTE PTR _found$[ebp], 0
$LN28@usearch_se@7:
; Line 3977
	jmp	$LN27@usearch_se@7
$LN29@usearch_se@7:
; Line 3978
	jmp	SHORT $LN26@usearch_se@7
$LN25@usearch_se@7:
	mov	eax, DWORD PTR _targetIxOffset$73624[ebp]
	add	eax, 1
	mov	DWORD PTR _targetIxOffset$73624[ebp], eax
$LN26@usearch_se@7:
; Line 3979
	mov	eax, DWORD PTR _targetIx$[ebp]
	add	eax, DWORD PTR _targetIxOffset$73624[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::get
	mov	DWORD PTR _nextCEI$73643[ebp], eax
; Line 3980
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _maxLimit$[ebp], ecx
; Line 3982
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	DWORD PTR tv380[ebp], eax
	mov	ecx, DWORD PTR tv380[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN23@usearch_se@7
	mov	edx, DWORD PTR tv380[ebp]
	cmp	DWORD PTR [edx+4], 2147483647		; 7fffffffH
	jne	SHORT $LN23@usearch_se@7
; Line 3983
	jmp	$LN27@usearch_se@7
$LN23@usearch_se@7:
; Line 3988
	mov	ecx, DWORD PTR _nextCEI$73643[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	and	eax, -65536				; ffff0000H
	and	edx, 0
	mov	DWORD PTR tv397[ebp], eax
	mov	DWORD PTR tv397[ebp+4], edx
	mov	edx, DWORD PTR tv397[ebp]
	or	edx, DWORD PTR tv397[ebp+4]
	jne	SHORT $LN22@usearch_se@7
; Line 3989
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _patCE$73625[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _patCE$73625[ebp]
	push	ecx
	mov	edx, DWORD PTR _nextCEI$73643[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	call	?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z ; compareCE64s
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ceMatch$73656[ebp], eax
; Line 3990
	cmp	DWORD PTR _ceMatch$73656[ebp], 0
	je	SHORT $LN20@usearch_se@7
	cmp	DWORD PTR _ceMatch$73656[ebp], 2
	jne	SHORT $LN21@usearch_se@7
$LN20@usearch_se@7:
; Line 3991
	mov	BYTE PTR _found$[ebp], 0
; Line 3992
	jmp	SHORT $LN27@usearch_se@7
$LN21@usearch_se@7:
; Line 3993
	jmp	SHORT $LN19@usearch_se@7
$LN22@usearch_se@7:
; Line 3996
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	ecx, DWORD PTR _nextCEI$73643[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN18@usearch_se@7
; Line 3997
	mov	BYTE PTR _found$[ebp], 0
; Line 3998
	jmp	SHORT $LN27@usearch_se@7
; Line 4000
	jmp	SHORT $LN19@usearch_se@7
$LN18@usearch_se@7:
; Line 4001
	jmp	SHORT $LN27@usearch_se@7
$LN19@usearch_se@7:
; Line 4003
	jmp	$LN25@usearch_se@7
$LN27@usearch_se@7:
; Line 4013
	mov	eax, DWORD PTR _mStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?isBreakBoundary@@YACPAUUStringSearch@@H@Z ; isBreakBoundary
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN16@usearch_se@7
; Line 4014
	mov	BYTE PTR _found$[ebp], 0
$LN16@usearch_se@7:
; Line 4022
	mov	eax, DWORD PTR _firstCEI$73626[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _secondIx$73663[ebp], ecx
; Line 4023
	mov	eax, DWORD PTR _mStart$[ebp]
	cmp	eax, DWORD PTR _secondIx$73663[ebp]
	jne	SHORT $LN15@usearch_se@7
; Line 4024
	mov	BYTE PTR _found$[ebp], 0
$LN15@usearch_se@7:
; Line 4038
	mov	BYTE PTR _allowMidclusterMatch$73665[ebp], 0
; Line 4039
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx], 0
	je	$LN14@usearch_se@7
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _maxLimit$[ebp]
	jle	$LN14@usearch_se@7
; Line 4045
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+16], 0
	jne	$LN51@usearch_se@7
	cmp	DWORD PTR _nextCEI$73643[ebp], 0
	je	$LN51@usearch_se@7
	mov	edx, DWORD PTR _nextCEI$73643[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [edx+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	and	eax, -65536				; ffff0000H
	and	edx, 0
	mov	DWORD PTR tv443[ebp], eax
	mov	DWORD PTR tv443[ebp+4], edx
	mov	eax, DWORD PTR tv443[ebp]
	or	eax, DWORD PTR tv443[ebp+4]
	je	$LN51@usearch_se@7
	mov	ecx, DWORD PTR _lastCEI$73642[ebp]
	mov	edx, DWORD PTR _maxLimit$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jl	$LN51@usearch_se@7
	mov	eax, DWORD PTR _nextCEI$73643[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _maxLimit$[ebp]
	jle	$LN51@usearch_se@7
	mov	edx, DWORD PTR _maxLimit$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z ; `anonymous namespace'::codePointAt
	add	esp, 8
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4140]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4140]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN52@usearch_se@7
	mov	edx, DWORD PTR _maxLimit$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z ; `anonymous namespace'::codePointBefore
	add	esp, 8
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4140]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4140]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN51@usearch_se@7
$LN52@usearch_se@7:
	mov	BYTE PTR tv249[ebp], 1
	jmp	SHORT $LN53@usearch_se@7
$LN51@usearch_se@7:
	mov	BYTE PTR tv249[ebp], 0
$LN53@usearch_se@7:
	mov	dl, BYTE PTR tv249[ebp]
	mov	BYTE PTR _allowMidclusterMatch$73665[ebp], dl
$LN14@usearch_se@7:
; Line 4057
	mov	eax, DWORD PTR _maxLimit$[ebp]
	mov	DWORD PTR _mLimit$[ebp], eax
; Line 4058
	mov	eax, DWORD PTR _minLimit$[ebp]
	cmp	eax, DWORD PTR _maxLimit$[ebp]
	jge	$LN13@usearch_se@7
; Line 4065
	mov	eax, DWORD PTR _lastCEI$73642[ebp]
	mov	ecx, DWORD PTR _minLimit$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN12@usearch_se@7
	mov	eax, DWORD PTR _minLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?isBreakBoundary@@YACPAUUStringSearch@@H@Z ; isBreakBoundary
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@usearch_se@7
; Line 4066
	mov	eax, DWORD PTR _minLimit$[ebp]
	mov	DWORD PTR _mLimit$[ebp], eax
; Line 4067
	jmp	SHORT $LN13@usearch_se@7
$LN12@usearch_se@7:
; Line 4068
	mov	eax, DWORD PTR _minLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z ; nextBoundaryAfter
	add	esp, 8
	mov	DWORD PTR _nba$73670[ebp], eax
; Line 4072
	mov	eax, DWORD PTR _lastCEI$73642[ebp]
	mov	ecx, DWORD PTR _nba$73670[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jl	SHORT $LN13@usearch_se@7
	movsx	eax, BYTE PTR _allowMidclusterMatch$73665[ebp]
	test	eax, eax
	je	SHORT $LN9@usearch_se@7
	mov	eax, DWORD PTR _nba$73670[ebp]
	cmp	eax, DWORD PTR _maxLimit$[ebp]
	jge	SHORT $LN13@usearch_se@7
$LN9@usearch_se@7:
; Line 4073
	mov	eax, DWORD PTR _nba$73670[ebp]
	mov	DWORD PTR _mLimit$[ebp], eax
$LN13@usearch_se@7:
; Line 4084
	movsx	eax, BYTE PTR _allowMidclusterMatch$73665[ebp]
	test	eax, eax
	jne	SHORT $LN8@usearch_se@7
; Line 4087
	mov	eax, DWORD PTR _mLimit$[ebp]
	cmp	eax, DWORD PTR _maxLimit$[ebp]
	jle	SHORT $LN7@usearch_se@7
; Line 4088
	mov	BYTE PTR _found$[ebp], 0
$LN7@usearch_se@7:
; Line 4091
	mov	eax, DWORD PTR _mLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?isBreakBoundary@@YACPAUUStringSearch@@H@Z ; isBreakBoundary
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN8@usearch_se@7
; Line 4092
	mov	BYTE PTR _found$[ebp], 0
$LN8@usearch_se@7:
; Line 4096
	mov	eax, DWORD PTR _mLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	push	edx
	call	?checkIdentical@@YACPBUUStringSearch@@HH@Z ; checkIdentical
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@usearch_se@7
; Line 4097
	mov	BYTE PTR _found$[ebp], 0
$LN5@usearch_se@7:
; Line 4100
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	SHORT $LN4@usearch_se@7
; Line 4101
	jmp	SHORT $LN42@usearch_se@7
$LN4@usearch_se@7:
; Line 4103
	jmp	$LN43@usearch_se@7
$LN42@usearch_se@7:
; Line 4118
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN3@usearch_se@7
; Line 4119
	mov	DWORD PTR _mLimit$[ebp], -1
; Line 4120
	mov	DWORD PTR _mStart$[ebp], -1
$LN3@usearch_se@7:
; Line 4123
	cmp	DWORD PTR _matchStart$[ebp], 0
	je	SHORT $LN2@usearch_se@7
; Line 4124
	mov	eax, DWORD PTR _matchStart$[ebp]
	mov	ecx, DWORD PTR _mStart$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@usearch_se@7:
; Line 4127
	cmp	DWORD PTR _matchLimit$[ebp], 0
	je	SHORT $LN1@usearch_se@7
; Line 4128
	mov	eax, DWORD PTR _matchLimit$[ebp]
	mov	ecx, DWORD PTR _mLimit$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@usearch_se@7:
; Line 4131
	mov	al, BYTE PTR _found$[ebp]
	mov	BYTE PTR $T80732[ebp], al
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::CEIBuffer::~CEIBuffer
	mov	al, BYTE PTR $T80732[ebp]
$LN49@usearch_se@7:
; Line 4132
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN58@usearch_se@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2008				; 000007d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN58@usearch_se@7:
	DD	1
	DD	$LN57@usearch_se@7
$LN57@usearch_se@7:
	DD	-1568					; fffff9e0H
	DD	1560					; 00000618H
	DD	$LN56@usearch_se@7
$LN56@usearch_se@7:
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	0
_usearch_search_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z$0
__ehfuncinfo$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T80742 = -634						; size = 2
$T80743 = -622						; size = 2
_temp$73056 = -420					; size = 4
_iter$ = -408						; size = 288
_pce$ = -112						; size = 8
_result$ = -96						; size = 2
_offset$ = -84						; size = 2
_coleiter$ = -72					; size = 4
_patternlength$ = -60					; size = 4
_pcetable$ = -48					; size = 4
_pcetablesize$ = -36					; size = 4
_pattern$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z PROC ; initializePatternPCETable, COMDAT
; Line 364
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 628				; 00000274H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-640]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 365
	mov	eax, DWORD PTR _strsrch$[ebp]
	add	eax, 8
	mov	DWORD PTR _pattern$[ebp], eax
; Line 366
	mov	DWORD PTR _pcetablesize$[ebp], 256	; 00000100H
; Line 367
	mov	eax, DWORD PTR _pattern$[ebp]
	add	eax, 1048				; 00000418H
	mov	DWORD PTR _pcetable$[ebp], eax
; Line 368
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _patternlength$[ebp], ecx
; Line 369
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4152]
	mov	DWORD PTR _coleiter$[ebp], ecx
; Line 371
	cmp	DWORD PTR _coleiter$[ebp], 0
	jne	SHORT $LN8@initialize@5
; Line 373
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternlength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4136]
	push	edx
	call	_ucol_openElements_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _coleiter$[ebp], eax
; Line 377
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _coleiter$[ebp]
	mov	DWORD PTR [eax+4152], ecx
; Line 378
	jmp	SHORT $LN7@initialize@5
$LN8@initialize@5:
; Line 379
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _coleiter$[ebp]
	push	edx
	call	_ucol_setText_56
	add	esp, 16					; 00000010H
$LN7@initialize@5:
; Line 381
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@initialize@5
; Line 382
	xor	eax, eax
	jmp	$LN9@initialize@5
$LN6@initialize@5:
; Line 385
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+1044]
	cmp	ecx, DWORD PTR _pcetable$[ebp]
	je	SHORT $LN5@initialize@5
	mov	eax, DWORD PTR _pattern$[ebp]
	cmp	DWORD PTR [eax+1044], 0
	je	SHORT $LN5@initialize@5
; Line 386
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR [eax+1044]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN5@initialize@5:
; Line 389
	xor	eax, eax
	mov	WORD PTR _offset$[ebp], ax
; Line 390
	xor	eax, eax
	mov	WORD PTR _result$[ebp], ax
; Line 393
	mov	eax, DWORD PTR _coleiter$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0UCollationPCE@icu_56@@QAE@PAUUCollationElements@@@Z ; icu_56::UCollationPCE::UCollationPCE
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN4@initialize@5:
; Line 399
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _iter$[ebp]
	call	?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z ; icu_56::UCollationPCE::nextProcessed
	mov	DWORD PTR _pce$[ebp], eax
	mov	DWORD PTR _pce$[ebp+4], edx
	cmp	DWORD PTR _pce$[ebp], -1
	jne	SHORT $LN12@initialize@5
	cmp	DWORD PTR _pce$[ebp+4], 2147483647	; 7fffffffH
	je	$LN3@initialize@5
$LN12@initialize@5:
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN3@initialize@5
; Line 403
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coleiter$[ebp]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	edx, DWORD PTR _patternlength$[ebp]
	sub	edx, eax
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pce$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pce$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pcetablesize$[ebp]
	push	edx
	movzx	eax, WORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pcetable$[ebp]
	push	ecx
	call	?addTouint64_tArray@@YAPA_JPA_JIPAI_KIPAW4UErrorCode@@@Z ; addTouint64_tArray
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _temp$73056[ebp], eax
; Line 405
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initialize@5
; Line 406
	xor	eax, eax
	mov	WORD PTR $T80742[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1UCollationPCE@icu_56@@QAE@XZ		; icu_56::UCollationPCE::~UCollationPCE
	mov	ax, WORD PTR $T80742[ebp]
	jmp	$LN9@initialize@5
$LN2@initialize@5:
; Line 409
	movzx	eax, WORD PTR _offset$[ebp]
	add	eax, 1
	mov	WORD PTR _offset$[ebp], ax
; Line 411
	mov	eax, DWORD PTR _pcetable$[ebp]
	cmp	eax, DWORD PTR _temp$73056[ebp]
	je	SHORT $LN1@initialize@5
	mov	eax, DWORD PTR _pattern$[ebp]
	add	eax, 1048				; 00000418H
	cmp	DWORD PTR _pcetable$[ebp], eax
	je	SHORT $LN1@initialize@5
; Line 412
	mov	eax, DWORD PTR _pcetable$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@initialize@5:
; Line 415
	mov	eax, DWORD PTR _temp$73056[ebp]
	mov	DWORD PTR _pcetable$[ebp], eax
; Line 417
	jmp	$LN4@initialize@5
$LN3@initialize@5:
; Line 419
	movzx	eax, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _pcetable$[ebp]
	mov	DWORD PTR [ecx+eax*8], 0
	mov	DWORD PTR [ecx+eax*8+4], 0
; Line 420
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR _pcetable$[ebp]
	mov	DWORD PTR [eax+1044], ecx
; Line 421
	movzx	eax, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [ecx+1040], eax
; Line 423
	mov	ax, WORD PTR _result$[ebp]
	mov	WORD PTR $T80743[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1UCollationPCE@icu_56@@QAE@XZ		; icu_56::UCollationPCE::~UCollationPCE
	mov	ax, WORD PTR $T80743[ebp]
$LN9@initialize@5:
; Line 424
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@initialize@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 640				; 00000280H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@initialize@5:
	DD	2
	DD	$LN16@initialize@5
$LN16@initialize@5:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN13@initialize@5
	DD	-408					; fffffe68H
	DD	288					; 00000120H
	DD	$LN14@initialize@5
$LN14@initialize@5:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN13@initialize@5:
	DB	112					; 00000070H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1UCollationPCE@icu_56@@QAE@XZ		; icu_56::UCollationPCE::~UCollationPCE
__ehhandler$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-644]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ENDP ; initializePatternPCETable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addTouint64_tArray@@YAPA_JPA_JIPAI_KIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$73003 = -20					; size = 4
_newlength$ = -8					; size = 4
_destination$ = 8					; size = 4
_offset$ = 12						; size = 4
_destinationlength$ = 16				; size = 4
_value$ = 20						; size = 8
_increments$ = 28					; size = 4
_status$ = 32						; size = 4
?addTouint64_tArray@@YAPA_JPA_JIPAI_KIPAW4UErrorCode@@@Z PROC ; addTouint64_tArray, COMDAT
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 257
	mov	eax, DWORD PTR _destinationlength$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _newlength$[ebp], ecx
; Line 258
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _newlength$[ebp]
	jne	SHORT $LN2@addTouint6
; Line 259
	mov	eax, DWORD PTR _newlength$[ebp]
	add	eax, DWORD PTR _increments$[ebp]
	mov	DWORD PTR _newlength$[ebp], eax
; Line 261
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newlength$[ebp]
	shl	ecx, 3
	push	ecx
	call	?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z ; allocateMemory
	add	esp, 8
	mov	DWORD PTR _temp$73003[ebp], eax
; Line 263
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@addTouint6
; Line 264
	xor	eax, eax
	jmp	SHORT $LN3@addTouint6
$LN1@addTouint6:
; Line 267
	push	1
	mov	eax, DWORD PTR _destination$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _offset$[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _destination$[ebp]
	push	edx
	mov	eax, DWORD PTR _temp$73003[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 268
	mov	eax, DWORD PTR _destinationlength$[ebp]
	mov	ecx, DWORD PTR _newlength$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 269
	mov	eax, DWORD PTR _temp$73003[ebp]
	mov	DWORD PTR _destination$[ebp], eax
$LN2@addTouint6:
; Line 272
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _destination$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*8], edx
	mov	edx, DWORD PTR _value$[ebp+4]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 274
	mov	eax, DWORD PTR _destination$[ebp]
$LN3@addTouint6:
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?addTouint64_tArray@@YAPA_JPA_JIPAI_KIPAW4UErrorCode@@@Z ENDP ; addTouint64_tArray
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?checkIdentical@@YACPBUUStringSearch@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$3
__ehfuncinfo$?checkIdentical@@YACPBUUStringSearch@@HH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?checkIdentical@@YACPBUUStringSearch@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?checkIdentical@@YACPBUUStringSearch@@HH@Z
_TEXT	SEGMENT
tv161 = -528						; size = 4
tv159 = -528						; size = 4
tv169 = -524						; size = 4
tv166 = -524						; size = 4
tv155 = -521						; size = 1
$T73127 = -516						; size = 64
$T73128 = -444						; size = 64
$T80761 = -369						; size = 1
_p2$ = -168						; size = 64
_t2$ = -96						; size = 64
_status$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_strsrch$ = 8						; size = 4
_start$ = 12						; size = 4
_end$ = 16						; size = 4
?checkIdentical@@YACPBUUStringSearch@@HH@Z PROC		; checkIdentical, COMDAT
; Line 1075
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?checkIdentical@@YACPBUUStringSearch@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-528]
	mov	ecx, 129				; 00000081H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1076
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+4160], 15		; 0000000fH
	je	SHORT $LN1@checkIdent
; Line 1077
	mov	al, 1
	jmp	$LN2@checkIdent
$LN1@checkIdent:
; Line 1082
	mov	DWORD PTR _status$[ebp], 0
; Line 1083
	mov	esi, esp
	lea	ecx, DWORD PTR _t2$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _p2$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1085
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _end$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	mov	edi, esp
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _start$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	push	0
	lea	ecx, DWORD PTR $T73127[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv166[ebp], eax
	mov	edx, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv159[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv159[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+4140]
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4140]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73127[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1087
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edi, esp
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	0
	lea	ecx, DWORD PTR $T73128[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv169[ebp], eax
	mov	eax, DWORD PTR tv169[ebp]
	mov	DWORD PTR tv161[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv161[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4140]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4140]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73128[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1089
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@checkIdent
	mov	esi, esp
	lea	edx, DWORD PTR _p2$[ebp]
	push	edx
	lea	ecx, DWORD PTR _t2$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@checkIdent
	mov	BYTE PTR tv155[ebp], 1
	jmp	SHORT $LN5@checkIdent
$LN4@checkIdent:
	mov	BYTE PTR tv155[ebp], 0
$LN5@checkIdent:
	mov	cl, BYTE PTR tv155[ebp]
	mov	BYTE PTR $T80761[ebp], cl
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _p2$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _t2$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T80761[ebp]
$LN2@checkIdent:
; Line 1090
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@checkIdent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 528				; 00000210H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@checkIdent:
	DD	3
	DD	$LN14@checkIdent
$LN14@checkIdent:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@checkIdent
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN11@checkIdent
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN12@checkIdent
$LN12@checkIdent:
	DB	112					; 00000070H
	DB	50					; 00000032H
	DB	0
$LN11@checkIdent:
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN10@checkIdent:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _t2$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _p2$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73127[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73128[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?checkIdentical@@YACPBUUStringSearch@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-532]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?checkIdentical@@YACPBUUStringSearch@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?checkIdentical@@YACPBUUStringSearch@@HH@Z ENDP		; checkIdentical
EXTRN	_ubrk_following_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z
_TEXT	SEGMENT
_breakiterator$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_startIndex$ = 12					; size = 4
?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z PROC	; nextBoundaryAfter, COMDAT
; Line 3621
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3660
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _breakiterator$[ebp], edx
; Line 3662
	cmp	DWORD PTR _breakiterator$[ebp], 0
	jne	SHORT $LN2@nextBounda
; Line 3663
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _breakiterator$[ebp], edx
$LN2@nextBounda:
; Line 3666
	cmp	DWORD PTR _breakiterator$[ebp], 0
	je	SHORT $LN1@nextBounda
; Line 3667
	mov	eax, DWORD PTR _startIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _breakiterator$[ebp]
	push	ecx
	call	_ubrk_following_56
	add	esp, 8
	jmp	SHORT $LN3@nextBounda
$LN1@nextBounda:
; Line 3670
	mov	eax, DWORD PTR _startIndex$[ebp]
$LN3@nextBounda:
; Line 3676
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z ENDP	; nextBoundaryAfter
_TEXT	ENDS
EXTRN	_ubrk_isBoundary_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBreakBoundary@@YACPAUUStringSearch@@H@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_breakiterator$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_index$ = 12						; size = 4
?isBreakBoundary@@YACPAUUStringSearch@@H@Z PROC		; isBreakBoundary, COMDAT
; Line 3683
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3711
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _breakiterator$[ebp], edx
; Line 3713
	cmp	DWORD PTR _breakiterator$[ebp], 0
	jne	SHORT $LN1@isBreakBou
; Line 3714
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _breakiterator$[ebp], edx
$LN1@isBreakBou:
; Line 3717
	cmp	DWORD PTR _breakiterator$[ebp], 0
	je	SHORT $LN4@isBreakBou
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _breakiterator$[ebp]
	push	ecx
	call	_ubrk_isBoundary_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@isBreakBou
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN5@isBreakBou
$LN4@isBreakBou:
	mov	BYTE PTR tv73[ebp], 0
$LN5@isBreakBou:
	mov	al, BYTE PTR tv73[ebp]
; Line 3722
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBreakBoundary@@YACPAUUStringSearch@@H@Z ENDP		; isBreakBoundary
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z
_TEXT	SEGMENT
tv133 = -316						; size = 4
tv91 = -316						; size = 4
_patLev3$ = -116					; size = 4
_targLev3$ = -104					; size = 4
_patLev2$ = -92						; size = 4
_targLev2$ = -80					; size = 4
_patLev1$ = -68						; size = 4
_targLev1$ = -56					; size = 4
_mask$ = -44						; size = 8
_patCEshifted$ = -28					; size = 8
_targCEshifted$ = -12					; size = 8
_targCE$ = 8						; size = 8
_patCE$ = 16						; size = 8
_compareType$ = 24					; size = 2
?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z PROC	; compareCE64s, COMDAT
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3759
	mov	eax, DWORD PTR _targCE$[ebp]
	cmp	eax, DWORD PTR _patCE$[ebp]
	jne	SHORT $LN9@compareCE6
	mov	ecx, DWORD PTR _targCE$[ebp+4]
	cmp	ecx, DWORD PTR _patCE$[ebp+4]
	jne	SHORT $LN9@compareCE6
; Line 3760
	or	eax, -1
	jmp	$LN10@compareCE6
$LN9@compareCE6:
; Line 3762
	movsx	eax, WORD PTR _compareType$[ebp]
	test	eax, eax
	jne	SHORT $LN8@compareCE6
; Line 3763
	xor	eax, eax
	jmp	$LN10@compareCE6
$LN8@compareCE6:
; Line 3766
	mov	eax, DWORD PTR _targCE$[ebp]
	mov	edx, DWORD PTR _targCE$[ebp+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	mov	DWORD PTR _targCEshifted$[ebp], eax
	mov	DWORD PTR _targCEshifted$[ebp+4], edx
; Line 3767
	mov	eax, DWORD PTR _patCE$[ebp]
	mov	edx, DWORD PTR _patCE$[ebp+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	mov	DWORD PTR _patCEshifted$[ebp], eax
	mov	DWORD PTR _patCEshifted$[ebp+4], edx
; Line 3770
	mov	DWORD PTR _mask$[ebp], -65536		; ffff0000H
	mov	DWORD PTR _mask$[ebp+4], 0
; Line 3771
	mov	eax, DWORD PTR _targCEshifted$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	ecx, DWORD PTR _targCEshifted$[ebp+4]
	and	ecx, DWORD PTR _mask$[ebp+4]
	mov	DWORD PTR _targLev1$[ebp], eax
; Line 3772
	mov	eax, DWORD PTR _patCEshifted$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	ecx, DWORD PTR _patCEshifted$[ebp+4]
	and	ecx, DWORD PTR _mask$[ebp+4]
	mov	DWORD PTR _patLev1$[ebp], eax
; Line 3773
	mov	eax, DWORD PTR _targLev1$[ebp]
	cmp	eax, DWORD PTR _patLev1$[ebp]
	je	SHORT $LN7@compareCE6
; Line 3774
	cmp	DWORD PTR _targLev1$[ebp], 0
	jne	SHORT $LN6@compareCE6
; Line 3775
	mov	eax, 1
	jmp	$LN10@compareCE6
$LN6@compareCE6:
; Line 3777
	cmp	DWORD PTR _patLev1$[ebp], 0
	jne	SHORT $LN5@compareCE6
	movsx	eax, WORD PTR _compareType$[ebp]
	cmp	eax, 4
	jne	SHORT $LN5@compareCE6
; Line 3778
	mov	eax, 2
	jmp	$LN10@compareCE6
$LN5@compareCE6:
; Line 3780
	xor	eax, eax
	jmp	$LN10@compareCE6
$LN7@compareCE6:
; Line 3783
	mov	DWORD PTR _mask$[ebp], 65535		; 0000ffffH
	mov	DWORD PTR _mask$[ebp+4], 0
; Line 3784
	mov	eax, DWORD PTR _targCEshifted$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	ecx, DWORD PTR _targCEshifted$[ebp+4]
	and	ecx, DWORD PTR _mask$[ebp+4]
	mov	DWORD PTR _targLev2$[ebp], eax
; Line 3785
	mov	eax, DWORD PTR _patCEshifted$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	ecx, DWORD PTR _patCEshifted$[ebp+4]
	and	ecx, DWORD PTR _mask$[ebp+4]
	mov	DWORD PTR _patLev2$[ebp], eax
; Line 3786
	mov	eax, DWORD PTR _targLev2$[ebp]
	cmp	eax, DWORD PTR _patLev2$[ebp]
	je	SHORT $LN4@compareCE6
; Line 3787
	cmp	DWORD PTR _targLev2$[ebp], 0
	jne	SHORT $LN3@compareCE6
; Line 3788
	mov	eax, 1
	jmp	$LN10@compareCE6
$LN3@compareCE6:
; Line 3790
	cmp	DWORD PTR _patLev2$[ebp], 0
	jne	SHORT $LN2@compareCE6
	movsx	eax, WORD PTR _compareType$[ebp]
	cmp	eax, 4
	jne	SHORT $LN2@compareCE6
; Line 3791
	mov	eax, 2
	jmp	$LN10@compareCE6
$LN2@compareCE6:
; Line 3794
	cmp	DWORD PTR _patLev2$[ebp], 5
	je	SHORT $LN13@compareCE6
	movsx	eax, WORD PTR _compareType$[ebp]
	cmp	eax, 4
	jne	SHORT $LN12@compareCE6
	cmp	DWORD PTR _targLev2$[ebp], 5
	je	SHORT $LN13@compareCE6
$LN12@compareCE6:
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $LN14@compareCE6
$LN13@compareCE6:
	mov	DWORD PTR tv91[ebp], -1
$LN14@compareCE6:
	mov	eax, DWORD PTR tv91[ebp]
	jmp	SHORT $LN10@compareCE6
$LN4@compareCE6:
; Line 3797
	mov	DWORD PTR _mask$[ebp], -65536		; ffff0000H
	mov	DWORD PTR _mask$[ebp+4], 0
; Line 3798
	mov	eax, DWORD PTR _targCE$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	ecx, DWORD PTR _targCE$[ebp+4]
	and	ecx, DWORD PTR _mask$[ebp+4]
	mov	DWORD PTR _targLev3$[ebp], eax
; Line 3799
	mov	eax, DWORD PTR _patCE$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	ecx, DWORD PTR _patCE$[ebp+4]
	and	ecx, DWORD PTR _mask$[ebp+4]
	mov	DWORD PTR _patLev3$[ebp], eax
; Line 3800
	mov	eax, DWORD PTR _targLev3$[ebp]
	cmp	eax, DWORD PTR _patLev3$[ebp]
	je	SHORT $LN1@compareCE6
; Line 3802
	cmp	DWORD PTR _patLev3$[ebp], 327680	; 00050000H
	je	SHORT $LN16@compareCE6
	movsx	eax, WORD PTR _compareType$[ebp]
	cmp	eax, 4
	jne	SHORT $LN15@compareCE6
	cmp	DWORD PTR _targLev3$[ebp], 327680	; 00050000H
	je	SHORT $LN16@compareCE6
$LN15@compareCE6:
	mov	DWORD PTR tv133[ebp], 0
	jmp	SHORT $LN17@compareCE6
$LN16@compareCE6:
	mov	DWORD PTR tv133[ebp], -1
$LN17@compareCE6:
	mov	eax, DWORD PTR tv133[ebp]
	jmp	SHORT $LN10@compareCE6
$LN1@compareCE6:
; Line 3805
	or	eax, -1
$LN10@compareCE6:
; Line 3806
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z ENDP	; compareCE64s
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_usearch_searchBackwards_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usearch_searchBackwards_56
_TEXT	SEGMENT
tv248 = -2029						; size = 1
tv412 = -2028						; size = 8
tv388 = -2024						; size = 4
tv365 = -2024						; size = 4
tv271 = -2024						; size = 4
$T80801 = -2013						; size = 1
_nba$73750 = -1812					; size = 4
_nba$73743 = -1800					; size = 4
_allowMidclusterMatch$73740 = -1785			; size = 1
_nextCEI$73736 = -1776					; size = 4
_firstCEI$73732 = -1764					; size = 4
_ceMatch$73721 = -1752					; size = 4
_patCE$73720 = -1740					; size = 8
_targetIxOffset$73716 = -1724				; size = 4
_lastCEI$73714 = -1712					; size = 4
_maxLimit$ = -1700					; size = 4
_minLimit$ = -1688					; size = 4
_mLimit$ = -1676					; size = 4
_mStart$ = -1664					; size = 4
_limitIx$ = -1652					; size = 4
_found$ = -1637						; size = 1
_patIx$ = -1628						; size = 4
_targetCEI$ = -1616					; size = 4
_next$73697 = -1604					; size = 4
_bi$73696 = -1592					; size = 4
_targetIx$ = -1580					; size = 4
_ceb$ = -1568						; size = 1560
__$ArrayPad$ = -4					; size = 4
_strsrch$ = 8						; size = 4
_startIdx$ = 12						; size = 4
_matchStart$ = 16					; size = 4
_matchLimit$ = 20					; size = 4
_status$ = 24						; size = 4
_usearch_searchBackwards_56 PROC			; COMDAT
; Line 4139
	push	ebp
	mov	ebp, esp
	sub	esp, 2032				; 000007f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2032]
	mov	ecx, 508				; 000001fcH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 4140
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN42@usearch_se@8
; Line 4141
	xor	al, al
	jmp	$LN43@usearch_se@8
$LN42@usearch_se@8:
; Line 4162
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN40@usearch_se@8
	cmp	DWORD PTR _startIdx$[ebp], 0
	jl	SHORT $LN40@usearch_se@8
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _startIdx$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jg	SHORT $LN40@usearch_se@8
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN41@usearch_se@8
$LN40@usearch_se@8:
; Line 4163
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 4164
	xor	al, al
	jmp	$LN43@usearch_se@8
$LN41@usearch_se@8:
; Line 4167
	mov	eax, DWORD PTR _strsrch$[ebp]
	cmp	DWORD PTR [eax+1052], 0
	jne	SHORT $LN39@usearch_se@8
; Line 4168
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ; initializePatternPCETable
	add	esp, 8
$LN39@usearch_se@8:
; Line 4171
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z ; icu_56::`anonymous namespace'::CEIBuffer::CEIBuffer
; Line 4172
	mov	DWORD PTR _targetIx$[ebp], 0
; Line 4183
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _startIdx$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN38@usearch_se@8
; Line 4184
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _bi$73696[ebp], edx
; Line 4185
	mov	eax, DWORD PTR _startIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bi$73696[ebp]
	push	ecx
	call	_ubrk_following_56
	add	esp, 8
	mov	DWORD PTR _next$73697[ebp], eax
; Line 4187
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _next$73697[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4144]
	push	eax
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
; Line 4189
	mov	DWORD PTR _targetIx$[ebp], 0
	jmp	SHORT $LN37@usearch_se@8
$LN36@usearch_se@8:
	mov	eax, DWORD PTR _targetIx$[ebp]
	add	eax, 1
	mov	DWORD PTR _targetIx$[ebp], eax
$LN37@usearch_se@8:
; Line 4190
	mov	eax, DWORD PTR _targetIx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _startIdx$[ebp]
	jge	SHORT $LN34@usearch_se@8
; Line 4191
	jmp	SHORT $LN35@usearch_se@8
$LN34@usearch_se@8:
; Line 4193
	jmp	SHORT $LN36@usearch_se@8
$LN35@usearch_se@8:
	jmp	SHORT $LN33@usearch_se@8
$LN38@usearch_se@8:
; Line 4195
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startIdx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4144]
	push	eax
	call	_ucol_setOffset_56
	add	esp, 12					; 0000000cH
$LN33@usearch_se@8:
; Line 4199
	mov	DWORD PTR _targetCEI$[ebp], 0
; Line 4203
	mov	eax, DWORD PTR _targetIx$[ebp]
	mov	DWORD PTR _limitIx$[ebp], eax
; Line 4204
	mov	DWORD PTR _mStart$[ebp], -1
; Line 4205
	mov	DWORD PTR _mLimit$[ebp], -1
; Line 4217
	mov	eax, DWORD PTR _limitIx$[ebp]
	mov	DWORD PTR _targetIx$[ebp], eax
	jmp	SHORT $LN32@usearch_se@8
$LN31@usearch_se@8:
	mov	eax, DWORD PTR _targetIx$[ebp]
	add	eax, 1
	mov	DWORD PTR _targetIx$[ebp], eax
$LN32@usearch_se@8:
; Line 4219
	mov	BYTE PTR _found$[ebp], 1
; Line 4223
	mov	eax, DWORD PTR _targetIx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
	mov	DWORD PTR _lastCEI$73714[ebp], eax
; Line 4224
	cmp	DWORD PTR _lastCEI$73714[ebp], 0
	jne	SHORT $LN29@usearch_se@8
; Line 4225
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 4226
	mov	BYTE PTR _found$[ebp], 0
; Line 4227
	jmp	$LN30@usearch_se@8
$LN29@usearch_se@8:
; Line 4231
	mov	DWORD PTR _targetIxOffset$73716[ebp], 0
; Line 4232
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1048]
	sub	ecx, 1
	mov	DWORD PTR _patIx$[ebp], ecx
	jmp	SHORT $LN28@usearch_se@8
$LN27@usearch_se@8:
	mov	eax, DWORD PTR _patIx$[ebp]
	sub	eax, 1
	mov	DWORD PTR _patIx$[ebp], eax
$LN28@usearch_se@8:
	cmp	DWORD PTR _patIx$[ebp], 0
	jl	$LN26@usearch_se@8
; Line 4233
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1052]
	mov	edx, DWORD PTR _patIx$[ebp]
	mov	eax, DWORD PTR [ecx+edx*8]
	mov	DWORD PTR _patCE$73720[ebp], eax
	mov	ecx, DWORD PTR [ecx+edx*8+4]
	mov	DWORD PTR _patCE$73720[ebp+4], ecx
; Line 4235
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1048]
	mov	edx, DWORD PTR _targetIx$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	sub	eax, DWORD PTR _patIx$[ebp]
	add	eax, DWORD PTR _targetIxOffset$73716[ebp]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
	mov	DWORD PTR _targetCEI$[ebp], eax
; Line 4239
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _patCE$73720[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _patCE$73720[ebp]
	push	ecx
	mov	edx, DWORD PTR _targetCEI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	call	?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z ; compareCE64s
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ceMatch$73721[ebp], eax
; Line 4240
	cmp	DWORD PTR _ceMatch$73721[ebp], 0
	jne	SHORT $LN25@usearch_se@8
; Line 4241
	mov	BYTE PTR _found$[ebp], 0
; Line 4242
	jmp	SHORT $LN26@usearch_se@8
	jmp	SHORT $LN24@usearch_se@8
$LN25@usearch_se@8:
; Line 4243
	cmp	DWORD PTR _ceMatch$73721[ebp], 0
	jle	SHORT $LN24@usearch_se@8
; Line 4244
	cmp	DWORD PTR _ceMatch$73721[ebp], 1
	jne	SHORT $LN22@usearch_se@8
; Line 4246
	mov	eax, DWORD PTR _patIx$[ebp]
	add	eax, 1
	mov	DWORD PTR _patIx$[ebp], eax
; Line 4247
	mov	eax, DWORD PTR _targetIxOffset$73716[ebp]
	add	eax, 1
	mov	DWORD PTR _targetIxOffset$73716[ebp], eax
; Line 4248
	jmp	SHORT $LN24@usearch_se@8
$LN22@usearch_se@8:
; Line 4250
	mov	eax, DWORD PTR _targetIxOffset$73716[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetIxOffset$73716[ebp], eax
$LN24@usearch_se@8:
; Line 4253
	jmp	$LN27@usearch_se@8
$LN26@usearch_se@8:
; Line 4255
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN20@usearch_se@8
	cmp	DWORD PTR _targetCEI$[ebp], 0
	je	SHORT $LN19@usearch_se@8
	mov	eax, DWORD PTR _targetCEI$[ebp]
	mov	DWORD PTR tv365[ebp], eax
	mov	ecx, DWORD PTR tv365[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN19@usearch_se@8
	mov	edx, DWORD PTR tv365[ebp]
	cmp	DWORD PTR [edx+4], 2147483647		; 7fffffffH
	je	SHORT $LN20@usearch_se@8
$LN19@usearch_se@8:
; Line 4257
	jmp	$LN31@usearch_se@8
$LN20@usearch_se@8:
; Line 4260
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN18@usearch_se@8
; Line 4262
	jmp	$LN30@usearch_se@8
$LN18@usearch_se@8:
; Line 4271
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR _targetIx$[ebp]
	add	ecx, DWORD PTR [eax+1048]
	mov	edx, DWORD PTR _targetIxOffset$73716[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
	mov	DWORD PTR _firstCEI$73732[ebp], eax
; Line 4272
	mov	eax, DWORD PTR _firstCEI$73732[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _mStart$[ebp], ecx
; Line 4280
	mov	eax, DWORD PTR _mStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?isBreakBoundary@@YACPAUUStringSearch@@H@Z ; isBreakBoundary
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN17@usearch_se@8
; Line 4281
	mov	BYTE PTR _found$[ebp], 0
$LN17@usearch_se@8:
; Line 4286
	mov	eax, DWORD PTR _firstCEI$73732[ebp]
	mov	ecx, DWORD PTR _mStart$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN16@usearch_se@8
; Line 4287
	mov	BYTE PTR _found$[ebp], 0
$LN16@usearch_se@8:
; Line 4291
	mov	eax, DWORD PTR _lastCEI$73714[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _minLimit$[ebp], ecx
; Line 4293
	cmp	DWORD PTR _targetIx$[ebp], 0
	jle	$LN15@usearch_se@8
; Line 4302
	mov	eax, DWORD PTR _targetIx$[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z ; icu_56::`anonymous namespace'::CEIBuffer::getPrevious
	mov	DWORD PTR _nextCEI$73736[ebp], eax
; Line 4304
	mov	eax, DWORD PTR _nextCEI$73736[ebp]
	mov	ecx, DWORD PTR _nextCEI$73736[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN14@usearch_se@8
	mov	eax, DWORD PTR _nextCEI$73736[ebp]
	mov	DWORD PTR tv388[ebp], eax
	mov	ecx, DWORD PTR tv388[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN51@usearch_se@8
	mov	edx, DWORD PTR tv388[ebp]
	cmp	DWORD PTR [edx+4], 2147483647		; 7fffffffH
	je	SHORT $LN14@usearch_se@8
$LN51@usearch_se@8:
; Line 4305
	mov	BYTE PTR _found$[ebp], 0
$LN14@usearch_se@8:
; Line 4308
	mov	eax, DWORD PTR _nextCEI$73736[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _maxLimit$[ebp], ecx
	mov	edx, DWORD PTR _maxLimit$[ebp]
	mov	DWORD PTR _mLimit$[ebp], edx
; Line 4321
	mov	BYTE PTR _allowMidclusterMatch$73740[ebp], 0
; Line 4322
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx], 0
	je	$LN13@usearch_se@8
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _maxLimit$[ebp]
	jle	$LN13@usearch_se@8
; Line 4328
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+16], 0
	jne	$LN45@usearch_se@8
	cmp	DWORD PTR _nextCEI$73736[ebp], 0
	je	$LN45@usearch_se@8
	mov	edx, DWORD PTR _nextCEI$73736[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [edx+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	and	eax, -65536				; ffff0000H
	and	edx, 0
	mov	DWORD PTR tv412[ebp], eax
	mov	DWORD PTR tv412[ebp+4], edx
	mov	eax, DWORD PTR tv412[ebp]
	or	eax, DWORD PTR tv412[ebp+4]
	je	$LN45@usearch_se@8
	mov	ecx, DWORD PTR _lastCEI$73714[ebp]
	mov	edx, DWORD PTR _maxLimit$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jl	$LN45@usearch_se@8
	mov	eax, DWORD PTR _nextCEI$73736[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _maxLimit$[ebp]
	jle	$LN45@usearch_se@8
	mov	edx, DWORD PTR _maxLimit$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z ; `anonymous namespace'::codePointAt
	add	esp, 8
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4140]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4140]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN46@usearch_se@8
	mov	edx, DWORD PTR _maxLimit$[ebp]
	push	edx
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z ; `anonymous namespace'::codePointBefore
	add	esp, 8
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx+4140]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4140]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN45@usearch_se@8
$LN46@usearch_se@8:
	mov	BYTE PTR tv248[ebp], 1
	jmp	SHORT $LN47@usearch_se@8
$LN45@usearch_se@8:
	mov	BYTE PTR tv248[ebp], 0
$LN47@usearch_se@8:
	mov	dl, BYTE PTR tv248[ebp]
	mov	BYTE PTR _allowMidclusterMatch$73740[ebp], dl
$LN13@usearch_se@8:
; Line 4340
	mov	eax, DWORD PTR _minLimit$[ebp]
	cmp	eax, DWORD PTR _maxLimit$[ebp]
	jge	SHORT $LN12@usearch_se@8
; Line 4341
	mov	eax, DWORD PTR _minLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z ; nextBoundaryAfter
	add	esp, 8
	mov	DWORD PTR _nba$73743[ebp], eax
; Line 4345
	mov	eax, DWORD PTR _lastCEI$73714[ebp]
	mov	ecx, DWORD PTR _nba$73743[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jl	SHORT $LN12@usearch_se@8
	movsx	eax, BYTE PTR _allowMidclusterMatch$73740[ebp]
	test	eax, eax
	je	SHORT $LN10@usearch_se@8
	mov	eax, DWORD PTR _nba$73743[ebp]
	cmp	eax, DWORD PTR _maxLimit$[ebp]
	jge	SHORT $LN12@usearch_se@8
$LN10@usearch_se@8:
; Line 4346
	mov	eax, DWORD PTR _nba$73743[ebp]
	mov	DWORD PTR _mLimit$[ebp], eax
$LN12@usearch_se@8:
; Line 4350
	movsx	eax, BYTE PTR _allowMidclusterMatch$73740[ebp]
	test	eax, eax
	jne	SHORT $LN9@usearch_se@8
; Line 4353
	mov	eax, DWORD PTR _mLimit$[ebp]
	cmp	eax, DWORD PTR _maxLimit$[ebp]
	jle	SHORT $LN8@usearch_se@8
; Line 4354
	mov	BYTE PTR _found$[ebp], 0
$LN8@usearch_se@8:
; Line 4358
	mov	eax, DWORD PTR _mLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?isBreakBoundary@@YACPAUUStringSearch@@H@Z ; isBreakBoundary
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN9@usearch_se@8
; Line 4359
	mov	BYTE PTR _found$[ebp], 0
$LN9@usearch_se@8:
; Line 4363
	jmp	SHORT $LN6@usearch_se@8
$LN15@usearch_se@8:
; Line 4368
	mov	eax, DWORD PTR _minLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z ; nextBoundaryAfter
	add	esp, 8
	mov	DWORD PTR _nba$73750[ebp], eax
; Line 4369
	cmp	DWORD PTR _nba$73750[ebp], 0
	jle	SHORT $LN48@usearch_se@8
	mov	eax, DWORD PTR _startIdx$[ebp]
	cmp	eax, DWORD PTR _nba$73750[ebp]
	jle	SHORT $LN48@usearch_se@8
	mov	ecx, DWORD PTR _nba$73750[ebp]
	mov	DWORD PTR tv271[ebp], ecx
	jmp	SHORT $LN49@usearch_se@8
$LN48@usearch_se@8:
	mov	edx, DWORD PTR _startIdx$[ebp]
	mov	DWORD PTR tv271[ebp], edx
$LN49@usearch_se@8:
	mov	eax, DWORD PTR tv271[ebp]
	mov	DWORD PTR _maxLimit$[ebp], eax
	mov	ecx, DWORD PTR _maxLimit$[ebp]
	mov	DWORD PTR _mLimit$[ebp], ecx
$LN6@usearch_se@8:
; Line 4379
	mov	eax, DWORD PTR _mLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strsrch$[ebp]
	push	edx
	call	?checkIdentical@@YACPBUUStringSearch@@HH@Z ; checkIdentical
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@usearch_se@8
; Line 4380
	mov	BYTE PTR _found$[ebp], 0
$LN5@usearch_se@8:
; Line 4383
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	SHORT $LN4@usearch_se@8
; Line 4384
	jmp	SHORT $LN30@usearch_se@8
$LN4@usearch_se@8:
; Line 4386
	jmp	$LN31@usearch_se@8
$LN30@usearch_se@8:
; Line 4401
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN3@usearch_se@8
; Line 4402
	mov	DWORD PTR _mLimit$[ebp], -1
; Line 4403
	mov	DWORD PTR _mStart$[ebp], -1
$LN3@usearch_se@8:
; Line 4406
	cmp	DWORD PTR _matchStart$[ebp], 0
	je	SHORT $LN2@usearch_se@8
; Line 4407
	mov	eax, DWORD PTR _matchStart$[ebp]
	mov	ecx, DWORD PTR _mStart$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@usearch_se@8:
; Line 4410
	cmp	DWORD PTR _matchLimit$[ebp], 0
	je	SHORT $LN1@usearch_se@8
; Line 4411
	mov	eax, DWORD PTR _matchLimit$[ebp]
	mov	ecx, DWORD PTR _mLimit$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@usearch_se@8:
; Line 4414
	mov	al, BYTE PTR _found$[ebp]
	mov	BYTE PTR $T80801[ebp], al
	lea	ecx, DWORD PTR _ceb$[ebp]
	call	??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::CEIBuffer::~CEIBuffer
	mov	al, BYTE PTR $T80801[ebp]
$LN43@usearch_se@8:
; Line 4415
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN54@usearch_se@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2032				; 000007f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN54@usearch_se@8:
	DD	1
	DD	$LN53@usearch_se@8
$LN53@usearch_se@8:
	DD	-1568					; fffff9e0H
	DD	1560					; 00000618H
	DD	$LN52@usearch_se@8
$LN52@usearch_se@8:
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	0
_usearch_searchBackwards_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _usearch_handleNextExact_56
_TEXT	SEGMENT
_end$ = -32						; size = 4
_start$ = -20						; size = 4
_textOffset$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_handleNextExact_56 PROC			; COMDAT
; Line 4420
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4421
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@usearch_ha
; Line 4422
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4423
	xor	al, al
	jmp	SHORT $LN4@usearch_ha
$LN3@usearch_ha:
; Line 4518
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _textOffset$[ebp], eax
; Line 4519
	mov	DWORD PTR _start$[ebp], -1
; Line 4520
	mov	DWORD PTR _end$[ebp], -1
; Line 4522
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _textOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_search_56
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_ha
; Line 4523
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 4524
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+24], eax
; Line 4525
	mov	al, 1
	jmp	SHORT $LN4@usearch_ha
; Line 4526
	jmp	SHORT $LN4@usearch_ha
$LN2@usearch_ha:
; Line 4527
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4528
	xor	al, al
$LN4@usearch_ha:
; Line 4531
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@usearch_ha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@usearch_ha:
	DD	2
	DD	$LN8@usearch_ha
$LN8@usearch_ha:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@usearch_ha
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@usearch_ha
$LN7@usearch_ha:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN6@usearch_ha:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_usearch_handleNextExact_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _usearch_handleNextCanonical_56
_TEXT	SEGMENT
_end$ = -32						; size = 4
_start$ = -20						; size = 4
_textOffset$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_handleNextCanonical_56 PROC			; COMDAT
; Line 4534
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4535
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@usearch_ha@2
; Line 4536
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4537
	xor	al, al
	jmp	SHORT $LN4@usearch_ha@2
$LN3@usearch_ha@2:
; Line 4633
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _textOffset$[ebp], eax
; Line 4634
	mov	DWORD PTR _start$[ebp], -1
; Line 4635
	mov	DWORD PTR _end$[ebp], -1
; Line 4637
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _textOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_search_56
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_ha@2
; Line 4638
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 4639
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+24], eax
; Line 4640
	mov	al, 1
	jmp	SHORT $LN4@usearch_ha@2
; Line 4641
	jmp	SHORT $LN4@usearch_ha@2
$LN2@usearch_ha@2:
; Line 4642
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4643
	xor	al, al
$LN4@usearch_ha@2:
; Line 4646
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@usearch_ha@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@usearch_ha@2:
	DD	2
	DD	$LN8@usearch_ha@2
$LN8@usearch_ha@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@usearch_ha@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@usearch_ha@2
$LN7@usearch_ha@2:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN6@usearch_ha@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_usearch_handleNextCanonical_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _usearch_handlePreviousExact_56
_TEXT	SEGMENT
_end$ = -60						; size = 4
_start$ = -48						; size = 4
_pce$73791 = -36					; size = 8
_nPCEs$73787 = -20					; size = 4
_textOffset$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_handlePreviousExact_56 PROC			; COMDAT
; Line 4649
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4650
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@usearch_ha@3
; Line 4651
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4652
	xor	al, al
	jmp	$LN14@usearch_ha@3
$LN13@usearch_ha@3:
; Line 4752
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+8]
	test	edx, edx
	je	$LN12@usearch_ha@3
; Line 4753
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+20], -1
	je	SHORT $LN11@usearch_ha@3
; Line 4754
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [eax+24]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	DWORD PTR _textOffset$[ebp], eax
; Line 4755
	jmp	$LN10@usearch_ha@3
$LN11@usearch_ha@3:
; Line 4757
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ; initializePatternPCETable
	add	esp, 8
; Line 4758
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z ; `anonymous namespace'::initTextProcessedIter
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN9@usearch_ha@3
; Line 4759
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4760
	xor	al, al
	jmp	$LN14@usearch_ha@3
$LN9@usearch_ha@3:
; Line 4762
	mov	DWORD PTR _nPCEs$73787[ebp], 0
	jmp	SHORT $LN8@usearch_ha@3
$LN7@usearch_ha@3:
	mov	eax, DWORD PTR _nPCEs$73787[ebp]
	add	eax, 1
	mov	DWORD PTR _nPCEs$73787[ebp], eax
$LN8@usearch_ha@3:
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1048]
	sub	ecx, 1
	cmp	DWORD PTR _nPCEs$73787[ebp], ecx
	jge	SHORT $LN6@usearch_ha@3
; Line 4763
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4148]
	call	?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z ; icu_56::UCollationPCE::nextProcessed
	mov	DWORD PTR _pce$73791[ebp], eax
	mov	DWORD PTR _pce$73791[ebp+4], edx
; Line 4764
	cmp	DWORD PTR _pce$73791[ebp], -1
	jne	SHORT $LN5@usearch_ha@3
	cmp	DWORD PTR _pce$73791[ebp+4], 2147483647	; 7fffffffH
	jne	SHORT $LN5@usearch_ha@3
; Line 4766
	jmp	SHORT $LN6@usearch_ha@3
$LN5@usearch_ha@3:
; Line 4768
	jmp	SHORT $LN7@usearch_ha@3
$LN6@usearch_ha@3:
; Line 4769
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@usearch_ha@3
; Line 4770
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4771
	xor	al, al
	jmp	$LN14@usearch_ha@3
$LN4@usearch_ha@3:
; Line 4773
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _textOffset$[ebp], eax
$LN10@usearch_ha@3:
; Line 4775
	jmp	SHORT $LN3@usearch_ha@3
$LN12@usearch_ha@3:
; Line 4776
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _textOffset$[ebp], eax
$LN3@usearch_ha@3:
; Line 4779
	mov	DWORD PTR _start$[ebp], -1
; Line 4780
	mov	DWORD PTR _end$[ebp], -1
; Line 4782
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _textOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_searchBackwards_56
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_ha@3
; Line 4783
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 4784
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+24], eax
; Line 4785
	mov	al, 1
	jmp	SHORT $LN14@usearch_ha@3
; Line 4786
	jmp	SHORT $LN14@usearch_ha@3
$LN2@usearch_ha@3:
; Line 4787
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4788
	xor	al, al
$LN14@usearch_ha@3:
; Line 4791
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@usearch_ha@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@usearch_ha@3:
	DD	2
	DD	$LN18@usearch_ha@3
$LN18@usearch_ha@3:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN16@usearch_ha@3
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN17@usearch_ha@3
$LN17@usearch_ha@3:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN16@usearch_ha@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_usearch_handlePreviousExact_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _usearch_handlePreviousCanonical_56
_TEXT	SEGMENT
_end$ = -60						; size = 4
_start$ = -48						; size = 4
_pce$73815 = -36					; size = 8
_nPCEs$73811 = -20					; size = 4
_textOffset$ = -8					; size = 4
_strsrch$ = 8						; size = 4
_status$ = 12						; size = 4
_usearch_handlePreviousCanonical_56 PROC		; COMDAT
; Line 4795
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4796
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@usearch_ha@4
; Line 4797
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4798
	xor	al, al
	jmp	$LN14@usearch_ha@4
$LN13@usearch_ha@4:
; Line 4905
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+8]
	test	edx, edx
	je	$LN12@usearch_ha@4
; Line 4906
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+20], -1
	je	SHORT $LN11@usearch_ha@4
; Line 4907
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _strsrch$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [eax+24]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	DWORD PTR _textOffset$[ebp], eax
; Line 4908
	jmp	$LN10@usearch_ha@4
$LN11@usearch_ha@4:
; Line 4910
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z ; initializePatternPCETable
	add	esp, 8
; Line 4911
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z ; `anonymous namespace'::initTextProcessedIter
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN9@usearch_ha@4
; Line 4912
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4913
	xor	al, al
	jmp	$LN14@usearch_ha@4
$LN9@usearch_ha@4:
; Line 4915
	mov	DWORD PTR _nPCEs$73811[ebp], 0
	jmp	SHORT $LN8@usearch_ha@4
$LN7@usearch_ha@4:
	mov	eax, DWORD PTR _nPCEs$73811[ebp]
	add	eax, 1
	mov	DWORD PTR _nPCEs$73811[ebp], eax
$LN8@usearch_ha@4:
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+1048]
	sub	ecx, 1
	cmp	DWORD PTR _nPCEs$73811[ebp], ecx
	jge	SHORT $LN6@usearch_ha@4
; Line 4916
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [ecx+4148]
	call	?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z ; icu_56::UCollationPCE::nextProcessed
	mov	DWORD PTR _pce$73815[ebp], eax
	mov	DWORD PTR _pce$73815[ebp+4], edx
; Line 4917
	cmp	DWORD PTR _pce$73815[ebp], -1
	jne	SHORT $LN5@usearch_ha@4
	cmp	DWORD PTR _pce$73815[ebp+4], 2147483647	; 7fffffffH
	jne	SHORT $LN5@usearch_ha@4
; Line 4919
	jmp	SHORT $LN6@usearch_ha@4
$LN5@usearch_ha@4:
; Line 4921
	jmp	SHORT $LN7@usearch_ha@4
$LN6@usearch_ha@4:
; Line 4922
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@usearch_ha@4
; Line 4923
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4924
	xor	al, al
	jmp	$LN14@usearch_ha@4
$LN4@usearch_ha@4:
; Line 4926
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _textOffset$[ebp], eax
$LN10@usearch_ha@4:
; Line 4928
	jmp	SHORT $LN3@usearch_ha@4
$LN12@usearch_ha@4:
; Line 4929
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax+4144]
	push	ecx
	call	_ucol_getOffset_56
	add	esp, 4
	mov	DWORD PTR _textOffset$[ebp], eax
$LN3@usearch_ha@4:
; Line 4932
	mov	DWORD PTR _start$[ebp], -1
; Line 4933
	mov	DWORD PTR _end$[ebp], -1
; Line 4935
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _textOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strsrch$[ebp]
	push	ecx
	call	_usearch_searchBackwards_56
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@usearch_ha@4
; Line 4936
	mov	eax, DWORD PTR _strsrch$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 4937
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _strsrch$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+24], eax
; Line 4938
	mov	al, 1
	jmp	SHORT $LN14@usearch_ha@4
; Line 4939
	jmp	SHORT $LN14@usearch_ha@4
$LN2@usearch_ha@4:
; Line 4940
	mov	eax, DWORD PTR _strsrch$[ebp]
	push	eax
	call	?setMatchNotFound@@YAXPAUUStringSearch@@@Z ; setMatchNotFound
	add	esp, 4
; Line 4941
	xor	al, al
$LN14@usearch_ha@4:
; Line 4944
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@usearch_ha@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@usearch_ha@4:
	DD	2
	DD	$LN18@usearch_ha@4
$LN18@usearch_ha@4:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN16@usearch_ha@4
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN17@usearch_ha@4
$LN17@usearch_ha@4:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN16@usearch_ha@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_usearch_handlePreviousCanonical_56 ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\rbt_pars.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_DOT_SET DW	05bH
	DW	05eH
	DW	05bH
	DW	03aH
	DW	05aH
	DW	070H
	DW	03aH
	DW	05dH
	DW	05bH
	DW	03aH
	DW	05aH
	DW	06cH
	DW	03aH
	DW	05dH
	DW	05cH
	DW	072H
	DW	05cH
	DW	06eH
	DW	024H
	DW	05dH
	DW	00H
	ORG $+2
_ILLEGAL_TOP DW	029H
	DW	00H
_ILLEGAL_SEG DW	07bH
	DW	07dH
	DW	07cH
	DW	040H
	DW	00H
	ORG $+2
_ILLEGAL_FUNC DW 05eH
	DW	028H
	DW	02eH
	DW	02aH
	DW	02bH
	DW	03fH
	DW	07bH
	DW	07dH
	DW	07cH
	DW	040H
	DW	00H
	ORG $+2
_gOPERATORS DW	03dH
	DW	03eH
	DW	03cH
	DW	02192H
	DW	02190H
	DW	02194H
	DW	00H
	ORG $+2
_HALF_ENDERS DW	03dH
	DW	03eH
	DW	03cH
	DW	02192H
	DW	02190H
	DW	02194H
	DW	03bH
	DW	00H
_ID_TOKEN DW	03aH
	DW	03aH
_PRAGMA_USE DW	075H
	DW	073H
	DW	065H
	DW	020H
	DW	00H
	ORG $+2
_PRAGMA_VARIABLE_RANGE DW 07eH
	DW	076H
	DW	061H
	DW	072H
	DW	069H
	DW	061H
	DW	062H
	DW	06cH
	DW	065H
	DW	020H
	DW	072H
	DW	061H
	DW	06eH
	DW	067H
	DW	065H
	DW	020H
	DW	023H
	DW	020H
	DW	023H
	DW	07eH
	DW	03bH
	DW	00H
_PRAGMA_MAXIMUM_BACKUP DW 07eH
	DW	06dH
	DW	061H
	DW	078H
	DW	069H
	DW	06dH
	DW	075H
	DW	06dH
	DW	020H
	DW	062H
	DW	061H
	DW	063H
	DW	06bH
	DW	075H
	DW	070H
	DW	020H
	DW	023H
	DW	07eH
	DW	03bH
	DW	00H
_PRAGMA_NFD_RULES DW 07eH
	DW	06eH
	DW	066H
	DW	064H
	DW	020H
	DW	072H
	DW	075H
	DW	06cH
	DW	065H
	DW	073H
	DW	07eH
	DW	03bH
	DW	00H
	ORG $+2
_PRAGMA_NFC_RULES DW 07eH
	DW	06eH
	DW	066H
	DW	063H
	DW	020H
	DW	072H
	DW	075H
	DW	06cH
	DW	065H
	DW	073H
	DW	07eH
	DW	03bH
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7UnicodeReplacer@icu_56@@6B@			; icu_56::UnicodeReplacer::`vftable'
PUBLIC	??0UnicodeReplacer@icu_56@@QAE@XZ		; icu_56::UnicodeReplacer::UnicodeReplacer
PUBLIC	??_R4UnicodeReplacer@icu_56@@6B@		; icu_56::UnicodeReplacer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeReplacer@icu_56@@@8		; icu_56::UnicodeReplacer `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeReplacer@icu_56@@8			; icu_56::UnicodeReplacer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeReplacer@icu_56@@8			; icu_56::UnicodeReplacer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8		; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeReplacer@icu_56@@UAEPAXI@Z		; icu_56::UnicodeReplacer::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8 DD FLAT:??_R0?AVUnicodeReplacer@icu_56@@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeReplacer@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeReplacer@icu_56@@8 DD 00H			; icu_56::UnicodeReplacer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeReplacer@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeReplacer@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeReplacer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeReplacer@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeReplacer@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeReplacer@icu_56@@6B@ DD 00H			; icu_56::UnicodeReplacer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeReplacer@icu_56@@@8
	DD	FLAT:??_R3UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeReplacer@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeReplacer@icu_56@@6B@ DD FLAT:??_R4UnicodeReplacer@icu_56@@6B@ ; icu_56::UnicodeReplacer::`vftable'
	DD	FLAT:??_EUnicodeReplacer@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeReplacer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeReplacer@icu_56@@QAE@XZ PROC			; icu_56::UnicodeReplacer::UnicodeReplacer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeReplacer@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeReplacer@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeReplacer::UnicodeReplacer
_TEXT	ENDS
PUBLIC	??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeReplacer::UnicodeReplacer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeReplacer::UnicodeReplacer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeReplacer@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeReplacer::UnicodeReplacer
_TEXT	ENDS
PUBLIC	??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeReplacer::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeReplacer::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeReplacer::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeReplacer@icu_56@@UAEPAXI@Z		; icu_56::UnicodeReplacer::`scalar deleting destructor'
EXTRN	??1UnicodeReplacer@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeReplacer::~UnicodeReplacer
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeReplacer@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeReplacer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeReplacer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeReplacer@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeReplacer::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeReplacer::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
PUBLIC	?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ; icu_56::Transliterator::getMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ PROC ; icu_56::Transliterator::getMaximumContextLength, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\translit.h
; Line 1313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1314
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 1315
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ENDP ; icu_56::Transliterator::getMaximumContextLength
_TEXT	ENDS
PUBLIC	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::setID, COMDAT
; _this$ = ecx
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	esi, esp
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1320
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::setID
_TEXT	ENDS
PUBLIC	?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ; icu_56::Transliterator::integerToken
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_i$ = 8							; size = 4
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z PROC ; icu_56::Transliterator::integerToken, COMDAT
; Line 1325
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1327
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1328
	mov	eax, DWORD PTR _t$[ebp]
; Line 1329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@integerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@integerTok:
	DD	1
	DD	$LN4@integerTok
$LN4@integerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@integerTok
$LN3@integerTok:
	DB	116					; 00000074H
	DB	0
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ENDP ; icu_56::Transliterator::integerToken
_TEXT	ENDS
PUBLIC	?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ; icu_56::Transliterator::pointerToken
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_p$ = 8							; size = 4
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z PROC ; icu_56::Transliterator::pointerToken, COMDAT
; Line 1331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1333
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1334
	mov	eax, DWORD PTR _t$[ebp]
; Line 1335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@pointerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@pointerTok:
	DD	1
	DD	$LN4@pointerTok
$LN4@pointerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@pointerTok
$LN3@pointerTok:
	DB	116					; 00000074H
	DB	0
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ENDP ; icu_56::Transliterator::pointerToken
_TEXT	ENDS
PUBLIC	??_7ParseData@icu_56@@6B@			; icu_56::ParseData::`vftable'
PUBLIC	??0ParseData@icu_56@@QAE@PBVTransliterationRuleData@1@PBVUVector@1@PBVHashtable@1@@Z ; icu_56::ParseData::ParseData
PUBLIC	??_R4ParseData@icu_56@@6B@			; icu_56::ParseData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParseData@icu_56@@@8			; icu_56::ParseData `RTTI Type Descriptor'
PUBLIC	??_R3ParseData@icu_56@@8			; icu_56::ParseData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParseData@icu_56@@8			; icu_56::ParseData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParseData@icu_56@@8		; icu_56::ParseData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@SymbolTable@icu_56@@8		; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSymbolTable@icu_56@@@8			; icu_56::SymbolTable `RTTI Type Descriptor'
PUBLIC	??_R3SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Base Class Array'
PUBLIC	?lookup@ParseData@icu_56@@UBEPBVUnicodeString@2@ABV32@@Z ; icu_56::ParseData::lookup
PUBLIC	?lookupMatcher@ParseData@icu_56@@UBEPBVUnicodeFunctor@2@H@Z ; icu_56::ParseData::lookupMatcher
PUBLIC	?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z ; icu_56::ParseData::parseReference
EXTRN	__imp_??0SymbolTable@icu_56@@QAE@XZ:PROC
EXTRN	??_EParseData@icu_56@@UAEPAXI@Z:PROC		; icu_56::ParseData::`vector deleting destructor'
;	COMDAT ??_R2SymbolTable@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\rbt_pars.cpp
rdata$r	SEGMENT
??_R2SymbolTable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SymbolTable@icu_56@@8 ; icu_56::SymbolTable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R3SymbolTable@icu_56@@8 DD 00H			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSymbolTable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSymbolTable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SymbolTable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSymbolTable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SymbolTable@icu_56@@8 DD FLAT:??_R0?AVSymbolTable@icu_56@@@8 ; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParseData@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParseData@icu_56@@8 DD FLAT:??_R0?AVParseData@icu_56@@@8 ; icu_56::ParseData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParseData@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ParseData@icu_56@@8
rdata$r	SEGMENT
??_R2ParseData@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ParseData@icu_56@@8 ; icu_56::ParseData::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ParseData@icu_56@@8
rdata$r	SEGMENT
??_R3ParseData@icu_56@@8 DD 00H				; icu_56::ParseData::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2ParseData@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParseData@icu_56@@@8
_DATA	SEGMENT
??_R0?AVParseData@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ParseData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParseData@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParseData@icu_56@@6B@
rdata$r	SEGMENT
??_R4ParseData@icu_56@@6B@ DD 00H			; icu_56::ParseData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParseData@icu_56@@@8
	DD	FLAT:??_R3ParseData@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ParseData@icu_56@@6B@
CONST	SEGMENT
??_7ParseData@icu_56@@6B@ DD FLAT:??_R4ParseData@icu_56@@6B@ ; icu_56::ParseData::`vftable'
	DD	FLAT:??_EParseData@icu_56@@UAEPAXI@Z
	DD	FLAT:?lookup@ParseData@icu_56@@UBEPBVUnicodeString@2@ABV32@@Z
	DD	FLAT:?lookupMatcher@ParseData@icu_56@@UBEPBVUnicodeFunctor@2@H@Z
	DD	FLAT:?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ParseData@icu_56@@QAE@PBVTransliterationRuleData@1@PBVUVector@1@PBVHashtable@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 4
_sets$ = 12						; size = 4
_vNames$ = 16						; size = 4
??0ParseData@icu_56@@QAE@PBVTransliterationRuleData@1@PBVUVector@1@PBVHashtable@1@@Z PROC ; icu_56::ParseData::ParseData, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SymbolTable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParseData@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sets$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vNames$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0ParseData@icu_56@@QAE@PBVTransliterationRuleData@1@PBVUVector@1@PBVHashtable@1@@Z ENDP ; icu_56::ParseData::ParseData
_TEXT	ENDS
PUBLIC	??1ParseData@icu_56@@UAE@XZ			; icu_56::ParseData::~ParseData
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GParseData@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GParseData@icu_56@@UAEPAXI@Z PROC			; icu_56::ParseData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParseData@icu_56@@UAE@XZ		; icu_56::ParseData::~ParseData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GParseData@icu_56@@UAEPAXI@Z ENDP			; icu_56::ParseData::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1SymbolTable@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ParseData@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ParseData@icu_56@@UAE@XZ PROC			; icu_56::ParseData::~ParseData, COMDAT
; _this$ = ecx
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParseData@icu_56@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SymbolTable@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ParseData@icu_56@@UAE@XZ ENDP			; icu_56::ParseData::~ParseData
_TEXT	ENDS
EXTRN	__imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lookup@ParseData@icu_56@@UBEPBVUnicodeString@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?lookup@ParseData@icu_56@@UBEPBVUnicodeString@2@ABV32@@Z PROC ; icu_56::ParseData::lookup, COMDAT
; _this$ = ecx
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	DWORD PTR __imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lookup@ParseData@icu_56@@UBEPBVUnicodeString@2@ABV32@@Z ENDP ; icu_56::ParseData::lookup
_TEXT	ENDS
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lookupMatcher@ParseData@icu_56@@UBEPBVUnicodeFunctor@2@H@Z
_TEXT	SEGMENT
tv85 = -244						; size = 4
_i$39091 = -44						; size = 4
_i$ = -32						; size = 4
_set$ = -20						; size = 4
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
?lookupMatcher@ParseData@icu_56@@UBEPBVUnicodeFunctor@2@H@Z PROC ; icu_56::ParseData::lookupMatcher, COMDAT
; _this$ = ecx
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	DWORD PTR _set$[ebp], 0
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx+1106]
	mov	eax, DWORD PTR _ch$[ebp]
	sub	eax, edx
	mov	DWORD PTR _i$[ebp], eax
; Line 194
	js	SHORT $LN1@lookupMatc
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN1@lookupMatc
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx+1106]
	mov	eax, DWORD PTR _ch$[ebp]
	sub	eax, edx
	mov	DWORD PTR _i$39091[ebp], eax
; Line 197
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$39091[ebp], eax
	jge	SHORT $LN4@lookupMatc
	mov	esi, esp
	mov	ecx, DWORD PTR _i$39091[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN5@lookupMatc
$LN4@lookupMatc:
	mov	DWORD PTR tv85[ebp], 0
$LN5@lookupMatc:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR _set$[ebp], eax
$LN1@lookupMatc:
; Line 199
	mov	eax, DWORD PTR _set$[ebp]
; Line 200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lookupMatcher@ParseData@icu_56@@UBEPBVUnicodeFunctor@2@H@Z ENDP ; icu_56::ParseData::lookupMatcher
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
EXTRN	_u_isIDPart_56:PROC
EXTRN	_u_isIDStart_56:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z$0
__ehfuncinfo$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z
_TEXT	SEGMENT
$T46854 = -336						; size = 4
_c$39106 = -132						; size = 2
_result$ = -120						; size = 64
_i$ = -48						; size = 4
_start$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_text$ = 12						; size = 4
_pos$ = 16						; size = 4
_limit$ = 20						; size = 4
?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z PROC ; icu_56::ParseData::parseReference, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T46854[ebp], 0
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 210
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
$LN6@parseRefer:
; Line 211
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN5@parseRefer
; Line 212
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$39106[ebp], ax
; Line 213
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jne	SHORT $LN2@parseRefer
	movzx	eax, WORD PTR _c$39106[ebp]
	push	eax
	call	_u_isIDStart_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@parseRefer
$LN2@parseRefer:
	movzx	eax, WORD PTR _c$39106[ebp]
	push	eax
	call	_u_isIDPart_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@parseRefer
$LN3@parseRefer:
; Line 214
	jmp	SHORT $LN5@parseRefer
$LN4@parseRefer:
; Line 216
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 217
	jmp	SHORT $LN6@parseRefer
$LN5@parseRefer:
; Line 218
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jne	SHORT $LN1@parseRefer
; Line 219
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46854[ebp]
	or	ecx, 1
	mov	DWORD PTR $T46854[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN7@parseRefer
$LN1@parseRefer:
; Line 221
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 222
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 223
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46854[ebp]
	or	ecx, 1
	mov	DWORD PTR $T46854[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN7@parseRefer:
; Line 224
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@parseRefer
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN15@parseRefer:
	DD	1
	DD	$LN14@parseRefer
$LN14@parseRefer:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN12@parseRefer
$LN12@parseRefer:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z$1:
	mov	eax, DWORD PTR $T46854[ebp]
	and	eax, 1
	je	$LN11@parseRefer
	and	DWORD PTR $T46854[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN11@parseRefer:
	ret	0
__ehhandler$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseReference@ParseData@icu_56@@UBE?AVUnicodeString@2@ABV32@AAVParsePosition@2@H@Z ENDP ; icu_56::ParseData::parseReference
PUBLIC	?isMatcher@ParseData@icu_56@@QAECH@Z		; icu_56::ParseData::isMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isMatcher@ParseData@icu_56@@QAECH@Z
_TEXT	SEGMENT
tv83 = -229						; size = 1
_f$39117 = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
?isMatcher@ParseData@icu_56@@QAECH@Z PROC		; icu_56::ParseData::isMatcher, COMDAT
; _this$ = ecx
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx+1106]
	mov	eax, DWORD PTR _ch$[ebp]
	sub	eax, edx
	mov	DWORD PTR _i$[ebp], eax
; Line 230
	js	SHORT $LN1@isMatcher
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN1@isMatcher
; Line 231
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _f$39117[ebp], eax
; Line 232
	cmp	DWORD PTR _f$39117[ebp], 0
	je	SHORT $LN4@isMatcher
	mov	eax, DWORD PTR _f$39117[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _f$39117[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@isMatcher
	mov	BYTE PTR tv83[ebp], 1
	jmp	SHORT $LN5@isMatcher
$LN4@isMatcher:
	mov	BYTE PTR tv83[ebp], 0
$LN5@isMatcher:
	mov	al, BYTE PTR tv83[ebp]
	jmp	SHORT $LN2@isMatcher
$LN1@isMatcher:
; Line 234
	mov	al, 1
$LN2@isMatcher:
; Line 235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isMatcher@ParseData@icu_56@@QAECH@Z ENDP		; icu_56::ParseData::isMatcher
_TEXT	ENDS
PUBLIC	?isReplacer@ParseData@icu_56@@QAECH@Z		; icu_56::ParseData::isReplacer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isReplacer@ParseData@icu_56@@QAECH@Z
_TEXT	SEGMENT
tv83 = -229						; size = 1
_f$39125 = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
?isReplacer@ParseData@icu_56@@QAECH@Z PROC		; icu_56::ParseData::isReplacer, COMDAT
; _this$ = ecx
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx+1106]
	mov	eax, DWORD PTR _ch$[ebp]
	sub	eax, edx
	mov	DWORD PTR _i$[ebp], eax
; Line 245
	js	SHORT $LN1@isReplacer
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN1@isReplacer
; Line 246
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _f$39125[ebp], eax
; Line 247
	cmp	DWORD PTR _f$39125[ebp], 0
	je	SHORT $LN4@isReplacer
	mov	eax, DWORD PTR _f$39125[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _f$39125[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@isReplacer
	mov	BYTE PTR tv83[ebp], 1
	jmp	SHORT $LN5@isReplacer
$LN4@isReplacer:
	mov	BYTE PTR tv83[ebp], 0
$LN5@isReplacer:
	mov	al, BYTE PTR tv83[ebp]
	jmp	SHORT $LN2@isReplacer
$LN1@isReplacer:
; Line 249
	mov	al, 1
$LN2@isReplacer:
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isReplacer@ParseData@icu_56@@QAECH@Z ENDP		; icu_56::ParseData::isReplacer
_TEXT	ENDS
PUBLIC	??0RuleHalf@icu_56@@QAE@AAVTransliteratorParser@1@@Z ; icu_56::RuleHalf::RuleHalf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0RuleHalf@icu_56@@QAE@AAVTransliteratorParser@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0RuleHalf@icu_56@@QAE@AAVTransliteratorParser@1@@Z PROC ; icu_56::RuleHalf::RuleHalf, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+92], ecx
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], -1
; Line 345
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], -1
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], -1
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 348
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 349
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+85], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+84], 0
; Line 350
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 1
; Line 351
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RuleHalf@icu_56@@QAE@AAVTransliteratorParser@1@@Z ENDP ; icu_56::RuleHalf::RuleHalf
_TEXT	ENDS
PUBLIC	??1RuleHalf@icu_56@@QAE@XZ			; icu_56::RuleHalf::~RuleHalf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1RuleHalf@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1RuleHalf@icu_56@@QAE@XZ PROC				; icu_56::RuleHalf::~RuleHalf, COMDAT
; _this$ = ecx
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RuleHalf@icu_56@@QAE@XZ ENDP				; icu_56::RuleHalf::~RuleHalf
_TEXT	ENDS
PUBLIC	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
PUBLIC	?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parseSection
PUBLIC	__$ArrayPad$
PUBLIC	?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parse
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv94 = -312						; size = 4
tv95 = -308						; size = 4
$T39188 = -300						; size = 64
_start$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_pos$ = 12						; size = 4
_limit$ = 16						; size = 4
_status$ = 20						; size = 4
?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::RuleHalf::parse, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 364
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 365
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	push	-1
	push	OFFSET _ILLEGAL_TOP
	push	1
	lea	ecx, DWORD PTR $T39188[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv94[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv94[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parseSection
	mov	DWORD PTR _pos$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39188[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 367
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jle	SHORT $LN1@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+64]
	cmp	edx, DWORD PTR [ecx+80]
	je	SHORT $LN1@parse
; Line 368
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65545					; 00010009H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	jmp	SHORT $LN2@parse
$LN1@parse:
; Line 371
	mov	eax, DWORD PTR _pos$[ebp]
$LN2@parse:
; Line 372
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39188[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::RuleHalf::parse
PUBLIC	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_code$ = 8						; size = 4
_rule$ = 12						; size = 4
_start$ = 16						; size = 4
_status$ = 20						; size = 4
?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z PROC ; icu_56::RuleHalf::syntaxError, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	mov	eax, DWORD PTR _code$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+92]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
; Line 333
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ENDP ; icu_56::RuleHalf::syntaxError
_TEXT	ENDS
PUBLIC	?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::getDotStandIn
PUBLIC	?appendVariableDef@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::appendVariableDef
PUBLIC	?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::generateStandInFor
PUBLIC	??_GSingleID@TransliteratorIDParser@icu_56@@QAEPAXI@Z ; icu_56::TransliteratorIDParser::SingleID::`scalar deleting destructor'
PUBLIC	?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::getSegmentStandin
PUBLIC	?setSegmentObject@TransliteratorParser@icu_56@@AAEXHPAVStringMatcher@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::setSegmentObject
PUBLIC	?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z ; icu_56::TransliteratorParser::checkVariableRange
PUBLIC	?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parseSet
PUBLIC	__$ArrayPad$
EXTRN	??0Quantifier@icu_56@@QAE@PAVUnicodeFunctor@1@II@Z:PROC ; icu_56::Quantifier::Quantifier
EXTRN	__imp_?parseNumber@ICU_Utility@icu_56@@SAHABVUnicodeString@2@AAHC@Z:PROC
EXTRN	_u_digit_56:PROC
EXTRN	??0FunctionReplacer@icu_56@@QAE@PAVTransliterator@1@PAVUnicodeFunctor@1@@Z:PROC ; icu_56::FunctionReplacer::FunctionReplacer
EXTRN	??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z:PROC ; icu_56::StringReplacer::StringReplacer
EXTRN	?createInstance@SingleID@TransliteratorIDParser@icu_56@@QAEPAVTransliterator@3@XZ:PROC ; icu_56::TransliteratorIDParser::SingleID::createInstance
EXTRN	__imp_?parseChar@ICU_Utility@icu_56@@SACABVUnicodeString@2@AAH_W@Z:PROC
EXTRN	?parseFilterID@TransliteratorIDParser@icu_56@@SAPAVSingleID@12@ABVUnicodeString@2@AAH@Z:PROC ; icu_56::TransliteratorIDParser::parseFilterID
EXTRN	??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z:PROC ; icu_56::StringMatcher::StringMatcher
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?unescapeAt@UnicodeString@icu_56@@QBEHAAH@Z:PROC
EXTRN	__imp_?resemblesPattern@UnicodeSet@icu_56@@SACABVUnicodeString@2@H@Z:PROC
EXTRN	__imp_??1ParsePosition@icu_56@@UAE@XZ:PROC
EXTRN	_u_strchr_56:PROC
EXTRN	__imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC
EXTRN	__imp_??0ParsePosition@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv825 = -1352						; size = 4
tv816 = -1352						; size = 4
tv480 = -1352						; size = 4
tv868 = -1348						; size = 4
tv862 = -1348						; size = 4
tv634 = -1348						; size = 4
tv618 = -1348						; size = 4
tv609 = -1348						; size = 4
tv477 = -1348						; size = 4
tv415 = -1348						; size = 4
tv372 = -1348						; size = 4
tv288 = -1348						; size = 4
tv78 = -1348						; size = 4
$T39268 = -1340						; size = 64
$T39291 = -1268						; size = 64
$T46899 = -1196						; size = 4
$T46900 = -1184						; size = 4
$T46901 = -1172						; size = 4
$T46902 = -1160						; size = 4
$T46903 = -1148						; size = 4
$T46904 = -1136						; size = 4
$T46905 = -1124						; size = 4
$T46906 = -1112						; size = 4
$T46907 = -1100						; size = 4
$T46908 = -1088						; size = 4
$T46909 = -1076						; size = 4
$T46910 = -1064						; size = 4
$T46913 = -1052						; size = 4
$T46914 = -1040						; size = 4
$T46915 = -1028						; size = 4
$T46916 = -1016						; size = 4
$T46919 = -1004						; size = 4
$T46920 = -992						; size = 4
$T46921 = -980						; size = 4
$T46922 = -968						; size = 4
$T46923 = -956						; size = 4
$T46928 = -944						; size = 4
$T46929 = -932						; size = 4
$T46930 = -920						; size = 4
$T46931 = -908						; size = 4
$T46932 = -896						; size = 4
$T46935 = -884						; size = 4
$T46936 = -872						; size = 4
$T46937 = -860						; size = 4
$T46940 = -848						; size = 4
$T46941 = -836						; size = 4
$T46942 = -824						; size = 4
$T46943 = -812						; size = 4
$T46944 = -800						; size = 4
$T46945 = -788						; size = 4
$T46946 = -776						; size = 4
$T46947 = -764						; size = 4
$T46949 = -752						; size = 4
_max$39336 = -548					; size = 4
_min$39335 = -536					; size = 4
_m$39328 = -524						; size = 4
_qlimit$39323 = -512					; size = 4
_qstart$39322 = -500					; size = 4
_name$39311 = -488					; size = 64
_r$39306 = -416						; size = 4
_r$39293 = -404						; size = 4
_output$39292 = -392					; size = 64
_bufSegStart$39290 = -320				; size = 4
_t$39285 = -308						; size = 4
_single$39280 = -296					; size = 4
_iref$39279 = -284					; size = 4
_m$39269 = -272						; size = 4
_segmentNumber$39267 = -260				; size = 4
_bufSegStart$39266 = -248				; size = 4
_iq$39234 = -236					; size = 4
_escaped$39226 = -224					; size = 4
_c$39212 = -212						; size = 2
_bufStart$ = -200					; size = 4
_varLimit$ = -188					; size = 4
_varStart$ = -176					; size = 4
_quoteLimit$ = -164					; size = 4
_quoteStart$ = -152					; size = 4
_done$ = -137						; size = 1
_scratch$ = -128					; size = 64
_pp$ = -56						; size = 12
_start$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_pos$ = 12						; size = 4
_limit$ = 16						; size = 4
_buf$ = 20						; size = 4
_illegal$ = 24						; size = 4
_isSegment$ = 28					; size = 1
_status$ = 32						; size = 4
?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z PROC ; icu_56::RuleHalf::parseSection, COMDAT
; _this$ = ecx
; Line 400
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1340				; 0000053cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1352]
	mov	ecx, 335				; 0000014fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 401
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 402
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 403
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 404
	mov	BYTE PTR _done$[ebp], 0
; Line 405
	mov	DWORD PTR _quoteStart$[ebp], -1
; Line 406
	mov	DWORD PTR _quoteLimit$[ebp], -1
; Line 407
	mov	DWORD PTR _varStart$[ebp], -1
; Line 408
	mov	DWORD PTR _varLimit$[ebp], -1
; Line 409
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bufStart$[ebp], eax
$LN81@parseSecti:
; Line 411
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	$LN80@parseSecti
	movsx	eax, BYTE PTR _done$[ebp]
	test	eax, eax
	jne	$LN80@parseSecti
; Line 414
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$39212[ebp], ax
; Line 415
	movzx	eax, WORD PTR _c$39212[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN79@parseSecti
; Line 419
	jmp	SHORT $LN81@parseSecti
$LN79@parseSecti:
; Line 421
	movzx	eax, WORD PTR _c$39212[ebp]
	push	eax
	push	OFFSET _HALF_ENDERS
	call	_u_strchr_56
	add	esp, 8
	test	eax, eax
	je	SHORT $LN78@parseSecti
; Line 422
	movsx	eax, BYTE PTR _isSegment$[ebp]
	test	eax, eax
	je	SHORT $LN77@parseSecti
; Line 424
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65563					; 0001001bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46899[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46899[ebp]
	jmp	$LN82@parseSecti
$LN77@parseSecti:
; Line 426
	jmp	$LN80@parseSecti
$LN78@parseSecti:
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	je	SHORT $LN76@parseSecti
; Line 430
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65542					; 00010006H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46900[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46900[ebp]
	jmp	$LN82@parseSecti
$LN76@parseSecti:
; Line 432
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?resemblesPattern@UnicodeSet@icu_56@@SACABVUnicodeString@2@H@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	$LN75@parseSecti
; Line 433
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 434
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	call	?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parseSet
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 435
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN74@parseSecti
; Line 436
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65538					; 00010002H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46901[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46901[ebp]
	jmp	$LN82@parseSecti
$LN74@parseSecti:
; Line 438
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
; Line 439
	jmp	$LN81@parseSecti
$LN75@parseSecti:
; Line 442
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 92					; 0000005cH
	jne	$LN73@parseSecti
; Line 443
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN72@parseSecti
; Line 444
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65552					; 00010010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46902[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46902[ebp]
	jmp	$LN82@parseSecti
$LN72@parseSecti:
; Line 446
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?unescapeAt@UnicodeString@icu_56@@QBEHAAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _escaped$39226[ebp], eax
; Line 447
	cmp	DWORD PTR _escaped$39226[ebp], -1
	jne	SHORT $LN71@parseSecti
; Line 448
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65540					; 00010004H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46903[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46903[ebp]
	jmp	$LN82@parseSecti
$LN71@parseSecti:
; Line 450
	mov	eax, DWORD PTR _escaped$39226[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+92]
	call	?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z ; icu_56::TransliteratorParser::checkVariableRange
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN70@parseSecti
; Line 451
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65566					; 0001001eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46904[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46904[ebp]
	jmp	$LN82@parseSecti
$LN70@parseSecti:
; Line 453
	mov	esi, esp
	mov	eax, DWORD PTR _escaped$39226[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 454
	jmp	$LN81@parseSecti
$LN73@parseSecti:
; Line 457
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 39					; 00000027H
	jne	$LN69@parseSecti
; Line 458
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	push	39					; 00000027H
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iq$39234[ebp], eax
; Line 459
	mov	eax, DWORD PTR _iq$39234[ebp]
	cmp	eax, DWORD PTR _pos$[ebp]
	jne	SHORT $LN68@parseSecti
; Line 460
	mov	esi, esp
	movzx	eax, WORD PTR _c$39212[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 461
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 462
	jmp	$LN67@parseSecti
$LN68@parseSecti:
; Line 469
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _quoteStart$[ebp], eax
$LN66@parseSecti:
; Line 471
	cmp	DWORD PTR _iq$39234[ebp], 0
	jge	SHORT $LN64@parseSecti
; Line 472
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65556					; 00010014H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46905[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46905[ebp]
	jmp	$LN82@parseSecti
$LN64@parseSecti:
; Line 474
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 475
	mov	esi, esp
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iq$39234[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _rule$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 476
	mov	esi, esp
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 477
	mov	eax, DWORD PTR _iq$39234[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 478
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN63@parseSecti
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN63@parseSecti
; Line 480
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	push	39					; 00000027H
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iq$39234[ebp], eax
; Line 482
	jmp	SHORT $LN62@parseSecti
$LN63@parseSecti:
; Line 483
	jmp	SHORT $LN65@parseSecti
$LN62@parseSecti:
; Line 485
	jmp	$LN66@parseSecti
$LN65@parseSecti:
; Line 486
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _quoteLimit$[ebp], eax
; Line 488
	mov	eax, DWORD PTR _quoteStart$[ebp]
	mov	DWORD PTR _iq$39234[ebp], eax
	jmp	SHORT $LN61@parseSecti
$LN60@parseSecti:
	mov	eax, DWORD PTR _iq$39234[ebp]
	add	eax, 1
	mov	DWORD PTR _iq$39234[ebp], eax
$LN61@parseSecti:
	mov	eax, DWORD PTR _iq$39234[ebp]
	cmp	eax, DWORD PTR _quoteLimit$[ebp]
	jge	$LN67@parseSecti
; Line 489
	mov	esi, esp
	mov	eax, DWORD PTR _iq$39234[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z ; icu_56::TransliteratorParser::checkVariableRange
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN58@parseSecti
; Line 490
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65566					; 0001001eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46906[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46906[ebp]
	jmp	$LN82@parseSecti
$LN58@parseSecti:
; Line 492
	jmp	$LN60@parseSecti
$LN67@parseSecti:
; Line 494
	jmp	$LN81@parseSecti
$LN69@parseSecti:
; Line 497
	movzx	eax, WORD PTR _c$39212[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+92]
	call	?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z ; icu_56::TransliteratorParser::checkVariableRange
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN57@parseSecti
; Line 498
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65566					; 0001001eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46907[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46907[ebp]
	jmp	$LN82@parseSecti
$LN57@parseSecti:
; Line 501
	mov	esi, esp
	movzx	eax, WORD PTR _c$39212[ebp]
	push	eax
	mov	ecx, DWORD PTR _illegal$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN56@parseSecti
; Line 502
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65567					; 0001001fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
$LN56@parseSecti:
; Line 505
	movzx	eax, WORD PTR _c$39212[ebp]
	mov	DWORD PTR tv288[ebp], eax
	cmp	DWORD PTR tv288[ebp], 8710		; 00002206H
	jg	SHORT $LN96@parseSecti
	cmp	DWORD PTR tv288[ebp], 8710		; 00002206H
	je	$LN48@parseSecti
	mov	ecx, DWORD PTR tv288[ebp]
	sub	ecx, 36					; 00000024H
	mov	DWORD PTR tv288[ebp], ecx
	cmp	DWORD PTR tv288[ebp], 89		; 00000059H
	ja	$LN5@parseSecti
	mov	edx, DWORD PTR tv288[ebp]
	movzx	eax, BYTE PTR $LN112@parseSecti[edx]
	jmp	DWORD PTR $LN121@parseSecti[eax*4]
$LN96@parseSecti:
	jmp	$LN5@parseSecti
$LN53@parseSecti:
; Line 511
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN52@parseSecti
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	jne	SHORT $LN52@parseSecti
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 1
; Line 513
	jmp	SHORT $LN51@parseSecti
$LN52@parseSecti:
; Line 515
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65544					; 00010008H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46908[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46908[ebp]
	jmp	$LN82@parseSecti
$LN51@parseSecti:
; Line 517
	jmp	$LN54@parseSecti
$LN50@parseSecti:
; Line 522
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bufSegStart$39266[ebp], eax
; Line 527
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _segmentNumber$39267[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax
; Line 530
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	esi, esp
	push	-1
	push	OFFSET _ILLEGAL_SEG
	push	1
	lea	ecx, DWORD PTR $T39268[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv862[ebp], eax
	mov	ecx, DWORD PTR tv862[ebp]
	mov	DWORD PTR tv816[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv816[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parseSection
	mov	DWORD PTR _pos$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39268[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 538
	mov	esi, esp
	push	92					; 0000005cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46910[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T46910[ebp], 0
	je	SHORT $LN84@parseSecti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _segmentNumber$39267[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _bufSegStart$39266[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T46910[ebp]
	call	??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z ; icu_56::StringMatcher::StringMatcher
	mov	DWORD PTR tv372[ebp], eax
	jmp	SHORT $LN85@parseSecti
$LN84@parseSecti:
	mov	DWORD PTR tv372[ebp], 0
$LN85@parseSecti:
	mov	eax, DWORD PTR tv372[ebp]
	mov	DWORD PTR $T46909[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T46909[ebp]
	mov	DWORD PTR _m$39269[ebp], ecx
; Line 539
	cmp	DWORD PTR _m$39269[ebp], 0
	jne	SHORT $LN49@parseSecti
; Line 540
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46913[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46913[ebp]
	jmp	$LN82@parseSecti
$LN49@parseSecti:
; Line 544
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$39269[ebp]
	push	ecx
	mov	edx, DWORD PTR _segmentNumber$39267[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	call	?setSegmentObject@TransliteratorParser@icu_56@@AAEXHPAVStringMatcher@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::setSegmentObject
; Line 545
	mov	esi, esp
	mov	eax, DWORD PTR _bufSegStart$39266[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 546
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _segmentNumber$39267[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::getSegmentStandin
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 548
	jmp	$LN54@parseSecti
$LN48@parseSecti:
; Line 552
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _iref$39279[ebp], eax
; Line 554
	lea	eax, DWORD PTR _iref$39279[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	?parseFilterID@TransliteratorIDParser@icu_56@@SAPAVSingleID@12@ABVUnicodeString@2@AAH@Z ; icu_56::TransliteratorIDParser::parseFilterID
	add	esp, 8
	mov	DWORD PTR _single$39280[ebp], eax
; Line 557
	cmp	DWORD PTR _single$39280[ebp], 0
	je	SHORT $LN46@parseSecti
	mov	esi, esp
	push	40					; 00000028H
	lea	eax, DWORD PTR _iref$39279[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parseChar@ICU_Utility@icu_56@@SACABVUnicodeString@2@AAH_W@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN47@parseSecti
$LN46@parseSecti:
; Line 558
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65570					; 00010022H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46914[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46914[ebp]
	jmp	$LN82@parseSecti
$LN47@parseSecti:
; Line 561
	mov	ecx, DWORD PTR _single$39280[ebp]
	call	?createInstance@SingleID@TransliteratorIDParser@icu_56@@QAEPAVTransliterator@3@XZ ; icu_56::TransliteratorIDParser::SingleID::createInstance
	mov	DWORD PTR _t$39285[ebp], eax
; Line 562
	mov	eax, DWORD PTR _single$39280[ebp]
	mov	DWORD PTR $T46916[ebp], eax
	mov	ecx, DWORD PTR $T46916[ebp]
	mov	DWORD PTR $T46915[ebp], ecx
	cmp	DWORD PTR $T46915[ebp], 0
	je	SHORT $LN86@parseSecti
	push	1
	mov	ecx, DWORD PTR $T46915[ebp]
	call	??_GSingleID@TransliteratorIDParser@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv415[ebp], eax
	jmp	SHORT $LN87@parseSecti
$LN86@parseSecti:
	mov	DWORD PTR tv415[ebp], 0
$LN87@parseSecti:
; Line 563
	cmp	DWORD PTR _t$39285[ebp], 0
	jne	SHORT $LN45@parseSecti
; Line 564
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65570					; 00010022H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46919[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46919[ebp]
	jmp	$LN82@parseSecti
$LN45@parseSecti:
; Line 569
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bufSegStart$39290[ebp], eax
; Line 572
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	esi, esp
	push	-1
	push	OFFSET _ILLEGAL_FUNC
	push	1
	lea	ecx, DWORD PTR $T39291[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv868[ebp], eax
	mov	ecx, DWORD PTR tv868[ebp]
	mov	DWORD PTR tv825[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv825[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iref$39279[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parseSection
	mov	DWORD PTR _pos$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39291[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 576
	mov	esi, esp
	lea	ecx, DWORD PTR _output$39292[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 577
	mov	esi, esp
	lea	eax, DWORD PTR _output$39292[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _bufSegStart$39290[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 579
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46921[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T46921[ebp], 0
	je	$LN90@parseSecti
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46923[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T46923[ebp], 0
	je	SHORT $LN88@parseSecti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	lea	eax, DWORD PTR _output$39292[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46923[ebp]
	call	??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z ; icu_56::StringReplacer::StringReplacer
	mov	DWORD PTR tv477[ebp], eax
	jmp	SHORT $LN89@parseSecti
$LN88@parseSecti:
	mov	DWORD PTR tv477[ebp], 0
$LN89@parseSecti:
	mov	ecx, DWORD PTR tv477[ebp]
	mov	DWORD PTR $T46922[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR $T46922[ebp]
	push	edx
	mov	eax, DWORD PTR _t$39285[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46921[ebp]
	call	??0FunctionReplacer@icu_56@@QAE@PAVTransliterator@1@PAVUnicodeFunctor@1@@Z ; icu_56::FunctionReplacer::FunctionReplacer
	mov	DWORD PTR tv480[ebp], eax
	jmp	SHORT $LN91@parseSecti
$LN90@parseSecti:
	mov	DWORD PTR tv480[ebp], 0
$LN91@parseSecti:
	mov	ecx, DWORD PTR tv480[ebp]
	mov	DWORD PTR $T46920[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR $T46920[ebp]
	mov	DWORD PTR _r$39293[ebp], edx
; Line 580
	cmp	DWORD PTR _r$39293[ebp], 0
	jne	SHORT $LN44@parseSecti
; Line 581
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46928[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _output$39292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46928[ebp]
	jmp	$LN82@parseSecti
$LN44@parseSecti:
; Line 585
	mov	esi, esp
	mov	eax, DWORD PTR _bufSegStart$39290[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 586
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$39293[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::generateStandInFor
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 587
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _output$39292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 588
	jmp	$LN54@parseSecti
$LN43@parseSecti:
; Line 596
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN42@parseSecti
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+85], 1
; Line 600
	jmp	$LN54@parseSecti
$LN42@parseSecti:
; Line 603
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$39212[ebp], ax
; Line 604
	push	10					; 0000000aH
	movzx	eax, WORD PTR _c$39212[ebp]
	push	eax
	call	_u_digit_56
	add	esp, 8
	mov	DWORD PTR _r$39306[ebp], eax
; Line 605
	cmp	DWORD PTR _r$39306[ebp], 1
	jl	$LN41@parseSecti
	cmp	DWORD PTR _r$39306[ebp], 9
	jg	$LN41@parseSecti
; Line 606
	mov	esi, esp
	push	10					; 0000000aH
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parseNumber@ICU_Utility@icu_56@@SAHABVUnicodeString@2@AAHC@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$39306[ebp], eax
; Line 607
	cmp	DWORD PTR _r$39306[ebp], 0
	jge	SHORT $LN40@parseSecti
; Line 609
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65553					; 00010011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46929[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46929[ebp]
	jmp	$LN82@parseSecti
$LN40@parseSecti:
; Line 611
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$39306[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::getSegmentStandin
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 612
	jmp	$LN39@parseSecti
$LN41@parseSecti:
; Line 613
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$39311[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 616
	mov	esi, esp
	lea	ecx, DWORD PTR _name$39311[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN38@parseSecti
; Line 622
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+85], 1
; Line 623
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$39311[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN54@parseSecti
$LN38@parseSecti:
; Line 625
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
; Line 630
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _varStart$[ebp], eax
; Line 631
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _name$39311[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	call	?appendVariableDef@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::appendVariableDef
; Line 632
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _varLimit$[ebp], eax
; Line 633
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$39311[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@parseSecti:
; Line 635
	jmp	$LN54@parseSecti
$LN37@parseSecti:
; Line 637
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+92]
	call	?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::getDotStandIn
	mov	esi, esp
	movzx	edx, ax
	push	edx
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 638
	jmp	$LN54@parseSecti
$LN36@parseSecti:
; Line 649
	movsx	eax, BYTE PTR _isSegment$[ebp]
	test	eax, eax
	je	SHORT $LN35@parseSecti
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _bufStart$[ebp]
	jne	SHORT $LN35@parseSecti
; Line 651
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65546					; 0001000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46930[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46930[ebp]
	jmp	$LN82@parseSecti
$LN35@parseSecti:
; Line 657
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _quoteLimit$[ebp]
	jne	SHORT $LN34@parseSecti
; Line 659
	mov	eax, DWORD PTR _quoteStart$[ebp]
	mov	DWORD PTR _qstart$39322[ebp], eax
; Line 660
	mov	eax, DWORD PTR _quoteLimit$[ebp]
	mov	DWORD PTR _qlimit$39323[ebp], eax
	jmp	SHORT $LN33@parseSecti
$LN34@parseSecti:
; Line 661
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _varLimit$[ebp]
	jne	SHORT $LN32@parseSecti
; Line 663
	mov	eax, DWORD PTR _varStart$[ebp]
	mov	DWORD PTR _qstart$39322[ebp], eax
; Line 664
	mov	eax, DWORD PTR _varLimit$[ebp]
	mov	DWORD PTR _qlimit$39323[ebp], eax
; Line 665
	jmp	SHORT $LN33@parseSecti
$LN32@parseSecti:
; Line 668
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _qstart$39322[ebp], eax
; Line 669
	mov	eax, DWORD PTR _qstart$39322[ebp]
	add	eax, 1
	mov	DWORD PTR _qlimit$39323[ebp], eax
$LN33@parseSecti:
; Line 673
	mov	esi, esp
	push	92					; 0000005cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46932[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T46932[ebp], 0
	je	SHORT $LN92@parseSecti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	push	0
	mov	eax, DWORD PTR _qlimit$39323[ebp]
	push	eax
	mov	ecx, DWORD PTR _qstart$39322[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T46932[ebp]
	call	??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z ; icu_56::StringMatcher::StringMatcher
	mov	DWORD PTR tv609[ebp], eax
	jmp	SHORT $LN93@parseSecti
$LN92@parseSecti:
	mov	DWORD PTR tv609[ebp], 0
$LN93@parseSecti:
	mov	eax, DWORD PTR tv609[ebp]
	mov	DWORD PTR $T46931[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T46931[ebp]
	mov	DWORD PTR _m$39328[ebp], ecx
; Line 674
	cmp	DWORD PTR _m$39328[ebp], 0
	jne	SHORT $LN30@parseSecti
; Line 675
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46935[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46935[ebp]
	jmp	$LN82@parseSecti
$LN30@parseSecti:
; Line 677
	mov	DWORD PTR _min$39335[ebp], 0
; Line 678
	mov	DWORD PTR _max$39336[ebp], 2147483647	; 7fffffffH
; Line 679
	movzx	eax, WORD PTR _c$39212[ebp]
	mov	DWORD PTR tv618[ebp], eax
	cmp	DWORD PTR tv618[ebp], 43		; 0000002bH
	je	SHORT $LN27@parseSecti
	cmp	DWORD PTR tv618[ebp], 63		; 0000003fH
	je	SHORT $LN26@parseSecti
	jmp	SHORT $LN28@parseSecti
$LN27@parseSecti:
; Line 681
	mov	DWORD PTR _min$39335[ebp], 1
; Line 682
	jmp	SHORT $LN28@parseSecti
$LN26@parseSecti:
; Line 684
	mov	DWORD PTR _min$39335[ebp], 0
; Line 685
	mov	DWORD PTR _max$39336[ebp], 1
$LN28@parseSecti:
; Line 690
	mov	esi, esp
	push	20					; 00000014H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46937[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T46937[ebp], 0
	je	SHORT $LN94@parseSecti
	mov	eax, DWORD PTR _max$39336[ebp]
	push	eax
	mov	ecx, DWORD PTR _min$39335[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$39328[ebp]
	push	edx
	mov	ecx, DWORD PTR $T46937[ebp]
	call	??0Quantifier@icu_56@@QAE@PAVUnicodeFunctor@1@II@Z ; icu_56::Quantifier::Quantifier
	mov	DWORD PTR tv634[ebp], eax
	jmp	SHORT $LN95@parseSecti
$LN94@parseSecti:
	mov	DWORD PTR tv634[ebp], 0
$LN95@parseSecti:
	mov	eax, DWORD PTR tv634[ebp]
	mov	DWORD PTR $T46936[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T46936[ebp]
	mov	DWORD PTR _m$39328[ebp], ecx
; Line 691
	cmp	DWORD PTR _m$39328[ebp], 0
	jne	SHORT $LN25@parseSecti
; Line 692
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46940[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46940[ebp]
	jmp	$LN82@parseSecti
$LN25@parseSecti:
; Line 694
	mov	esi, esp
	mov	eax, DWORD PTR _qstart$39322[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 695
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$39328[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::generateStandInFor
	mov	esi, esp
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 697
	jmp	$LN54@parseSecti
$LN24@parseSecti:
; Line 705
	mov	BYTE PTR _done$[ebp], 1
; Line 706
	jmp	$LN54@parseSecti
$LN23@parseSecti:
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jl	SHORT $LN22@parseSecti
; Line 713
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65549					; 0001000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46941[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46941[ebp]
	jmp	$LN82@parseSecti
$LN22@parseSecti:
; Line 715
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax
; Line 716
	jmp	$LN54@parseSecti
$LN21@parseSecti:
; Line 718
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jl	SHORT $LN20@parseSecti
; Line 719
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65551					; 0001000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46942[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46942[ebp]
	jmp	$LN82@parseSecti
$LN20@parseSecti:
; Line 721
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 722
	jmp	$LN54@parseSecti
$LN19@parseSecti:
; Line 724
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jl	SHORT $LN18@parseSecti
; Line 725
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65550					; 0001000eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46943[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46943[ebp]
	jmp	$LN82@parseSecti
$LN18@parseSecti:
; Line 727
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 728
	jmp	$LN54@parseSecti
$LN17@parseSecti:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jge	$LN16@parseSecti
; Line 731
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN15@parseSecti
; Line 732
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65545					; 00010009H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46944[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46944[ebp]
	jmp	$LN82@parseSecti
$LN15@parseSecti:
; Line 734
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
	jmp	$LN14@parseSecti
$LN16@parseSecti:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jle	$LN13@parseSecti
; Line 736
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+80]
	jne	SHORT $LN11@parseSecti
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jl	SHORT $LN12@parseSecti
$LN11@parseSecti:
; Line 737
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65545					; 00010009H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46945[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46945[ebp]
	jmp	$LN82@parseSecti
$LN12@parseSecti:
; Line 739
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 740
	jmp	$LN14@parseSecti
$LN13@parseSecti:
; Line 741
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jne	SHORT $LN9@parseSecti
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@parseSecti
; Line 742
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], -1
	jmp	$LN14@parseSecti
$LN9@parseSecti:
; Line 743
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jge	SHORT $LN7@parseSecti
; Line 744
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 745
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 1
; Line 746
	jmp	SHORT $LN14@parseSecti
$LN7@parseSecti:
; Line 747
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65545					; 00010009H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46946[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46946[ebp]
	jmp	$LN82@parseSecti
$LN14@parseSecti:
; Line 750
	jmp	$LN54@parseSecti
$LN5@parseSecti:
; Line 763
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 33					; 00000021H
	jl	$LN4@parseSecti
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 126				; 0000007eH
	jg	$LN4@parseSecti
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN3@parseSecti
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 57					; 00000039H
	jle	$LN4@parseSecti
$LN3@parseSecti:
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN2@parseSecti
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 90					; 0000005aH
	jle	SHORT $LN4@parseSecti
$LN2@parseSecti:
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN1@parseSecti
	movzx	eax, WORD PTR _c$39212[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN4@parseSecti
$LN1@parseSecti:
; Line 764
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65555					; 00010013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@RuleHalf@icu_56@@QAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::RuleHalf::syntaxError
	mov	DWORD PTR $T46947[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46947[ebp]
	jmp	SHORT $LN82@parseSecti
$LN4@parseSecti:
; Line 766
	mov	esi, esp
	movzx	eax, WORD PTR _c$39212[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN54@parseSecti:
; Line 769
	jmp	$LN81@parseSecti
$LN80@parseSecti:
; Line 771
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR $T46949[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46949[ebp]
$LN82@parseSecti:
; Line 772
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN120@parseSecti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1352				; 00000548H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	3
$LN120@parseSecti:
	DD	5
	DD	$LN119@parseSecti
$LN119@parseSecti:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN113@parseSecti
	DD	-128					; ffffff80H
	DD	64					; 00000040H
	DD	$LN114@parseSecti
	DD	-284					; fffffee4H
	DD	4
	DD	$LN115@parseSecti
	DD	-392					; fffffe78H
	DD	64					; 00000040H
	DD	$LN116@parseSecti
	DD	-488					; fffffe18H
	DD	64					; 00000040H
	DD	$LN117@parseSecti
$LN117@parseSecti:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN116@parseSecti:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN115@parseSecti:
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	0
$LN114@parseSecti:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
$LN113@parseSecti:
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	0
$LN121@parseSecti:
	DD	$LN43@parseSecti
	DD	$LN48@parseSecti
	DD	$LN50@parseSecti
	DD	$LN24@parseSecti
	DD	$LN36@parseSecti
	DD	$LN37@parseSecti
	DD	$LN17@parseSecti
	DD	$LN53@parseSecti
	DD	$LN23@parseSecti
	DD	$LN19@parseSecti
	DD	$LN21@parseSecti
	DD	$LN5@parseSecti
$LN112@parseSecti:
	DB	0
	DB	11					; 0000000bH
	DB	1
	DB	11					; 0000000bH
	DB	2
	DB	3
	DB	4
	DB	4
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	5
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	4
	DB	6
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	7
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	8
	DB	9
	DB	10					; 0000000aH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39268[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T46910[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39291[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _output$39292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T46921[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T46923[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$39311[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T46932[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	mov	eax, DWORD PTR $T46937[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseSection@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAV32@0CAAW4UErrorCode@@@Z ENDP ; icu_56::RuleHalf::parseSection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ ; icu_56::TransliteratorIDParser::SingleID::~SingleID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSingleID@TransliteratorIDParser@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSingleID@TransliteratorIDParser@icu_56@@QAEPAXI@Z PROC ; icu_56::TransliteratorIDParser::SingleID::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSingleID@TransliteratorIDParser@icu_56@@QAEPAXI@Z ENDP ; icu_56::TransliteratorIDParser::SingleID::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ$1
__ehfuncinfo$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ PROC	; icu_56::TransliteratorIDParser::SingleID::~SingleID, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SingleID@TransliteratorIDParser@icu_56@@QAE@XZ ENDP	; icu_56::TransliteratorIDParser::SingleID::~SingleID
PUBLIC	?removeContext@RuleHalf@icu_56@@QAEXXZ		; icu_56::RuleHalf::removeContext
EXTRN	__imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeContext@RuleHalf@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?removeContext@RuleHalf@icu_56@@QAEXXZ PROC		; icu_56::RuleHalf::removeContext, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbt_pars.cpp
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jl	SHORT $LN2@removeCont
; Line 781
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@removeCont:
; Line 783
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jl	SHORT $LN1@removeCont
; Line 784
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@removeCont:
; Line 786
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], -1
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+85], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+84], 0
; Line 788
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?removeContext@RuleHalf@icu_56@@QAEXXZ ENDP		; icu_56::RuleHalf::removeContext
_TEXT	ENDS
PUBLIC	?isValidOutput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z ; icu_56::RuleHalf::isValidOutput
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidOutput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z
_TEXT	SEGMENT
_c$39407 = -32						; size = 4
_i$39403 = -20						; size = 4
_this$ = -8						; size = 4
_transParser$ = 8					; size = 4
?isValidOutput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z PROC ; icu_56::RuleHalf::isValidOutput, COMDAT
; _this$ = ecx
; Line 794
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 795
	mov	DWORD PTR _i$39403[ebp], 0
$LN3@isValidOut:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$39403[ebp], eax
	jge	SHORT $LN2@isValidOut
; Line 796
	mov	esi, esp
	mov	eax, DWORD PTR _i$39403[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$39407[ebp], eax
; Line 797
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$39407[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$39403[ebp]
	mov	DWORD PTR _i$39403[ebp], ecx
; Line 798
	mov	eax, DWORD PTR _c$39407[ebp]
	push	eax
	mov	ecx, DWORD PTR _transParser$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?isReplacer@ParseData@icu_56@@QAECH@Z	; icu_56::ParseData::isReplacer
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@isValidOut
; Line 799
	xor	al, al
	jmp	SHORT $LN4@isValidOut
$LN1@isValidOut:
; Line 801
	jmp	SHORT $LN3@isValidOut
$LN2@isValidOut:
; Line 802
	mov	al, 1
$LN4@isValidOut:
; Line 803
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidOutput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z ENDP ; icu_56::RuleHalf::isValidOutput
_TEXT	ENDS
PUBLIC	?isValidInput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z ; icu_56::RuleHalf::isValidInput
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidInput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z
_TEXT	SEGMENT
_c$39418 = -32						; size = 4
_i$39414 = -20						; size = 4
_this$ = -8						; size = 4
_transParser$ = 8					; size = 4
?isValidInput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z PROC ; icu_56::RuleHalf::isValidInput, COMDAT
; _this$ = ecx
; Line 809
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 810
	mov	DWORD PTR _i$39414[ebp], 0
$LN3@isValidInp:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$39414[ebp], eax
	jge	SHORT $LN2@isValidInp
; Line 811
	mov	esi, esp
	mov	eax, DWORD PTR _i$39414[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$39418[ebp], eax
; Line 812
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$39418[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$39414[ebp]
	mov	DWORD PTR _i$39414[ebp], ecx
; Line 813
	mov	eax, DWORD PTR _c$39418[ebp]
	push	eax
	mov	ecx, DWORD PTR _transParser$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?isMatcher@ParseData@icu_56@@QAECH@Z	; icu_56::ParseData::isMatcher
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@isValidInp
; Line 814
	xor	al, al
	jmp	SHORT $LN4@isValidInp
$LN1@isValidInp:
; Line 816
	jmp	SHORT $LN3@isValidInp
$LN2@isValidInp:
; Line 817
	mov	al, 1
$LN4@isValidInp:
; Line 818
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidInput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z ENDP ; icu_56::RuleHalf::isValidInput
_TEXT	ENDS
PUBLIC	??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::TransliteratorParser
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:PROC
EXTRN	__imp_?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:PROC
EXTRN	_uprv_deleteUObject_56:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_statusReturn$ = 8					; size = 4
??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::TransliteratorParser, COMDAT
; _this$ = ecx
; Line 832
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _statusReturn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	eax, DWORD PTR _statusReturn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR _statusReturn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	mov	esi, esp
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	mov	eax, DWORD PTR _statusReturn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 833
	mov	esi, esp
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 836
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 837
	mov	esi, esp
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	DWORD PTR __imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 838
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	mov	esi, esp
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::TransliteratorParser
PUBLIC	??_GTransliterationRuleData@icu_56@@QAEPAXI@Z	; icu_56::TransliterationRuleData::`scalar deleting destructor'
PUBLIC	??1TransliteratorParser@icu_56@@QAE@XZ		; icu_56::TransliteratorParser::~TransliteratorParser
EXTRN	__imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z:PROC
EXTRN	__imp_?isEmpty@UVector@icu_56@@QBECXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1TransliteratorParser@icu_56@@QAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??1TransliteratorParser@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1TransliteratorParser@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TransliteratorParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv164 = -316						; size = 4
tv144 = -316						; size = 4
tv132 = -316						; size = 4
tv88 = -316						; size = 4
$T47018 = -308						; size = 4
$T47019 = -296						; size = 4
$T47022 = -284						; size = 4
$T47023 = -272						; size = 4
$T47026 = -260						; size = 4
$T47027 = -248						; size = 4
$T47030 = -236						; size = 4
$T47031 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TransliteratorParser@icu_56@@QAE@XZ PROC		; icu_56::TransliteratorParser::~TransliteratorParser, COMDAT
; _this$ = ecx
; Line 843
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TransliteratorParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
$LN4@Transliter:
; Line 844
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN3@Transliter
; Line 845
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47019[ebp], eax
	mov	eax, DWORD PTR $T47019[ebp]
	mov	DWORD PTR $T47018[ebp], eax
	cmp	DWORD PTR $T47018[ebp], 0
	je	SHORT $LN7@Transliter
	push	1
	mov	ecx, DWORD PTR $T47018[ebp]
	call	??_GTransliterationRuleData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN8@Transliter
$LN7@Transliter:
	mov	DWORD PTR tv88[ebp], 0
$LN8@Transliter:
	jmp	SHORT $LN4@Transliter
$LN3@Transliter:
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T47023[ebp], ecx
	mov	edx, DWORD PTR $T47023[ebp]
	mov	DWORD PTR $T47022[ebp], edx
	cmp	DWORD PTR $T47022[ebp], 0
	je	SHORT $LN9@Transliter
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47022[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47022[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN10@Transliter
$LN9@Transliter:
	mov	DWORD PTR tv132[ebp], 0
$LN10@Transliter:
; Line 847
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR $T47027[ebp], ecx
	mov	edx, DWORD PTR $T47027[ebp]
	mov	DWORD PTR $T47026[ebp], edx
	cmp	DWORD PTR $T47026[ebp], 0
	je	SHORT $LN11@Transliter
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47026[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47026[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN2@Transliter
$LN11@Transliter:
	mov	DWORD PTR tv144[ebp], 0
$LN2@Transliter:
; Line 848
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Transliter
; Line 849
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47031[ebp], eax
	mov	eax, DWORD PTR $T47031[ebp]
	mov	DWORD PTR $T47030[ebp], eax
	cmp	DWORD PTR $T47030[ebp], 0
	je	SHORT $LN13@Transliter
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T47030[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T47030[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN14@Transliter
$LN13@Transliter:
	mov	DWORD PTR tv164[ebp], 0
$LN14@Transliter:
	jmp	$LN2@Transliter
$LN5@Transliter:
; Line 850
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	mov	esi, esp
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	mov	esi, esp
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1TransliteratorParser@icu_56@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1TransliteratorParser@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TransliteratorParser@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TransliteratorParser@icu_56@@QAE@XZ ENDP		; icu_56::TransliteratorParser::~TransliteratorParser
EXTRN	??1TransliterationRuleData@icu_56@@QAE@XZ:PROC	; icu_56::TransliterationRuleData::~TransliterationRuleData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTransliterationRuleData@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTransliterationRuleData@icu_56@@QAEPAXI@Z PROC	; icu_56::TransliterationRuleData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TransliterationRuleData@icu_56@@QAE@XZ ; icu_56::TransliterationRuleData::~TransliterationRuleData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTransliterationRuleData@icu_56@@QAEPAXI@Z ENDP	; icu_56::TransliterationRuleData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parseRules
PUBLIC	?parse@TransliteratorParser@icu_56@@QAEXABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parse@TransliteratorParser@icu_56@@QAEXABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rules$ = 8						; size = 4
_transDirection$ = 12					; size = 4
_pe$ = 16						; size = 4
_ec$ = 20						; size = 4
?parse@TransliteratorParser@icu_56@@QAEXABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::parse, COMDAT
; _this$ = ecx
; Line 856
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 857
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parse@2
; Line 858
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _transDirection$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rules$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parseRules
; Line 859
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 60					; 0000003cH
	mov	ecx, 18					; 00000012H
	mov	edi, DWORD PTR _pe$[ebp]
	rep movsd
$LN2@parse@2:
; Line 861
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?parse@TransliteratorParser@icu_56@@QAEXABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::parse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?orphanCompoundFilter@TransliteratorParser@icu_56@@QAEPAVUnicodeSet@2@XZ ; icu_56::TransliteratorParser::orphanCompoundFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanCompoundFilter@TransliteratorParser@icu_56@@QAEPAVUnicodeSet@2@XZ
_TEXT	SEGMENT
_f$ = -20						; size = 4
_this$ = -8						; size = 4
?orphanCompoundFilter@TransliteratorParser@icu_56@@QAEPAVUnicodeSet@2@XZ PROC ; icu_56::TransliteratorParser::orphanCompoundFilter, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbt_pars.cpp
; Line 866
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 867
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _f$[ebp], ecx
; Line 868
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 869
	mov	eax, DWORD PTR _f$[ebp]
; Line 870
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphanCompoundFilter@TransliteratorParser@icu_56@@QAEPAVUnicodeSet@2@XZ ENDP ; icu_56::TransliteratorParser::orphanCompoundFilter
_TEXT	ENDS
PUBLIC	?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parseRule
PUBLIC	?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parsePragma
PUBLIC	?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z ; icu_56::TransliteratorParser::resemblesPragma
PUBLIC	?setVariableRange@TransliteratorParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::setVariableRange
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
EXTRN	__imp_?removeElementAt@UVector@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	??0TransliterationRuleData@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliterationRuleData::TransliterationRuleData
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	?parseGlobalFilter@TransliteratorIDParser@icu_56@@SAPAVUnicodeSet@2@ABVUnicodeString@2@AAHH1PAV42@@Z:PROC ; icu_56::TransliteratorIDParser::parseGlobalFilter
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z:PROC
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
EXTRN	?parseSingleID@TransliteratorIDParser@icu_56@@SAPAVSingleID@12@ABVUnicodeString@2@AAHHAAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorIDParser::parseSingleID
EXTRN	__imp_?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECHHPB_W@Z:PROC
EXTRN	__imp_?removeAll@Hashtable@icu_56@@QAEXXZ:PROC
EXTRN	__imp_?removeAllElements@UVector@icu_56@@QAEXXZ:PROC
EXTRN	_memset:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv476 = -848						; size = 4
tv400 = -848						; size = 4
tv345 = -848						; size = 4
tv336 = -848						; size = 4
tv326 = -848						; size = 4
tv314 = -848						; size = 4
tv192 = -848						; size = 4
tv172 = -848						; size = 4
tv156 = -848						; size = 4
tv135 = -848						; size = 4
tv83 = -848						; size = 4
$T47058 = -840						; size = 4
$T47059 = -828						; size = 4
$T47062 = -816						; size = 4
$T47063 = -804						; size = 4
$T47066 = -792						; size = 4
$T47067 = -780						; size = 4
$T47070 = -768						; size = 4
$T47071 = -756						; size = 4
$T47074 = -744						; size = 4
$T47075 = -732						; size = 4
$T47078 = -720						; size = 4
$T47079 = -708						; size = 4
$T47082 = -696						; size = 4
$T47083 = -684						; size = 4
$T47086 = -672						; size = 4
$T47087 = -660						; size = 4
$T47090 = -648						; size = 4
$T47091 = -636						; size = 4
$T47094 = -624						; size = 4
$T47095 = -612						; size = 4
_data$39603 = -408					; size = 4
_tempus$39591 = -396					; size = 4
_he$39587 = -384					; size = 4
_pos$39586 = -372					; size = 4
_j$39581 = -360						; size = 4
_data$39574 = -348					; size = 4
_dataVectorSize$39570 = -336				; size = 4
_i$39569 = -324						; size = 4
_ppp$39553 = -312					; size = 4
_f$39524 = -300						; size = 4
_withParens$39523 = -288				; size = 4
_id$39515 = -276					; size = 4
_p$39510 = -264						; size = 4
_c$39498 = -252						; size = 2
_compoundFilterOffset$ = -240				; size = 4
_limit$ = -228						; size = 4
_pos$ = -216						; size = 4
_idBlockResult$ = -204					; size = 64
_str$ = -132						; size = 64
_tempstr$ = -60						; size = 4
_ruleCount$ = -48					; size = 4
_parsingIDs$ = -33					; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_theDirection$ = 12					; size = 4
_status$ = 16						; size = 4
?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::parseRules, COMDAT
; _this$ = ecx
; Line 887
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 836				; 00000344H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-848]
	mov	ecx, 209				; 000000d1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 889
	push	72					; 00000048H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], -1
; Line 892
	mov	BYTE PTR _parsingIDs$[ebp], 1
; Line 893
	mov	DWORD PTR _ruleCount$[ebp], 0
$LN67@parseRules:
; Line 895
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN66@parseRules
; Line 896
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47059[ebp], eax
	mov	eax, DWORD PTR $T47059[ebp]
	mov	DWORD PTR $T47058[ebp], eax
	cmp	DWORD PTR $T47058[ebp], 0
	je	SHORT $LN70@parseRules
	push	1
	mov	ecx, DWORD PTR $T47058[ebp]
	call	??_GTransliterationRuleData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN71@parseRules
$LN70@parseRules:
	mov	DWORD PTR tv83[ebp], 0
$LN71@parseRules:
; Line 897
	jmp	SHORT $LN67@parseRules
$LN66@parseRules:
; Line 898
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN65@parseRules
; Line 899
	jmp	$LN68@parseRules
$LN65@parseRules:
; Line 902
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_?removeAllElements@UVector@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 903
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 904
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _theDirection$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 905
	mov	DWORD PTR _ruleCount$[ebp], 0
; Line 907
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T47063[ebp], ecx
	mov	edx, DWORD PTR $T47063[ebp]
	mov	DWORD PTR $T47062[ebp], edx
	cmp	DWORD PTR $T47062[ebp], 0
	je	SHORT $LN72@parseRules
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47062[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47062[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN73@parseRules
$LN72@parseRules:
	mov	DWORD PTR tv135[ebp], 0
$LN73@parseRules:
; Line 908
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
$LN64@parseRules:
; Line 910
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN63@parseRules
; Line 911
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47067[ebp], eax
	mov	eax, DWORD PTR $T47067[ebp]
	mov	DWORD PTR $T47066[ebp], eax
	cmp	DWORD PTR $T47066[ebp], 0
	je	SHORT $LN74@parseRules
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T47066[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T47066[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN75@parseRules
$LN74@parseRules:
	mov	DWORD PTR tv156[ebp], 0
$LN75@parseRules:
; Line 912
	jmp	$LN64@parseRules
$LN63@parseRules:
; Line 913
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	mov	esi, esp
	call	DWORD PTR __imp_?removeAll@Hashtable@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 914
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47071[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47071[ebp], 0
	je	SHORT $LN76@parseRules
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	push	ecx
	push	0
	mov	ecx, DWORD PTR $T47071[ebp]
	call	??0ParseData@icu_56@@QAE@PBVTransliterationRuleData@1@PBVUVector@1@PBVHashtable@1@@Z ; icu_56::ParseData::ParseData
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN77@parseRules
$LN76@parseRules:
	mov	DWORD PTR tv172[ebp], 0
$LN77@parseRules:
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR $T47070[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T47070[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 915
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	jne	SHORT $LN62@parseRules
; Line 916
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 917
	jmp	$LN68@parseRules
$LN62@parseRules:
; Line 920
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+372], ax
; Line 922
	mov	DWORD PTR _tempstr$[ebp], 0
; Line 923
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 924
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 925
	mov	DWORD PTR _pos$[ebp], 0
; Line 926
	mov	esi, esp
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limit$[ebp], eax
; Line 933
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 934
	mov	DWORD PTR _compoundFilterOffset$[ebp], -1
$LN61@parseRules:
; Line 936
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	$LN60@parseRules
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN60@parseRules
; Line 937
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR tv192[ebp], eax
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv192[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$39498[ebp], ax
; Line 938
	movzx	eax, WORD PTR _c$39498[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@parseRules
; Line 940
	jmp	$LN61@parseRules
$LN59@parseRules:
; Line 943
	movzx	eax, WORD PTR _c$39498[ebp]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN58@parseRules
; Line 944
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 945
	jne	SHORT $LN57@parseRules
; Line 946
	jmp	$LN60@parseRules
$LN57@parseRules:
; Line 948
	jmp	$LN61@parseRules
$LN58@parseRules:
; Line 952
	movzx	eax, WORD PTR _c$39498[ebp]
	cmp	eax, 59					; 0000003bH
	jne	SHORT $LN56@parseRules
; Line 953
	jmp	$LN61@parseRules
$LN56@parseRules:
; Line 956
	mov	eax, DWORD PTR _ruleCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _ruleCount$[ebp], eax
; Line 960
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 964
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 3
	cmp	eax, DWORD PTR _limit$[ebp]
	jg	$LN55@parseRules
	mov	esi, esp
	push	OFFSET _ID_TOKEN
	push	2
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN55@parseRules
; Line 965
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax
; Line 966
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$39498[ebp], ax
$LN54@parseRules:
; Line 967
	movzx	eax, WORD PTR _c$39498[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN53@parseRules
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN53@parseRules
; Line 968
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 969
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$39498[ebp], ax
; Line 970
	jmp	SHORT $LN54@parseRules
$LN53@parseRules:
; Line 972
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _p$39510[ebp], eax
; Line 974
	movsx	eax, BYTE PTR _parsingIDs$[ebp]
	test	eax, eax
	jne	SHORT $LN52@parseRules
; Line 975
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	SHORT $LN51@parseRules
; Line 976
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN50@parseRules
; Line 977
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 978
	jmp	SHORT $LN49@parseRules
$LN50@parseRules:
; Line 979
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@parseRules:
; Line 980
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
$LN51@parseRules:
; Line 982
	mov	BYTE PTR _parsingIDs$[ebp], 1
$LN52@parseRules:
; Line 986
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	lea	eax, DWORD PTR _p$39510[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	?parseSingleID@TransliteratorIDParser@icu_56@@SAPAVSingleID@12@ABVUnicodeString@2@AAHHAAW4UErrorCode@@@Z ; icu_56::TransliteratorIDParser::parseSingleID
	add	esp, 16					; 00000010H
	mov	DWORD PTR _id$39515[ebp], eax
; Line 987
	mov	eax, DWORD PTR _p$39510[ebp]
	cmp	eax, DWORD PTR _pos$[ebp]
	je	$LN48@parseRules
	mov	esi, esp
	push	59					; 0000003bH
	lea	eax, DWORD PTR _p$39510[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parseChar@ICU_Utility@icu_56@@SACABVUnicodeString@2@AAH_W@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN48@parseRules
; Line 990
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN47@parseRules
; Line 991
	mov	esi, esp
	push	59					; 0000003bH
	mov	edi, esp
	mov	eax, DWORD PTR _id$39515[ebp]
	push	eax
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 992
	jmp	SHORT $LN46@parseRules
$LN47@parseRules:
; Line 993
	mov	esi, esp
	push	59					; 0000003bH
	push	0
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 994
	mov	esi, esp
	mov	eax, DWORD PTR _id$39515[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN46@parseRules:
; Line 997
	jmp	$LN45@parseRules
$LN48@parseRules:
; Line 999
	mov	DWORD PTR _withParens$39523[ebp], -1
; Line 1000
	push	0
	lea	eax, DWORD PTR _withParens$39523[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	lea	eax, DWORD PTR _p$39510[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	?parseGlobalFilter@TransliteratorIDParser@icu_56@@SAPAVUnicodeSet@2@ABVUnicodeString@2@AAHH1PAV42@@Z ; icu_56::TransliteratorIDParser::parseGlobalFilter
	add	esp, 20					; 00000014H
	mov	DWORD PTR _f$39524[ebp], eax
; Line 1001
	cmp	DWORD PTR _f$39524[ebp], 0
	je	$LN44@parseRules
; Line 1003
	mov	esi, esp
	push	59					; 0000003bH
	lea	eax, DWORD PTR _p$39510[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parseChar@ICU_Utility@icu_56@@SACABVUnicodeString@2@AAH_W@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	$LN43@parseRules
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+56], 0
	sete	cl
	xor	edx, edx
	cmp	DWORD PTR _withParens$39523[ebp], 0
	sete	dl
	cmp	ecx, edx
	jne	$LN43@parseRules
; Line 1005
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN42@parseRules
; Line 1007
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65559					; 00010017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
; Line 1008
	mov	eax, DWORD PTR _f$39524[ebp]
	mov	DWORD PTR $T47075[ebp], eax
	mov	ecx, DWORD PTR $T47075[ebp]
	mov	DWORD PTR $T47074[ebp], ecx
	cmp	DWORD PTR $T47074[ebp], 0
	je	SHORT $LN78@parseRules
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T47074[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T47074[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv314[ebp], eax
	jmp	SHORT $LN79@parseRules
$LN78@parseRules:
	mov	DWORD PTR tv314[ebp], 0
$LN79@parseRules:
; Line 1009
	jmp	SHORT $LN41@parseRules
$LN42@parseRules:
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$39524[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 1011
	mov	eax, DWORD PTR _ruleCount$[ebp]
	mov	DWORD PTR _compoundFilterOffset$[ebp], eax
$LN41@parseRules:
; Line 1013
	jmp	SHORT $LN40@parseRules
$LN43@parseRules:
; Line 1014
	mov	eax, DWORD PTR _f$39524[ebp]
	mov	DWORD PTR $T47079[ebp], eax
	mov	ecx, DWORD PTR $T47079[ebp]
	mov	DWORD PTR $T47078[ebp], ecx
	cmp	DWORD PTR $T47078[ebp], 0
	je	SHORT $LN80@parseRules
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T47078[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T47078[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv326[ebp], eax
	jmp	SHORT $LN40@parseRules
$LN80@parseRules:
	mov	DWORD PTR tv326[ebp], 0
$LN40@parseRules:
; Line 1016
	jmp	SHORT $LN45@parseRules
$LN44@parseRules:
; Line 1019
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65569					; 00010021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
$LN45@parseRules:
; Line 1022
	mov	eax, DWORD PTR _id$39515[ebp]
	mov	DWORD PTR $T47083[ebp], eax
	mov	ecx, DWORD PTR $T47083[ebp]
	mov	DWORD PTR $T47082[ebp], ecx
	cmp	DWORD PTR $T47082[ebp], 0
	je	SHORT $LN82@parseRules
	push	1
	mov	ecx, DWORD PTR $T47082[ebp]
	call	??_GSingleID@TransliteratorIDParser@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv336[ebp], eax
	jmp	SHORT $LN83@parseRules
$LN82@parseRules:
	mov	DWORD PTR tv336[ebp], 0
$LN83@parseRules:
; Line 1023
	mov	eax, DWORD PTR _p$39510[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 1024
	jmp	$LN38@parseRules
$LN55@parseRules:
; Line 1025
	movsx	eax, BYTE PTR _parsingIDs$[ebp]
	test	eax, eax
	je	$LN37@parseRules
; Line 1026
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47087[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T47087[ebp], 0
	je	SHORT $LN84@parseRules
	mov	esi, esp
	lea	eax, DWORD PTR _idBlockResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47087[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T47087[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T47087[ebp]
	mov	DWORD PTR tv345[ebp], edx
	jmp	SHORT $LN85@parseRules
$LN84@parseRules:
	mov	DWORD PTR tv345[ebp], 0
$LN85@parseRules:
	mov	eax, DWORD PTR tv345[ebp]
	mov	DWORD PTR $T47086[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T47086[ebp]
	mov	DWORD PTR _tempstr$[ebp], ecx
; Line 1028
	cmp	DWORD PTR _tempstr$[ebp], 0
	jne	SHORT $LN36@parseRules
; Line 1029
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1030
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN68@parseRules
$LN36@parseRules:
; Line 1032
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN35@parseRules
; Line 1033
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tempstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1034
	jmp	SHORT $LN34@parseRules
$LN35@parseRules:
; Line 1035
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _tempstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@parseRules:
; Line 1036
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1037
	mov	BYTE PTR _parsingIDs$[ebp], 0
; Line 1038
	mov	esi, esp
	push	1112					; 00000458H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47091[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T47091[ebp], 0
	je	SHORT $LN86@parseRules
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47091[ebp]
	call	??0TransliterationRuleData@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::TransliterationRuleData::TransliterationRuleData
	mov	DWORD PTR tv400[ebp], eax
	jmp	SHORT $LN87@parseRules
$LN86@parseRules:
	mov	DWORD PTR tv400[ebp], 0
$LN87@parseRules:
	mov	ecx, DWORD PTR tv400[ebp]
	mov	DWORD PTR $T47090[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T47090[ebp]
	mov	DWORD PTR [edx+52], eax
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN33@parseRules
; Line 1041
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1042
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN68@parseRules
$LN33@parseRules:
; Line 1044
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+4], eax
; Line 1050
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	63743					; 0000f8ffH
	push	61440					; 0000f000H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setVariableRange@TransliteratorParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::setVariableRange
$LN37@parseRules:
; Line 1053
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z ; icu_56::TransliteratorParser::resemblesPragma
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN32@parseRules
; Line 1054
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parsePragma
	mov	DWORD PTR _ppp$39553[ebp], eax
; Line 1055
	cmp	DWORD PTR _ppp$39553[ebp], 0
	jge	SHORT $LN31@parseRules
; Line 1056
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65562					; 0001001aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
$LN31@parseRules:
; Line 1058
	mov	eax, DWORD PTR _ppp$39553[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 1060
	jmp	SHORT $LN38@parseRules
$LN32@parseRules:
; Line 1061
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parseRule
	mov	DWORD PTR _pos$[ebp], eax
$LN38@parseRules:
; Line 1064
	jmp	$LN61@parseRules
$LN60@parseRules:
; Line 1066
	movsx	eax, BYTE PTR _parsingIDs$[ebp]
	test	eax, eax
	je	$LN29@parseRules
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN29@parseRules
; Line 1067
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47095[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T47095[ebp], 0
	je	SHORT $LN88@parseRules
	mov	esi, esp
	lea	eax, DWORD PTR _idBlockResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47095[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T47095[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T47095[ebp]
	mov	DWORD PTR tv476[ebp], edx
	jmp	SHORT $LN89@parseRules
$LN88@parseRules:
	mov	DWORD PTR tv476[ebp], 0
$LN89@parseRules:
	mov	eax, DWORD PTR tv476[ebp]
	mov	DWORD PTR $T47094[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T47094[ebp]
	mov	DWORD PTR _tempstr$[ebp], ecx
; Line 1069
	cmp	DWORD PTR _tempstr$[ebp], 0
	jne	SHORT $LN28@parseRules
; Line 1070
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1071
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN68@parseRules
$LN28@parseRules:
; Line 1073
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN27@parseRules
; Line 1074
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tempstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1075
	jmp	SHORT $LN26@parseRules
$LN27@parseRules:
; Line 1076
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _tempstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@parseRules:
	jmp	SHORT $LN25@parseRules
$LN29@parseRules:
; Line 1078
	movsx	eax, BYTE PTR _parsingIDs$[ebp]
	test	eax, eax
	jne	SHORT $LN25@parseRules
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	SHORT $LN25@parseRules
; Line 1079
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN23@parseRules
; Line 1080
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1081
	jmp	SHORT $LN25@parseRules
$LN23@parseRules:
; Line 1082
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@parseRules:
; Line 1085
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN21@parseRules
; Line 1087
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dataVectorSize$39570[ebp], eax
; Line 1088
	mov	DWORD PTR _i$39569[ebp], 0
	jmp	SHORT $LN20@parseRules
$LN19@parseRules:
	mov	eax, DWORD PTR _i$39569[ebp]
	add	eax, 1
	mov	DWORD PTR _i$39569[ebp], eax
$LN20@parseRules:
	mov	eax, DWORD PTR _i$39569[ebp]
	cmp	eax, DWORD PTR _dataVectorSize$39570[ebp]
	jge	$LN18@parseRules
; Line 1089
	mov	esi, esp
	mov	eax, DWORD PTR _i$39569[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _data$39574[ebp], eax
; Line 1090
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _data$39574[ebp]
	mov	DWORD PTR [ecx+1108], eax
; Line 1091
	mov	eax, DWORD PTR _data$39574[ebp]
	cmp	DWORD PTR [eax+1108], 0
	jne	SHORT $LN17@parseRules
; Line 1092
	mov	eax, DWORD PTR _data$39574[ebp]
	mov	DWORD PTR [eax+1100], 0
; Line 1093
	jmp	$LN16@parseRules
$LN17@parseRules:
; Line 1094
	mov	eax, DWORD PTR _data$39574[ebp]
	mov	ecx, DWORD PTR [eax+1108]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _data$39574[ebp]
	mov	DWORD PTR [edx+1100], eax
; Line 1096
	mov	eax, DWORD PTR _data$39574[ebp]
	cmp	DWORD PTR [eax+1100], 0
	jne	SHORT $LN15@parseRules
; Line 1097
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1098
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN68@parseRules
$LN15@parseRules:
; Line 1100
	cmp	DWORD PTR _i$39569[ebp], 0
	sete	al
	mov	ecx, DWORD PTR _data$39574[ebp]
	mov	BYTE PTR [ecx+1104], al
$LN16@parseRules:
; Line 1103
	mov	DWORD PTR _j$39581[ebp], 0
	jmp	SHORT $LN14@parseRules
$LN13@parseRules:
	mov	eax, DWORD PTR _j$39581[ebp]
	add	eax, 1
	mov	DWORD PTR _j$39581[ebp], eax
$LN14@parseRules:
	mov	eax, DWORD PTR _data$39574[ebp]
	mov	ecx, DWORD PTR _j$39581[ebp]
	cmp	ecx, DWORD PTR [eax+1108]
	jge	SHORT $LN12@parseRules
; Line 1105
	mov	esi, esp
	mov	eax, DWORD PTR _j$39581[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _data$39574[ebp]
	mov	edx, DWORD PTR [ecx+1100]
	mov	ecx, DWORD PTR _j$39581[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 1106
	jmp	SHORT $LN13@parseRules
$LN12@parseRules:
; Line 1108
	mov	ecx, DWORD PTR _data$39574[ebp]
	add	ecx, 1044				; 00000414H
	mov	esi, esp
	call	DWORD PTR __imp_?removeAll@Hashtable@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1109
	mov	DWORD PTR _pos$39586[ebp], -1
; Line 1110
	mov	esi, esp
	lea	eax, DWORD PTR _pos$39586[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _he$39587[ebp], eax
$LN11@parseRules:
; Line 1111
	cmp	DWORD PTR _he$39587[ebp], 0
	je	$LN10@parseRules
; Line 1112
	mov	eax, DWORD PTR _he$39587[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _he$39587[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tempus$39591[ebp], eax
; Line 1113
	cmp	DWORD PTR _tempus$39591[ebp], 0
	jne	SHORT $LN9@parseRules
; Line 1114
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1115
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN68@parseRules
$LN9@parseRules:
; Line 1118
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tempus$39591[ebp]
	push	ecx
	mov	edx, DWORD PTR _he$39587[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _data$39574[ebp]
	add	ecx, 1044				; 00000414H
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1119
	mov	esi, esp
	lea	eax, DWORD PTR _pos$39586[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _he$39587[ebp], eax
; Line 1120
	jmp	$LN11@parseRules
$LN10@parseRules:
; Line 1121
	jmp	$LN19@parseRules
$LN18@parseRules:
; Line 1122
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_?removeAllElements@UVector@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1125
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN8@parseRules
; Line 1127
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN5@parseRules
	cmp	DWORD PTR _compoundFilterOffset$[ebp], 1
	jne	SHORT $LN6@parseRules
$LN5@parseRules:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 1
	jne	SHORT $LN8@parseRules
	mov	eax, DWORD PTR _compoundFilterOffset$[ebp]
	cmp	eax, DWORD PTR _ruleCount$[ebp]
	je	SHORT $LN8@parseRules
$LN6@parseRules:
; Line 1128
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65558			; 00010016H
$LN8@parseRules:
; Line 1132
	mov	DWORD PTR _i$39569[ebp], 0
	jmp	SHORT $LN4@parseRules
$LN3@parseRules:
	mov	eax, DWORD PTR _i$39569[ebp]
	add	eax, 1
	mov	DWORD PTR _i$39569[ebp], eax
$LN4@parseRules:
	mov	eax, DWORD PTR _i$39569[ebp]
	cmp	eax, DWORD PTR _dataVectorSize$39570[ebp]
	jge	SHORT $LN2@parseRules
; Line 1133
	mov	esi, esp
	mov	eax, DWORD PTR _i$39569[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _data$39603[ebp], eax
; Line 1134
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR _data$39603[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _data$39603[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1135
	jmp	SHORT $LN3@parseRules
$LN2@parseRules:
; Line 1136
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN21@parseRules
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN21@parseRules
; Line 1137
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	DWORD PTR __imp_?removeElementAt@UVector@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@parseRules:
; Line 1140
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN68@parseRules:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN106@parseRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 848				; 00000350H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN106@parseRules:
	DD	5
	DD	$LN105@parseRules
$LN105@parseRules:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN99@parseRules
	DD	-204					; ffffff34H
	DD	64					; 00000040H
	DD	$LN100@parseRules
	DD	-264					; fffffef8H
	DD	4
	DD	$LN101@parseRules
	DD	-288					; fffffee0H
	DD	4
	DD	$LN102@parseRules
	DD	-372					; fffffe8cH
	DD	4
	DD	$LN103@parseRules
$LN103@parseRules:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN102@parseRules:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN101@parseRules:
	DB	112					; 00000070H
	DB	0
$LN100@parseRules:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN99@parseRules:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47071[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _idBlockResult$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T47087[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T47091[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T47095[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-852]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseRules@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::parseRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setVariableRange@TransliteratorParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_status$ = 16						; size = 4
?setVariableRange@TransliteratorParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::setVariableRange, COMDAT
; _this$ = ecx
; Line 1145
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1146
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jg	SHORT $LN2@setVariabl
	cmp	DWORD PTR _start$[ebp], 0
	jl	SHORT $LN2@setVariabl
	cmp	DWORD PTR _end$[ebp], 65535		; 0000ffffH
	jle	SHORT $LN3@setVariabl
$LN2@setVariabl:
; Line 1147
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65562			; 0001001aH
; Line 1148
	jmp	SHORT $LN4@setVariabl
$LN3@setVariabl:
; Line 1151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	dx, WORD PTR _start$[ebp]
	mov	WORD PTR [ecx+1106], dx
; Line 1152
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@setVariabl
; Line 1153
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _start$[ebp]
	mov	WORD PTR [eax+304], cx
; Line 1154
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+306], ax
$LN4@setVariabl:
; Line 1156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setVariableRange@TransliteratorParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::setVariableRange
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z
_TEXT	SEGMENT
tv71 = -205						; size = 1
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z PROC ; icu_56::TransliteratorParser::checkVariableRange, COMDAT
; _this$ = ecx
; Line 1163
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	movzx	edx, WORD PTR [ecx+1106]
	cmp	DWORD PTR _ch$[ebp], edx
	jl	SHORT $LN3@checkVaria
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+306]
	cmp	DWORD PTR _ch$[ebp], ecx
	jge	SHORT $LN3@checkVaria
	mov	BYTE PTR tv71[ebp], 0
	jmp	SHORT $LN4@checkVaria
$LN3@checkVaria:
	mov	BYTE PTR tv71[ebp], 1
$LN4@checkVaria:
	mov	al, BYTE PTR tv71[ebp]
; Line 1165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?checkVariableRange@TransliteratorParser@icu_56@@ABECH@Z ENDP ; icu_56::TransliteratorParser::checkVariableRange
_TEXT	ENDS
PUBLIC	?pragmaMaximumBackup@TransliteratorParser@icu_56@@AAEXH@Z ; icu_56::TransliteratorParser::pragmaMaximumBackup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pragmaMaximumBackup@TransliteratorParser@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?pragmaMaximumBackup@TransliteratorParser@icu_56@@AAEXH@Z PROC ; icu_56::TransliteratorParser::pragmaMaximumBackup, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1173
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?pragmaMaximumBackup@TransliteratorParser@icu_56@@AAEXH@Z ENDP ; icu_56::TransliteratorParser::pragmaMaximumBackup
_TEXT	ENDS
PUBLIC	?pragmaNormalizeRules@TransliteratorParser@icu_56@@AAEXW4UNormalizationMode@@@Z ; icu_56::TransliteratorParser::pragmaNormalizeRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pragmaNormalizeRules@TransliteratorParser@icu_56@@AAEXW4UNormalizationMode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?pragmaNormalizeRules@TransliteratorParser@icu_56@@AAEXW4UNormalizationMode@@@Z PROC ; icu_56::TransliteratorParser::pragmaNormalizeRules, COMDAT
; _this$ = ecx
; Line 1179
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1181
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?pragmaNormalizeRules@TransliteratorParser@icu_56@@AAEXW4UNormalizationMode@@@Z ENDP ; icu_56::TransliteratorParser::pragmaNormalizeRules
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?parsePattern@ICU_Utility@icu_56@@SAHABVUnicodeString@2@HH0PAH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z$0
__ehfuncinfo$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z
_TEXT	SEGMENT
tv80 = -300						; size = 4
tv81 = -296						; size = 4
$T47135 = -285						; size = 1
$T39641 = -276						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_pos$ = 12						; size = 4
_limit$ = 16						; size = 4
?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z PROC ; icu_56::TransliteratorParser::resemblesPragma, COMDAT
; Line 1199
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1201
	mov	esi, esp
	push	0
	mov	edi, esp
	push	4
	push	OFFSET _PRAGMA_USE
	push	1
	lea	ecx, DWORD PTR $T39641[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv80[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parsePattern@ICU_Utility@icu_56@@SAHABVUnicodeString@2@HH0PAH@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	setge	dl
	mov	BYTE PTR $T47135[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39641[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T47135[ebp]
; Line 1202
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39641[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resemblesPragma@TransliteratorParser@icu_56@@CACABVUnicodeString@2@HH@Z ENDP ; icu_56::TransliteratorParser::resemblesPragma
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$3
__ehfuncinfo$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv171 = -544						; size = 4
tv169 = -544						; size = 4
tv167 = -544						; size = 4
tv165 = -544						; size = 4
tv181 = -540						; size = 4
tv178 = -540						; size = 4
tv175 = -540						; size = 4
tv172 = -540						; size = 4
$T39652 = -532						; size = 64
$T39654 = -460						; size = 64
$T39656 = -388						; size = 64
$T39658 = -316						; size = 64
_p$ = -52						; size = 4
_array$ = -40						; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_pos$ = 12						; size = 4
_limit$ = 16						; size = 4
_status$ = 20						; size = 4
?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::parsePragma, COMDAT
; _this$ = ecx
; Line 1213
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 532				; 00000214H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-544]
	mov	ecx, 133				; 00000085H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1219
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 4
	mov	DWORD PTR _pos$[ebp], eax
; Line 1226
	mov	esi, esp
	lea	eax, DWORD PTR _array$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _PRAGMA_VARIABLE_RANGE
	push	1
	lea	ecx, DWORD PTR $T39652[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv165[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?parsePattern@ICU_Utility@icu_56@@SAHABVUnicodeString@2@HH0PAH@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39652[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1227
	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN4@parsePragm
; Line 1228
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _array$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _array$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setVariableRange@TransliteratorParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::setVariableRange
; Line 1229
	mov	eax, DWORD PTR _p$[ebp]
	jmp	$LN5@parsePragm
$LN4@parsePragm:
; Line 1232
	mov	esi, esp
	lea	eax, DWORD PTR _array$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _PRAGMA_MAXIMUM_BACKUP
	push	1
	lea	ecx, DWORD PTR $T39654[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv175[ebp], eax
	mov	ecx, DWORD PTR tv175[ebp]
	mov	DWORD PTR tv167[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv167[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?parsePattern@ICU_Utility@icu_56@@SAHABVUnicodeString@2@HH0PAH@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39654[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1233
	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN3@parsePragm
; Line 1234
	mov	eax, DWORD PTR _array$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pragmaMaximumBackup@TransliteratorParser@icu_56@@AAEXH@Z ; icu_56::TransliteratorParser::pragmaMaximumBackup
; Line 1235
	mov	eax, DWORD PTR _p$[ebp]
	jmp	$LN5@parsePragm
$LN3@parsePragm:
; Line 1238
	mov	esi, esp
	push	0
	mov	edi, esp
	push	-1
	push	OFFSET _PRAGMA_NFD_RULES
	push	1
	lea	ecx, DWORD PTR $T39656[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv178[ebp], eax
	mov	eax, DWORD PTR tv178[ebp]
	mov	DWORD PTR tv169[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv169[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parsePattern@ICU_Utility@icu_56@@SAHABVUnicodeString@2@HH0PAH@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39656[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1239
	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN2@parsePragm
; Line 1240
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pragmaNormalizeRules@TransliteratorParser@icu_56@@AAEXW4UNormalizationMode@@@Z ; icu_56::TransliteratorParser::pragmaNormalizeRules
; Line 1241
	mov	eax, DWORD PTR _p$[ebp]
	jmp	$LN5@parsePragm
$LN2@parsePragm:
; Line 1244
	mov	esi, esp
	push	0
	mov	edi, esp
	push	-1
	push	OFFSET _PRAGMA_NFC_RULES
	push	1
	lea	ecx, DWORD PTR $T39658[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv181[ebp], eax
	mov	eax, DWORD PTR tv181[ebp]
	mov	DWORD PTR tv171[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv171[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	call	DWORD PTR __imp_?parsePattern@ICU_Utility@icu_56@@SAHABVUnicodeString@2@HH0PAH@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T39658[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1245
	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@parsePragm
; Line 1246
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pragmaNormalizeRules@TransliteratorParser@icu_56@@AAEXW4UNormalizationMode@@@Z ; icu_56::TransliteratorParser::pragmaNormalizeRules
; Line 1247
	mov	eax, DWORD PTR _p$[ebp]
	jmp	SHORT $LN5@parsePragm
$LN1@parsePragm:
; Line 1251
	or	eax, -1
$LN5@parsePragm:
; Line 1252
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@parsePragm
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 544				; 00000220H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN14@parsePragm:
	DD	1
	DD	$LN13@parsePragm
$LN13@parsePragm:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN11@parsePragm
$LN11@parsePragm:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39652[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39654[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39656[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T39658[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-548]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parsePragma@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::parsePragma
PUBLIC	__$ArrayPad$
EXTRN	_uprv_free_56:PROC
EXTRN	??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliterationRule::TransliterationRule
EXTRN	__imp_?toArray@UVector@icu_56@@QBEPAPAXPAPAX@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$3
__ehfuncinfo$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv437 = -756						; size = 4
tv227 = -756						; size = 4
tv147 = -756						; size = 4
$T47162 = -748						; size = 4
$T47163 = -736						; size = 4
$T47164 = -724						; size = 4
$T47165 = -712						; size = 4
$T47166 = -700						; size = 4
$T47167 = -688						; size = 4
$T47168 = -676						; size = 4
$T47169 = -664						; size = 4
$T47170 = -652						; size = 4
$T47173 = -640						; size = 4
$T47174 = -628						; size = 4
$T47175 = -616						; size = 4
$T47176 = -604						; size = 4
$T47177 = -592						; size = 4
$T47178 = -580						; size = 4
$T47179 = -568						; size = 4
$T47180 = -556						; size = 4
$T47183 = -544						; size = 4
$T47184 = -532						; size = 4
_temptr$ = -328						; size = 4
_segmentsArray$ = -316					; size = 4
_value$39713 = -304					; size = 4
_right$ = -292						; size = 4
_left$ = -280						; size = 4
__right$ = -268						; size = 96
__left$ = -164						; size = 96
_i$ = -60						; size = 4
_op$ = -48						; size = 2
_start$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_pos$ = 12						; size = 4
_limit$ = 16						; size = 4
_status$ = 20						; size = 4
?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::parseRule, COMDAT
; _this$ = ecx
; Line 1267
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 744				; 000002e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-756]
	mov	ecx, 186				; 000000baH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1269
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 1270
	xor	eax, eax
	mov	WORD PTR _op$[ebp], ax
; Line 1274
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_?removeAllElements@UVector@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1278
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __left$[ebp]
	call	??0RuleHalf@icu_56@@QAE@AAVTransliteratorParser@1@@Z ; icu_56::RuleHalf::RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __right$[ebp]
	call	??0RuleHalf@icu_56@@QAE@AAVTransliteratorParser@1@@Z ; icu_56::RuleHalf::RuleHalf
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1279
	lea	eax, DWORD PTR __left$[ebp]
	mov	DWORD PTR _left$[ebp], eax
; Line 1280
	lea	eax, DWORD PTR __right$[ebp]
	mov	DWORD PTR _right$[ebp], eax
; Line 1282
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1283
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _left$[ebp]
	call	?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parse
	mov	DWORD PTR _pos$[ebp], eax
; Line 1284
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN41@parseRule
; Line 1285
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR $T47162[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47162[ebp]
	jmp	$LN42@parseRule
$LN41@parseRule:
; Line 1288
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	je	SHORT $LN39@parseRule
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _op$[ebp], ax
	movzx	edx, WORD PTR _op$[ebp]
	push	edx
	push	OFFSET _gOPERATORS
	call	_u_strchr_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN40@parseRule
$LN39@parseRule:
; Line 1289
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65547					; 0001000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47163[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47163[ebp]
	jmp	$LN42@parseRule
$LN40@parseRule:
; Line 1291
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 1295
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 60					; 0000003cH
	jne	SHORT $LN38@parseRule
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN38@parseRule
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 62					; 0000003eH
	jne	SHORT $LN38@parseRule
; Line 1296
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 1297
	mov	eax, 126				; 0000007eH
	mov	WORD PTR _op$[ebp], ax
$LN38@parseRule:
; Line 1301
	movzx	eax, WORD PTR _op$[ebp]
	mov	DWORD PTR tv147[ebp], eax
	cmp	DWORD PTR tv147[ebp], 8592		; 00002190H
	je	SHORT $LN34@parseRule
	cmp	DWORD PTR tv147[ebp], 8594		; 00002192H
	je	SHORT $LN35@parseRule
	cmp	DWORD PTR tv147[ebp], 8596		; 00002194H
	je	SHORT $LN33@parseRule
	jmp	SHORT $LN36@parseRule
$LN35@parseRule:
; Line 1303
	mov	eax, 62					; 0000003eH
	mov	WORD PTR _op$[ebp], ax
; Line 1304
	jmp	SHORT $LN36@parseRule
$LN34@parseRule:
; Line 1306
	mov	eax, 60					; 0000003cH
	mov	WORD PTR _op$[ebp], ax
; Line 1307
	jmp	SHORT $LN36@parseRule
$LN33@parseRule:
; Line 1309
	mov	eax, 126				; 0000007eH
	mov	WORD PTR _op$[ebp], ax
$LN36@parseRule:
; Line 1313
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _right$[ebp]
	call	?parse@RuleHalf@icu_56@@QAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::RuleHalf::parse
	mov	DWORD PTR _pos$[ebp], eax
; Line 1314
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN32@parseRule
; Line 1315
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR $T47164[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47164[ebp]
	jmp	$LN42@parseRule
$LN32@parseRule:
; Line 1318
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN31@parseRule
; Line 1319
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 59					; 0000003bH
	jne	SHORT $LN30@parseRule
; Line 1320
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 1321
	jmp	SHORT $LN31@parseRule
$LN30@parseRule:
; Line 1323
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65555					; 00010013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47165[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47165[ebp]
	jmp	$LN42@parseRule
$LN31@parseRule:
; Line 1327
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 61					; 0000003dH
	jne	$LN28@parseRule
; Line 1335
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN27@parseRule
; Line 1337
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65536					; 00010000H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47166[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47166[ebp]
	jmp	$LN42@parseRule
$LN27@parseRule:
; Line 1339
	mov	esi, esp
	mov	ecx, DWORD PTR _left$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN25@parseRule
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _left$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+306]
	cmp	eax, edx
	je	SHORT $LN26@parseRule
$LN25@parseRule:
; Line 1341
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65541					; 00010005H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47167[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47167[ebp]
	jmp	$LN42@parseRule
$LN26@parseRule:
; Line 1344
	mov	eax, DWORD PTR _left$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	jne	SHORT $LN23@parseRule
	mov	eax, DWORD PTR _left$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	jne	SHORT $LN23@parseRule
	mov	eax, DWORD PTR _right$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	jne	SHORT $LN23@parseRule
	mov	eax, DWORD PTR _right$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	je	SHORT $LN24@parseRule
$LN23@parseRule:
; Line 1345
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65541					; 00010005H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47168[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47168[ebp]
	jmp	$LN42@parseRule
$LN24@parseRule:
; Line 1348
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47170[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T47170[ebp], 0
	je	SHORT $LN44@parseRule
	mov	esi, esp
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47170[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T47170[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T47170[ebp]
	mov	DWORD PTR tv227[ebp], edx
	jmp	SHORT $LN45@parseRule
$LN44@parseRule:
	mov	DWORD PTR tv227[ebp], 0
$LN45@parseRule:
	mov	eax, DWORD PTR tv227[ebp]
	mov	DWORD PTR $T47169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T47169[ebp]
	mov	DWORD PTR _value$39713[ebp], ecx
; Line 1350
	cmp	DWORD PTR _value$39713[ebp], 0
	jne	SHORT $LN22@parseRule
; Line 1351
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47173[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47173[ebp]
	jmp	$LN42@parseRule
$LN22@parseRule:
; Line 1353
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$39713[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 308				; 00000134H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+306]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+306], cx
; Line 1355
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR $T47174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47174[ebp]
	jmp	$LN42@parseRule
$LN28@parseRule:
; Line 1360
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN21@parseRule
; Line 1363
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65554					; 00010012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47175[ebp]
	jmp	$LN42@parseRule
$LN21@parseRule:
; Line 1367
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	edi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jle	SHORT $LN20@parseRule
; Line 1368
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65553					; 00010011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
$LN20@parseRule:
; Line 1370
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN19@parseRule
$LN18@parseRule:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@parseRule:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN17@parseRule
; Line 1371
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN16@parseRule
; Line 1372
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65568					; 00010020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
$LN16@parseRule:
; Line 1374
	jmp	SHORT $LN18@parseRule
$LN17@parseRule:
; Line 1375
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@parseRule
$LN14@parseRule:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@parseRule:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN13@parseRule
; Line 1376
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN12@parseRule
; Line 1377
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65568					; 00010020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
$LN12@parseRule:
; Line 1379
	jmp	SHORT $LN14@parseRule
$LN13@parseRule:
; Line 1384
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 126				; 0000007eH
	je	SHORT $LN11@parseRule
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+56], 0
	sete	cl
	movzx	edx, WORD PTR _op$[ebp]
	xor	eax, eax
	cmp	edx, 62					; 0000003eH
	sete	al
	cmp	ecx, eax
	je	SHORT $LN11@parseRule
; Line 1385
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR $T47176[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47176[ebp]
	jmp	$LN42@parseRule
$LN11@parseRule:
; Line 1390
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 1
	jne	SHORT $LN10@parseRule
; Line 1391
	lea	eax, DWORD PTR __right$[ebp]
	mov	DWORD PTR _left$[ebp], eax
; Line 1392
	lea	eax, DWORD PTR __left$[ebp]
	mov	DWORD PTR _right$[ebp], eax
$LN10@parseRule:
; Line 1398
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 126				; 0000007eH
	jne	SHORT $LN9@parseRule
; Line 1399
	mov	ecx, DWORD PTR _right$[ebp]
	call	?removeContext@RuleHalf@icu_56@@QAEXXZ	; icu_56::RuleHalf::removeContext
; Line 1400
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+64], -1
; Line 1401
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+76], 0
$LN9@parseRule:
; Line 1405
	mov	eax, DWORD PTR _left$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jge	SHORT $LN8@parseRule
; Line 1406
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+68], 0
$LN8@parseRule:
; Line 1408
	mov	eax, DWORD PTR _left$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jge	SHORT $LN7@parseRule
; Line 1409
	mov	esi, esp
	mov	ecx, DWORD PTR _left$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [ecx+72], eax
$LN7@parseRule:
; Line 1428
	mov	eax, DWORD PTR _right$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jge	$LN5@parseRule
	mov	eax, DWORD PTR _right$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jge	$LN5@parseRule
	mov	eax, DWORD PTR _left$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jge	SHORT $LN5@parseRule
	mov	eax, DWORD PTR _right$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN4@parseRule
	mov	eax, DWORD PTR _right$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jl	SHORT $LN5@parseRule
$LN4@parseRule:
	mov	eax, DWORD PTR _right$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	jne	SHORT $LN5@parseRule
	mov	eax, DWORD PTR _right$[ebp]
	movsx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	jne	SHORT $LN5@parseRule
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _left$[ebp]
	call	?isValidInput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z ; icu_56::RuleHalf::isValidInput
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@parseRule
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _right$[ebp]
	call	?isValidOutput@RuleHalf@icu_56@@QAECAAVTransliteratorParser@2@@Z ; icu_56::RuleHalf::isValidOutput
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@parseRule
	mov	eax, DWORD PTR _left$[ebp]
	mov	ecx, DWORD PTR _left$[ebp]
	mov	edx, DWORD PTR [eax+68]
	cmp	edx, DWORD PTR [ecx+72]
	jle	SHORT $LN6@parseRule
$LN5@parseRule:
; Line 1430
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	65537					; 00010001H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47177[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47177[ebp]
	jmp	$LN42@parseRule
$LN6@parseRule:
; Line 1434
	mov	DWORD PTR _segmentsArray$[ebp], 0
; Line 1435
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN3@parseRule
; Line 1436
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _segmentsArray$[ebp], eax
; Line 1438
	cmp	DWORD PTR _segmentsArray$[ebp], 0
	jne	SHORT $LN2@parseRule
; Line 1439
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47178[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47178[ebp]
	jmp	$LN42@parseRule
$LN2@parseRule:
; Line 1441
	mov	esi, esp
	mov	eax, DWORD PTR _segmentsArray$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_?toArray@UVector@icu_56@@QBEPAPAXPAPAX@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@parseRule:
; Line 1450
	mov	esi, esp
	push	108					; 0000006cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T47180[ebp], 0
	je	$LN46@parseRule
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _left$[ebp]
	movzx	ecx, BYTE PTR [eax+85]
	push	ecx
	mov	edx, DWORD PTR _left$[ebp]
	movzx	eax, BYTE PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _segmentsArray$[ebp]
	push	ecx
	mov	edx, DWORD PTR _right$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _left$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	mov	eax, DWORD PTR _left$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _left$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T47180[ebp]
	call	??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z ; icu_56::TransliterationRule::TransliterationRule
	mov	DWORD PTR tv437[ebp], eax
	jmp	SHORT $LN47@parseRule
$LN46@parseRule:
	mov	DWORD PTR tv437[ebp], 0
$LN47@parseRule:
	mov	eax, DWORD PTR tv437[ebp]
	mov	DWORD PTR $T47179[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T47179[ebp]
	mov	DWORD PTR _temptr$[ebp], ecx
; Line 1452
	cmp	DWORD PTR _temptr$[ebp], 0
	jne	SHORT $LN1@parseRule
; Line 1453
	mov	eax, DWORD PTR _segmentsArray$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1454
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ; icu_56::TransliteratorParser::syntaxError
	mov	DWORD PTR $T47183[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47183[ebp]
	jmp	SHORT $LN42@parseRule
$LN1@parseRule:
; Line 1457
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _temptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+52]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1459
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR $T47184[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __right$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __left$[ebp]
	call	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
	mov	eax, DWORD PTR $T47184[ebp]
$LN42@parseRule:
; Line 1460
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN56@parseRule
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 756				; 000002f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN56@parseRule:
	DD	2
	DD	$LN55@parseRule
$LN55@parseRule:
	DD	-164					; ffffff5cH
	DD	96					; 00000060H
	DD	$LN52@parseRule
	DD	-268					; fffffef4H
	DD	96					; 00000060H
	DD	$LN53@parseRule
$LN53@parseRule:
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN52@parseRule:
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR __left$[ebp]
	jmp	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR __right$[ebp]
	jmp	??1RuleHalf@icu_56@@QAE@XZ		; icu_56::RuleHalf::~RuleHalf
__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T47170[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T47180[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-760]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseRule@TransliteratorParser@icu_56@@AAEHABVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::parseRule
EXTRN	_uprv_min_56:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z:PROC
EXTRN	_uprv_max_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z
_TEXT	SEGMENT
_stop$ = -44						; size = 4
_start$ = -32						; size = 4
_LEN$ = -20						; size = 4
_this$ = -8						; size = 4
_parseErrorCode$ = 8					; size = 4
_rule$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z PROC ; icu_56::TransliteratorParser::syntaxError, COMDAT
; _this$ = ecx
; Line 1475
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1476
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 1477
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 1480
	mov	DWORD PTR _LEN$[ebp], 15		; 0000000fH
; Line 1481
	push	0
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 15					; 0000000fH
	push	eax
	call	_uprv_max_56
	add	esp, 8
	mov	DWORD PTR _start$[ebp], eax
; Line 1482
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _stop$[ebp], eax
; Line 1484
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _stop$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1486
	mov	eax, DWORD PTR _stop$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+eax*2+68], cx
; Line 1489
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 1490
	mov	esi, esp
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 15					; 0000000fH
	push	eax
	call	_uprv_min_56
	add	esp, 8
	mov	DWORD PTR _stop$[ebp], eax
; Line 1492
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	push	eax
	mov	ecx, DWORD PTR _stop$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1494
	mov	eax, DWORD PTR _stop$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+eax*2+100], cx
; Line 1496
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _parseErrorCode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1497
	mov	eax, DWORD PTR _pos$[ebp]
; Line 1499
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?syntaxError@TransliteratorParser@icu_56@@AAEHW4UErrorCode@@ABVUnicodeString@2@HAAW43@@Z ENDP ; icu_56::TransliteratorParser::syntaxError
_TEXT	ENDS
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAVParsePosition@1@IPBVSymbolTable@1@AAW4UErrorCode@@@Z:PROC
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv70 = -256						; size = 4
$T47203 = -248						; size = 4
$T47204 = -236						; size = 4
_set$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_pos$ = 12						; size = 4
_status$ = 16						; size = 4
?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::parseSet, COMDAT
; _this$ = ecx
; Line 1507
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47204[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47204[ebp], 0
	je	SHORT $LN4@parseSet
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	push	1
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T47204[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAVParsePosition@1@IPBVSymbolTable@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T47204[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR $T47204[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	ecx, DWORD PTR $T47204[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN5@parseSet
$LN4@parseSet:
	mov	DWORD PTR tv70[ebp], 0
$LN5@parseSet:
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR $T47203[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T47203[ebp]
	mov	DWORD PTR _set$[ebp], eax
; Line 1510
	cmp	DWORD PTR _set$[ebp], 0
	jne	SHORT $LN1@parseSet
; Line 1511
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1512
	xor	eax, eax
	jmp	SHORT $LN2@parseSet
$LN1@parseSet:
; Line 1514
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1515
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::generateStandInFor
$LN2@parseSet:
; Line 1516
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47204[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseSet@TransliteratorParser@icu_56@@AAE_WABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::parseSet
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv94 = -244						; size = 4
tv135 = -242						; size = 2
$T47218 = -236						; size = 4
$T47219 = -224						; size = 4
_i$39793 = -20						; size = 4
_this$ = -8						; size = 4
_adopted$ = 8						; size = 4
_status$ = 12						; size = 4
?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::generateStandInFor, COMDAT
; _this$ = ecx
; Line 1522
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1527
	mov	DWORD PTR _i$39793[ebp], 0
	jmp	SHORT $LN5@generateSt
$LN4@generateSt:
	mov	eax, DWORD PTR _i$39793[ebp]
	add	eax, 1
	mov	DWORD PTR _i$39793[ebp], eax
$LN5@generateSt:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$39793[ebp], eax
	jge	SHORT $LN3@generateSt
; Line 1528
	mov	esi, esp
	mov	eax, DWORD PTR _i$39793[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _adopted$[ebp]
	jne	SHORT $LN2@generateSt
; Line 1529
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	movzx	eax, WORD PTR [ecx+1106]
	add	eax, DWORD PTR _i$39793[ebp]
	jmp	$LN6@generateSt
$LN2@generateSt:
; Line 1531
	jmp	SHORT $LN4@generateSt
$LN3@generateSt:
; Line 1533
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+304]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+306]
	cmp	ecx, eax
	jl	SHORT $LN1@generateSt
; Line 1534
	mov	eax, DWORD PTR _adopted$[ebp]
	mov	DWORD PTR $T47219[ebp], eax
	mov	ecx, DWORD PTR $T47219[ebp]
	mov	DWORD PTR $T47218[ebp], ecx
	cmp	DWORD PTR $T47218[ebp], 0
	je	SHORT $LN8@generateSt
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T47218[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T47218[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN9@generateSt
$LN8@generateSt:
	mov	DWORD PTR tv94[ebp], 0
$LN9@generateSt:
; Line 1535
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65565			; 0001001dH
; Line 1536
	xor	eax, eax
	jmp	SHORT $LN6@generateSt
$LN1@generateSt:
; Line 1538
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adopted$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1539
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+304]
	mov	WORD PTR tv135[ebp], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+304]
	add	ax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+304], ax
	mov	ax, WORD PTR tv135[ebp]
$LN6@generateSt:
; Line 1540
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::generateStandInFor
_TEXT	ENDS
EXTRN	__imp_?setCharAt@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_c$ = -32						; size = 2
_empty$ = -20						; size = 2
_this$ = -8						; size = 4
_seg$ = 8						; size = 4
_status$ = 12						; size = 4
?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::getSegmentStandin, COMDAT
; _this$ = ecx
; Line 1545
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	movzx	edx, WORD PTR [ecx+1106]
	sub	edx, 1
	mov	WORD PTR _empty$[ebp], dx
$LN4@getSegment:
; Line 1548
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _seg$[ebp]
	jge	SHORT $LN3@getSegment
; Line 1549
	mov	esi, esp
	movzx	eax, WORD PTR _empty$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1550
	jmp	SHORT $LN4@getSegment
$LN3@getSegment:
; Line 1551
	mov	eax, DWORD PTR _seg$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$[ebp], ax
; Line 1552
	movzx	eax, WORD PTR _c$[ebp]
	movzx	ecx, WORD PTR _empty$[ebp]
	cmp	eax, ecx
	jne	$LN2@getSegment
; Line 1553
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+304]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+306]
	cmp	ecx, eax
	jl	SHORT $LN1@getSegment
; Line 1554
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65565			; 0001001dH
; Line 1555
	xor	eax, eax
	jmp	SHORT $LN5@getSegment
$LN1@getSegment:
; Line 1557
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+304]
	mov	WORD PTR _c$[ebp], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+304]
	add	ax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+304], ax
; Line 1561
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1562
	mov	esi, esp
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _seg$[ebp]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?setCharAt@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getSegment:
; Line 1564
	mov	ax, WORD PTR _c$[ebp]
$LN5@getSegment:
; Line 1565
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::getSegmentStandin
_TEXT	ENDS
EXTRN	__imp_?setElementAt@UVector@icu_56@@QAEXPAXH@Z:PROC
EXTRN	__imp_?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSegmentObject@TransliteratorParser@icu_56@@AAEXHPAVStringMatcher@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_seg$ = 8						; size = 4
_adopted$ = 12						; size = 4
_status$ = 16						; size = 4
?setSegmentObject@TransliteratorParser@icu_56@@AAEXHPAVStringMatcher@2@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::setSegmentObject, COMDAT
; _this$ = ecx
; Line 1570
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _seg$[ebp]
	jge	SHORT $LN3@setSegment
; Line 1576
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _seg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@setSegment:
; Line 1578
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _seg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getSegmentStandin@TransliteratorParser@icu_56@@AAE_WHAAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::getSegmentStandin
	movzx	edx, ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	movzx	eax, WORD PTR [ecx+1106]
	sub	edx, eax
	mov	DWORD PTR _index$[ebp], edx
; Line 1580
	mov	eax, DWORD PTR _seg$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@setSegment
	mov	esi, esp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@setSegment
$LN1@setSegment:
; Line 1582
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65568			; 00010020H
; Line 1583
	jmp	SHORT $LN4@setSegment
$LN2@setSegment:
; Line 1585
	mov	eax, DWORD PTR _seg$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _adopted$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_?setElementAt@UVector@icu_56@@QAEXPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1586
	mov	esi, esp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adopted$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	DWORD PTR __imp_?setElementAt@UVector@icu_56@@QAEXPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@setSegment:
; Line 1587
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setSegmentObject@TransliteratorParser@icu_56@@AAEXHPAVStringMatcher@2@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::setSegmentObject
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z$1
__ehfuncinfo$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv73 = -352						; size = 4
tv131 = -348						; size = 4
tv137 = -344						; size = 4
$T47229 = -336						; size = 4
$T47230 = -324						; size = 4
$T47234 = -312						; size = 4
$T39832 = -300						; size = 64
_tempus$39831 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::getDotStandIn, COMDAT
; _this$ = ecx
; Line 1593
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T47234[ebp], 0
; Line 1594
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+372]
	cmp	ecx, 65535				; 0000ffffH
	jne	$LN2@getDotStan
; Line 1595
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47230[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47230[ebp], 0
	je	$LN5@getDotStan
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _DOT_SET
	push	1
	lea	ecx, DWORD PTR $T39832[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv131[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T47234[ebp]
	or	edx, 1
	mov	DWORD PTR $T47234[ebp], edx
	mov	eax, DWORD PTR tv131[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47230[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T47230[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T47230[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T47230[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN6@getDotStan
$LN5@getDotStan:
	mov	DWORD PTR tv73[ebp], 0
$LN6@getDotStan:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T47229[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T47229[ebp]
	mov	DWORD PTR _tempus$39831[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T47234[ebp]
	and	eax, 1
	je	SHORT $LN10@getDotStan
	and	DWORD PTR $T47234[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T39832[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@getDotStan:
; Line 1597
	cmp	DWORD PTR _tempus$39831[ebp], 0
	jne	SHORT $LN1@getDotStan
; Line 1598
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1599
	xor	eax, eax
	jmp	SHORT $LN3@getDotStan
$LN1@getDotStan:
; Line 1601
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tempus$39831[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?generateStandInFor@TransliteratorParser@icu_56@@AAE_WPAVUnicodeFunctor@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::generateStandInFor
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+372], ax
$LN2@getDotStan:
; Line 1603
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+372]
$LN3@getDotStan:
; Line 1604
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47230[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T47234[ebp]
	and	eax, 1
	je	$LN9@getDotStan
	and	DWORD PTR $T47234[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T39832[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN9@getDotStan:
	ret	0
__ehhandler$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDotStandIn@TransliteratorParser@icu_56@@AAE_WAAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::getDotStandIn
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendVariableDef@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv85 = -218						; size = 2
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_buf$ = 12						; size = 4
_status$ = 16						; size = 4
?appendVariableDef@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::TransliteratorParser::appendVariableDef, COMDAT
; _this$ = ecx
; Line 1612
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	DWORD PTR __imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 1614
	cmp	DWORD PTR _s$[ebp], 0
	jne	$LN5@appendVari
; Line 1619
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN4@appendVari
; Line 1620
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1621
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+304]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+306]
	cmp	ecx, eax
	jl	SHORT $LN3@appendVari
; Line 1623
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1624
	jmp	SHORT $LN6@appendVari
$LN3@appendVari:
; Line 1626
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+306]
	sub	cx, 1
	mov	WORD PTR tv85[ebp], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR tv85[ebp]
	mov	WORD PTR [edx+306], ax
	mov	esi, esp
	movzx	ecx, WORD PTR tv85[ebp]
	push	ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1627
	jmp	SHORT $LN2@appendVari
$LN4@appendVari:
; Line 1630
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1631
	jmp	SHORT $LN6@appendVari
$LN2@appendVari:
; Line 1633
	jmp	SHORT $LN6@appendVari
$LN5@appendVari:
; Line 1634
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@appendVari:
; Line 1636
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?appendVariableDef@TransliteratorParser@icu_56@@AAEXABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliteratorParser::appendVariableDef
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_stripRules_56
EXTRN	_u_ispunct_56:PROC
EXTRN	_u_iscntrl_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_stripRules_56
_TEXT	SEGMENT
$T47249 = -372						; size = 4
_escapedStr$39895 = -168				; size = 64
_escapeOffset$39894 = -96				; size = 4
_c2$39890 = -84						; size = 4
_index$ = -72						; size = 4
_quoted$ = -57						; size = 1
_c$ = -48						; size = 4
_targetLimit$ = -36					; size = 4
_sourceLimit$ = -24					; size = 4
_targetStart$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_source$ = 8						; size = 4
_sourceLen$ = 12					; size = 4
_target$ = 16						; size = 4
_status$ = 20						; size = 4
_utrans_stripRules_56 PROC				; COMDAT
; Line 1648
	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1652
	mov	eax, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetStart$[ebp], eax
; Line 1653
	mov	eax, DWORD PTR _sourceLen$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _sourceLimit$[ebp], edx
; Line 1654
	mov	eax, DWORD PTR _sourceLen$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _targetLimit$[ebp], edx
; Line 1655
	mov	DWORD PTR _c$[ebp], 0
; Line 1656
	mov	BYTE PTR _quoted$[ebp], 0
; Line 1659
	mov	eax, DWORD PTR _sourceLen$[ebp]
	shl	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN33@utrans_str:
; Line 1662
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN32@utrans_str
; Line 1664
	mov	DWORD PTR _index$[ebp], 0
; Line 1665
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN31@utrans_str
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN31@utrans_str:
; Line 1666
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _source$[ebp], edx
; Line 1667
	cmp	DWORD PTR _c$[ebp], 39			; 00000027H
	jne	SHORT $LN30@utrans_str
; Line 1668
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	sete	cl
	mov	BYTE PTR _quoted$[ebp], cl
	jmp	$LN29@utrans_str
$LN30@utrans_str:
; Line 1670
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	jne	$LN29@utrans_str
; Line 1671
	cmp	DWORD PTR _c$[ebp], 35			; 00000023H
	jne	SHORT $LN27@utrans_str
$LN26@utrans_str:
; Line 1673
	mov	eax, DWORD PTR _targetStart$[ebp]
	cmp	eax, DWORD PTR _target$[ebp]
	jae	SHORT $LN24@utrans_str
	mov	eax, DWORD PTR _target$[ebp]
	movzx	ecx, WORD PTR [eax-2]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN24@utrans_str
; Line 1674
	mov	eax, DWORD PTR _target$[ebp]
	sub	eax, 2
	mov	DWORD PTR _target$[ebp], eax
; Line 1675
	jmp	SHORT $LN26@utrans_str
$LN24@utrans_str:
; Line 1677
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jne	SHORT $LN21@utrans_str
; Line 1678
	mov	DWORD PTR _c$[ebp], -1
; Line 1679
	jmp	SHORT $LN22@utrans_str
$LN21@utrans_str:
; Line 1681
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 2
	mov	DWORD PTR _source$[ebp], edx
; Line 1683
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	je	SHORT $LN22@utrans_str
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	jne	SHORT $LN24@utrans_str
$LN22@utrans_str:
; Line 1684
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN19@utrans_str
; Line 1685
	jmp	$LN32@utrans_str
$LN19@utrans_str:
; Line 1687
	jmp	$LN29@utrans_str
$LN27@utrans_str:
; Line 1688
	cmp	DWORD PTR _c$[ebp], 92			; 0000005cH
	jne	$LN29@utrans_str
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN29@utrans_str
; Line 1689
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c2$39890[ebp], ecx
; Line 1690
	cmp	DWORD PTR _c2$39890[ebp], 13		; 0000000dH
	je	SHORT $LN15@utrans_str
	cmp	DWORD PTR _c2$39890[ebp], 10		; 0000000aH
	jne	SHORT $LN16@utrans_str
$LN15@utrans_str:
; Line 1693
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 1694
	jmp	$LN33@utrans_str
$LN16@utrans_str:
; Line 1696
	cmp	DWORD PTR _c2$39890[ebp], 117		; 00000075H
	jne	$LN14@utrans_str
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 10					; 0000000aH
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN14@utrans_str
; Line 1697
	mov	DWORD PTR _escapeOffset$39894[ebp], 0
; Line 1698
	mov	esi, esp
	push	5
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	lea	ecx, DWORD PTR _escapedStr$39895[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1699
	mov	esi, esp
	lea	eax, DWORD PTR _escapeOffset$39894[ebp]
	push	eax
	lea	ecx, DWORD PTR _escapedStr$39895[ebp]
	call	DWORD PTR __imp_?unescapeAt@UnicodeString@icu_56@@QBEHAAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c2$39890[ebp], eax
; Line 1701
	cmp	DWORD PTR _c2$39890[ebp], -1
	je	SHORT $LN12@utrans_str
	cmp	DWORD PTR _escapeOffset$39894[ebp], 0
	jne	SHORT $LN13@utrans_str
$LN12@utrans_str:
; Line 1703
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 1704
	mov	DWORD PTR $T47249[ebp], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _escapedStr$39895[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T47249[ebp]
	jmp	$LN34@utrans_str
$LN13@utrans_str:
; Line 1706
	mov	esi, esp
	mov	eax, DWORD PTR _c2$39890[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@utrans_str
	mov	eax, DWORD PTR _c2$39890[ebp]
	push	eax
	call	_u_iscntrl_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@utrans_str
	mov	eax, DWORD PTR _c2$39890[ebp]
	push	eax
	call	_u_ispunct_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@utrans_str
; Line 1708
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _source$[ebp], eax
; Line 1709
	mov	eax, DWORD PTR _c2$39890[ebp]
	mov	DWORD PTR _c$[ebp], eax
$LN11@utrans_str:
; Line 1711
	mov	esi, esp
	lea	ecx, DWORD PTR _escapedStr$39895[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN29@utrans_str
$LN14@utrans_str:
; Line 1712
	cmp	DWORD PTR _c2$39890[ebp], 39		; 00000027H
	jne	SHORT $LN29@utrans_str
; Line 1714
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	sete	cl
	mov	BYTE PTR _quoted$[ebp], cl
$LN29@utrans_str:
; Line 1718
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	je	SHORT $LN7@utrans_str
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	jne	SHORT $LN8@utrans_str
$LN7@utrans_str:
; Line 1723
	mov	BYTE PTR _quoted$[ebp], 0
$LN6@utrans_str:
; Line 1724
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN5@utrans_str
; Line 1725
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
; Line 1726
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	je	SHORT $LN4@utrans_str
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	je	SHORT $LN4@utrans_str
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	je	SHORT $LN4@utrans_str
; Line 1727
	jmp	SHORT $LN5@utrans_str
$LN4@utrans_str:
; Line 1729
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 1730
	jmp	SHORT $LN6@utrans_str
$LN5@utrans_str:
; Line 1731
	jmp	$LN33@utrans_str
$LN8@utrans_str:
; Line 1735
	mov	DWORD PTR _index$[ebp], 0
; Line 1736
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN3@utrans_str
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	dx, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	jmp	SHORT $LN2@utrans_str
$LN3@utrans_str:
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _target$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _target$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN2@utrans_str:
; Line 1737
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _target$[ebp], edx
; Line 1738
	jmp	$LN33@utrans_str
$LN32@utrans_str:
; Line 1739
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN1@utrans_str
; Line 1740
	xor	eax, eax
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx], ax
$LN1@utrans_str:
; Line 1742
	mov	eax, DWORD PTR _target$[ebp]
	sub	eax, DWORD PTR _targetStart$[ebp]
	sar	eax, 1
$LN34@utrans_str:
; Line 1743
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@utrans_str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN41@utrans_str:
	DD	2
	DD	$LN40@utrans_str
$LN40@utrans_str:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN38@utrans_str
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN39@utrans_str
$LN39@utrans_str:
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN38@utrans_str:
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_utrans_stripRules_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END

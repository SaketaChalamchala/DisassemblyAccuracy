; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\rbt_set.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_SUVector@icu_56@@6B@				; icu_56::UVector::`local vftable'
PUBLIC	??_7TransliterationRuleSet@icu_56@@6B@		; icu_56::TransliterationRuleSet::`vftable'
PUBLIC	??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::TransliterationRuleSet::TransliterationRuleSet
PUBLIC	??_R4TransliterationRuleSet@icu_56@@6B@		; icu_56::TransliterationRuleSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTransliterationRuleSet@icu_56@@@8	; icu_56::TransliterationRuleSet `RTTI Type Descriptor'
PUBLIC	??_R3TransliterationRuleSet@icu_56@@8		; icu_56::TransliterationRuleSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TransliterationRuleSet@icu_56@@8		; icu_56::TransliterationRuleSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TransliterationRuleSet@icu_56@@8	; icu_56::TransliterationRuleSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ ; icu_56::TransliterationRuleSet::getMaximumContextLength
PUBLIC	?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z ; icu_56::TransliterationRuleSet::addRule
PUBLIC	?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::TransliterationRuleSet::freeze
PUBLIC	?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::TransliterationRuleSet::toRules
PUBLIC	??_R4UVector@icu_56@@6B@			; icu_56::UVector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector@icu_56@@@8			; icu_56::UVector `RTTI Type Descriptor'
PUBLIC	??_R3UVector@icu_56@@8				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector@icu_56@@8				; icu_56::UVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector@icu_56@@8			; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ETransliterationRuleSet@icu_56@@UAEPAXI@Z:PROC ; icu_56::TransliterationRuleSet::`vector deleting destructor'
EXTRN	??_EUVector@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector::getDynamicClassID
;	COMDAT ??_R2UObject@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\rbt_set.cpp
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UVector@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector@icu_56@@8 DD FLAT:??_R0?AVUVector@icu_56@@@8 ; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector@icu_56@@8
rdata$r	SEGMENT
??_R2UVector@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector@icu_56@@8 ; icu_56::UVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector@icu_56@@8
rdata$r	SEGMENT
??_R3UVector@icu_56@@8 DD 00H				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector@icu_56@@6B@ DD 00H				; icu_56::UVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector@icu_56@@@8
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TransliterationRuleSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TransliterationRuleSet@icu_56@@8 DD FLAT:??_R0?AVTransliterationRuleSet@icu_56@@@8 ; icu_56::TransliterationRuleSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TransliterationRuleSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TransliterationRuleSet@icu_56@@8
rdata$r	SEGMENT
??_R2TransliterationRuleSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TransliterationRuleSet@icu_56@@8 ; icu_56::TransliterationRuleSet::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TransliterationRuleSet@icu_56@@8
rdata$r	SEGMENT
??_R3TransliterationRuleSet@icu_56@@8 DD 00H		; icu_56::TransliterationRuleSet::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2TransliterationRuleSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTransliterationRuleSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTransliterationRuleSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TransliterationRuleSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTransliterationRuleSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TransliterationRuleSet@icu_56@@6B@
rdata$r	SEGMENT
??_R4TransliterationRuleSet@icu_56@@6B@ DD 00H		; icu_56::TransliterationRuleSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTransliterationRuleSet@icu_56@@@8
	DD	FLAT:??_R3TransliterationRuleSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUVector@icu_56@@6B@
CONST	SEGMENT
??_SUVector@icu_56@@6B@ DD FLAT:??_R4UVector@icu_56@@6B@ ; icu_56::UVector::`local vftable'
	DD	FLAT:??_EUVector@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT ??_7TransliterationRuleSet@icu_56@@6B@
CONST	SEGMENT
??_7TransliterationRuleSet@icu_56@@6B@ DD FLAT:??_R4TransliterationRuleSet@icu_56@@6B@ ; icu_56::TransliterationRuleSet::`vftable'
	DD	FLAT:??_ETransliterationRuleSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ
	DD	FLAT:?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z
	DD	FLAT:?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z
	DD	FLAT:?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv71 = -244						; size = 4
$T43574 = -236						; size = 4
$T43575 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z PROC ; icu_56::TransliterationRuleSet::TransliterationRuleSet, COMDAT
; _this$ = ecx
; Line 164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TransliterationRuleSet@icu_56@@6B@
; Line 165
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43575[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T43575[ebp], 0
	je	SHORT $LN5@Transliter
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET __deleteRule
	mov	ecx, DWORD PTR $T43575[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T43575[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T43575[ebp]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN6@Transliter
$LN5@Transliter:
	mov	DWORD PTR tv71[ebp], 0
$LN6@Transliter:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T43574[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T43574[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 166
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@Transliter
; Line 167
	jmp	SHORT $LN3@Transliter
$LN2@Transliter:
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Transliter
; Line 170
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@Transliter:
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1040], 0
$LN3@Transliter:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T43575[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliterationRuleSet::TransliterationRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __deleteRule
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T43595 = -212						; size = 4
$T43596 = -200						; size = 4
_rule$ = 8						; size = 4
__deleteRule PROC					; COMDAT
; File d:\mozilla\intl\icu\source\i18n\rbt_set.cpp
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 25
	mov	eax, DWORD PTR _rule$[ebp]
	mov	DWORD PTR $T43596[ebp], eax
	mov	ecx, DWORD PTR $T43596[ebp]
	mov	DWORD PTR $T43595[ebp], ecx
	cmp	DWORD PTR $T43595[ebp], 0
	je	SHORT $LN3@deleteRule
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43595[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43595[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN1@deleteRule
$LN3@deleteRule:
	mov	DWORD PTR tv70[ebp], 0
$LN1@deleteRule:
; Line 26
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__deleteRule ENDP
_TEXT	ENDS
PUBLIC	??1TransliterationRuleSet@icu_56@@UAE@XZ	; icu_56::TransliterationRuleSet::~TransliterationRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTransliterationRuleSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTransliterationRuleSet@icu_56@@UAEPAXI@Z PROC	; icu_56::TransliterationRuleSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TransliterationRuleSet@icu_56@@UAE@XZ ; icu_56::TransliterationRuleSet::~TransliterationRuleSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTransliterationRuleSet@icu_56@@UAEPAXI@Z ENDP	; icu_56::TransliterationRuleSet::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z	; icu_56::TransliterationRuleSet::TransliterationRuleSet
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	??0TransliterationRule@icu_56@@QAE@AAV01@@Z:PROC ; icu_56::TransliterationRule::TransliterationRule
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv156 = -400						; size = 4
tv92 = -400						; size = 4
tv68 = -400						; size = 4
$T43608 = -392						; size = 4
$T43609 = -380						; size = 4
$T43612 = -368						; size = 4
$T43613 = -356						; size = 4
_p$36795 = -152						; size = 72
_tempTranslitRule$36786 = -72				; size = 4
_status$ = -60						; size = 4
_len$ = -48						; size = 4
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z PROC	; icu_56::TransliterationRuleSet::TransliterationRuleSet, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _other$[ebp], 0
	je	SHORT $LN10@Transliter@2
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN11@Transliter@2
$LN10@Transliter@2:
	mov	DWORD PTR tv68[ebp], 0
$LN11@Transliter@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TransliterationRuleSet@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+1040]
	mov	DWORD PTR [eax+1040], edx
; Line 186
	push	1
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1028					; 00000404H
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 187
	mov	DWORD PTR _status$[ebp], 0
; Line 188
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43609[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T43609[ebp], 0
	je	SHORT $LN12@Transliter@2
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET __deleteRule
	mov	ecx, DWORD PTR $T43609[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T43609[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T43609[ebp]
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN13@Transliter@2
$LN12@Transliter@2:
	mov	DWORD PTR tv92[ebp], 0
$LN13@Transliter@2:
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T43608[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T43608[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 189
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN7@Transliter@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN7@Transliter@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN7@Transliter@2
; Line 190
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 191
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@Transliter@2
$LN5@Transliter@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@Transliter@2:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jge	$LN7@Transliter@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN7@Transliter@2
; Line 192
	mov	esi, esp
	push	108					; 0000006cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43613[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T43613[ebp], 0
	je	SHORT $LN14@Transliter@2
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR $T43613[ebp]
	call	??0TransliterationRule@icu_56@@QAE@AAV01@@Z ; icu_56::TransliterationRule::TransliterationRule
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN15@Transliter@2
$LN14@Transliter@2:
	mov	DWORD PTR tv156[ebp], 0
$LN15@Transliter@2:
	mov	edx, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T43612[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T43612[ebp]
	mov	DWORD PTR _tempTranslitRule$36786[ebp], eax
; Line 194
	cmp	DWORD PTR _tempTranslitRule$36786[ebp], 0
	jne	SHORT $LN3@Transliter@2
; Line 195
	mov	DWORD PTR _status$[ebp], 7
; Line 196
	jmp	SHORT $LN7@Transliter@2
$LN3@Transliter@2:
; Line 198
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tempTranslitRule$36786[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Transliter@2
; Line 200
	jmp	SHORT $LN7@Transliter@2
$LN2@Transliter@2:
; Line 202
	jmp	$LN5@Transliter@2
$LN7@Transliter@2:
; Line 204
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN8@Transliter@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@Transliter@2
; Line 206
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$36795[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::TransliterationRuleSet::freeze
$LN8@Transliter@2:
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@Transliter@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN22@Transliter@2:
	DD	2
	DD	$LN21@Transliter@2
$LN21@Transliter@2:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN18@Transliter@2
	DD	-152					; ffffff68H
	DD	72					; 00000048H
	DD	$LN19@Transliter@2
$LN19@Transliter@2:
	DB	112					; 00000070H
	DB	0
$LN18@Transliter@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T43609[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T43613[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::TransliterationRuleSet::TransliterationRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1TransliterationRuleSet@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T43633 = -224						; size = 4
$T43634 = -212						; size = 4
_this$ = -8						; size = 4
??1TransliterationRuleSet@icu_56@@UAE@XZ PROC		; icu_56::TransliterationRuleSet::~TransliterationRuleSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbt_set.cpp
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TransliterationRuleSet@icu_56@@6B@
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T43634[ebp], ecx
	mov	edx, DWORD PTR $T43634[ebp]
	mov	DWORD PTR $T43633[ebp], edx
	cmp	DWORD PTR $T43633[ebp], 0
	je	SHORT $LN3@Transliter@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T43633[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T43633[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@Transliter@3
$LN3@Transliter@3:
	mov	DWORD PTR tv75[ebp], 0
$LN4@Transliter@3:
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 216
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TransliterationRuleSet@icu_56@@UAE@XZ ENDP		; icu_56::TransliterationRuleSet::~TransliterationRuleSet
_TEXT	ENDS
PUBLIC	?setData@TransliterationRuleSet@icu_56@@QAEXPBVTransliterationRuleData@2@@Z ; icu_56::TransliterationRuleSet::setData
EXTRN	?setData@TransliterationRule@icu_56@@QAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::TransliterationRule::setData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setData@TransliterationRuleSet@icu_56@@QAEXPBVTransliterationRuleData@2@@Z
_TEXT	SEGMENT
_i$36806 = -32						; size = 4
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
?setData@TransliterationRuleSet@icu_56@@QAEXPBVTransliterationRuleData@2@@Z PROC ; icu_56::TransliterationRuleSet::setData, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1036]
	mov	DWORD PTR _len$[ebp], ecx
; Line 223
	mov	DWORD PTR _i$36806[ebp], 0
	jmp	SHORT $LN3@setData
$LN2@setData:
	mov	eax, DWORD PTR _i$36806[ebp]
	add	eax, 1
	mov	DWORD PTR _i$36806[ebp], eax
$LN3@setData:
	mov	eax, DWORD PTR _i$36806[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jge	SHORT $LN4@setData
; Line 224
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _i$36806[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	call	?setData@TransliterationRule@icu_56@@QAEXPBVTransliterationRuleData@2@@Z ; icu_56::TransliterationRule::setData
; Line 225
	jmp	SHORT $LN2@setData
$LN4@setData:
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setData@TransliterationRuleSet@icu_56@@QAEXPBVTransliterationRuleData@2@@Z ENDP ; icu_56::TransliterationRuleSet::setData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ PROC ; icu_56::TransliterationRuleSet::getMaximumContextLength, COMDAT
; _this$ = ecx
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1040]
; Line 234
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ ENDP ; icu_56::TransliterationRuleSet::getMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T43643 = -236						; size = 4
$T43644 = -224						; size = 4
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_adoptedRule$ = 8					; size = 4
_status$ = 12						; size = 4
?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z PROC ; icu_56::TransliterationRuleSet::addRule, COMDAT
; _this$ = ecx
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 248
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@addRule
; Line 249
	mov	eax, DWORD PTR _adoptedRule$[ebp]
	mov	DWORD PTR $T43644[ebp], eax
	mov	ecx, DWORD PTR $T43644[ebp]
	mov	DWORD PTR $T43643[ebp], ecx
	cmp	DWORD PTR $T43643[ebp], 0
	je	SHORT $LN5@addRule
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43643[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43643[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN6@addRule
$LN5@addRule:
	mov	DWORD PTR tv74[ebp], 0
$LN6@addRule:
; Line 250
	jmp	SHORT $LN3@addRule
$LN2@addRule:
; Line 252
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adoptedRule$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	mov	eax, DWORD PTR _adoptedRule$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _adoptedRule$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	cmp	edx, DWORD PTR [ecx+1040]
	jle	SHORT $LN1@addRule
; Line 256
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+1040], ecx
$LN1@addRule:
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN3@addRule:
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliterationRuleSet::addRule
_TEXT	ENDS
EXTRN	?matchesIndexValue@TransliterationRule@icu_56@@QBECE@Z:PROC ; icu_56::TransliterationRule::matchesIndexValue
EXTRN	?getIndexValue@TransliterationRule@icu_56@@QBEFXZ:PROC ; icu_56::TransliterationRule::getIndexValue
EXTRN	_uprv_malloc_56:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv79 = -360						; size = 4
_r2$36875 = -160					; size = 4
_k$36871 = -148						; size = 4
_r1$36870 = -136					; size = 4
_r$36852 = -124						; size = 4
_r$36841 = -112						; size = 4
_indexValue$ = -100					; size = 4
_v$ = -88						; size = 24
_x$ = -56						; size = 2
_j$ = -44						; size = 4
_n$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_parseError$ = 8					; size = 4
_status$ = 12						; size = 4
?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::TransliterationRuleSet::freeze, COMDAT
; _this$ = ecx
; Line 273
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 290
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _n$[ebp], eax
; Line 293
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	shl	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 295
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN30@freeze
; Line 296
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN31@freeze
$LN30@freeze:
; Line 302
	cmp	DWORD PTR _n$[ebp], 0
	jle	SHORT $LN33@freeze
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN34@freeze
$LN33@freeze:
	mov	DWORD PTR tv79[ebp], 1
$LN34@freeze:
	mov	ecx, DWORD PTR tv79[ebp]
	shl	ecx, 1
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _indexValue$[ebp], eax
; Line 304
	cmp	DWORD PTR _indexValue$[ebp], 0
	jne	SHORT $LN29@freeze
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 306
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN31@freeze
$LN29@freeze:
; Line 308
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN28@freeze
$LN27@freeze:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN28@freeze:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN26@freeze
; Line 309
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$36841[ebp], eax
; Line 310
	mov	ecx, DWORD PTR _r$36841[ebp]
	call	?getIndexValue@TransliterationRule@icu_56@@QBEFXZ ; icu_56::TransliterationRule::getIndexValue
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _indexValue$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 311
	jmp	SHORT $LN27@freeze
$LN26@freeze:
; Line 312
	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	jmp	SHORT $LN25@freeze
$LN24@freeze:
	mov	ax, WORD PTR _x$[ebp]
	add	ax, 1
	mov	WORD PTR _x$[ebp], ax
$LN25@freeze:
	movsx	eax, WORD PTR _x$[ebp]
	cmp	eax, 256				; 00000100H
	jge	$LN23@freeze
; Line 313
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, WORD PTR _x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+12], eax
; Line 314
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN22@freeze
$LN21@freeze:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN22@freeze:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	$LN20@freeze
; Line 315
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _indexValue$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	jl	SHORT $LN19@freeze
; Line 316
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _indexValue$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2]
	movsx	eax, WORD PTR _x$[ebp]
	cmp	edx, eax
	jne	SHORT $LN18@freeze
; Line 317
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@freeze:
; Line 319
	jmp	SHORT $LN17@freeze
$LN19@freeze:
; Line 324
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$36852[ebp], eax
; Line 325
	movzx	eax, BYTE PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$36852[ebp]
	call	?matchesIndexValue@TransliterationRule@icu_56@@QBECE@Z ; icu_56::TransliterationRule::matchesIndexValue
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@freeze
; Line 326
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$36852[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@freeze:
; Line 329
	jmp	$LN21@freeze
$LN20@freeze:
; Line 330
	jmp	$LN24@freeze
$LN23@freeze:
; Line 331
	mov	eax, DWORD PTR _indexValue$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 332
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1036], eax
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 339
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN15@freeze
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 341
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN31@freeze
$LN15@freeze:
; Line 343
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 345
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN14@freeze
; Line 346
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 347
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN31@freeze
$LN14@freeze:
; Line 349
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN13@freeze
$LN12@freeze:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN13@freeze:
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _j$[ebp], eax
	jge	SHORT $LN11@freeze
; Line 350
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 351
	jmp	SHORT $LN12@freeze
$LN11@freeze:
; Line 364
	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	jmp	SHORT $LN10@freeze
$LN9@freeze:
	mov	ax, WORD PTR _x$[ebp]
	add	ax, 1
	mov	WORD PTR _x$[ebp], ax
$LN10@freeze:
	movsx	eax, WORD PTR _x$[ebp]
	cmp	eax, 256				; 00000100H
	jge	$LN8@freeze
; Line 365
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+12]
	mov	DWORD PTR _j$[ebp], edx
	jmp	SHORT $LN7@freeze
$LN6@freeze:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@freeze:
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+16]
	sub	edx, 1
	cmp	DWORD PTR _j$[ebp], edx
	jge	$LN5@freeze
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _r1$36870[ebp], eax
; Line 367
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$36871[ebp], eax
	jmp	SHORT $LN4@freeze
$LN3@freeze:
	mov	eax, DWORD PTR _k$36871[ebp]
	add	eax, 1
	mov	DWORD PTR _k$36871[ebp], eax
$LN4@freeze:
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _k$36871[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+16]
	jge	$LN2@freeze
; Line 368
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _k$36871[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _r2$36875[ebp], eax
; Line 369
	mov	esi, esp
	mov	eax, DWORD PTR _r2$36875[ebp]
	push	eax
	mov	ecx, DWORD PTR _r1$36870[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _r1$36870[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@freeze
; Line 376
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65557			; 00010015H
; Line 377
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r2$36875[ebp]
	push	ecx
	mov	edx, DWORD PTR _r1$36870[ebp]
	push	edx
	call	?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z ; maskingError
	add	esp, 12					; 0000000cH
; Line 378
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN31@freeze
$LN1@freeze:
; Line 380
	jmp	$LN3@freeze
$LN2@freeze:
; Line 381
	jmp	$LN6@freeze
$LN5@freeze:
; Line 382
	jmp	$LN9@freeze
$LN8@freeze:
; Line 387
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@freeze:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@freeze
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN39@freeze:
	DD	1
	DD	$LN38@freeze
$LN38@freeze:
	DD	-88					; ffffffa8H
	DD	24					; 00000018H
	DD	$LN36@freeze
$LN36@freeze:
	DB	118					; 00000076H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _v$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::TransliterationRuleSet::freeze
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z:PROC
EXTRN	_uprv_min_56:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z$0
__ehfuncinfo$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z
_TEXT	SEGMENT
_len$ = -96						; size = 4
_r$ = -84						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule1$ = 8						; size = 4
_rule2$ = 12						; size = 4
_parseError$ = 16					; size = 4
?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z PROC ; maskingError, COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 140
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [ecx], -1
; Line 146
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 147
	push	15					; 0000000fH
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_min_56
	add	esp, 8
	mov	DWORD PTR _len$[ebp], eax
; Line 148
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 149
	xor	eax, eax
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [edx+ecx*2+8], ax
; Line 152
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 153
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rule2$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 154
	push	15					; 0000000fH
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_min_56
	add	esp, 8
	mov	DWORD PTR _len$[ebp], eax
; Line 155
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	xor	eax, eax
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [edx+ecx*2+40], ax
; Line 157
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@maskingErr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@maskingErr:
	DD	1
	DD	$LN6@maskingErr
$LN6@maskingErr:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN4@maskingErr
$LN4@maskingErr:
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z ENDP ; maskingError
PUBLIC	?transliterate@TransliterationRuleSet@icu_56@@QAECAAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::TransliterationRuleSet::transliterate
EXTRN	?matchAndReplace@TransliterationRule@icu_56@@QBE?AW4UMatchDegree@2@AAVReplaceable@2@AAUUTransPosition@@C@Z:PROC ; icu_56::TransliterationRule::matchAndReplace
EXTRN	__imp_?char32At@Replaceable@icu_56@@QBEHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transliterate@TransliterationRuleSet@icu_56@@QAECAAVReplaceable@2@AAUUTransPosition@@C@Z
_TEXT	SEGMENT
tv89 = -244						; size = 4
_m$36889 = -44						; size = 4
_i$36885 = -32						; size = 4
_indexByte$ = -20					; size = 2
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
_incremental$ = 16					; size = 1
?transliterate@TransliterationRuleSet@icu_56@@QAECAAVReplaceable@2@AAUUTransPosition@@C@Z PROC ; icu_56::TransliterationRuleSet::transliterate, COMDAT
; _this$ = ecx
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 405
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	and	eax, 255				; 000000ffH
	mov	WORD PTR _indexByte$[ebp], ax
; Line 406
	movsx	eax, WORD PTR _indexByte$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+12]
	mov	DWORD PTR _i$36885[ebp], edx
	jmp	SHORT $LN8@transliter
$LN7@transliter:
	mov	eax, DWORD PTR _i$36885[ebp]
	add	eax, 1
	mov	DWORD PTR _i$36885[ebp], eax
$LN8@transliter:
	movsx	eax, WORD PTR _indexByte$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$36885[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+16]
	jge	SHORT $LN6@transliter
; Line 407
	movzx	eax, BYTE PTR _incremental$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _i$36885[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	call	?matchAndReplace@TransliterationRule@icu_56@@QBE?AW4UMatchDegree@2@AAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::TransliterationRule::matchAndReplace
	mov	DWORD PTR _m$36889[ebp], eax
; Line 408
	mov	eax, DWORD PTR _m$36889[ebp]
	mov	DWORD PTR tv89[ebp], eax
	cmp	DWORD PTR tv89[ebp], 1
	je	SHORT $LN2@transliter
	cmp	DWORD PTR tv89[ebp], 2
	je	SHORT $LN3@transliter
	jmp	SHORT $LN4@transliter
$LN3@transliter:
; Line 411
	mov	al, 1
	jmp	SHORT $LN9@transliter
$LN2@transliter:
; Line 414
	xor	al, al
	jmp	SHORT $LN9@transliter
$LN4@transliter:
; Line 418
	jmp	SHORT $LN7@transliter
$LN6@transliter:
; Line 420
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, 65535				; 0000ffffH
	cmp	edx, eax
	sbb	eax, eax
	neg	eax
	add	eax, 1
	mov	ecx, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 422
	mov	al, 1
$LN9@transliter:
; Line 423
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?transliterate@TransliterationRuleSet@icu_56@@QAECAAVReplaceable@2@AAUUTransPosition@@C@Z ENDP ; icu_56::TransliterationRuleSet::transliterate
_TEXT	ENDS
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
_r$36910 = -44						; size = 4
_count$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_ruleSource$ = 8					; size = 4
_escapeUnprintable$ = 12				; size = 1
?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::TransliterationRuleSet::toRules, COMDAT
; _this$ = ecx
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 431
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 432
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _ruleSource$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 433
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@toRules
$LN3@toRules:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@toRules:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@toRules
; Line 434
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN1@toRules
; Line 435
	mov	esi, esp
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _ruleSource$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@toRules:
; Line 438
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$36910[ebp], eax
; Line 439
	mov	esi, esp
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleSource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$36910[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _r$36910[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 440
	jmp	SHORT $LN3@toRules
$LN2@toRules:
; Line 441
	mov	eax, DWORD PTR _ruleSource$[ebp]
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::TransliterationRuleSet::toRules
_TEXT	ENDS
PUBLIC	?getSourceTargetSet@TransliterationRuleSet@icu_56@@QBEAAVUnicodeSet@2@AAV32@C@Z ; icu_56::TransliterationRuleSet::getSourceTargetSet
EXTRN	?addSourceSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z:PROC ; icu_56::TransliterationRule::addSourceSetTo
EXTRN	?addTargetSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z:PROC ; icu_56::TransliterationRule::addTargetSetTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSourceTargetSet@TransliterationRuleSet@icu_56@@QBEAAVUnicodeSet@2@AAV32@C@Z
_TEXT	SEGMENT
_r$36922 = -44						; size = 4
_i$36918 = -32						; size = 4
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_result$ = 8						; size = 4
_getTarget$ = 12					; size = 1
?getSourceTargetSet@TransliterationRuleSet@icu_56@@QBEAAVUnicodeSet@2@AAV32@C@Z PROC ; icu_56::TransliterationRuleSet::getSourceTargetSet, COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 451
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 452
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 453
	mov	DWORD PTR _i$36918[ebp], 0
	jmp	SHORT $LN5@getSourceT
$LN4@getSourceT:
	mov	eax, DWORD PTR _i$36918[ebp]
	add	eax, 1
	mov	DWORD PTR _i$36918[ebp], eax
$LN5@getSourceT:
	mov	eax, DWORD PTR _i$36918[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN3@getSourceT
; Line 455
	mov	esi, esp
	mov	eax, DWORD PTR _i$36918[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$36922[ebp], eax
; Line 456
	movsx	eax, BYTE PTR _getTarget$[ebp]
	test	eax, eax
	je	SHORT $LN2@getSourceT
; Line 457
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$36922[ebp]
	call	?addTargetSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z ; icu_56::TransliterationRule::addTargetSetTo
; Line 458
	jmp	SHORT $LN1@getSourceT
$LN2@getSourceT:
; Line 459
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$36922[ebp]
	call	?addSourceSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z ; icu_56::TransliterationRule::addSourceSetTo
$LN1@getSourceT:
; Line 461
	jmp	SHORT $LN4@getSourceT
$LN3@getSourceT:
; Line 462
	mov	eax, DWORD PTR _result$[ebp]
; Line 463
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSourceTargetSet@TransliterationRuleSet@icu_56@@QBEAAVUnicodeSet@2@AAV32@C@Z ENDP ; icu_56::TransliterationRuleSet::getSourceTargetSet
_TEXT	ENDS
END

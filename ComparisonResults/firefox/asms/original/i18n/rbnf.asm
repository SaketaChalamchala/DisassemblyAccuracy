; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\rbnf.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_LENGTH
PUBLIC	?MAX_VALUE@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_VALUE
_BSS	SEGMENT
?classID@?1??getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::RuleBasedNumberFormat::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_gPercentPercent DW 025H
	DW	025H
	DW	00H
	ORG $+2
_gLenientParse DW 025H
	DW	025H
	DW	06cH
	DW	065H
	DW	06eH
	DW	069H
	DW	065H
	DW	06eH
	DW	074H
	DW	02dH
	DW	070H
	DW	061H
	DW	072H
	DW	073H
	DW	065H
	DW	03aH
	DW	00H
	ORG $+2
_gSemiPercent DW 03bH
	DW	025H
	DW	00H
	ORG $+2
_DQUOTE_STOPLIST DW 022H
	DW	00H
_SQUOTE_STOPLIST DW 027H
	DW	00H
_NOQUOTE_STOPLIST DW 020H
	DW	02cH
	DW	03eH
	DW	03cH
	DW	027H
	DW	022H
	DW	00H
CONST	ENDS
;	COMDAT ?MAX_VALUE@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_VALUE@Part@MessagePattern@icu_56@@0HB DD 07fffH	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB DD 0ffffH	; icu_56::MessagePattern::Part::MAX_LENGTH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T51518 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T51518[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T51518[ebp]
	or	ecx, 1
	mov	DWORD PTR $T51518[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T36098 = -312						; size = 64
_i$36093 = -45						; size = 1
_sym$36091 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$36091[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$36091[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$36093[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$36093[ebp]
	add	al, 1
	mov	BYTE PTR _i$36093[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$36093[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$36091[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$36091[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$36091[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36098[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$36093[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T36098[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36098[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T51540 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T51540[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T51540[ebp]
	or	ecx, 1
	mov	DWORD PTR $T51540[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??1RuleBasedNumberFormat@icu_56@@UAE@XZ		; icu_56::RuleBasedNumberFormat::~RuleBasedNumberFormat
PUBLIC	??_GRuleBasedNumberFormat@icu_56@@UAEPAXI@Z	; icu_56::RuleBasedNumberFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRuleBasedNumberFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRuleBasedNumberFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::RuleBasedNumberFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RuleBasedNumberFormat@icu_56@@UAE@XZ	; icu_56::RuleBasedNumberFormat::~RuleBasedNumberFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRuleBasedNumberFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::RuleBasedNumberFormat::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ERuleBasedNumberFormat@icu_56@@UAEPAXI@Z	; icu_56::RuleBasedNumberFormat::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ERuleBasedNumberFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERuleBasedNumberFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::RuleBasedNumberFormat::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1RuleBasedNumberFormat@icu_56@@UAE@XZ ; icu_56::RuleBasedNumberFormat::~RuleBasedNumberFormat
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	676					; 000002a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RuleBasedNumberFormat@icu_56@@UAE@XZ	; icu_56::RuleBasedNumberFormat::~RuleBasedNumberFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERuleBasedNumberFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::RuleBasedNumberFormat::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ	; icu_56::RuleBasedNumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ PROC	; icu_56::RuleBasedNumberFormat::isLenient, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\rbnf.h
; Line 1053
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1054
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+592]
; Line 1055
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ ENDP	; icu_56::RuleBasedNumberFormat::isLenient
_TEXT	ENDS
PUBLIC	?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet, COMDAT
; _this$ = ecx
; Line 1060
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1061
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+368]
; Line 1062
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ	; icu_56::PluralFormat::PluralSelector::PluralSelector
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
PUBLIC	??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPluralSelector@PluralFormat@icu_56@@@8	; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
PUBLIC	??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
EXTRN	?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::select
;	COMDAT ??_R2PluralSelector@PluralFormat@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\plurfmt.h
rdata$r	SEGMENT
??_R2PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelector@PluralFormat@icu_56@@8 DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelector@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelectorAdapter@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
	DD	FLAT:??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??_7PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`vftable'
PUBLIC	??_R4PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
PUBLIC	??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
;	COMDAT ??_R4PluralSelector@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelector@PluralFormat@icu_56@@6B@ DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelector@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelector@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelector@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelector::`vftable'
	DD	FLAT:??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ PROC	; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ ENDP	; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@PluralSele
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@PluralSele
$LN3@PluralSele:
	mov	DWORD PTR tv68[ebp], 0
$LN4@PluralSele:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
EXTRN	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelector::~PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
EXTRN	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; File d:\mozilla\intl\icu\source\i18n\unicode\coll.h
; Line 1161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1162
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1163
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; Line 1165
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1166
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1169
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
; Line 1171
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1174
	mov	eax, DWORD PTR _this$[ebp]
; Line 1175
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	??_7CollatorFactory@icu_56@@6B@			; icu_56::CollatorFactory::`vftable'
PUBLIC	??0CollatorFactory@icu_56@@QAE@XZ		; icu_56::CollatorFactory::CollatorFactory
PUBLIC	??_R4CollatorFactory@icu_56@@6B@		; icu_56::CollatorFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCollatorFactory@icu_56@@@8		; icu_56::CollatorFactory `RTTI Type Descriptor'
PUBLIC	??_R3CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollatorFactory@icu_56@@8		; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ECollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`vector deleting destructor'
EXTRN	?visible@CollatorFactory@icu_56@@UBECXZ:PROC	; icu_56::CollatorFactory::visible
EXTRN	?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z:PROC ; icu_56::CollatorFactory::getDisplayName
;	COMDAT ??_R1A@?0A@EA@CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollatorFactory@icu_56@@8 DD FLAT:??_R0?AVCollatorFactory@icu_56@@@8 ; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R2CollatorFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollatorFactory@icu_56@@8 ; icu_56::CollatorFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R3CollatorFactory@icu_56@@8 DD 00H			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollatorFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCollatorFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollatorFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollatorFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollatorFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollatorFactory@icu_56@@6B@ DD 00H			; icu_56::CollatorFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCollatorFactory@icu_56@@@8
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollatorFactory@icu_56@@6B@
CONST	SEGMENT
??_7CollatorFactory@icu_56@@6B@ DD FLAT:??_R4CollatorFactory@icu_56@@6B@ ; icu_56::CollatorFactory::`vftable'
	DD	FLAT:??_ECollatorFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@CollatorFactory@icu_56@@UBECXZ
	DD	FLAT:__purecall
	DD	FLAT:?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CollatorFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CollatorFactory@icu_56@@QAE@XZ PROC			; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollatorFactory@icu_56@@QAE@XZ ENDP			; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??0CollatorFactory@icu_56@@QAE@ABV01@@Z		; icu_56::CollatorFactory::CollatorFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollatorFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollatorFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CollatorFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CollatorFactory::operator=
_TEXT	ENDS
PUBLIC	??_GCollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`scalar deleting destructor'
EXTRN	??1CollatorFactory@icu_56@@UAE@XZ:PROC		; icu_56::CollatorFactory::~CollatorFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ECollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1CollatorFactory@icu_56@@UAE@XZ ; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVCollator@icu_56@@@8			; icu_56::Collator `RTTI Type Descriptor'
PUBLIC	??_R0?AVRuleBasedCollator@icu_56@@@8		; icu_56::RuleBasedCollator `RTTI Type Descriptor'
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVCollator@icu_56@@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\tblcoll.h
_DATA	SEGMENT
??_R0?AVCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Collator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVRuleBasedCollator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleBasedCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RuleBasedCollator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleBasedCollator@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 778
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 782
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeDefault, COMDAT
; _this$ = ecx
; Line 836
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 837
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 838
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeDefault
_TEXT	ENDS
PUBLIC	?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeExplicitly, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 841
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeExplicitly
_TEXT	ENDS
PUBLIC	?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z PROC ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly, COMDAT
; _this$ = ecx
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 844
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	setne	al
; Line 845
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ENDP ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
_TEXT	ENDS
PUBLIC	?getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ ; icu_56::RuleBasedNumberFormat::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ PROC ; icu_56::RuleBasedNumberFormat::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ ENDP ; icu_56::RuleBasedNumberFormat::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@RuleBasedNumberFormat@icu_56@@UBEPAXXZ ; icu_56::RuleBasedNumberFormat::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@RuleBasedNumberFormat@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@RuleBasedNumberFormat@icu_56@@UBEPAXXZ PROC ; icu_56::RuleBasedNumberFormat::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@RuleBasedNumberFormat@icu_56@@SAPAXXZ ; icu_56::RuleBasedNumberFormat::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@RuleBasedNumberFormat@icu_56@@UBEPAXXZ ENDP ; icu_56::RuleBasedNumberFormat::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7LocalizationInfo@icu_56@@6B@		; icu_56::LocalizationInfo::`vftable'
PUBLIC	??1LocalizationInfo@icu_56@@MAE@XZ		; icu_56::LocalizationInfo::~LocalizationInfo
PUBLIC	??_R4LocalizationInfo@icu_56@@6B@		; icu_56::LocalizationInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLocalizationInfo@icu_56@@@8		; icu_56::LocalizationInfo `RTTI Type Descriptor'
PUBLIC	??_R3LocalizationInfo@icu_56@@8			; icu_56::LocalizationInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LocalizationInfo@icu_56@@8			; icu_56::LocalizationInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LocalizationInfo@icu_56@@8	; icu_56::LocalizationInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8LocalizationInfo@icu_56@@UBECPBV01@@Z	; icu_56::LocalizationInfo::operator==
PUBLIC	?indexForLocale@LocalizationInfo@icu_56@@UBEHPB_W@Z ; icu_56::LocalizationInfo::indexForLocale
PUBLIC	?indexForRuleSet@LocalizationInfo@icu_56@@UBEHPB_W@Z ; icu_56::LocalizationInfo::indexForRuleSet
EXTRN	??_ELocalizationInfo@icu_56@@MAEPAXI@Z:PROC	; icu_56::LocalizationInfo::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LocalizationInfo@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LocalizationInfo@icu_56@@8 DD FLAT:??_R0?AVLocalizationInfo@icu_56@@@8 ; icu_56::LocalizationInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LocalizationInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2LocalizationInfo@icu_56@@8
rdata$r	SEGMENT
??_R2LocalizationInfo@icu_56@@8 DD FLAT:??_R1A@?0A@EA@LocalizationInfo@icu_56@@8 ; icu_56::LocalizationInfo::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3LocalizationInfo@icu_56@@8
rdata$r	SEGMENT
??_R3LocalizationInfo@icu_56@@8 DD 00H			; icu_56::LocalizationInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2LocalizationInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLocalizationInfo@icu_56@@@8
_DATA	SEGMENT
??_R0?AVLocalizationInfo@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::LocalizationInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLocalizationInfo@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LocalizationInfo@icu_56@@6B@
rdata$r	SEGMENT
??_R4LocalizationInfo@icu_56@@6B@ DD 00H		; icu_56::LocalizationInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLocalizationInfo@icu_56@@@8
	DD	FLAT:??_R3LocalizationInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7LocalizationInfo@icu_56@@6B@
CONST	SEGMENT
??_7LocalizationInfo@icu_56@@6B@ DD FLAT:??_R4LocalizationInfo@icu_56@@6B@ ; icu_56::LocalizationInfo::`vftable'
	DD	FLAT:??_ELocalizationInfo@icu_56@@MAEPAXI@Z
	DD	FLAT:??8LocalizationInfo@icu_56@@UBECPBV01@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?indexForLocale@LocalizationInfo@icu_56@@UBEHPB_W@Z
	DD	FLAT:?indexForRuleSet@LocalizationInfo@icu_56@@UBEHPB_W@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1LocalizationInfo@icu_56@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LocalizationInfo@icu_56@@MAE@XZ PROC			; icu_56::LocalizationInfo::~LocalizationInfo, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LocalizationInfo@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1LocalizationInfo@icu_56@@MAE@XZ ENDP			; icu_56::LocalizationInfo::~LocalizationInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GLocalizationInfo@icu_56@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GLocalizationInfo@icu_56@@MAEPAXI@Z PROC		; icu_56::LocalizationInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LocalizationInfo@icu_56@@MAE@XZ	; icu_56::LocalizationInfo::~LocalizationInfo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLocalizationInfo@icu_56@@MAEPAXI@Z ENDP		; icu_56::LocalizationInfo::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??8LocalizationInfo@icu_56@@UBECPBV01@@Z
_TEXT	SEGMENT
_j$43333 = -92						; size = 4
_ix$43331 = -80						; size = 4
_locale$43330 = -68					; size = 4
_i$43326 = -56						; size = 4
_dlc$43324 = -44					; size = 4
_i$43319 = -32						; size = 4
_rsc$43317 = -20					; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8LocalizationInfo@icu_56@@UBECPBV01@@Z PROC		; icu_56::LocalizationInfo::operator==, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	cmp	DWORD PTR _rhs$[ebp], 0
	je	$LN16@operator@2
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _rhs$[ebp]
	jne	SHORT $LN15@operator@2
; Line 132
	mov	al, 1
	jmp	$LN17@operator@2
$LN15@operator@2:
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rsc$43317[ebp], eax
; Line 136
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _rsc$43317[ebp], eax
	jne	$LN16@operator@2
; Line 137
	mov	DWORD PTR _i$43319[ebp], 0
	jmp	SHORT $LN13@operator@2
$LN12@operator@2:
	mov	eax, DWORD PTR _i$43319[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43319[ebp], eax
$LN13@operator@2:
	mov	eax, DWORD PTR _i$43319[ebp]
	cmp	eax, DWORD PTR _rsc$43317[ebp]
	jge	SHORT $LN11@operator@2
; Line 138
	mov	esi, esp
	mov	eax, DWORD PTR _i$43319[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _i$43319[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?streq@icu_56@@YACPB_W0@Z		; icu_56::streq
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN10@operator@2
; Line 139
	xor	al, al
	jmp	$LN17@operator@2
$LN10@operator@2:
; Line 141
	jmp	SHORT $LN12@operator@2
$LN11@operator@2:
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dlc$43324[ebp], eax
; Line 143
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _dlc$43324[ebp], eax
	jne	$LN16@operator@2
; Line 144
	mov	DWORD PTR _i$43326[ebp], 0
	jmp	SHORT $LN8@operator@2
$LN7@operator@2:
	mov	eax, DWORD PTR _i$43326[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43326[ebp], eax
$LN8@operator@2:
	mov	eax, DWORD PTR _i$43326[ebp]
	cmp	eax, DWORD PTR _dlc$43324[ebp]
	jge	$LN6@operator@2
; Line 145
	mov	esi, esp
	mov	eax, DWORD PTR _i$43326[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _locale$43330[ebp], eax
; Line 146
	mov	esi, esp
	mov	eax, DWORD PTR _locale$43330[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ix$43331[ebp], eax
; Line 148
	mov	esi, esp
	mov	eax, DWORD PTR _ix$43331[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _locale$43330[ebp]
	push	ecx
	call	?streq@icu_56@@YACPB_W0@Z		; icu_56::streq
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN5@operator@2
; Line 149
	xor	al, al
	jmp	SHORT $LN17@operator@2
$LN5@operator@2:
; Line 151
	mov	DWORD PTR _j$43333[ebp], 0
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	eax, DWORD PTR _j$43333[ebp]
	add	eax, 1
	mov	DWORD PTR _j$43333[ebp], eax
$LN4@operator@2:
	mov	eax, DWORD PTR _j$43333[ebp]
	cmp	eax, DWORD PTR _rsc$43317[ebp]
	jge	SHORT $LN2@operator@2
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _j$43333[ebp]
	push	eax
	mov	ecx, DWORD PTR _ix$43331[ebp]
	push	ecx
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	eax, DWORD PTR _j$43333[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$43326[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?streq@icu_56@@YACPB_W0@Z		; icu_56::streq
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@operator@2
; Line 153
	xor	al, al
	jmp	SHORT $LN17@operator@2
$LN1@operator@2:
; Line 155
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 156
	jmp	$LN7@operator@2
$LN6@operator@2:
; Line 157
	mov	al, 1
	jmp	SHORT $LN17@operator@2
$LN16@operator@2:
; Line 161
	xor	al, al
$LN17@operator@2:
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8LocalizationInfo@icu_56@@UBECPBV01@@Z ENDP		; icu_56::LocalizationInfo::operator==
_TEXT	ENDS
EXTRN	_u_strcmp_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?streq@icu_56@@YACPB_W0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
?streq@icu_56@@YACPB_W0@Z PROC				; icu_56::streq, COMDAT
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 119
	mov	eax, DWORD PTR _rhs$[ebp]
	cmp	eax, DWORD PTR _lhs$[ebp]
	jne	SHORT $LN2@streq
; Line 120
	mov	al, 1
	jmp	SHORT $LN3@streq
$LN2@streq:
; Line 122
	cmp	DWORD PTR _lhs$[ebp], 0
	je	SHORT $LN1@streq
	cmp	DWORD PTR _rhs$[ebp], 0
	je	SHORT $LN1@streq
; Line 123
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	push	ecx
	call	_u_strcmp_56
	add	esp, 8
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@streq
$LN1@streq:
; Line 125
	xor	al, al
$LN3@streq:
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?streq@icu_56@@YACPB_W0@Z ENDP				; icu_56::streq
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?indexForLocale@LocalizationInfo@icu_56@@UBEHPB_W@Z
_TEXT	SEGMENT
_i$43342 = -20						; size = 4
_this$ = -8						; size = 4
_locale$ = 8						; size = 4
?indexForLocale@LocalizationInfo@icu_56@@UBEHPB_W@Z PROC ; icu_56::LocalizationInfo::indexForLocale, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 166
	mov	DWORD PTR _i$43342[ebp], 0
	jmp	SHORT $LN4@indexForLo
$LN3@indexForLo:
	mov	eax, DWORD PTR _i$43342[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43342[ebp], eax
$LN4@indexForLo:
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$43342[ebp], eax
	jge	SHORT $LN2@indexForLo
; Line 167
	mov	esi, esp
	mov	eax, DWORD PTR _i$43342[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	call	?streq@icu_56@@YACPB_W0@Z		; icu_56::streq
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@indexForLo
; Line 168
	mov	eax, DWORD PTR _i$43342[ebp]
	jmp	SHORT $LN5@indexForLo
$LN1@indexForLo:
; Line 170
	jmp	SHORT $LN3@indexForLo
$LN2@indexForLo:
; Line 171
	or	eax, -1
$LN5@indexForLo:
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexForLocale@LocalizationInfo@icu_56@@UBEHPB_W@Z ENDP ; icu_56::LocalizationInfo::indexForLocale
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?indexForRuleSet@LocalizationInfo@icu_56@@UBEHPB_W@Z
_TEXT	SEGMENT
_i$43352 = -20						; size = 4
_this$ = -8						; size = 4
_ruleset$ = 8						; size = 4
?indexForRuleSet@LocalizationInfo@icu_56@@UBEHPB_W@Z PROC ; icu_56::LocalizationInfo::indexForRuleSet, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 176
	cmp	DWORD PTR _ruleset$[ebp], 0
	je	SHORT $LN5@indexForRu
; Line 177
	mov	DWORD PTR _i$43352[ebp], 0
	jmp	SHORT $LN4@indexForRu
$LN3@indexForRu:
	mov	eax, DWORD PTR _i$43352[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43352[ebp], eax
$LN4@indexForRu:
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$43352[ebp], eax
	jge	SHORT $LN5@indexForRu
; Line 178
	mov	esi, esp
	mov	eax, DWORD PTR _i$43352[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _ruleset$[ebp]
	push	ecx
	call	?streq@icu_56@@YACPB_W0@Z		; icu_56::streq
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@indexForRu
; Line 179
	mov	eax, DWORD PTR _i$43352[ebp]
	jmp	SHORT $LN6@indexForRu
$LN1@indexForRu:
; Line 181
	jmp	SHORT $LN3@indexForRu
$LN5@indexForRu:
; Line 183
	or	eax, -1
$LN6@indexForRu:
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexForRuleSet@LocalizationInfo@icu_56@@UBEHPB_W@Z ENDP ; icu_56::LocalizationInfo::indexForRuleSet
_TEXT	ENDS
PUBLIC	?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ ; icu_56::LocDataParser::doParse
PUBLIC	?parse@LocDataParser@icu_56@@QAEPAVStringLocalizationInfo@2@PA_WH@Z ; icu_56::LocDataParser::parse
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parse@LocDataParser@icu_56@@QAEPAVStringLocalizationInfo@2@PA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__data$ = 8						; size = 4
_len$ = 12						; size = 4
?parse@LocDataParser@icu_56@@QAEPAVStringLocalizationInfo@2@PA_WH@Z PROC ; icu_56::LocDataParser::parse, COMDAT
; _this$ = ecx
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 359
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@parse
; Line 360
	cmp	DWORD PTR __data$[ebp], 0
	je	SHORT $LN3@parse
	mov	eax, DWORD PTR __data$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN3@parse:
; Line 361
	xor	eax, eax
	jmp	$LN5@parse
$LN4@parse:
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], 0
; Line 365
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+4], -1
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	xor	edx, edx
	mov	WORD PTR [ecx+40], dx
; Line 367
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	xor	edx, edx
	mov	WORD PTR [ecx+8], dx
; Line 369
	cmp	DWORD PTR __data$[ebp], 0
	jne	SHORT $LN2@parse
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 1
; Line 371
	xor	eax, eax
	jmp	SHORT $LN5@parse
$LN2@parse:
; Line 374
	cmp	DWORD PTR _len$[ebp], 0
	jg	SHORT $LN1@parse
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 1
; Line 376
	mov	eax, DWORD PTR __data$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 377
	xor	eax, eax
	jmp	SHORT $LN5@parse
$LN1@parse:
; Line 380
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __data$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __data$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 383
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 385
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ ; icu_56::LocDataParser::doParse
$LN5@parse:
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?parse@LocDataParser@icu_56@@QAEPAVStringLocalizationInfo@2@PA_WH@Z ENDP ; icu_56::LocDataParser::parse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0StringLocalizationInfo@icu_56@@AAE@PA_WPAPAPA_WHH@Z ; icu_56::StringLocalizationInfo::StringLocalizationInfo
PUBLIC	?release@VArray@icu_56@@QAEPAPAXXZ		; icu_56::VArray::release
PUBLIC	?length@VArray@icu_56@@QAEHXZ			; icu_56::VArray::length
PUBLIC	??1VArray@icu_56@@QAE@XZ			; icu_56::VArray::~VArray
PUBLIC	?inc@LocDataParser@icu_56@@AAEXXZ		; icu_56::LocDataParser::inc
PUBLIC	?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z	; icu_56::VArray::add
PUBLIC	?check@LocDataParser@icu_56@@AAEC_W@Z		; icu_56::LocDataParser::check
PUBLIC	?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z	; icu_56::LocDataParser::nextArray
PUBLIC	??0VArray@icu_56@@QAE@P6AXPAX@Z@Z		; icu_56::VArray::VArray
PUBLIC	?parseError@LocDataParser@icu_56@@AAEXPBD@Z	; icu_56::LocDataParser::parseError
PUBLIC	?checkInc@LocDataParser@icu_56@@AAEC_W@Z	; icu_56::LocDataParser::checkInc
PUBLIC	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::skipWhitespace
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
xdata$x	SEGMENT
__unwindtable$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ$1
__ehfuncinfo$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ
_TEXT	SEGMENT
tv177 = -400						; size = 4
$T51756 = -392						; size = 4
$T51757 = -380						; size = 4
$T51758 = -368						; size = 4
$T51759 = -356						; size = 4
$T51760 = -344						; size = 4
$T51761 = -332						; size = 4
$T51762 = -320						; size = 4
_result$43578 = -116					; size = 4
_numLocs$43577 = -104					; size = 4
_haveComma$43563 = -89					; size = 1
_elem$43562 = -80					; size = 4
_requiredLength$43558 = -68				; size = 4
_mightHaveNext$43557 = -53				; size = 1
_array$43556 = -44					; size = 16
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ PROC ; icu_56::LocDataParser::doParse, COMDAT
; _this$ = ecx
; Line 390
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 391
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 392
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkInc@LocDataParser@icu_56@@AAEC_W@Z ; icu_56::LocDataParser::checkInc
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@doParse
; Line 393
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
	jmp	$LN14@doParse
; Line 394
	jmp	$LN12@doParse
$LN13@doParse:
; Line 395
	push	OFFSET ?DeleteFn@icu_56@@YAXPAX@Z	; icu_56::DeleteFn
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??0VArray@icu_56@@QAE@P6AXPAX@Z@Z	; icu_56::VArray::VArray
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 396
	mov	BYTE PTR _mightHaveNext$43557[ebp], 1
; Line 397
	mov	DWORD PTR _requiredLength$43558[ebp], -1
$LN11@doParse:
; Line 398
	movsx	eax, BYTE PTR _mightHaveNext$43557[ebp]
	test	eax, eax
	je	$LN10@doParse
; Line 399
	mov	BYTE PTR _mightHaveNext$43557[ebp], 0
; Line 400
	lea	eax, DWORD PTR _requiredLength$43558[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z ; icu_56::LocDataParser::nextArray
	mov	DWORD PTR _elem$43562[ebp], eax
; Line 401
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 402
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?check@LocDataParser@icu_56@@AAEC_W@Z	; icu_56::LocDataParser::check
	mov	BYTE PTR _haveComma$43563[ebp], al
; Line 403
	cmp	DWORD PTR _elem$43562[ebp], 0
	je	SHORT $LN9@doParse
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _elem$43562[ebp]
	push	edx
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::VArray::add
; Line 405
	movsx	eax, BYTE PTR _haveComma$43563[ebp]
	test	eax, eax
	je	SHORT $LN8@doParse
; Line 406
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inc@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::inc
; Line 407
	mov	BYTE PTR _mightHaveNext$43557[ebp], 1
$LN8@doParse:
; Line 408
	jmp	SHORT $LN7@doParse
$LN9@doParse:
; Line 409
	movsx	eax, BYTE PTR _haveComma$43563[ebp]
	test	eax, eax
	je	SHORT $LN7@doParse
; Line 410
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51756[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51756[ebp]
	jmp	$LN14@doParse
$LN7@doParse:
; Line 412
	jmp	$LN11@doParse
$LN10@doParse:
; Line 414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 415
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkInc@LocDataParser@icu_56@@AAEC_W@Z ; icu_56::LocDataParser::checkInc
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@doParse
; Line 416
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?check@LocDataParser@icu_56@@AAEC_W@Z	; icu_56::LocDataParser::check
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@doParse
; Line 417
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51757[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51757[ebp]
	jmp	$LN14@doParse
; Line 418
	jmp	SHORT $LN5@doParse
$LN4@doParse:
; Line 419
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51758[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51758[ebp]
	jmp	$LN14@doParse
$LN5@doParse:
; Line 423
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN2@doParse
; Line 425
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51759[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51759[ebp]
	jmp	$LN14@doParse
$LN2@doParse:
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::VArray::add
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	$LN1@doParse
; Line 430
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	?length@VArray@icu_56@@QAEHXZ		; icu_56::VArray::length
	sub	eax, 2
	mov	DWORD PTR _numLocs$43577[ebp], eax
; Line 431
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	?release@VArray@icu_56@@QAEPAPAXXZ	; icu_56::VArray::release
	mov	DWORD PTR _result$43578[ebp], eax
; Line 433
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51762[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T51762[ebp], 0
	je	SHORT $LN16@doParse
	mov	eax, DWORD PTR _numLocs$43577[ebp]
	push	eax
	mov	ecx, DWORD PTR _requiredLength$43558[ebp]
	sub	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _result$43578[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T51762[ebp]
	call	??0StringLocalizationInfo@icu_56@@AAE@PA_WPAPAPA_WHH@Z ; icu_56::StringLocalizationInfo::StringLocalizationInfo
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN17@doParse
$LN16@doParse:
	mov	DWORD PTR tv177[ebp], 0
$LN17@doParse:
	mov	edx, DWORD PTR tv177[ebp]
	mov	DWORD PTR $T51761[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T51761[ebp]
	mov	DWORD PTR $T51760[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51760[ebp]
	jmp	SHORT $LN14@doParse
$LN1@doParse:
; Line 435
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$43556[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
$LN12@doParse:
; Line 437
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
$LN14@doParse:
; Line 438
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@doParse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN24@doParse:
	DD	2
	DD	$LN23@doParse
$LN23@doParse:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN20@doParse
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN21@doParse
$LN21@doParse:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN20@doParse:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ$0:
	lea	ecx, DWORD PTR _array$43556[ebp]
	jmp	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
__unwindfunclet$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T51762[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?doParse@LocDataParser@icu_56@@AAEPAVStringLocalizationInfo@2@XZ ENDP ; icu_56::LocDataParser::doParse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0VArray@icu_56@@QAE@P6AXPAX@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_del$ = 8						; size = 4
??0VArray@icu_56@@QAE@P6AXPAX@Z@Z PROC			; icu_56::VArray::VArray, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _del$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0VArray@icu_56@@QAE@P6AXPAX@Z@Z ENDP			; icu_56::VArray::VArray
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1VArray@icu_56@@QAE@XZ
_TEXT	SEGMENT
_i$43389 = -20						; size = 4
_this$ = -8						; size = 4
??1VArray@icu_56@@QAE@XZ PROC				; icu_56::VArray::~VArray, COMDAT
; _this$ = ecx
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN4@VArray
; Line 201
	mov	DWORD PTR _i$43389[ebp], 0
	jmp	SHORT $LN3@VArray
$LN2@VArray:
	mov	eax, DWORD PTR _i$43389[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43389[ebp], eax
$LN3@VArray:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$43389[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN4@VArray
; Line 202
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _i$43389[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 203
	jmp	SHORT $LN2@VArray
$LN4@VArray:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1VArray@icu_56@@QAE@XZ ENDP				; icu_56::VArray::~VArray
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@VArray@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@VArray@icu_56@@QAEHXZ PROC			; icu_56::VArray::length, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@VArray@icu_56@@QAEHXZ ENDP			; icu_56::VArray::length
_TEXT	ENDS
EXTRN	_memset:PROC
EXTRN	_uprv_realloc_56:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_count$43411 = -32					; size = 4
_start$43410 = -20					; size = 4
_this$ = -8						; size = 4
_elem$ = 8						; size = 4
_status$ = 12						; size = 4
?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z PROC	; icu_56::VArray::add, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN10@add
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN8@add
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN7@add
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	jmp	SHORT $LN6@add
$LN7@add:
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 256			; 00000100H
	jge	SHORT $LN5@add
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 219
	jmp	SHORT $LN6@add
$LN5@add:
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN6@add:
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@add
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 224
	jmp	SHORT $LN2@add
$LN3@add:
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@add:
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@add
; Line 229
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 230
	jmp	SHORT $LN10@add
$LN1@add:
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _start$43410[ebp], ecx
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx+8]
	shl	edx, 2
	mov	DWORD PTR _count$43411[ebp], edx
; Line 234
	mov	eax, DWORD PTR _count$43411[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$43410[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN8@add:
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _elem$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN10@add:
; Line 238
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ENDP	; icu_56::VArray::add
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?release@VArray@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?release@VArray@icu_56@@QAEPAPAXXZ PROC			; icu_56::VArray::release, COMDAT
; _this$ = ecx
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 245
	mov	eax, DWORD PTR _result$[ebp]
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?release@VArray@icu_56@@QAEPAPAXXZ ENDP			; icu_56::VArray::release
_TEXT	ENDS
PUBLIC	??_7StringLocalizationInfo@icu_56@@6B@		; icu_56::StringLocalizationInfo::`vftable'
PUBLIC	??0LocalizationInfo@icu_56@@QAE@XZ		; icu_56::LocalizationInfo::LocalizationInfo
PUBLIC	??_R4StringLocalizationInfo@icu_56@@6B@		; icu_56::StringLocalizationInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringLocalizationInfo@icu_56@@@8	; icu_56::StringLocalizationInfo `RTTI Type Descriptor'
PUBLIC	??_R3StringLocalizationInfo@icu_56@@8		; icu_56::StringLocalizationInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringLocalizationInfo@icu_56@@8		; icu_56::StringLocalizationInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringLocalizationInfo@icu_56@@8	; icu_56::StringLocalizationInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getNumberOfRuleSets@StringLocalizationInfo@icu_56@@UBEHXZ ; icu_56::StringLocalizationInfo::getNumberOfRuleSets
PUBLIC	?getRuleSetName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z ; icu_56::StringLocalizationInfo::getRuleSetName
PUBLIC	?getNumberOfDisplayLocales@StringLocalizationInfo@icu_56@@UBEHXZ ; icu_56::StringLocalizationInfo::getNumberOfDisplayLocales
PUBLIC	?getLocaleName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z ; icu_56::StringLocalizationInfo::getLocaleName
PUBLIC	?getDisplayName@StringLocalizationInfo@icu_56@@UBEPB_WHH@Z ; icu_56::StringLocalizationInfo::getDisplayName
EXTRN	??_EStringLocalizationInfo@icu_56@@UAEPAXI@Z:PROC ; icu_56::StringLocalizationInfo::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@StringLocalizationInfo@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringLocalizationInfo@icu_56@@8 DD FLAT:??_R0?AVStringLocalizationInfo@icu_56@@@8 ; icu_56::StringLocalizationInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringLocalizationInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringLocalizationInfo@icu_56@@8
rdata$r	SEGMENT
??_R2StringLocalizationInfo@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringLocalizationInfo@icu_56@@8 ; icu_56::StringLocalizationInfo::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@LocalizationInfo@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringLocalizationInfo@icu_56@@8
rdata$r	SEGMENT
??_R3StringLocalizationInfo@icu_56@@8 DD 00H		; icu_56::StringLocalizationInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringLocalizationInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringLocalizationInfo@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringLocalizationInfo@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringLocalizationInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringLocalizationInfo@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringLocalizationInfo@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringLocalizationInfo@icu_56@@6B@ DD 00H		; icu_56::StringLocalizationInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringLocalizationInfo@icu_56@@@8
	DD	FLAT:??_R3StringLocalizationInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringLocalizationInfo@icu_56@@6B@
CONST	SEGMENT
??_7StringLocalizationInfo@icu_56@@6B@ DD FLAT:??_R4StringLocalizationInfo@icu_56@@6B@ ; icu_56::StringLocalizationInfo::`vftable'
	DD	FLAT:??_EStringLocalizationInfo@icu_56@@UAEPAXI@Z
	DD	FLAT:??8LocalizationInfo@icu_56@@UBECPBV01@@Z
	DD	FLAT:?getNumberOfRuleSets@StringLocalizationInfo@icu_56@@UBEHXZ
	DD	FLAT:?getRuleSetName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z
	DD	FLAT:?getNumberOfDisplayLocales@StringLocalizationInfo@icu_56@@UBEHXZ
	DD	FLAT:?getLocaleName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z
	DD	FLAT:?getDisplayName@StringLocalizationInfo@icu_56@@UBEPB_WHH@Z
	DD	FLAT:?indexForLocale@LocalizationInfo@icu_56@@UBEHPB_W@Z
	DD	FLAT:?indexForRuleSet@LocalizationInfo@icu_56@@UBEHPB_W@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0StringLocalizationInfo@icu_56@@AAE@PA_WPAPAPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_d$ = 12						; size = 4
_numRS$ = 16						; size = 4
_numLocs$ = 20						; size = 4
??0StringLocalizationInfo@icu_56@@AAE@PA_WPAPAPA_WHH@Z PROC ; icu_56::StringLocalizationInfo::StringLocalizationInfo, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0LocalizationInfo@icu_56@@QAE@XZ	; icu_56::LocalizationInfo::LocalizationInfo
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringLocalizationInfo@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numRS$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numLocs$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 262
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0StringLocalizationInfo@icu_56@@AAE@PA_WPAPAPA_WHH@Z ENDP ; icu_56::StringLocalizationInfo::StringLocalizationInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0LocalizationInfo@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0LocalizationInfo@icu_56@@QAE@XZ PROC			; icu_56::LocalizationInfo::LocalizationInfo, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LocalizationInfo@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0LocalizationInfo@icu_56@@QAE@XZ ENDP			; icu_56::LocalizationInfo::LocalizationInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNumberOfRuleSets@StringLocalizationInfo@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumberOfRuleSets@StringLocalizationInfo@icu_56@@UBEHXZ PROC ; icu_56::StringLocalizationInfo::getNumberOfRuleSets, COMDAT
; _this$ = ecx
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumberOfRuleSets@StringLocalizationInfo@icu_56@@UBEHXZ ENDP ; icu_56::StringLocalizationInfo::getNumberOfRuleSets
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNumberOfDisplayLocales@StringLocalizationInfo@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumberOfDisplayLocales@StringLocalizationInfo@icu_56@@UBEHXZ PROC ; icu_56::StringLocalizationInfo::getNumberOfDisplayLocales, COMDAT
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumberOfDisplayLocales@StringLocalizationInfo@icu_56@@UBEHXZ ENDP ; icu_56::StringLocalizationInfo::getNumberOfDisplayLocales
_TEXT	ENDS
PUBLIC	??1StringLocalizationInfo@icu_56@@UAE@XZ	; icu_56::StringLocalizationInfo::~StringLocalizationInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringLocalizationInfo@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringLocalizationInfo@icu_56@@UAEPAXI@Z PROC	; icu_56::StringLocalizationInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringLocalizationInfo@icu_56@@UAE@XZ ; icu_56::StringLocalizationInfo::~StringLocalizationInfo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringLocalizationInfo@icu_56@@UAEPAXI@Z ENDP	; icu_56::StringLocalizationInfo::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?inc@LocDataParser@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?inc@LocDataParser@icu_56@@AAEXXZ PROC			; icu_56::LocDataParser::inc, COMDAT
; _this$ = ecx
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?inc@LocDataParser@icu_56@@AAEXXZ ENDP			; icu_56::LocDataParser::inc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?checkInc@LocDataParser@icu_56@@AAEC_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?checkInc@LocDataParser@icu_56@@AAEC_W@Z PROC		; icu_56::LocDataParser::checkInc, COMDAT
; _this$ = ecx
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN2@checkInc
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	movzx	edx, WORD PTR _c$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@checkInc
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movzx	edx, WORD PTR [ecx]
	movzx	eax, WORD PTR _c$[ebp]
	cmp	edx, eax
	jne	SHORT $LN2@checkInc
$LN1@checkInc:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inc@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::inc
	mov	al, 1
	jmp	SHORT $LN3@checkInc
$LN2@checkInc:
	xor	al, al
$LN3@checkInc:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?checkInc@LocDataParser@icu_56@@AAEC_W@Z ENDP		; icu_56::LocDataParser::checkInc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?check@LocDataParser@icu_56@@AAEC_W@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?check@LocDataParser@icu_56@@AAEC_W@Z PROC		; icu_56::LocDataParser::check, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN4@check
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	movzx	edx, WORD PTR _c$[ebp]
	cmp	ecx, edx
	je	SHORT $LN3@check
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movzx	edx, WORD PTR [ecx]
	movzx	eax, WORD PTR _c$[ebp]
	cmp	edx, eax
	jne	SHORT $LN4@check
$LN3@check:
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN5@check
$LN4@check:
	mov	BYTE PTR tv76[ebp], 0
$LN5@check:
	mov	al, BYTE PTR tv76[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?check@LocDataParser@icu_56@@AAEC_W@Z ENDP		; icu_56::LocDataParser::check
_TEXT	ENDS
EXTRN	__imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipWhitespace@LocDataParser@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv74 = -206						; size = 2
_this$ = -8						; size = 4
?skipWhitespace@LocDataParser@icu_56@@AAEXXZ PROC	; icu_56::LocDataParser::skipWhitespace, COMDAT
; _this$ = ecx
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN2@skipWhites:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN3@skipWhites
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	cmp	ecx, 65535				; 0000ffffH
	je	SHORT $LN5@skipWhites
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR tv74[ebp], ax
	jmp	SHORT $LN6@skipWhites
$LN5@skipWhites:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv74[ebp], ax
$LN6@skipWhites:
	movzx	ecx, WORD PTR tv74[ebp]
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@skipWhites
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inc@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::inc
	jmp	SHORT $LN2@skipWhites
$LN3@skipWhites:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ENDP	; icu_56::LocDataParser::skipWhitespace
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DeleteFn@icu_56@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?DeleteFn@icu_56@@YAXPAX@Z PROC				; icu_56::DeleteFn, COMDAT
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 354
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 355
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteFn@icu_56@@YAXPAX@Z ENDP				; icu_56::DeleteFn
_TEXT	ENDS
PUBLIC	?nextString@LocDataParser@icu_56@@AAEPA_WXZ	; icu_56::LocDataParser::nextString
PUBLIC	??0VArray@icu_56@@QAE@XZ			; icu_56::VArray::VArray
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z$0
__ehfuncinfo$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z
_TEXT	SEGMENT
$T51816 = -344						; size = 4
$T51817 = -332						; size = 4
$T51818 = -320						; size = 4
$T51819 = -308						; size = 4
$T51820 = -296						; size = 4
$T51821 = -284						; size = 4
_haveComma$43597 = -77					; size = 1
_elem$43596 = -68					; size = 4
_mightHaveNext$ = -53					; size = 1
_array$ = -44						; size = 16
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_requiredLength$ = 8					; size = 4
?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z PROC	; icu_56::LocDataParser::nextArray, COMDAT
; _this$ = ecx
; Line 441
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 442
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@nextArray
; Line 443
	xor	eax, eax
	jmp	$LN16@nextArray
$LN15@nextArray:
; Line 446
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 447
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkInc@LocDataParser@icu_56@@AAEC_W@Z ; icu_56::LocDataParser::checkInc
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN14@nextArray
; Line 448
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
	jmp	$LN16@nextArray
$LN14@nextArray:
; Line 451
	lea	ecx, DWORD PTR _array$[ebp]
	call	??0VArray@icu_56@@QAE@XZ		; icu_56::VArray::VArray
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 452
	mov	BYTE PTR _mightHaveNext$[ebp], 1
$LN13@nextArray:
; Line 453
	movsx	eax, BYTE PTR _mightHaveNext$[ebp]
	test	eax, eax
	je	$LN12@nextArray
; Line 454
	mov	BYTE PTR _mightHaveNext$[ebp], 0
; Line 455
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextString@LocDataParser@icu_56@@AAEPA_WXZ ; icu_56::LocDataParser::nextString
	mov	DWORD PTR _elem$43596[ebp], eax
; Line 456
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 457
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?check@LocDataParser@icu_56@@AAEC_W@Z	; icu_56::LocDataParser::check
	mov	BYTE PTR _haveComma$43597[ebp], al
; Line 458
	cmp	DWORD PTR _elem$43596[ebp], 0
	je	SHORT $LN11@nextArray
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _elem$43596[ebp]
	push	edx
	lea	ecx, DWORD PTR _array$[ebp]
	call	?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::VArray::add
; Line 460
	movsx	eax, BYTE PTR _haveComma$43597[ebp]
	test	eax, eax
	je	SHORT $LN10@nextArray
; Line 461
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inc@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::inc
; Line 462
	mov	BYTE PTR _mightHaveNext$[ebp], 1
$LN10@nextArray:
; Line 463
	jmp	SHORT $LN9@nextArray
$LN11@nextArray:
; Line 464
	movsx	eax, BYTE PTR _haveComma$43597[ebp]
	test	eax, eax
	je	SHORT $LN9@nextArray
; Line 465
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51816[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51816[ebp]
	jmp	$LN16@nextArray
$LN9@nextArray:
; Line 467
	jmp	$LN13@nextArray
$LN12@nextArray:
; Line 468
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 469
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkInc@LocDataParser@icu_56@@AAEC_W@Z ; icu_56::LocDataParser::checkInc
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN7@nextArray
; Line 470
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?check@LocDataParser@icu_56@@AAEC_W@Z	; icu_56::LocDataParser::check
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@nextArray
; Line 471
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51817[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51817[ebp]
	jmp	$LN16@nextArray
; Line 472
	jmp	SHORT $LN7@nextArray
$LN6@nextArray:
; Line 473
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51818[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51818[ebp]
	jmp	$LN16@nextArray
$LN7@nextArray:
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _array$[ebp]
	call	?add@VArray@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::VArray::add
; Line 478
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	$LN4@nextArray
; Line 479
	mov	eax, DWORD PTR _requiredLength$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN3@nextArray
; Line 480
	lea	ecx, DWORD PTR _array$[ebp]
	call	?length@VArray@icu_56@@QAEHXZ		; icu_56::VArray::length
	add	eax, 1
	mov	ecx, DWORD PTR _requiredLength$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@nextArray
$LN3@nextArray:
; Line 481
	lea	ecx, DWORD PTR _array$[ebp]
	call	?length@VArray@icu_56@@QAEHXZ		; icu_56::VArray::length
	mov	ecx, DWORD PTR _requiredLength$[ebp]
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $LN2@nextArray
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 1
; Line 483
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51819[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51819[ebp]
	jmp	SHORT $LN16@nextArray
$LN2@nextArray:
; Line 486
	lea	ecx, DWORD PTR _array$[ebp]
	call	?release@VArray@icu_56@@QAEPAPAXXZ	; icu_56::VArray::release
	mov	DWORD PTR $T51820[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51820[ebp]
	jmp	SHORT $LN16@nextArray
$LN4@nextArray:
; Line 488
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	mov	DWORD PTR $T51821[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
	mov	eax, DWORD PTR $T51821[ebp]
$LN16@nextArray:
; Line 489
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@nextArray
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN22@nextArray:
	DD	1
	DD	$LN21@nextArray
$LN21@nextArray:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN19@nextArray
$LN19@nextArray:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z$0:
	lea	ecx, DWORD PTR _array$[ebp]
	jmp	??1VArray@icu_56@@QAE@XZ		; icu_56::VArray::~VArray
__ehhandler$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nextArray@LocDataParser@icu_56@@AAEPAPA_WAAH@Z ENDP	; icu_56::LocDataParser::nextArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0VArray@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0VArray@icu_56@@QAE@XZ PROC				; icu_56::VArray::VArray, COMDAT
; _this$ = ecx
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0VArray@icu_56@@QAE@XZ ENDP				; icu_56::VArray::VArray
_TEXT	ENDS
PUBLIC	?inList@LocDataParser@icu_56@@ABEC_WPB_W@Z	; icu_56::LocDataParser::inList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextString@LocDataParser@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv80 = -280						; size = 4
tv74 = -277						; size = 1
_x$43631 = -80						; size = 2
_start$43626 = -68					; size = 4
_haveQuote$43623 = -53					; size = 1
_c$43622 = -44						; size = 2
_terminators$43621 = -32				; size = 4
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?nextString@LocDataParser@icu_56@@AAEPA_WXZ PROC	; icu_56::LocDataParser::nextString, COMDAT
; _this$ = ecx
; Line 492
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 493
	mov	DWORD PTR _result$[ebp], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhitespace@LocDataParser@icu_56@@AAEXXZ ; icu_56::LocDataParser::skipWhitespace
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jae	$LN14@nextString
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _c$43622[ebp], dx
; Line 499
	movzx	eax, WORD PTR _c$43622[ebp]
	cmp	eax, 34					; 00000022H
	je	SHORT $LN17@nextString
	movzx	ecx, WORD PTR _c$43622[ebp]
	cmp	ecx, 39					; 00000027H
	je	SHORT $LN17@nextString
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN18@nextString
$LN17@nextString:
	mov	BYTE PTR tv74[ebp], 1
$LN18@nextString:
	mov	dl, BYTE PTR tv74[ebp]
	mov	BYTE PTR _haveQuote$43623[ebp], dl
; Line 500
	movsx	eax, BYTE PTR _haveQuote$43623[ebp]
	test	eax, eax
	je	SHORT $LN13@nextString
; Line 501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inc@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::inc
; Line 502
	movzx	eax, WORD PTR _c$43622[ebp]
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN19@nextString
	mov	DWORD PTR tv80[ebp], OFFSET _DQUOTE_STOPLIST
	jmp	SHORT $LN20@nextString
$LN19@nextString:
	mov	DWORD PTR tv80[ebp], OFFSET _SQUOTE_STOPLIST
$LN20@nextString:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _terminators$43621[ebp], ecx
; Line 503
	jmp	SHORT $LN12@nextString
$LN13@nextString:
; Line 504
	mov	DWORD PTR _terminators$43621[ebp], OFFSET _NOQUOTE_STOPLIST
$LN12@nextString:
; Line 506
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _start$43626[ebp], ecx
$LN11@nextString:
; Line 507
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN10@nextString
	mov	eax, DWORD PTR _terminators$43621[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movzx	eax, WORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inList@LocDataParser@icu_56@@ABEC_WPB_W@Z ; icu_56::LocDataParser::inList
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@nextString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
	jmp	SHORT $LN11@nextString
$LN10@nextString:
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN9@nextString
; Line 509
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
	jmp	$LN15@nextString
$LN9@nextString:
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _x$43631[ebp], dx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _start$43626[ebp]
	jbe	SHORT $LN8@nextString
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _x$43631[ebp]
	mov	WORD PTR [eax+12], cx
; Line 515
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	xor	edx, edx
	mov	WORD PTR [ecx], dx
; Line 516
	mov	eax, DWORD PTR _start$43626[ebp]
	mov	DWORD PTR _result$[ebp], eax
$LN8@nextString:
; Line 518
	movsx	eax, BYTE PTR _haveQuote$43623[ebp]
	test	eax, eax
	je	SHORT $LN7@nextString
; Line 519
	movzx	eax, WORD PTR _x$43631[ebp]
	movzx	ecx, WORD PTR _c$43622[ebp]
	cmp	eax, ecx
	je	SHORT $LN6@nextString
; Line 520
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
	jmp	SHORT $LN15@nextString
	jmp	SHORT $LN5@nextString
$LN6@nextString:
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _start$43626[ebp]
	jne	SHORT $LN5@nextString
; Line 522
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
	jmp	SHORT $LN15@nextString
$LN5@nextString:
; Line 524
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inc@LocDataParser@icu_56@@AAEXXZ	; icu_56::LocDataParser::inc
	jmp	SHORT $LN14@nextString
$LN7@nextString:
; Line 525
	movzx	eax, WORD PTR _x$43631[ebp]
	cmp	eax, 60					; 0000003cH
	je	SHORT $LN1@nextString
	movzx	eax, WORD PTR _x$43631[ebp]
	cmp	eax, 39					; 00000027H
	je	SHORT $LN1@nextString
	movzx	eax, WORD PTR _x$43631[ebp]
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN14@nextString
$LN1@nextString:
; Line 526
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseError@LocDataParser@icu_56@@AAEXPBD@Z ; icu_56::LocDataParser::parseError
	xor	eax, eax
	jmp	SHORT $LN15@nextString
$LN14@nextString:
; Line 531
	mov	eax, DWORD PTR _result$[ebp]
$LN15@nextString:
; Line 532
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?nextString@LocDataParser@icu_56@@AAEPA_WXZ ENDP	; icu_56::LocDataParser::nextString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?inList@LocDataParser@icu_56@@ABEC_WPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_list$ = 12						; size = 4
?inList@LocDataParser@icu_56@@ABEC_WPB_W@Z PROC		; icu_56::LocDataParser::inList, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 320
	mov	eax, DWORD PTR _list$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN2@inList
	movzx	eax, WORD PTR _c$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@inList
	mov	al, 1
	jmp	SHORT $LN4@inList
$LN2@inList:
; Line 321
	mov	eax, DWORD PTR _list$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@inList
	mov	eax, DWORD PTR _list$[ebp]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR _c$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@inList
	mov	eax, DWORD PTR _list$[ebp]
	add	eax, 2
	mov	DWORD PTR _list$[ebp], eax
	jmp	SHORT $LN2@inList
$LN1@inList:
	mov	eax, DWORD PTR _list$[ebp]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR _c$[ebp]
	cmp	ecx, edx
	sete	al
$LN4@inList:
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?inList@LocDataParser@icu_56@@ABEC_WPB_W@Z ENDP		; icu_56::LocDataParser::inList
_TEXT	ENDS
EXTRN	_u_strncpy_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseError@LocDataParser@icu_56@@AAEXPBD@Z
_TEXT	SEGMENT
_limit$ = -44						; size = 4
_x$43647 = -32						; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?parseError@LocDataParser@icu_56@@AAEXPBD@Z PROC	; icu_56::LocDataParser::parseError, COMDAT
; _this$ = ecx
; Line 535
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 536
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN7@parseError
; Line 537
	jmp	$LN8@parseError
$LN7@parseError:
; Line 540
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 34					; 00000022H
	mov	DWORD PTR _start$[ebp], ecx
; Line 541
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN6@parseError
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _start$[ebp], ecx
$LN6@parseError:
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _x$43647[ebp], ecx
$LN5@parseError:
	mov	eax, DWORD PTR _x$43647[ebp]
	sub	eax, 2
	mov	DWORD PTR _x$43647[ebp], eax
	mov	ecx, DWORD PTR _x$43647[ebp]
	cmp	ecx, DWORD PTR _start$[ebp]
	jb	SHORT $LN4@parseError
; Line 545
	mov	eax, DWORD PTR _x$43647[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@parseError
; Line 546
	mov	eax, DWORD PTR _x$43647[ebp]
	add	eax, 2
	mov	DWORD PTR _start$[ebp], eax
; Line 547
	jmp	SHORT $LN4@parseError
$LN3@parseError:
; Line 549
	jmp	SHORT $LN5@parseError
$LN4@parseError:
; Line 550
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 30					; 0000001eH
	mov	DWORD PTR _limit$[ebp], ecx
; Line 551
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limit$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN2@parseError
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _limit$[ebp], ecx
$LN2@parseError:
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _start$[ebp]
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 8
	push	ecx
	call	_u_strncpy_56
	add	esp, 12					; 0000000cH
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR _start$[ebp]
	sar	eax, 1
	xor	edx, edx
	mov	WORD PTR [ecx+eax*2+8], dx
; Line 556
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 40					; 00000028H
	push	edx
	call	_u_strncpy_56
	add	esp, 12					; 0000000cH
; Line 557
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR [edx+8]
	sar	eax, 1
	xor	edx, edx
	mov	WORD PTR [ecx+eax*2+40], dx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+4], edx
; Line 580
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 581
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 582
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 583
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 585
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@parseError
; Line 586
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 9
$LN8@parseError:
; Line 588
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?parseError@LocDataParser@icu_56@@AAEXPBD@Z ENDP	; icu_56::LocDataParser::parseError
_TEXT	ENDS
PUBLIC	??1LocDataParser@icu_56@@QAE@XZ			; icu_56::LocDataParser::~LocDataParser
PUBLIC	??0LocDataParser@icu_56@@QAE@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::LocDataParser::LocDataParser
PUBLIC	?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::StringLocalizationInfo::create
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51846 = -268						; size = 4
_parser$ = -64						; size = 24
_p$ = -32						; size = 4
_len$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_info$ = 8						; size = 4
_perror$ = 12						; size = 4
_status$ = 16						; size = 4
?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::StringLocalizationInfo::create, COMDAT
; Line 593
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 594
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@create
; Line 595
	xor	eax, eax
	jmp	$LN5@create
$LN4@create:
; Line 598
	mov	esi, esp
	mov	ecx, DWORD PTR _info$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 599
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN3@create
; Line 600
	xor	eax, eax
	jmp	$LN5@create
$LN3@create:
; Line 603
	mov	eax, DWORD PTR _len$[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 604
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@create
; Line 605
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 606
	xor	eax, eax
	jmp	SHORT $LN5@create
$LN2@create:
; Line 608
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _info$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 609
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@create
; Line 610
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@create:
; Line 613
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??0LocDataParser@icu_56@@QAE@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::LocDataParser::LocDataParser
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 614
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _parser$[ebp]
	call	?parse@LocDataParser@icu_56@@QAEPAVStringLocalizationInfo@2@PA_WH@Z ; icu_56::LocDataParser::parse
	mov	DWORD PTR $T51846[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??1LocDataParser@icu_56@@QAE@XZ		; icu_56::LocDataParser::~LocDataParser
	mov	eax, DWORD PTR $T51846[ebp]
$LN5@create:
; Line 615
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@create
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@create:
	DD	1
	DD	$LN10@create
$LN10@create:
	DD	-64					; ffffffc0H
	DD	24					; 00000018H
	DD	$LN8@create
$LN8@create:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _parser$[ebp]
	jmp	??1LocDataParser@icu_56@@QAE@XZ		; icu_56::LocDataParser::~LocDataParser
__ehhandler$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::StringLocalizationInfo::create
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0LocDataParser@icu_56@@QAE@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_parseError$ = 8					; size = 4
_status$ = 12						; size = 4
??0LocDataParser@icu_56@@QAE@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::LocDataParser::LocDataParser, COMDAT
; _this$ = ecx
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0LocDataParser@icu_56@@QAE@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocDataParser::LocDataParser
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1LocDataParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LocDataParser@icu_56@@QAE@XZ PROC			; icu_56::LocDataParser::~LocDataParser, COMDAT
; _this$ = ecx
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1LocDataParser@icu_56@@QAE@XZ ENDP			; icu_56::LocDataParser::~LocDataParser
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1StringLocalizationInfo@icu_56@@UAE@XZ
_TEXT	SEGMENT
_p$43676 = -20						; size = 4
_this$ = -8						; size = 4
??1StringLocalizationInfo@icu_56@@UAE@XZ PROC		; icu_56::StringLocalizationInfo::~StringLocalizationInfo, COMDAT
; _this$ = ecx
; Line 617
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringLocalizationInfo@icu_56@@6B@
; Line 618
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _p$43676[ebp], ecx
	jmp	SHORT $LN6@StringLoca
$LN5@StringLoca:
	mov	eax, DWORD PTR _p$43676[ebp]
	add	eax, 4
	mov	DWORD PTR _p$43676[ebp], eax
$LN6@StringLoca:
	mov	eax, DWORD PTR _p$43676[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@StringLoca
; Line 620
	mov	eax, DWORD PTR _p$43676[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@StringLoca
	mov	eax, DWORD PTR _p$43676[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN3@StringLoca:
; Line 621
	jmp	SHORT $LN5@StringLoca
$LN4@StringLoca:
; Line 622
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@StringLoca
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@StringLoca:
; Line 623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@StringLoca
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN7@StringLoca:
; Line 624
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LocalizationInfo@icu_56@@MAE@XZ	; icu_56::LocalizationInfo::~LocalizationInfo
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1StringLocalizationInfo@icu_56@@UAE@XZ ENDP		; icu_56::StringLocalizationInfo::~StringLocalizationInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRuleSetName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getRuleSetName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z PROC ; icu_56::StringLocalizationInfo::getRuleSetName, COMDAT
; _this$ = ecx
; Line 628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 629
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@getRuleSet
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _index$[ebp], eax
	jge	SHORT $LN1@getRuleSet
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN2@getRuleSet
$LN1@getRuleSet:
; Line 632
	xor	eax, eax
$LN2@getRuleSet:
; Line 633
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getRuleSetName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z ENDP ; icu_56::StringLocalizationInfo::getRuleSetName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getLocaleName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getLocaleName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z PROC ; icu_56::StringLocalizationInfo::getLocaleName, COMDAT
; _this$ = ecx
; Line 636
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 637
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@getLocaleN
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _index$[ebp], eax
	jge	SHORT $LN1@getLocaleN
; Line 638
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4+4]
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN2@getLocaleN
$LN1@getLocaleN:
; Line 640
	xor	eax, eax
$LN2@getLocaleN:
; Line 641
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocaleName@StringLocalizationInfo@icu_56@@UBEPB_WH@Z ENDP ; icu_56::StringLocalizationInfo::getLocaleName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDisplayName@StringLocalizationInfo@icu_56@@UBEPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_localeIndex$ = 8					; size = 4
_ruleIndex$ = 12					; size = 4
?getDisplayName@StringLocalizationInfo@icu_56@@UBEPB_WHH@Z PROC ; icu_56::StringLocalizationInfo::getDisplayName, COMDAT
; _this$ = ecx
; Line 644
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 646
	cmp	DWORD PTR _localeIndex$[ebp], 0
	jl	SHORT $LN1@getDisplay
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _localeIndex$[ebp], eax
	jge	SHORT $LN1@getDisplay
	cmp	DWORD PTR _ruleIndex$[ebp], 0
	jl	SHORT $LN1@getDisplay
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _ruleIndex$[ebp], eax
	jge	SHORT $LN1@getDisplay
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _localeIndex$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4+4]
	mov	ecx, DWORD PTR _ruleIndex$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4+4]
	jmp	SHORT $LN2@getDisplay
$LN1@getDisplay:
; Line 649
	xor	eax, eax
$LN2@getDisplay:
; Line 650
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getDisplayName@StringLocalizationInfo@icu_56@@UBEPB_WHH@Z ENDP ; icu_56::StringLocalizationInfo::getDisplayName
_TEXT	ENDS
PUBLIC	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
PUBLIC	??_7RuleBasedNumberFormat@icu_56@@6B@		; icu_56::RuleBasedNumberFormat::`vftable'
PUBLIC	??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	??_R4RuleBasedNumberFormat@icu_56@@6B@		; icu_56::RuleBasedNumberFormat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRuleBasedNumberFormat@icu_56@@@8	; icu_56::RuleBasedNumberFormat `RTTI Type Descriptor'
PUBLIC	??_R3RuleBasedNumberFormat@icu_56@@8		; icu_56::RuleBasedNumberFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RuleBasedNumberFormat@icu_56@@8		; icu_56::RuleBasedNumberFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RuleBasedNumberFormat@icu_56@@8	; icu_56::RuleBasedNumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@NumberFormat@icu_56@@8		; icu_56::NumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNumberFormat@icu_56@@@8			; icu_56::NumberFormat `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormat@icu_56@@8			; icu_56::NumberFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormat@icu_56@@8			; icu_56::NumberFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Format@icu_56@@8			; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFormat@icu_56@@@8			; icu_56::Format `RTTI Type Descriptor'
PUBLIC	??_R3Format@icu_56@@8				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Format@icu_56@@8				; icu_56::Format::`RTTI Base Class Array'
PUBLIC	??8RuleBasedNumberFormat@icu_56@@UBECABVFormat@1@@Z ; icu_56::RuleBasedNumberFormat::operator==
PUBLIC	?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ ; icu_56::RuleBasedNumberFormat::clone
PUBLIC	?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z ; icu_56::RuleBasedNumberFormat::format
PUBLIC	?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z ; icu_56::RuleBasedNumberFormat::format
PUBLIC	?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ; icu_56::RuleBasedNumberFormat::format
PUBLIC	?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ; icu_56::RuleBasedNumberFormat::parse
PUBLIC	?setLenient@RuleBasedNumberFormat@icu_56@@UAEXC@Z ; icu_56::RuleBasedNumberFormat::setLenient
PUBLIC	?setContext@RuleBasedNumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::setContext
PUBLIC	?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ ; icu_56::RuleBasedNumberFormat::getRules
PUBLIC	?getNumberOfRuleSetNames@RuleBasedNumberFormat@icu_56@@UBEHXZ ; icu_56::RuleBasedNumberFormat::getNumberOfRuleSetNames
PUBLIC	?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z ; icu_56::RuleBasedNumberFormat::getRuleSetName
PUBLIC	?getNumberOfRuleSetDisplayNameLocales@RuleBasedNumberFormat@icu_56@@UBEHXZ ; icu_56::RuleBasedNumberFormat::getNumberOfRuleSetDisplayNameLocales
PUBLIC	?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayNameLocale
PUBLIC	?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayName
PUBLIC	?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayName
PUBLIC	?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::format
PUBLIC	?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::format
PUBLIC	?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::format
PUBLIC	?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::setDefaultRuleSet
PUBLIC	?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultRuleSetName
PUBLIC	?adoptDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z ; icu_56::RuleBasedNumberFormat::adoptDecimalFormatSymbols
PUBLIC	?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z ; icu_56::RuleBasedNumberFormat::setDecimalFormatSymbols
EXTRN	__imp_??1Locale@icu_56@@UAE@XZ:PROC
EXTRN	??1NumberFormat@icu_56@@UAE@XZ:PROC		; icu_56::NumberFormat::~NumberFormat
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	??0NumberFormat@icu_56@@IAE@XZ:PROC		; icu_56::NumberFormat::NumberFormat
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?parseObject@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z:PROC ; icu_56::NumberFormat::parseObject
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?parse@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::parse
EXTRN	?parseCurrency@NumberFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z:PROC ; icu_56::NumberFormat::parseCurrency
EXTRN	?setParseIntegerOnly@NumberFormat@icu_56@@UAEXC@Z:PROC ; icu_56::NumberFormat::setParseIntegerOnly
EXTRN	?setGroupingUsed@NumberFormat@icu_56@@UAEXC@Z:PROC ; icu_56::NumberFormat::setGroupingUsed
EXTRN	?setMaximumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMaximumIntegerDigits
EXTRN	?setMinimumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMinimumIntegerDigits
EXTRN	?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMaximumFractionDigits
EXTRN	?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMinimumFractionDigits
EXTRN	?setCurrency@NumberFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::setCurrency
EXTRN	?getContext@NumberFormat@icu_56@@UBE?AW4UDisplayContext@@W4UDisplayContextType@@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::getContext
EXTRN	?getEffectiveCurrency@NumberFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::getEffectiveCurrency
;	COMDAT ??_R2Format@icu_56@@8
rdata$r	SEGMENT
??_R2Format@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Format@icu_56@@8 ; icu_56::Format::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Format@icu_56@@8
rdata$r	SEGMENT
??_R3Format@icu_56@@8 DD 00H				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Format `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Format@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Format@icu_56@@8 DD FLAT:??_R0?AVFormat@icu_56@@@8 ; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8 ; icu_56::NumberFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormat@icu_56@@8 DD 00H			; icu_56::NumberFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2NumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormat@icu_56@@8 DD FLAT:??_R0?AVNumberFormat@icu_56@@@8 ; icu_56::NumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RuleBasedNumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RuleBasedNumberFormat@icu_56@@8 DD FLAT:??_R0?AVRuleBasedNumberFormat@icu_56@@@8 ; icu_56::RuleBasedNumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RuleBasedNumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2RuleBasedNumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R2RuleBasedNumberFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@RuleBasedNumberFormat@icu_56@@8 ; icu_56::RuleBasedNumberFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3RuleBasedNumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R3RuleBasedNumberFormat@icu_56@@8 DD 00H		; icu_56::RuleBasedNumberFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2RuleBasedNumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRuleBasedNumberFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleBasedNumberFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RuleBasedNumberFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleBasedNumberFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RuleBasedNumberFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4RuleBasedNumberFormat@icu_56@@6B@ DD 00H		; icu_56::RuleBasedNumberFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRuleBasedNumberFormat@icu_56@@@8
	DD	FLAT:??_R3RuleBasedNumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7RuleBasedNumberFormat@icu_56@@6B@
CONST	SEGMENT
??_7RuleBasedNumberFormat@icu_56@@6B@ DD FLAT:??_R4RuleBasedNumberFormat@icu_56@@6B@ ; icu_56::RuleBasedNumberFormat::`vftable'
	DD	FLAT:??_ERuleBasedNumberFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@RuleBasedNumberFormat@icu_56@@UBEPAXXZ
	DD	FLAT:??8RuleBasedNumberFormat@icu_56@@UBECABVFormat@1@@Z
	DD	FLAT:?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parseObject@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?parse@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?parseCurrency@NumberFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
	DD	FLAT:?setParseIntegerOnly@NumberFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setLenient@RuleBasedNumberFormat@icu_56@@UAEXC@Z
	DD	FLAT:?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ
	DD	FLAT:?setGroupingUsed@NumberFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setMaximumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setCurrency@NumberFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z
	DD	FLAT:?setContext@RuleBasedNumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z
	DD	FLAT:?getContext@NumberFormat@icu_56@@UBE?AW4UDisplayContext@@W4UDisplayContextType@@AAW4UErrorCode@@@Z
	DD	FLAT:?getEffectiveCurrency@NumberFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z
	DD	FLAT:?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	FLAT:?getNumberOfRuleSetNames@RuleBasedNumberFormat@icu_56@@UBEHXZ
	DD	FLAT:?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z
	DD	FLAT:?getNumberOfRuleSetDisplayNameLocales@RuleBasedNumberFormat@icu_56@@UBEHXZ
	DD	FLAT:?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z
	DD	FLAT:?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z
	DD	FLAT:?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z
	DD	FLAT:?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	FLAT:?adoptDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z
	DD	FLAT:?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_locinfo$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_locs$ = 12						; size = 4
_alocale$ = 16						; size = 4
_perror$ = 20						; size = 4
_status$ = 24						; size = 4
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 673
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	esi, esp
	mov	eax, DWORD PTR _alocale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 674
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locs$[ebp]
	push	edx
	call	?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::StringLocalizationInfo::create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _locinfo$[ebp], eax
; Line 675
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _description$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 676
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_locinfo$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_locs$ = 12						; size = 4
_perror$ = 16						; size = 4
_status$ = 20						; size = 4
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 697
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 698
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locs$[ebp]
	push	edx
	call	?create@StringLocalizationInfo@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::StringLocalizationInfo::create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _locinfo$[ebp], eax
; Line 699
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _description$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 700
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@0AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_info$ = 12						; size = 4
_alocale$ = 16						; size = 4
_perror$ = 20						; size = 4
_status$ = 24						; size = 4
??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 721
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	esi, esp
	mov	eax, DWORD PTR _alocale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 722
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _description$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 723
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@AAE@ABVUnicodeString@1@PAVLocalizationInfo@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_perror$ = 12						; size = 4
_status$ = 16						; size = 4
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 744
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 745
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _description$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 746
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_aLocale$ = 12						; size = 4
_perror$ = 16						; size = 4
_status$ = 20						; size = 4
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 768
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	esi, esp
	mov	eax, DWORD PTR _aLocale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 769
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _description$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 770
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString
PUBLIC	??_C@_0O@KPEDDPEP@icudt56l?9rbnf?$AA@		; `string'
PUBLIC	??_C@_0BF@FLHJEGCN@NumberingSystemRules?$AA@	; `string'
PUBLIC	??_C@_0O@BOALFNGC@DurationRules?$AA@		; `string'
PUBLIC	??_C@_0N@OAIEFJAM@OrdinalRules?$AA@		; `string'
PUBLIC	??_C@_0O@NKPJGHFM@SpelloutRules?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_09BLGNHOH@RBNFRules?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	_ures_hasNext_56:PROC
EXTRN	_ures_close_56:PROC
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	?setLocaleIDs@Format@icu_56@@IAEXPBD0@Z:PROC	; icu_56::Format::setLocaleIDs
EXTRN	_ures_getLocaleByType_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	__imp_?getName@Locale@icu_56@@QBEPBDXZ:PROC
;	COMDAT ??_C@_0O@KPEDDPEP@icudt56l?9rbnf?$AA@
CONST	SEGMENT
??_C@_0O@KPEDDPEP@icudt56l?9rbnf?$AA@ DB 'icudt56l-rbnf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FLHJEGCN@NumberingSystemRules?$AA@
CONST	SEGMENT
??_C@_0BF@FLHJEGCN@NumberingSystemRules?$AA@ DB 'NumberingSystemRules', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BOALFNGC@DurationRules?$AA@
CONST	SEGMENT
??_C@_0O@BOALFNGC@DurationRules?$AA@ DB 'DurationRules', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAIEFJAM@OrdinalRules?$AA@
CONST	SEGMENT
??_C@_0N@OAIEFJAM@OrdinalRules?$AA@ DB 'OrdinalRules', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKPJGHFM@SpelloutRules?$AA@
CONST	SEGMENT
??_C@_0O@NKPJGHFM@SpelloutRules?$AA@ DB 'SpelloutRules', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLGNHOH@RBNFRules?$AA@
CONST	SEGMENT
??_C@_09BLGNHOH@RBNFRules?$AA@ DB 'RBNFRules', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv222 = -524						; size = 4
tv227 = -520						; size = 4
tv142 = -520						; size = 4
$T43774 = -512						; size = 64
_perror$43775 = -248					; size = 72
_desc$43770 = -168					; size = 64
_ruleSets$43768 = -96					; size = 4
_rbnfRules$43766 = -84					; size = 4
_nfrb$ = -72						; size = 4
_locinfo$ = -60						; size = 4
_fmt_tag$ = -48						; size = 4
_rules_tag$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_tag$ = 8						; size = 4
_alocale$ = 12						; size = 4
_status$ = 16						; size = 4
??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 789
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 512				; 00000200H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 128				; 00000080H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	esi, esp
	mov	eax, DWORD PTR _alocale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 790
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@RuleBasedN
; Line 791
	jmp	$LN14@RuleBasedN
$LN13@RuleBasedN:
; Line 794
	mov	DWORD PTR _rules_tag$[ebp], OFFSET ??_C@_09BLGNHOH@RBNFRules?$AA@
; Line 795
	mov	DWORD PTR _fmt_tag$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 796
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv142[ebp], eax
	cmp	DWORD PTR tv142[ebp], 3
	ja	SHORT $LN6@RuleBasedN
	mov	ecx, DWORD PTR tv142[ebp]
	jmp	DWORD PTR $LN26@RuleBasedN[ecx*4]
$LN10@RuleBasedN:
; Line 797
	mov	DWORD PTR _fmt_tag$[ebp], OFFSET ??_C@_0O@NKPJGHFM@SpelloutRules?$AA@
	jmp	SHORT $LN11@RuleBasedN
$LN9@RuleBasedN:
; Line 798
	mov	DWORD PTR _fmt_tag$[ebp], OFFSET ??_C@_0N@OAIEFJAM@OrdinalRules?$AA@
	jmp	SHORT $LN11@RuleBasedN
$LN8@RuleBasedN:
; Line 799
	mov	DWORD PTR _fmt_tag$[ebp], OFFSET ??_C@_0O@BOALFNGC@DurationRules?$AA@
	jmp	SHORT $LN11@RuleBasedN
$LN7@RuleBasedN:
; Line 800
	mov	DWORD PTR _fmt_tag$[ebp], OFFSET ??_C@_0BF@FLHJEGCN@NumberingSystemRules?$AA@
	jmp	SHORT $LN11@RuleBasedN
$LN6@RuleBasedN:
; Line 801
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
	jmp	$LN14@RuleBasedN
$LN11@RuleBasedN:
; Line 805
	mov	DWORD PTR _locinfo$[ebp], 0
; Line 807
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0O@KPEDDPEP@icudt56l?9rbnf?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nfrb$[ebp], eax
; Line 808
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@RuleBasedN
; Line 810
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _nfrb$[ebp]
	push	ecx
	call	_ures_getLocaleByType_56
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _nfrb$[ebp]
	push	eax
	call	_ures_getLocaleByType_56
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLocaleIDs@Format@icu_56@@IAEXPBD0@Z	; icu_56::Format::setLocaleIDs
; Line 812
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _rules_tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nfrb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rbnfRules$43766[ebp], eax
; Line 813
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@RuleBasedN
; Line 814
	mov	eax, DWORD PTR _nfrb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN4@RuleBasedN:
; Line 816
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _fmt_tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rbnfRules$43766[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ruleSets$43768[ebp], eax
; Line 817
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@RuleBasedN
; Line 818
	mov	eax, DWORD PTR _rbnfRules$43766[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 819
	mov	eax, DWORD PTR _nfrb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 820
	jmp	$LN14@RuleBasedN
$LN3@RuleBasedN:
; Line 823
	mov	esi, esp
	lea	ecx, DWORD PTR _desc$43770[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN2@RuleBasedN:
; Line 824
	mov	eax, DWORD PTR _ruleSets$43768[ebp]
	push	eax
	call	_ures_hasNext_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@RuleBasedN
; Line 825
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ruleSets$43768[ebp]
	push	ecx
	lea	edx, DWORD PTR $T43774[ebp]
	push	edx
	call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv227[ebp], eax
	mov	eax, DWORD PTR tv227[ebp]
	mov	DWORD PTR tv222[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	mov	ecx, DWORD PTR tv222[ebp]
	push	ecx
	lea	ecx, DWORD PTR _desc$43770[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T43774[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 826
	jmp	SHORT $LN2@RuleBasedN
$LN1@RuleBasedN:
; Line 829
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _perror$43775[ebp]
	push	ecx
	mov	edx, DWORD PTR _locinfo$[ebp]
	push	edx
	lea	eax, DWORD PTR _desc$43770[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 831
	mov	eax, DWORD PTR _ruleSets$43768[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 832
	mov	eax, DWORD PTR _rbnfRules$43766[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 833
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _desc$43770[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@RuleBasedN:
; Line 834
	mov	eax, DWORD PTR _nfrb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN14@RuleBasedN:
; Line 835
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@RuleBasedN
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN25@RuleBasedN:
	DD	2
	DD	$LN24@RuleBasedN
$LN24@RuleBasedN:
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN21@RuleBasedN
	DD	-248					; ffffff08H
	DD	72					; 00000048H
	DD	$LN22@RuleBasedN
$LN22@RuleBasedN:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN21@RuleBasedN:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN26@RuleBasedN:
	DD	$LN10@RuleBasedN
	DD	$LN9@RuleBasedN
	DD	$LN8@RuleBasedN
	DD	$LN7@RuleBasedN
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _desc$43770[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43774[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-528]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@QAE@W4URBNFRuleSetTag@1@ABVLocale@1@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	_ures_getNextString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51947 = -224						; size = 4
_r$ = -20						; size = 4
_len$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_resB$ = 12						; size = 4
_key$ = 16						; size = 4
_status$ = 20						; size = 4
?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z PROC ; icu_56::ures_getNextUnicodeString, COMDAT
; File d:\mozilla\intl\icu\include\unicode\ures.h
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T51947[ebp], 0
; Line 826
	mov	DWORD PTR _len$[ebp], 0
; Line 827
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getNextString_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 828
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T51947[ebp]
	or	edx, 1
	mov	DWORD PTR $T51947[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 829
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ures_getNe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@ures_getNe:
	DD	1
	DD	$LN6@ures_getNe
$LN6@ures_getNe:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ures_getNe
$LN5@ures_getNe:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ENDP ; icu_56::ures_getNextUnicodeString
_TEXT	ENDS
PUBLIC	??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::RuleBasedNumberFormat::operator=
PUBLIC	??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z	; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
EXTRN	??0NumberFormat@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::NumberFormat::NumberFormat
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
xdata$x	SEGMENT
__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rhs$ = 8						; size = 4
??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z PROC	; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 855
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@ABV01@@Z	; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 372				; 00000174H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+592], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+669], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+670], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 856
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::RuleBasedNumberFormat::operator=
; Line 857
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
PUBLIC	?ref@LocalizationInfo@icu_56@@QAEPAV12@XZ	; icu_56::LocalizationInfo::ref
PUBLIC	?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
PUBLIC	?dispose@RuleBasedNumberFormat@icu_56@@AAEXXZ	; icu_56::RuleBasedNumberFormat::dispose
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	??4NumberFormat@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::NumberFormat::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv163 = -392						; size = 4
tv164 = -388						; size = 4
tv161 = -388						; size = 4
tv128 = -388						; size = 4
$T43787 = -380						; size = 64
_perror$ = -116						; size = 72
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rhs$ = 8						; size = 4
??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::RuleBasedNumberFormat::operator=, COMDAT
; _this$ = ecx
; Line 863
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 864
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _rhs$[ebp]
	jne	SHORT $LN1@operator@3
; Line 865
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN2@operator@3
$LN1@operator@3:
; Line 867
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4NumberFormat@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::NumberFormat::operator=
; Line 868
	mov	DWORD PTR _status$[ebp], 0
; Line 869
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@RuleBasedNumberFormat@icu_56@@AAEXXZ ; icu_56::RuleBasedNumberFormat::dispose
; Line 870
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 372				; 00000174H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 871
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	dl, BYTE PTR [ecx+592]
	mov	BYTE PTR [eax+592], dl
; Line 874
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+188]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 875
	mov	eax, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	SHORT $LN4@operator@3
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [ecx+600]
	call	?ref@LocalizationInfo@icu_56@@QAEPAV12@XZ ; icu_56::LocalizationInfo::ref
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN5@operator@3
$LN4@operator@3:
	mov	DWORD PTR tv128[ebp], 0
$LN5@operator@3:
	lea	edx, DWORD PTR _status$[ebp]
	push	edx
	lea	eax, DWORD PTR _perror$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv128[ebp]
	push	ecx
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 604				; 0000025cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::init
; Line 876
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR $T43787[ebp]
	push	ecx
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+180]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR tv163[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv163[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+176]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43787[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 878
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	dl, BYTE PTR [ecx+668]
	mov	BYTE PTR [eax+668], dl
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	dl, BYTE PTR [ecx+669]
	mov	BYTE PTR [eax+669], dl
; Line 880
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	dl, BYTE PTR [ecx+670]
	mov	BYTE PTR [eax+670], dl
; Line 882
	mov	eax, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR [eax+672], 0
	je	SHORT $LN6@operator@3
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+672]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [eax+672]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $LN7@operator@3
$LN6@operator@3:
	mov	DWORD PTR tv161[ebp], 0
$LN7@operator@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv161[ebp]
	mov	DWORD PTR [ecx+672], edx
; Line 885
	mov	eax, DWORD PTR _this$[ebp]
$LN2@operator@3:
; Line 886
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@operator@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN13@operator@3:
	DD	2
	DD	$LN12@operator@3
$LN12@operator@3:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN9@operator@3
	DD	-116					; ffffff8cH
	DD	72					; 00000048H
	DD	$LN10@operator@3
$LN10@operator@3:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN9@operator@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43787[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4RuleBasedNumberFormat@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::RuleBasedNumberFormat::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ref@LocalizationInfo@icu_56@@QAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ref@LocalizationInfo@icu_56@@QAEPAV12@XZ PROC		; icu_56::LocalizationInfo::ref, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ref@LocalizationInfo@icu_56@@QAEPAV12@XZ ENDP		; icu_56::LocalizationInfo::ref
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RuleBasedNumberFormat@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RuleBasedNumberFormat@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RuleBasedNumberFormat@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1RuleBasedNumberFormat@icu_56@@UAE@XZ$2
__ehfuncinfo$??1RuleBasedNumberFormat@icu_56@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1RuleBasedNumberFormat@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1RuleBasedNumberFormat@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1RuleBasedNumberFormat@icu_56@@UAE@XZ PROC		; icu_56::RuleBasedNumberFormat::~RuleBasedNumberFormat, COMDAT
; _this$ = ecx
; Line 889
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RuleBasedNumberFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedNumberFormat@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 890
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dispose@RuleBasedNumberFormat@icu_56@@AAEXXZ ; icu_56::RuleBasedNumberFormat::dispose
; Line 891
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RuleBasedNumberFormat@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??1RuleBasedNumberFormat@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RuleBasedNumberFormat@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1RuleBasedNumberFormat@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RuleBasedNumberFormat@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RuleBasedNumberFormat@icu_56@@UAE@XZ ENDP		; icu_56::RuleBasedNumberFormat::~RuleBasedNumberFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ$0
__ehfuncinfo$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T51996 = -236						; size = 4
$T51997 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ PROC ; icu_56::RuleBasedNumberFormat::clone, COMDAT
; _this$ = ecx
; Line 895
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 896
	mov	esi, esp
	push	676					; 000002a4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51997[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51997[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T51997[ebp]
	call	??0RuleBasedNumberFormat@icu_56@@QAE@ABV01@@Z ; icu_56::RuleBasedNumberFormat::RuleBasedNumberFormat
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T51996[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T51996[ebp]
; Line 897
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51997[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@RuleBasedNumberFormat@icu_56@@UBEPAVFormat@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::clone
EXTRN	??8NFRuleSet@icu_56@@QBECABV01@@Z:PROC		; icu_56::NFRuleSet::operator==
EXTRN	__imp_??8Locale@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8RuleBasedNumberFormat@icu_56@@UBECABVFormat@1@@Z
_TEXT	SEGMENT
tv144 = -248						; size = 4
tv145 = -244						; size = 4
tv164 = -241						; size = 1
_q$43809 = -44						; size = 4
_p$43808 = -32						; size = 4
_rhs$43805 = -20					; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8RuleBasedNumberFormat@icu_56@@UBECABVFormat@1@@Z PROC ; icu_56::RuleBasedNumberFormat::operator==, COMDAT
; _this$ = ecx
; Line 901
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 902
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN8@operator@4
; Line 903
	mov	al, 1
	jmp	$LN9@operator@4
$LN8@operator@4:
; Line 906
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	$LN7@operator@4
; Line 907
	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR _rhs$43805[ebp], eax
; Line 917
	mov	eax, DWORD PTR _rhs$43805[ebp]
	add	eax, 372				; 00000174H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	DWORD PTR __imp_??8Locale@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN7@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+592]
	mov	edx, DWORD PTR _rhs$43805[ebp]
	movsx	eax, BYTE PTR [edx+592]
	cmp	ecx, eax
	jne	$LN7@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	jne	SHORT $LN13@operator@4
	mov	ecx, DWORD PTR _rhs$43805[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+600], 0
	sete	dl
	mov	DWORD PTR tv145[ebp], edx
	jmp	SHORT $LN14@operator@4
$LN13@operator@4:
	mov	eax, DWORD PTR _rhs$43805[ebp]
	cmp	DWORD PTR [eax+600], 0
	jne	SHORT $LN11@operator@4
	mov	DWORD PTR tv144[ebp], 0
	jmp	SHORT $LN12@operator@4
$LN11@operator@4:
	mov	esi, esp
	mov	ecx, DWORD PTR _rhs$43805[ebp]
	mov	edx, DWORD PTR [ecx+600]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	mov	DWORD PTR tv144[ebp], ecx
$LN12@operator@4:
	mov	edx, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv145[ebp], edx
$LN14@operator@4:
	cmp	DWORD PTR tv145[ebp], 0
	je	$LN7@operator@4
; Line 919
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$43808[ebp], ecx
; Line 920
	mov	eax, DWORD PTR _rhs$43805[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _q$43809[ebp], ecx
; Line 921
	cmp	DWORD PTR _p$43808[ebp], 0
	jne	SHORT $LN5@operator@4
; Line 922
	cmp	DWORD PTR _q$43809[ebp], 0
	sete	al
	jmp	SHORT $LN9@operator@4
	jmp	SHORT $LN2@operator@4
$LN5@operator@4:
; Line 923
	cmp	DWORD PTR _q$43809[ebp], 0
	jne	SHORT $LN2@operator@4
; Line 924
	xor	al, al
	jmp	SHORT $LN9@operator@4
$LN2@operator@4:
; Line 926
	mov	eax, DWORD PTR _p$43808[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@operator@4
	mov	eax, DWORD PTR _q$43809[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@operator@4
	mov	eax, DWORD PTR _q$43809[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$43808[ebp]
	mov	ecx, DWORD PTR [edx]
	call	??8NFRuleSet@icu_56@@QBECABV01@@Z	; icu_56::NFRuleSet::operator==
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator@4
; Line 927
	mov	eax, DWORD PTR _p$43808[ebp]
	add	eax, 4
	mov	DWORD PTR _p$43808[ebp], eax
; Line 928
	mov	eax, DWORD PTR _q$43809[ebp]
	add	eax, 4
	mov	DWORD PTR _q$43809[ebp], eax
; Line 929
	jmp	SHORT $LN2@operator@4
$LN1@operator@4:
; Line 930
	mov	eax, DWORD PTR _q$43809[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN15@operator@4
	mov	ecx, DWORD PTR _p$43808[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN15@operator@4
	mov	BYTE PTR tv164[ebp], 1
	jmp	SHORT $LN16@operator@4
$LN15@operator@4:
	mov	BYTE PTR tv164[ebp], 0
$LN16@operator@4:
	mov	al, BYTE PTR tv164[ebp]
	jmp	SHORT $LN9@operator@4
$LN7@operator@4:
; Line 934
	xor	al, al
$LN9@operator@4:
; Line 935
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8RuleBasedNumberFormat@icu_56@@UBECABVFormat@1@@Z ENDP ; icu_56::RuleBasedNumberFormat::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
EXTRN	?appendRules@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z:PROC ; icu_56::NFRuleSet::appendRules
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$0
__ehfuncinfo$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T52020 = -312						; size = 4
_p$43822 = -108						; size = 4
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getRules, COMDAT
; _this$ = ecx
; Line 939
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T52020[ebp], 0
; Line 940
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 941
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	SHORT $LN4@getRules
; Line 942
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$43822[ebp], ecx
	jmp	SHORT $LN3@getRules
$LN2@getRules:
	mov	eax, DWORD PTR _p$43822[ebp]
	add	eax, 4
	mov	DWORD PTR _p$43822[ebp], eax
$LN3@getRules:
	mov	eax, DWORD PTR _p$43822[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@getRules
; Line 943
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$43822[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?appendRules@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRuleSet::appendRules
; Line 944
	jmp	SHORT $LN2@getRules
$LN4@getRules:
; Line 946
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52020[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52020[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 947
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@getRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN13@getRules:
	DD	1
	DD	$LN12@getRules
$LN12@getRules:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN10@getRules
$LN10@getRules:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$1:
	mov	eax, DWORD PTR $T52020[ebp]
	and	eax, 1
	je	$LN9@getRules
	and	DWORD PTR $T52020[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN9@getRules:
	ret	0
__ehhandler$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRules@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getRules
PUBLIC	?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRuleSet::getName
PUBLIC	?isPublic@NFRuleSet@icu_56@@QBECXZ		; icu_56::NFRuleSet::isPublic
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$3
__ehfuncinfo$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z
_TEXT	SEGMENT
$T52036 = -468						; size = 4
_empty$ = -264						; size = 64
_rs$43841 = -192					; size = 4
_p$43837 = -180						; size = 4
_result$43836 = -168					; size = 64
_string$43833 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 4
?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z PROC ; icu_56::RuleBasedNumberFormat::getRuleSetName, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T52036[ebp], 0
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	$LN8@getRuleSet@2
; Line 953
	mov	esi, esp
	push	-1
	mov	edi, esp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+600]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	1
	lea	ecx, DWORD PTR _string$43833[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 954
	mov	esi, esp
	lea	eax, DWORD PTR _string$43833[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52036[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52036[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _string$43833[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN9@getRuleSet@2
	jmp	$LN7@getRuleSet@2
$LN8@getRuleSet@2:
; Line 956
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	$LN7@getRuleSet@2
; Line 957
	mov	esi, esp
	lea	ecx, DWORD PTR _result$43836[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 958
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$43837[ebp], ecx
	jmp	SHORT $LN5@getRuleSet@2
$LN4@getRuleSet@2:
	mov	eax, DWORD PTR _p$43837[ebp]
	add	eax, 4
	mov	DWORD PTR _p$43837[ebp], eax
$LN5@getRuleSet@2:
	mov	eax, DWORD PTR _p$43837[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN3@getRuleSet@2
; Line 959
	mov	eax, DWORD PTR _p$43837[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rs$43841[ebp], ecx
; Line 960
	mov	ecx, DWORD PTR _rs$43841[ebp]
	call	?isPublic@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isPublic
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@getRuleSet@2
; Line 961
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	cmp	DWORD PTR _index$[ebp], -1
	jne	SHORT $LN2@getRuleSet@2
; Line 962
	lea	eax, DWORD PTR _result$43836[ebp]
	push	eax
	mov	ecx, DWORD PTR _rs$43841[ebp]
	call	?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRuleSet::getName
; Line 963
	mov	esi, esp
	lea	eax, DWORD PTR _result$43836[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52036[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52036[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$43836[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN9@getRuleSet@2
$LN2@getRuleSet@2:
; Line 966
	jmp	$LN4@getRuleSet@2
$LN3@getRuleSet@2:
; Line 967
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$43836[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@getRuleSet@2:
; Line 968
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 969
	mov	esi, esp
	lea	eax, DWORD PTR _empty$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52036[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52036[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN9@getRuleSet@2:
; Line 970
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@getRuleSet@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN21@getRuleSet@2:
	DD	3
	DD	$LN20@getRuleSet@2
$LN20@getRuleSet@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN16@getRuleSet@2
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN17@getRuleSet@2
	DD	-264					; fffffef8H
	DD	64					; 00000040H
	DD	$LN18@getRuleSet@2
$LN18@getRuleSet@2:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
$LN17@getRuleSet@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN16@getRuleSet@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _string$43833[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$1:
	mov	eax, DWORD PTR $T52036[ebp]
	and	eax, 1
	je	$LN13@getRuleSet@2
	and	DWORD PTR $T52036[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN13@getRuleSet@2:
	ret	0
__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$43836[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-476]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@H@Z ENDP ; icu_56::RuleBasedNumberFormat::getRuleSetName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPublic@NFRuleSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPublic@NFRuleSet@icu_56@@QBECXZ PROC			; icu_56::NFRuleSet::isPublic, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+117]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPublic@NFRuleSet@icu_56@@QBECXZ ENDP			; icu_56::NFRuleSet::isPublic
_TEXT	ENDS
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z PROC ; icu_56::NFRuleSet::getName, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ENDP ; icu_56::NFRuleSet::getName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNumberOfRuleSetNames@RuleBasedNumberFormat@icu_56@@UBEHXZ
_TEXT	SEGMENT
_p$43852 = -32						; size = 4
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?getNumberOfRuleSetNames@RuleBasedNumberFormat@icu_56@@UBEHXZ PROC ; icu_56::RuleBasedNumberFormat::getNumberOfRuleSetNames, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
; Line 974
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 975
	mov	DWORD PTR _result$[ebp], 0
; Line 976
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	SHORT $LN7@getNumberO
; Line 977
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	jmp	SHORT $LN6@getNumberO
$LN7@getNumberO:
; Line 979
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	SHORT $LN6@getNumberO
; Line 980
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$43852[ebp], ecx
	jmp	SHORT $LN4@getNumberO
$LN3@getNumberO:
	mov	eax, DWORD PTR _p$43852[ebp]
	add	eax, 4
	mov	DWORD PTR _p$43852[ebp], eax
$LN4@getNumberO:
	mov	eax, DWORD PTR _p$43852[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@getNumberO
; Line 981
	mov	eax, DWORD PTR _p$43852[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?isPublic@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isPublic
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@getNumberO
; Line 982
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 1
	mov	DWORD PTR _result$[ebp], eax
$LN1@getNumberO:
; Line 984
	jmp	SHORT $LN3@getNumberO
$LN6@getNumberO:
; Line 986
	mov	eax, DWORD PTR _result$[ebp]
; Line 987
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumberOfRuleSetNames@RuleBasedNumberFormat@icu_56@@UBEHXZ ENDP ; icu_56::RuleBasedNumberFormat::getNumberOfRuleSetNames
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNumberOfRuleSetDisplayNameLocales@RuleBasedNumberFormat@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumberOfRuleSetDisplayNameLocales@RuleBasedNumberFormat@icu_56@@UBEHXZ PROC ; icu_56::RuleBasedNumberFormat::getNumberOfRuleSetDisplayNameLocales, COMDAT
; _this$ = ecx
; Line 990
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 991
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	SHORT $LN1@getNumberO@2
; Line 992
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@getNumberO@2
$LN1@getNumberO@2:
; Line 994
	xor	eax, eax
$LN2@getNumberO@2:
; Line 995
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumberOfRuleSetDisplayNameLocales@RuleBasedNumberFormat@icu_56@@UBEHXZ ENDP ; icu_56::RuleBasedNumberFormat::getNumberOfRuleSetDisplayNameLocales
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0Locale@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
EXTRN	__imp_??0Locale@icu_56@@QAE@PBD000@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$3
__ehfuncinfo$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T52063 = -820						; size = 4
_retLocale$ = -616					; size = 204
_retLocale$43879 = -404					; size = 204
_bp$43874 = -192					; size = 4
_cap$43873 = -180					; size = 4
_buffer$43872 = -168					; size = 64
_name$43871 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 4
_status$ = 16						; size = 4
?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayNameLocale, COMDAT
; _this$ = ecx
; Line 998
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 812				; 0000032cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-824]
	mov	ecx, 203				; 000000cbH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T52063[ebp], 0
; Line 999
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getRuleSet@3
; Line 1000
	mov	esi, esp
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@PBD000@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T52063[ebp]
	or	eax, 1
	mov	DWORD PTR $T52063[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN6@getRuleSet@3
$LN5@getRuleSet@3:
; Line 1002
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	$LN4@getRuleSet@3
	cmp	DWORD PTR _index$[ebp], 0
	jl	$LN4@getRuleSet@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _index$[ebp], eax
	jge	$LN4@getRuleSet@3
; Line 1003
	mov	esi, esp
	push	-1
	mov	edi, esp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+600]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	1
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1005
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _cap$43873[ebp], eax
; Line 1006
	lea	eax, DWORD PTR _buffer$43872[ebp]
	mov	DWORD PTR _bp$43874[ebp], eax
; Line 1007
	cmp	DWORD PTR _cap$43873[ebp], 64		; 00000040H
	jle	SHORT $LN3@getRuleSet@3
; Line 1008
	mov	eax, DWORD PTR _cap$43873[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _bp$43874[ebp], eax
; Line 1009
	cmp	DWORD PTR _bp$43874[ebp], 0
	jne	SHORT $LN3@getRuleSet@3
; Line 1010
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1011
	mov	esi, esp
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@PBD000@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T52063[ebp]
	or	eax, 1
	mov	DWORD PTR $T52063[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN6@getRuleSet@3
$LN3@getRuleSet@3:
; Line 1014
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _cap$43873[ebp]
	push	eax
	mov	ecx, DWORD PTR _bp$43874[ebp]
	push	ecx
	mov	edi, esp
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1015
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _bp$43874[ebp]
	push	eax
	lea	ecx, DWORD PTR _retLocale$43879[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@PBD000@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1016
	mov	eax, DWORD PTR _bp$43874[ebp]
	lea	ecx, DWORD PTR _buffer$43872[ebp]
	cmp	eax, ecx
	je	SHORT $LN1@getRuleSet@3
; Line 1017
	mov	eax, DWORD PTR _bp$43874[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@getRuleSet@3:
; Line 1019
	mov	esi, esp
	lea	eax, DWORD PTR _retLocale$43879[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52063[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52063[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _retLocale$43879[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN6@getRuleSet@3
$LN4@getRuleSet@3:
; Line 1021
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1022
	mov	esi, esp
	lea	ecx, DWORD PTR _retLocale$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1023
	mov	esi, esp
	lea	eax, DWORD PTR _retLocale$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52063[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52063[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _retLocale$[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@getRuleSet@3:
; Line 1024
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@getRuleSet@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 824				; 00000338H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN19@getRuleSet@3:
	DD	4
	DD	$LN18@getRuleSet@3
$LN18@getRuleSet@3:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN13@getRuleSet@3
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN14@getRuleSet@3
	DD	-404					; fffffe6cH
	DD	204					; 000000ccH
	DD	$LN15@getRuleSet@3
	DD	-616					; fffffd98H
	DD	204					; 000000ccH
	DD	$LN16@getRuleSet@3
$LN16@getRuleSet@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN15@getRuleSet@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN14@getRuleSet@3:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN13@getRuleSet@3:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T52063[ebp]
	and	eax, 1
	je	$LN9@getRuleSet@3
	and	DWORD PTR $T52063[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN9@getRuleSet@3:
	ret	0
__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43871[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _retLocale$43879[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _retLocale$[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-828]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRuleSetDisplayNameLocale@RuleBasedNumberFormat@icu_56@@UBE?AVLocale@2@HAAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayNameLocale
PUBLIC	__$ArrayPad$
EXTRN	__imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	__imp_?getBaseName@Locale@icu_56@@QBEPBDXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z
_TEXT	SEGMENT
$T52086 = -552						; size = 4
_bogus$ = -348						; size = 64
_name$43905 = -276					; size = 64
_name$43897 = -204					; size = 64
_ix$43895 = -132					; size = 4
_localeStr$43891 = -120					; size = 4
_len$43890 = -108					; size = 4
_localeName$43889 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 4
_localeParam$ = 16					; size = 4
?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z PROC ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayName, COMDAT
; _this$ = ecx
; Line 1027
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 544				; 00000220H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-556]
	mov	ecx, 136				; 00000088H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T52086[ebp], 0
; Line 1028
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	$LN10@getRuleSet@4
	cmp	DWORD PTR _index$[ebp], 0
	jl	$LN10@getRuleSet@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _index$[ebp], eax
	jge	$LN10@getRuleSet@4
; Line 1029
	mov	esi, esp
	push	0
	push	-1
	mov	edi, esp
	mov	ecx, DWORD PTR _localeParam$[ebp]
	call	DWORD PTR __imp_?getBaseName@Locale@icu_56@@QBEPBDXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _localeName$43889[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1030
	mov	esi, esp
	lea	ecx, DWORD PTR _localeName$43889[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$43890[ebp], eax
; Line 1031
	mov	eax, DWORD PTR _len$43890[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _localeName$43889[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _localeStr$43891[ebp], eax
$LN9@getRuleSet@4:
; Line 1032
	cmp	DWORD PTR _len$43890[ebp], 0
	jl	$LN8@getRuleSet@4
; Line 1033
	xor	eax, eax
	mov	ecx, DWORD PTR _len$43890[ebp]
	mov	edx, DWORD PTR _localeStr$43891[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 1034
	mov	esi, esp
	mov	eax, DWORD PTR _localeStr$43891[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+600]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ix$43895[ebp], eax
; Line 1035
	cmp	DWORD PTR _ix$43895[ebp], 0
	jl	$LN6@getRuleSet@4
; Line 1036
	mov	esi, esp
	push	-1
	mov	edi, esp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ix$43895[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+600]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	1
	lea	ecx, DWORD PTR _name$43897[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1037
	mov	esi, esp
	lea	eax, DWORD PTR _name$43897[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52086[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52086[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43897[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _localeName$43889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@getRuleSet@4
$LN6@getRuleSet@4:
; Line 1041
	mov	eax, DWORD PTR _len$43890[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$43890[ebp], eax
	cmp	DWORD PTR _len$43890[ebp], 0
	jle	SHORT $LN2@getRuleSet@4
	mov	eax, DWORD PTR _len$43890[ebp]
	mov	ecx, DWORD PTR _localeStr$43891[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 95					; 0000005fH
	jne	SHORT $LN6@getRuleSet@4
$LN2@getRuleSet@4:
; Line 1042
	cmp	DWORD PTR _len$43890[ebp], 0
	jle	SHORT $LN1@getRuleSet@4
	mov	eax, DWORD PTR _len$43890[ebp]
	mov	ecx, DWORD PTR _localeStr$43891[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 95					; 0000005fH
	jne	SHORT $LN1@getRuleSet@4
	mov	eax, DWORD PTR _len$43890[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$43890[ebp], eax
	jmp	SHORT $LN2@getRuleSet@4
$LN1@getRuleSet@4:
; Line 1043
	jmp	$LN9@getRuleSet@4
$LN8@getRuleSet@4:
; Line 1044
	mov	esi, esp
	push	-1
	mov	edi, esp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+600]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	1
	lea	ecx, DWORD PTR _name$43905[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1045
	mov	esi, esp
	lea	eax, DWORD PTR _name$43905[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52086[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52086[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43905[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _localeName$43889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN11@getRuleSet@4
$LN10@getRuleSet@4:
; Line 1047
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 1048
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1049
	mov	esi, esp
	lea	eax, DWORD PTR _bogus$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52086[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52086[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@getRuleSet@4:
; Line 1050
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@getRuleSet@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 556				; 0000022cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN25@getRuleSet@4:
	DD	4
	DD	$LN24@getRuleSet@4
$LN24@getRuleSet@4:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN19@getRuleSet@4
	DD	-204					; ffffff34H
	DD	64					; 00000040H
	DD	$LN20@getRuleSet@4
	DD	-276					; fffffeecH
	DD	64					; 00000040H
	DD	$LN21@getRuleSet@4
	DD	-348					; fffffea4H
	DD	64					; 00000040H
	DD	$LN22@getRuleSet@4
$LN22@getRuleSet@4:
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN21@getRuleSet@4:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN20@getRuleSet@4:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN19@getRuleSet@4:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _localeName$43889[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43897[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$2:
	mov	eax, DWORD PTR $T52086[ebp]
	and	eax, 1
	je	$LN16@getRuleSet@4
	and	DWORD PTR $T52086[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN16@getRuleSet@4:
	ret	0
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$43905[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@HABVLocale@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayName
PUBLIC	__$ArrayPad$
EXTRN	__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z$2
__ehfuncinfo$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z
_TEXT	SEGMENT
$T52107 = -384						; size = 4
_bogus$ = -180						; size = 64
_ix$43915 = -108					; size = 4
_rsn$43914 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ruleSetName$ = 12					; size = 4
_localeParam$ = 16					; size = 4
?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z PROC ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayName, COMDAT
; _this$ = ecx
; Line 1053
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T52107[ebp], 0
; Line 1054
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	$LN1@getRuleSet@5
; Line 1055
	mov	esi, esp
	mov	eax, DWORD PTR _ruleSetName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rsn$43914[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1056
	mov	esi, esp
	lea	ecx, DWORD PTR _rsn$43914[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ix$43915[ebp], eax
; Line 1057
	mov	esi, esp
	mov	eax, DWORD PTR _localeParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ix$43915[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52107[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52107[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _rsn$43914[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@getRuleSet@5
$LN1@getRuleSet@5:
; Line 1059
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1060
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1061
	mov	esi, esp
	lea	eax, DWORD PTR _bogus$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52107[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52107[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@getRuleSet@5:
; Line 1062
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@getRuleSet@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN12@getRuleSet@5:
	DD	2
	DD	$LN11@getRuleSet@5
$LN11@getRuleSet@5:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN8@getRuleSet@5
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$LN9@getRuleSet@5
$LN9@getRuleSet@5:
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN8@getRuleSet@5:
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _rsn$43914[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z$1:
	mov	eax, DWORD PTR $T52107[ebp]
	and	eax, 1
	je	$LN6@getRuleSet@5
	and	DWORD PTR $T52107[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@getRuleSet@5:
	ret	0
__unwindfunclet$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _bogus$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRuleSetDisplayName@RuleBasedNumberFormat@icu_56@@UAE?AVUnicodeString@2@ABV32@ABVLocale@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::getRuleSetDisplayName
PUBLIC	?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::NFRuleSet::isNamed
PUBLIC	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_rs$43928 = -32						; size = 4
_p$43924 = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_status$ = 12						; size = 4
?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::findRuleSet, COMDAT
; _this$ = ecx
; Line 1066
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1067
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@findRuleSe
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	SHORT $LN5@findRuleSe
; Line 1068
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$43924[ebp], ecx
	jmp	SHORT $LN4@findRuleSe
$LN3@findRuleSe:
	mov	eax, DWORD PTR _p$43924[ebp]
	add	eax, 4
	mov	DWORD PTR _p$43924[ebp], eax
$LN4@findRuleSe:
	mov	eax, DWORD PTR _p$43924[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@findRuleSe
; Line 1069
	mov	eax, DWORD PTR _p$43924[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rs$43928[ebp], ecx
; Line 1070
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rs$43928[ebp]
	call	?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::NFRuleSet::isNamed
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@findRuleSe
; Line 1071
	mov	eax, DWORD PTR _rs$43928[ebp]
	jmp	SHORT $LN6@findRuleSe
$LN1@findRuleSe:
; Line 1073
	jmp	SHORT $LN3@findRuleSe
$LN2@findRuleSe:
; Line 1074
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN5@findRuleSe:
; Line 1076
	xor	eax, eax
$LN6@findRuleSe:
; Line 1077
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::findRuleSet
_TEXT	ENDS
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__name$ = 8						; size = 4
?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::NFRuleSet::isNamed, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR __name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::NFRuleSet::isNamed
_TEXT	ENDS
PUBLIC	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
EXTRN	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_startPos$43938 = -32					; size = 4
_status$43937 = -20					; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_toAppendTo$ = 12					; size = 4
___formal$ = 16						; size = 4
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::RuleBasedNumberFormat::format, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
; Line 1083
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1084
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	je	SHORT $LN1@format
; Line 1085
	mov	DWORD PTR _status$43937[ebp], 0
; Line 1086
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$43938[ebp], eax
; Line 1087
	lea	eax, DWORD PTR _status$43937[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	push	ecx
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+368]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1088
	mov	eax, DWORD PTR _toAppendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$43938[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
$LN1@format:
; Line 1090
	mov	eax, DWORD PTR _toAppendTo$[ebp]
; Line 1091
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@format
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN6@format:
	DD	1
	DD	$LN5@format
$LN5@format:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@format
$LN4@format:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_startPos$43948 = -32					; size = 4
_status$43947 = -20					; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_toAppendTo$ = 16					; size = 4
___formal$ = 20						; size = 4
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::RuleBasedNumberFormat::format, COMDAT
; _this$ = ecx
; Line 1098
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1099
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	je	SHORT $LN1@format@2
; Line 1100
	mov	DWORD PTR _status$43947[ebp], 0
; Line 1101
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$43948[ebp], eax
; Line 1102
	lea	eax, DWORD PTR _status$43947[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+368]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1103
	mov	eax, DWORD PTR _toAppendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$43948[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
$LN1@format@2:
; Line 1105
	mov	eax, DWORD PTR _toAppendTo$[ebp]
; Line 1106
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@format@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN6@format@2:
	DD	1
	DD	$LN5@format@2
$LN5@format@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@format@2
$LN4@format@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::format
_TEXT	ENDS
EXTRN	?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_status$43957 = -32					; size = 4
_startPos$ = -20					; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_toAppendTo$ = 16					; size = 4
___formal$ = 20						; size = 4
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::RuleBasedNumberFormat::format, COMDAT
; _this$ = ecx
; Line 1113
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1114
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$[ebp], eax
; Line 1115
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	je	SHORT $LN1@format@3
; Line 1116
	mov	DWORD PTR _status$43957[ebp], 0
; Line 1117
	lea	eax, DWORD PTR _status$43957[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+368]
	call	?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
$LN1@format@3:
; Line 1119
	mov	eax, DWORD PTR _toAppendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
; Line 1120
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@format@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN6@format@3:
	DD	1
	DD	$LN5@format@3
$LN5@format@3:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@format@3
$LN4@format@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::format
_TEXT	ENDS
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_startPos$43971 = -32					; size = 4
_rs$43969 = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_ruleSetName$ = 12					; size = 4
_toAppendTo$ = 16					; size = 4
___formal$ = 20						; size = 4
_status$ = 24						; size = 4
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::format, COMDAT
; _this$ = ecx
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1131
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN4@format@4
; Line 1132
	mov	esi, esp
	push	0
	push	2
	push	OFFSET _gPercentPercent
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@format@4
; Line 1134
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1135
	jmp	SHORT $LN4@format@4
$LN3@format@4:
; Line 1136
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	DWORD PTR _rs$43969[ebp], eax
; Line 1137
	cmp	DWORD PTR _rs$43969[ebp], 0
	je	SHORT $LN4@format@4
; Line 1138
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$43971[ebp], eax
; Line 1139
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	push	ecx
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _rs$43969[ebp]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1140
	mov	eax, DWORD PTR _toAppendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$43971[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
$LN4@format@4:
; Line 1144
	mov	eax, DWORD PTR _toAppendTo$[ebp]
; Line 1145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@HABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_startPos$43986 = -32					; size = 4
_rs$43984 = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_ruleSetName$ = 16					; size = 4
_toAppendTo$ = 20					; size = 4
___formal$ = 24						; size = 4
_status$ = 28						; size = 4
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::format, COMDAT
; _this$ = ecx
; Line 1154
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1155
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN4@format@5
; Line 1156
	mov	esi, esp
	push	0
	push	2
	push	OFFSET _gPercentPercent
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@format@5
; Line 1158
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1159
	jmp	SHORT $LN4@format@5
$LN3@format@5:
; Line 1160
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	DWORD PTR _rs$43984[ebp], eax
; Line 1161
	cmp	DWORD PTR _rs$43984[ebp], 0
	je	SHORT $LN4@format@5
; Line 1162
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$43986[ebp], eax
; Line 1163
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rs$43984[ebp]
	call	?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1164
	mov	eax, DWORD PTR _toAppendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$43986[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
$LN4@format@5:
; Line 1168
	mov	eax, DWORD PTR _toAppendTo$[ebp]
; Line 1169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@_JABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_startPos$44000 = -32					; size = 4
_rs$43998 = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_ruleSetName$ = 16					; size = 4
_toAppendTo$ = 20					; size = 4
___formal$ = 24						; size = 4
_status$ = 28						; size = 4
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::format, COMDAT
; _this$ = ecx
; Line 1178
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1179
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@format@6
; Line 1180
	mov	esi, esp
	push	0
	push	2
	push	OFFSET _gPercentPercent
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@format@6
; Line 1182
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1183
	jmp	SHORT $LN1@format@6
$LN3@format@6:
; Line 1184
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	DWORD PTR _rs$43998[ebp], eax
; Line 1185
	cmp	DWORD PTR _rs$43998[ebp], 0
	je	SHORT $LN1@format@6
; Line 1186
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$44000[ebp], eax
; Line 1187
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _toAppendTo$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _rs$43998[ebp]
	call	?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::format
; Line 1188
	mov	eax, DWORD PTR _toAppendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$44000[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
$LN1@format@6:
; Line 1192
	mov	eax, DWORD PTR _toAppendTo$[ebp]
; Line 1193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?format@RuleBasedNumberFormat@icu_56@@UBEAAVUnicodeString@2@NABV32@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::format
_TEXT	ENDS
EXTRN	__imp_?toTitle@UnicodeString@icu_56@@QAEAAV12@PAVBreakIterator@2@ABVLocale@2@I@Z:PROC
EXTRN	_u_islower_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z
_TEXT	SEGMENT
_capitalizationContext$44009 = -44			; size = 4
_status$44008 = -32					; size = 4
_ch$44007 = -20						; size = 4
_this$ = -8						; size = 4
_startPos$ = 8						; size = 4
_currentResult$ = 12					; size = 4
?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z PROC ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext, COMDAT
; _this$ = ecx
; Line 1198
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1200
	cmp	DWORD PTR _startPos$[ebp], 0
	jne	$LN4@adjustForC
	mov	esi, esp
	mov	ecx, DWORD PTR _currentResult$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN4@adjustForC
; Line 1202
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _currentResult$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$44007[ebp], eax
; Line 1203
	mov	DWORD PTR _status$44008[ebp], 0
; Line 1204
	mov	esi, esp
	lea	eax, DWORD PTR _status$44008[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _capitalizationContext$44009[ebp], eax
; Line 1208
	mov	eax, DWORD PTR _ch$44007[ebp]
	push	eax
	call	_u_islower_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@adjustForC
	mov	eax, DWORD PTR _status$44008[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@adjustForC
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+672], 0
	je	SHORT $LN4@adjustForC
	cmp	DWORD PTR _capitalizationContext$44009[ebp], 258 ; 00000102H
	je	SHORT $LN2@adjustForC
	cmp	DWORD PTR _capitalizationContext$44009[ebp], 259 ; 00000103H
	jne	SHORT $LN1@adjustForC
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+669]
	test	ecx, ecx
	jne	SHORT $LN2@adjustForC
$LN1@adjustForC:
	cmp	DWORD PTR _capitalizationContext$44009[ebp], 260 ; 00000104H
	jne	SHORT $LN4@adjustForC
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+670]
	test	ecx, ecx
	je	SHORT $LN4@adjustForC
$LN2@adjustForC:
; Line 1211
	mov	esi, esp
	push	768					; 00000300H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 372				; 00000174H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+672]
	push	edx
	mov	ecx, DWORD PTR _currentResult$[ebp]
	call	DWORD PTR __imp_?toTitle@UnicodeString@icu_56@@QAEAAV12@PAVBreakIterator@2@ABVLocale@2@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@adjustForC:
; Line 1215
	mov	eax, DWORD PTR _currentResult$[ebp]
; Line 1216
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@adjustForC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@adjustForC:
	DD	1
	DD	$LN8@adjustForC
$LN8@adjustForC:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@adjustForC
$LN7@adjustForC:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?adjustForCapitalizationContext@RuleBasedNumberFormat@icu_56@@ABEAAVUnicodeString@2@HAAV32@@Z ENDP ; icu_56::RuleBasedNumberFormat::adjustForCapitalizationContext
_TEXT	ENDS
PUBLIC	__real@42b0000000000000
PUBLIC	?isParseable@NFRuleSet@icu_56@@QBECXZ		; icu_56::NFRuleSet::isParseable
PUBLIC	__$ArrayPad$
EXTRN	?setLong@Formattable@icu_56@@QAEXH@Z:PROC	; icu_56::Formattable::setLong
EXTRN	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ:PROC ; icu_56::Formattable::getType
EXTRN	__imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_??1ParsePosition@icu_56@@UAE@XZ:PROC
EXTRN	??1Formattable@icu_56@@UAE@XZ:PROC		; icu_56::Formattable::~Formattable
EXTRN	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::Formattable::operator=
EXTRN	__imp_??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z:PROC ; icu_56::NFRuleSet::parse
EXTRN	??0Formattable@icu_56@@QAE@XZ:PROC		; icu_56::Formattable::Formattable
EXTRN	__imp_??0ParsePosition@icu_56@@QAE@H@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z:PROC
EXTRN	__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@42b0000000000000
CONST	SEGMENT
__real@42b0000000000000 DQ 042b0000000000000r	; 1.75922e+013
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
_TEXT	SEGMENT
tv291 = -884						; size = 8
tv172 = -880						; size = 4
_r$44041 = -680						; size = 4
_errorIndex$44039 = -668				; size = 4
_startIndex$ = -656					; size = 4
_working_result$44031 = -644				; size = 224
_working_pp$44030 = -412				; size = 12
_rp$44028 = -392					; size = 4
_p$44024 = -380						; size = 4
_high_result$ = -368					; size = 224
_high_pp$ = -136					; size = 12
_workingPos$ = -116					; size = 12
_workingText$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_result$ = 12						; size = 4
_parsePosition$ = 16					; size = 4
?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z PROC ; icu_56::RuleBasedNumberFormat::parse, COMDAT
; _this$ = ecx
; Line 1223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 872				; 00000368H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-884]
	mov	ecx, 218				; 000000daH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1224
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	jne	SHORT $LN11@parse@2
; Line 1225
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1226
	jmp	$LN12@parse@2
$LN11@parse@2:
; Line 1229
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workingText$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1230
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _workingPos$[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1232
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1233
	lea	ecx, DWORD PTR _high_result$[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1235
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$44024[ebp], ecx
	jmp	SHORT $LN10@parse@2
$LN9@parse@2:
	mov	eax, DWORD PTR _p$44024[ebp]
	add	eax, 4
	mov	DWORD PTR _p$44024[ebp], eax
$LN10@parse@2:
	mov	eax, DWORD PTR _p$44024[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN8@parse@2
; Line 1236
	mov	eax, DWORD PTR _p$44024[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rp$44028[ebp], ecx
; Line 1237
	mov	ecx, DWORD PTR _rp$44028[ebp]
	call	?isPublic@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isPublic
	movsx	eax, al
	test	eax, eax
	je	$LN7@parse@2
	mov	ecx, DWORD PTR _rp$44028[ebp]
	call	?isParseable@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isParseable
	movsx	eax, al
	test	eax, eax
	je	$LN7@parse@2
; Line 1238
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _working_pp$44030[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1239
	lea	ecx, DWORD PTR _working_result$44031[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1241
	lea	eax, DWORD PTR _working_result$44031[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@42b0000000000000
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _working_pp$44030[ebp]
	push	ecx
	lea	edx, DWORD PTR _workingText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rp$44028[ebp]
	call	?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z ; icu_56::NFRuleSet::parse
; Line 1242
	mov	esi, esp
	lea	ecx, DWORD PTR _working_pp$44030[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jle	$LN5@parse@2
; Line 1243
	mov	esi, esp
	lea	eax, DWORD PTR _working_pp$44030[ebp]
	push	eax
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1244
	lea	eax, DWORD PTR _working_result$44031[ebp]
	push	eax
	lea	ecx, DWORD PTR _high_result$[ebp]
	call	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::Formattable::operator=
; Line 1246
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _workingText$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jne	SHORT $LN5@parse@2
; Line 1247
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _working_result$44031[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _working_pp$44030[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN8@parse@2
$LN5@parse@2:
; Line 1250
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _working_result$44031[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _working_pp$44030[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@parse@2:
; Line 1251
	jmp	$LN9@parse@2
$LN8@parse@2:
; Line 1253
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startIndex$[ebp], eax
; Line 1254
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _startIndex$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1255
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN4@parse@2
; Line 1256
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1257
	jmp	SHORT $LN3@parse@2
$LN4@parse@2:
; Line 1258
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN14@parse@2
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN15@parse@2
$LN14@parse@2:
	mov	DWORD PTR tv172[ebp], 0
$LN15@parse@2:
	mov	eax, DWORD PTR tv172[ebp]
	mov	DWORD PTR _errorIndex$44039[ebp], eax
; Line 1259
	mov	eax, DWORD PTR _startIndex$[ebp]
	add	eax, DWORD PTR _errorIndex$44039[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@parse@2:
; Line 1261
	lea	eax, DWORD PTR _high_result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::Formattable::operator=
; Line 1262
	mov	ecx, DWORD PTR _result$[ebp]
	call	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ; icu_56::Formattable::getType
	cmp	eax, 1
	jne	SHORT $LN1@parse@2
; Line 1263
	mov	ecx, DWORD PTR _result$[ebp]
	call	?getDouble@Formattable@icu_56@@QBENXZ	; icu_56::Formattable::getDouble
	call	__ftol2_sse
	mov	DWORD PTR _r$44041[ebp], eax
; Line 1264
	fild	DWORD PTR _r$44041[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	fstp	QWORD PTR tv291[ebp]
	call	?getDouble@Formattable@icu_56@@QBENXZ	; icu_56::Formattable::getDouble
	fld	QWORD PTR tv291[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@parse@2
; Line 1265
	mov	eax, DWORD PTR _r$44041[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setLong@Formattable@icu_56@@QAEXH@Z	; icu_56::Formattable::setLong
$LN1@parse@2:
; Line 1268
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _high_result$[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workingPos$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _workingText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@parse@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@parse@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 884				; 00000374H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN30@parse@2:
	DD	6
	DD	$LN29@parse@2
$LN29@parse@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN22@parse@2
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN23@parse@2
	DD	-136					; ffffff78H
	DD	12					; 0000000cH
	DD	$LN24@parse@2
	DD	-368					; fffffe90H
	DD	224					; 000000e0H
	DD	$LN25@parse@2
	DD	-412					; fffffe64H
	DD	12					; 0000000cH
	DD	$LN26@parse@2
	DD	-644					; fffffd7cH
	DD	224					; 000000e0H
	DD	$LN27@parse@2
$LN27@parse@2:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN26@parse@2:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	0
$LN25@parse@2:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN24@parse@2:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	0
$LN23@parse@2:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN22@parse@2:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _workingText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _workingPos$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _high_pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$3:
	lea	ecx, DWORD PTR _high_result$[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _working_pp$44030[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z$5:
	lea	ecx, DWORD PTR _working_result$44031[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__ehhandler$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-888]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parse@RuleBasedNumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::parse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseable@NFRuleSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseable@NFRuleSet@icu_56@@QBECXZ PROC		; icu_56::NFRuleSet::isParseable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+118]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseable@NFRuleSet@icu_56@@QBECXZ ENDP		; icu_56::NFRuleSet::isParseable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setLenient@RuleBasedNumberFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
tv80 = -232						; size = 4
$T52182 = -224						; size = 4
$T52183 = -212						; size = 4
_this$ = -8						; size = 4
_enabled$ = 8						; size = 1
?setLenient@RuleBasedNumberFormat@icu_56@@UAEXC@Z PROC	; icu_56::RuleBasedNumberFormat::setLenient, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _enabled$[ebp]
	mov	BYTE PTR [eax+592], cl
; Line 1276
	movsx	eax, BYTE PTR _enabled$[ebp]
	test	eax, eax
	jne	SHORT $LN2@setLenient
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+576], 0
	je	SHORT $LN2@setLenient
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+576]
	mov	DWORD PTR $T52183[ebp], ecx
	mov	edx, DWORD PTR $T52183[ebp]
	mov	DWORD PTR $T52182[ebp], edx
	cmp	DWORD PTR $T52182[ebp], 0
	je	SHORT $LN4@setLenient
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52182[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52182[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN5@setLenient
$LN4@setLenient:
	mov	DWORD PTR tv80[ebp], 0
$LN5@setLenient:
; Line 1278
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
$LN2@setLenient:
; Line 1280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLenient@RuleBasedNumberFormat@icu_56@@UAEXC@Z ENDP	; icu_56::RuleBasedNumberFormat::setLenient
_TEXT	ENDS
PUBLIC	??_C@_15IOLAJFNF@?$AA?$CF?$AA?$CF?$AA?$AA@	; `string'
PUBLIC	?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ ; icu_56::RuleBasedNumberFormat::initDefaultRuleSet
PUBLIC	__$ArrayPad$
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z:PROC
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
;	COMDAT ??_C@_15IOLAJFNF@?$AA?$CF?$AA?$CF?$AA?$AA@
CONST	SEGMENT
??_C@_15IOLAJFNF@?$AA?$CF?$AA?$CF?$AA?$AA@ DB '%', 00H, '%', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv147 = -396						; size = 4
tv149 = -392						; size = 4
$T44064 = -384						; size = 64
$T52189 = -309						; size = 1
_result$44069 = -108					; size = 4
_name$44060 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ruleSetName$ = 8					; size = 4
_status$ = 12						; size = 4
?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::setDefaultRuleSet, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN9@setDefault
; Line 1287
	mov	esi, esp
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN7@setDefault
; Line 1288
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	SHORT $LN6@setDefault
; Line 1289
	mov	esi, esp
	push	-1
	mov	edi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+600]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	1
	lea	ecx, DWORD PTR _name$44060[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1290
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$44060[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], eax
; Line 1291
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$44060[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@setDefault
$LN6@setDefault:
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ ; icu_56::RuleBasedNumberFormat::initDefaultRuleSet
$LN5@setDefault:
; Line 1293
	jmp	$LN9@setDefault
$LN7@setDefault:
; Line 1294
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_15IOLAJFNF@?$AA?$CF?$AA?$CF?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T44064[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv149[ebp], eax
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T52189[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T44064[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T52189[ebp]
	test	edx, edx
	je	SHORT $LN3@setDefault
; Line 1295
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1296
	jmp	SHORT $LN9@setDefault
$LN3@setDefault:
; Line 1297
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleSetName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	DWORD PTR _result$44069[ebp], eax
; Line 1298
	cmp	DWORD PTR _result$44069[ebp], 0
	je	SHORT $LN9@setDefault
; Line 1299
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _result$44069[ebp]
	mov	DWORD PTR [eax+368], ecx
$LN9@setDefault:
; Line 1303
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@setDefault
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN16@setDefault:
	DD	1
	DD	$LN15@setDefault
$LN15@setDefault:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN13@setDefault
$LN13@setDefault:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$44060[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44064[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setDefaultRuleSet@RuleBasedNumberFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::setDefaultRuleSet
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$0
__ehfuncinfo$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T52206 = -300						; size = 4
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDefaultRuleSetName, COMDAT
; _this$ = ecx
; Line 1306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T52206[ebp], 0
; Line 1307
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1308
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	je	SHORT $LN2@getDefault
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	call	?isPublic@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isPublic
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getDefault
; Line 1309
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+368]
	call	?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRuleSet::getName
; Line 1310
	jmp	SHORT $LN1@getDefault
$LN2@getDefault:
; Line 1311
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getDefault:
; Line 1313
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T52206[ebp]
	or	ecx, 1
	mov	DWORD PTR $T52206[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1314
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@getDefault
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN11@getDefault:
	DD	1
	DD	$LN10@getDefault
$LN10@getDefault:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN8@getDefault
$LN8@getDefault:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ$1:
	mov	eax, DWORD PTR $T52206[ebp]
	and	eax, 1
	je	$LN7@getDefault
	and	DWORD PTR $T52206[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN7@getDefault:
	ret	0
__ehhandler$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDefaultRuleSetName@RuleBasedNumberFormat@icu_56@@UBE?AVUnicodeString@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDefaultRuleSetName
PUBLIC	??_C@_1BE@CCKLGBHN@?$AA?$CF?$AAd?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@KPINKAKD@?$AA?$CF?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?9?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@HAAAIMPO@?$AA?$CF?$AAs?$AAp?$AAe?$AAl?$AAl?$AAo?$AAu?$AAt?$AA?9?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_1BE@CCKLGBHN@?$AA?$CF?$AAd?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@CCKLGBHN@?$AA?$CF?$AAd?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB '%'
	DB	00H, 'd', 00H, 'u', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@KPINKAKD@?$AA?$CF?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?9?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@KPINKAKD@?$AA?$CF?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?9?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@ DB '%'
	DB	00H, 'd', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'-', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'a'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@HAAAIMPO@?$AA?$CF?$AAs?$AAp?$AAe?$AAl?$AAl?$AAo?$AAu?$AAt?$AA?9?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@HAAAIMPO@?$AA?$CF?$AAs?$AAp?$AAe?$AAl?$AAl?$AAo?$AAu?$AAt?$AA?9?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB '%'
	DB	00H, 's', 00H, 'p', 00H, 'e', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, '-', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b'
	DB	00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ$2
__ehfuncinfo$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ
_TEXT	SEGMENT
_p$ = -252						; size = 4
_duration$ = -240					; size = 64
_ordinal$ = -168					; size = 64
_spellout$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ PROC ; icu_56::RuleBasedNumberFormat::initDefaultRuleSet, COMDAT
; _this$ = ecx
; Line 1318
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1319
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
; Line 1320
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	jne	SHORT $LN10@initDefaul
; Line 1321
	jmp	$LN11@initDefaul
$LN10@initDefaul:
; Line 1324
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CI@HAAAIMPO@?$AA?$CF?$AAs?$AAp?$AAe?$AAl?$AAl?$AAo?$AAu?$AAt?$AA?9?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR _spellout$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1325
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CA@KPINKAKD@?$AA?$CF?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?9?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR _ordinal$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1326
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BE@CCKLGBHN@?$AA?$CF?$AAd?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR _duration$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1328
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$[ebp], ecx
$LN9@initDefaul:
; Line 1329
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN8@initDefaul
; Line 1330
	lea	eax, DWORD PTR _spellout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::NFRuleSet::isNamed
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN6@initDefaul
	lea	eax, DWORD PTR _ordinal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::NFRuleSet::isNamed
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN6@initDefaul
	lea	eax, DWORD PTR _duration$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?isNamed@NFRuleSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::NFRuleSet::isNamed
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@initDefaul
$LN6@initDefaul:
; Line 1331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+368], edx
; Line 1332
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _duration$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _ordinal$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _spellout$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN11@initDefaul
; Line 1333
	jmp	SHORT $LN5@initDefaul
$LN7@initDefaul:
; Line 1334
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
$LN5@initDefaul:
; Line 1336
	jmp	$LN9@initDefaul
$LN8@initDefaul:
; Line 1338
	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, 4
	mov	DWORD PTR _p$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+368], eax
; Line 1339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	call	?isPublic@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isPublic
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@initDefaul
$LN3@initDefaul:
; Line 1340
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	ecx, DWORD PTR [eax+356]
	je	SHORT $LN4@initDefaul
; Line 1341
	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, 4
	mov	DWORD PTR _p$[ebp], eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?isPublic@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isPublic
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initDefaul
; Line 1342
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+368], edx
; Line 1343
	jmp	SHORT $LN4@initDefaul
$LN1@initDefaul:
; Line 1345
	jmp	SHORT $LN3@initDefaul
$LN4@initDefaul:
; Line 1347
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _duration$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _ordinal$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _spellout$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@initDefaul:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@initDefaul
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@initDefaul:
	DD	3
	DD	$LN20@initDefaul
$LN20@initDefaul:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN16@initDefaul
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN17@initDefaul
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN18@initDefaul
$LN18@initDefaul:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN17@initDefaul:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN16@initDefaul:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _spellout$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _ordinal$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _duration$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-452]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ ENDP ; icu_56::RuleBasedNumberFormat::initDefaultRuleSet
PUBLIC	??_TUnicodeString@icu_56@@QAEXXZ		; icu_56::UnicodeString::`local vftable constructor closure'
PUBLIC	??_U@YAPAXI@Z					; operator new[]
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z ; icu_56::RuleBasedNumberFormat::stripWhitespace
PUBLIC	?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDefaultNaNRule
PUBLIC	?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDefaultInfinityRule
PUBLIC	?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDecimalFormatSymbols
PUBLIC	__$ArrayPad$
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?parseRules@NFRuleSet@icu_56@@QAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::parseRules
EXTRN	??0NFRuleSet@icu_56@@QAE@PAVRuleBasedNumberFormat@1@PAVUnicodeString@1@HAAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::NFRuleSet
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv244 = -612						; size = 4
tv312 = -608						; size = 4
tv281 = -608						; size = 4
tv233 = -608						; size = 4
tv168 = -608						; size = 4
tv85 = -608						; size = 4
$T52239 = -600						; size = 4
$T52240 = -588						; size = 4
$T52243 = -576						; size = 4
$T52244 = -564						; size = 4
$T52245 = -552						; size = 4
$T52250 = -540						; size = 4
$T52251 = -528						; size = 4
$T52254 = -516						; size = 4
$T52255 = -504						; size = 4
_rs$44179 = -300					; size = 4
_name$44178 = -288					; size = 64
_i$44174 = -216						; size = 4
_i$44169 = -204						; size = 4
_p$44155 = -192						; size = 4
_start$44154 = -180					; size = 4
_curRuleSet$44153 = -168				; size = 4
_i$44140 = -156						; size = 4
_p$44133 = -144						; size = 4
_lpStart$44124 = -132					; size = 4
_lpEnd$44122 = -120					; size = 4
_lp$ = -108						; size = 4
_description$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rules$ = 8						; size = 4
_localizationInfos$ = 12				; size = 4
_pErr$ = 16						; size = 4
_status$ = 20						; size = 4
?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::init, COMDAT
; _this$ = ecx
; Line 1353
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 600				; 00000258H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-612]
	mov	ecx, 150				; 00000096H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1355
	push	72					; 00000048H
	push	0
	mov	eax, DWORD PTR _pErr$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1357
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN34@init
; Line 1358
	jmp	$LN35@init
$LN34@init:
; Line 1361
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDecimalFormatSymbols
; Line 1362
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDefaultInfinityRule
; Line 1363
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDefaultNaNRule
; Line 1364
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN33@init
; Line 1365
	jmp	$LN35@init
$LN33@init:
; Line 1368
	cmp	DWORD PTR _localizationInfos$[ebp], 0
	jne	SHORT $LN37@init
	mov	DWORD PTR tv85[ebp], 0
	jmp	SHORT $LN38@init
$LN37@init:
	mov	ecx, DWORD PTR _localizationInfos$[ebp]
	call	?ref@LocalizationInfo@icu_56@@QAEPAV12@XZ ; icu_56::LocalizationInfo::ref
	mov	DWORD PTR tv85[ebp], eax
$LN38@init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR [eax+600], ecx
; Line 1370
	mov	esi, esp
	mov	eax, DWORD PTR _rules$[ebp]
	push	eax
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1371
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN32@init
; Line 1372
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1373
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN32@init:
; Line 1381
	lea	eax, DWORD PTR _description$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z ; icu_56::RuleBasedNumberFormat::stripWhitespace
; Line 1387
	mov	esi, esp
	push	0
	push	-1
	push	OFFSET _gLenientParse
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lp$[ebp], eax
; Line 1388
	cmp	DWORD PTR _lp$[ebp], -1
	je	$LN31@init
; Line 1392
	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $LN29@init
	mov	eax, DWORD PTR _lp$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 59					; 0000003bH
	jne	$LN31@init
$LN29@init:
; Line 1396
	mov	esi, esp
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	push	2
	push	OFFSET _gSemiPercent
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lpEnd$44122[ebp], eax
; Line 1398
	cmp	DWORD PTR _lpEnd$44122[ebp], -1
	jne	SHORT $LN28@init
; Line 1399
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _lpEnd$44122[ebp], eax
$LN28@init:
; Line 1401
	push	OFFSET _gLenientParse
	call	_u_strlen_56
	add	esp, 4
	add	eax, DWORD PTR _lp$[ebp]
	mov	DWORD PTR _lpStart$44124[ebp], eax
$LN27@init:
; Line 1402
	mov	esi, esp
	mov	eax, DWORD PTR _lpStart$44124[ebp]
	push	eax
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@init
; Line 1403
	mov	eax, DWORD PTR _lpStart$44124[ebp]
	add	eax, 1
	mov	DWORD PTR _lpStart$44124[ebp], eax
; Line 1404
	jmp	SHORT $LN27@init
$LN26@init:
; Line 1408
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52240[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T52240[ebp], 0
	je	SHORT $LN39@init
	mov	esi, esp
	mov	ecx, DWORD PTR $T52240[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T52240[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T52240[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	jmp	SHORT $LN40@init
$LN39@init:
	mov	DWORD PTR tv168[ebp], 0
$LN40@init:
	mov	edx, DWORD PTR tv168[ebp]
	mov	DWORD PTR $T52239[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T52239[ebp]
	mov	DWORD PTR [eax+596], ecx
; Line 1410
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+596], 0
	jne	SHORT $LN25@init
; Line 1411
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1412
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN25@init:
; Line 1414
	mov	eax, DWORD PTR _lpEnd$44122[ebp]
	sub	eax, DWORD PTR _lpStart$44124[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _lpStart$44124[ebp]
	push	ecx
	lea	edx, DWORD PTR _description$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+596]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1416
	mov	eax, DWORD PTR _lpEnd$44122[ebp]
	add	eax, 1
	sub	eax, DWORD PTR _lp$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@init:
; Line 1423
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
; Line 1424
	mov	esi, esp
	push	0
	push	2
	push	OFFSET _gSemiPercent
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$44133[ebp], eax
	jmp	SHORT $LN24@init
$LN23@init:
	mov	esi, esp
	mov	eax, DWORD PTR _p$44133[ebp]
	push	eax
	push	2
	push	OFFSET _gSemiPercent
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$44133[ebp], eax
$LN24@init:
	cmp	DWORD PTR _p$44133[ebp], -1
	je	SHORT $LN22@init
; Line 1425
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+364], ecx
; Line 1426
	mov	eax, DWORD PTR _p$44133[ebp]
	add	eax, 1
	mov	DWORD PTR _p$44133[ebp], eax
; Line 1427
	jmp	SHORT $LN23@init
$LN22@init:
; Line 1428
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+364], ecx
; Line 1431
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	lea	edx, DWORD PTR [ecx*4+4]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+356], eax
; Line 1433
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	jne	SHORT $LN21@init
; Line 1434
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1435
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN21@init:
; Line 1438
	mov	DWORD PTR _i$44140[ebp], 0
	jmp	SHORT $LN20@init
$LN19@init:
	mov	eax, DWORD PTR _i$44140[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44140[ebp], eax
$LN20@init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$44140[ebp]
	cmp	ecx, DWORD PTR [eax+364]
	jg	SHORT $LN18@init
; Line 1439
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _i$44140[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
; Line 1440
	jmp	SHORT $LN19@init
$LN18@init:
; Line 1449
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	jne	SHORT $LN17@init
; Line 1450
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1451
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN17@init:
; Line 1454
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR $T52243[ebp], ecx
	cmp	DWORD PTR $T52243[ebp], 0
	jne	SHORT $LN41@init
	push	4
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR tv233[ebp], eax
	jmp	SHORT $LN42@init
$LN41@init:
	xor	ecx, ecx
	mov	eax, DWORD PTR $T52243[ebp]
	mov	edx, 64					; 00000040H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv233[ebp], eax
$LN42@init:
	mov	ecx, DWORD PTR tv233[ebp]
	mov	DWORD PTR $T52245[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T52245[ebp], 0
	je	SHORT $LN43@init
	mov	edx, DWORD PTR $T52245[ebp]
	mov	eax, DWORD PTR $T52243[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	ecx
	push	OFFSET ??_TUnicodeString@icu_56@@QAEXXZ
	mov	edx, DWORD PTR $T52243[ebp]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR $T52245[ebp]
	add	eax, 4
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	ecx, DWORD PTR $T52245[ebp]
	add	ecx, 4
	mov	DWORD PTR tv244[ebp], ecx
	jmp	SHORT $LN44@init
$LN43@init:
	mov	DWORD PTR tv244[ebp], 0
$LN44@init:
	mov	edx, DWORD PTR tv244[ebp]
	mov	DWORD PTR $T52244[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T52244[ebp]
	mov	DWORD PTR [eax+360], ecx
; Line 1455
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	jne	SHORT $LN16@init
; Line 1456
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1457
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN16@init:
; Line 1461
	mov	DWORD PTR _curRuleSet$44153[ebp], 0
; Line 1462
	mov	DWORD PTR _start$44154[ebp], 0
; Line 1463
	mov	esi, esp
	push	0
	push	2
	push	OFFSET _gSemiPercent
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$44155[ebp], eax
	jmp	SHORT $LN15@init
$LN14@init:
	mov	esi, esp
	mov	eax, DWORD PTR _start$44154[ebp]
	push	eax
	push	2
	push	OFFSET _gSemiPercent
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$44155[ebp], eax
$LN15@init:
	cmp	DWORD PTR _p$44155[ebp], -1
	je	$LN13@init
; Line 1464
	mov	eax, DWORD PTR _p$44155[ebp]
	add	eax, 1
	sub	eax, DWORD PTR _start$44154[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _start$44154[ebp]
	push	ecx
	lea	edx, DWORD PTR _description$[ebp]
	push	edx
	mov	ecx, DWORD PTR _curRuleSet$44153[ebp]
	shl	ecx, 6
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+360]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1465
	mov	esi, esp
	push	120					; 00000078H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52251[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T52251[ebp], 0
	je	SHORT $LN45@init
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _curRuleSet$44153[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T52251[ebp]
	call	??0NFRuleSet@icu_56@@QAE@PAVRuleBasedNumberFormat@1@PAVUnicodeString@1@HAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::NFRuleSet
	mov	DWORD PTR tv281[ebp], eax
	jmp	SHORT $LN46@init
$LN45@init:
	mov	DWORD PTR tv281[ebp], 0
$LN46@init:
	mov	edx, DWORD PTR tv281[ebp]
	mov	DWORD PTR $T52250[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _curRuleSet$44153[ebp]
	mov	eax, DWORD PTR $T52250[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 1466
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _curRuleSet$44153[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	jne	SHORT $LN12@init
; Line 1467
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1468
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN12@init:
; Line 1470
	mov	eax, DWORD PTR _curRuleSet$44153[ebp]
	add	eax, 1
	mov	DWORD PTR _curRuleSet$44153[ebp], eax
; Line 1471
	mov	eax, DWORD PTR _p$44155[ebp]
	add	eax, 1
	mov	DWORD PTR _start$44154[ebp], eax
; Line 1472
	jmp	$LN14@init
$LN13@init:
; Line 1473
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _start$44154[ebp]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _start$44154[ebp]
	push	eax
	lea	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _curRuleSet$44153[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+360]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1474
	mov	esi, esp
	push	120					; 00000078H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52255[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T52255[ebp], 0
	je	SHORT $LN47@init
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _curRuleSet$44153[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T52255[ebp]
	call	??0NFRuleSet@icu_56@@QAE@PAVRuleBasedNumberFormat@1@PAVUnicodeString@1@HAAW4UErrorCode@@@Z ; icu_56::NFRuleSet::NFRuleSet
	mov	DWORD PTR tv312[ebp], eax
	jmp	SHORT $LN48@init
$LN47@init:
	mov	DWORD PTR tv312[ebp], 0
$LN48@init:
	mov	edx, DWORD PTR tv312[ebp]
	mov	DWORD PTR $T52254[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _curRuleSet$44153[ebp]
	mov	eax, DWORD PTR $T52254[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 1475
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _curRuleSet$44153[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	jne	SHORT $LN11@init
; Line 1476
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1477
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@init
$LN11@init:
; Line 1490
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initDefaultRuleSet@RuleBasedNumberFormat@icu_56@@AAEXXZ ; icu_56::RuleBasedNumberFormat::initDefaultRuleSet
; Line 1496
	mov	DWORD PTR _i$44169[ebp], 0
	jmp	SHORT $LN10@init
$LN9@init:
	mov	eax, DWORD PTR _i$44169[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44169[ebp], eax
$LN10@init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$44169[ebp]
	cmp	ecx, DWORD PTR [eax+364]
	jge	SHORT $LN8@init
; Line 1497
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$44169[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+360]
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _i$44169[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	call	?parseRules@NFRuleSet@icu_56@@QAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFRuleSet::parseRules
; Line 1498
	jmp	SHORT $LN9@init
$LN8@init:
; Line 1508
	cmp	DWORD PTR _localizationInfos$[ebp], 0
	je	$LN7@init
; Line 1511
	mov	DWORD PTR _i$44174[ebp], 0
	jmp	SHORT $LN6@init
$LN5@init:
	mov	eax, DWORD PTR _i$44174[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44174[ebp], eax
$LN6@init:
	mov	eax, DWORD PTR _localizationInfos$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _localizationInfos$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$44174[ebp], eax
	jge	$LN4@init
; Line 1512
	mov	esi, esp
	push	-1
	mov	edi, esp
	mov	eax, DWORD PTR _i$44174[ebp]
	push	eax
	mov	ecx, DWORD PTR _localizationInfos$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _localizationInfos$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	1
	lea	ecx, DWORD PTR _name$44178[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1513
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$44178[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::findRuleSet
	mov	DWORD PTR _rs$44179[ebp], eax
; Line 1514
	cmp	DWORD PTR _rs$44179[ebp], 0
	jne	SHORT $LN3@init
; Line 1515
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$44178[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@init
$LN3@init:
; Line 1517
	cmp	DWORD PTR _i$44174[ebp], 0
	jne	SHORT $LN2@init
; Line 1518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rs$44179[ebp]
	mov	DWORD PTR [eax+368], ecx
$LN2@init:
; Line 1520
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$44178[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN5@init
$LN4@init:
	jmp	SHORT $LN1@init
$LN7@init:
; Line 1522
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+368], eax
$LN1@init:
; Line 1524
	mov	esi, esp
	mov	eax, DWORD PTR _rules$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 604				; 0000025cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1525
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@init:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN59@init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 612				; 00000264H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN59@init:
	DD	2
	DD	$LN58@init
$LN58@init:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN55@init
	DD	-288					; fffffee0H
	DD	64					; 00000040H
	DD	$LN56@init
$LN56@init:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN55@init:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T52240[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T52245[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T52251[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T52255[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$44178[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-616]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@RuleBasedNumberFormat@icu_56@@AAEXABVUnicodeString@2@PAVLocalizationInfo@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_U@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_U@YAPAXI@Z PROC					; operator new[], COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 428
	mov	DWORD PTR _q$[ebp], 0
; Line 429
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 430
	mov	eax, DWORD PTR _q$[ebp]
; Line 431
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_U@YAPAXI@Z ENDP					; operator new[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	mov	eax, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_TUnicodeString@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_TUnicodeString@icu_56@@QAEXXZ PROC			; icu_56::UnicodeString::`local vftable constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_TUnicodeString@icu_56@@QAEXXZ ENDP			; icu_56::UnicodeString::`local vftable constructor closure'
_TEXT	ENDS
PUBLIC	?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z ; icu_56::RuleBasedNumberFormat::initCapitalizationContextInfo
EXTRN	__imp_?createSentenceInstance@BreakIterator@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC
EXTRN	?setContext@NumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::setContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setContext@RuleBasedNumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv147 = -244						; size = 4
$T52282 = -236						; size = 4
$T52283 = -224						; size = 4
_status$44203 = -20					; size = 4
_this$ = -8						; size = 4
_value$ = 8						; size = 4
_status$ = 12						; size = 4
?setContext@RuleBasedNumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::setContext, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
; Line 1531
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1532
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setContext@NumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z ; icu_56::NumberFormat::setContext
; Line 1533
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN8@setContext
; Line 1535
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+668]
	test	ecx, ecx
	jne	SHORT $LN6@setContext
	cmp	DWORD PTR _value$[ebp], 259		; 00000103H
	je	SHORT $LN5@setContext
	cmp	DWORD PTR _value$[ebp], 260		; 00000104H
	jne	SHORT $LN6@setContext
$LN5@setContext:
; Line 1536
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 372				; 00000174H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z ; icu_56::RuleBasedNumberFormat::initCapitalizationContextInfo
; Line 1537
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+668], 1
$LN6@setContext:
; Line 1542
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+672], 0
	jne	$LN8@setContext
	cmp	DWORD PTR _value$[ebp], 258		; 00000102H
	je	SHORT $LN3@setContext
	cmp	DWORD PTR _value$[ebp], 259		; 00000103H
	jne	SHORT $LN2@setContext
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+669]
	test	ecx, ecx
	jne	SHORT $LN3@setContext
$LN2@setContext:
	cmp	DWORD PTR _value$[ebp], 260		; 00000104H
	jne	$LN8@setContext
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+670]
	test	ecx, ecx
	je	$LN8@setContext
$LN3@setContext:
; Line 1543
	mov	DWORD PTR _status$44203[ebp], 0
; Line 1544
	mov	esi, esp
	lea	eax, DWORD PTR _status$44203[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	push	ecx
	call	DWORD PTR __imp_?createSentenceInstance@BreakIterator@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+672], eax
; Line 1545
	mov	eax, DWORD PTR _status$44203[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@setContext
; Line 1546
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+672]
	mov	DWORD PTR $T52283[ebp], ecx
	mov	edx, DWORD PTR $T52283[ebp]
	mov	DWORD PTR $T52282[ebp], edx
	cmp	DWORD PTR $T52282[ebp], 0
	je	SHORT $LN10@setContext
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52282[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52282[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN11@setContext
$LN10@setContext:
	mov	DWORD PTR tv147[ebp], 0
$LN11@setContext:
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
$LN8@setContext:
; Line 1552
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@setContext
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN14@setContext:
	DD	1
	DD	$LN13@setContext
$LN13@setContext:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@setContext
$LN12@setContext:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setContext@RuleBasedNumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::setContext
_TEXT	ENDS
PUBLIC	??_C@_0BA@CDOAOKDP@number?9spellout?$AA@	; `string'
PUBLIC	??_C@_0BC@FDCOHBMP@contextTransforms?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	_ures_getIntVector_56:PROC
EXTRN	__imp_??9Locale@icu_56@@QBECABV01@@Z:PROC
;	COMDAT ??_C@_0BA@CDOAOKDP@number?9spellout?$AA@
CONST	SEGMENT
??_C@_0BA@CDOAOKDP@number?9spellout?$AA@ DB 'number-spellout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FDCOHBMP@contextTransforms?$AA@
CONST	SEGMENT
??_C@_0BC@FDCOHBMP@contextTransforms?$AA@ DB 'contextTransforms', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z$0
__ehfuncinfo$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z
_TEXT	SEGMENT
tv78 = -496						; size = 4
$T44212 = -488						; size = 204
_intVector$44219 = -84					; size = 4
_len$44218 = -72					; size = 4
_rb$ = -60						; size = 4
_status$ = -48						; size = 4
_localeID$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_thelocale$ = 8						; size = 4
?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z PROC ; icu_56::RuleBasedNumberFormat::initCapitalizationContextInfo, COMDAT
; _this$ = ecx
; Line 1556
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-496]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1558
	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR $T44212[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@PBD000@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	eax, DWORD PTR $T44212[ebp]
	push	eax
	mov	ecx, DWORD PTR _thelocale$[ebp]
	call	DWORD PTR __imp_??9Locale@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@initCapita
	mov	esi, esp
	mov	ecx, DWORD PTR _thelocale$[ebp]
	call	DWORD PTR __imp_?getBaseName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@initCapita
$LN5@initCapita:
	mov	DWORD PTR tv78[ebp], 0
$LN6@initCapita:
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _localeID$[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T44212[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1559
	mov	DWORD PTR _status$[ebp], 0
; Line 1560
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	push	0
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$[ebp], eax
; Line 1561
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@FDCOHBMP@contextTransforms?$AA@
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 1562
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BA@CDOAOKDP@number?9spellout?$AA@
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 1563
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@initCapita
	cmp	DWORD PTR _rb$[ebp], 0
	je	SHORT $LN2@initCapita
; Line 1564
	mov	DWORD PTR _len$44218[ebp], 0
; Line 1565
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$44218[ebp]
	push	ecx
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _intVector$44219[ebp], eax
; Line 1566
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@initCapita
	cmp	DWORD PTR _intVector$44219[ebp], 0
	je	SHORT $LN2@initCapita
	cmp	DWORD PTR _len$44218[ebp], 2
	jl	SHORT $LN2@initCapita
; Line 1567
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _intVector$44219[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+669], dl
; Line 1568
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _intVector$44219[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+670], dl
$LN2@initCapita:
; Line 1571
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1573
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@initCapita
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 496				; 000001f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN12@initCapita:
	DD	2
	DD	$LN11@initCapita
$LN11@initCapita:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@initCapita
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN9@initCapita
$LN9@initCapita:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@initCapita:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44212[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-500]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initCapitalizationContextInfo@RuleBasedNumberFormat@icu_56@@AAEXABVLocale@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::initCapitalizationContextInfo
PUBLIC	__$ArrayPad$
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z$0
__ehfuncinfo$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_p$44233 = -120						; size = 4
_start$ = -108						; size = 4
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z PROC ; icu_56::RuleBasedNumberFormat::stripWhitespace, COMDAT
; _this$ = ecx
; Line 1577
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1579
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1581
	mov	DWORD PTR _start$[ebp], 0
$LN8@stripWhite:
; Line 1582
	cmp	DWORD PTR _start$[ebp], -1
	je	$LN7@stripWhite
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _start$[ebp], eax
	jge	$LN7@stripWhite
$LN6@stripWhite:
; Line 1585
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _start$[ebp], eax
	jge	SHORT $LN5@stripWhite
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@stripWhite
; Line 1586
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
; Line 1587
	jmp	SHORT $LN6@stripWhite
$LN5@stripWhite:
; Line 1591
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$44233[ebp], eax
; Line 1592
	cmp	DWORD PTR _p$44233[ebp], -1
	jne	SHORT $LN4@stripWhite
; Line 1595
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _start$[ebp]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1596
	mov	DWORD PTR _start$[ebp], -1
	jmp	SHORT $LN3@stripWhite
$LN4@stripWhite:
; Line 1598
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _p$44233[ebp], eax
	jge	SHORT $LN2@stripWhite
; Line 1599
	mov	eax, DWORD PTR _p$44233[ebp]
	add	eax, 1
	sub	eax, DWORD PTR _start$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _description$[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1600
	mov	eax, DWORD PTR _p$44233[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
; Line 1607
	jmp	SHORT $LN3@stripWhite
$LN2@stripWhite:
; Line 1608
	mov	DWORD PTR _start$[ebp], -1
$LN3@stripWhite:
; Line 1610
	jmp	$LN8@stripWhite
$LN7@stripWhite:
; Line 1612
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1613
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@stripWhite
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@stripWhite:
	DD	1
	DD	$LN14@stripWhite
$LN14@stripWhite:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN12@stripWhite
$LN12@stripWhite:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?stripWhitespace@RuleBasedNumberFormat@icu_56@@AAEXAAVUnicodeString@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::stripWhitespace
PUBLIC	?unref@LocalizationInfo@icu_56@@QAEPAV12@XZ	; icu_56::LocalizationInfo::unref
PUBLIC	??_GNFRule@icu_56@@QAEPAXI@Z			; icu_56::NFRule::`scalar deleting destructor'
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
PUBLIC	??_GNFRuleSet@icu_56@@QAEPAXI@Z			; icu_56::NFRuleSet::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dispose@RuleBasedNumberFormat@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv95 = -428						; size = 4
tv193 = -424						; size = 4
tv180 = -424						; size = 4
tv167 = -424						; size = 4
tv160 = -424						; size = 4
tv153 = -424						; size = 4
tv140 = -424						; size = 4
tv94 = -424						; size = 4
tv73 = -424						; size = 4
$T52320 = -416						; size = 4
$T52321 = -404						; size = 4
$T52324 = -392						; size = 4
$T52325 = -380						; size = 4
$T52326 = -368						; size = 4
$T52331 = -356						; size = 4
$T52332 = -344						; size = 4
$T52335 = -332						; size = 4
$T52336 = -320						; size = 4
$T52339 = -308						; size = 4
$T52340 = -296						; size = 4
$T52343 = -284						; size = 4
$T52344 = -272						; size = 4
$T52347 = -260						; size = 4
$T52348 = -248						; size = 4
$T52351 = -236						; size = 4
$T52352 = -224						; size = 4
_p$44242 = -20						; size = 4
_this$ = -8						; size = 4
?dispose@RuleBasedNumberFormat@icu_56@@AAEXXZ PROC	; icu_56::RuleBasedNumberFormat::dispose, COMDAT
; _this$ = ecx
; Line 1618
	push	ebp
	mov	ebp, esp
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-428]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1619
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	SHORT $LN6@dispose
; Line 1620
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR _p$44242[ebp], ecx
	jmp	SHORT $LN5@dispose
$LN4@dispose:
	mov	eax, DWORD PTR _p$44242[ebp]
	add	eax, 4
	mov	DWORD PTR _p$44242[ebp], eax
$LN5@dispose:
	mov	eax, DWORD PTR _p$44242[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@dispose
; Line 1621
	mov	eax, DWORD PTR _p$44242[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T52321[ebp], ecx
	mov	edx, DWORD PTR $T52321[ebp]
	mov	DWORD PTR $T52320[ebp], edx
	cmp	DWORD PTR $T52320[ebp], 0
	je	SHORT $LN9@dispose
	push	1
	mov	ecx, DWORD PTR $T52320[ebp]
	call	??_GNFRuleSet@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN10@dispose
$LN9@dispose:
	mov	DWORD PTR tv73[ebp], 0
$LN10@dispose:
; Line 1622
	jmp	SHORT $LN4@dispose
$LN3@dispose:
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 1624
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
$LN6@dispose:
; Line 1627
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	je	$LN2@dispose
; Line 1628
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR $T52326[ebp], ecx
	mov	edx, DWORD PTR $T52326[ebp]
	mov	DWORD PTR $T52325[ebp], edx
	mov	eax, DWORD PTR $T52325[ebp]
	mov	DWORD PTR $T52324[ebp], eax
	cmp	DWORD PTR $T52324[ebp], 0
	je	SHORT $LN13@dispose
	mov	ecx, DWORD PTR $T52324[ebp]
	cmp	DWORD PTR [ecx-4], 0
	je	SHORT $LN11@dispose
	mov	esi, esp
	push	3
	mov	edx, DWORD PTR $T52325[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T52325[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN12@dispose
$LN11@dispose:
	mov	eax, DWORD PTR $T52324[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	DWORD PTR tv94[ebp], 0
$LN12@dispose:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv95[ebp], ecx
	jmp	SHORT $LN14@dispose
$LN13@dispose:
	mov	DWORD PTR tv95[ebp], 0
$LN14@dispose:
; Line 1629
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
$LN2@dispose:
; Line 1633
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+576]
	mov	DWORD PTR $T52332[ebp], ecx
	mov	edx, DWORD PTR $T52332[ebp]
	mov	DWORD PTR $T52331[ebp], edx
	cmp	DWORD PTR $T52331[ebp], 0
	je	SHORT $LN15@dispose
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52331[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52331[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN16@dispose
$LN15@dispose:
	mov	DWORD PTR tv140[ebp], 0
$LN16@dispose:
; Line 1635
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
; Line 1637
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+580]
	mov	DWORD PTR $T52336[ebp], ecx
	mov	edx, DWORD PTR $T52336[ebp]
	mov	DWORD PTR $T52335[ebp], edx
	cmp	DWORD PTR $T52335[ebp], 0
	je	SHORT $LN17@dispose
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52335[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52335[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN18@dispose
$LN17@dispose:
	mov	DWORD PTR tv153[ebp], 0
$LN18@dispose:
; Line 1638
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+580], 0
; Line 1640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+584]
	mov	DWORD PTR $T52340[ebp], ecx
	mov	edx, DWORD PTR $T52340[ebp]
	mov	DWORD PTR $T52339[ebp], edx
	cmp	DWORD PTR $T52339[ebp], 0
	je	SHORT $LN19@dispose
	push	1
	mov	ecx, DWORD PTR $T52339[ebp]
	call	??_GNFRule@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN20@dispose
$LN19@dispose:
	mov	DWORD PTR tv160[ebp], 0
$LN20@dispose:
; Line 1641
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
; Line 1643
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+588]
	mov	DWORD PTR $T52344[ebp], ecx
	mov	edx, DWORD PTR $T52344[ebp]
	mov	DWORD PTR $T52343[ebp], edx
	cmp	DWORD PTR $T52343[ebp], 0
	je	SHORT $LN21@dispose
	push	1
	mov	ecx, DWORD PTR $T52343[ebp]
	call	??_GNFRule@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN22@dispose
$LN21@dispose:
	mov	DWORD PTR tv167[ebp], 0
$LN22@dispose:
; Line 1644
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
; Line 1646
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+596]
	mov	DWORD PTR $T52348[ebp], ecx
	mov	edx, DWORD PTR $T52348[ebp]
	mov	DWORD PTR $T52347[ebp], edx
	cmp	DWORD PTR $T52347[ebp], 0
	je	SHORT $LN23@dispose
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52347[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52347[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv180[ebp], eax
	jmp	SHORT $LN24@dispose
$LN23@dispose:
	mov	DWORD PTR tv180[ebp], 0
$LN24@dispose:
; Line 1647
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+596], 0
; Line 1650
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+672]
	mov	DWORD PTR $T52352[ebp], ecx
	mov	edx, DWORD PTR $T52352[ebp]
	mov	DWORD PTR $T52351[ebp], edx
	cmp	DWORD PTR $T52351[ebp], 0
	je	SHORT $LN25@dispose
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52351[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52351[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN26@dispose
$LN25@dispose:
	mov	DWORD PTR tv193[ebp], 0
$LN26@dispose:
; Line 1651
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+672], 0
; Line 1654
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+600], 0
	je	SHORT $LN7@dispose
; Line 1655
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	call	?unref@LocalizationInfo@icu_56@@QAEPAV12@XZ ; icu_56::LocalizationInfo::unref
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+600], eax
$LN7@dispose:
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 428				; 000001acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?dispose@RuleBasedNumberFormat@icu_56@@AAEXXZ ENDP	; icu_56::RuleBasedNumberFormat::dispose
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
EXTRN	??1NFRule@icu_56@@QAE@XZ:PROC			; icu_56::NFRule::~NFRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNFRule@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNFRule@icu_56@@QAEPAXI@Z PROC			; icu_56::NFRule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFRule@icu_56@@QAE@XZ		; icu_56::NFRule::~NFRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNFRule@icu_56@@QAEPAXI@Z ENDP			; icu_56::NFRule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?unref@LocalizationInfo@icu_56@@QAEPAV12@XZ
_TEXT	SEGMENT
tv76 = -232						; size = 4
tv68 = -232						; size = 4
$T52361 = -224						; size = 4
$T52362 = -212						; size = 4
_this$ = -8						; size = 4
?unref@LocalizationInfo@icu_56@@QAEPAV12@XZ PROC	; icu_56::LocalizationInfo::unref, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\rbnf.cpp
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@unref
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv68[ebp], 0
	jne	SHORT $LN1@unref
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T52362[ebp], eax
	mov	ecx, DWORD PTR $T52362[ebp]
	mov	DWORD PTR $T52361[ebp], ecx
	cmp	DWORD PTR $T52361[ebp], 0
	je	SHORT $LN4@unref
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T52361[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T52361[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@unref
$LN4@unref:
	mov	DWORD PTR tv76[ebp], 0
$LN1@unref:
; Line 93
	xor	eax, eax
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unref@LocalizationInfo@icu_56@@QAEPAV12@XZ ENDP	; icu_56::LocalizationInfo::unref
_TEXT	ENDS
EXTRN	??1NFRuleSet@icu_56@@QAE@XZ:PROC		; icu_56::NFRuleSet::~NFRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNFRuleSet@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNFRuleSet@icu_56@@QAEPAXI@Z PROC			; icu_56::NFRuleSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NFRuleSet@icu_56@@QAE@XZ		; icu_56::NFRuleSet::~NFRuleSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNFRuleSet@icu_56@@QAEPAXI@Z ENDP			; icu_56::NFRuleSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ ; icu_56::RuleBasedNumberFormat::getCollator
EXTRN	??0RuleBasedCollator@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedCollator::RuleBasedCollator
EXTRN	?getRules@RuleBasedCollator@icu_56@@QBEABVUnicodeString@2@XZ:PROC ; icu_56::RuleBasedCollator::getRules
EXTRN	?createInstance@Collator@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Collator::createInstance
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ$1
__ehfuncinfo$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ
_TEXT	SEGMENT
tv175 = -416						; size = 4
tv164 = -416						; size = 4
tv138 = -416						; size = 4
$T52370 = -408						; size = 4
$T52371 = -396						; size = 4
$T52374 = -384						; size = 4
$T52375 = -372						; size = 4
$T52376 = -360						; size = 4
$T52379 = -348						; size = 4
$T52380 = -336						; size = 4
_rules$44280 = -132					; size = 64
_newCollator$44276 = -60				; size = 4
_temp$44275 = -48					; size = 4
_status$44274 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getCollator, COMDAT
; _this$ = ecx
; Line 1672
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 404				; 00000194H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 101				; 00000065H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1674
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	jne	SHORT $LN8@getCollato
; Line 1675
	xor	eax, eax
	jmp	$LN9@getCollato
$LN8@getCollato:
; Line 1679
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+576], 0
	jne	$LN7@getCollato
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+592]
	test	ecx, ecx
	je	$LN7@getCollato
; Line 1685
	mov	DWORD PTR _status$44274[ebp], 0
; Line 1687
	lea	eax, DWORD PTR _status$44274[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	push	ecx
	call	?createInstance@Collator@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::Collator::createInstance
	add	esp, 8
	mov	DWORD PTR _temp$44275[ebp], eax
; Line 1689
	mov	eax, DWORD PTR _status$44274[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN6@getCollato
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _temp$44275[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _newCollator$44276[ebp], eax
	cmp	DWORD PTR _newCollator$44276[ebp], 0
	je	$LN6@getCollato
; Line 1690
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+596], 0
	je	$LN5@getCollato
; Line 1691
	mov	ecx, DWORD PTR _newCollator$44276[ebp]
	call	?getRules@RuleBasedCollator@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::RuleBasedCollator::getRules
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _rules$44280[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1692
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+596]
	push	ecx
	lea	ecx, DWORD PTR _rules$44280[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1694
	mov	esi, esp
	push	232					; 000000e8H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52371[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T52371[ebp], 0
	je	SHORT $LN11@getCollato
	lea	eax, DWORD PTR _status$44274[ebp]
	push	eax
	lea	ecx, DWORD PTR _rules$44280[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T52371[ebp]
	call	??0RuleBasedCollator@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::RuleBasedCollator::RuleBasedCollator
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN12@getCollato
$LN11@getCollato:
	mov	DWORD PTR tv138[ebp], 0
$LN12@getCollato:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T52370[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T52370[ebp]
	mov	DWORD PTR _newCollator$44276[ebp], eax
; Line 1696
	cmp	DWORD PTR _newCollator$44276[ebp], 0
	jne	SHORT $LN4@getCollato
; Line 1697
	mov	DWORD PTR $T52374[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$44280[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T52374[ebp]
	jmp	$LN9@getCollato
$LN4@getCollato:
; Line 1699
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$44280[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@getCollato
$LN5@getCollato:
; Line 1700
	mov	DWORD PTR _temp$44275[ebp], 0
$LN3@getCollato:
; Line 1702
	mov	eax, DWORD PTR _status$44274[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getCollato
; Line 1703
	mov	esi, esp
	lea	eax, DWORD PTR _status$44274[ebp]
	push	eax
	push	17					; 00000011H
	push	4
	mov	ecx, DWORD PTR _newCollator$44276[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _newCollator$44276[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1705
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCollator$44276[ebp]
	mov	DWORD PTR [eax+576], ecx
; Line 1706
	jmp	SHORT $LN6@getCollato
$LN2@getCollato:
; Line 1707
	mov	eax, DWORD PTR _newCollator$44276[ebp]
	mov	DWORD PTR $T52376[ebp], eax
	mov	ecx, DWORD PTR $T52376[ebp]
	mov	DWORD PTR $T52375[ebp], ecx
	cmp	DWORD PTR $T52375[ebp], 0
	je	SHORT $LN13@getCollato
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T52375[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T52375[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN6@getCollato
$LN13@getCollato:
	mov	DWORD PTR tv164[ebp], 0
$LN6@getCollato:
; Line 1710
	mov	eax, DWORD PTR _temp$44275[ebp]
	mov	DWORD PTR $T52380[ebp], eax
	mov	ecx, DWORD PTR $T52380[ebp]
	mov	DWORD PTR $T52379[ebp], ecx
	cmp	DWORD PTR $T52379[ebp], 0
	je	SHORT $LN15@getCollato
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T52379[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T52379[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv175[ebp], eax
	jmp	SHORT $LN7@getCollato
$LN15@getCollato:
	mov	DWORD PTR tv175[ebp], 0
$LN7@getCollato:
; Line 1716
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+576]
$LN9@getCollato:
; Line 1717
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@getCollato
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@getCollato:
	DD	2
	DD	$LN22@getCollato
$LN22@getCollato:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN19@getCollato
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN20@getCollato
$LN20@getCollato:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN19@getCollato:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$44280[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T52371[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-420]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getCollator
EXTRN	??0DecimalFormatSymbols@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -280						; size = 4
tv76 = -280						; size = 4
$T52397 = -272						; size = 4
$T52398 = -260						; size = 4
$T52401 = -248						; size = 4
$T52402 = -236						; size = 4
_temp$44300 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::initializeDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 1722
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1726
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+580], 0
	jne	$LN3@initialize
; Line 1727
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52398[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T52398[ebp], 0
	je	SHORT $LN6@initialize
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	ecx, DWORD PTR $T52398[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN7@initialize
$LN6@initialize:
	mov	DWORD PTR tv76[ebp], 0
$LN7@initialize:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T52397[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T52397[ebp]
	mov	DWORD PTR _temp$44300[ebp], eax
; Line 1728
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initialize
; Line 1729
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$44300[ebp]
	mov	DWORD PTR [eax+580], ecx
; Line 1731
	jmp	SHORT $LN3@initialize
$LN2@initialize:
; Line 1732
	mov	eax, DWORD PTR _temp$44300[ebp]
	mov	DWORD PTR $T52402[ebp], eax
	mov	ecx, DWORD PTR $T52402[ebp]
	mov	DWORD PTR $T52401[ebp], ecx
	cmp	DWORD PTR $T52401[ebp], 0
	je	SHORT $LN8@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T52401[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T52401[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN3@initialize
$LN8@initialize:
	mov	DWORD PTR tv91[ebp], 0
$LN3@initialize:
; Line 1735
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+580]
; Line 1736
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T52398[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializeDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@AAEPAVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::initializeDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 1744
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1745
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+580]
; Line 1746
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
_TEXT	ENDS
PUBLIC	??_C@_1M@PFJJKCPL@?$AAI?$AAn?$AAf?$AA?3?$AA?5?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC ; icu_56::NFRule::NFRule
;	COMDAT ??_C@_1M@PFJJKCPL@?$AAI?$AAn?$AAf?$AA?3?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1M@PFJJKCPL@?$AAI?$AAn?$AAf?$AA?3?$AA?5?$AA?$AA@ DB 'I', 00H, 'n', 00H
	DB	'f', 00H, ':', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv141 = -432						; size = 4
tv144 = -428						; size = 4
tv137 = -428						; size = 4
tv128 = -428						; size = 4
$T52417 = -420						; size = 4
$T52418 = -408						; size = 4
$T52421 = -396						; size = 4
$T52422 = -384						; size = 4
$T44322 = -372						; size = 64
_temp$44323 = -108					; size = 4
_rule$44320 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::initializeDefaultInfinityRule, COMDAT
; _this$ = ecx
; Line 1750
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1751
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@initialize@2
; Line 1752
	xor	eax, eax
	jmp	$LN5@initialize@2
$LN4@initialize@2:
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+584], 0
	jne	$LN3@initialize@2
; Line 1755
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@PFJJKCPL@?$AAI?$AAn?$AAf?$AA?3?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR _rule$44320[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1756
	push	14					; 0000000eH
	lea	eax, DWORD PTR $T44322[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
	mov	ecx, eax
	call	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv141[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	lea	ecx, DWORD PTR _rule$44320[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T44322[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1757
	mov	esi, esp
	push	96					; 00000060H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52418[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T52418[ebp], 0
	je	SHORT $LN7@initialize@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rule$44320[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T52418[ebp]
	call	??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFRule::NFRule
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN8@initialize@2
$LN7@initialize@2:
	mov	DWORD PTR tv128[ebp], 0
$LN8@initialize@2:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T52417[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T52417[ebp]
	mov	DWORD PTR _temp$44323[ebp], ecx
; Line 1758
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initialize@2
; Line 1759
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$44323[ebp]
	mov	DWORD PTR [eax+584], ecx
; Line 1761
	jmp	SHORT $LN1@initialize@2
$LN2@initialize@2:
; Line 1762
	mov	eax, DWORD PTR _temp$44323[ebp]
	mov	DWORD PTR $T52422[ebp], eax
	mov	ecx, DWORD PTR $T52422[ebp]
	mov	DWORD PTR $T52421[ebp], ecx
	cmp	DWORD PTR $T52421[ebp], 0
	je	SHORT $LN9@initialize@2
	push	1
	mov	ecx, DWORD PTR $T52421[ebp]
	call	??_GNFRule@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN1@initialize@2
$LN9@initialize@2:
	mov	DWORD PTR tv137[ebp], 0
$LN1@initialize@2:
; Line 1764
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$44320[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@initialize@2:
; Line 1765
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+584]
$LN5@initialize@2:
; Line 1766
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@initialize@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN17@initialize@2:
	DD	1
	DD	$LN16@initialize@2
$LN16@initialize@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN14@initialize@2
$LN14@initialize@2:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$44320[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44322[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T52418[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::initializeDefaultInfinityRule
PUBLIC	?getDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultInfinityRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDefaultInfinityRule, COMDAT
; _this$ = ecx
; Line 1770
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1771
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+584]
; Line 1772
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDefaultInfinityRule
_TEXT	ENDS
PUBLIC	??_C@_1M@FKJJGJBK@?$AAN?$AAa?$AAN?$AA?3?$AA?5?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_1M@FKJJGJBK@?$AAN?$AAa?$AAN?$AA?3?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1M@FKJJGJBK@?$AAN?$AAa?$AAN?$AA?3?$AA?5?$AA?$AA@ DB 'N', 00H, 'a', 00H
	DB	'N', 00H, ':', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv141 = -432						; size = 4
tv144 = -428						; size = 4
tv137 = -428						; size = 4
tv128 = -428						; size = 4
$T52442 = -420						; size = 4
$T52443 = -408						; size = 4
$T52446 = -396						; size = 4
$T52447 = -384						; size = 4
$T44345 = -372						; size = 64
_temp$44346 = -108					; size = 4
_rule$44343 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::initializeDefaultNaNRule, COMDAT
; _this$ = ecx
; Line 1776
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1777
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@initialize@3
; Line 1778
	xor	eax, eax
	jmp	$LN5@initialize@3
$LN4@initialize@3:
; Line 1780
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+588], 0
	jne	$LN3@initialize@3
; Line 1781
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@FKJJGJBK@?$AAN?$AAa?$AAN?$AA?3?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR _rule$44343[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1782
	push	15					; 0000000fH
	lea	eax, DWORD PTR $T44345[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ ; icu_56::RuleBasedNumberFormat::getDecimalFormatSymbols
	mov	ecx, eax
	call	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv141[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	lea	ecx, DWORD PTR _rule$44343[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T44345[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1783
	mov	esi, esp
	push	96					; 00000060H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52443[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T52443[ebp], 0
	je	SHORT $LN7@initialize@3
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rule$44343[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T52443[ebp]
	call	??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFRule::NFRule
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN8@initialize@3
$LN7@initialize@3:
	mov	DWORD PTR tv128[ebp], 0
$LN8@initialize@3:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T52442[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T52442[ebp]
	mov	DWORD PTR _temp$44346[ebp], ecx
; Line 1784
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initialize@3
; Line 1785
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$44346[ebp]
	mov	DWORD PTR [eax+588], ecx
; Line 1787
	jmp	SHORT $LN1@initialize@3
$LN2@initialize@3:
; Line 1788
	mov	eax, DWORD PTR _temp$44346[ebp]
	mov	DWORD PTR $T52447[ebp], eax
	mov	ecx, DWORD PTR $T52447[ebp]
	mov	DWORD PTR $T52446[ebp], ecx
	cmp	DWORD PTR $T52446[ebp], 0
	je	SHORT $LN9@initialize@3
	push	1
	mov	ecx, DWORD PTR $T52446[ebp]
	call	??_GNFRule@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN1@initialize@3
$LN9@initialize@3:
	mov	DWORD PTR tv137[ebp], 0
$LN1@initialize@3:
; Line 1790
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$44343[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@initialize@3:
; Line 1791
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+588]
$LN5@initialize@3:
; Line 1792
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@initialize@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN17@initialize@3:
	DD	1
	DD	$LN16@initialize@3
$LN16@initialize@3:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN14@initialize@3
$LN14@initialize@3:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$44343[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44345[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T52443[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::initializeDefaultNaNRule
PUBLIC	?getDefaultNaNRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultNaNRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDefaultNaNRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDefaultNaNRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDefaultNaNRule, COMDAT
; _this$ = ecx
; Line 1796
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1797
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+588]
; Line 1798
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDefaultNaNRule@RuleBasedNumberFormat@icu_56@@ABEPBVNFRule@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDefaultNaNRule
_TEXT	ENDS
EXTRN	?setDecimalFormatSymbols@NFRuleSet@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NFRuleSet::setDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
tv94 = -304						; size = 4
tv85 = -304						; size = 4
tv78 = -304						; size = 4
$T52466 = -296						; size = 4
$T52467 = -284						; size = 4
$T52470 = -272						; size = 4
$T52471 = -260						; size = 4
$T52474 = -248						; size = 4
$T52475 = -236						; size = 4
_i$44372 = -32						; size = 4
_status$44366 = -20					; size = 4
_this$ = -8						; size = 4
_symbolsToAdopt$ = 8					; size = 4
?adoptDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z PROC ; icu_56::RuleBasedNumberFormat::adoptDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 1803
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1804
	cmp	DWORD PTR _symbolsToAdopt$[ebp], 0
	jne	SHORT $LN6@adoptDecim
; Line 1805
	jmp	$LN7@adoptDecim
$LN6@adoptDecim:
; Line 1808
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+580], 0
	je	SHORT $LN5@adoptDecim
; Line 1809
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+580]
	mov	DWORD PTR $T52467[ebp], ecx
	mov	edx, DWORD PTR $T52467[ebp]
	mov	DWORD PTR $T52466[ebp], edx
	cmp	DWORD PTR $T52466[ebp], 0
	je	SHORT $LN9@adoptDecim
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T52466[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T52466[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@adoptDecim
$LN9@adoptDecim:
	mov	DWORD PTR tv78[ebp], 0
$LN5@adoptDecim:
; Line 1812
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _symbolsToAdopt$[ebp]
	mov	DWORD PTR [eax+580], ecx
; Line 1816
	mov	DWORD PTR _status$44366[ebp], 0
; Line 1818
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+584]
	mov	DWORD PTR $T52471[ebp], ecx
	mov	edx, DWORD PTR $T52471[ebp]
	mov	DWORD PTR $T52470[ebp], edx
	cmp	DWORD PTR $T52470[ebp], 0
	je	SHORT $LN11@adoptDecim
	push	1
	mov	ecx, DWORD PTR $T52470[ebp]
	call	??_GNFRule@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN12@adoptDecim
$LN11@adoptDecim:
	mov	DWORD PTR tv85[ebp], 0
$LN12@adoptDecim:
; Line 1819
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+584], 0
; Line 1820
	lea	eax, DWORD PTR _status$44366[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeDefaultInfinityRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDefaultInfinityRule
; Line 1822
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+588]
	mov	DWORD PTR $T52475[ebp], ecx
	mov	edx, DWORD PTR $T52475[ebp]
	mov	DWORD PTR $T52474[ebp], edx
	cmp	DWORD PTR $T52474[ebp], 0
	je	SHORT $LN13@adoptDecim
	push	1
	mov	ecx, DWORD PTR $T52474[ebp]
	call	??_GNFRule@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN14@adoptDecim
$LN13@adoptDecim:
	mov	DWORD PTR tv94[ebp], 0
$LN14@adoptDecim:
; Line 1823
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+588], 0
; Line 1824
	lea	eax, DWORD PTR _status$44366[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeDefaultNaNRule@RuleBasedNumberFormat@icu_56@@AAEPAVNFRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::initializeDefaultNaNRule
; Line 1826
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	SHORT $LN7@adoptDecim
; Line 1827
	mov	DWORD PTR _i$44372[ebp], 0
	jmp	SHORT $LN3@adoptDecim
$LN2@adoptDecim:
	mov	eax, DWORD PTR _i$44372[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44372[ebp], eax
$LN3@adoptDecim:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$44372[ebp]
	cmp	ecx, DWORD PTR [eax+364]
	jge	SHORT $LN7@adoptDecim
; Line 1828
	lea	eax, DWORD PTR _status$44366[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbolsToAdopt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	ecx, DWORD PTR _i$44372[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4]
	call	?setDecimalFormatSymbols@NFRuleSet@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::NFRuleSet::setDecimalFormatSymbols
; Line 1829
	jmp	SHORT $LN2@adoptDecim
$LN7@adoptDecim:
; Line 1832
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@adoptDecim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN17@adoptDecim:
	DD	1
	DD	$LN16@adoptDecim
$LN16@adoptDecim:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@adoptDecim
$LN15@adoptDecim:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?adoptDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::adoptDecimalFormatSymbols
_TEXT	ENDS
EXTRN	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z$0
__ehfuncinfo$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T52483 = -236						; size = 4
$T52484 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_symbols$ = 8						; size = 4
?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z PROC ; icu_56::RuleBasedNumberFormat::setDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 1837
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1838
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52484[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T52484[ebp], 0
	je	SHORT $LN3@setDecimal
	mov	eax, DWORD PTR _symbols$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T52484[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@setDecimal
$LN3@setDecimal:
	mov	DWORD PTR tv75[ebp], 0
$LN4@setDecimal:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T52483[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	edx, DWORD PTR $T52483[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1839
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T52484[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z ENDP ; icu_56::RuleBasedNumberFormat::setDecimalFormatSymbols
PUBLIC	?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::createPluralFormat
EXTRN	??0PluralFormat@icu_56@@QAE@ABVLocale@1@W4UPluralType@@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC ; icu_56::PluralFormat::PluralFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T52496 = -236						; size = 4
$T52497 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pluralType$ = 8					; size = 4
_pattern$ = 12						; size = 4
_status$ = 16						; size = 4
?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedNumberFormat::createPluralFormat, COMDAT
; _this$ = ecx
; Line 1845
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1846
	mov	esi, esp
	push	648					; 00000288H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52497[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T52497[ebp], 0
	je	SHORT $LN3@createPlur
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pluralType$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 372				; 00000174H
	push	eax
	mov	ecx, DWORD PTR $T52497[ebp]
	call	??0PluralFormat@icu_56@@QAE@ABVLocale@1@W4UPluralType@@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::PluralFormat::PluralFormat
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@createPlur
$LN3@createPlur:
	mov	DWORD PTR tv76[ebp], 0
$LN4@createPlur:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T52496[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T52496[ebp]
; Line 1847
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T52497[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedNumberFormat::createPluralFormat
END

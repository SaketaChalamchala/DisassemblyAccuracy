; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\compactdecimalformat.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
_gCompactDecimalData DD 01H DUP (?)
_gCompactDecimalMetaLock DB 020H DUP (?)
?classID@?1??getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::CompactDecimalFormat::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_gOther	DB	'other', 00H
	ORG $+2
_gLatnTag DB	'latn', 00H
	ORG $+3
_gNumberElementsTag DB 'NumberElements', 00H
	ORG $+1
_gDecimalFormatTag DB 'decimalFormat', 00H
	ORG $+2
_gPatternsShort DB 'patternsShort', 00H
	ORG $+2
_gPatternsLong DB 'patternsLong', 00H
	ORG $+3
_gRoot	DB	'root', 00H
	ORG $+3
_kZero	DW	030H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T81866 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T81866[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T81866[ebp]
	or	ecx, 1
	mov	DWORD PTR $T81866[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T36479 = -312						; size = 64
_i$36474 = -45						; size = 1
_sym$36472 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$36472[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$36472[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$36474[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$36474[ebp]
	add	al, 1
	mov	BYTE PTR _i$36474[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$36474[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$36472[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$36472[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$36472[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36479[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$36474[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T36479[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36479[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T81888 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T81888[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T81888[ebp]
	or	ecx, 1
	mov	DWORD PTR $T81888[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
EXTRN	??8DigitList@icu_56@@QBECABV01@@Z:PROC		; icu_56::DigitList::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	??1CompactDecimalFormat@icu_56@@UAE@XZ		; icu_56::CompactDecimalFormat::~CompactDecimalFormat
PUBLIC	??_GCompactDecimalFormat@icu_56@@UAEPAXI@Z	; icu_56::CompactDecimalFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCompactDecimalFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCompactDecimalFormat@icu_56@@UAEPAXI@Z PROC		; icu_56::CompactDecimalFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CompactDecimalFormat@icu_56@@UAE@XZ	; icu_56::CompactDecimalFormat::~CompactDecimalFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCompactDecimalFormat@icu_56@@UAEPAXI@Z ENDP		; icu_56::CompactDecimalFormat::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ECompactDecimalFormat@icu_56@@UAEPAXI@Z	; icu_56::CompactDecimalFormat::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECompactDecimalFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECompactDecimalFormat@icu_56@@UAEPAXI@Z PROC		; icu_56::CompactDecimalFormat::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1CompactDecimalFormat@icu_56@@UAE@XZ ; icu_56::CompactDecimalFormat::~CompactDecimalFormat
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	400					; 00000190H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CompactDecimalFormat@icu_56@@UAE@XZ	; icu_56::CompactDecimalFormat::~CompactDecimalFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECompactDecimalFormat@icu_56@@UAEPAXI@Z ENDP		; icu_56::CompactDecimalFormat::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::NumberingSystem::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$72412 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberingSystem::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+72]
	mov	BYTE PTR [eax+72], dl
	mov	DWORD PTR _$S1$72412[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$72412[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$72412[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$72412[ebp], 9
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$72412[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$72412[ebp]
	mov	dl, BYTE PTR [ecx+73]
	mov	BYTE PTR [eax+73], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberingSystem::operator=
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??1CDFUnit@icu_56@@QAE@XZ			; icu_56::CDFUnit::~CDFUnit
PUBLIC	??_ECDFUnit@icu_56@@QAEPAXI@Z			; icu_56::CDFUnit::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECDFUnit@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECDFUnit@icu_56@@QAEPAXI@Z PROC			; icu_56::CDFUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1CDFUnit@icu_56@@QAE@XZ	; icu_56::CDFUnit::~CDFUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	128					; 00000080H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDFUnit@icu_56@@QAE@XZ		; icu_56::CDFUnit::~CDFUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECDFUnit@icu_56@@QAEPAXI@Z ENDP			; icu_56::CDFUnit::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\compactdecimalformat.cpp
xdata$x	SEGMENT
__unwindtable$??1CDFUnit@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDFUnit@icu_56@@QAE@XZ$0
__ehfuncinfo$??1CDFUnit@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDFUnit@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CDFUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CDFUnit@icu_56@@QAE@XZ PROC				; icu_56::CDFUnit::~CDFUnit, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDFUnit@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDFUnit@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1CDFUnit@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDFUnit@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDFUnit@icu_56@@QAE@XZ ENDP				; icu_56::CDFUnit::~CDFUnit
PUBLIC	?getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ ; icu_56::CompactDecimalFormat::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ PROC ; icu_56::CompactDecimalFormat::getStaticClassID, COMDAT
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ ENDP ; icu_56::CompactDecimalFormat::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@CompactDecimalFormat@icu_56@@UBEPAXXZ ; icu_56::CompactDecimalFormat::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@CompactDecimalFormat@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@CompactDecimalFormat@icu_56@@UBEPAXXZ PROC ; icu_56::CompactDecimalFormat::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@CompactDecimalFormat@icu_56@@SAPAXXZ ; icu_56::CompactDecimalFormat::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@CompactDecimalFormat@icu_56@@UBEPAXXZ ENDP ; icu_56::CompactDecimalFormat::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7CompactDecimalFormat@icu_56@@6B@		; icu_56::CompactDecimalFormat::`vftable'
PUBLIC	??0CompactDecimalFormat@icu_56@@AAE@ABVDecimalFormat@1@PBUUHashtable@@PBNPAVPluralRules@1@@Z ; icu_56::CompactDecimalFormat::CompactDecimalFormat
PUBLIC	??_R4CompactDecimalFormat@icu_56@@6B@		; icu_56::CompactDecimalFormat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCompactDecimalFormat@icu_56@@@8		; icu_56::CompactDecimalFormat `RTTI Type Descriptor'
PUBLIC	??_R3CompactDecimalFormat@icu_56@@8		; icu_56::CompactDecimalFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CompactDecimalFormat@icu_56@@8		; icu_56::CompactDecimalFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CompactDecimalFormat@icu_56@@8	; icu_56::CompactDecimalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@DecimalFormat@icu_56@@8		; icu_56::DecimalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVDecimalFormat@icu_56@@@8		; icu_56::DecimalFormat `RTTI Type Descriptor'
PUBLIC	??_R3DecimalFormat@icu_56@@8			; icu_56::DecimalFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DecimalFormat@icu_56@@8			; icu_56::DecimalFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormat@icu_56@@8		; icu_56::NumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNumberFormat@icu_56@@@8			; icu_56::NumberFormat `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormat@icu_56@@8			; icu_56::NumberFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormat@icu_56@@8			; icu_56::NumberFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Format@icu_56@@8			; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFormat@icu_56@@@8			; icu_56::Format `RTTI Type Descriptor'
PUBLIC	??_R3Format@icu_56@@8				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Format@icu_56@@8				; icu_56::Format::`RTTI Base Class Array'
PUBLIC	??8CompactDecimalFormat@icu_56@@UBECABVFormat@1@@Z ; icu_56::CompactDecimalFormat::operator==
PUBLIC	?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ ; icu_56::CompactDecimalFormat::clone
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ; icu_56::CompactDecimalFormat::format
PUBLIC	?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::parse
PUBLIC	?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ; icu_56::CompactDecimalFormat::parse
PUBLIC	?parseCurrency@CompactDecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z ; icu_56::CompactDecimalFormat::parseCurrency
EXTRN	??0DecimalFormat@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::DecimalFormat::DecimalFormat
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?parseObject@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z:PROC ; icu_56::NumberFormat::parseObject
EXTRN	?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setParseIntegerOnly
EXTRN	?setLenient@NumberFormat@icu_56@@UAEXC@Z:PROC	; icu_56::NumberFormat::setLenient
EXTRN	?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setGroupingUsed
EXTRN	?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setMaximumIntegerDigits
EXTRN	?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setMinimumIntegerDigits
EXTRN	?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setMaximumFractionDigits
EXTRN	?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setMinimumFractionDigits
EXTRN	?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::setCurrency
EXTRN	?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::setContext
EXTRN	?getContext@NumberFormat@icu_56@@UBE?AW4UDisplayContext@@W4UDisplayContextType@@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::getContext
EXTRN	?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::getEffectiveCurrency
EXTRN	?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::setAttribute
EXTRN	?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::getAttribute
EXTRN	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::format
EXTRN	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::format
EXTRN	?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ:PROC ; icu_56::DecimalFormat::getDecimalFormatSymbols
EXTRN	?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z:PROC ; icu_56::DecimalFormat::adoptDecimalFormatSymbols
EXTRN	?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z:PROC ; icu_56::DecimalFormat::setDecimalFormatSymbols
EXTRN	?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ:PROC ; icu_56::DecimalFormat::getCurrencyPluralInfo
EXTRN	?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z:PROC ; icu_56::DecimalFormat::adoptCurrencyPluralInfo
EXTRN	?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z:PROC ; icu_56::DecimalFormat::setCurrencyPluralInfo
EXTRN	?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormat::setPositivePrefix
EXTRN	?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormat::setNegativePrefix
EXTRN	?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormat::setPositiveSuffix
EXTRN	?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormat::setNegativeSuffix
EXTRN	?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setMultiplier
EXTRN	?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ:PROC ; icu_56::DecimalFormat::getRoundingIncrement
EXTRN	?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z:PROC ; icu_56::DecimalFormat::setRoundingIncrement
EXTRN	?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ:PROC ; icu_56::DecimalFormat::getRoundingMode
EXTRN	?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z:PROC ; icu_56::DecimalFormat::setRoundingMode
EXTRN	?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ:PROC ; icu_56::DecimalFormat::getFormatWidth
EXTRN	?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setFormatWidth
EXTRN	?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ:PROC ; icu_56::DecimalFormat::getPadCharacterString
EXTRN	?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormat::setPadCharacter
EXTRN	?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ:PROC ; icu_56::DecimalFormat::getPadPosition
EXTRN	?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z:PROC ; icu_56::DecimalFormat::setPadPosition
EXTRN	?isScientificNotation@DecimalFormat@icu_56@@UBECXZ:PROC ; icu_56::DecimalFormat::isScientificNotation
EXTRN	?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setScientificNotation
EXTRN	?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ:PROC ; icu_56::DecimalFormat::getMinimumExponentDigits
EXTRN	?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setMinimumExponentDigits
EXTRN	?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ:PROC ; icu_56::DecimalFormat::isExponentSignAlwaysShown
EXTRN	?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setExponentSignAlwaysShown
EXTRN	?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setGroupingSize
EXTRN	?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setSecondaryGroupingSize
EXTRN	?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z:PROC ; icu_56::DecimalFormat::setMinimumGroupingDigits
EXTRN	?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setDecimalSeparatorAlwaysShown
EXTRN	?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z:PROC ; icu_56::DecimalFormat::setDecimalPatternMatchRequired
EXTRN	?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormat::toPattern
EXTRN	?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormat::toLocalizedPattern
EXTRN	?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::applyPattern
EXTRN	?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::applyPattern
EXTRN	?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::applyLocalizedPattern
EXTRN	?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::applyLocalizedPattern
EXTRN	?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z:PROC ; icu_56::DecimalFormat::setCurrency
;	COMDAT ??_R2Format@icu_56@@8
rdata$r	SEGMENT
??_R2Format@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Format@icu_56@@8 ; icu_56::Format::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Format@icu_56@@8
rdata$r	SEGMENT
??_R3Format@icu_56@@8 DD 00H				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Format `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Format@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Format@icu_56@@8 DD FLAT:??_R0?AVFormat@icu_56@@@8 ; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8 ; icu_56::NumberFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormat@icu_56@@8 DD 00H			; icu_56::NumberFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2NumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormat@icu_56@@8 DD FLAT:??_R0?AVNumberFormat@icu_56@@@8 ; icu_56::NumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R2DecimalFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DecimalFormat@icu_56@@8 ; icu_56::DecimalFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R3DecimalFormat@icu_56@@8 DD 00H			; icu_56::DecimalFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2DecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDecimalFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDecimalFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DecimalFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDecimalFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@DecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DecimalFormat@icu_56@@8 DD FLAT:??_R0?AVDecimalFormat@icu_56@@@8 ; icu_56::DecimalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CompactDecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CompactDecimalFormat@icu_56@@8 DD FLAT:??_R0?AVCompactDecimalFormat@icu_56@@@8 ; icu_56::CompactDecimalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CompactDecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CompactDecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R2CompactDecimalFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CompactDecimalFormat@icu_56@@8 ; icu_56::CompactDecimalFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DecimalFormat@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CompactDecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R3CompactDecimalFormat@icu_56@@8 DD 00H		; icu_56::CompactDecimalFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CompactDecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCompactDecimalFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCompactDecimalFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CompactDecimalFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCompactDecimalFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CompactDecimalFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4CompactDecimalFormat@icu_56@@6B@ DD 00H		; icu_56::CompactDecimalFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCompactDecimalFormat@icu_56@@@8
	DD	FLAT:??_R3CompactDecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CompactDecimalFormat@icu_56@@6B@
CONST	SEGMENT
??_7CompactDecimalFormat@icu_56@@6B@ DD FLAT:??_R4CompactDecimalFormat@icu_56@@6B@ ; icu_56::CompactDecimalFormat::`vftable'
	DD	FLAT:??_ECompactDecimalFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@CompactDecimalFormat@icu_56@@UBEPAXXZ
	DD	FLAT:??8CompactDecimalFormat@icu_56@@UBECABVFormat@1@@Z
	DD	FLAT:?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parseObject@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?parseCurrency@CompactDecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
	DD	FLAT:?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setLenient@NumberFormat@icu_56@@UAEXC@Z
	DD	FLAT:?isLenient@NumberFormat@icu_56@@UBECXZ
	DD	FLAT:?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z
	DD	FLAT:?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z
	DD	FLAT:?getContext@NumberFormat@icu_56@@UBE?AW4UDisplayContext@@W4UDisplayContextType@@AAW4UErrorCode@@@Z
	DD	FLAT:?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z
	DD	FLAT:?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z
	DD	FLAT:?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ
	DD	FLAT:?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z
	DD	FLAT:?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	DD	FLAT:?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ
	DD	FLAT:?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z
	DD	FLAT:?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z
	DD	FLAT:?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ
	DD	FLAT:?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z
	DD	FLAT:?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ
	DD	FLAT:?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z
	DD	FLAT:?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ
	DD	FLAT:?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	FLAT:?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ
	DD	FLAT:?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z
	DD	FLAT:?isScientificNotation@DecimalFormat@icu_56@@UBECXZ
	DD	FLAT:?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ
	DD	FLAT:?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ
	DD	FLAT:?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z
	DD	FLAT:?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z
	DD	FLAT:?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	FLAT:?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	FLAT:?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CompactDecimalFormat@icu_56@@AAE@ABVDecimalFormat@1@PBUUHashtable@@PBNPAVPluralRules@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_decimalFormat$ = 8					; size = 4
_unitsByVariant$ = 12					; size = 4
_divisors$ = 16						; size = 4
_pluralRules$ = 20					; size = 4
??0CompactDecimalFormat@icu_56@@AAE@ABVDecimalFormat@1@PBUUHashtable@@PBNPAVPluralRules@1@@Z PROC ; icu_56::CompactDecimalFormat::CompactDecimalFormat, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _decimalFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DecimalFormat@icu_56@@QAE@ABV01@@Z	; icu_56::DecimalFormat::DecimalFormat
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompactDecimalFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _unitsByVariant$[ebp]
	mov	DWORD PTR [eax+388], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _divisors$[ebp]
	mov	DWORD PTR [eax+392], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pluralRules$[ebp]
	mov	DWORD PTR [eax+396], ecx
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0CompactDecimalFormat@icu_56@@AAE@ABVDecimalFormat@1@PBUUHashtable@@PBNPAVPluralRules@1@@Z ENDP ; icu_56::CompactDecimalFormat::CompactDecimalFormat
_TEXT	ENDS
PUBLIC	??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z	; icu_56::CompactDecimalFormat::CompactDecimalFormat
EXTRN	??1DecimalFormat@icu_56@@UAE@XZ:PROC		; icu_56::DecimalFormat::~DecimalFormat
EXTRN	?clone@PluralRules@icu_56@@QBEPAV12@XZ:PROC	; icu_56::PluralRules::clone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z PROC	; icu_56::CompactDecimalFormat::CompactDecimalFormat, COMDAT
; _this$ = ecx
; Line 174
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DecimalFormat@icu_56@@QAE@ABV01@@Z	; icu_56::DecimalFormat::DecimalFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompactDecimalFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	mov	DWORD PTR [eax+388], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+392]
	mov	DWORD PTR [eax+392], edx
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	call	?clone@PluralRules@icu_56@@QBEPAV12@XZ	; icu_56::PluralRules::clone
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+396], eax
; Line 175
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DecimalFormat@icu_56@@UAE@XZ		; icu_56::DecimalFormat::~DecimalFormat
__ehhandler$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::CompactDecimalFormat::CompactDecimalFormat
PUBLIC	?orphan@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAEPAVPluralRules@2@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::orphan
PUBLIC	??D?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEAAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator*
PUBLIC	?getAlias@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QBEPAVPluralRules@2@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::getAlias
PUBLIC	??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
PUBLIC	??0?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z ; icu_56::LocalPointer<icu_56::PluralRules>::LocalPointer<icu_56::PluralRules>
PUBLIC	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
PUBLIC	??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z ; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>
PUBLIC	?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ; icu_56::CompactDecimalFormat::createInstance
EXTRN	?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z:PROC ; icu_56::DecimalFormat::setSignificantDigitsUsed
EXTRN	?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z:PROC ; icu_56::DecimalFormat::setMaximumSignificantDigits
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::PluralRules::forLocale
EXTRN	?makeInstance@NumberFormat@icu_56@@KAPAV12@ABVLocale@2@W4UNumberFormatStyle@@CAAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::makeInstance
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv156 = -340						; size = 4
$T82082 = -332						; size = 4
$T82083 = -320						; size = 4
$T82084 = -308						; size = 4
$T82085 = -296						; size = 4
$T82086 = -284						; size = 4
$T82089 = -272						; size = 4
$T82090 = -260						; size = 4
_result$ = -56						; size = 4
_data$ = -44						; size = 4
_pluralRules$ = -32					; size = 4
_decfmt$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_inLocale$ = 8						; size = 4
_style$ = 12						; size = 4
_status$ = 16						; size = 4
?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::createInstance, COMDAT
; Line 179
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 180
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _inLocale$[ebp]
	push	ecx
	call	?makeInstance@NumberFormat@icu_56@@KAPAV12@ABVLocale@2@W4UNumberFormatStyle@@CAAW4UErrorCode@@@Z ; icu_56::NumberFormat::makeInstance
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z ; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 181
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@createInst
; Line 182
	mov	DWORD PTR $T82082[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
	mov	eax, DWORD PTR $T82082[ebp]
	jmp	$LN5@createInst
$LN4@createInst:
; Line 184
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inLocale$[ebp]
	push	ecx
	call	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::forLocale
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	??0?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z ; icu_56::LocalPointer<icu_56::PluralRules>::LocalPointer<icu_56::PluralRules>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 185
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@createInst
; Line 186
	mov	DWORD PTR $T82083[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
	mov	eax, DWORD PTR $T82083[ebp]
	jmp	$LN5@createInst
$LN3@createInst:
; Line 188
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _style$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inLocale$[ebp]
	push	edx
	call	?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ; icu_56::getCDFLocaleStyleData
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$[ebp], eax
; Line 189
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createInst
; Line 190
	mov	DWORD PTR $T82084[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
	mov	eax, DWORD PTR $T82084[ebp]
	jmp	$LN5@createInst
$LN2@createInst:
; Line 193
	mov	esi, esp
	push	400					; 00000190H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82086[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T82086[ebp], 0
	je	SHORT $LN7@createInst
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	?getAlias@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QBEPAVPluralRules@2@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::getAlias
	push	eax
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??D?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEAAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator*
	push	eax
	mov	ecx, DWORD PTR $T82086[ebp]
	call	??0CompactDecimalFormat@icu_56@@AAE@ABVDecimalFormat@1@PBUUHashtable@@PBNPAVPluralRules@1@@Z ; icu_56::CompactDecimalFormat::CompactDecimalFormat
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN8@createInst
$LN7@createInst:
	mov	DWORD PTR tv156[ebp], 0
$LN8@createInst:
	mov	eax, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T82085[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82085[ebp]
	mov	DWORD PTR _result$[ebp], ecx
; Line 194
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@createInst
; Line 195
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 196
	mov	DWORD PTR $T82089[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
	mov	eax, DWORD PTR $T82089[ebp]
	jmp	SHORT $LN5@createInst
$LN1@createInst:
; Line 198
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	?orphan@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAEPAVPluralRules@2@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::orphan
; Line 199
	push	3
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ; icu_56::DecimalFormat::setMaximumSignificantDigits
; Line 200
	push	1
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z ; icu_56::DecimalFormat::setSignificantDigitsUsed
; Line 201
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T82090[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	call	??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decfmt$[ebp]
	call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
	mov	eax, DWORD PTR $T82090[ebp]
$LN5@createInst:
; Line 203
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@createInst
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@createInst:
	DD	2
	DD	$LN15@createInst
$LN15@createInst:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@createInst
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@createInst
$LN13@createInst:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN12@createInst:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _decfmt$[ebp]
	jmp	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
__unwindfunclet$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _pluralRules$[ebp]
	jmp	??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
__unwindfunclet$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T82086[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createInstance@CompactDecimalFormat@icu_56@@SAPAV12@ABVLocale@2@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::createInstance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??4CompactDecimalFormat@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::CompactDecimalFormat::operator=
EXTRN	??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::DecimalFormat::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CompactDecimalFormat@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv90 = -232						; size = 4
$T82109 = -224						; size = 4
$T82110 = -212						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??4CompactDecimalFormat@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CompactDecimalFormat::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\compactdecimalformat.cpp
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _rhs$[ebp]
	je	$LN1@operator@3
; Line 208
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DecimalFormat::operator=
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	mov	DWORD PTR [eax+388], edx
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+392]
	mov	DWORD PTR [eax+392], edx
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	mov	DWORD PTR $T82110[ebp], ecx
	mov	edx, DWORD PTR $T82110[ebp]
	mov	DWORD PTR $T82109[ebp], edx
	cmp	DWORD PTR $T82109[ebp], 0
	je	SHORT $LN4@operator@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T82109[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T82109[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN5@operator@3
$LN4@operator@3:
	mov	DWORD PTR tv90[ebp], 0
$LN5@operator@3:
; Line 212
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	call	?clone@PluralRules@icu_56@@QBEPAV12@XZ	; icu_56::PluralRules::clone
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+396], eax
$LN1@operator@3:
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
; Line 215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CompactDecimalFormat@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CompactDecimalFormat::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CompactDecimalFormat@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CompactDecimalFormat@icu_56@@UAE@XZ$0
__ehfuncinfo$??1CompactDecimalFormat@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CompactDecimalFormat@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CompactDecimalFormat@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv85 = -244						; size = 4
$T82115 = -236						; size = 4
$T82116 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CompactDecimalFormat@icu_56@@UAE@XZ PROC		; icu_56::CompactDecimalFormat::~CompactDecimalFormat, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CompactDecimalFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompactDecimalFormat@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	mov	DWORD PTR $T82116[ebp], ecx
	mov	edx, DWORD PTR $T82116[ebp]
	mov	DWORD PTR $T82115[ebp], edx
	cmp	DWORD PTR $T82115[ebp], 0
	je	SHORT $LN3@CompactDec
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T82115[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T82115[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN1@CompactDec
$LN3@CompactDec:
	mov	DWORD PTR tv85[ebp], 0
$LN1@CompactDec:
; Line 219
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DecimalFormat@icu_56@@UAE@XZ		; icu_56::DecimalFormat::~DecimalFormat
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CompactDecimalFormat@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DecimalFormat@icu_56@@UAE@XZ		; icu_56::DecimalFormat::~DecimalFormat
__ehhandler$??1CompactDecimalFormat@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CompactDecimalFormat@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CompactDecimalFormat@icu_56@@UAE@XZ ENDP		; icu_56::CompactDecimalFormat::~CompactDecimalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ$0
__ehfuncinfo$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T82128 = -236						; size = 4
$T82129 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ PROC ; icu_56::CompactDecimalFormat::clone, COMDAT
; _this$ = ecx
; Line 223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 224
	mov	esi, esp
	push	400					; 00000190H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82129[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82129[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82129[ebp]
	call	??0CompactDecimalFormat@icu_56@@QAE@ABV01@@Z ; icu_56::CompactDecimalFormat::CompactDecimalFormat
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T82128[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T82128[ebp]
; Line 225
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T82129[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@CompactDecimalFormat@icu_56@@UBEPAVFormat@2@XZ ENDP ; icu_56::CompactDecimalFormat::clone
PUBLIC	?eqHelper@CompactDecimalFormat@icu_56@@ABECABV12@@Z ; icu_56::CompactDecimalFormat::eqHelper
EXTRN	??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z:PROC ; icu_56::DecimalFormat::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8CompactDecimalFormat@icu_56@@UBECABVFormat@1@@Z
_TEXT	SEGMENT
tv87 = -205						; size = 1
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8CompactDecimalFormat@icu_56@@UBECABVFormat@1@@Z PROC	; icu_56::CompactDecimalFormat::operator==, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN1@operator@4
; Line 230
	mov	al, 1
	jmp	SHORT $LN2@operator@4
$LN1@operator@4:
; Line 232
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z ; icu_56::DecimalFormat::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@4
	mov	edx, DWORD PTR _that$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?eqHelper@CompactDecimalFormat@icu_56@@ABECABV12@@Z ; icu_56::CompactDecimalFormat::eqHelper
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator@4
	mov	BYTE PTR tv87[ebp], 1
	jmp	SHORT $LN5@operator@4
$LN4@operator@4:
	mov	BYTE PTR tv87[ebp], 0
$LN5@operator@4:
	mov	al, BYTE PTR tv87[ebp]
$LN2@operator@4:
; Line 233
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8CompactDecimalFormat@icu_56@@UBECABVFormat@1@@Z ENDP	; icu_56::CompactDecimalFormat::operator==
_TEXT	ENDS
EXTRN	_uhash_equals_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eqHelper@CompactDecimalFormat@icu_56@@ABECABV12@@Z
_TEXT	SEGMENT
tv90 = -205						; size = 1
_this$ = -8						; size = 4
_that$ = 8						; size = 4
?eqHelper@CompactDecimalFormat@icu_56@@ABECABV12@@Z PROC ; icu_56::CompactDecimalFormat::eqHelper, COMDAT
; _this$ = ecx
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+388]
	push	eax
	call	_uhash_equals_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@eqHelper
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [edx+392]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+392]
	push	edx
	call	?divisors_equal@icu_56@@YACPBN0@Z	; icu_56::divisors_equal
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@eqHelper
	mov	esi, esp
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+396]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@eqHelper
	mov	BYTE PTR tv90[ebp], 1
	jmp	SHORT $LN4@eqHelper
$LN3@eqHelper:
	mov	BYTE PTR tv90[ebp], 0
$LN4@eqHelper:
	mov	al, BYTE PTR tv90[ebp]
; Line 238
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?eqHelper@CompactDecimalFormat@icu_56@@ABECABV12@@Z ENDP ; icu_56::CompactDecimalFormat::eqHelper
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 245
	mov	DWORD PTR _status$[ebp], 0
; Line 246
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 247
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@format
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN5@format:
	DD	1
	DD	$LN4@format
$LN4@format:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@format
$LN3@format:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::CompactDecimalFormat::format
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z:PROC ; icu_56::DecimalFormat::format
EXTRN	__imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@N@Z:PROC ; icu_56::PluralRules::select
EXTRN	?getDouble@DigitList@icu_56@@QBENXZ:PROC	; icu_56::DigitList::getDouble
EXTRN	??1DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::~DigitList
EXTRN	?_round@DecimalFormat@icu_56@@IBEAAVDigitList@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormat::_round
EXTRN	?set@DigitList@icu_56@@QAEXN@Z:PROC		; icu_56::DigitList::set
EXTRN	??0DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::DigitList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T82155 = -620						; size = 4
$T82156 = -608						; size = 4
_unit$ = -404						; size = 4
_variant$ = -392					; size = 64
_numberToFormat$ = -320					; size = 8
_baseIdx$ = -304					; size = 4
_roundedDouble$ = -292					; size = 8
_isNegative$ = -273					; size = 1
_rounded$ = -264					; size = 112
_orig$ = -144						; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
_status$ = 24						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 612				; 00000264H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-624]
	mov	ecx, 153				; 00000099H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 255
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@format@2
; Line 256
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN5@format@2
$LN4@format@2:
; Line 258
	lea	ecx, DWORD PTR _orig$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rounded$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 259
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _orig$[ebp]
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
; Line 261
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _isNegative$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rounded$[ebp]
	push	edx
	lea	eax, DWORD PTR _orig$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_round@DecimalFormat@icu_56@@IBEAAVDigitList@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::_round
; Line 262
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@format@2
; Line 263
	mov	eax, DWORD PTR _appendTo$[ebp]
	mov	DWORD PTR $T82155[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rounded$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _orig$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR $T82155[ebp]
	jmp	$LN5@format@2
$LN3@format@2:
; Line 265
	lea	ecx, DWORD PTR _rounded$[ebp]
	call	?getDouble@DigitList@icu_56@@QBENXZ	; icu_56::DigitList::getDouble
	fstp	QWORD PTR _roundedDouble$[ebp]
; Line 266
	movsx	eax, BYTE PTR _isNegative$[ebp]
	test	eax, eax
	je	SHORT $LN2@format@2
; Line 267
	fld	QWORD PTR _roundedDouble$[ebp]
	fchs
	fstp	QWORD PTR _roundedDouble$[ebp]
$LN2@format@2:
; Line 269
	push	1
	sub	esp, 8
	fld	QWORD PTR _roundedDouble$[ebp]
	fstp	QWORD PTR [esp]
	call	?computeLog10@icu_56@@YAHNC@Z		; icu_56::computeLog10
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _baseIdx$[ebp], eax
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	mov	edx, DWORD PTR _baseIdx$[ebp]
	fld	QWORD PTR _roundedDouble$[ebp]
	fdiv	QWORD PTR [ecx+edx*8]
	fstp	QWORD PTR _numberToFormat$[ebp]
; Line 271
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	lea	eax, DWORD PTR _variant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+396]
	call	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@N@Z ; icu_56::PluralRules::select
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 272
	movsx	eax, BYTE PTR _isNegative$[ebp]
	test	eax, eax
	je	SHORT $LN1@format@2
; Line 273
	fld	QWORD PTR _numberToFormat$[ebp]
	fchs
	fstp	QWORD PTR _numberToFormat$[ebp]
$LN1@format@2:
; Line 275
	mov	eax, DWORD PTR _baseIdx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _variant$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+388]
	push	eax
	call	?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z ; icu_56::getCDFUnitFallback
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _unit$[ebp], eax
; Line 276
	mov	esi, esp
	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 277
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _numberToFormat$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ; icu_56::DecimalFormat::format
; Line 278
	mov	eax, DWORD PTR _unit$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 279
	mov	eax, DWORD PTR _appendTo$[ebp]
	mov	DWORD PTR $T82156[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rounded$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _orig$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR $T82156[ebp]
$LN5@format@2:
; Line 280
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@format@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 624				; 00000270H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN16@format@2:
	DD	4
	DD	$LN15@format@2
$LN15@format@2:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN10@format@2
	DD	-264					; fffffef8H
	DD	112					; 00000070H
	DD	$LN11@format@2
	DD	-273					; fffffeefH
	DD	1
	DD	$LN12@format@2
	DD	-392					; fffffe78H
	DD	64					; 00000040H
	DD	$LN13@format@2
$LN13@format@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN12@format@2:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN11@format@2:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN10@format@2:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _orig$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _rounded$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-628]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
_appendTo$ = 16						; size = 4
___formal$ = 20						; size = 4
_status$ = 24						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 288
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 289
	mov	eax, DWORD PTR _appendTo$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	fild	DWORD PTR _number$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 306
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	fild	DWORD PTR _number$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
_appendTo$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 315
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 316
	mov	eax, DWORD PTR _appendTo$[ebp]
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	fild	QWORD PTR _number$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 325
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
_status$ = 24						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	fild	QWORD PTR _number$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
_appendTo$ = 16						; size = 4
___formal$ = 20						; size = 4
_status$ = 24						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 342
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 343
	mov	eax, DWORD PTR _appendTo$[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
_appendTo$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 353
	mov	eax, DWORD PTR _appendTo$[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
_appendTo$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 361
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 362
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 363
	mov	eax, DWORD PTR _appendTo$[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
_appendTo$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::format, COMDAT
; _this$ = ecx
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 371
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 372
	mov	eax, DWORD PTR _appendTo$[ebp]
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@CompactDecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z PROC ; icu_56::CompactDecimalFormat::parse, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ENDP ; icu_56::CompactDecimalFormat::parse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
_status$ = 16						; size = 4
?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z PROC ; icu_56::CompactDecimalFormat::parse, COMDAT
; _this$ = ecx
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 387
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parse@CompactDecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CompactDecimalFormat::parse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parseCurrency@CompactDecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?parseCurrency@CompactDecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z PROC ; icu_56::CompactDecimalFormat::parseCurrency, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	xor	eax, eax
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?parseCurrency@CompactDecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z ENDP ; icu_56::CompactDecimalFormat::parseCurrency
_TEXT	ENDS
PUBLIC	?Init@CDFLocaleStyleData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::CDFLocaleStyleData::Init
EXTRN	_uhash_setValueDeleter_56:PROC
EXTRN	_uhash_setKeyDeleter_56:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_uhash_open_56:PROC
EXTRN	_uhash_hashChars_56:PROC
EXTRN	_uhash_compareChars_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init@CDFLocaleStyleData@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?Init@CDFLocaleStyleData@icu_56@@QAEXAAW4UErrorCode@@@Z PROC ; icu_56::CDFLocaleStyleData::Init, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN2@Init
; Line 399
	jmp	SHORT $LN3@Init
$LN2@Init:
; Line 401
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareChars_56
	push	OFFSET _uhash_hashChars_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+120], eax
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@Init
; Line 403
	jmp	SHORT $LN3@Init
$LN1@Init:
; Line 405
	push	OFFSET _uprv_free_56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_uhash_setKeyDeleter_56
	add	esp, 8
; Line 406
	push	OFFSET _deleteCDFUnits
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_uhash_setValueDeleter_56
	add	esp, 8
$LN3@Init:
; Line 407
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CDFLocaleStyleData@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP ; icu_56::CDFLocaleStyleData::Init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _deleteCDFUnits
_TEXT	SEGMENT
tv68 = -220						; size = 4
$T82202 = -212						; size = 4
$T82203 = -200						; size = 4
_ptr$ = 8						; size = 4
_deleteCDFUnits PROC					; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR $T82203[ebp], eax
	mov	ecx, DWORD PTR $T82203[ebp]
	mov	DWORD PTR $T82202[ebp], ecx
	cmp	DWORD PTR $T82202[ebp], 0
	je	SHORT $LN3@deleteCDFU
	push	3
	mov	ecx, DWORD PTR $T82202[ebp]
	call	??_ECDFUnit@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@deleteCDFU
$LN3@deleteCDFU:
	mov	DWORD PTR tv68[ebp], 0
$LN1@deleteCDFU:
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_deleteCDFUnits ENDP
_TEXT	ENDS
PUBLIC	?setToBogus@CDFLocaleStyleData@icu_56@@QAEXXZ	; icu_56::CDFLocaleStyleData::setToBogus
PUBLIC	??1CDFLocaleStyleData@icu_56@@QAE@XZ		; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CDFLocaleStyleData@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDFLocaleStyleData@icu_56@@QAE@XZ PROC		; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@CDFLocaleStyleData@icu_56@@QAEXXZ ; icu_56::CDFLocaleStyleData::setToBogus
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDFLocaleStyleData@icu_56@@QAE@XZ ENDP		; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData
_TEXT	ENDS
EXTRN	_uhash_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToBogus@CDFLocaleStyleData@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToBogus@CDFLocaleStyleData@icu_56@@QAEXXZ PROC	; icu_56::CDFLocaleStyleData::setToBogus, COMDAT
; _this$ = ecx
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 414
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN2@setToBogus
; Line 415
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_uhash_close_56
	add	esp, 4
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
$LN2@setToBogus:
; Line 418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToBogus@CDFLocaleStyleData@icu_56@@QAEXXZ ENDP	; icu_56::CDFLocaleStyleData::setToBogus
_TEXT	ENDS
PUBLIC	?Init@CDFLocaleData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::CDFLocaleData::Init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init@CDFLocaleData@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?Init@CDFLocaleData@icu_56@@QAEXAAW4UErrorCode@@@Z PROC	; icu_56::CDFLocaleData::Init, COMDAT
; _this$ = ecx
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 421
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CDFLocaleStyleData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::CDFLocaleStyleData::Init
; Line 422
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@Init@2
; Line 423
	jmp	SHORT $LN2@Init@2
$LN1@Init@2:
; Line 425
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?Init@CDFLocaleStyleData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::CDFLocaleStyleData::Init
$LN2@Init@2:
; Line 426
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CDFLocaleData@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP	; icu_56::CDFLocaleData::Init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?divisors_equal@icu_56@@YACPBN0@Z
_TEXT	SEGMENT
_i$74320 = -8						; size = 4
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
?divisors_equal@icu_56@@YACPBN0@Z PROC			; icu_56::divisors_equal, COMDAT
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 430
	mov	DWORD PTR _i$74320[ebp], 0
	jmp	SHORT $LN4@divisors_e
$LN3@divisors_e:
	mov	eax, DWORD PTR _i$74320[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74320[ebp], eax
$LN4@divisors_e:
	cmp	DWORD PTR _i$74320[ebp], 15		; 0000000fH
	jge	SHORT $LN2@divisors_e
; Line 431
	mov	eax, DWORD PTR _i$74320[ebp]
	mov	ecx, DWORD PTR _lhs$[ebp]
	mov	edx, DWORD PTR _i$74320[ebp]
	mov	esi, DWORD PTR _rhs$[ebp]
	fld	QWORD PTR [ecx+eax*8]
	fld	QWORD PTR [esi+edx*8]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@divisors_e
; Line 432
	xor	al, al
	jmp	SHORT $LN5@divisors_e
$LN1@divisors_e:
; Line 434
	jmp	SHORT $LN3@divisors_e
$LN2@divisors_e:
; Line 435
	mov	al, 1
$LN5@divisors_e:
; Line 436
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?divisors_equal@icu_56@@YACPBN0@Z ENDP			; icu_56::divisors_equal
_TEXT	ENDS
PUBLIC	??_GCDFLocaleData@icu_56@@QAEPAXI@Z		; icu_56::CDFLocaleData::`scalar deleting destructor'
EXTRN	_uhash_put_56:PROC
EXTRN	_uprv_strdup_56:PROC
EXTRN	_uhash_get_56:PROC
EXTRN	_ucln_i18n_registerCleanup_56:PROC
EXTRN	__imp_??1Mutex@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:PROC
EXTRN	__imp_?getName@Locale@icu_56@@QBEPBDXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv149 = -316						; size = 4
$T82216 = -308						; size = 4
$T82217 = -296						; size = 4
$T82218 = -284						; size = 4
$T82221 = -272						; size = 4
_temp$74342 = -68					; size = 4
_lock$74341 = -56					; size = 4
_lock$74333 = -44					; size = 4
_key$ = -32						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_inLocale$ = 8						; size = 4
_style$ = 12						; size = 4
_status$ = 16						; size = 4
?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z PROC ; icu_56::getCDFLocaleStyleData, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 445
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@getCDFLoca
; Line 446
	xor	eax, eax
	jmp	$LN10@getCDFLoca
$LN9@getCDFLoca:
; Line 448
	mov	DWORD PTR _result$[ebp], 0
; Line 449
	mov	esi, esp
	mov	ecx, DWORD PTR _inLocale$[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _key$[ebp], eax
; Line 451
	mov	esi, esp
	push	OFFSET _gCompactDecimalMetaLock
	lea	ecx, DWORD PTR _lock$74333[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 452
	cmp	DWORD PTR _gCompactDecimalData, 0
	jne	$LN8@getCDFLoca
; Line 453
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareChars_56
	push	OFFSET _uhash_hashChars_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _gCompactDecimalData, eax
; Line 454
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@getCDFLoca
; Line 455
	mov	DWORD PTR $T82216[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$74333[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T82216[ebp]
	jmp	$LN10@getCDFLoca
$LN7@getCDFLoca:
; Line 457
	push	OFFSET _uprv_free_56
	mov	eax, DWORD PTR _gCompactDecimalData
	push	eax
	call	_uhash_setKeyDeleter_56
	add	esp, 8
; Line 458
	push	OFFSET _deleteCDFLocaleData
	mov	eax, DWORD PTR _gCompactDecimalData
	push	eax
	call	_uhash_setValueDeleter_56
	add	esp, 8
; Line 459
	push	OFFSET _cdf_cleanup
	push	26					; 0000001aH
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
; Line 460
	jmp	SHORT $LN6@getCDFLoca
$LN8@getCDFLoca:
; Line 461
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gCompactDecimalData
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
$LN6@getCDFLoca:
; Line 463
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$74333[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 464
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN5@getCDFLoca
; Line 465
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _style$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	?extractDataByStyleEnum@icu_56@@YAPBVCDFLocaleStyleData@1@ABUCDFLocaleData@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ; icu_56::extractDataByStyleEnum
	add	esp, 12					; 0000000cH
	jmp	$LN10@getCDFLoca
$LN5@getCDFLoca:
; Line 468
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inLocale$[ebp]
	push	ecx
	call	?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::loadCDFLocaleData
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 469
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getCDFLoca
; Line 470
	xor	eax, eax
	jmp	$LN10@getCDFLoca
$LN4@getCDFLoca:
; Line 474
	mov	esi, esp
	push	OFFSET _gCompactDecimalMetaLock
	lea	ecx, DWORD PTR _lock$74341[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 475
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gCompactDecimalData
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _temp$74342[ebp], eax
; Line 476
	cmp	DWORD PTR _temp$74342[ebp], 0
	je	SHORT $LN3@getCDFLoca
; Line 477
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T82218[ebp], eax
	mov	ecx, DWORD PTR $T82218[ebp]
	mov	DWORD PTR $T82217[ebp], ecx
	cmp	DWORD PTR $T82217[ebp], 0
	je	SHORT $LN12@getCDFLoca
	push	1
	mov	ecx, DWORD PTR $T82217[ebp]
	call	??_GCDFLocaleData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN13@getCDFLoca
$LN12@getCDFLoca:
	mov	DWORD PTR tv149[ebp], 0
$LN13@getCDFLoca:
; Line 478
	mov	eax, DWORD PTR _temp$74342[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 479
	jmp	SHORT $LN2@getCDFLoca
$LN3@getCDFLoca:
; Line 480
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_uprv_strdup_56
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _gCompactDecimalData
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 481
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getCDFLoca
; Line 482
	mov	DWORD PTR $T82221[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$74341[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T82221[ebp]
	jmp	SHORT $LN10@getCDFLoca
$LN2@getCDFLoca:
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$74341[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _style$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	?extractDataByStyleEnum@icu_56@@YAPBVCDFLocaleStyleData@1@ABUCDFLocaleData@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ; icu_56::extractDataByStyleEnum
	add	esp, 12					; 0000000cH
$LN10@getCDFLoca:
; Line 487
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@getCDFLoca
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@getCDFLoca:
	DD	2
	DD	$LN19@getCDFLoca
$LN19@getCDFLoca:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN16@getCDFLoca
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN17@getCDFLoca
$LN17@getCDFLoca:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN16@getCDFLoca:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$74333[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$74341[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCDFLocaleStyleData@icu_56@@YAPBVCDFLocaleStyleData@1@ABVLocale@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ENDP ; icu_56::getCDFLocaleStyleData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _cdf_cleanup
_TEXT	SEGMENT
_cdf_cleanup PROC					; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 125
	cmp	DWORD PTR _gCompactDecimalData, 0
	je	SHORT $LN1@cdf_cleanu
; Line 126
	mov	eax, DWORD PTR _gCompactDecimalData
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 127
	mov	DWORD PTR _gCompactDecimalData, 0
$LN1@cdf_cleanu:
; Line 129
	mov	al, 1
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cdf_cleanup ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _deleteCDFLocaleData
_TEXT	SEGMENT
tv68 = -220						; size = 4
$T82238 = -212						; size = 4
$T82239 = -200						; size = 4
_ptr$ = 8						; size = 4
_deleteCDFLocaleData PROC				; COMDAT
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 137
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR $T82239[ebp], eax
	mov	ecx, DWORD PTR $T82239[ebp]
	mov	DWORD PTR $T82238[ebp], ecx
	cmp	DWORD PTR $T82238[ebp], 0
	je	SHORT $LN3@deleteCDFL
	push	1
	mov	ecx, DWORD PTR $T82238[ebp]
	call	??_GCDFLocaleData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@deleteCDFL
$LN3@deleteCDFL:
	mov	DWORD PTR tv68[ebp], 0
$LN1@deleteCDFL:
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_deleteCDFLocaleData ENDP
_TEXT	ENDS
PUBLIC	??1CDFLocaleData@icu_56@@QAE@XZ			; icu_56::CDFLocaleData::~CDFLocaleData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCDFLocaleData@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCDFLocaleData@icu_56@@QAEPAXI@Z PROC		; icu_56::CDFLocaleData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDFLocaleData@icu_56@@QAE@XZ		; icu_56::CDFLocaleData::~CDFLocaleData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDFLocaleData@icu_56@@QAEPAXI@Z ENDP		; icu_56::CDFLocaleData::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDFLocaleData@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDFLocaleData@icu_56@@QAE@XZ$0
__ehfuncinfo$??1CDFLocaleData@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDFLocaleData@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CDFLocaleData@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CDFLocaleData@icu_56@@QAE@XZ PROC			; icu_56::CDFLocaleData::~CDFLocaleData, COMDAT
; _this$ = ecx
; Line 115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDFLocaleData@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1CDFLocaleStyleData@icu_56@@QAE@XZ	; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDFLocaleStyleData@icu_56@@QAE@XZ	; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDFLocaleData@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDFLocaleStyleData@icu_56@@QAE@XZ	; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData
__ehhandler$??1CDFLocaleData@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDFLocaleData@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDFLocaleData@icu_56@@QAE@XZ ENDP			; icu_56::CDFLocaleData::~CDFLocaleData
PUBLIC	?isBogus@CDFLocaleStyleData@icu_56@@QBECXZ	; icu_56::CDFLocaleStyleData::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractDataByStyleEnum@icu_56@@YAPBVCDFLocaleStyleData@1@ABUCDFLocaleData@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv64 = -196						; size = 4
_data$ = 8						; size = 4
_style$ = 12						; size = 4
_status$ = 16						; size = 4
?extractDataByStyleEnum@icu_56@@YAPBVCDFLocaleStyleData@1@ABUCDFLocaleData@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z PROC ; icu_56::extractDataByStyleEnum, COMDAT
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 490
	mov	eax, DWORD PTR _style$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN4@extractDat
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN3@extractDat
	jmp	SHORT $LN1@extractDat
$LN4@extractDat:
; Line 492
	mov	eax, DWORD PTR _data$[ebp]
	jmp	SHORT $LN7@extractDat
$LN3@extractDat:
; Line 494
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 128				; 00000080H
	call	?isBogus@CDFLocaleStyleData@icu_56@@QBECXZ ; icu_56::CDFLocaleStyleData::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@extractDat
; Line 495
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 128				; 00000080H
	jmp	SHORT $LN7@extractDat
$LN2@extractDat:
; Line 497
	mov	eax, DWORD PTR _data$[ebp]
	jmp	SHORT $LN7@extractDat
$LN1@extractDat:
; Line 499
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 500
	xor	eax, eax
$LN7@extractDat:
; Line 502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?extractDataByStyleEnum@icu_56@@YAPBVCDFLocaleStyleData@1@ABUCDFLocaleData@1@W4UNumberCompactStyle@@AAW4UErrorCode@@@Z ENDP ; icu_56::extractDataByStyleEnum
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isBogus@CDFLocaleStyleData@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@CDFLocaleStyleData@icu_56@@QBECXZ PROC		; icu_56::CDFLocaleStyleData::isBogus, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	sete	al
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@CDFLocaleStyleData@icu_56@@QBECXZ ENDP		; icu_56::CDFLocaleStyleData::isBogus
_TEXT	ENDS
PUBLIC	??0CDFLocaleData@icu_56@@QAE@XZ			; icu_56::CDFLocaleData::CDFLocaleData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv130 = -292						; size = 4
tv86 = -292						; size = 4
tv75 = -292						; size = 4
$T82260 = -284						; size = 4
$T82261 = -272						; size = 4
$T82264 = -260						; size = 4
$T82265 = -248						; size = 4
$T82268 = -236						; size = 4
$T82269 = -224						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_inLocale$ = 8						; size = 4
_status$ = 12						; size = 4
?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z PROC ; icu_56::loadCDFLocaleData, COMDAT
; Line 506
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 507
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@loadCDFLoc
; Line 508
	xor	eax, eax
	jmp	$LN5@loadCDFLoc
$LN4@loadCDFLoc:
; Line 510
	mov	esi, esp
	push	256					; 00000100H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82261[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82261[ebp], 0
	je	SHORT $LN7@loadCDFLoc
	mov	ecx, DWORD PTR $T82261[ebp]
	call	??0CDFLocaleData@icu_56@@QAE@XZ		; icu_56::CDFLocaleData::CDFLocaleData
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN8@loadCDFLoc
$LN7@loadCDFLoc:
	mov	DWORD PTR tv75[ebp], 0
$LN8@loadCDFLoc:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T82260[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T82260[ebp]
	mov	DWORD PTR _result$[ebp], ecx
; Line 511
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN3@loadCDFLoc
; Line 512
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 513
	xor	eax, eax
	jmp	$LN5@loadCDFLoc
$LN3@loadCDFLoc:
; Line 515
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?Init@CDFLocaleData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::CDFLocaleData::Init
; Line 516
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@loadCDFLoc
; Line 517
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T82265[ebp], eax
	mov	ecx, DWORD PTR $T82265[ebp]
	mov	DWORD PTR $T82264[ebp], ecx
	cmp	DWORD PTR $T82264[ebp], 0
	je	SHORT $LN9@loadCDFLoc
	push	1
	mov	ecx, DWORD PTR $T82264[ebp]
	call	??_GCDFLocaleData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN10@loadCDFLoc
$LN9@loadCDFLoc:
	mov	DWORD PTR tv86[ebp], 0
$LN10@loadCDFLoc:
; Line 518
	xor	eax, eax
	jmp	SHORT $LN5@loadCDFLoc
$LN2@loadCDFLoc:
; Line 521
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inLocale$[ebp]
	push	edx
	call	?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z ; icu_56::initCDFLocaleData
	add	esp, 12					; 0000000cH
; Line 522
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@loadCDFLoc
; Line 523
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T82269[ebp], eax
	mov	ecx, DWORD PTR $T82269[ebp]
	mov	DWORD PTR $T82268[ebp], ecx
	cmp	DWORD PTR $T82268[ebp], 0
	je	SHORT $LN11@loadCDFLoc
	push	1
	mov	ecx, DWORD PTR $T82268[ebp]
	call	??_GCDFLocaleData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN12@loadCDFLoc
$LN11@loadCDFLoc:
	mov	DWORD PTR tv130[ebp], 0
$LN12@loadCDFLoc:
; Line 524
	xor	eax, eax
	jmp	SHORT $LN5@loadCDFLoc
$LN1@loadCDFLoc:
; Line 526
	mov	eax, DWORD PTR _result$[ebp]
$LN5@loadCDFLoc:
; Line 527
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T82261[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?loadCDFLocaleData@icu_56@@YAPAUCDFLocaleData@1@ABVLocale@1@AAW4UErrorCode@@@Z ENDP ; icu_56::loadCDFLocaleData
PUBLIC	??0CDFLocaleStyleData@icu_56@@QAE@XZ		; icu_56::CDFLocaleStyleData::CDFLocaleStyleData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDFLocaleData@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDFLocaleData@icu_56@@QAE@XZ$0
__ehfuncinfo$??0CDFLocaleData@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDFLocaleData@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CDFLocaleData@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CDFLocaleData@icu_56@@QAE@XZ PROC			; icu_56::CDFLocaleData::CDFLocaleData, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDFLocaleData@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDFLocaleStyleData@icu_56@@QAE@XZ	; icu_56::CDFLocaleStyleData::CDFLocaleStyleData
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0CDFLocaleStyleData@icu_56@@QAE@XZ	; icu_56::CDFLocaleStyleData::CDFLocaleStyleData
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDFLocaleData@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDFLocaleStyleData@icu_56@@QAE@XZ	; icu_56::CDFLocaleStyleData::~CDFLocaleStyleData
__ehhandler$??0CDFLocaleData@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDFLocaleData@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDFLocaleData@icu_56@@QAE@XZ ENDP			; icu_56::CDFLocaleData::CDFLocaleData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CDFLocaleStyleData@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CDFLocaleStyleData@icu_56@@QAE@XZ PROC		; icu_56::CDFLocaleStyleData::CDFLocaleStyleData, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDFLocaleStyleData@icu_56@@QAE@XZ ENDP		; icu_56::CDFLocaleStyleData::CDFLocaleStyleData
_TEXT	ENDS
PUBLIC	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ	; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
PUBLIC	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
PUBLIC	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
PUBLIC	??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
PUBLIC	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
PUBLIC	??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>
EXTRN	_strcmp:PROC
EXTRN	_ures_close_56:PROC
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	?getName@NumberingSystem@icu_56@@QBEPBDXZ:PROC	; icu_56::NumberingSystem::getName
EXTRN	?createInstance@NumberingSystem@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberingSystem::createInstance
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_latnResource$74487 = -116				; size = 4
_localResource$74484 = -104				; size = 4
_longData$ = -92					; size = 4
_shortData$ = -80					; size = 4
_longDataFillIn$ = -68					; size = 4
_shortDataFillIn$ = -56					; size = 4
_rb$ = -44						; size = 4
_numberingSystemName$ = -32				; size = 4
_ns$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_inLocale$ = 8						; size = 4
_result$ = 12						; size = 4
_status$ = 16						; size = 4
?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z PROC ; icu_56::initCDFLocaleData, COMDAT
; Line 537
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 538
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inLocale$[ebp]
	push	ecx
	call	?createInstance@NumberingSystem@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::NumberingSystem::createInstance
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _ns$[ebp]
	call	??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 539
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@initCDFLoc
; Line 540
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ns$[ebp]
	call	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
	jmp	$LN11@initCDFLoc
$LN10@initCDFLoc:
; Line 542
	lea	ecx, DWORD PTR _ns$[ebp]
	call	??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
	mov	ecx, eax
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	mov	DWORD PTR _numberingSystemName$[ebp], eax
; Line 543
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _inLocale$[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$[ebp], eax
; Line 544
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _gNumberElementsTag
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 545
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@initCDFLoc
; Line 546
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 547
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ns$[ebp]
	call	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
	jmp	$LN11@initCDFLoc
$LN9@initCDFLoc:
; Line 549
	mov	DWORD PTR _shortDataFillIn$[ebp], 0
; Line 550
	mov	DWORD PTR _longDataFillIn$[ebp], 0
; Line 551
	mov	DWORD PTR _shortData$[ebp], 0
; Line 552
	mov	DWORD PTR _longData$[ebp], 0
; Line 554
	push	OFFSET _gLatnTag
	mov	eax, DWORD PTR _numberingSystemName$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@initCDFLoc
; Line 556
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	0
	mov	ecx, DWORD PTR _numberingSystemName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetByKeyWithFallback
	add	esp, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _localResource$74484[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 558
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _shortDataFillIn$[ebp]
	push	ecx
	push	OFFSET _gPatternsShort
	lea	ecx, DWORD PTR _localResource$74484[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetDecimalFallback
	add	esp, 20					; 00000014H
	mov	DWORD PTR _shortData$[ebp], eax
; Line 560
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _longDataFillIn$[ebp]
	push	ecx
	push	OFFSET _gPatternsLong
	lea	ecx, DWORD PTR _localResource$74484[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetDecimalFallback
	add	esp, 20					; 00000014H
	mov	DWORD PTR _longData$[ebp], eax
; Line 561
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localResource$74484[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
$LN8@initCDFLoc:
; Line 562
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@initCDFLoc
; Line 563
	mov	eax, DWORD PTR _shortDataFillIn$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 564
	mov	eax, DWORD PTR _longDataFillIn$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 565
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 566
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ns$[ebp]
	call	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
	jmp	$LN11@initCDFLoc
$LN7@initCDFLoc:
; Line 571
	cmp	DWORD PTR _shortData$[ebp], 0
	jne	$LN6@initCDFLoc
; Line 572
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	push	OFFSET _gLatnTag
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	call	?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetByKeyWithFallback
	add	esp, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _latnResource$74487[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 573
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _shortDataFillIn$[ebp]
	push	ecx
	push	OFFSET _gPatternsShort
	lea	ecx, DWORD PTR _latnResource$74487[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetDecimalFallback
	add	esp, 20					; 00000014H
	mov	DWORD PTR _shortData$[ebp], eax
; Line 574
	cmp	DWORD PTR _longData$[ebp], 0
	jne	SHORT $LN5@initCDFLoc
; Line 575
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _longDataFillIn$[ebp]
	push	ecx
	push	OFFSET _gPatternsLong
	lea	ecx, DWORD PTR _latnResource$74487[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetDecimalFallback
	add	esp, 20					; 00000014H
	mov	DWORD PTR _longData$[ebp], eax
; Line 576
	cmp	DWORD PTR _longData$[ebp], 0
	je	SHORT $LN5@initCDFLoc
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _longData$[ebp]
	push	ecx
	call	?isRoot@icu_56@@YACPBUUResourceBundle@@AAW4UErrorCode@@@Z ; icu_56::isRoot
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@initCDFLoc
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _shortData$[ebp]
	push	ecx
	call	?isRoot@icu_56@@YACPBUUResourceBundle@@AAW4UErrorCode@@@Z ; icu_56::isRoot
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN5@initCDFLoc
; Line 577
	mov	DWORD PTR _longData$[ebp], 0
$LN5@initCDFLoc:
; Line 580
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _latnResource$74487[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
$LN6@initCDFLoc:
; Line 581
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _shortData$[ebp]
	push	edx
	call	?initCDFLocaleStyleData@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z ; icu_56::initCDFLocaleStyleData
	add	esp, 12					; 0000000cH
; Line 582
	mov	eax, DWORD PTR _shortDataFillIn$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 583
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@initCDFLoc
; Line 584
	mov	eax, DWORD PTR _longDataFillIn$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 585
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN3@initCDFLoc:
; Line 588
	cmp	DWORD PTR _longData$[ebp], 0
	jne	SHORT $LN2@initCDFLoc
; Line 589
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 128				; 00000080H
	call	?setToBogus@CDFLocaleStyleData@icu_56@@QAEXXZ ; icu_56::CDFLocaleStyleData::setToBogus
; Line 590
	jmp	SHORT $LN1@initCDFLoc
$LN2@initCDFLoc:
; Line 591
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	mov	edx, DWORD PTR _longData$[ebp]
	push	edx
	call	?initCDFLocaleStyleData@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z ; icu_56::initCDFLocaleStyleData
	add	esp, 12					; 0000000cH
$LN1@initCDFLoc:
; Line 593
	mov	eax, DWORD PTR _longDataFillIn$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 594
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ns$[ebp]
	call	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
$LN11@initCDFLoc:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@initCDFLoc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@initCDFLoc:
	DD	5
	DD	$LN22@initCDFLoc
$LN22@initCDFLoc:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN16@initCDFLoc
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN17@initCDFLoc
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN18@initCDFLoc
	DD	-104					; ffffff98H
	DD	4
	DD	$LN19@initCDFLoc
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN20@initCDFLoc
$LN20@initCDFLoc:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN19@initCDFLoc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN18@initCDFLoc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	0
$LN17@initCDFLoc:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	0
$LN16@initCDFLoc:
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _ns$[ebp]
	jmp	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
__unwindfunclet$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _localResource$74484[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__unwindfunclet$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _latnResource$74487[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__ehhandler$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initCDFLocaleData@icu_56@@YAXABVLocale@1@PAUCDFLocaleData@1@AAW4UErrorCode@@@Z ENDP ; icu_56::initCDFLocaleData
PUBLIC	??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z PROC ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\ures.h
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ENDP ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1LocalUResourceBundlePointer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LocalUResourceBundlePointer@icu_56@@QAE@XZ PROC	; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer, COMDAT
; _this$ = ecx
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ures_close_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ENDP	; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_second$ = -20						; size = 4
_first$ = -8						; size = 4
_numberSystemResource$ = 8				; size = 4
_style$ = 12						; size = 4
_fillIn$ = 16						; size = 4
_flags$ = 20						; size = 4
_status$ = 24						; size = 4
?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z PROC ; icu_56::tryGetDecimalFallback, COMDAT
; File d:\mozilla\intl\icu\source\i18n\compactdecimalformat.cpp
; Line 602
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 603
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fillIn$[ebp]
	push	edx
	mov	eax, DWORD PTR _style$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numberSystemResource$[ebp]
	push	ecx
	call	?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetByKeyWithFallback
	add	esp, 20					; 00000014H
	mov	DWORD PTR _first$[ebp], eax
; Line 604
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fillIn$[ebp]
	push	edx
	push	OFFSET _gDecimalFormatTag
	mov	eax, DWORD PTR _first$[ebp]
	push	eax
	call	?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ; icu_56::tryGetByKeyWithFallback
	add	esp, 20					; 00000014H
	mov	DWORD PTR _second$[ebp], eax
; Line 605
	cmp	DWORD PTR _fillIn$[ebp], 0
	jne	SHORT $LN1@tryGetDeci
; Line 606
	mov	eax, DWORD PTR _first$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN1@tryGetDeci:
; Line 608
	mov	eax, DWORD PTR _second$[ebp]
; Line 609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?tryGetDecimalFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ENDP ; icu_56::tryGetDecimalFallback
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv93 = -244						; size = 4
_bRoot$74526 = -41					; size = 1
_ownedByUs$ = -32					; size = 4
_result$ = -20						; size = 4
_must$ = -5						; size = 1
_rb$ = 8						; size = 4
_path$ = 12						; size = 4
_fillIn$ = 16						; size = 4
_flags$ = 20						; size = 4
_status$ = 24						; size = 4
?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z PROC ; icu_56::tryGetByKeyWithFallback, COMDAT
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 649
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@tryGetByKe
; Line 650
	xor	eax, eax
	jmp	$LN16@tryGetByKe
$LN15@tryGetByKe:
; Line 652
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 1
	mov	BYTE PTR _must$[ebp], al
; Line 653
	cmp	DWORD PTR _rb$[ebp], 0
	jne	SHORT $LN14@tryGetByKe
; Line 654
	movsx	eax, BYTE PTR _must$[ebp]
	test	eax, eax
	je	SHORT $LN13@tryGetByKe
; Line 655
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN13@tryGetByKe:
; Line 657
	xor	eax, eax
	jmp	$LN16@tryGetByKe
$LN14@tryGetByKe:
; Line 659
	mov	DWORD PTR _result$[ebp], 0
; Line 660
	mov	DWORD PTR _ownedByUs$[ebp], 0
; Line 661
	cmp	DWORD PTR _fillIn$[ebp], 0
	jne	SHORT $LN12@tryGetByKe
; Line 662
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ownedByUs$[ebp], eax
; Line 663
	mov	eax, DWORD PTR _ownedByUs$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 664
	jmp	SHORT $LN11@tryGetByKe
$LN12@tryGetByKe:
; Line 665
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _fillIn$[ebp]
	mov	DWORD PTR [edx], eax
; Line 666
	mov	eax, DWORD PTR _fillIn$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
$LN11@tryGetByKe:
; Line 668
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@tryGetByKe
; Line 669
	mov	eax, DWORD PTR _ownedByUs$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 670
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN9@tryGetByKe
	movsx	eax, BYTE PTR _must$[ebp]
	test	eax, eax
	jne	SHORT $LN9@tryGetByKe
; Line 671
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN9@tryGetByKe:
; Line 673
	xor	eax, eax
	jmp	$LN16@tryGetByKe
$LN10@tryGetByKe:
; Line 675
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, -2					; fffffffeH
	mov	DWORD PTR _flags$[ebp], eax
; Line 676
	mov	eax, DWORD PTR _flags$[ebp]
	mov	DWORD PTR tv93[ebp], eax
	cmp	DWORD PTR tv93[ebp], 0
	je	SHORT $LN2@tryGetByKe
	cmp	DWORD PTR tv93[ebp], 2
	je	SHORT $LN6@tryGetByKe
	jmp	SHORT $LN1@tryGetByKe
$LN6@tryGetByKe:
; Line 679
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	?isRoot@icu_56@@YACPBUUResourceBundle@@AAW4UErrorCode@@@Z ; icu_56::isRoot
	add	esp, 8
	mov	BYTE PTR _bRoot$74526[ebp], al
; Line 680
	movsx	eax, BYTE PTR _bRoot$74526[ebp]
	test	eax, eax
	jne	SHORT $LN4@tryGetByKe
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@tryGetByKe
$LN4@tryGetByKe:
; Line 681
	mov	eax, DWORD PTR _ownedByUs$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 682
	movsx	eax, BYTE PTR _must$[ebp]
	test	eax, eax
	je	SHORT $LN3@tryGetByKe
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@tryGetByKe
; Line 683
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN3@tryGetByKe:
; Line 685
	xor	eax, eax
	jmp	SHORT $LN16@tryGetByKe
$LN5@tryGetByKe:
; Line 687
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN16@tryGetByKe
$LN2@tryGetByKe:
; Line 690
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN16@tryGetByKe
$LN1@tryGetByKe:
; Line 692
	mov	eax, DWORD PTR _ownedByUs$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 693
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 694
	xor	eax, eax
$LN16@tryGetByKe:
; Line 696
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?tryGetByKeyWithFallback@icu_56@@YAPAUUResourceBundle@@PBU2@PBDPAPAU2@W4FallbackFlags@1@AAW4UErrorCode@@@Z ENDP ; icu_56::tryGetByKeyWithFallback
_TEXT	ENDS
EXTRN	_ures_getLocaleByType_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isRoot@icu_56@@YACPBUUResourceBundle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_actualLocale$ = -8					; size = 4
_rb$ = 8						; size = 4
_status$ = 12						; size = 4
?isRoot@icu_56@@YACPBUUResourceBundle@@AAW4UErrorCode@@@Z PROC ; icu_56::isRoot, COMDAT
; Line 698
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 700
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	call	_ures_getLocaleByType_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _actualLocale$[ebp], eax
; Line 701
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@isRoot
; Line 702
	xor	al, al
	jmp	SHORT $LN2@isRoot
$LN1@isRoot:
; Line 704
	push	OFFSET _gRoot
	mov	eax, DWORD PTR _actualLocale$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	sete	al
$LN2@isRoot:
; Line 705
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isRoot@icu_56@@YACPBUUResourceBundle@@AAW4UErrorCode@@@Z ENDP ; icu_56::isRoot
_TEXT	ENDS
EXTRN	_ures_getByIndex_56:PROC
EXTRN	_ures_getSize_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initCDFLocaleStyleData@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$74546 = -32						; size = 4
_power10$ = -20						; size = 4
_size$ = -8						; size = 4
_decimalFormatBundle$ = 8				; size = 4
_result$ = 12						; size = 4
_status$ = 16						; size = 4
?initCDFLocaleStyleData@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z PROC ; icu_56::initCDFLocaleStyleData, COMDAT
; Line 711
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 712
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@initCDFLoc@2
; Line 713
	jmp	$LN7@initCDFLoc@2
$LN6@initCDFLoc@2:
; Line 716
	mov	eax, DWORD PTR _decimalFormatBundle$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax
; Line 717
	mov	DWORD PTR _power10$[ebp], 0
; Line 718
	mov	DWORD PTR _i$74546[ebp], 0
	jmp	SHORT $LN5@initCDFLoc@2
$LN4@initCDFLoc@2:
	mov	eax, DWORD PTR _i$74546[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74546[ebp], eax
$LN5@initCDFLoc@2:
	mov	eax, DWORD PTR _i$74546[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jge	SHORT $LN3@initCDFLoc@2
; Line 719
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _power10$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$74546[ebp]
	push	edx
	mov	eax, DWORD PTR _decimalFormatBundle$[ebp]
	push	eax
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _power10$[ebp], eax
; Line 720
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initCDFLoc@2
; Line 721
	mov	eax, DWORD PTR _power10$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 722
	jmp	SHORT $LN7@initCDFLoc@2
$LN2@initCDFLoc@2:
; Line 724
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _power10$[ebp]
	push	edx
	call	?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z ; icu_56::populatePower10
	add	esp, 12					; 0000000cH
; Line 725
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initCDFLoc@2
; Line 726
	mov	eax, DWORD PTR _power10$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 727
	jmp	SHORT $LN7@initCDFLoc@2
$LN1@initCDFLoc@2:
; Line 729
	jmp	$LN4@initCDFLoc@2
$LN3@initCDFLoc@2:
; Line 730
	mov	eax, DWORD PTR _power10$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 731
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	?fillInMissing@icu_56@@YAXPAVCDFLocaleStyleData@1@@Z ; icu_56::fillInMissing
	add	esp, 4
$LN7@initCDFLoc@2:
; Line 732
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initCDFLocaleStyleData@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z ENDP ; icu_56::initCDFLocaleStyleData
_TEXT	ENDS
PUBLIC	__real@4024000000000000
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	_ures_getString_56:PROC
EXTRN	__imp__strtod:PROC
EXTRN	_ures_getKey_56:PROC
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$74584 = -260						; size = 4
_divisor$ = -248					; size = 8
_nz$74578 = -232					; size = 4
_formatStr$74576 = -220					; size = 64
_formatStrP$74574 = -148				; size = 4
_resLen$74573 = -136					; size = 4
_variant$74572 = -124					; size = 4
_i$74567 = -112						; size = 4
_variantBundle$ = -100					; size = 4
_otherVariantDefined$ = -85				; size = 1
_numZeros$ = -76					; size = 4
_size$ = -64						; size = 4
_log10Value$ = -52					; size = 4
_power10$ = -40						; size = 8
_endPtr$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_power10Bundle$ = 8					; size = 4
_result$ = 12						; size = 4
_status$ = 16						; size = 4
?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z PROC ; icu_56::populatePower10, COMDAT
; Line 736
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 737
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@populatePo
; Line 738
	jmp	$LN17@populatePo
$LN16@populatePo:
; Line 740
	mov	DWORD PTR _endPtr$[ebp], 0
; Line 741
	mov	esi, esp
	lea	eax, DWORD PTR _endPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _power10Bundle$[ebp]
	push	ecx
	call	_ures_getKey_56
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__strtod
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _power10$[ebp]
; Line 742
	mov	eax, DWORD PTR _endPtr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN15@populatePo
; Line 743
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 744
	jmp	$LN17@populatePo
$LN15@populatePo:
; Line 746
	push	0
	sub	esp, 8
	fld	QWORD PTR _power10$[ebp]
	fstp	QWORD PTR [esp]
	call	?computeLog10@icu_56@@YAHNC@Z		; icu_56::computeLog10
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _log10Value$[ebp], eax
; Line 748
	cmp	DWORD PTR _log10Value$[ebp], 15		; 0000000fH
	jne	SHORT $LN14@populatePo
; Line 749
	jmp	$LN17@populatePo
$LN14@populatePo:
; Line 751
	mov	eax, DWORD PTR _power10Bundle$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax
; Line 752
	mov	DWORD PTR _numZeros$[ebp], 0
; Line 753
	mov	BYTE PTR _otherVariantDefined$[ebp], 0
; Line 754
	mov	DWORD PTR _variantBundle$[ebp], 0
; Line 756
	mov	DWORD PTR _i$74567[ebp], 0
	jmp	SHORT $LN13@populatePo
$LN12@populatePo:
	mov	eax, DWORD PTR _i$74567[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74567[ebp], eax
$LN13@populatePo:
	mov	eax, DWORD PTR _i$74567[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jge	$LN11@populatePo
; Line 757
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _variantBundle$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$74567[ebp]
	push	edx
	mov	eax, DWORD PTR _power10Bundle$[ebp]
	push	eax
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _variantBundle$[ebp], eax
; Line 758
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@populatePo
; Line 759
	mov	eax, DWORD PTR _variantBundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 760
	jmp	$LN17@populatePo
$LN10@populatePo:
; Line 762
	mov	eax, DWORD PTR _variantBundle$[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _variant$74572[ebp], eax
; Line 764
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _resLen$74573[ebp]
	push	ecx
	mov	edx, DWORD PTR _variantBundle$[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _formatStrP$74574[ebp], eax
; Line 765
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@populatePo
; Line 766
	mov	eax, DWORD PTR _variantBundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 767
	jmp	$LN17@populatePo
$LN9@populatePo:
; Line 769
	mov	esi, esp
	mov	eax, DWORD PTR _resLen$74573[ebp]
	push	eax
	mov	ecx, DWORD PTR _formatStrP$74574[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _formatStr$74576[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 770
	push	OFFSET _gOther
	mov	eax, DWORD PTR _variant$74572[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@populatePo
; Line 771
	mov	BYTE PTR _otherVariantDefined$[ebp], 1
$LN8@populatePo:
; Line 774
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	lea	eax, DWORD PTR _formatStr$74576[ebp]
	push	eax
	mov	ecx, DWORD PTR _log10Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _variant$74572[ebp]
	push	edx
	call	?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z ; icu_56::populatePrefixSuffix
	add	esp, 20					; 00000014H
	mov	DWORD PTR _nz$74578[ebp], eax
; Line 775
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@populatePo
; Line 776
	mov	eax, DWORD PTR _variantBundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 777
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _formatStr$74576[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@populatePo
$LN7@populatePo:
; Line 779
	mov	eax, DWORD PTR _nz$74578[ebp]
	cmp	eax, DWORD PTR _numZeros$[ebp]
	je	SHORT $LN6@populatePo
; Line 782
	cmp	DWORD PTR _numZeros$[ebp], 0
	je	SHORT $LN5@populatePo
; Line 783
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 784
	mov	eax, DWORD PTR _variantBundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 785
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _formatStr$74576[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@populatePo
$LN5@populatePo:
; Line 787
	mov	eax, DWORD PTR _nz$74578[ebp]
	mov	DWORD PTR _numZeros$[ebp], eax
$LN6@populatePo:
; Line 789
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _formatStr$74576[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN12@populatePo
$LN11@populatePo:
; Line 790
	mov	eax, DWORD PTR _variantBundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 792
	movsx	eax, BYTE PTR _otherVariantDefined$[ebp]
	test	eax, eax
	jne	SHORT $LN4@populatePo
; Line 793
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 794
	jmp	SHORT $LN17@populatePo
$LN4@populatePo:
; Line 796
	fld	QWORD PTR _power10$[ebp]
	fstp	QWORD PTR _divisor$[ebp]
; Line 797
	mov	DWORD PTR _i$74584[ebp], 1
	jmp	SHORT $LN3@populatePo
$LN2@populatePo:
	mov	eax, DWORD PTR _i$74584[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74584[ebp], eax
$LN3@populatePo:
	mov	eax, DWORD PTR _i$74584[ebp]
	cmp	eax, DWORD PTR _numZeros$[ebp]
	jge	SHORT $LN1@populatePo
; Line 798
	fld	QWORD PTR _divisor$[ebp]
	fdiv	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR _divisor$[ebp]
; Line 799
	jmp	SHORT $LN2@populatePo
$LN1@populatePo:
; Line 800
	mov	eax, DWORD PTR _log10Value$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	fld	QWORD PTR _divisor$[ebp]
	fstp	QWORD PTR [ecx+eax*8]
$LN17@populatePo:
; Line 801
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@populatePo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN25@populatePo:
	DD	3
	DD	$LN24@populatePo
$LN24@populatePo:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN20@populatePo
	DD	-136					; ffffff78H
	DD	4
	DD	$LN21@populatePo
	DD	-220					; ffffff24H
	DD	64					; 00000040H
	DD	$LN22@populatePo
$LN22@populatePo:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN21@populatePo:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN20@populatePo:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _formatStr$74576[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?populatePower10@icu_56@@YAXPBUUResourceBundle@@PAVCDFLocaleStyleData@1@AAW4UErrorCode@@@Z ENDP ; icu_56::populatePower10
PUBLIC	__$ArrayPad$
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC
EXTRN	__imp_?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv191 = -432						; size = 4
tv189 = -432						; size = 4
tv197 = -429						; size = 1
tv194 = -429						; size = 1
tv201 = -428						; size = 4
tv198 = -428						; size = 4
tv196 = -428						; size = 4
tv193 = -428						; size = 4
$T82343 = -420						; size = 4
$T82344 = -408						; size = 4
$T74603 = -396						; size = 64
$T74604 = -324						; size = 64
_idx$ = -60						; size = 4
_unit$ = -48						; size = 4
_lastIdx$ = -36						; size = 4
_firstIdx$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_variant$ = 8						; size = 4
_log10Value$ = 12					; size = 4
_formatStr$ = 16					; size = 4
_result$ = 20						; size = 4
_status$ = 24						; size = 4
?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z PROC ; icu_56::populatePrefixSuffix, COMDAT
; Line 813
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 814
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@populatePr
; Line 815
	xor	eax, eax
	jmp	$LN7@populatePr
$LN6@populatePr:
; Line 817
	mov	esi, esp
	push	0
	push	1
	push	OFFSET _kZero
	mov	ecx, DWORD PTR _formatStr$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _firstIdx$[ebp], eax
; Line 819
	cmp	DWORD PTR _firstIdx$[ebp], -1
	jne	SHORT $LN5@populatePr
; Line 820
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 821
	xor	eax, eax
	jmp	$LN7@populatePr
$LN5@populatePr:
; Line 823
	mov	esi, esp
	mov	eax, DWORD PTR _firstIdx$[ebp]
	push	eax
	push	1
	push	OFFSET _kZero
	mov	ecx, DWORD PTR _formatStr$[ebp]
	call	DWORD PTR __imp_?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lastIdx$[ebp], eax
; Line 824
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _log10Value$[ebp]
	push	edx
	mov	eax, DWORD PTR _variant$[ebp]
	push	eax
	call	?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z ; icu_56::createCDFUnit
	add	esp, 16					; 00000010H
	mov	DWORD PTR _unit$[ebp], eax
; Line 825
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@populatePr
; Line 826
	xor	eax, eax
	jmp	$LN7@populatePr
$LN4@populatePr:
; Line 829
	mov	esi, esp
	mov	eax, DWORD PTR _firstIdx$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR $T74603[ebp]
	push	ecx
	mov	ecx, DWORD PTR _formatStr$[ebp]
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv198[ebp], eax
	mov	edx, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv189[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	eax, DWORD PTR tv189[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T74603[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 830
	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	call	?fixQuotes@icu_56@@YAXAAVUnicodeString@1@@Z ; icu_56::fixQuotes
	add	esp, 4
; Line 832
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _lastIdx$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T74604[ebp]
	push	ecx
	mov	ecx, DWORD PTR _formatStr$[ebp]
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv201[ebp], eax
	mov	edx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv191[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR tv191[ebp]
	push	eax
	mov	ecx, DWORD PTR _unit$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T74604[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 833
	mov	eax, DWORD PTR _unit$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	call	?fixQuotes@icu_56@@YAXAAVUnicodeString@1@@Z ; icu_56::fixQuotes
	add	esp, 4
; Line 837
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T82343[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	call	?onlySpaces@icu_56@@YACVUnicodeString@1@@Z ; icu_56::onlySpaces
	add	esp, 64					; 00000040H
	mov	BYTE PTR tv194[ebp], al
	movsx	ecx, BYTE PTR tv194[ebp]
	test	ecx, ecx
	je	SHORT $LN3@populatePr
	mov	eax, DWORD PTR _unit$[ebp]
	add	eax, 64					; 00000040H
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T82344[ebp], esp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv196[ebp], eax
	call	?onlySpaces@icu_56@@YACVUnicodeString@1@@Z ; icu_56::onlySpaces
	add	esp, 64					; 00000040H
	mov	BYTE PTR tv197[ebp], al
	movsx	ecx, BYTE PTR tv197[ebp]
	test	ecx, ecx
	je	SHORT $LN3@populatePr
; Line 838
	mov	eax, DWORD PTR _log10Value$[ebp]
	add	eax, 1
	jmp	SHORT $LN7@populatePr
$LN3@populatePr:
; Line 842
	mov	eax, DWORD PTR _firstIdx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN2@populatePr:
; Line 843
	mov	eax, DWORD PTR _idx$[ebp]
	cmp	eax, DWORD PTR _lastIdx$[ebp]
	jg	SHORT $LN1@populatePr
	mov	esi, esp
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _formatStr$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 48					; 00000030H
	jne	SHORT $LN1@populatePr
; Line 844
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
; Line 845
	jmp	SHORT $LN2@populatePr
$LN1@populatePr:
; Line 846
	mov	eax, DWORD PTR _idx$[ebp]
	sub	eax, DWORD PTR _firstIdx$[ebp]
$LN7@populatePr:
; Line 847
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T74603[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T74604[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?populatePrefixSuffix@icu_56@@YAHPBDHABVUnicodeString@1@PAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; icu_56::populatePrefixSuffix
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?trim@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z$0
__ehfuncinfo$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?onlySpaces@icu_56@@YACVUnicodeString@1@@Z
_TEXT	SEGMENT
$T82358 = -221						; size = 1
__$EHRec$ = -12						; size = 12
_u$ = 8							; size = 64
?onlySpaces@icu_56@@YACVUnicodeString@1@@Z PROC		; icu_56::onlySpaces, COMDAT
; Line 849
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 850
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?trim@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	sete	al
	mov	BYTE PTR $T82358[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T82358[ebp]
; Line 851
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@onlySpaces
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@onlySpaces:
	DD	1
	DD	$LN6@onlySpaces
$LN6@onlySpaces:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@onlySpaces
$LN4@onlySpaces:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?onlySpaces@icu_56@@YACVUnicodeString@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?onlySpaces@icu_56@@YACVUnicodeString@1@@Z ENDP		; icu_56::onlySpaces
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?setCharAt@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fixQuotes@icu_56@@YAXAAVUnicodeString@1@@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
_ch$74626 = -56						; size = 2
_i$74622 = -44						; size = 4
_dest$ = -32						; size = 4
_len$ = -20						; size = 4
_state$ = -8						; size = 4
_s$ = 8							; size = 4
?fixQuotes@icu_56@@YAXAAVUnicodeString@1@@Z PROC	; icu_56::fixQuotes, COMDAT
; Line 855
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 856
	mov	DWORD PTR _state$[ebp], 0
; Line 857
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 858
	mov	DWORD PTR _dest$[ebp], 0
; Line 859
	mov	DWORD PTR _i$74622[ebp], 0
	jmp	SHORT $LN11@fixQuotes
$LN10@fixQuotes:
	mov	eax, DWORD PTR _i$74622[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74622[ebp], eax
$LN11@fixQuotes:
	mov	eax, DWORD PTR _i$74622[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jge	$LN9@fixQuotes
; Line 860
	mov	esi, esp
	mov	eax, DWORD PTR _i$74622[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$74626[ebp], ax
; Line 861
	movzx	eax, WORD PTR _ch$74626[ebp]
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN8@fixQuotes
; Line 862
	cmp	DWORD PTR _state$[ebp], 1
	jne	SHORT $LN7@fixQuotes
; Line 863
	mov	esi, esp
	movzx	eax, WORD PTR _ch$74626[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?setCharAt@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 864
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 1
	mov	DWORD PTR _dest$[ebp], eax
$LN7@fixQuotes:
; Line 866
	jmp	SHORT $LN6@fixQuotes
$LN8@fixQuotes:
; Line 867
	mov	esi, esp
	movzx	eax, WORD PTR _ch$74626[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?setCharAt@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 868
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 1
	mov	DWORD PTR _dest$[ebp], eax
$LN6@fixQuotes:
; Line 872
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR tv82[ebp], eax
	cmp	DWORD PTR tv82[ebp], 0
	je	SHORT $LN3@fixQuotes
	cmp	DWORD PTR tv82[ebp], 0
	jle	SHORT $LN4@fixQuotes
	cmp	DWORD PTR tv82[ebp], 2
	jle	SHORT $LN2@fixQuotes
	jmp	SHORT $LN4@fixQuotes
$LN3@fixQuotes:
; Line 874
	movzx	eax, WORD PTR _ch$74626[ebp]
	xor	ecx, ecx
	cmp	eax, 39					; 00000027H
	sete	cl
	mov	DWORD PTR _state$[ebp], ecx
; Line 875
	jmp	SHORT $LN4@fixQuotes
$LN2@fixQuotes:
; Line 878
	movzx	eax, WORD PTR _ch$74626[ebp]
	sub	eax, 39					; 00000027H
	neg	eax
	sbb	eax, eax
	and	eax, 2
	mov	DWORD PTR _state$[ebp], eax
$LN4@fixQuotes:
; Line 883
	jmp	$LN10@fixQuotes
$LN9@fixQuotes:
; Line 884
	mov	esi, esp
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 885
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?fixQuotes@icu_56@@YAXAAVUnicodeString@1@@Z ENDP	; icu_56::fixQuotes
_TEXT	ENDS
PUBLIC	?markAsSet@CDFUnit@icu_56@@QAEXXZ		; icu_56::CDFUnit::markAsSet
PUBLIC	??4CDFUnit@icu_56@@QAEAAU01@ABU01@@Z		; icu_56::CDFUnit::operator=
PUBLIC	?isSet@CDFUnit@icu_56@@QBECXZ			; icu_56::CDFUnit::isSet
PUBLIC	__real@3ff0000000000000
PUBLIC	__$ArrayPad$
EXTRN	_uhash_nextElement_56:PROC
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?fillInMissing@icu_56@@YAXPAVCDFLocaleStyleData@1@@Z
_TEXT	SEGMENT
_i$74657 = -112						; size = 4
_units$74655 = -100					; size = 4
_element$ = -88						; size = 4
_pos$ = -76						; size = 4
_i$74644 = -64						; size = 4
_lastDivisor$ = -52					; size = 8
_definedInCLDR$ = -36					; size = 15
_otherUnits$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_result$ = 8						; size = 4
?fillInMissing@icu_56@@YAXPAVCDFLocaleStyleData@1@@Z PROC ; icu_56::fillInMissing, COMDAT
; Line 904
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 906
	push	OFFSET _gOther
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _otherUnits$[ebp], eax
; Line 908
	fld1
	fstp	QWORD PTR _lastDivisor$[ebp]
; Line 909
	mov	DWORD PTR _i$74644[ebp], 0
	jmp	SHORT $LN16@fillInMiss
$LN15@fillInMiss:
	mov	eax, DWORD PTR _i$74644[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74644[ebp], eax
$LN16@fillInMiss:
	cmp	DWORD PTR _i$74644[ebp], 15		; 0000000fH
	jge	SHORT $LN14@fillInMiss
; Line 910
	mov	ecx, DWORD PTR _i$74644[ebp]
	shl	ecx, 7
	add	ecx, DWORD PTR _otherUnits$[ebp]
	call	?isSet@CDFUnit@icu_56@@QBECXZ		; icu_56::CDFUnit::isSet
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@fillInMiss
; Line 911
	mov	eax, DWORD PTR _i$74644[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	fld	QWORD PTR _lastDivisor$[ebp]
	fstp	QWORD PTR [ecx+eax*8]
; Line 912
	mov	eax, DWORD PTR _i$74644[ebp]
	mov	BYTE PTR _definedInCLDR$[ebp+eax], 0
; Line 913
	jmp	SHORT $LN12@fillInMiss
$LN13@fillInMiss:
; Line 914
	mov	eax, DWORD PTR _i$74644[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	fld	QWORD PTR [ecx+eax*8]
	fstp	QWORD PTR _lastDivisor$[ebp]
; Line 915
	mov	eax, DWORD PTR _i$74644[ebp]
	mov	BYTE PTR _definedInCLDR$[ebp+eax], 1
$LN12@fillInMiss:
; Line 917
	jmp	SHORT $LN15@fillInMiss
$LN14@fillInMiss:
; Line 919
	mov	DWORD PTR _pos$[ebp], -1
; Line 920
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _element$[ebp], eax
	jmp	SHORT $LN11@fillInMiss
$LN10@fillInMiss:
; Line 921
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _element$[ebp], eax
$LN11@fillInMiss:
	cmp	DWORD PTR _element$[ebp], 0
	je	$LN9@fillInMiss
; Line 922
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _units$74655[ebp], ecx
; Line 923
	mov	DWORD PTR _i$74657[ebp], 0
	jmp	SHORT $LN8@fillInMiss
$LN7@fillInMiss:
	mov	eax, DWORD PTR _i$74657[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74657[ebp], eax
$LN8@fillInMiss:
	cmp	DWORD PTR _i$74657[ebp], 15		; 0000000fH
	jge	SHORT $LN6@fillInMiss
; Line 924
	mov	eax, DWORD PTR _i$74657[ebp]
	movsx	ecx, BYTE PTR _definedInCLDR$[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN5@fillInMiss
; Line 925
	mov	ecx, DWORD PTR _i$74657[ebp]
	shl	ecx, 7
	add	ecx, DWORD PTR _units$74655[ebp]
	call	?isSet@CDFUnit@icu_56@@QBECXZ		; icu_56::CDFUnit::isSet
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@fillInMiss
; Line 926
	mov	eax, DWORD PTR _i$74657[ebp]
	shl	eax, 7
	add	eax, DWORD PTR _otherUnits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$74657[ebp]
	shl	ecx, 7
	add	ecx, DWORD PTR _units$74655[ebp]
	call	??4CDFUnit@icu_56@@QAEAAU01@ABU01@@Z
$LN4@fillInMiss:
; Line 928
	jmp	SHORT $LN1@fillInMiss
$LN5@fillInMiss:
; Line 929
	cmp	DWORD PTR _i$74657[ebp], 0
	jne	SHORT $LN2@fillInMiss
; Line 930
	mov	ecx, DWORD PTR _units$74655[ebp]
	call	?markAsSet@CDFUnit@icu_56@@QAEXXZ	; icu_56::CDFUnit::markAsSet
; Line 931
	jmp	SHORT $LN1@fillInMiss
$LN2@fillInMiss:
; Line 932
	mov	eax, DWORD PTR _i$74657[ebp]
	sub	eax, 1
	shl	eax, 7
	add	eax, DWORD PTR _units$74655[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$74657[ebp]
	shl	ecx, 7
	add	ecx, DWORD PTR _units$74655[ebp]
	call	??4CDFUnit@icu_56@@QAEAAU01@ABU01@@Z
$LN1@fillInMiss:
; Line 935
	jmp	SHORT $LN7@fillInMiss
$LN6@fillInMiss:
; Line 936
	jmp	$LN10@fillInMiss
$LN9@fillInMiss:
; Line 937
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@fillInMiss
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@fillInMiss:
	DD	2
	DD	$LN21@fillInMiss
$LN21@fillInMiss:
	DD	-36					; ffffffdcH
	DD	15					; 0000000fH
	DD	$LN19@fillInMiss
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN20@fillInMiss
$LN20@fillInMiss:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN19@fillInMiss:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	76					; 0000004cH
	DB	68					; 00000044H
	DB	82					; 00000052H
	DB	0
?fillInMissing@icu_56@@YAXPAVCDFLocaleStyleData@1@@Z ENDP ; icu_56::fillInMissing
_TEXT	ENDS
EXTRN	__imp_?isBogus@UnicodeString@icu_56@@QBECXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSet@CDFUnit@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isSet@CDFUnit@icu_56@@QBECXZ PROC			; icu_56::CDFUnit::isSet, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 74
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSet@CDFUnit@icu_56@@QBECXZ ENDP			; icu_56::CDFUnit::isSet
_TEXT	ENDS
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?markAsSet@CDFUnit@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?markAsSet@CDFUnit@icu_56@@QAEXXZ PROC			; icu_56::CDFUnit::markAsSet, COMDAT
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 78
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?markAsSet@CDFUnit@icu_56@@QAEXXZ ENDP			; icu_56::CDFUnit::markAsSet
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4CDFUnit@icu_56@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CDFUnit@icu_56@@QAEAAU01@ABU01@@Z PROC		; icu_56::CDFUnit::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CDFUnit@icu_56@@QAEAAU01@ABU01@@Z ENDP		; icu_56::CDFUnit::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?computeLog10@icu_56@@YAHNC@Z
_TEXT	SEGMENT
_max$ = -20						; size = 4
_result$ = -8						; size = 4
_x$ = 8							; size = 8
_inRange$ = 16						; size = 1
?computeLog10@icu_56@@YAHNC@Z PROC			; icu_56::computeLog10, COMDAT
; Line 943
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 944
	mov	DWORD PTR _result$[ebp], 0
; Line 945
	movsx	eax, BYTE PTR _inRange$[ebp]
	neg	eax
	sbb	eax, eax
	add	eax, 15					; 0000000fH
	mov	DWORD PTR _max$[ebp], eax
$LN3@computeLog:
; Line 946
	fld	QWORD PTR __real@4024000000000000
	fcomp	QWORD PTR _x$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@computeLog
; Line 947
	fld	QWORD PTR _x$[ebp]
	fdiv	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR _x$[ebp]
; Line 948
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 1
	mov	DWORD PTR _result$[ebp], eax
; Line 949
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jne	SHORT $LN1@computeLog
; Line 950
	jmp	SHORT $LN2@computeLog
$LN1@computeLog:
; Line 952
	jmp	SHORT $LN3@computeLog
$LN2@computeLog:
; Line 953
	mov	eax, DWORD PTR _result$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?computeLog10@icu_56@@YAHNC@Z ENDP			; icu_56::computeLog10
_TEXT	ENDS
PUBLIC	??0CDFUnit@icu_56@@QAE@XZ			; icu_56::CDFUnit::CDFUnit
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv84 = -256						; size = 4
$T82390 = -248						; size = 4
$T82391 = -236						; size = 4
_result$ = -32						; size = 4
_cdfUnit$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_variant$ = 8						; size = 4
_log10Value$ = 12					; size = 4
_table$ = 16						; size = 4
_status$ = 20						; size = 4
?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z PROC ; icu_56::createCDFUnit, COMDAT
; Line 959
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 960
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@createCDFU
; Line 961
	xor	eax, eax
	jmp	$LN5@createCDFU
$LN4@createCDFU:
; Line 963
	mov	eax, DWORD PTR _variant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _table$[ebp]
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _cdfUnit$[ebp], eax
; Line 964
	cmp	DWORD PTR _cdfUnit$[ebp], 0
	jne	$LN3@createCDFU
; Line 965
	mov	esi, esp
	push	1924					; 00000784H
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82391[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82391[ebp], 0
	je	SHORT $LN7@createCDFU
	mov	eax, DWORD PTR $T82391[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
	push	OFFSET ??1CDFUnit@icu_56@@QAE@XZ	; icu_56::CDFUnit::~CDFUnit
	push	OFFSET ??0CDFUnit@icu_56@@QAE@XZ	; icu_56::CDFUnit::CDFUnit
	push	15					; 0000000fH
	push	128					; 00000080H
	mov	ecx, DWORD PTR $T82391[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T82391[ebp]
	add	edx, 4
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN8@createCDFU
$LN7@createCDFU:
	mov	DWORD PTR tv84[ebp], 0
$LN8@createCDFU:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T82390[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T82390[ebp]
	mov	DWORD PTR _cdfUnit$[ebp], ecx
; Line 966
	cmp	DWORD PTR _cdfUnit$[ebp], 0
	jne	SHORT $LN2@createCDFU
; Line 967
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 968
	xor	eax, eax
	jmp	SHORT $LN5@createCDFU
$LN2@createCDFU:
; Line 970
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cdfUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _variant$[ebp]
	push	edx
	call	_uprv_strdup_56
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _table$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 971
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@createCDFU
; Line 972
	xor	eax, eax
	jmp	SHORT $LN5@createCDFU
$LN3@createCDFU:
; Line 975
	mov	eax, DWORD PTR _log10Value$[ebp]
	shl	eax, 7
	add	eax, DWORD PTR _cdfUnit$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 976
	mov	ecx, DWORD PTR _result$[ebp]
	call	?markAsSet@CDFUnit@icu_56@@QAEXXZ	; icu_56::CDFUnit::markAsSet
; Line 977
	mov	eax, DWORD PTR _result$[ebp]
$LN5@createCDFU:
; Line 978
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T82391[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createCDFUnit@icu_56@@YAPAUCDFUnit@1@PBDHPAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; icu_56::createCDFUnit
EXTRN	__imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDFUnit@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDFUnit@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDFUnit@icu_56@@QAE@XZ$1
__ehfuncinfo$??0CDFUnit@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDFUnit@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CDFUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CDFUnit@icu_56@@QAE@XZ PROC				; icu_56::CDFUnit::CDFUnit, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDFUnit@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 70
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setToBogus@UnicodeString@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDFUnit@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CDFUnit@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CDFUnit@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDFUnit@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDFUnit@icu_56@@QAE@XZ ENDP				; icu_56::CDFUnit::CDFUnit
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z$0
__ehfuncinfo$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z
_TEXT	SEGMENT
$T82414 = -304						; size = 4
_cdfUnit$ = -100					; size = 4
_status$ = -88						; size = 4
_cvariant$ = -76					; size = 56
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_table$ = 8						; size = 4
_variant$ = 12						; size = 4
_log10Value$ = 16					; size = 4
?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z PROC ; icu_56::getCDFUnitFallback, COMDAT
; Line 984
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 985
	mov	esi, esp
	lea	ecx, DWORD PTR _cvariant$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 986
	mov	DWORD PTR _status$[ebp], 0
; Line 987
	mov	DWORD PTR _cdfUnit$[ebp], 0
; Line 988
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _variant$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cvariant$[ebp]
	call	DWORD PTR __imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 989
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@getCDFUnit
; Line 990
	mov	esi, esp
	lea	ecx, DWORD PTR _cvariant$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _table$[ebp]
	push	eax
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _cdfUnit$[ebp], eax
$LN2@getCDFUnit:
; Line 992
	cmp	DWORD PTR _cdfUnit$[ebp], 0
	jne	SHORT $LN1@getCDFUnit
; Line 993
	push	OFFSET _gOther
	mov	eax, DWORD PTR _table$[ebp]
	push	eax
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _cdfUnit$[ebp], eax
$LN1@getCDFUnit:
; Line 995
	mov	eax, DWORD PTR _log10Value$[ebp]
	shl	eax, 7
	add	eax, DWORD PTR _cdfUnit$[ebp]
	mov	DWORD PTR $T82414[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _cvariant$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T82414[ebp]
; Line 996
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getCDFUnit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@getCDFUnit:
	DD	2
	DD	$LN9@getCDFUnit
$LN9@getCDFUnit:
	DD	-76					; ffffffb4H
	DD	56					; 00000038H
	DD	$LN6@getCDFUnit
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN7@getCDFUnit
$LN7@getCDFUnit:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN6@getCDFUnit:
	DB	99					; 00000063H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _cvariant$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCDFUnitFallback@icu_56@@YAPBUCDFUnit@1@PBUUHashtable@@ABVUnicodeString@1@H@Z ENDP ; icu_56::getCDFUnitFallback
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z PROC ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\localpointer.h
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ENDP ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ PROC ; icu_56::LocalPointerBase<UResourceBundle>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ENDP ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::LocalPointerBase<icu_56::DecimalFormat>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z PROC ; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::LocalPointerBase<icu_56::DecimalFormat>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z ENDP ; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T82499 = -236						; size = 4
$T82500 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T82500[ebp], ecx
	mov	edx, DWORD PTR $T82500[ebp]
	mov	DWORD PTR $T82499[ebp], edx
	cmp	DWORD PTR $T82499[ebp], 0
	je	SHORT $LN3@LocalPoint
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T82499[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T82499[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint
$LN3@LocalPoint:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>
__ehhandler$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??D?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEAAVDecimalFormat@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEAAVDecimalFormat@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator*, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEAAVDecimalFormat@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator*
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z ; icu_56::LocalPointerBase<icu_56::PluralRules>::LocalPointerBase<icu_56::PluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z PROC ; icu_56::LocalPointer<icu_56::PluralRules>::LocalPointer<icu_56::PluralRules>, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z ; icu_56::LocalPointerBase<icu_56::PluralRules>::LocalPointerBase<icu_56::PluralRules>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z ENDP ; icu_56::LocalPointer<icu_56::PluralRules>::LocalPointer<icu_56::PluralRules>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::~LocalPointerBase<icu_56::PluralRules>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T82517 = -236						; size = 4
$T82518 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T82518[ebp], ecx
	mov	edx, DWORD PTR $T82518[ebp]
	mov	DWORD PTR $T82517[ebp], edx
	cmp	DWORD PTR $T82517[ebp], 0
	je	SHORT $LN3@LocalPoint@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T82517[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T82517[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@2
$LN3@LocalPoint@2:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@2:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::~LocalPointerBase<icu_56::PluralRules>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::PluralRules>::~LocalPointerBase<icu_56::PluralRules>
__ehhandler$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VPluralRules@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::PluralRules>::~LocalPointer<icu_56::PluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QBEPAVPluralRules@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QBEPAVPluralRules@2@XZ PROC ; icu_56::LocalPointerBase<icu_56::PluralRules>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QBEPAVPluralRules@2@XZ ENDP ; icu_56::LocalPointerBase<icu_56::PluralRules>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?orphan@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAEPAVPluralRules@2@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAEPAVPluralRules@2@XZ PROC ; icu_56::LocalPointerBase<icu_56::PluralRules>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAEPAVPluralRules@2@XZ ENDP ; icu_56::LocalPointerBase<icu_56::PluralRules>::orphan
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z PROC ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ENDP ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T82537 = -236						; size = 4
$T82538 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T82538[ebp], ecx
	mov	edx, DWORD PTR $T82538[ebp]
	mov	DWORD PTR $T82537[ebp], edx
	cmp	DWORD PTR $T82537[ebp], 0
	je	SHORT $LN3@LocalPoint@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T82537[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T82537[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@3
$LN3@LocalPoint@3:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@3:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
__ehhandler$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::LocalPointerBase<icu_56::DecimalFormat>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::LocalPointerBase<icu_56::DecimalFormat>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::PluralRules>::LocalPointerBase<icu_56::PluralRules>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@PAVPluralRules@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::PluralRules>::LocalPointerBase<icu_56::PluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::PluralRules>::~LocalPointerBase<icu_56::PluralRules>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VPluralRules@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::PluralRules>::~LocalPointerBase<icu_56::PluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$78930 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$78930[ebp], eax
; Line 597
	cmp	DWORD PTR _p$78930[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$78930[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$78930[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$78930[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\decContext.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_uprv_decContextClearStatus_56
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\i18n\deccontext.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_decContextClearStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_mask$ = 12						; size = 4
_uprv_decContextClearStatus_56 PROC			; COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	eax, DWORD PTR _mask$[ebp]
	not	eax
	mov	ecx, DWORD PTR _context$[ebp]
	and	eax, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 47
	mov	eax, DWORD PTR _context$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextClearStatus_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextSetStatus_56
PUBLIC	_uprv_decContextDefault_56
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextDefault_56
_TEXT	SEGMENT
tv70 = -196						; size = 4
_context$ = 8						; size = 4
_kind$ = 12						; size = 4
_uprv_decContextDefault_56 PROC				; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax], 9
; Line 66
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+4], 999999999		; 3b9ac9ffH
; Line 67
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+8], -999999999		; c4653601H
; Line 68
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+12], 2
; Line 69
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+16], 8927		; 000022dfH
; Line 70
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 71
	mov	eax, DWORD PTR _context$[ebp]
	mov	BYTE PTR [eax+24], 0
; Line 75
	mov	eax, DWORD PTR _kind$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 128		; 00000080H
	ja	$LN1@uprv_decCo
	mov	ecx, DWORD PTR tv70[ebp]
	movzx	edx, BYTE PTR $LN10@uprv_decCo[ecx]
	jmp	DWORD PTR $LN11@uprv_decCo[edx*4]
$LN5@uprv_decCo:
; Line 78
	jmp	$LN6@uprv_decCo
$LN4@uprv_decCo:
; Line 80
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax], 7
; Line 81
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+4], 96			; 00000060H
; Line 82
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+8], -95			; ffffffa1H
; Line 83
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 84
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 85
	mov	eax, DWORD PTR _context$[ebp]
	mov	BYTE PTR [eax+24], 1
; Line 89
	jmp	$LN6@uprv_decCo
$LN3@uprv_decCo:
; Line 91
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 92
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+4], 384			; 00000180H
; Line 93
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+8], -383			; fffffe81H
; Line 94
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 95
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 96
	mov	eax, DWORD PTR _context$[ebp]
	mov	BYTE PTR [eax+24], 1
; Line 100
	jmp	SHORT $LN6@uprv_decCo
$LN2@uprv_decCo:
; Line 102
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax], 34			; 00000022H
; Line 103
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+4], 6144			; 00001800H
; Line 104
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+8], -6143		; ffffe801H
; Line 105
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 106
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 107
	mov	eax, DWORD PTR _context$[ebp]
	mov	BYTE PTR [eax+24], 1
; Line 111
	jmp	SHORT $LN6@uprv_decCo
$LN1@uprv_decCo:
; Line 115
	push	128					; 00000080H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
$LN6@uprv_decCo:
; Line 118
	mov	eax, DWORD PTR _context$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@uprv_decCo:
	DD	$LN5@uprv_decCo
	DD	$LN4@uprv_decCo
	DD	$LN3@uprv_decCo
	DD	$LN2@uprv_decCo
	DD	$LN1@uprv_decCo
$LN10@uprv_decCo:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_uprv_decContextDefault_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextGetRounding_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextGetRounding_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_uprv_decContextGetRounding_56 PROC			; COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 129
	mov	eax, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextGetRounding_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextGetStatus_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextGetStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_uprv_decContextGetStatus_56 PROC			; COMDAT
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 141
	mov	eax, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextGetStatus_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextRestoreStatus_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextRestoreStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_newstatus$ = 12					; size = 4
_mask$ = 16						; size = 4
_uprv_decContextRestoreStatus_56 PROC			; COMDAT
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 158
	mov	eax, DWORD PTR _mask$[ebp]
	not	eax
	mov	ecx, DWORD PTR _context$[ebp]
	and	eax, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 159
	mov	eax, DWORD PTR _mask$[ebp]
	and	eax, DWORD PTR _newstatus$[ebp]
	mov	ecx, DWORD PTR _context$[ebp]
	or	eax, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 160
	mov	eax, DWORD PTR _context$[ebp]
; Line 161
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextRestoreStatus_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextSaveStatus_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextSaveStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_mask$ = 12						; size = 4
_uprv_decContextSaveStatus_56 PROC			; COMDAT
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 174
	mov	eax, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, DWORD PTR _mask$[ebp]
; Line 175
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextSaveStatus_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextSetRounding_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextSetRounding_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_newround$ = 12						; size = 4
_uprv_decContextSetRounding_56 PROC			; COMDAT
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 188
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR _newround$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 189
	mov	eax, DWORD PTR _context$[ebp]
; Line 190
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextSetRounding_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _uprv_decContextSetStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_status$ = 12						; size = 4
_uprv_decContextSetStatus_56 PROC			; COMDAT
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 203
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	or	ecx, DWORD PTR _status$[ebp]
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 207
	mov	eax, DWORD PTR _context$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextSetStatus_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_09LNLOOAGA@No?5status?$AA@		; `string'
PUBLIC	??_C@_09FIFLEIAA@Underflow?$AA@			; `string'
PUBLIC	??_C@_09IOIEBIGE@Subnormal?$AA@			; `string'
PUBLIC	??_C@_07HGAEHKED@Rounded?$AA@			; `string'
PUBLIC	??_C@_07PHGBKLPO@Clamped?$AA@			; `string'
PUBLIC	??_C@_08KJPBNJGC@Overflow?$AA@			; `string'
PUBLIC	??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@	; `string'
PUBLIC	??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@	; `string'
PUBLIC	??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@	; `string'
PUBLIC	??_C@_07GEEFKCOC@Inexact?$AA@			; `string'
PUBLIC	??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@	; `string'
PUBLIC	??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@	; `string'
PUBLIC	??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@	; `string'
PUBLIC	??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@	; `string'
PUBLIC	_uprv_decContextSetStatusFromString_56
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_09LNLOOAGA@No?5status?$AA@
CONST	SEGMENT
??_C@_09LNLOOAGA@No?5status?$AA@ DB 'No status', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FIFLEIAA@Underflow?$AA@
CONST	SEGMENT
??_C@_09FIFLEIAA@Underflow?$AA@ DB 'Underflow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IOIEBIGE@Subnormal?$AA@
CONST	SEGMENT
??_C@_09IOIEBIGE@Subnormal?$AA@ DB 'Subnormal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGAEHKED@Rounded?$AA@
CONST	SEGMENT
??_C@_07HGAEHKED@Rounded?$AA@ DB 'Rounded', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PHGBKLPO@Clamped?$AA@
CONST	SEGMENT
??_C@_07PHGBKLPO@Clamped?$AA@ DB 'Clamped', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KJPBNJGC@Overflow?$AA@
CONST	SEGMENT
??_C@_08KJPBNJGC@Overflow?$AA@ DB 'Overflow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@
CONST	SEGMENT
??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@ DB 'Invalid operation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@
CONST	SEGMENT
??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@ DB 'Invalid context', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@
CONST	SEGMENT
??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@ DB 'Insufficient storage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GEEFKCOC@Inexact?$AA@
CONST	SEGMENT
??_C@_07GEEFKCOC@Inexact?$AA@ DB 'Inexact', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@
CONST	SEGMENT
??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@ DB 'Division undefined', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@
CONST	SEGMENT
??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@ DB 'Division impossible', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@
CONST	SEGMENT
??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@ DB 'Division by zero', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@
CONST	SEGMENT
??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@ DB 'Conversion syntax', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _uprv_decContextSetStatusFromString_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_string$ = 12						; size = 4
_uprv_decContextSetStatusFromString_56 PROC		; COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 225
	push	OFFSET ??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@uprv_decCo@2
; Line 226
	push	1
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN14@uprv_decCo@2:
; Line 227
	push	OFFSET ??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN13@uprv_decCo@2
; Line 228
	push	2
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN13@uprv_decCo@2:
; Line 229
	push	OFFSET ??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN12@uprv_decCo@2
; Line 230
	push	4
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN12@uprv_decCo@2:
; Line 231
	push	OFFSET ??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@uprv_decCo@2
; Line 232
	push	8
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN11@uprv_decCo@2:
; Line 233
	push	OFFSET ??_C@_07GEEFKCOC@Inexact?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@uprv_decCo@2
; Line 234
	push	32					; 00000020H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN10@uprv_decCo@2:
; Line 235
	push	OFFSET ??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@uprv_decCo@2
; Line 236
	push	16					; 00000010H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN9@uprv_decCo@2:
; Line 237
	push	OFFSET ??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@uprv_decCo@2
; Line 238
	push	64					; 00000040H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN8@uprv_decCo@2:
; Line 239
	push	OFFSET ??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@uprv_decCo@2
; Line 240
	push	128					; 00000080H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN7@uprv_decCo@2:
; Line 245
	push	OFFSET ??_C@_08KJPBNJGC@Overflow?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@uprv_decCo@2
; Line 246
	push	512					; 00000200H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN6@uprv_decCo@2:
; Line 247
	push	OFFSET ??_C@_07PHGBKLPO@Clamped?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@uprv_decCo@2
; Line 248
	push	1024					; 00000400H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@2
$LN5@uprv_decCo@2:
; Line 249
	push	OFFSET ??_C@_07HGAEHKED@Rounded?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@uprv_decCo@2
; Line 250
	push	2048					; 00000800H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	SHORT $LN15@uprv_decCo@2
$LN4@uprv_decCo@2:
; Line 251
	push	OFFSET ??_C@_09IOIEBIGE@Subnormal?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@uprv_decCo@2
; Line 252
	push	4096					; 00001000H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	SHORT $LN15@uprv_decCo@2
$LN3@uprv_decCo@2:
; Line 253
	push	OFFSET ??_C@_09FIFLEIAA@Underflow?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@uprv_decCo@2
; Line 254
	push	8192					; 00002000H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatus_56
	add	esp, 8
	jmp	SHORT $LN15@uprv_decCo@2
$LN2@uprv_decCo@2:
; Line 255
	push	OFFSET ??_C@_09LNLOOAGA@No?5status?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@uprv_decCo@2
; Line 256
	mov	eax, DWORD PTR _context$[ebp]
	jmp	SHORT $LN15@uprv_decCo@2
$LN1@uprv_decCo@2:
; Line 257
	xor	eax, eax
$LN15@uprv_decCo@2:
; Line 258
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextSetStatusFromString_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextSetStatusQuiet_56
PUBLIC	_uprv_decContextSetStatusFromStringQuiet_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextSetStatusFromStringQuiet_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_string$ = 12						; size = 4
_uprv_decContextSetStatusFromStringQuiet_56 PROC	; COMDAT
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	push	OFFSET ??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@uprv_decCo@3
; Line 277
	push	1
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN14@uprv_decCo@3:
; Line 278
	push	OFFSET ??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN13@uprv_decCo@3
; Line 279
	push	2
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN13@uprv_decCo@3:
; Line 280
	push	OFFSET ??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN12@uprv_decCo@3
; Line 281
	push	4
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN12@uprv_decCo@3:
; Line 282
	push	OFFSET ??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@uprv_decCo@3
; Line 283
	push	8
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN11@uprv_decCo@3:
; Line 284
	push	OFFSET ??_C@_07GEEFKCOC@Inexact?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@uprv_decCo@3
; Line 285
	push	32					; 00000020H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN10@uprv_decCo@3:
; Line 286
	push	OFFSET ??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@uprv_decCo@3
; Line 287
	push	16					; 00000010H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN9@uprv_decCo@3:
; Line 288
	push	OFFSET ??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@uprv_decCo@3
; Line 289
	push	64					; 00000040H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN8@uprv_decCo@3:
; Line 290
	push	OFFSET ??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@uprv_decCo@3
; Line 291
	push	128					; 00000080H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN7@uprv_decCo@3:
; Line 296
	push	OFFSET ??_C@_08KJPBNJGC@Overflow?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@uprv_decCo@3
; Line 297
	push	512					; 00000200H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN6@uprv_decCo@3:
; Line 298
	push	OFFSET ??_C@_07PHGBKLPO@Clamped?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@uprv_decCo@3
; Line 299
	push	1024					; 00000400H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	$LN15@uprv_decCo@3
$LN5@uprv_decCo@3:
; Line 300
	push	OFFSET ??_C@_07HGAEHKED@Rounded?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@uprv_decCo@3
; Line 301
	push	2048					; 00000800H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	SHORT $LN15@uprv_decCo@3
$LN4@uprv_decCo@3:
; Line 302
	push	OFFSET ??_C@_09IOIEBIGE@Subnormal?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@uprv_decCo@3
; Line 303
	push	4096					; 00001000H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	SHORT $LN15@uprv_decCo@3
$LN3@uprv_decCo@3:
; Line 304
	push	OFFSET ??_C@_09FIFLEIAA@Underflow?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@uprv_decCo@3
; Line 305
	push	8192					; 00002000H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	_uprv_decContextSetStatusQuiet_56
	add	esp, 8
	jmp	SHORT $LN15@uprv_decCo@3
$LN2@uprv_decCo@3:
; Line 306
	push	OFFSET ??_C@_09LNLOOAGA@No?5status?$AA@
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@uprv_decCo@3
; Line 307
	mov	eax, DWORD PTR _context$[ebp]
	jmp	SHORT $LN15@uprv_decCo@3
$LN1@uprv_decCo@3:
; Line 308
	xor	eax, eax
$LN15@uprv_decCo@3:
; Line 309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextSetStatusFromStringQuiet_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _uprv_decContextSetStatusQuiet_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_status$ = 12						; size = 4
_uprv_decContextSetStatusQuiet_56 PROC			; COMDAT
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 321
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	or	ecx, DWORD PTR _status$[ebp]
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 322
	mov	eax, DWORD PTR _context$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextSetStatusQuiet_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@OJFKEGMI@Multiple?5status?$AA@	; `string'
PUBLIC	_uprv_decContextStatusToString_56
;	COMDAT ??_C@_0BA@OJFKEGMI@Multiple?5status?$AA@
CONST	SEGMENT
??_C@_0BA@OJFKEGMI@Multiple?5status?$AA@ DB 'Multiple status', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _uprv_decContextStatusToString_56
_TEXT	SEGMENT
_status$ = -8						; size = 4
_context$ = 8						; size = 4
_uprv_decContextStatusToString_56 PROC			; COMDAT
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 333
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _status$[ebp], ecx
; Line 337
	cmp	DWORD PTR _status$[ebp], 128		; 00000080H
	jne	SHORT $LN14@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@
	jmp	$LN15@uprv_decCo@4
$LN14@uprv_decCo@4:
; Line 338
	cmp	DWORD PTR _status$[ebp], 2
	jne	SHORT $LN13@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@
	jmp	$LN15@uprv_decCo@4
$LN13@uprv_decCo@4:
; Line 339
	cmp	DWORD PTR _status$[ebp], 512		; 00000200H
	jne	SHORT $LN12@uprv_decCo@4
	mov	eax, OFFSET ??_C@_08KJPBNJGC@Overflow?$AA@
	jmp	$LN15@uprv_decCo@4
$LN12@uprv_decCo@4:
; Line 340
	cmp	DWORD PTR _status$[ebp], 8192		; 00002000H
	jne	SHORT $LN11@uprv_decCo@4
	mov	eax, OFFSET ??_C@_09FIFLEIAA@Underflow?$AA@
	jmp	$LN15@uprv_decCo@4
$LN11@uprv_decCo@4:
; Line 341
	cmp	DWORD PTR _status$[ebp], 32		; 00000020H
	jne	SHORT $LN10@uprv_decCo@4
	mov	eax, OFFSET ??_C@_07GEEFKCOC@Inexact?$AA@
	jmp	$LN15@uprv_decCo@4
$LN10@uprv_decCo@4:
; Line 343
	cmp	DWORD PTR _status$[ebp], 4
	jne	SHORT $LN9@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN9@uprv_decCo@4:
; Line 344
	cmp	DWORD PTR _status$[ebp], 8
	jne	SHORT $LN8@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN8@uprv_decCo@4:
; Line 345
	cmp	DWORD PTR _status$[ebp], 2048		; 00000800H
	jne	SHORT $LN7@uprv_decCo@4
	mov	eax, OFFSET ??_C@_07HGAEHKED@Rounded?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN7@uprv_decCo@4:
; Line 346
	cmp	DWORD PTR _status$[ebp], 1024		; 00000400H
	jne	SHORT $LN6@uprv_decCo@4
	mov	eax, OFFSET ??_C@_07PHGBKLPO@Clamped?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN6@uprv_decCo@4:
; Line 347
	cmp	DWORD PTR _status$[ebp], 4096		; 00001000H
	jne	SHORT $LN5@uprv_decCo@4
	mov	eax, OFFSET ??_C@_09IOIEBIGE@Subnormal?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN5@uprv_decCo@4:
; Line 348
	cmp	DWORD PTR _status$[ebp], 1
	jne	SHORT $LN4@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN4@uprv_decCo@4:
; Line 349
	cmp	DWORD PTR _status$[ebp], 16		; 00000010H
	jne	SHORT $LN3@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN3@uprv_decCo@4:
; Line 350
	cmp	DWORD PTR _status$[ebp], 64		; 00000040H
	jne	SHORT $LN2@uprv_decCo@4
	mov	eax, OFFSET ??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN2@uprv_decCo@4:
; Line 354
	cmp	DWORD PTR _status$[ebp], 0
	jne	SHORT $LN1@uprv_decCo@4
	mov	eax, OFFSET ??_C@_09LNLOOAGA@No?5status?$AA@
	jmp	SHORT $LN15@uprv_decCo@4
$LN1@uprv_decCo@4:
; Line 355
	mov	eax, OFFSET ??_C@_0BA@OJFKEGMI@Multiple?5status?$AA@
$LN15@uprv_decCo@4:
; Line 356
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextStatusToString_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextTestSavedStatus_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextTestSavedStatus_56
_TEXT	SEGMENT
_oldstatus$ = 8						; size = 4
_mask$ = 12						; size = 4
_uprv_decContextTestSavedStatus_56 PROC			; COMDAT
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 401
	mov	eax, DWORD PTR _oldstatus$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 402
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextTestSavedStatus_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextTestStatus_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextTestStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_mask$ = 12						; size = 4
_uprv_decContextTestStatus_56 PROC			; COMDAT
; Line 414
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 415
	mov	eax, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 416
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextTestStatus_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_decContextZeroStatus_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_decContextZeroStatus_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_uprv_decContextZeroStatus_56 PROC			; COMDAT
; Line 426
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 427
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 428
	mov	eax, DWORD PTR _context$[ebp]
; Line 429
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_decContextZeroStatus_56 ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\tzrule.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB	; icu_56::AnnualTimeZoneRule::MAX_YEAR
_BSS	SEGMENT
?classID@?1??getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::InitialTimeZoneRule::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::AnnualTimeZoneRule::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::TimeArrayTimeZoneRule::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB DD 07fffffffH	; icu_56::AnnualTimeZoneRule::MAX_YEAR
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??1TimeZoneRule@icu_56@@UAE@XZ			; icu_56::TimeZoneRule::~TimeZoneRule
PUBLIC	??_GTimeZoneRule@icu_56@@UAEPAXI@Z		; icu_56::TimeZoneRule::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTimeZoneRule@icu_56@@UAEPAXI@Z PROC			; icu_56::TimeZoneRule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTimeZoneRule@icu_56@@UAEPAXI@Z ENDP			; icu_56::TimeZoneRule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ETimeZoneRule@icu_56@@UAEPAXI@Z		; icu_56::TimeZoneRule::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ETimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETimeZoneRule@icu_56@@UAEPAXI@Z PROC			; icu_56::TimeZoneRule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1TimeZoneRule@icu_56@@UAE@XZ	; icu_56::TimeZoneRule::~TimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	76					; 0000004cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETimeZoneRule@icu_56@@UAEPAXI@Z ENDP			; icu_56::TimeZoneRule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1InitialTimeZoneRule@icu_56@@UAE@XZ		; icu_56::InitialTimeZoneRule::~InitialTimeZoneRule
PUBLIC	??_GInitialTimeZoneRule@icu_56@@UAEPAXI@Z	; icu_56::InitialTimeZoneRule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GInitialTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GInitialTimeZoneRule@icu_56@@UAEPAXI@Z PROC		; icu_56::InitialTimeZoneRule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InitialTimeZoneRule@icu_56@@UAE@XZ	; icu_56::InitialTimeZoneRule::~InitialTimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInitialTimeZoneRule@icu_56@@UAEPAXI@Z ENDP		; icu_56::InitialTimeZoneRule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EInitialTimeZoneRule@icu_56@@UAEPAXI@Z	; icu_56::InitialTimeZoneRule::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EInitialTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EInitialTimeZoneRule@icu_56@@UAEPAXI@Z PROC		; icu_56::InitialTimeZoneRule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1InitialTimeZoneRule@icu_56@@UAE@XZ ; icu_56::InitialTimeZoneRule::~InitialTimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	76					; 0000004cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InitialTimeZoneRule@icu_56@@UAE@XZ	; icu_56::InitialTimeZoneRule::~InitialTimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EInitialTimeZoneRule@icu_56@@UAEPAXI@Z ENDP		; icu_56::InitialTimeZoneRule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1AnnualTimeZoneRule@icu_56@@UAE@XZ		; icu_56::AnnualTimeZoneRule::~AnnualTimeZoneRule
PUBLIC	??_GAnnualTimeZoneRule@icu_56@@UAEPAXI@Z	; icu_56::AnnualTimeZoneRule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GAnnualTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GAnnualTimeZoneRule@icu_56@@UAEPAXI@Z PROC		; icu_56::AnnualTimeZoneRule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AnnualTimeZoneRule@icu_56@@UAE@XZ	; icu_56::AnnualTimeZoneRule::~AnnualTimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAnnualTimeZoneRule@icu_56@@UAEPAXI@Z ENDP		; icu_56::AnnualTimeZoneRule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EAnnualTimeZoneRule@icu_56@@UAEPAXI@Z	; icu_56::AnnualTimeZoneRule::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EAnnualTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EAnnualTimeZoneRule@icu_56@@UAEPAXI@Z PROC		; icu_56::AnnualTimeZoneRule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1AnnualTimeZoneRule@icu_56@@UAE@XZ ; icu_56::AnnualTimeZoneRule::~AnnualTimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AnnualTimeZoneRule@icu_56@@UAE@XZ	; icu_56::AnnualTimeZoneRule::~AnnualTimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EAnnualTimeZoneRule@icu_56@@UAEPAXI@Z ENDP		; icu_56::AnnualTimeZoneRule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule
PUBLIC	??_GTimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z	; icu_56::TimeArrayTimeZoneRule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z PROC	; icu_56::TimeArrayTimeZoneRule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ	; icu_56::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z ENDP	; icu_56::TimeArrayTimeZoneRule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ETimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z	; icu_56::TimeArrayTimeZoneRule::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ETimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z PROC	; icu_56::TimeArrayTimeZoneRule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ ; icu_56::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	344					; 00000158H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ	; icu_56::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z ENDP	; icu_56::TimeArrayTimeZoneRule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TimeZoneRule@icu_56@@6B@			; icu_56::TimeZoneRule::`vftable'
PUBLIC	??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z ; icu_56::TimeZoneRule::TimeZoneRule
PUBLIC	??_R4TimeZoneRule@icu_56@@6B@			; icu_56::TimeZoneRule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTimeZoneRule@icu_56@@@8			; icu_56::TimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R3TimeZoneRule@icu_56@@8			; icu_56::TimeZoneRule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZoneRule@icu_56@@8			; icu_56::TimeZoneRule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeZoneRule@icu_56@@8		; icu_56::TimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8TimeZoneRule@icu_56@@UBECABV01@@Z		; icu_56::TimeZoneRule::operator==
PUBLIC	??9TimeZoneRule@icu_56@@UBECABV01@@Z		; icu_56::TimeZoneRule::operator!=
PUBLIC	?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z ; icu_56::TimeZoneRule::isEquivalentTo
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\tzrule.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZoneRule@icu_56@@8 DD FLAT:??_R0?AVTimeZoneRule@icu_56@@@8 ; icu_56::TimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZoneRule@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZoneRule@icu_56@@8 ; icu_56::TimeZoneRule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZoneRule@icu_56@@8 DD 00H			; icu_56::TimeZoneRule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TimeZoneRule@icu_56@@6B@
rdata$r	SEGMENT
??_R4TimeZoneRule@icu_56@@6B@ DD 00H			; icu_56::TimeZoneRule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTimeZoneRule@icu_56@@@8
	DD	FLAT:??_R3TimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7TimeZoneRule@icu_56@@6B@
CONST	SEGMENT
??_7TimeZoneRule@icu_56@@6B@ DD FLAT:??_R4TimeZoneRule@icu_56@@6B@ ; icu_56::TimeZoneRule::`vftable'
	DD	FLAT:??_ETimeZoneRule@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:??8TimeZoneRule@icu_56@@UBECABV01@@Z
	DD	FLAT:??9TimeZoneRule@icu_56@@UBECABV01@@Z
	DD	FLAT:?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z$0
__ehfuncinfo$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z PROC ; icu_56::TimeZoneRule::TimeZoneRule, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneRule@icu_56@@6B@
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dstSavings$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 35
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z ENDP ; icu_56::TimeZoneRule::TimeZoneRule
PUBLIC	??0TimeZoneRule@icu_56@@IAE@ABV01@@Z		; icu_56::TimeZoneRule::TimeZoneRule
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z$0
__ehfuncinfo$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TimeZoneRule@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0TimeZoneRule@icu_56@@IAE@ABV01@@Z PROC		; icu_56::TimeZoneRule::TimeZoneRule, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneRule@icu_56@@6B@
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
; Line 39
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TimeZoneRule@icu_56@@IAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TimeZoneRule@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::TimeZoneRule::TimeZoneRule
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TimeZoneRule@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TimeZoneRule@icu_56@@UAE@XZ$0
__ehfuncinfo$??1TimeZoneRule@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1TimeZoneRule@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TimeZoneRule@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TimeZoneRule@icu_56@@UAE@XZ PROC			; icu_56::TimeZoneRule::~TimeZoneRule, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TimeZoneRule@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneRule@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TimeZoneRule@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1TimeZoneRule@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TimeZoneRule@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TimeZoneRule@icu_56@@UAE@XZ ENDP			; icu_56::TimeZoneRule::~TimeZoneRule
PUBLIC	??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZoneRule::operator=
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z PROC		; icu_56::TimeZoneRule::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _right$[ebp]
	je	SHORT $LN1@operator
; Line 47
	mov	eax, DWORD PTR _right$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
$LN1@operator:
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z ENDP		; icu_56::TimeZoneRule::operator=
_TEXT	ENDS
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8TimeZoneRule@icu_56@@UBECABV01@@Z
_TEXT	SEGMENT
tv87 = -205						; size = 1
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8TimeZoneRule@icu_56@@UBECABV01@@Z PROC		; icu_56::TimeZoneRule::operator==, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	je	SHORT $LN4@operator@2
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR _that$[ebp]
	add	ecx, 4
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+68]
	cmp	edx, DWORD PTR [ecx+68]
	jne	SHORT $LN3@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+72]
	cmp	edx, DWORD PTR [ecx+72]
	je	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	BYTE PTR tv87[ebp], 0
	jmp	SHORT $LN5@operator@2
$LN4@operator@2:
	mov	BYTE PTR tv87[ebp], 1
$LN5@operator@2:
	mov	al, BYTE PTR tv87[ebp]
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8TimeZoneRule@icu_56@@UBECABV01@@Z ENDP		; icu_56::TimeZoneRule::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??9TimeZoneRule@icu_56@@UBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZoneRule@icu_56@@UBECABV01@@Z PROC		; icu_56::TimeZoneRule::operator!=, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZoneRule@icu_56@@UBECABV01@@Z ENDP		; icu_56::TimeZoneRule::operator!=
_TEXT	ENDS
PUBLIC	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZoneRule::getName, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	mov	eax, DWORD PTR _name$[ebp]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZoneRule::getName
_TEXT	ENDS
PUBLIC	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ	; icu_56::TimeZoneRule::getRawOffset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ PROC		; icu_56::TimeZoneRule::getRawOffset, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ENDP		; icu_56::TimeZoneRule::getRawOffset
_TEXT	ENDS
PUBLIC	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ	; icu_56::TimeZoneRule::getDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ PROC		; icu_56::TimeZoneRule::getDSTSavings, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ENDP		; icu_56::TimeZoneRule::getDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z
_TEXT	SEGMENT
tv80 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z PROC	; icu_56::TimeZoneRule::isEquivalentTo, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	je	SHORT $LN4@isEquivale
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@isEquivale
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+68]
	cmp	eax, DWORD PTR [edx+68]
	jne	SHORT $LN3@isEquivale
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+72]
	cmp	eax, DWORD PTR [edx+72]
	je	SHORT $LN4@isEquivale
$LN3@isEquivale:
	mov	BYTE PTR tv80[ebp], 0
	jmp	SHORT $LN5@isEquivale
$LN4@isEquivale:
	mov	BYTE PTR tv80[ebp], 1
$LN5@isEquivale:
	mov	al, BYTE PTR tv80[ebp]
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z ENDP	; icu_56::TimeZoneRule::isEquivalentTo
_TEXT	ENDS
PUBLIC	?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::InitialTimeZoneRule::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ PROC ; icu_56::InitialTimeZoneRule::getStaticClassID, COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ ENDP ; icu_56::InitialTimeZoneRule::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ ; icu_56::InitialTimeZoneRule::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ PROC ; icu_56::InitialTimeZoneRule::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::InitialTimeZoneRule::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ ENDP ; icu_56::InitialTimeZoneRule::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7InitialTimeZoneRule@icu_56@@6B@		; icu_56::InitialTimeZoneRule::`vftable'
PUBLIC	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
PUBLIC	??_R4InitialTimeZoneRule@icu_56@@6B@		; icu_56::InitialTimeZoneRule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVInitialTimeZoneRule@icu_56@@@8		; icu_56::InitialTimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R3InitialTimeZoneRule@icu_56@@8		; icu_56::InitialTimeZoneRule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InitialTimeZoneRule@icu_56@@8		; icu_56::InitialTimeZoneRule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InitialTimeZoneRule@icu_56@@8	; icu_56::InitialTimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ	; icu_56::InitialTimeZoneRule::clone
PUBLIC	??8InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ; icu_56::InitialTimeZoneRule::operator==
PUBLIC	??9InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ; icu_56::InitialTimeZoneRule::operator!=
PUBLIC	?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ; icu_56::InitialTimeZoneRule::isEquivalentTo
PUBLIC	?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::InitialTimeZoneRule::getFirstStart
PUBLIC	?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::InitialTimeZoneRule::getFinalStart
PUBLIC	?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::InitialTimeZoneRule::getNextStart
PUBLIC	?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::InitialTimeZoneRule::getPreviousStart
;	COMDAT ??_R1A@?0A@EA@InitialTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InitialTimeZoneRule@icu_56@@8 DD FLAT:??_R0?AVInitialTimeZoneRule@icu_56@@@8 ; icu_56::InitialTimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InitialTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2InitialTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R2InitialTimeZoneRule@icu_56@@8 DD FLAT:??_R1A@?0A@EA@InitialTimeZoneRule@icu_56@@8 ; icu_56::InitialTimeZoneRule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZoneRule@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3InitialTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R3InitialTimeZoneRule@icu_56@@8 DD 00H		; icu_56::InitialTimeZoneRule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InitialTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVInitialTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVInitialTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::InitialTimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInitialTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4InitialTimeZoneRule@icu_56@@6B@
rdata$r	SEGMENT
??_R4InitialTimeZoneRule@icu_56@@6B@ DD 00H		; icu_56::InitialTimeZoneRule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInitialTimeZoneRule@icu_56@@@8
	DD	FLAT:??_R3InitialTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7InitialTimeZoneRule@icu_56@@6B@
CONST	SEGMENT
??_7InitialTimeZoneRule@icu_56@@6B@ DD FLAT:??_R4InitialTimeZoneRule@icu_56@@6B@ ; icu_56::InitialTimeZoneRule::`vftable'
	DD	FLAT:??_EInitialTimeZoneRule@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ
	DD	FLAT:??8InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
	DD	FLAT:??9InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
	DD	FLAT:?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z
	DD	FLAT:?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z
	DD	FLAT:?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z
	DD	FLAT:?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z
	DD	FLAT:?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z PROC ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dstSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z ; icu_56::TimeZoneRule::TimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7InitialTimeZoneRule@icu_56@@6B@
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ENDP ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
_TEXT	ENDS
PUBLIC	??0InitialTimeZoneRule@icu_56@@QAE@ABV01@@Z	; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0InitialTimeZoneRule@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_source$ = 8						; size = 4
??0InitialTimeZoneRule@icu_56@@QAE@ABV01@@Z PROC	; icu_56::InitialTimeZoneRule::InitialTimeZoneRule, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABV01@@Z	; icu_56::TimeZoneRule::TimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7InitialTimeZoneRule@icu_56@@6B@
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0InitialTimeZoneRule@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1InitialTimeZoneRule@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1InitialTimeZoneRule@icu_56@@UAE@XZ PROC		; icu_56::InitialTimeZoneRule::~InitialTimeZoneRule, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7InitialTimeZoneRule@icu_56@@6B@
; Line 106
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1InitialTimeZoneRule@icu_56@@UAE@XZ ENDP		; icu_56::InitialTimeZoneRule::~InitialTimeZoneRule
_TEXT	ENDS
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ$0
__ehfuncinfo$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T43206 = -236						; size = 4
$T43207 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ PROC	; icu_56::InitialTimeZoneRule::clone, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43207[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T43207[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43207[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABV01@@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T43206[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T43206[ebp]
; Line 111
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T43207[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ ENDP	; icu_56::InitialTimeZoneRule::clone
PUBLIC	??4InitialTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::InitialTimeZoneRule::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4InitialTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??4InitialTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::InitialTimeZoneRule::operator=, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _right$[ebp]
	je	SHORT $LN1@operator@3
; Line 116
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::TimeZoneRule::operator=
$LN1@operator@3:
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4InitialTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::InitialTimeZoneRule::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??8InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
_TEXT	SEGMENT
tv87 = -205						; size = 1
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z PROC ; icu_56::InitialTimeZoneRule::operator==, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	je	SHORT $LN4@operator@4
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator@4
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8TimeZoneRule@icu_56@@UBECABV01@@Z	; icu_56::TimeZoneRule::operator==
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN4@operator@4
$LN3@operator@4:
	mov	BYTE PTR tv87[ebp], 0
	jmp	SHORT $LN5@operator@4
$LN4@operator@4:
	mov	BYTE PTR tv87[ebp], 1
$LN5@operator@4:
	mov	al, BYTE PTR tv87[ebp]
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ENDP ; icu_56::InitialTimeZoneRule::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??9InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z PROC ; icu_56::InitialTimeZoneRule::operator!=, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ENDP ; icu_56::InitialTimeZoneRule::operator!=
_TEXT	ENDS
EXTRN	__imp_??9type_info@@QBE_NABV0@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z PROC ; icu_56::InitialTimeZoneRule::isEquivalentTo, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN3@isEquivale@2
; Line 136
	mov	al, 1
	jmp	SHORT $LN4@isEquivale@2
$LN3@isEquivale@2:
; Line 138
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@isEquivale@2
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z ; icu_56::TimeZoneRule::isEquivalentTo
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@isEquivale@2
$LN1@isEquivale@2:
; Line 139
	xor	al, al
	jmp	SHORT $LN4@isEquivale@2
$LN2@isEquivale@2:
; Line 141
	mov	al, 1
$LN4@isEquivale@2:
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ENDP ; icu_56::InitialTimeZoneRule::isEquivalentTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z PROC ; icu_56::InitialTimeZoneRule::getFirstStart, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	xor	al, al
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z ENDP ; icu_56::InitialTimeZoneRule::getFirstStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z PROC ; icu_56::InitialTimeZoneRule::getFinalStart, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	xor	al, al
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z ENDP ; icu_56::InitialTimeZoneRule::getFinalStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 4
?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z PROC ; icu_56::InitialTimeZoneRule::getNextStart, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 164
	xor	al, al
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z ENDP ; icu_56::InitialTimeZoneRule::getNextStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 4
?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z PROC ; icu_56::InitialTimeZoneRule::getPreviousStart, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	xor	al, al
; Line 174
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z ENDP ; icu_56::InitialTimeZoneRule::getPreviousStart
_TEXT	ENDS
PUBLIC	?getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::AnnualTimeZoneRule::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ PROC ; icu_56::AnnualTimeZoneRule::getStaticClassID, COMDAT
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ ENDP ; icu_56::AnnualTimeZoneRule::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@AnnualTimeZoneRule@icu_56@@UBEPAXXZ ; icu_56::AnnualTimeZoneRule::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@AnnualTimeZoneRule@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@AnnualTimeZoneRule@icu_56@@UBEPAXXZ PROC ; icu_56::AnnualTimeZoneRule::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@AnnualTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::AnnualTimeZoneRule::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@AnnualTimeZoneRule@icu_56@@UBEPAXXZ ENDP ; icu_56::AnnualTimeZoneRule::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7AnnualTimeZoneRule@icu_56@@6B@		; icu_56::AnnualTimeZoneRule::`vftable'
PUBLIC	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
PUBLIC	??_R4AnnualTimeZoneRule@icu_56@@6B@		; icu_56::AnnualTimeZoneRule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAnnualTimeZoneRule@icu_56@@@8		; icu_56::AnnualTimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R3AnnualTimeZoneRule@icu_56@@8		; icu_56::AnnualTimeZoneRule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AnnualTimeZoneRule@icu_56@@8		; icu_56::AnnualTimeZoneRule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AnnualTimeZoneRule@icu_56@@8	; icu_56::AnnualTimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ	; icu_56::AnnualTimeZoneRule::clone
PUBLIC	??8AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ; icu_56::AnnualTimeZoneRule::operator==
PUBLIC	??9AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ; icu_56::AnnualTimeZoneRule::operator!=
PUBLIC	?isEquivalentTo@AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ; icu_56::AnnualTimeZoneRule::isEquivalentTo
PUBLIC	?getFirstStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::AnnualTimeZoneRule::getFirstStart
PUBLIC	?getFinalStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::AnnualTimeZoneRule::getFinalStart
PUBLIC	?getNextStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::AnnualTimeZoneRule::getNextStart
PUBLIC	?getPreviousStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::AnnualTimeZoneRule::getPreviousStart
EXTRN	??0DateTimeRule@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::DateTimeRule::DateTimeRule
;	COMDAT ??_R1A@?0A@EA@AnnualTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AnnualTimeZoneRule@icu_56@@8 DD FLAT:??_R0?AVAnnualTimeZoneRule@icu_56@@@8 ; icu_56::AnnualTimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AnnualTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2AnnualTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R2AnnualTimeZoneRule@icu_56@@8 DD FLAT:??_R1A@?0A@EA@AnnualTimeZoneRule@icu_56@@8 ; icu_56::AnnualTimeZoneRule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZoneRule@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3AnnualTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R3AnnualTimeZoneRule@icu_56@@8 DD 00H		; icu_56::AnnualTimeZoneRule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2AnnualTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVAnnualTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::AnnualTimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAnnualTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AnnualTimeZoneRule@icu_56@@6B@
rdata$r	SEGMENT
??_R4AnnualTimeZoneRule@icu_56@@6B@ DD 00H		; icu_56::AnnualTimeZoneRule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAnnualTimeZoneRule@icu_56@@@8
	DD	FLAT:??_R3AnnualTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7AnnualTimeZoneRule@icu_56@@6B@
CONST	SEGMENT
??_7AnnualTimeZoneRule@icu_56@@6B@ DD FLAT:??_R4AnnualTimeZoneRule@icu_56@@6B@ ; icu_56::AnnualTimeZoneRule::`vftable'
	DD	FLAT:??_EAnnualTimeZoneRule@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@AnnualTimeZoneRule@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ
	DD	FLAT:??8AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
	DD	FLAT:??9AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
	DD	FLAT:?isEquivalentTo@AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z
	DD	FLAT:?getFirstStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z
	DD	FLAT:?getFinalStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z
	DD	FLAT:?getNextStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z
	DD	FLAT:?getPreviousStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z$1
__ehfuncinfo$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z
_TEXT	SEGMENT
tv92 = -244						; size = 4
$T43242 = -236						; size = 4
$T43243 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
_dateTimeRule$ = 20					; size = 4
_startYear$ = 24					; size = 4
_endYear$ = 28						; size = 4
??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule, COMDAT
; _this$ = ecx
; Line 188
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dstSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z ; icu_56::TimeZoneRule::TimeZoneRule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnnualTimeZoneRule@icu_56@@6B@
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43243[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T43243[ebp], 0
	je	SHORT $LN3@AnnualTime
	mov	eax, DWORD PTR _dateTimeRule$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43243[ebp]
	call	??0DateTimeRule@icu_56@@QAE@ABV01@@Z	; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN4@AnnualTime
$LN3@AnnualTime:
	mov	DWORD PTR tv92[ebp], 0
$LN4@AnnualTime:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T43242[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T43242[ebp]
	mov	DWORD PTR [edx+76], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _startYear$[ebp]
	mov	DWORD PTR [eax+80], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _endYear$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 189
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T43243[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z ENDP ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
PUBLIC	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
_dateTimeRule$ = 20					; size = 4
_startYear$ = 24					; size = 4
_endYear$ = 28						; size = 4
??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dstSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z ; icu_56::TimeZoneRule::TimeZoneRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnnualTimeZoneRule@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dateTimeRule$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _startYear$[ebp]
	mov	DWORD PTR [eax+80], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _endYear$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ENDP ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
_TEXT	ENDS
PUBLIC	??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z	; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv95 = -244						; size = 4
$T43259 = -236						; size = 4
$T43260 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABV01@@Z	; icu_56::TimeZoneRule::TimeZoneRule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnnualTimeZoneRule@icu_56@@6B@
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43260[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T43260[ebp], 0
	je	SHORT $LN3@AnnualTime@2
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	ecx, DWORD PTR $T43260[ebp]
	call	??0DateTimeRule@icu_56@@QAE@ABV01@@Z	; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN4@AnnualTime@2
$LN3@AnnualTime@2:
	mov	DWORD PTR tv95[ebp], 0
$LN4@AnnualTime@2:
	mov	edx, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T43259[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T43259[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
; Line 204
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
__unwindfunclet$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T43260[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AnnualTimeZoneRule@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AnnualTimeZoneRule@icu_56@@UAE@XZ$0
__ehfuncinfo$??1AnnualTimeZoneRule@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AnnualTimeZoneRule@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AnnualTimeZoneRule@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv85 = -244						; size = 4
$T43273 = -236						; size = 4
$T43274 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AnnualTimeZoneRule@icu_56@@UAE@XZ PROC		; icu_56::AnnualTimeZoneRule::~AnnualTimeZoneRule, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AnnualTimeZoneRule@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnnualTimeZoneRule@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T43274[ebp], ecx
	mov	edx, DWORD PTR $T43274[ebp]
	mov	DWORD PTR $T43273[ebp], edx
	cmp	DWORD PTR $T43273[ebp], 0
	je	SHORT $LN3@AnnualTime@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T43273[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T43273[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN1@AnnualTime@3
$LN3@AnnualTime@3:
	mov	DWORD PTR tv85[ebp], 0
$LN1@AnnualTime@3:
; Line 208
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AnnualTimeZoneRule@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
__ehhandler$??1AnnualTimeZoneRule@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AnnualTimeZoneRule@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AnnualTimeZoneRule@icu_56@@UAE@XZ ENDP		; icu_56::AnnualTimeZoneRule::~AnnualTimeZoneRule
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ$0
__ehfuncinfo$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T43286 = -236						; size = 4
$T43287 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ PROC	; icu_56::AnnualTimeZoneRule::clone, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 212
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43287[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T43287[ebp], 0
	je	SHORT $LN3@clone@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43287[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABV01@@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone@2
$LN3@clone@2:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone@2:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T43286[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T43286[ebp]
; Line 213
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T43287[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@AnnualTimeZoneRule@icu_56@@UBEPAV12@XZ ENDP	; icu_56::AnnualTimeZoneRule::clone
PUBLIC	??4AnnualTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::AnnualTimeZoneRule::operator=
EXTRN	?clone@DateTimeRule@icu_56@@QBEPAV12@XZ:PROC	; icu_56::DateTimeRule::clone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4AnnualTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv86 = -232						; size = 4
$T43299 = -224						; size = 4
$T43300 = -212						; size = 4
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??4AnnualTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::AnnualTimeZoneRule::operator=, COMDAT
; _this$ = ecx
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _right$[ebp]
	je	$LN1@operator@5
; Line 218
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::TimeZoneRule::operator=
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T43300[ebp], ecx
	mov	edx, DWORD PTR $T43300[ebp]
	mov	DWORD PTR $T43299[ebp], edx
	cmp	DWORD PTR $T43299[ebp], 0
	je	SHORT $LN4@operator@5
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T43299[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T43299[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN5@operator@5
$LN4@operator@5:
	mov	DWORD PTR tv86[ebp], 0
$LN5@operator@5:
; Line 220
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?clone@DateTimeRule@icu_56@@QBEPAV12@XZ	; icu_56::DateTimeRule::clone
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
$LN1@operator@5:
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
; Line 225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4AnnualTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::AnnualTimeZoneRule::operator=
_TEXT	ENDS
EXTRN	??8DateTimeRule@icu_56@@QBECABV01@@Z:PROC	; icu_56::DateTimeRule::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
_TEXT	SEGMENT
tv95 = -217						; size = 1
_atzr$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z PROC ; icu_56::AnnualTimeZoneRule::operator==, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN2@operator@6
; Line 230
	mov	al, 1
	jmp	$LN3@operator@6
$LN2@operator@6:
; Line 232
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@operator@6
; Line 233
	xor	al, al
	jmp	SHORT $LN3@operator@6
$LN1@operator@6:
; Line 235
	mov	eax, DWORD PTR _that$[ebp]
	mov	DWORD PTR _atzr$[ebp], eax
; Line 238
	mov	eax, DWORD PTR _atzr$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+76]
	call	??8DateTimeRule@icu_56@@QBECABV01@@Z	; icu_56::DateTimeRule::operator==
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _atzr$[ebp]
	mov	eax, DWORD PTR [ecx+80]
	cmp	eax, DWORD PTR [edx+80]
	jne	SHORT $LN5@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _atzr$[ebp]
	mov	eax, DWORD PTR [ecx+84]
	cmp	eax, DWORD PTR [edx+84]
	jne	SHORT $LN5@operator@6
	mov	BYTE PTR tv95[ebp], 1
	jmp	SHORT $LN6@operator@6
$LN5@operator@6:
	mov	BYTE PTR tv95[ebp], 0
$LN6@operator@6:
	mov	al, BYTE PTR tv95[ebp]
$LN3@operator@6:
; Line 239
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ENDP ; icu_56::AnnualTimeZoneRule::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??9AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z PROC ; icu_56::AnnualTimeZoneRule::operator!=, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 243
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ENDP ; icu_56::AnnualTimeZoneRule::operator!=
_TEXT	ENDS
PUBLIC	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ PROC ; icu_56::AnnualTimeZoneRule::getRule, COMDAT
; _this$ = ecx
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ENDP ; icu_56::AnnualTimeZoneRule::getRule
_TEXT	ENDS
PUBLIC	?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ	; icu_56::AnnualTimeZoneRule::getStartYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ PROC	; icu_56::AnnualTimeZoneRule::getStartYear, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
; Line 254
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ENDP	; icu_56::AnnualTimeZoneRule::getStartYear
_TEXT	ENDS
PUBLIC	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ	; icu_56::AnnualTimeZoneRule::getEndYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ PROC	; icu_56::AnnualTimeZoneRule::getEndYear, COMDAT
; _this$ = ecx
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+84]
; Line 259
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ENDP	; icu_56::AnnualTimeZoneRule::getEndYear
_TEXT	ENDS
PUBLIC	__real@4194997000000000
PUBLIC	?isLeapYear@Grego@icu_56@@SACH@Z		; icu_56::Grego::isLeapYear
PUBLIC	?monthLength@Grego@icu_56@@SACHH@Z		; icu_56::Grego::monthLength
PUBLIC	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
EXTRN	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ:PROC ; icu_56::DateTimeRule::getTimeRuleType
EXTRN	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleMillisInDay
EXTRN	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleDayOfWeek
EXTRN	?dayOfWeek@Grego@icu_56@@SAHN@Z:PROC		; icu_56::Grego::dayOfWeek
EXTRN	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleWeekInMonth
EXTRN	?fieldsToDay@Grego@icu_56@@SANHHH@Z:PROC	; icu_56::Grego::fieldsToDay
EXTRN	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ:PROC	; icu_56::DateTimeRule::getRuleMonth
EXTRN	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleDayOfMonth
EXTRN	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ:PROC ; icu_56::DateTimeRule::getDateRuleType
EXTRN	__fltused:DWORD
;	COMDAT __real@4194997000000000
CONST	SEGMENT
__real@4194997000000000 DQ 04194997000000000r	; 8.64e+007
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z
_TEXT	SEGMENT
tv263 = -316						; size = 4
tv277 = -312						; size = 8
tv234 = -308						; size = 4
tv222 = -308						; size = 4
tv179 = -308						; size = 4
tv176 = -308						; size = 4
_delta$36183 = -108					; size = 4
_dow$36182 = -96					; size = 4
_dom$36179 = -84					; size = 4
_month$36178 = -72					; size = 4
_weeks$36174 = -60					; size = 4
_after$36172 = -45					; size = 1
_type$ = -36						; size = 4
_ruleDay$ = -24						; size = 8
_this$ = -8						; size = 4
_year$ = 8						; size = 4
_prevRawOffset$ = 12					; size = 4
_prevDSTSavings$ = 16					; size = 4
_result$ = 20						; size = 4
?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z PROC ; icu_56::AnnualTimeZoneRule::getStartInYear, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jl	SHORT $LN13@getStartIn
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	cmp	ecx, DWORD PTR [eax+84]
	jle	SHORT $LN14@getStartIn
$LN13@getStartIn:
; Line 267
	xor	al, al
	jmp	$LN15@getStartIn
$LN14@getStartIn:
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	mov	DWORD PTR _type$[ebp], eax
; Line 271
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN12@getStartIn
; Line 272
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+76]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR _ruleDay$[ebp]
; Line 273
	jmp	$LN11@getStartIn
$LN12@getStartIn:
; Line 274
	mov	BYTE PTR _after$36172[ebp], 1
; Line 275
	cmp	DWORD PTR _type$[ebp], 1
	jne	$LN10@getStartIn
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleWeekInMonth
	mov	DWORD PTR _weeks$36174[ebp], eax
; Line 278
	cmp	DWORD PTR _weeks$36174[ebp], 0
	jle	SHORT $LN9@getStartIn
; Line 279
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR _ruleDay$[ebp]
; Line 280
	mov	eax, DWORD PTR _weeks$36174[ebp]
	sub	eax, 1
	imul	eax, 7
	mov	DWORD PTR tv222[ebp], eax
	fild	DWORD PTR tv222[ebp]
	fadd	QWORD PTR _ruleDay$[ebp]
	fstp	QWORD PTR _ruleDay$[ebp]
; Line 281
	jmp	SHORT $LN8@getStartIn
$LN9@getStartIn:
; Line 282
	mov	BYTE PTR _after$36172[ebp], 0
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	edx, al
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR _ruleDay$[ebp]
; Line 285
	mov	eax, DWORD PTR _weeks$36174[ebp]
	add	eax, 1
	imul	eax, 7
	mov	DWORD PTR tv234[ebp], eax
	fild	DWORD PTR tv234[ebp]
	fadd	QWORD PTR _ruleDay$[ebp]
	fstp	QWORD PTR _ruleDay$[ebp]
$LN8@getStartIn:
; Line 287
	jmp	SHORT $LN7@getStartIn
$LN10@getStartIn:
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	mov	DWORD PTR _month$36178[ebp], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	mov	DWORD PTR _dom$36179[ebp], eax
; Line 290
	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN5@getStartIn
; Line 291
	mov	BYTE PTR _after$36172[ebp], 0
; Line 293
	cmp	DWORD PTR _month$36178[ebp], 1
	jne	SHORT $LN5@getStartIn
	cmp	DWORD PTR _dom$36179[ebp], 29		; 0000001dH
	jne	SHORT $LN5@getStartIn
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@getStartIn
; Line 294
	mov	eax, DWORD PTR _dom$36179[ebp]
	sub	eax, 1
	mov	DWORD PTR _dom$36179[ebp], eax
$LN5@getStartIn:
; Line 297
	mov	eax, DWORD PTR _dom$36179[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$36178[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR _ruleDay$[ebp]
$LN7@getStartIn:
; Line 299
	sub	esp, 8
	fld	QWORD PTR _ruleDay$[ebp]
	fstp	QWORD PTR [esp]
	call	?dayOfWeek@Grego@icu_56@@SAHN@Z		; icu_56::Grego::dayOfWeek
	add	esp, 8
	mov	DWORD PTR _dow$36182[ebp], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	sub	eax, DWORD PTR _dow$36182[ebp]
	mov	DWORD PTR _delta$36183[ebp], eax
; Line 301
	movsx	eax, BYTE PTR _after$36172[ebp]
	test	eax, eax
	je	SHORT $LN4@getStartIn
; Line 302
	cmp	DWORD PTR _delta$36183[ebp], 0
	jge	SHORT $LN17@getStartIn
	mov	eax, DWORD PTR _delta$36183[ebp]
	add	eax, 7
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN18@getStartIn
$LN17@getStartIn:
	mov	ecx, DWORD PTR _delta$36183[ebp]
	mov	DWORD PTR tv176[ebp], ecx
$LN18@getStartIn:
	mov	edx, DWORD PTR tv176[ebp]
	mov	DWORD PTR _delta$36183[ebp], edx
; Line 303
	jmp	SHORT $LN3@getStartIn
$LN4@getStartIn:
; Line 304
	cmp	DWORD PTR _delta$36183[ebp], 0
	jle	SHORT $LN19@getStartIn
	mov	eax, DWORD PTR _delta$36183[ebp]
	sub	eax, 7
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN20@getStartIn
$LN19@getStartIn:
	mov	ecx, DWORD PTR _delta$36183[ebp]
	mov	DWORD PTR tv179[ebp], ecx
$LN20@getStartIn:
	mov	edx, DWORD PTR tv179[ebp]
	mov	DWORD PTR _delta$36183[ebp], edx
$LN3@getStartIn:
; Line 306
	fild	DWORD PTR _delta$36183[ebp]
	fadd	QWORD PTR _ruleDay$[ebp]
	fstp	QWORD PTR _ruleDay$[ebp]
$LN11@getStartIn:
; Line 309
	fld	QWORD PTR _ruleDay$[ebp]
	fmul	QWORD PTR __real@4194997000000000
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	fstp	QWORD PTR tv277[ebp]
	call	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMillisInDay
	mov	DWORD PTR tv263[ebp], eax
	fild	DWORD PTR tv263[ebp]
	fadd	QWORD PTR tv277[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	fstp	QWORD PTR [ecx]
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ ; icu_56::DateTimeRule::getTimeRuleType
	cmp	eax, 2
	je	SHORT $LN2@getStartIn
; Line 311
	fild	DWORD PTR _prevRawOffset$[ebp]
	mov	eax, DWORD PTR _result$[ebp]
	fsubr	QWORD PTR [eax]
	mov	ecx, DWORD PTR _result$[ebp]
	fstp	QWORD PTR [ecx]
$LN2@getStartIn:
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	call	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ ; icu_56::DateTimeRule::getTimeRuleType
	test	eax, eax
	jne	SHORT $LN1@getStartIn
; Line 314
	fild	DWORD PTR _prevDSTSavings$[ebp]
	mov	eax, DWORD PTR _result$[ebp]
	fsubr	QWORD PTR [eax]
	mov	ecx, DWORD PTR _result$[ebp]
	fstp	QWORD PTR [ecx]
$LN1@getStartIn:
; Line 316
	mov	al, 1
$LN15@getStartIn:
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ENDP ; icu_56::AnnualTimeZoneRule::getStartInYear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isLeapYear@Grego@icu_56@@SACH@Z
_TEXT	SEGMENT
tv70 = -193						; size = 1
_year$ = 8						; size = 4
?isLeapYear@Grego@icu_56@@SACH@Z PROC			; icu_56::Grego::isLeapYear, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 260
	mov	eax, DWORD PTR _year$[ebp]
	and	eax, 3
	jne	SHORT $LN4@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 400				; 00000190H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@isLeapYear
$LN3@isLeapYear:
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@isLeapYear
$LN4@isLeapYear:
	mov	BYTE PTR tv70[ebp], 0
$LN5@isLeapYear:
	mov	al, BYTE PTR tv70[ebp]
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLeapYear@Grego@icu_56@@SACH@Z ENDP			; icu_56::Grego::isLeapYear
_TEXT	ENDS
EXTRN	?MONTH_LENGTH@Grego@icu_56@@0QBCB:BYTE		; icu_56::Grego::MONTH_LENGTH
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?monthLength@Grego@icu_56@@SACHH@Z
_TEXT	SEGMENT
_year$ = 8						; size = 4
_month$ = 12						; size = 4
?monthLength@Grego@icu_56@@SACHH@Z PROC			; icu_56::Grego::monthLength, COMDAT
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 265
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _month$[ebp]
	mov	al, BYTE PTR ?MONTH_LENGTH@Grego@icu_56@@0QBCB[edx+ecx]
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?monthLength@Grego@icu_56@@SACHH@Z ENDP			; icu_56::Grego::monthLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isEquivalentTo@AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z
_TEXT	SEGMENT
tv136 = -217						; size = 1
_that$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?isEquivalentTo@AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z PROC ; icu_56::AnnualTimeZoneRule::isEquivalentTo, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\tzrule.cpp
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN3@isEquivale@3
; Line 322
	mov	al, 1
	jmp	$LN4@isEquivale@3
$LN3@isEquivale@3:
; Line 324
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@isEquivale@3
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z ; icu_56::TimeZoneRule::isEquivalentTo
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@isEquivale@3
$LN1@isEquivale@3:
; Line 325
	xor	al, al
	jmp	SHORT $LN4@isEquivale@3
$LN2@isEquivale@3:
; Line 327
	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR _that$[ebp], eax
; Line 330
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+76]
	call	??8DateTimeRule@icu_56@@QBECABV01@@Z	; icu_56::DateTimeRule::operator==
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@isEquivale@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [ecx+80]
	cmp	eax, DWORD PTR [edx+80]
	jne	SHORT $LN6@isEquivale@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [ecx+84]
	cmp	eax, DWORD PTR [edx+84]
	jne	SHORT $LN6@isEquivale@3
	mov	BYTE PTR tv136[ebp], 1
	jmp	SHORT $LN7@isEquivale@3
$LN6@isEquivale@3:
	mov	BYTE PTR tv136[ebp], 0
$LN7@isEquivale@3:
	mov	al, BYTE PTR tv136[ebp]
$LN4@isEquivale@3:
; Line 331
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isEquivalentTo@AnnualTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ENDP ; icu_56::AnnualTimeZoneRule::isEquivalentTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFirstStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevRawOffset$ = 8					; size = 4
_prevDSTSavings$ = 12					; size = 4
_result$ = 16						; size = 4
?getFirstStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z PROC ; icu_56::AnnualTimeZoneRule::getFirstStart, COMDAT
; _this$ = ecx
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 337
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
; Line 338
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getFirstStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z ENDP ; icu_56::AnnualTimeZoneRule::getFirstStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFinalStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevRawOffset$ = 8					; size = 4
_prevDSTSavings$ = 12					; size = 4
_result$ = 16						; size = 4
?getFinalStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z PROC ; icu_56::AnnualTimeZoneRule::getFinalStart, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 2147483647		; 7fffffffH
	jne	SHORT $LN1@getFinalSt
; Line 345
	xor	al, al
	jmp	SHORT $LN2@getFinalSt
$LN1@getFinalSt:
; Line 347
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
$LN2@getFinalSt:
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getFinalStart@AnnualTimeZoneRule@icu_56@@UBECHHAAN@Z ENDP ; icu_56::AnnualTimeZoneRule::getFinalStart
_TEXT	ENDS
EXTRN	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z:PROC	; icu_56::Grego::timeToFields
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNextStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z
_TEXT	SEGMENT
_tmp$ = -96						; size = 8
_mid$ = -80						; size = 4
_doy$ = -68						; size = 4
_dow$ = -56						; size = 4
_dom$ = -44						; size = 4
_month$ = -32						; size = 4
_year$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_prevRawOffset$ = 16					; size = 4
_prevDSTSavings$ = 20					; size = 4
_inclusive$ = 24					; size = 1
_result$ = 28						; size = 4
?getNextStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z PROC ; icu_56::AnnualTimeZoneRule::getNextStart, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 357
	lea	eax, DWORD PTR _mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 358
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN5@getNextSta
; Line 359
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@getNextSta
$LN5@getNextSta:
; Line 362
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@getNextSta
; Line 363
	fld	QWORD PTR _base$[ebp]
	fcomp	QWORD PTR _tmp$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN2@getNextSta
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	jne	SHORT $LN3@getNextSta
	fld	QWORD PTR _tmp$[ebp]
	fld	QWORD PTR _base$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@getNextSta
$LN2@getNextSta:
; Line 365
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _year$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
	jmp	SHORT $LN6@getNextSta
; Line 366
	jmp	SHORT $LN1@getNextSta
$LN3@getNextSta:
; Line 367
	mov	eax, DWORD PTR _result$[ebp]
	fld	QWORD PTR _tmp$[ebp]
	fstp	QWORD PTR [eax]
; Line 368
	mov	al, 1
	jmp	SHORT $LN6@getNextSta
$LN1@getNextSta:
; Line 371
	xor	al, al
$LN6@getNextSta:
; Line 372
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@getNextSta
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN16@getNextSta:
	DD	7
	DD	$LN15@getNextSta
$LN15@getNextSta:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@getNextSta
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@getNextSta
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@getNextSta
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN11@getNextSta
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN12@getNextSta
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN13@getNextSta
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN14@getNextSta
$LN14@getNextSta:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN13@getNextSta:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN12@getNextSta:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN11@getNextSta:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN10@getNextSta:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN9@getNextSta:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN8@getNextSta:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
?getNextStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z ENDP ; icu_56::AnnualTimeZoneRule::getNextStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPreviousStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z
_TEXT	SEGMENT
_tmp$ = -96						; size = 8
_mid$ = -80						; size = 4
_doy$ = -68						; size = 4
_dow$ = -56						; size = 4
_dom$ = -44						; size = 4
_month$ = -32						; size = 4
_year$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_prevRawOffset$ = 16					; size = 4
_prevDSTSavings$ = 20					; size = 4
_inclusive$ = 24					; size = 1
_result$ = 28						; size = 4
?getPreviousStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z PROC ; icu_56::AnnualTimeZoneRule::getPreviousStart, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 381
	lea	eax, DWORD PTR _mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	cmp	ecx, DWORD PTR [eax+84]
	jle	SHORT $LN5@getPreviou
; Line 383
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@getPreviou
$LN5@getPreviou:
; Line 386
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@getPreviou
; Line 387
	fld	QWORD PTR _base$[ebp]
	fcomp	QWORD PTR _tmp$[ebp]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN2@getPreviou
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	jne	SHORT $LN3@getPreviou
	fld	QWORD PTR _tmp$[ebp]
	fld	QWORD PTR _base$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@getPreviou
$LN2@getPreviou:
; Line 389
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _year$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getStartInYear@AnnualTimeZoneRule@icu_56@@QBECHHHAAN@Z ; icu_56::AnnualTimeZoneRule::getStartInYear
	jmp	SHORT $LN6@getPreviou
; Line 390
	jmp	SHORT $LN1@getPreviou
$LN3@getPreviou:
; Line 391
	mov	eax, DWORD PTR _result$[ebp]
	fld	QWORD PTR _tmp$[ebp]
	fstp	QWORD PTR [eax]
; Line 392
	mov	al, 1
	jmp	SHORT $LN6@getPreviou
$LN1@getPreviou:
; Line 395
	xor	al, al
$LN6@getPreviou:
; Line 396
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@getPreviou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN16@getPreviou:
	DD	7
	DD	$LN15@getPreviou
$LN15@getPreviou:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@getPreviou
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@getPreviou
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@getPreviou
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN11@getPreviou
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN12@getPreviou
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN13@getPreviou
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN14@getPreviou
$LN14@getPreviou:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN13@getPreviou:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN12@getPreviou:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN11@getPreviou:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN10@getPreviou:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN9@getPreviou:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN8@getPreviou:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
?getPreviousStart@AnnualTimeZoneRule@icu_56@@UBECNHHCAAN@Z ENDP ; icu_56::AnnualTimeZoneRule::getPreviousStart
_TEXT	ENDS
PUBLIC	?getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::TimeArrayTimeZoneRule::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ PROC ; icu_56::TimeArrayTimeZoneRule::getStaticClassID, COMDAT
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ ENDP ; icu_56::TimeArrayTimeZoneRule::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@TimeArrayTimeZoneRule@icu_56@@UBEPAXXZ ; icu_56::TimeArrayTimeZoneRule::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@TimeArrayTimeZoneRule@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@TimeArrayTimeZoneRule@icu_56@@UBEPAXXZ PROC ; icu_56::TimeArrayTimeZoneRule::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@TimeArrayTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::TimeArrayTimeZoneRule::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@TimeArrayTimeZoneRule@icu_56@@UBEPAXXZ ENDP ; icu_56::TimeArrayTimeZoneRule::getDynamicClassID
_TEXT	ENDS
PUBLIC	?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z ; icu_56::TimeArrayTimeZoneRule::initStartTimes
PUBLIC	??_7TimeArrayTimeZoneRule@icu_56@@6B@		; icu_56::TimeArrayTimeZoneRule::`vftable'
PUBLIC	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
PUBLIC	??_R4TimeArrayTimeZoneRule@icu_56@@6B@		; icu_56::TimeArrayTimeZoneRule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8	; icu_56::TimeArrayTimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R3TimeArrayTimeZoneRule@icu_56@@8		; icu_56::TimeArrayTimeZoneRule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeArrayTimeZoneRule@icu_56@@8		; icu_56::TimeArrayTimeZoneRule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeArrayTimeZoneRule@icu_56@@8	; icu_56::TimeArrayTimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ ; icu_56::TimeArrayTimeZoneRule::clone
PUBLIC	??8TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::operator==
PUBLIC	??9TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::operator!=
PUBLIC	?isEquivalentTo@TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ; icu_56::TimeArrayTimeZoneRule::isEquivalentTo
PUBLIC	?getFirstStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::TimeArrayTimeZoneRule::getFirstStart
PUBLIC	?getFinalStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::TimeArrayTimeZoneRule::getFinalStart
PUBLIC	?getNextStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::TimeArrayTimeZoneRule::getNextStart
PUBLIC	?getPreviousStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::TimeArrayTimeZoneRule::getPreviousStart
;	COMDAT ??_R1A@?0A@EA@TimeArrayTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeArrayTimeZoneRule@icu_56@@8 DD FLAT:??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8 ; icu_56::TimeArrayTimeZoneRule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeArrayTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeArrayTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R2TimeArrayTimeZoneRule@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeArrayTimeZoneRule@icu_56@@8 ; icu_56::TimeArrayTimeZoneRule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZoneRule@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeArrayTimeZoneRule@icu_56@@8
rdata$r	SEGMENT
??_R3TimeArrayTimeZoneRule@icu_56@@8 DD 00H		; icu_56::TimeArrayTimeZoneRule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2TimeArrayTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeArrayTimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeArrayTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TimeArrayTimeZoneRule@icu_56@@6B@
rdata$r	SEGMENT
??_R4TimeArrayTimeZoneRule@icu_56@@6B@ DD 00H		; icu_56::TimeArrayTimeZoneRule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8
	DD	FLAT:??_R3TimeArrayTimeZoneRule@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7TimeArrayTimeZoneRule@icu_56@@6B@
CONST	SEGMENT
??_7TimeArrayTimeZoneRule@icu_56@@6B@ DD FLAT:??_R4TimeArrayTimeZoneRule@icu_56@@6B@ ; icu_56::TimeArrayTimeZoneRule::`vftable'
	DD	FLAT:??_ETimeArrayTimeZoneRule@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@TimeArrayTimeZoneRule@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ
	DD	FLAT:??8TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
	DD	FLAT:??9TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
	DD	FLAT:?isEquivalentTo@TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z
	DD	FLAT:?getFirstStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z
	DD	FLAT:?getFinalStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z
	DD	FLAT:?getNextStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z
	DD	FLAT:?getPreviousStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z$0
__ehfuncinfo$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z
_TEXT	SEGMENT
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
_startTimes$ = 20					; size = 4
_numStartTimes$ = 24					; size = 4
_timeRuleType$ = 28					; size = 4
??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z PROC ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule, COMDAT
; _this$ = ecx
; Line 407
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dstSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABVUnicodeString@1@HH@Z ; icu_56::TimeZoneRule::TimeZoneRule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeArrayTimeZoneRule@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timeRuleType$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 408
	mov	DWORD PTR _status$[ebp], 0
; Line 409
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numStartTimes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _startTimes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z ; icu_56::TimeArrayTimeZoneRule::initStartTimes
; Line 411
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@TimeArrayT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN7@TimeArrayT:
	DD	1
	DD	$LN6@TimeArrayT
$LN6@TimeArrayT:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@TimeArrayT
$LN4@TimeArrayT:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
__ehhandler$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ENDP ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
PUBLIC	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z	; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z PROC	; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZoneRule@icu_56@@IAE@ABV01@@Z	; icu_56::TimeZoneRule::TimeZoneRule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeArrayTimeZoneRule@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 416
	mov	DWORD PTR _status$[ebp], 0
; Line 417
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z ; icu_56::TimeArrayTimeZoneRule::initStartTimes
; Line 419
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@TimeArrayT@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@TimeArrayT@2:
	DD	1
	DD	$LN6@TimeArrayT@2
$LN6@TimeArrayT@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@TimeArrayT@2
$LN4@TimeArrayT@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
__ehhandler$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ PROC		; icu_56::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule, COMDAT
; _this$ = ecx
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeArrayTimeZoneRule@icu_56@@6B@
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@TimeArrayT@3
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], eax
	je	SHORT $LN2@TimeArrayT@3
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@TimeArrayT@3:
; Line 426
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneRule@icu_56@@UAE@XZ		; icu_56::TimeZoneRule::~TimeZoneRule
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TimeArrayTimeZoneRule@icu_56@@UAE@XZ ENDP		; icu_56::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ$0
__ehfuncinfo$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T43395 = -236						; size = 4
$T43396 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ PROC	; icu_56::TimeArrayTimeZoneRule::clone, COMDAT
; _this$ = ecx
; Line 429
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 430
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43396[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T43396[ebp], 0
	je	SHORT $LN3@clone@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43396[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABV01@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone@3
$LN3@clone@3:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone@3:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T43395[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T43395[ebp]
; Line 431
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T43396[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@TimeArrayTimeZoneRule@icu_56@@UBEPAV12@XZ ENDP	; icu_56::TimeArrayTimeZoneRule::clone
PUBLIC	??4TimeArrayTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeArrayTimeZoneRule::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TimeArrayTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_status$36290 = -20					; size = 4
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??4TimeArrayTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::TimeArrayTimeZoneRule::operator=, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 436
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _right$[ebp]
	je	SHORT $LN1@operator@7
; Line 437
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZoneRule@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::TimeZoneRule::operator=
; Line 438
	mov	DWORD PTR _status$36290[ebp], 0
; Line 439
	lea	eax, DWORD PTR _status$36290[ebp]
	push	eax
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z ; icu_56::TimeArrayTimeZoneRule::initStartTimes
; Line 441
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
$LN1@operator@7:
; Line 443
	mov	eax, DWORD PTR _this$[ebp]
; Line 444
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@operator@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN6@operator@7:
	DD	1
	DD	$LN5@operator@7
$LN5@operator@7:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@operator@7
$LN4@operator@7:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
??4TimeArrayTimeZoneRule@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::TimeArrayTimeZoneRule::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??8TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
_TEXT	SEGMENT
_i$36303 = -44						; size = 4
_res$ = -29						; size = 1
_tatzr$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z PROC ; icu_56::TimeArrayTimeZoneRule::operator==, COMDAT
; _this$ = ecx
; Line 447
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN9@operator@8
; Line 449
	mov	al, 1
	jmp	$LN10@operator@8
$LN9@operator@8:
; Line 451
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@operator@8
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8TimeZoneRule@icu_56@@UBECABV01@@Z	; icu_56::TimeZoneRule::operator==
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@operator@8
$LN7@operator@8:
; Line 452
	xor	al, al
	jmp	SHORT $LN10@operator@8
$LN8@operator@8:
; Line 454
	mov	eax, DWORD PTR _that$[ebp]
	mov	DWORD PTR _tatzr$[ebp], eax
; Line 456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tatzr$[ebp]
	mov	edx, DWORD PTR [eax+76]
	cmp	edx, DWORD PTR [ecx+76]
	jne	SHORT $LN5@operator@8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tatzr$[ebp]
	mov	edx, DWORD PTR [eax+80]
	cmp	edx, DWORD PTR [ecx+80]
	je	SHORT $LN6@operator@8
$LN5@operator@8:
; Line 457
	xor	al, al
	jmp	SHORT $LN10@operator@8
$LN6@operator@8:
; Line 460
	mov	BYTE PTR _res$[ebp], 1
; Line 461
	mov	DWORD PTR _i$36303[ebp], 0
	jmp	SHORT $LN4@operator@8
$LN3@operator@8:
	mov	eax, DWORD PTR _i$36303[ebp]
	add	eax, 1
	mov	DWORD PTR _i$36303[ebp], eax
$LN4@operator@8:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$36303[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN2@operator@8
; Line 462
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _tatzr$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	edx, DWORD PTR _i$36303[ebp]
	mov	esi, DWORD PTR _i$36303[ebp]
	fld	QWORD PTR [ecx+edx*8]
	fld	QWORD PTR [eax+esi*8]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@operator@8
; Line 463
	mov	BYTE PTR _res$[ebp], 0
; Line 464
	jmp	SHORT $LN2@operator@8
$LN1@operator@8:
; Line 466
	jmp	SHORT $LN3@operator@8
$LN2@operator@8:
; Line 467
	mov	al, BYTE PTR _res$[ebp]
$LN10@operator@8:
; Line 468
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ENDP ; icu_56::TimeArrayTimeZoneRule::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??9TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z PROC ; icu_56::TimeArrayTimeZoneRule::operator!=, COMDAT
; _this$ = ecx
; Line 471
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 473
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@1@@Z ENDP ; icu_56::TimeArrayTimeZoneRule::operator!=
_TEXT	ENDS
PUBLIC	?getTimeType@TimeArrayTimeZoneRule@icu_56@@QBE?AW4TimeRuleType@DateTimeRule@2@XZ ; icu_56::TimeArrayTimeZoneRule::getTimeType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTimeType@TimeArrayTimeZoneRule@icu_56@@QBE?AW4TimeRuleType@DateTimeRule@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getTimeType@TimeArrayTimeZoneRule@icu_56@@QBE?AW4TimeRuleType@DateTimeRule@2@XZ PROC ; icu_56::TimeArrayTimeZoneRule::getTimeType, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
; Line 478
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getTimeType@TimeArrayTimeZoneRule@icu_56@@QBE?AW4TimeRuleType@DateTimeRule@2@XZ ENDP ; icu_56::TimeArrayTimeZoneRule::getTimeType
_TEXT	ENDS
PUBLIC	?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z ; icu_56::TimeArrayTimeZoneRule::getStartTimeAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_result$ = 12						; size = 4
?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z PROC ; icu_56::TimeArrayTimeZoneRule::getStartTimeAt, COMDAT
; _this$ = ecx
; Line 481
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN1@getStartTi
	cmp	DWORD PTR _index$[ebp], 0
	jge	SHORT $LN2@getStartTi
$LN1@getStartTi:
; Line 483
	xor	al, al
	jmp	SHORT $LN3@getStartTi
$LN2@getStartTi:
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	fld	QWORD PTR [ecx+eax*8]
	fstp	QWORD PTR [edx]
; Line 486
	mov	al, 1
$LN3@getStartTi:
; Line 487
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z ENDP ; icu_56::TimeArrayTimeZoneRule::getStartTimeAt
_TEXT	ENDS
PUBLIC	?countStartTimes@TimeArrayTimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeArrayTimeZoneRule::countStartTimes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countStartTimes@TimeArrayTimeZoneRule@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countStartTimes@TimeArrayTimeZoneRule@icu_56@@QBEHXZ PROC ; icu_56::TimeArrayTimeZoneRule::countStartTimes, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 491
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
; Line 492
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?countStartTimes@TimeArrayTimeZoneRule@icu_56@@QBEHXZ ENDP ; icu_56::TimeArrayTimeZoneRule::countStartTimes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isEquivalentTo@TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z
_TEXT	SEGMENT
_i$36339 = -44						; size = 4
_res$ = -29						; size = 1
_that$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?isEquivalentTo@TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z PROC ; icu_56::TimeArrayTimeZoneRule::isEquivalentTo, COMDAT
; _this$ = ecx
; Line 495
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN9@isEquivale@4
; Line 497
	mov	al, 1
	jmp	$LN10@isEquivale@4
$LN9@isEquivale@4:
; Line 499
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@isEquivale@4
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z ; icu_56::TimeZoneRule::isEquivalentTo
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@isEquivale@4
$LN7@isEquivale@4:
; Line 500
	xor	al, al
	jmp	SHORT $LN10@isEquivale@4
$LN8@isEquivale@4:
; Line 502
	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR _that$[ebp], eax
; Line 504
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+76]
	cmp	edx, DWORD PTR [ecx+76]
	jne	SHORT $LN5@isEquivale@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [eax+80]
	cmp	edx, DWORD PTR [ecx+80]
	je	SHORT $LN6@isEquivale@4
$LN5@isEquivale@4:
; Line 505
	xor	al, al
	jmp	SHORT $LN10@isEquivale@4
$LN6@isEquivale@4:
; Line 508
	mov	BYTE PTR _res$[ebp], 1
; Line 509
	mov	DWORD PTR _i$36339[ebp], 0
	jmp	SHORT $LN4@isEquivale@4
$LN3@isEquivale@4:
	mov	eax, DWORD PTR _i$36339[ebp]
	add	eax, 1
	mov	DWORD PTR _i$36339[ebp], eax
$LN4@isEquivale@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$36339[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN2@isEquivale@4
; Line 510
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	edx, DWORD PTR _i$36339[ebp]
	mov	esi, DWORD PTR _i$36339[ebp]
	fld	QWORD PTR [ecx+edx*8]
	fld	QWORD PTR [eax+esi*8]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@isEquivale@4
; Line 511
	mov	BYTE PTR _res$[ebp], 0
; Line 512
	jmp	SHORT $LN2@isEquivale@4
$LN1@isEquivale@4:
; Line 514
	jmp	SHORT $LN3@isEquivale@4
$LN2@isEquivale@4:
; Line 515
	mov	al, BYTE PTR _res$[ebp]
$LN10@isEquivale@4:
; Line 516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isEquivalentTo@TimeArrayTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ENDP ; icu_56::TimeArrayTimeZoneRule::isEquivalentTo
_TEXT	ENDS
PUBLIC	?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z	; icu_56::TimeArrayTimeZoneRule::getUTC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFirstStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevRawOffset$ = 8					; size = 4
_prevDSTSavings$ = 12					; size = 4
_result$ = 16						; size = 4
?getFirstStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z PROC ; icu_56::TimeArrayTimeZoneRule::getFirstStart, COMDAT
; _this$ = ecx
; Line 521
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 522
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jle	SHORT $LN1@getFirstSt
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN2@getFirstSt
$LN1@getFirstSt:
; Line 523
	xor	al, al
	jmp	SHORT $LN3@getFirstSt
$LN2@getFirstSt:
; Line 525
	mov	eax, DWORD PTR _prevDSTSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevRawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	sub	esp, 8
	fld	QWORD PTR [eax]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z ; icu_56::TimeArrayTimeZoneRule::getUTC
	mov	ecx, DWORD PTR _result$[ebp]
	fstp	QWORD PTR [ecx]
; Line 526
	mov	al, 1
$LN3@getFirstSt:
; Line 527
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getFirstStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z ENDP ; icu_56::TimeArrayTimeZoneRule::getFirstStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFinalStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevRawOffset$ = 8					; size = 4
_prevDSTSavings$ = 12					; size = 4
_result$ = 16						; size = 4
?getFinalStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z PROC ; icu_56::TimeArrayTimeZoneRule::getFinalStart, COMDAT
; _this$ = ecx
; Line 532
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jle	SHORT $LN1@getFinalSt@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN2@getFinalSt@2
$LN1@getFinalSt@2:
; Line 534
	xor	al, al
	jmp	SHORT $LN3@getFinalSt@2
$LN2@getFinalSt@2:
; Line 536
	mov	eax, DWORD PTR _prevDSTSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevRawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	sub	esp, 8
	fld	QWORD PTR [edx+eax*8-8]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z ; icu_56::TimeArrayTimeZoneRule::getUTC
	mov	eax, DWORD PTR _result$[ebp]
	fstp	QWORD PTR [eax]
; Line 537
	mov	al, 1
$LN3@getFinalSt@2:
; Line 538
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getFinalStart@TimeArrayTimeZoneRule@icu_56@@UBECHHAAN@Z ENDP ; icu_56::TimeArrayTimeZoneRule::getFinalStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNextStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z
_TEXT	SEGMENT
_time$36372 = -36					; size = 8
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_prevRawOffset$ = 16					; size = 4
_prevDSTSavings$ = 20					; size = 4
_inclusive$ = 24					; size = 1
_result$ = 28						; size = 4
?getNextStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z PROC ; icu_56::TimeArrayTimeZoneRule::getNextStart, COMDAT
; _this$ = ecx
; Line 545
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 546
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN6@getNextSta@2
$LN5@getNextSta@2:
; Line 547
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@getNextSta@2:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN4@getNextSta@2
; Line 548
	mov	eax, DWORD PTR _prevDSTSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevRawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+ecx*8]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z ; icu_56::TimeArrayTimeZoneRule::getUTC
	fstp	QWORD PTR _time$36372[ebp]
; Line 549
	fld	QWORD PTR _base$[ebp]
	fcomp	QWORD PTR _time$36372[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN2@getNextSta@2
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	jne	SHORT $LN3@getNextSta@2
	fld	QWORD PTR _time$36372[ebp]
	fld	QWORD PTR _base$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@getNextSta@2
$LN2@getNextSta@2:
; Line 550
	jmp	SHORT $LN4@getNextSta@2
$LN3@getNextSta@2:
; Line 552
	mov	eax, DWORD PTR _result$[ebp]
	fld	QWORD PTR _time$36372[ebp]
	fstp	QWORD PTR [eax]
; Line 553
	jmp	SHORT $LN5@getNextSta@2
$LN4@getNextSta@2:
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	sub	ecx, 1
	cmp	DWORD PTR _i$[ebp], ecx
	jne	SHORT $LN1@getNextSta@2
; Line 555
	xor	al, al
	jmp	SHORT $LN7@getNextSta@2
$LN1@getNextSta@2:
; Line 557
	mov	al, 1
$LN7@getNextSta@2:
; Line 558
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getNextStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z ENDP ; icu_56::TimeArrayTimeZoneRule::getNextStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPreviousStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z
_TEXT	SEGMENT
_time$36388 = -36					; size = 8
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_prevRawOffset$ = 16					; size = 4
_prevDSTSavings$ = 20					; size = 4
_inclusive$ = 24					; size = 1
_result$ = 28						; size = 4
?getPreviousStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z PROC ; icu_56::TimeArrayTimeZoneRule::getPreviousStart, COMDAT
; _this$ = ecx
; Line 565
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN5@getPreviou@2
$LN4@getPreviou@2:
; Line 567
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@getPreviou@2:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN3@getPreviou@2
; Line 568
	mov	eax, DWORD PTR _prevDSTSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevRawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax+ecx*8]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z ; icu_56::TimeArrayTimeZoneRule::getUTC
	fstp	QWORD PTR _time$36388[ebp]
; Line 569
	fld	QWORD PTR _base$[ebp]
	fcomp	QWORD PTR _time$36388[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN1@getPreviou@2
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	je	SHORT $LN2@getPreviou@2
	fld	QWORD PTR _time$36388[ebp]
	fld	QWORD PTR _base$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@getPreviou@2
$LN1@getPreviou@2:
; Line 570
	mov	eax, DWORD PTR _result$[ebp]
	fld	QWORD PTR _time$36388[ebp]
	fstp	QWORD PTR [eax]
; Line 571
	mov	al, 1
	jmp	SHORT $LN6@getPreviou@2
$LN2@getPreviou@2:
; Line 573
	jmp	SHORT $LN4@getPreviou@2
$LN3@getPreviou@2:
; Line 574
	xor	al, al
$LN6@getPreviou@2:
; Line 575
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getPreviousStart@TimeArrayTimeZoneRule@icu_56@@UBECNHHCAAN@Z ENDP ; icu_56::TimeArrayTimeZoneRule::getPreviousStart
_TEXT	ENDS
EXTRN	_uprv_sortArray_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_source$ = 8						; size = 4
_size$ = 12						; size = 4
_status$ = 16						; size = 4
?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z PROC ; icu_56::TimeArrayTimeZoneRule::initStartTimes, COMDAT
; _this$ = ecx
; Line 581
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 583
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN6@initStartT
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], eax
	je	SHORT $LN6@initStartT
; Line 584
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN6@initStartT:
; Line 587
	cmp	DWORD PTR _size$[ebp], 32		; 00000020H
	jle	SHORT $LN5@initStartT
; Line 588
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 589
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN4@initStartT
; Line 590
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 591
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 592
	xor	al, al
	jmp	$LN7@initStartT
$LN4@initStartT:
; Line 594
	jmp	SHORT $LN3@initStartT
$LN5@initStartT:
; Line 595
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
$LN3@initStartT:
; Line 597
	push	1
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _size$[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 600
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	push	OFFSET _compareDates
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 601
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initStartT
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN1@initStartT
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], eax
	je	SHORT $LN1@initStartT
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@initStartT:
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 606
	xor	al, al
	jmp	SHORT $LN7@initStartT
$LN2@initStartT:
; Line 608
	mov	al, 1
$LN7@initStartT:
; Line 609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?initStartTimes@TimeArrayTimeZoneRule@icu_56@@AAECQBNHAAW4UErrorCode@@@Z ENDP ; icu_56::TimeArrayTimeZoneRule::initStartTimes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _compareDates
_TEXT	SEGMENT
tv66 = -244						; size = 4
tv67 = -240						; size = 4
_res$ = -40						; size = 4
_r$ = -28						; size = 8
_l$ = -12						; size = 8
___formal$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
_compareDates PROC					; COMDAT
; File d:\mozilla\intl\icu\source\i18n\tzrule.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 24
	mov	eax, DWORD PTR _left$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _l$[ebp]
; Line 25
	mov	eax, DWORD PTR _right$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _r$[ebp]
; Line 26
	fld	QWORD PTR _r$[ebp]
	fcomp	QWORD PTR _l$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@compareDat
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN6@compareDat
$LN5@compareDat:
	fld	QWORD PTR _l$[ebp]
	fld	QWORD PTR _r$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@compareDat
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@compareDat
$LN3@compareDat:
	mov	DWORD PTR tv66[ebp], 1
$LN4@compareDat:
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv67[ebp], eax
$LN6@compareDat:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _res$[ebp], ecx
; Line 27
	mov	eax, DWORD PTR _res$[ebp]
; Line 28
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_compareDates ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_time$ = 8						; size = 8
_raw$ = 16						; size = 4
_dst$ = 20						; size = 4
?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z PROC	; icu_56::TimeArrayTimeZoneRule::getUTC, COMDAT
; _this$ = ecx
; Line 612
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 613
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 2
	je	SHORT $LN2@getUTC
; Line 614
	fild	DWORD PTR _raw$[ebp]
	fsubr	QWORD PTR _time$[ebp]
	fstp	QWORD PTR _time$[ebp]
$LN2@getUTC:
; Line 616
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN1@getUTC
; Line 617
	fild	DWORD PTR _dst$[ebp]
	fsubr	QWORD PTR _time$[ebp]
	fstp	QWORD PTR _time$[ebp]
$LN1@getUTC:
; Line 619
	fld	QWORD PTR _time$[ebp]
; Line 620
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getUTC@TimeArrayTimeZoneRule@icu_56@@ABENNHH@Z ENDP	; icu_56::TimeArrayTimeZoneRule::getUTC
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\anytrans.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::AnyTransliterator::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_ANY	DW	041H
	DW	06eH
	DW	079H
	DW	00H
_NULL_ID DW	04eH
	DW	075H
	DW	06cH
	DW	06cH
	DW	00H
	ORG $+2
_LATIN_PIVOT DW	02dH
	DW	04cH
	DW	061H
	DW	074H
	DW	069H
	DW	06eH
	DW	03bH
	DW	04cH
	DW	061H
	DW	074H
	DW	069H
	DW	06eH
	DW	02dH
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ; icu_56::Transliterator::getMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ PROC ; icu_56::Transliterator::getMaximumContextLength, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\translit.h
; Line 1313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1314
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 1315
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ENDP ; icu_56::Transliterator::getMaximumContextLength
_TEXT	ENDS
PUBLIC	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::setID, COMDAT
; _this$ = ecx
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	esi, esp
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1320
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::setID
_TEXT	ENDS
PUBLIC	?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ; icu_56::Transliterator::integerToken
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_i$ = 8							; size = 4
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z PROC ; icu_56::Transliterator::integerToken, COMDAT
; Line 1325
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1327
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1328
	mov	eax, DWORD PTR _t$[ebp]
; Line 1329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@integerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@integerTok:
	DD	1
	DD	$LN4@integerTok
$LN4@integerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@integerTok
$LN3@integerTok:
	DB	116					; 00000074H
	DB	0
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ENDP ; icu_56::Transliterator::integerToken
_TEXT	ENDS
PUBLIC	?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ; icu_56::Transliterator::pointerToken
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_p$ = 8							; size = 4
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z PROC ; icu_56::Transliterator::pointerToken, COMDAT
; Line 1331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1333
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1334
	mov	eax, DWORD PTR _t$[ebp]
; Line 1335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@pointerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@pointerTok:
	DD	1
	DD	$LN4@pointerTok
$LN4@pointerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@pointerTok
$LN3@pointerTok:
	DB	116					; 00000074H
	DB	0
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ENDP ; icu_56::Transliterator::pointerToken
_TEXT	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; File d:\mozilla\intl\icu\source\common\uinvchar.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	??0ScriptRunIterator@icu_56@@QAE@ABVReplaceable@1@HH@Z ; icu_56::ScriptRunIterator::ScriptRunIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScriptRunIterator@icu_56@@QAE@ABVReplaceable@1@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_theText$ = 8						; size = 4
_myStart$ = 12						; size = 4
_myLimit$ = 16						; size = 4
??0ScriptRunIterator@icu_56@@QAE@ABVReplaceable@1@HH@Z PROC ; icu_56::ScriptRunIterator::ScriptRunIterator, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\anytrans.cpp
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _theText$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _myStart$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _myLimit$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _myStart$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0ScriptRunIterator@icu_56@@QAE@ABVReplaceable@1@HH@Z ENDP ; icu_56::ScriptRunIterator::ScriptRunIterator
_TEXT	ENDS
PUBLIC	?next@ScriptRunIterator@icu_56@@QAECXZ		; icu_56::ScriptRunIterator::next
EXTRN	_uscript_getScript_56:PROC
EXTRN	__imp_?char32At@Replaceable@icu_56@@QBEHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@ScriptRunIterator@icu_56@@QAECXZ
_TEXT	SEGMENT
_ec$ = -44						; size = 4
_s$ = -32						; size = 4
_ch$ = -20						; size = 4
_this$ = -8						; size = 4
?next@ScriptRunIterator@icu_56@@QAECXZ PROC		; icu_56::ScriptRunIterator::next, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 127
	mov	DWORD PTR _ec$[ebp], 0
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+16], edx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN11@next
; Line 134
	xor	al, al
	jmp	$LN13@next
$LN11@next:
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+4]
	jle	SHORT $LN6@next
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$[ebp], eax
; Line 141
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	call	_uscript_getScript_56
	add	esp, 8
	mov	DWORD PTR _s$[ebp], eax
; Line 142
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN8@next
	cmp	DWORD PTR _s$[ebp], 1
	jne	SHORT $LN9@next
$LN8@next:
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 144
	jmp	SHORT $LN7@next
$LN9@next:
; Line 145
	jmp	SHORT $LN6@next
$LN7@next:
; Line 147
	jmp	SHORT $LN11@next
$LN6@next:
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN5@next
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$[ebp], eax
; Line 153
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	call	_uscript_getScript_56
	add	esp, 8
	mov	DWORD PTR _s$[ebp], eax
; Line 154
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN4@next
	cmp	DWORD PTR _s$[ebp], 1
	je	SHORT $LN4@next
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], -1
	jne	SHORT $LN3@next
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN4@next
$LN3@next:
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	je	SHORT $LN4@next
; Line 158
	jmp	SHORT $LN5@next
$LN4@next:
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 162
	jmp	SHORT $LN6@next
$LN5@next:
; Line 166
	mov	al, 1
$LN13@next:
; Line 167
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@next
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@next:
	DD	1
	DD	$LN16@next
$LN16@next:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN15@next
$LN15@next:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?next@ScriptRunIterator@icu_56@@QAECXZ ENDP		; icu_56::ScriptRunIterator::next
_TEXT	ENDS
PUBLIC	?adjustLimit@ScriptRunIterator@icu_56@@QAEXH@Z	; icu_56::ScriptRunIterator::adjustLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adjustLimit@ScriptRunIterator@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_delta$ = 8						; size = 4
?adjustLimit@ScriptRunIterator@icu_56@@QAEXH@Z PROC	; icu_56::ScriptRunIterator::adjustLimit, COMDAT
; _this$ = ecx
; Line 169
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR _delta$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR _delta$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?adjustLimit@ScriptRunIterator@icu_56@@QAEXH@Z ENDP	; icu_56::ScriptRunIterator::adjustLimit
_TEXT	ENDS
PUBLIC	?getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ ; icu_56::AnyTransliterator::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ PROC ; icu_56::AnyTransliterator::getStaticClassID, COMDAT
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ ENDP ; icu_56::AnyTransliterator::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@AnyTransliterator@icu_56@@UBEPAXXZ ; icu_56::AnyTransliterator::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@AnyTransliterator@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@AnyTransliterator@icu_56@@UBEPAXXZ PROC ; icu_56::AnyTransliterator::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@AnyTransliterator@icu_56@@SAPAXXZ ; icu_56::AnyTransliterator::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@AnyTransliterator@icu_56@@UBEPAXXZ ENDP ; icu_56::AnyTransliterator::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7AnyTransliterator@icu_56@@6B@		; icu_56::AnyTransliterator::`vftable'
PUBLIC	??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::AnyTransliterator::AnyTransliterator
PUBLIC	??_R4AnyTransliterator@icu_56@@6B@		; icu_56::AnyTransliterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAnyTransliterator@icu_56@@@8		; icu_56::AnyTransliterator `RTTI Type Descriptor'
PUBLIC	??_R3AnyTransliterator@icu_56@@8		; icu_56::AnyTransliterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AnyTransliterator@icu_56@@8		; icu_56::AnyTransliterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AnyTransliterator@icu_56@@8	; icu_56::AnyTransliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Transliterator@icu_56@@8		; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTransliterator@icu_56@@@8		; icu_56::Transliterator `RTTI Type Descriptor'
PUBLIC	??_R3Transliterator@icu_56@@8			; icu_56::Transliterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Transliterator@icu_56@@8			; icu_56::Transliterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ ; icu_56::AnyTransliterator::clone
PUBLIC	?handleTransliterate@AnyTransliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::AnyTransliterator::handleTransliterate
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	??1Transliterator@icu_56@@UAE@XZ:PROC		; icu_56::Transliterator::~Transliterator
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	_uhash_setValueDeleter_56:PROC
EXTRN	_uhash_open_56:PROC
EXTRN	_uhash_hashLong_56:PROC
EXTRN	_uhash_compareLong_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z:PROC ; icu_56::Transliterator::Transliterator
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EAnyTransliterator@icu_56@@UAEPAXI@Z:PROC	; icu_56::AnyTransliterator::`vector deleting destructor'
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z:PROC ; icu_56::Transliterator::finishTransliteration
EXTRN	?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z:PROC ; icu_56::Transliterator::filteredTransliterate
EXTRN	?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z:PROC ; icu_56::Transliterator::filteredTransliterate
EXTRN	?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ:PROC ; icu_56::Transliterator::getID
EXTRN	?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::Transliterator::toRules
EXTRN	?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z:PROC ; icu_56::Transliterator::handleGetSourceSet
EXTRN	?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z:PROC ; icu_56::Transliterator::getTargetSet
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R2Transliterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Transliterator@icu_56@@8 ; icu_56::Transliterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R3Transliterator@icu_56@@8 DD 00H			; icu_56::Transliterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Transliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTransliterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Transliterator@icu_56@@8 DD FLAT:??_R0?AVTransliterator@icu_56@@@8 ; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AnyTransliterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AnyTransliterator@icu_56@@8 DD FLAT:??_R0?AVAnyTransliterator@icu_56@@@8 ; icu_56::AnyTransliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AnyTransliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2AnyTransliterator@icu_56@@8
rdata$r	SEGMENT
??_R2AnyTransliterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@AnyTransliterator@icu_56@@8 ; icu_56::AnyTransliterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Transliterator@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3AnyTransliterator@icu_56@@8
rdata$r	SEGMENT
??_R3AnyTransliterator@icu_56@@8 DD 00H			; icu_56::AnyTransliterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2AnyTransliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAnyTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVAnyTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::AnyTransliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAnyTransliterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AnyTransliterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4AnyTransliterator@icu_56@@6B@ DD 00H		; icu_56::AnyTransliterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAnyTransliterator@icu_56@@@8
	DD	FLAT:??_R3AnyTransliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7AnyTransliterator@icu_56@@6B@
CONST	SEGMENT
??_7AnyTransliterator@icu_56@@6B@ DD FLAT:??_R4AnyTransliterator@icu_56@@6B@ ; icu_56::AnyTransliterator::`vftable'
	DD	FLAT:??_EAnyTransliterator@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@AnyTransliterator@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z
	DD	FLAT:?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z
	DD	FLAT:?handleTransliterate@AnyTransliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
	DD	FLAT:?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
	DD	FLAT:?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
	DD	FLAT:?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ
	DD	FLAT:?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z
	DD	FLAT:?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_theTarget$ = 12					; size = 4
_theVariant$ = 16					; size = 4
_theTargetScript$ = 20					; size = 4
_ec$ = 24						; size = 4
??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z PROC ; icu_56::AnyTransliterator::AnyTransliterator, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnyTransliterator@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _theTargetScript$[ebp]
	mov	DWORD PTR [eax+144], ecx
; Line 187
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareLong_56
	push	OFFSET _uhash_hashLong_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 188
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@AnyTransli
; Line 189
	jmp	SHORT $LN3@AnyTransli
$LN2@AnyTransli:
; Line 191
	push	OFFSET __deleteTransliterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_uhash_setValueDeleter_56
	add	esp, 8
; Line 193
	mov	esi, esp
	mov	eax, DWORD PTR _theTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 194
	mov	esi, esp
	mov	ecx, DWORD PTR _theVariant$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN3@AnyTransli
; Line 195
	mov	esi, esp
	mov	eax, DWORD PTR _theVariant$[ebp]
	push	eax
	mov	edi, esp
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@AnyTransli:
; Line 197
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__unwindfunclet$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z ENDP ; icu_56::AnyTransliterator::AnyTransliterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __deleteTransliterator
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T77227 = -212						; size = 4
$T77228 = -200						; size = 4
_obj$ = 8						; size = 4
__deleteTransliterator PROC				; COMDAT
; File d:\mozilla\intl\icu\source\i18n\anytrans.cpp
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR $T77228[ebp], eax
	mov	ecx, DWORD PTR $T77228[ebp]
	mov	DWORD PTR $T77227[ebp], ecx
	cmp	DWORD PTR $T77227[ebp], 0
	je	SHORT $LN3@deleteTran
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77227[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77227[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@deleteTran
$LN3@deleteTran:
	mov	DWORD PTR tv74[ebp], 0
$LN1@deleteTran:
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__deleteTransliterator ENDP
_TEXT	ENDS
PUBLIC	??1AnyTransliterator@icu_56@@UAE@XZ		; icu_56::AnyTransliterator::~AnyTransliterator
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GAnyTransliterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GAnyTransliterator@icu_56@@UAEPAXI@Z PROC		; icu_56::AnyTransliterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AnyTransliterator@icu_56@@UAE@XZ	; icu_56::AnyTransliterator::~AnyTransliterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAnyTransliterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::AnyTransliterator::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_uhash_close_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AnyTransliterator@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AnyTransliterator@icu_56@@UAE@XZ$0
__ehfuncinfo$??1AnyTransliterator@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AnyTransliterator@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AnyTransliterator@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AnyTransliterator@icu_56@@UAE@XZ PROC		; icu_56::AnyTransliterator::~AnyTransliterator, COMDAT
; _this$ = ecx
; Line 199
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AnyTransliterator@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnyTransliterator@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_uhash_close_56
	add	esp, 4
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AnyTransliterator@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??1AnyTransliterator@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AnyTransliterator@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AnyTransliterator@icu_56@@UAE@XZ ENDP		; icu_56::AnyTransliterator::~AnyTransliterator
PUBLIC	??0AnyTransliterator@icu_56@@QAE@ABV01@@Z	; icu_56::AnyTransliterator::AnyTransliterator
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	??0Transliterator@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::Transliterator::Transliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AnyTransliterator@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_ec$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_o$ = 8							; size = 4
??0AnyTransliterator@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AnyTransliterator::AnyTransliterator, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABV01@@Z	; icu_56::Transliterator::Transliterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AnyTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _o$[ebp]
	add	eax, 80					; 00000050H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR [eax+144], edx
; Line 212
	mov	DWORD PTR _ec$[ebp], 0
; Line 213
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareLong_56
	push	OFFSET _uhash_hashLong_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 214
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@AnyTransli@2
; Line 215
	jmp	SHORT $LN2@AnyTransli@2
$LN1@AnyTransli@2:
; Line 217
	push	OFFSET __deleteTransliterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_uhash_setValueDeleter_56
	add	esp, 8
$LN2@AnyTransli@2:
; Line 218
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@AnyTransli@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN9@AnyTransli@2:
	DD	1
	DD	$LN8@AnyTransli@2
$LN8@AnyTransli@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@AnyTransli@2
$LN6@AnyTransli@2:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__unwindfunclet$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AnyTransliterator@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AnyTransliterator@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AnyTransliterator::AnyTransliterator
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0
__ehfuncinfo$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T77258 = -236						; size = 4
$T77259 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ PROC ; icu_56::AnyTransliterator::clone, COMDAT
; _this$ = ecx
; Line 223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 224
	mov	esi, esp
	push	148					; 00000094H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77259[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T77259[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T77259[ebp]
	call	??0AnyTransliterator@icu_56@@QAE@ABV01@@Z ; icu_56::AnyTransliterator::AnyTransliterator
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T77258[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T77258[ebp]
; Line 225
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T77259[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@AnyTransliterator@icu_56@@UBEPAVTransliterator@2@XZ ENDP ; icu_56::AnyTransliterator::clone
PUBLIC	?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z ; icu_56::AnyTransliterator::getTransliterator
EXTRN	_uprv_min_56:PROC
EXTRN	_uprv_max_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleTransliterate@AnyTransliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
_TEXT	SEGMENT
tv84 = -309						; size = 1
_delta$70367 = -112					; size = 4
_limit$70366 = -100					; size = 4
_incremental$70365 = -85				; size = 1
_t$70363 = -76						; size = 4
_it$ = -64						; size = 24
_allLimit$ = -32					; size = 4
_allStart$ = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
_isIncremental$ = 16					; size = 1
?handleTransliterate@AnyTransliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z PROC ; icu_56::AnyTransliterator::handleTransliterate, COMDAT
; _this$ = ecx
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 232
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _allStart$[ebp], ecx
; Line 233
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _allLimit$[ebp], ecx
; Line 235
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0ScriptRunIterator@icu_56@@QAE@ABVReplaceable@1@HH@Z ; icu_56::ScriptRunIterator::ScriptRunIterator
$LN5@handleTran:
; Line 237
	lea	ecx, DWORD PTR _it$[ebp]
	call	?next@ScriptRunIterator@icu_56@@QAECXZ	; icu_56::ScriptRunIterator::next
	movsx	eax, al
	test	eax, eax
	je	$LN4@handleTran
; Line 239
	mov	eax, DWORD PTR _it$[ebp+20]
	cmp	eax, DWORD PTR _allStart$[ebp]
	jg	SHORT $LN3@handleTran
	jmp	SHORT $LN5@handleTran
$LN3@handleTran:
; Line 243
	mov	eax, DWORD PTR _it$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z ; icu_56::AnyTransliterator::getTransliterator
	mov	DWORD PTR _t$70363[ebp], eax
; Line 245
	cmp	DWORD PTR _t$70363[ebp], 0
	jne	SHORT $LN2@handleTran
; Line 248
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _it$[ebp+20]
	mov	DWORD PTR [eax+8], ecx
; Line 249
	jmp	SHORT $LN5@handleTran
$LN2@handleTran:
; Line 255
	movsx	eax, BYTE PTR _isIncremental$[ebp]
	test	eax, eax
	je	SHORT $LN8@handleTran
	mov	ecx, DWORD PTR _it$[ebp+20]
	cmp	ecx, DWORD PTR _allLimit$[ebp]
	jl	SHORT $LN8@handleTran
	mov	BYTE PTR tv84[ebp], 1
	jmp	SHORT $LN9@handleTran
$LN8@handleTran:
	mov	BYTE PTR tv84[ebp], 0
$LN9@handleTran:
	mov	dl, BYTE PTR tv84[ebp]
	mov	BYTE PTR _incremental$70365[ebp], dl
; Line 257
	mov	eax, DWORD PTR _it$[ebp+16]
	push	eax
	mov	ecx, DWORD PTR _allStart$[ebp]
	push	ecx
	call	_uprv_max_56
	add	esp, 8
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 258
	mov	eax, DWORD PTR _it$[ebp+20]
	push	eax
	mov	ecx, DWORD PTR _allLimit$[ebp]
	push	ecx
	call	_uprv_min_56
	add	esp, 8
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 259
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _limit$70366[ebp], ecx
; Line 260
	mov	esi, esp
	movzx	eax, BYTE PTR _incremental$70365[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$70363[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _t$70363[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 261
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _limit$70366[ebp]
	mov	DWORD PTR _delta$70367[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _allLimit$[ebp]
	add	eax, DWORD PTR _delta$70367[ebp]
	mov	DWORD PTR _allLimit$[ebp], eax
; Line 263
	mov	eax, DWORD PTR _delta$70367[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	?adjustLimit@ScriptRunIterator@icu_56@@QAEXH@Z ; icu_56::ScriptRunIterator::adjustLimit
; Line 266
	mov	eax, DWORD PTR _it$[ebp+20]
	cmp	eax, DWORD PTR _allLimit$[ebp]
	jl	SHORT $LN1@handleTran
	jmp	SHORT $LN4@handleTran
$LN1@handleTran:
; Line 267
	jmp	$LN5@handleTran
$LN4@handleTran:
; Line 271
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _allLimit$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 272
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@handleTran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN14@handleTran:
	DD	1
	DD	$LN13@handleTran
$LN13@handleTran:
	DD	-64					; ffffffc0H
	DD	24					; 00000018H
	DD	$LN12@handleTran
$LN12@handleTran:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
?handleTransliterate@AnyTransliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ENDP ; icu_56::AnyTransliterator::handleTransliterate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_uhash_iput_56:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::createInstance
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	_uscript_getName_56:PROC
EXTRN	__imp_??1Mutex@icu_56@@QAE@XZ:PROC
EXTRN	_uhash_iget_56:PROC
EXTRN	__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z$2
__ehfuncinfo$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z
_TEXT	SEGMENT
tv200 = -512						; size = 4
tv174 = -512						; size = 4
tv145 = -512						; size = 4
$T77281 = -504						; size = 4
$T77282 = -492						; size = 4
$T77285 = -480						; size = 4
$T77286 = -468						; size = 4
$T77289 = -456						; size = 4
$T77290 = -444						; size = 4
_temp$70399 = -240					; size = 4
_m$70393 = -228						; size = 4
_rt$70392 = -216					; size = 4
_id$70382 = -204					; size = 64
_sourceName$70381 = -132				; size = 64
_ec$70380 = -60						; size = 4
_m$70376 = -48						; size = 4
_t$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z PROC ; icu_56::AnyTransliterator::getTransliterator, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 500				; 000001f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-512]
	mov	ecx, 125				; 0000007dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 276
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	cmp	ecx, DWORD PTR [eax+144]
	je	SHORT $LN9@getTransli
	cmp	DWORD PTR _source$[ebp], -1
	jne	SHORT $LN10@getTransli
$LN9@getTransli:
; Line 277
	xor	eax, eax
	jmp	$LN11@getTransli
$LN10@getTransli:
; Line 280
	mov	DWORD PTR _t$[ebp], 0
; Line 282
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _m$70376[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 283
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_uhash_iget_56
	add	esp, 8
	mov	DWORD PTR _t$[ebp], eax
; Line 284
	mov	esi, esp
	lea	ecx, DWORD PTR _m$70376[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 285
	cmp	DWORD PTR _t$[ebp], 0
	jne	$LN8@getTransli
; Line 286
	mov	DWORD PTR _ec$70380[ebp], 0
; Line 287
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_uscript_getName_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _sourceName$70381[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 288
	mov	esi, esp
	lea	eax, DWORD PTR _sourceName$70381[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$70382[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	mov	esi, esp
	push	eax
	mov	edi, esp
	push	45					; 0000002dH
	lea	ecx, DWORD PTR _id$70382[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 291
	lea	eax, DWORD PTR _ec$70380[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _id$70382[ebp]
	push	ecx
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t$[ebp], eax
; Line 292
	mov	eax, DWORD PTR _ec$70380[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@getTransli
	cmp	DWORD PTR _t$[ebp], 0
	jne	$LN7@getTransli
$LN6@getTransli:
; Line 293
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T77282[ebp], eax
	mov	ecx, DWORD PTR $T77282[ebp]
	mov	DWORD PTR $T77281[ebp], ecx
	cmp	DWORD PTR $T77281[ebp], 0
	je	SHORT $LN13@getTransli
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77281[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77281[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN14@getTransli
$LN13@getTransli:
	mov	DWORD PTR tv145[ebp], 0
$LN14@getTransli:
; Line 296
	mov	esi, esp
	lea	eax, DWORD PTR _sourceName$70381[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$70382[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 297
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	mov	esi, esp
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _LATIN_PIVOT
	lea	ecx, DWORD PTR _id$70382[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 298
	lea	eax, DWORD PTR _ec$70380[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _id$70382[ebp]
	push	ecx
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t$[ebp], eax
; Line 299
	mov	eax, DWORD PTR _ec$70380[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@getTransli
	cmp	DWORD PTR _t$[ebp], 0
	jne	SHORT $LN7@getTransli
$LN4@getTransli:
; Line 300
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T77286[ebp], eax
	mov	ecx, DWORD PTR $T77286[ebp]
	mov	DWORD PTR $T77285[ebp], ecx
	cmp	DWORD PTR $T77285[ebp], 0
	je	SHORT $LN15@getTransli
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77285[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77285[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv174[ebp], eax
	jmp	SHORT $LN16@getTransli
$LN15@getTransli:
	mov	DWORD PTR tv174[ebp], 0
$LN16@getTransli:
; Line 301
	mov	DWORD PTR _t$[ebp], 0
$LN7@getTransli:
; Line 305
	cmp	DWORD PTR _t$[ebp], 0
	je	$LN3@getTransli
; Line 306
	mov	DWORD PTR _rt$70392[ebp], 0
; Line 308
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _m$70393[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 309
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_uhash_iget_56
	add	esp, 8
	mov	DWORD PTR _rt$70392[ebp], eax
; Line 310
	cmp	DWORD PTR _rt$70392[ebp], 0
	jne	SHORT $LN2@getTransli
; Line 312
	lea	eax, DWORD PTR _ec$70380[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_uhash_iput_56
	add	esp, 16					; 00000010H
; Line 313
	jmp	SHORT $LN1@getTransli
$LN2@getTransli:
; Line 315
	mov	eax, DWORD PTR _rt$70392[ebp]
	mov	DWORD PTR _temp$70399[ebp], eax
; Line 316
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR _rt$70392[ebp], eax
; Line 317
	mov	eax, DWORD PTR _temp$70399[ebp]
	mov	DWORD PTR _t$[ebp], eax
$LN1@getTransli:
; Line 319
	mov	esi, esp
	lea	ecx, DWORD PTR _m$70393[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 320
	mov	eax, DWORD PTR _rt$70392[ebp]
	mov	DWORD PTR $T77290[ebp], eax
	mov	ecx, DWORD PTR $T77290[ebp]
	mov	DWORD PTR $T77289[ebp], ecx
	cmp	DWORD PTR $T77289[ebp], 0
	je	SHORT $LN17@getTransli
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77289[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77289[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv200[ebp], eax
	jmp	SHORT $LN3@getTransli
$LN17@getTransli:
	mov	DWORD PTR tv200[ebp], 0
$LN3@getTransli:
; Line 322
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _id$70382[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _sourceName$70381[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@getTransli:
; Line 323
	mov	eax, DWORD PTR _t$[ebp]
$LN11@getTransli:
; Line 324
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@getTransli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 512				; 00000200H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN30@getTransli:
	DD	5
	DD	$LN29@getTransli
$LN29@getTransli:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN23@getTransli
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN24@getTransli
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN25@getTransli
	DD	-204					; ffffff34H
	DD	64					; 00000040H
	DD	$LN26@getTransli
	DD	-228					; ffffff1cH
	DD	4
	DD	$LN27@getTransli
$LN27@getTransli:
	DB	109					; 0000006dH
	DB	0
$LN26@getTransli:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN25@getTransli:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN24@getTransli:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN23@getTransli:
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _sourceName$70381[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$70382[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-516]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getTransliterator@AnyTransliterator@icu_56@@ABEPAVTransliterator@2@W4UScriptCode@@@Z ENDP ; icu_56::AnyTransliterator::getTransliterator
PUBLIC	__$ArrayPad$
PUBLIC	?registerIDs@AnyTransliterator@icu_56@@CAXXZ	; icu_56::AnyTransliterator::registerIDs
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
EXTRN	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z:PROC ; icu_56::Transliterator::_registerSpecialInverse
EXTRN	?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z:PROC ; icu_56::Transliterator::_registerInstance
EXTRN	?STVtoID@TransliteratorIDParser@icu_56@@SAXABVUnicodeString@2@00AAV32@@Z:PROC ; icu_56::TransliteratorIDParser::STVtoID
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z:PROC ; icu_56::Transliterator::_getAvailableVariant
EXTRN	?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z:PROC ; icu_56::Transliterator::_countAvailableVariants
EXTRN	__imp_?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z:PROC
EXTRN	?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z:PROC ; icu_56::Transliterator::_getAvailableTarget
EXTRN	?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z:PROC ; icu_56::Transliterator::_countAvailableTargets
EXTRN	__imp_?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z:PROC
EXTRN	?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z:PROC ; icu_56::Transliterator::_getAvailableSource
EXTRN	?_countAvailableSources@Transliterator@icu_56@@KAHXZ:PROC ; icu_56::Transliterator::_countAvailableSources
EXTRN	__imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?registerIDs@AnyTransliterator@icu_56@@CAXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?registerIDs@AnyTransliterator@icu_56@@CAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?registerIDs@AnyTransliterator@icu_56@@CAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$5
	DD	04H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$6
	DD	04H
	DD	FLAT:__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?registerIDs@AnyTransliterator@icu_56@@CAXXZ
_TEXT	SEGMENT
tv217 = -868						; size = 4
tv214 = -868						; size = 4
tv229 = -864						; size = 4
tv223 = -864						; size = 4
tv189 = -864						; size = 4
tv175 = -864						; size = 4
$T77313 = -856						; size = 4
$T77314 = -844						; size = 4
$T77317 = -832						; size = 4
$T77318 = -820						; size = 4
$T70441 = -808						; size = 64
$T70451 = -736						; size = 64
_t$70442 = -472						; size = 4
_id$70440 = -460					; size = 64
_variant$70439 = -388					; size = 64
_v$70435 = -316						; size = 4
_variantCount$70434 = -304				; size = 4
_targetScript$70432 = -292				; size = 4
_target$70430 = -280					; size = 64
_t$70426 = -208						; size = 4
_targetCount$70425 = -196				; size = 4
_source$70423 = -184					; size = 64
_s$70419 = -112						; size = 4
_sourceCount$ = -100					; size = 4
_seen$ = -88						; size = 56
_ec$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?registerIDs@AnyTransliterator@icu_56@@CAXXZ PROC	; icu_56::AnyTransliterator::registerIDs, COMDAT
; Line 352
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?registerIDs@AnyTransliterator@icu_56@@CAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 856				; 00000358H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-868]
	mov	ecx, 214				; 000000d6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 354
	mov	DWORD PTR _ec$[ebp], 0
; Line 355
	mov	esi, esp
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _seen$[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 357
	call	?_countAvailableSources@Transliterator@icu_56@@KAHXZ ; icu_56::Transliterator::_countAvailableSources
	mov	DWORD PTR _sourceCount$[ebp], eax
; Line 358
	mov	DWORD PTR _s$70419[ebp], 0
	jmp	SHORT $LN14@registerID
$LN13@registerID:
	mov	eax, DWORD PTR _s$70419[ebp]
	add	eax, 1
	mov	DWORD PTR _s$70419[ebp], eax
$LN14@registerID:
	mov	eax, DWORD PTR _s$70419[ebp]
	cmp	eax, DWORD PTR _sourceCount$[ebp]
	jge	$LN12@registerID
; Line 359
	mov	esi, esp
	lea	ecx, DWORD PTR _source$70423[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 360
	lea	eax, DWORD PTR _source$70423[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$70419[ebp]
	push	ecx
	call	?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z ; icu_56::Transliterator::_getAvailableSource
	add	esp, 8
; Line 363
	mov	esi, esp
	push	0
	push	3
	push	OFFSET _ANY
	lea	ecx, DWORD PTR _source$70423[ebp]
	call	DWORD PTR __imp_?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN11@registerID
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _source$70423[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN13@registerID
$LN11@registerID:
; Line 365
	lea	eax, DWORD PTR _source$70423[ebp]
	push	eax
	call	?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z ; icu_56::Transliterator::_countAvailableTargets
	add	esp, 4
	mov	DWORD PTR _targetCount$70425[ebp], eax
; Line 366
	mov	DWORD PTR _t$70426[ebp], 0
	jmp	SHORT $LN10@registerID
$LN9@registerID:
	mov	eax, DWORD PTR _t$70426[ebp]
	add	eax, 1
	mov	DWORD PTR _t$70426[ebp], eax
$LN10@registerID:
	mov	eax, DWORD PTR _t$70426[ebp]
	cmp	eax, DWORD PTR _targetCount$70425[ebp]
	jge	$LN8@registerID
; Line 367
	mov	esi, esp
	lea	ecx, DWORD PTR _target$70430[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 368
	lea	eax, DWORD PTR _target$70430[ebp]
	push	eax
	lea	ecx, DWORD PTR _source$70423[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$70426[ebp]
	push	edx
	call	?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z ; icu_56::Transliterator::_getAvailableTarget
	add	esp, 12					; 0000000cH
; Line 371
	mov	esi, esp
	lea	eax, DWORD PTR _target$70430[ebp]
	push	eax
	lea	ecx, DWORD PTR _seen$[ebp]
	call	DWORD PTR __imp_?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@registerID
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$70430[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@registerID
$LN7@registerID:
; Line 372
	mov	DWORD PTR _ec$[ebp], 0
; Line 373
	mov	esi, esp
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _target$70430[ebp]
	push	ecx
	lea	ecx, DWORD PTR _seen$[ebp]
	call	DWORD PTR __imp_?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 376
	lea	eax, DWORD PTR _target$70430[ebp]
	push	eax
	call	?scriptNameToCode@icu_56@@YA?AW4UScriptCode@@ABVUnicodeString@1@@Z ; icu_56::scriptNameToCode
	add	esp, 4
	mov	DWORD PTR _targetScript$70432[ebp], eax
; Line 377
	cmp	DWORD PTR _targetScript$70432[ebp], -1
	jne	SHORT $LN6@registerID
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$70430[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@registerID
$LN6@registerID:
; Line 379
	lea	eax, DWORD PTR _target$70430[ebp]
	push	eax
	lea	ecx, DWORD PTR _source$70423[ebp]
	push	ecx
	call	?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z ; icu_56::Transliterator::_countAvailableVariants
	add	esp, 8
	mov	DWORD PTR _variantCount$70434[ebp], eax
; Line 381
	mov	DWORD PTR _v$70435[ebp], 0
	jmp	SHORT $LN5@registerID
$LN4@registerID:
	mov	eax, DWORD PTR _v$70435[ebp]
	add	eax, 1
	mov	DWORD PTR _v$70435[ebp], eax
$LN5@registerID:
	mov	eax, DWORD PTR _v$70435[ebp]
	cmp	eax, DWORD PTR _variantCount$70434[ebp]
	jge	$LN3@registerID
; Line 382
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$70439[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 383
	lea	eax, DWORD PTR _variant$70439[ebp]
	push	eax
	lea	ecx, DWORD PTR _target$70430[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$70423[ebp]
	push	edx
	mov	eax, DWORD PTR _v$70435[ebp]
	push	eax
	call	?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z ; icu_56::Transliterator::_getAvailableVariant
	add	esp, 16					; 00000010H
; Line 385
	mov	esi, esp
	lea	ecx, DWORD PTR _id$70440[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 386
	lea	eax, DWORD PTR _id$70440[ebp]
	push	eax
	lea	ecx, DWORD PTR _variant$70439[ebp]
	push	ecx
	lea	edx, DWORD PTR _target$70430[ebp]
	push	edx
	mov	esi, esp
	push	3
	push	OFFSET _ANY
	push	1
	lea	ecx, DWORD PTR $T70441[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv223[ebp], eax
	mov	eax, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv214[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv214[ebp]
	push	ecx
	call	?STVtoID@TransliteratorIDParser@icu_56@@SAXABVUnicodeString@2@00AAV32@@Z ; icu_56::TransliteratorIDParser::STVtoID
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T70441[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 387
	mov	DWORD PTR _ec$[ebp], 0
; Line 389
	mov	esi, esp
	push	148					; 00000094H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77314[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T77314[ebp], 0
	je	SHORT $LN17@registerID
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _targetScript$70432[ebp]
	push	ecx
	lea	edx, DWORD PTR _variant$70439[ebp]
	push	edx
	lea	eax, DWORD PTR _target$70430[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$70440[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T77314[ebp]
	call	??0AnyTransliterator@icu_56@@AAE@ABVUnicodeString@1@00W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::AnyTransliterator::AnyTransliterator
	mov	DWORD PTR tv175[ebp], eax
	jmp	SHORT $LN18@registerID
$LN17@registerID:
	mov	DWORD PTR tv175[ebp], 0
$LN18@registerID:
	mov	edx, DWORD PTR tv175[ebp]
	mov	DWORD PTR $T77313[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR $T77313[ebp]
	mov	DWORD PTR _t$70442[ebp], eax
; Line 390
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@registerID
; Line 391
	mov	eax, DWORD PTR _t$70442[ebp]
	mov	DWORD PTR $T77318[ebp], eax
	mov	ecx, DWORD PTR $T77318[ebp]
	mov	DWORD PTR $T77317[ebp], ecx
	cmp	DWORD PTR $T77317[ebp], 0
	je	SHORT $LN19@registerID
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77317[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77317[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN20@registerID
$LN19@registerID:
	mov	DWORD PTR tv189[ebp], 0
$LN20@registerID:
; Line 392
	jmp	SHORT $LN1@registerID
$LN2@registerID:
; Line 393
	mov	eax, DWORD PTR _t$70442[ebp]
	push	eax
	call	?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z ; icu_56::Transliterator::_registerInstance
	add	esp, 4
; Line 394
	push	0
	mov	esi, esp
	push	4
	push	OFFSET _NULL_ID
	push	1
	lea	ecx, DWORD PTR $T70451[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv229[ebp], eax
	mov	eax, DWORD PTR tv229[ebp]
	mov	DWORD PTR tv217[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv217[ebp]
	push	ecx
	lea	edx, DWORD PTR _target$70430[ebp]
	push	edx
	call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T70451[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@registerID:
; Line 396
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _id$70440[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$70439[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN4@registerID
$LN3@registerID:
; Line 397
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$70430[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@registerID
$LN8@registerID:
; Line 398
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _source$70423[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN13@registerID
$LN12@registerID:
; Line 399
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _seen$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@registerID
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 868				; 00000364H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN37@registerID:
	DD	6
	DD	$LN36@registerID
$LN36@registerID:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN29@registerID
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN30@registerID
	DD	-184					; ffffff48H
	DD	64					; 00000040H
	DD	$LN31@registerID
	DD	-280					; fffffee8H
	DD	64					; 00000040H
	DD	$LN32@registerID
	DD	-388					; fffffe7cH
	DD	64					; 00000040H
	DD	$LN33@registerID
	DD	-460					; fffffe34H
	DD	64					; 00000040H
	DD	$LN34@registerID
$LN34@registerID:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN33@registerID:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN32@registerID:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN31@registerID:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN30@registerID:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN29@registerID:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _seen$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _source$70423[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _target$70430[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$70439[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$70440[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$5:
	mov	esi, esp
	lea	ecx, DWORD PTR $T70441[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T77314[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@AnyTransliterator@icu_56@@CAXXZ$7:
	mov	esi, esp
	lea	ecx, DWORD PTR $T70451[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?registerIDs@AnyTransliterator@icu_56@@CAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-872]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?registerIDs@AnyTransliterator@icu_56@@CAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?registerIDs@AnyTransliterator@icu_56@@CAXXZ ENDP	; icu_56::AnyTransliterator::registerIDs
PUBLIC	__$ArrayPad$
EXTRN	_uscript_getCode_56:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?scriptNameToCode@icu_56@@YA?AW4UScriptCode@@ABVUnicodeString@1@@Z
_TEXT	SEGMENT
_isInvariant$ = -181					; size = 1
_nameLen$ = -172					; size = 4
_ec$ = -160						; size = 4
_code$ = -148						; size = 4
_buf$ = -136						; size = 128
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
?scriptNameToCode@icu_56@@YA?AW4UScriptCode@@ABVUnicodeString@1@@Z PROC ; icu_56::scriptNameToCode, COMDAT
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 332
	mov	DWORD PTR _ec$[ebp], 0
; Line 333
	mov	esi, esp
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nameLen$[ebp], eax
; Line 334
	mov	eax, DWORD PTR _nameLen$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
	mov	BYTE PTR _isInvariant$[ebp], al
; Line 336
	movsx	eax, BYTE PTR _isInvariant$[ebp]
	test	eax, eax
	je	SHORT $LN3@scriptName
; Line 337
	mov	esi, esp
	push	0
	push	128					; 00000080H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nameLen$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 338
	mov	BYTE PTR _buf$[ebp+127], 0
$LN3@scriptName:
; Line 340
	movsx	eax, BYTE PTR _isInvariant$[ebp]
	test	eax, eax
	je	SHORT $LN1@scriptName
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _code$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_uscript_getCode_56
	add	esp, 16					; 00000010H
	cmp	eax, 1
	jne	SHORT $LN1@scriptName
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@scriptName
$LN1@scriptName:
; Line 342
	mov	DWORD PTR _code$[ebp], -1
$LN2@scriptName:
; Line 344
	mov	eax, DWORD PTR _code$[ebp]
; Line 345
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@scriptName
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@scriptName:
	DD	3
	DD	$LN9@scriptName
$LN9@scriptName:
	DD	-136					; ffffff78H
	DD	128					; 00000080H
	DD	$LN6@scriptName
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN7@scriptName
	DD	-160					; ffffff60H
	DD	4
	DD	$LN8@scriptName
$LN8@scriptName:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN7@scriptName:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN6@scriptName:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?scriptNameToCode@icu_56@@YA?AW4UScriptCode@@ABVUnicodeString@1@@Z ENDP ; icu_56::scriptNameToCode
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\uhash.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_PRIMES	DD	0dH
	DD	01fH
	DD	03dH
	DD	07fH
	DD	0fbH
	DD	01fdH
	DD	03fdH
	DD	07f7H
	DD	0ffdH
	DD	01fffH
	DD	03ffdH
	DD	07fedH
	DD	0fff1H
	DD	01ffffH
	DD	03fffbH
	DD	07ffffH
	DD	0ffffdH
	DD	01ffff7H
	DD	03ffffdH
	DD	07ffff1H
	DD	0fffffdH
	DD	01ffffd9H
	DD	03fffffbH
	DD	07ffffd9H
	DD	0fffffc7H
	DD	01ffffffdH
	DD	03fffffddH
	DD	07fffffffH
_RESIZE_POLICY_RATIO_TABLE DD 000000000r	; 0
	DD	03f000000r			; 0.5
	DD	03dcccccdr			; 0.1
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
PUBLIC	_uhash_open_56
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\uhash.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uhash_open_56
_TEXT	SEGMENT
_keyHash$ = 8						; size = 4
_keyComp$ = 12						; size = 4
_valueComp$ = 16					; size = 4
_status$ = 20						; size = 4
_uhash_open_56 PROC					; COMDAT
; Line 540
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 542
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _valueComp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyComp$[ebp]
	push	edx
	mov	eax, DWORD PTR _keyHash$[ebp]
	push	eax
	call	__uhash_create
	add	esp, 20					; 00000014H
; Line 543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_open_56 ENDP
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __uhash_create
_TEXT	SEGMENT
_result$ = -8						; size = 4
_keyHash$ = 8						; size = 4
_keyComp$ = 12						; size = 4
_valueComp$ = 16					; size = 4
_primeIndex$ = 20					; size = 4
_status$ = 24						; size = 4
__uhash_create PROC					; COMDAT
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 283
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@uhash_crea
	xor	eax, eax
	jmp	SHORT $LN4@uhash_crea
$LN3@uhash_crea:
; Line 285
	push	52					; 00000034H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 286
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN2@uhash_crea
; Line 287
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 288
	xor	eax, eax
	jmp	SHORT $LN4@uhash_crea
$LN2@uhash_crea:
; Line 291
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primeIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _valueComp$[ebp]
	push	edx
	mov	eax, DWORD PTR _keyComp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _keyHash$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	__uhash_init
	add	esp, 24					; 00000018H
; Line 292
	mov	eax, DWORD PTR _result$[ebp]
	mov	BYTE PTR [eax+49], 1
; Line 294
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@uhash_crea
; Line 295
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 296
	xor	eax, eax
	jmp	SHORT $LN4@uhash_crea
$LN1@uhash_crea:
; Line 299
	mov	eax, DWORD PTR _result$[ebp]
$LN4@uhash_crea:
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__uhash_create ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CO@JFPPFJPJ@?$AAk?$AAe?$AAy?$AAC?$AAo?$AAm?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@GLHFCAAK@?$AAk?$AAe?$AAy?$AAH?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??_uhash_init@@9@9@dd133793	; `_uhash_init'::`2'::__LINE__Var
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1CO@JFPPFJPJ@?$AAk?$AAe?$AAy?$AAC?$AAo?$AAm?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@JFPPFJPJ@?$AAk?$AAe?$AAy?$AAC?$AAo?$AAm?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ DB 'k'
	DB	00H, 'e', 00H, 'y', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, '(', 00H, 'v'
	DB	00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@GLHFCAAK@?$AAk?$AAe?$AAy?$AAH?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@GLHFCAAK@?$AAk?$AAe?$AAy?$AAH?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ DB 'k'
	DB	00H, 'e', 00H, 'y', 00H, 'H', 00H, 'a', 00H, 's', 00H, 'h', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, '(', 00H, 'v'
	DB	00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'u', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??_uhash_init@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_init@@9@9@dd133793 DD 0fdH	; `_uhash_init'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_init
_TEXT	SEGMENT
_result$ = 8						; size = 4
_keyHash$ = 12						; size = 4
_keyComp$ = 16						; size = 4
_valueComp$ = 20					; size = 4
_primeIndex$ = 24					; size = 4
_status$ = 28						; size = 4
__uhash_init PROC					; COMDAT
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 254
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN2@uhash_init
	xor	eax, eax
	jmp	$LN3@uhash_init
$LN2@uhash_init:
; Line 255
	cmp	DWORD PTR _keyHash$[ebp], 0
	jne	SHORT $LN5@uhash_init
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_init@@9@9@dd133793
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CO@GLHFCAAK@?$AAk?$AAe?$AAy?$AAH?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@uhash_init:
; Line 256
	cmp	DWORD PTR _keyComp$[ebp], 0
	jne	SHORT $LN6@uhash_init
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_init@@9@9@dd133793
	add	eax, 3
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CO@JFPPFJPJ@?$AAk?$AAe?$AAy?$AAC?$AAo?$AAm?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@uhash_init:
; Line 258
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _keyHash$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 259
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _keyComp$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 260
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _valueComp$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 261
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 262
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 263
	mov	eax, DWORD PTR _result$[ebp]
	mov	BYTE PTR [eax+49], 0
; Line 264
	push	0
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	__uhash_internalSetResizePolicy
	add	esp, 8
; Line 266
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primeIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	__uhash_allocate
	add	esp, 12					; 0000000cH
; Line 268
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@uhash_init
; Line 269
	xor	eax, eax
	jmp	SHORT $LN3@uhash_init
$LN1@uhash_init:
; Line 272
	mov	eax, DWORD PTR _result$[ebp]
$LN3@uhash_init:
; Line 273
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__uhash_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CM@DLBFLIBH@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA3?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@FGBLPIGO@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??_uhash_internalSetResizePolicy@@9@9@dd133793 ; `_uhash_internalSetResizePolicy'::`2'::__LINE__Var
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1CM@DLBFLIBH@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA3?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@DLBFLIBH@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA3?$AA?$AA@ DB '('
	DB	00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H, '2', 00H
	DB	'_', 00H, 't', 00H, ')', 00H, 'p', 00H, 'o', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'y', 00H, ')', 00H, ' ', 00H, '<', 00H, ' ', 00H
	DB	'3', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@FGBLPIGO@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@FGBLPIGO@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB '('
	DB	00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H, '2', 00H
	DB	'_', 00H, 't', 00H, ')', 00H, 'p', 00H, 'o', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'y', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ DB 'h'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '(', 00H, '(', 00H, 'v', 00H, 'o', 00H, 'i', 00H, 'd'
	DB	00H, ' ', 00H, '*', 00H, ')', 00H, '0', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??_uhash_internalSetResizePolicy@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_internalSetResizePolicy@@9@9@dd133793 DD 0beH ; `_uhash_internalSetResizePolicy'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_internalSetResizePolicy
_TEXT	SEGMENT
_hash$ = 8						; size = 4
_policy$ = 12						; size = 4
__uhash_internalSetResizePolicy PROC			; COMDAT
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	cmp	DWORD PTR _hash$[ebp], 0
	jne	SHORT $LN3@uhash_inte
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_internalSetResizePolicy@@9@9@dd133793
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@uhash_inte:
; Line 192
	cmp	DWORD PTR _policy$[ebp], 0
	jge	SHORT $LN4@uhash_inte
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_internalSetResizePolicy@@9@9@dd133793
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CO@FGBLPIGO@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@uhash_inte:
; Line 193
	cmp	DWORD PTR _policy$[ebp], 3
	jl	SHORT $LN5@uhash_inte
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_internalSetResizePolicy@@9@9@dd133793
	add	eax, 3
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CM@DLBFLIBH@?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAp?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA3?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@uhash_inte:
; Line 194
	mov	eax, DWORD PTR _policy$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _hash$[ebp]
	fld	DWORD PTR _RESIZE_POLICY_RATIO_TABLE[eax*4]
	fstp	DWORD PTR [ecx+44]
; Line 195
	mov	eax, DWORD PTR _policy$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _hash$[ebp]
	fld	DWORD PTR _RESIZE_POLICY_RATIO_TABLE[eax*4+4]
	fstp	DWORD PTR [ecx+40]
; Line 196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__uhash_internalSetResizePolicy ENDP
_TEXT	ENDS
PUBLIC	??_C@_1IK@FIGHKOOP@?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?1??_uhash_allocate@@9@9@dd133793	; `_uhash_allocate'::`2'::__LINE__Var
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_1IK@FIGHKOOP@?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5@
CONST	SEGMENT
??_C@_1IK@FIGHKOOP@?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5@ DB 'p'
	DB	00H, 'r', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H
	DB	'r', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H
	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '('
	DB	00H, 'P', 00H, 'R', 00H, 'I', 00H, 'M', 00H, 'E', 00H, 'S', 00H
	DB	')', 00H, ' ', 00H, '/', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'P', 00H, 'R', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'S', 00H, '[', 00H, '0', 00H, ']'
	DB	00H, ')', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??_uhash_allocate@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_allocate@@9@9@dd133793 DD 0d2H	; `_uhash_allocate'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_allocate
_TEXT	SEGMENT
_emptytok$ = -32					; size = 4
_limit$ = -20						; size = 4
_p$ = -8						; size = 4
_hash$ = 8						; size = 4
_primeIndex$ = 12					; size = 4
_status$ = 16						; size = 4
__uhash_allocate PROC					; COMDAT
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 215
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN4@uhash_allo
	jmp	$LN5@uhash_allo
$LN4@uhash_allo:
; Line 217
	cmp	DWORD PTR _primeIndex$[ebp], 0
	jl	SHORT $LN7@uhash_allo
	cmp	DWORD PTR _primeIndex$[ebp], 28		; 0000001cH
	jb	SHORT $LN8@uhash_allo
$LN7@uhash_allo:
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_allocate@@9@9@dd133793
	add	eax, 7
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1IK@FIGHKOOP@?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAr?$AAi?$AAm?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@uhash_allo:
; Line 219
	mov	eax, DWORD PTR _hash$[ebp]
	mov	cl, BYTE PTR _primeIndex$[ebp]
	mov	BYTE PTR [eax+48], cl
; Line 220
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _primeIndex$[ebp]
	mov	edx, DWORD PTR _PRIMES[ecx*4]
	mov	DWORD PTR [eax+28], edx
; Line 223
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 12					; 0000000cH
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@uhash_allo
; Line 226
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 227
	jmp	$LN5@uhash_allo
$LN3@uhash_allo:
; Line 230
	mov	DWORD PTR _emptytok$[ebp], 0
; Line 231
	mov	DWORD PTR _emptytok$[ebp], 0
; Line 233
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR _limit$[ebp], ecx
$LN2@uhash_allo:
; Line 234
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	SHORT $LN1@uhash_allo
; Line 235
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _emptytok$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 236
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _emptytok$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 237
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], -2147483647		; 80000001H
; Line 238
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
; Line 239
	jmp	SHORT $LN2@uhash_allo
$LN1@uhash_allo:
; Line 241
	mov	eax, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 242
	mov	eax, DWORD PTR _hash$[ebp]
	fild	DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _hash$[ebp]
	fmul	DWORD PTR [ecx+44]
	call	__ftol2_sse
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 243
	mov	eax, DWORD PTR _hash$[ebp]
	fild	DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _hash$[ebp]
	fmul	DWORD PTR [ecx+40]
	call	__ftol2_sse
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+32], eax
$LN5@uhash_allo:
; Line 244
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@uhash_allo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@uhash_allo:
	DD	1
	DD	$LN10@uhash_allo
$LN10@uhash_allo:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@uhash_allo
$LN9@uhash_allo:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
__uhash_allocate ENDP
_TEXT	ENDS
PUBLIC	_uhash_openSize_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_openSize_56
_TEXT	SEGMENT
_i$ = -8						; size = 4
_keyHash$ = 8						; size = 4
_keyComp$ = 12						; size = 4
_valueComp$ = 16					; size = 4
_size$ = 20						; size = 4
_status$ = 24						; size = 4
_uhash_openSize_56 PROC					; COMDAT
; Line 550
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 553
	mov	DWORD PTR _i$[ebp], 0
$LN2@uhash_open:
; Line 554
	cmp	DWORD PTR _i$[ebp], 27			; 0000001bH
	jae	SHORT $LN1@uhash_open
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _PRIMES[eax*4]
	cmp	ecx, DWORD PTR _size$[ebp]
	jge	SHORT $LN1@uhash_open
; Line 555
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 556
	jmp	SHORT $LN2@uhash_open
$LN1@uhash_open:
; Line 558
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _valueComp$[ebp]
	push	edx
	mov	eax, DWORD PTR _keyComp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _keyHash$[ebp]
	push	ecx
	call	__uhash_create
	add	esp, 20					; 00000014H
; Line 559
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_openSize_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_init_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_init_56
_TEXT	SEGMENT
_fillinResult$ = 8					; size = 4
_keyHash$ = 12						; size = 4
_keyComp$ = 16						; size = 4
_valueComp$ = 20					; size = 4
_status$ = 24						; size = 4
_uhash_init_56 PROC					; COMDAT
; Line 566
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 568
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _valueComp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyComp$[ebp]
	push	edx
	mov	eax, DWORD PTR _keyHash$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillinResult$[ebp]
	push	ecx
	call	__uhash_init
	add	esp, 24					; 00000018H
; Line 569
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_init_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_nextElement_56
PUBLIC	_uhash_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_close_56
_TEXT	SEGMENT
_e$10745 = -20						; size = 4
_pos$10744 = -8						; size = 4
_hash$ = 8						; size = 4
_uhash_close_56 PROC					; COMDAT
; Line 572
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 573
	cmp	DWORD PTR _hash$[ebp], 0
	jne	SHORT $LN9@uhash_clos
; Line 574
	jmp	$LN10@uhash_clos
$LN9@uhash_clos:
; Line 576
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN8@uhash_clos
; Line 577
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN6@uhash_clos
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN7@uhash_clos
$LN6@uhash_clos:
; Line 578
	mov	DWORD PTR _pos$10744[ebp], -1
$LN5@uhash_clos:
; Line 580
	lea	eax, DWORD PTR _pos$10744[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _e$10745[ebp], eax
	cmp	DWORD PTR _e$10745[ebp], 0
	je	SHORT $LN7@uhash_clos
; Line 581
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@uhash_clos
	mov	eax, DWORD PTR _e$10745[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@uhash_clos
	mov	esi, esp
	mov	eax, DWORD PTR _e$10745[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@uhash_clos:
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN2@uhash_clos
	mov	eax, DWORD PTR _e$10745[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@uhash_clos
	mov	esi, esp
	mov	eax, DWORD PTR _e$10745[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@uhash_clos:
; Line 582
	jmp	SHORT $LN5@uhash_clos
$LN7@uhash_clos:
; Line 584
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 585
	mov	eax, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [eax], 0
$LN8@uhash_clos:
; Line 587
	mov	eax, DWORD PTR _hash$[ebp]
	movsx	ecx, BYTE PTR [eax+49]
	test	ecx, ecx
	je	SHORT $LN10@uhash_clos
; Line 588
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN10@uhash_clos:
; Line 590
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@uhash_clos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@uhash_clos:
	DD	1
	DD	$LN13@uhash_clos
$LN13@uhash_clos:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN12@uhash_clos
$LN12@uhash_clos:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_uhash_close_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_setKeyHasher_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_setKeyHasher_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_hash$ = 8						; size = 4
_fn$ = 12						; size = 4
_uhash_setKeyHasher_56 PROC				; COMDAT
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 594
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _result$[ebp], ecx
; Line 595
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _fn$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 596
	mov	eax, DWORD PTR _result$[ebp]
; Line 597
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_setKeyHasher_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_setKeyComparator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_setKeyComparator_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_hash$ = 8						; size = 4
_fn$ = 12						; size = 4
_uhash_setKeyComparator_56 PROC				; COMDAT
; Line 600
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 601
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _result$[ebp], ecx
; Line 602
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _fn$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 603
	mov	eax, DWORD PTR _result$[ebp]
; Line 604
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_setKeyComparator_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_setValueComparator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_setValueComparator_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_hash$ = 8						; size = 4
_fn$ = 12						; size = 4
_uhash_setValueComparator_56 PROC			; COMDAT
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 607
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _result$[ebp], ecx
; Line 608
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _fn$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 609
	mov	eax, DWORD PTR _result$[ebp]
; Line 610
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_setValueComparator_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_setKeyDeleter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_setKeyDeleter_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_hash$ = 8						; size = 4
_fn$ = 12						; size = 4
_uhash_setKeyDeleter_56 PROC				; COMDAT
; Line 613
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 614
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _result$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _fn$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 616
	mov	eax, DWORD PTR _result$[ebp]
; Line 617
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_setKeyDeleter_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_setValueDeleter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_setValueDeleter_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_hash$ = 8						; size = 4
_fn$ = 12						; size = 4
_uhash_setValueDeleter_56 PROC				; COMDAT
; Line 620
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 621
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _result$[ebp], ecx
; Line 622
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _fn$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 623
	mov	eax, DWORD PTR _result$[ebp]
; Line 624
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_setValueDeleter_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_setResizePolicy_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_setResizePolicy_56
_TEXT	SEGMENT
_status$ = -8						; size = 4
_hash$ = 8						; size = 4
_policy$ = 12						; size = 4
_uhash_setResizePolicy_56 PROC				; COMDAT
; Line 627
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 628
	mov	DWORD PTR _status$[ebp], 0
; Line 629
	mov	eax, DWORD PTR _policy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_internalSetResizePolicy
	add	esp, 8
; Line 630
	mov	eax, DWORD PTR _hash$[ebp]
	fild	DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _hash$[ebp]
	fmul	DWORD PTR [ecx+44]
	call	__ftol2_sse
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 631
	mov	eax, DWORD PTR _hash$[ebp]
	fild	DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _hash$[ebp]
	fmul	DWORD PTR [ecx+40]
	call	__ftol2_sse
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 632
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_rehash
	add	esp, 8
; Line 633
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_setR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@uhash_setR:
	DD	1
	DD	$LN4@uhash_setR
$LN4@uhash_setR:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_setR
$LN3@uhash_setR:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_uhash_setResizePolicy_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_1GM@NEPLMLMO@?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3@ ; `string'
PUBLIC	??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??_uhash_rehash@@9@9@dd133793	; `_uhash_rehash'::`2'::__LINE__Var
;	COMDAT ??_C@_1GM@NEPLMLMO@?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3@
CONST	SEGMENT
??_C@_1GM@NEPLMLMO@?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3@ DB 'e'
	DB	00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'h', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '(', 00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'3', 00H, '2', 00H, '_', 00H, 't', 00H, ')', 00H, ' ', 00H, '('
	DB	00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H, '2', 00H
	DB	'_', 00H, 't', 00H, ')', 00H, ' ', 00H, '0', 00H, 'x', 00H, '8'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H
	DB	'0', 00H, ')', 00H, ' ', 00H, '+', 00H, ' ', 00H, '1', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ DB 'e'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, '(', 00H
	DB	'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')'
	DB	00H, '0', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??_uhash_rehash@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_rehash@@9@9@dd133793 DD 0189H	; `_uhash_rehash'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_rehash
_TEXT	SEGMENT
_e$10639 = -56						; size = 4
_i$ = -44						; size = 4
_newPrimeIndex$ = -32					; size = 4
_oldLength$ = -20					; size = 4
_old$ = -8						; size = 4
_hash$ = 8						; size = 4
_status$ = 12						; size = 4
__uhash_rehash PROC					; COMDAT
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 395
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _old$[ebp], ecx
; Line 396
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _oldLength$[ebp], ecx
; Line 397
	mov	eax, DWORD PTR _hash$[ebp]
	movsx	ecx, BYTE PTR [eax+48]
	mov	DWORD PTR _newPrimeIndex$[ebp], ecx
; Line 400
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+32]
	jle	SHORT $LN11@uhash_reha
; Line 401
	mov	eax, DWORD PTR _newPrimeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _newPrimeIndex$[ebp], eax
	cmp	DWORD PTR _newPrimeIndex$[ebp], 28	; 0000001cH
	jb	SHORT $LN10@uhash_reha
; Line 402
	jmp	$LN12@uhash_reha
$LN10@uhash_reha:
; Line 403
	jmp	SHORT $LN9@uhash_reha
$LN11@uhash_reha:
; Line 404
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+36]
	jge	SHORT $LN8@uhash_reha
; Line 405
	mov	eax, DWORD PTR _newPrimeIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _newPrimeIndex$[ebp], eax
	jns	SHORT $LN7@uhash_reha
; Line 406
	jmp	$LN12@uhash_reha
$LN7@uhash_reha:
; Line 408
	jmp	SHORT $LN9@uhash_reha
$LN8@uhash_reha:
; Line 409
	jmp	$LN12@uhash_reha
$LN9@uhash_reha:
; Line 412
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newPrimeIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hash$[ebp]
	push	edx
	call	__uhash_allocate
	add	esp, 12					; 0000000cH
; Line 414
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN5@uhash_reha
; Line 415
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 416
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _oldLength$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 417
	jmp	$LN12@uhash_reha
$LN5@uhash_reha:
; Line 420
	mov	eax, DWORD PTR _oldLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN4@uhash_reha
$LN3@uhash_reha:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@uhash_reha:
	cmp	DWORD PTR _i$[ebp], 0
	jl	$LN2@uhash_reha
; Line 421
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _old$[ebp]
	cmp	DWORD PTR [ecx+eax], 0
	jl	$LN1@uhash_reha
; Line 422
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	push	edx
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _e$10639[ebp], eax
; Line 423
	cmp	DWORD PTR _e$10639[ebp], 0
	jne	SHORT $LN14@uhash_reha
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_rehash@@9@9@dd133793
	add	eax, 30					; 0000001eH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@uhash_reha:
; Line 424
	mov	eax, DWORD PTR _e$10639[ebp]
	cmp	DWORD PTR [eax], -2147483647		; 80000001H
	je	SHORT $LN15@uhash_reha
	mov	ecx, DWORD PTR ?__LINE__Var@?1??_uhash_rehash@@9@9@dd133793
	add	ecx, 31					; 0000001fH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1GM@NEPLMLMO@?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CI?$AAi?$AAn?$AAt?$AA3@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@uhash_reha:
; Line 425
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	eax, DWORD PTR _e$10639[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 426
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	mov	eax, DWORD PTR _e$10639[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 427
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _e$10639[ebp]
	mov	edx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx], eax
; Line 428
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN1@uhash_reha:
; Line 430
	jmp	$LN3@uhash_reha
$LN2@uhash_reha:
; Line 432
	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN12@uhash_reha:
; Line 433
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__uhash_rehash ENDP
_TEXT	ENDS
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??_uhash_find@@9@9@dd133793	; `_uhash_find'::`2'::__LINE__Var
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??_uhash_find@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_find@@9@9@dd133793 DD 014cH	; `_uhash_find'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_find
_TEXT	SEGMENT
_elements$ = -68					; size = 4
_tableHash$ = -56					; size = 4
_jump$ = -44						; size = 4
_startIndex$ = -32					; size = 4
_theIndex$ = -20					; size = 4
_firstDeleted$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_hashcode$ = 16						; size = 4
__uhash_find PROC					; COMDAT
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 334
	mov	DWORD PTR _firstDeleted$[ebp], -1
; Line 336
	mov	DWORD PTR _jump$[ebp], 0
; Line 338
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _elements$[ebp], ecx
; Line 340
	mov	eax, DWORD PTR _hashcode$[ebp]
	and	eax, 2147483647				; 7fffffffH
	mov	DWORD PTR _hashcode$[ebp], eax
; Line 341
	mov	eax, DWORD PTR _hashcode$[ebp]
	xor	eax, 67108864				; 04000000H
	mov	ecx, DWORD PTR _hash$[ebp]
	cdq
	idiv	DWORD PTR [ecx+28]
	mov	DWORD PTR _theIndex$[ebp], edx
	mov	edx, DWORD PTR _theIndex$[ebp]
	mov	DWORD PTR _startIndex$[ebp], edx
$LN15@uhash_find:
; Line 344
	mov	eax, DWORD PTR _theIndex$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _elements$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _tableHash$[ebp], edx
; Line 345
	mov	eax, DWORD PTR _tableHash$[ebp]
	cmp	eax, DWORD PTR _hashcode$[ebp]
	jne	SHORT $LN12@uhash_find
; Line 346
	mov	eax, DWORD PTR _theIndex$[ebp]
	imul	eax, 12					; 0000000cH
	mov	esi, esp
	mov	ecx, DWORD PTR _elements$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@uhash_find
; Line 347
	mov	eax, DWORD PTR _theIndex$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _elements$[ebp]
	jmp	$LN16@uhash_find
$LN11@uhash_find:
; Line 348
	jmp	SHORT $LN10@uhash_find
$LN12@uhash_find:
; Line 349
	cmp	DWORD PTR _tableHash$[ebp], 0
	jl	SHORT $LN9@uhash_find
	jmp	SHORT $LN10@uhash_find
$LN9@uhash_find:
; Line 354
	cmp	DWORD PTR _tableHash$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN7@uhash_find
; Line 355
	jmp	SHORT $LN13@uhash_find
	jmp	SHORT $LN10@uhash_find
$LN7@uhash_find:
; Line 356
	cmp	DWORD PTR _firstDeleted$[ebp], 0
	jge	SHORT $LN10@uhash_find
; Line 357
	mov	eax, DWORD PTR _theIndex$[ebp]
	mov	DWORD PTR _firstDeleted$[ebp], eax
$LN10@uhash_find:
; Line 359
	cmp	DWORD PTR _jump$[ebp], 0
	jne	SHORT $LN4@uhash_find
; Line 364
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	mov	eax, DWORD PTR _hashcode$[ebp]
	cdq
	idiv	ecx
	add	edx, 1
	mov	DWORD PTR _jump$[ebp], edx
$LN4@uhash_find:
; Line 366
	mov	eax, DWORD PTR _theIndex$[ebp]
	add	eax, DWORD PTR _jump$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	cdq
	idiv	DWORD PTR [ecx+28]
	mov	DWORD PTR _theIndex$[ebp], edx
; Line 367
	mov	eax, DWORD PTR _theIndex$[ebp]
	cmp	eax, DWORD PTR _startIndex$[ebp]
	jne	$LN15@uhash_find
$LN13@uhash_find:
; Line 369
	cmp	DWORD PTR _firstDeleted$[ebp], 0
	jl	SHORT $LN3@uhash_find
; Line 370
	mov	eax, DWORD PTR _firstDeleted$[ebp]
	mov	DWORD PTR _theIndex$[ebp], eax
	jmp	SHORT $LN2@uhash_find
$LN3@uhash_find:
; Line 371
	cmp	DWORD PTR _tableHash$[ebp], -2147483647	; 80000001H
	je	SHORT $LN2@uhash_find
; Line 377
	xor	eax, eax
	jne	SHORT $LN18@uhash_find
	mov	ecx, DWORD PTR ?__LINE__Var@?1??_uhash_find@@9@9@dd133793
	add	ecx, 45					; 0000002dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@uhash_find:
; Line 378
	xor	eax, eax
	jmp	SHORT $LN16@uhash_find
$LN2@uhash_find:
; Line 380
	mov	eax, DWORD PTR _theIndex$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _elements$[ebp]
$LN16@uhash_find:
; Line 381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__uhash_find ENDP
_TEXT	ENDS
PUBLIC	_uhash_count_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_count_56
_TEXT	SEGMENT
_hash$ = 8						; size = 4
_uhash_count_56 PROC					; COMDAT
; Line 636
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 637
	mov	eax, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR [eax+24]
; Line 638
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_count_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_get_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_get_56
_TEXT	SEGMENT
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_get_56 PROC					; COMDAT
; Line 642
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 644
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 645
	mov	esi, esp
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+4]
; Line 646
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_get_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_get_:
	DD	1
	DD	$LN4@uhash_get_
$LN4@uhash_get_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_get_
$LN3@uhash_get_:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_get_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_iget_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_iget_56
_TEXT	SEGMENT
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_iget_56 PROC					; COMDAT
; Line 650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 652
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 653
	mov	esi, esp
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+4]
; Line 654
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_iget
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_iget:
	DD	1
	DD	$LN4@uhash_iget
$LN4@uhash_iget:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_iget
$LN3@uhash_iget:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_iget_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_geti_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_geti_56
_TEXT	SEGMENT
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_geti_56 PROC					; COMDAT
; Line 658
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 660
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 661
	mov	esi, esp
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+4]
; Line 662
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_geti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_geti:
	DD	1
	DD	$LN4@uhash_geti
$LN4@uhash_geti:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_geti
$LN3@uhash_geti:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_geti_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_igeti_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_igeti_56
_TEXT	SEGMENT
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_igeti_56 PROC					; COMDAT
; Line 666
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 668
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 669
	mov	esi, esp
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+4]
; Line 670
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_iget@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_iget@2:
	DD	1
	DD	$LN4@uhash_iget@2
$LN4@uhash_iget@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_iget@2
$LN3@uhash_iget@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_igeti_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_put_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_put_56
_TEXT	SEGMENT
$T11217 = -224						; size = 4
_valueholder$ = -20					; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
_status$ = 20						; size = 4
_uhash_put_56 PROC					; COMDAT
; Line 676
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 678
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 679
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _valueholder$[ebp], eax
; Line 682
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _valueholder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyholder$[ebp]
	push	edx
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	__uhash_put
	add	esp, 20					; 00000014H
	mov	DWORD PTR $T11217[ebp], eax
	mov	eax, DWORD PTR $T11217[ebp]
; Line 683
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@uhash_put_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@uhash_put_:
	DD	2
	DD	$LN5@uhash_put_
$LN5@uhash_put_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_put_
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@uhash_put_
$LN4@uhash_put_:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN3@uhash_put_:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_put_56 ENDP
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??_uhash_put@@9@9@dd133793	; `_uhash_put'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??_uhash_put@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_put@@9@9@dd133793 DD 01d1H	; `_uhash_put'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_put
_TEXT	SEGMENT
_emptytok$ = -32					; size = 4
_e$ = -20						; size = 4
_hashcode$ = -8						; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
_hint$ = 20						; size = 1
_status$ = 24						; size = 4
__uhash_put PROC					; COMDAT
; Line 465
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 476
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN8@uhash_put
; Line 477
	jmp	$err$10679
$LN8@uhash_put:
; Line 479
	cmp	DWORD PTR _hash$[ebp], 0
	jne	SHORT $LN11@uhash_put
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_put@@9@9@dd133793
	add	eax, 14					; 0000000eH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@uhash_put:
; Line 481
	movsx	eax, BYTE PTR _hint$[ebp]
	and	eax, 2
	je	SHORT $LN7@uhash_put
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN7@uhash_put
; Line 485
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_remove
	add	esp, 8
	jmp	$LN9@uhash_put
$LN7@uhash_put:
; Line 487
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+32]
	jle	SHORT $LN6@uhash_put
; Line 488
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_rehash
	add	esp, 8
; Line 489
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN6@uhash_put
; Line 490
	jmp	$err$10679
$LN6@uhash_put:
; Line 494
	mov	esi, esp
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hashcode$[ebp], eax
; Line 495
	mov	eax, DWORD PTR _hashcode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hash$[ebp]
	push	edx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _e$[ebp], eax
; Line 496
	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN12@uhash_put
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_put@@9@9@dd133793
	add	eax, 31					; 0000001fH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@uhash_put:
; Line 498
	mov	eax, DWORD PTR _e$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN4@uhash_put
; Line 506
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 507
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+28]
	jne	SHORT $LN4@uhash_put
; Line 509
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 510
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 511
	jmp	SHORT $err$10679
$LN4@uhash_put:
; Line 519
	movzx	eax, BYTE PTR _hint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _hashcode$[ebp]
	and	eax, 2147483647				; 7fffffffH
	push	eax
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hash$[ebp]
	push	edx
	call	__uhash_setElement
	add	esp, 24					; 00000018H
	jmp	SHORT $LN9@uhash_put
$err$10679:
; Line 526
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@uhash_put
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN2@uhash_put
	mov	esi, esp
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@uhash_put:
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN1@uhash_put
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN1@uhash_put
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@uhash_put:
; Line 527
	mov	DWORD PTR _emptytok$[ebp], 0
	mov	DWORD PTR _emptytok$[ebp], 0
; Line 528
	mov	eax, DWORD PTR _emptytok$[ebp]
$LN9@uhash_put:
; Line 529
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@uhash_put
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@uhash_put:
	DD	1
	DD	$LN14@uhash_put
$LN14@uhash_put:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@uhash_put
$LN13@uhash_put:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
__uhash_put ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __uhash_setElement
_TEXT	SEGMENT
_oldValue$ = -8						; size = 4
_hash$ = 8						; size = 4
_e$ = 12						; size = 4
_hashcode$ = 16						; size = 4
_key$ = 20						; size = 4
_value$ = 24						; size = 4
_hint$ = 28						; size = 1
__uhash_setElement PROC					; COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 145
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _oldValue$[ebp], ecx
; Line 147
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@uhash_setE
	mov	eax, DWORD PTR _e$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@uhash_setE
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _key$[ebp]
	je	SHORT $LN7@uhash_setE
; Line 148
	mov	esi, esp
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@uhash_setE:
; Line 150
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN6@uhash_setE
; Line 152
	cmp	DWORD PTR _oldValue$[ebp], 0
	je	SHORT $LN5@uhash_setE
	mov	eax, DWORD PTR _oldValue$[ebp]
	cmp	eax, DWORD PTR _value$[ebp]
	je	SHORT $LN5@uhash_setE
; Line 153
	mov	esi, esp
	mov	eax, DWORD PTR _oldValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@uhash_setE:
; Line 155
	mov	DWORD PTR _oldValue$[ebp], 0
$LN6@uhash_setE:
; Line 163
	movsx	eax, BYTE PTR _hint$[ebp]
	and	eax, 1
	je	SHORT $LN4@uhash_setE
; Line 164
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 165
	jmp	SHORT $LN3@uhash_setE
$LN4@uhash_setE:
; Line 166
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@uhash_setE:
; Line 168
	movsx	eax, BYTE PTR _hint$[ebp]
	and	eax, 2
	je	SHORT $LN2@uhash_setE
; Line 169
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 170
	jmp	SHORT $LN1@uhash_setE
$LN2@uhash_setE:
; Line 171
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN1@uhash_setE:
; Line 173
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR _hashcode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 174
	mov	eax, DWORD PTR _oldValue$[ebp]
; Line 175
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@uhash_setE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@uhash_setE:
	DD	1
	DD	$LN11@uhash_setE
$LN11@uhash_setE:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN10@uhash_setE
$LN10@uhash_setE:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
__uhash_setElement ENDP
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??_uhash_remove@@9@9@dd133793	; `_uhash_remove'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??_uhash_remove@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_remove@@9@9@dd133793 DD 01b5H	; `_uhash_remove'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_remove
_TEXT	SEGMENT
_status$10662 = -32					; size = 4
_e$ = -20						; size = 4
_result$ = -8						; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
__uhash_remove PROC					; COMDAT
; Line 437
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 446
	mov	esi, esp
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _e$[ebp], eax
; Line 447
	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN5@uhash_remo
	mov	eax, DWORD PTR ?__LINE__Var@?1??_uhash_remove@@9@9@dd133793
	add	eax, 10					; 0000000aH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@uhash_remo:
; Line 448
	mov	DWORD PTR _result$[ebp], 0
; Line 449
	mov	DWORD PTR _result$[ebp], 0
; Line 450
	mov	eax, DWORD PTR _e$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN2@uhash_remo
; Line 451
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_internalRemoveElement
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 452
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+36]
	jge	SHORT $LN2@uhash_remo
; Line 453
	mov	DWORD PTR _status$10662[ebp], 0
; Line 454
	lea	eax, DWORD PTR _status$10662[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_rehash
	add	esp, 8
$LN2@uhash_remo:
; Line 457
	mov	eax, DWORD PTR _result$[ebp]
; Line 458
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@uhash_remo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@uhash_remo:
	DD	2
	DD	$LN8@uhash_remo
$LN8@uhash_remo:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@uhash_remo
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@uhash_remo
$LN7@uhash_remo:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN6@uhash_remo:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
__uhash_remove ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CK@PHNIFBIN@?$AA?$CB?$AA?$CI?$AA?$CI?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??_uhash_internalRemoveElement@@9@9@dd133793 ; `_uhash_internalRemoveElement'::`2'::__LINE__Var
;	COMDAT ??_C@_1CK@PHNIFBIN@?$AA?$CB?$AA?$CI?$AA?$CI?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@PHNIFBIN@?$AA?$CB?$AA?$CI?$AA?$CI?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@ DB '!'
	DB	00H, '(', 00H, '(', 00H, 'e', 00H, '-', 00H, '>', 00H, 'h', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, ')', 00H, ' ', 00H, '<', 00H, ' ', 00H, '0', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??_uhash_internalRemoveElement@@9@9@dd133793
_DATA	SEGMENT
?__LINE__Var@?1??_uhash_internalRemoveElement@@9@9@dd133793 DD 0b5H ; `_uhash_internalRemoveElement'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT __uhash_internalRemoveElement
_TEXT	SEGMENT
_empty$ = -8						; size = 4
_hash$ = 8						; size = 4
_e$ = 12						; size = 4
__uhash_internalRemoveElement PROC			; COMDAT
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 183
	mov	eax, DWORD PTR _e$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@uhash_inte@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??_uhash_internalRemoveElement@@9@9@dd133793
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CK@PHNIFBIN@?$AA?$CB?$AA?$CI?$AA?$CI?$AAe?$AA?9?$AA?$DO?$AAh?$AAa?$AAs?$AAh?$AAc?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@uhash_inte@2:
; Line 184
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	mov	edx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 185
	mov	DWORD PTR _empty$[ebp], 0
	mov	DWORD PTR _empty$[ebp], 0
; Line 186
	push	0
	mov	eax, DWORD PTR _empty$[ebp]
	push	eax
	mov	ecx, DWORD PTR _empty$[ebp]
	push	ecx
	push	-2147483648				; 80000000H
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	__uhash_setElement
	add	esp, 24					; 00000018H
; Line 187
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@uhash_inte@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@uhash_inte@2:
	DD	1
	DD	$LN5@uhash_inte@2
$LN5@uhash_inte@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@uhash_inte@2
$LN4@uhash_inte@2:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
__uhash_internalRemoveElement ENDP
_TEXT	ENDS
PUBLIC	_uhash_iput_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_iput_56
_TEXT	SEGMENT
$T11249 = -224						; size = 4
_valueholder$ = -20					; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
_status$ = 20						; size = 4
_uhash_iput_56 PROC					; COMDAT
; Line 689
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 691
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 692
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _valueholder$[ebp], eax
; Line 695
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _valueholder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyholder$[ebp]
	push	edx
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	__uhash_put
	add	esp, 20					; 00000014H
	mov	DWORD PTR $T11249[ebp], eax
	mov	eax, DWORD PTR $T11249[ebp]
; Line 696
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@uhash_iput
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@uhash_iput:
	DD	2
	DD	$LN5@uhash_iput
$LN5@uhash_iput:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_iput
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@uhash_iput
$LN4@uhash_iput:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN3@uhash_iput:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_iput_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_puti_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_puti_56
_TEXT	SEGMENT
$T11256 = -224						; size = 4
_valueholder$ = -20					; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
_status$ = 20						; size = 4
_uhash_puti_56 PROC					; COMDAT
; Line 702
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 704
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 705
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _valueholder$[ebp], eax
; Line 708
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _valueholder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyholder$[ebp]
	push	edx
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	__uhash_put
	add	esp, 20					; 00000014H
	mov	DWORD PTR $T11256[ebp], eax
	mov	eax, DWORD PTR $T11256[ebp]
; Line 709
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@uhash_puti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@uhash_puti:
	DD	2
	DD	$LN5@uhash_puti
$LN5@uhash_puti:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_puti
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@uhash_puti
$LN4@uhash_puti:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN3@uhash_puti:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_puti_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_iputi_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_iputi_56
_TEXT	SEGMENT
$T11263 = -224						; size = 4
_valueholder$ = -20					; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
_status$ = 20						; size = 4
_uhash_iputi_56 PROC					; COMDAT
; Line 716
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 718
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 719
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _valueholder$[ebp], eax
; Line 722
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _valueholder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyholder$[ebp]
	push	edx
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	__uhash_put
	add	esp, 20					; 00000014H
	mov	DWORD PTR $T11263[ebp], eax
	mov	eax, DWORD PTR $T11263[ebp]
; Line 723
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@uhash_iput@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@uhash_iput@2:
	DD	2
	DD	$LN5@uhash_iput@2
$LN5@uhash_iput@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_iput@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@uhash_iput@2
$LN4@uhash_iput@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN3@uhash_iput@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_iputi_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_remove_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_remove_56
_TEXT	SEGMENT
$T11270 = -212						; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_remove_56 PROC					; COMDAT
; Line 727
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 729
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 730
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_remove
	add	esp, 8
	mov	DWORD PTR $T11270[ebp], eax
	mov	eax, DWORD PTR $T11270[ebp]
; Line 731
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_remo@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_remo@2:
	DD	1
	DD	$LN4@uhash_remo@2
$LN4@uhash_remo@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_remo@2
$LN3@uhash_remo@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_remove_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_iremove_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_iremove_56
_TEXT	SEGMENT
$T11276 = -212						; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_iremove_56 PROC					; COMDAT
; Line 735
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 737
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 738
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_remove
	add	esp, 8
	mov	DWORD PTR $T11276[ebp], eax
	mov	eax, DWORD PTR $T11276[ebp]
; Line 739
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_irem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_irem:
	DD	1
	DD	$LN4@uhash_irem
$LN4@uhash_irem:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_irem
$LN3@uhash_irem:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_iremove_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_removei_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_removei_56
_TEXT	SEGMENT
$T11282 = -212						; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_removei_56 PROC					; COMDAT
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 745
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 746
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_remove
	add	esp, 8
	mov	DWORD PTR $T11282[ebp], eax
	mov	eax, DWORD PTR $T11282[ebp]
; Line 747
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_remo@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_remo@3:
	DD	1
	DD	$LN4@uhash_remo@3
$LN4@uhash_remo@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_remo@3
$LN3@uhash_remo@3:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_removei_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_iremovei_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_iremovei_56
_TEXT	SEGMENT
$T11288 = -212						; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_iremovei_56 PROC					; COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 753
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 754
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_remove
	add	esp, 8
	mov	DWORD PTR $T11288[ebp], eax
	mov	eax, DWORD PTR $T11288[ebp]
; Line 755
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@uhash_irem@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@uhash_irem@2:
	DD	1
	DD	$LN4@uhash_irem@2
$LN4@uhash_irem@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uhash_irem@2
$LN3@uhash_irem@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_iremovei_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CC@MOEELEGO@?$AAh?$AAa?$AAs?$AAh?$AA?9?$AA?$DO?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	_uhash_removeElement_56
PUBLIC	?__LINE__Var@?1??uhash_removeAll_56@@9@9	; `uhash_removeAll_56'::`2'::__LINE__Var
PUBLIC	_uhash_removeAll_56
;	COMDAT ??_C@_1CC@MOEELEGO@?$AAh?$AAa?$AAs?$AAh?$AA?9?$AA?$DO?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@MOEELEGO@?$AAh?$AAa?$AAs?$AAh?$AA?9?$AA?$DO?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'h'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??uhash_removeAll_56@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??uhash_removeAll_56@@9@9 DD 02f6H	; `uhash_removeAll_56'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _uhash_removeAll_56
_TEXT	SEGMENT
_e$ = -20						; size = 4
_pos$ = -8						; size = 4
_hash$ = 8						; size = 4
_uhash_removeAll_56 PROC				; COMDAT
; Line 758
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 759
	mov	DWORD PTR _pos$[ebp], -1
; Line 761
	cmp	DWORD PTR _hash$[ebp], 0
	jne	SHORT $LN6@uhash_remo@4
	mov	eax, DWORD PTR ?__LINE__Var@?1??uhash_removeAll_56@@9@9
	add	eax, 3
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@uhash_remo@4:
; Line 762
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN3@uhash_remo@4
$LN2@uhash_remo@4:
; Line 763
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _e$[ebp], eax
	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN3@uhash_remo@4
; Line 764
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_uhash_removeElement_56
	add	esp, 8
; Line 765
	jmp	SHORT $LN2@uhash_remo@4
$LN3@uhash_remo@4:
; Line 767
	mov	eax, DWORD PTR _hash$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN4@uhash_remo@4
	mov	ecx, DWORD PTR ?__LINE__Var@?1??uhash_removeAll_56@@9@9
	add	ecx, 9
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CC@MOEELEGO@?$AAh?$AAa?$AAs?$AAh?$AA?9?$AA?$DO?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@uhash_remo@4:
; Line 768
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@uhash_remo@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@uhash_remo@4:
	DD	1
	DD	$LN9@uhash_remo@4
$LN9@uhash_remo@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@uhash_remo@4
$LN8@uhash_remo@4:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_uhash_removeAll_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_find_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_find_56
_TEXT	SEGMENT
tv72 = -220						; size = 4
_e$ = -20						; size = 4
_keyholder$ = -8					; size = 4
_hash$ = 8						; size = 4
_key$ = 12						; size = 4
_uhash_find_56 PROC					; COMDAT
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 774
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _keyholder$[ebp], eax
; Line 775
	mov	esi, esp
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _keyholder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _e$[ebp], eax
; Line 776
	mov	eax, DWORD PTR _e$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@uhash_find@2
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN4@uhash_find@2
$LN3@uhash_find@2:
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR tv72[ebp], ecx
$LN4@uhash_find@2:
	mov	eax, DWORD PTR tv72[ebp]
; Line 777
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@uhash_find@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@uhash_find@2:
	DD	1
	DD	$LN6@uhash_find@2
$LN6@uhash_find@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@uhash_find@2
$LN5@uhash_find@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_uhash_find_56 ENDP
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??uhash_nextElement_56@@9@9	; `uhash_nextElement_56'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??uhash_nextElement_56@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??uhash_nextElement_56@@9@9 DD 030cH	; `uhash_nextElement_56'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _uhash_nextElement_56
_TEXT	SEGMENT
_i$ = -8						; size = 4
_hash$ = 8						; size = 4
_pos$ = 12						; size = 4
_uhash_nextElement_56 PROC				; COMDAT
; Line 780
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 785
	cmp	DWORD PTR _hash$[ebp], 0
	jne	SHORT $LN7@uhash_next
	mov	eax, DWORD PTR ?__LINE__Var@?1??uhash_nextElement_56@@9@9
	add	eax, 5
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@uhash_next:
; Line 786
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN4@uhash_next
$LN3@uhash_next:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@uhash_next:
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+28]
	jge	SHORT $LN2@uhash_next
; Line 787
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	DWORD PTR [eax+edx], 0
	jl	SHORT $LN1@uhash_next
; Line 788
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 789
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _hash$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN5@uhash_next
$LN1@uhash_next:
; Line 791
	jmp	SHORT $LN3@uhash_next
$LN2@uhash_next:
; Line 794
	xor	eax, eax
$LN5@uhash_next:
; Line 795
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_nextElement_56 ENDP
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??uhash_removeElement_56@@9@9	; `uhash_removeElement_56'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??uhash_removeElement_56@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??uhash_removeElement_56@@9@9 DD 031eH	; `uhash_removeElement_56'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _uhash_removeElement_56
_TEXT	SEGMENT
$T11313 = -212						; size = 4
_nce$10945 = -8						; size = 4
_hash$ = 8						; size = 4
_e$ = 12						; size = 4
_uhash_removeElement_56 PROC				; COMDAT
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 799
	cmp	DWORD PTR _hash$[ebp], 0
	jne	SHORT $LN4@uhash_remo@5
	mov	eax, DWORD PTR ?__LINE__Var@?1??uhash_removeElement_56@@9@9
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CI@DGNLPDEI@?$AAh?$AAa?$AAs?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@uhash_remo@5:
; Line 800
	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN5@uhash_remo@5
	mov	eax, DWORD PTR ?__LINE__Var@?1??uhash_removeElement_56@@9@9
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@PKGPAHFE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CC@NDGNDPFD@?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@uhash_remo@5:
; Line 801
	mov	eax, DWORD PTR _e$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN1@uhash_remo@5
; Line 802
	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR _nce$10945[ebp], eax
; Line 803
	mov	eax, DWORD PTR _nce$10945[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	__uhash_internalRemoveElement
	add	esp, 8
	mov	DWORD PTR $T11313[ebp], eax
	mov	eax, DWORD PTR $T11313[ebp]
	jmp	SHORT $LN2@uhash_remo@5
$LN1@uhash_remo@5:
; Line 805
	xor	eax, eax
$LN2@uhash_remo@5:
; Line 806
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_removeElement_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_hashUChars_56
EXTRN	_ustr_hashUCharsN_56:PROC
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_hashUChars_56
_TEXT	SEGMENT
tv70 = -208						; size = 4
_s$ = -8						; size = 4
_key$ = 8						; size = 4
_uhash_hashUChars_56 PROC				; COMDAT
; Line 837
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 838
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 839
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN3@uhash_hash
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@uhash_hash
$LN3@uhash_hash:
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ustr_hashUCharsN_56
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@uhash_hash:
	mov	eax, DWORD PTR tv70[ebp]
; Line 840
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_hashUChars_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_hashChars_56
EXTRN	_ustr_hashCharsN_56:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_hashChars_56
_TEXT	SEGMENT
tv70 = -208						; size = 4
_s$ = -8						; size = 4
_key$ = 8						; size = 4
_uhash_hashChars_56 PROC				; COMDAT
; Line 843
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 844
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 845
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN3@uhash_hash@2
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@uhash_hash@2
$LN3@uhash_hash@2:
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ustr_hashCharsN_56
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@uhash_hash@2:
	mov	eax, DWORD PTR tv70[ebp]
; Line 846
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_hashChars_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_hashIChars_56
EXTRN	_ustr_hashICharsN_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_hashIChars_56
_TEXT	SEGMENT
tv70 = -208						; size = 4
_s$ = -8						; size = 4
_key$ = 8						; size = 4
_uhash_hashIChars_56 PROC				; COMDAT
; Line 849
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 850
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 851
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN3@uhash_hash@3
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@uhash_hash@3
$LN3@uhash_hash@3:
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ustr_hashICharsN_56
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@uhash_hash@3:
	mov	eax, DWORD PTR tv70[ebp]
; Line 852
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_hashIChars_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_equals_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_equals_56
_TEXT	SEGMENT
_val2$10989 = -104					; size = 4
_elem2$10988 = -92					; size = 4
_val1$10987 = -80					; size = 4
_key1$10986 = -68					; size = 4
_elem1$10985 = -56					; size = 4
_i$ = -44						; size = 4
_pos$ = -32						; size = 4
_count2$ = -20						; size = 4
_count1$ = -8						; size = 4
_hash1$ = 8						; size = 4
_hash2$ = 12						; size = 4
_uhash_equals_56 PROC					; COMDAT
; Line 855
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 858
	mov	eax, DWORD PTR _hash1$[ebp]
	cmp	eax, DWORD PTR _hash2$[ebp]
	jne	SHORT $LN8@uhash_equa
; Line 859
	mov	al, 1
	jmp	$LN9@uhash_equa
$LN8@uhash_equa:
; Line 873
	cmp	DWORD PTR _hash1$[ebp], 0
	je	SHORT $LN6@uhash_equa
	cmp	DWORD PTR _hash2$[ebp], 0
	je	SHORT $LN6@uhash_equa
	mov	eax, DWORD PTR _hash1$[ebp]
	mov	ecx, DWORD PTR _hash2$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN6@uhash_equa
	mov	eax, DWORD PTR _hash1$[ebp]
	mov	ecx, DWORD PTR _hash2$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN6@uhash_equa
	mov	eax, DWORD PTR _hash1$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN7@uhash_equa
$LN6@uhash_equa:
; Line 879
	xor	al, al
	jmp	$LN9@uhash_equa
$LN7@uhash_equa:
; Line 882
	mov	eax, DWORD PTR _hash1$[ebp]
	push	eax
	call	_uhash_count_56
	add	esp, 4
	mov	DWORD PTR _count1$[ebp], eax
; Line 883
	mov	eax, DWORD PTR _hash2$[ebp]
	push	eax
	call	_uhash_count_56
	add	esp, 4
	mov	DWORD PTR _count2$[ebp], eax
; Line 884
	mov	eax, DWORD PTR _count1$[ebp]
	cmp	eax, DWORD PTR _count2$[ebp]
	je	SHORT $LN5@uhash_equa
; Line 885
	xor	al, al
	jmp	$LN9@uhash_equa
$LN5@uhash_equa:
; Line 888
	mov	DWORD PTR _pos$[ebp], -1
; Line 889
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@uhash_equa
$LN3@uhash_equa:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@uhash_equa:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count1$[ebp]
	jge	$LN2@uhash_equa
; Line 890
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash1$[ebp]
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _elem1$10985[ebp], eax
; Line 891
	mov	eax, DWORD PTR _elem1$10985[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _key1$10986[ebp], ecx
; Line 892
	mov	eax, DWORD PTR _elem1$10985[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _val1$10987[ebp], ecx
; Line 897
	mov	esi, esp
	mov	eax, DWORD PTR _key1$10986[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash2$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _key1$10986[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash2$[ebp]
	push	ecx
	call	__uhash_find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _elem2$10988[ebp], eax
; Line 898
	mov	eax, DWORD PTR _elem2$10988[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _val2$10989[ebp], ecx
; Line 899
	mov	esi, esp
	mov	eax, DWORD PTR _val2$10989[ebp]
	push	eax
	mov	ecx, DWORD PTR _val1$10987[ebp]
	push	ecx
	mov	edx, DWORD PTR _hash1$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@uhash_equa
; Line 900
	xor	al, al
	jmp	SHORT $LN9@uhash_equa
$LN1@uhash_equa:
; Line 902
	jmp	$LN3@uhash_equa
$LN2@uhash_equa:
; Line 903
	mov	al, 1
$LN9@uhash_equa:
; Line 904
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@uhash_equa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@uhash_equa:
	DD	4
	DD	$LN15@uhash_equa
$LN15@uhash_equa:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@uhash_equa
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN12@uhash_equa
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN13@uhash_equa
	DD	-104					; ffffff98H
	DD	4
	DD	$LN14@uhash_equa
$LN14@uhash_equa:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN13@uhash_equa:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	49					; 00000031H
	DB	0
$LN12@uhash_equa:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	49					; 00000031H
	DB	0
$LN11@uhash_equa:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_uhash_equals_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_compareUChars_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_compareUChars_56
_TEXT	SEGMENT
_p2$ = -20						; size = 4
_p1$ = -8						; size = 4
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_uhash_compareUChars_56 PROC				; COMDAT
; Line 911
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 912
	mov	eax, DWORD PTR _key1$[ebp]
	mov	DWORD PTR _p1$[ebp], eax
; Line 913
	mov	eax, DWORD PTR _key2$[ebp]
	mov	DWORD PTR _p2$[ebp], eax
; Line 914
	mov	eax, DWORD PTR _p1$[ebp]
	cmp	eax, DWORD PTR _p2$[ebp]
	jne	SHORT $LN5@uhash_comp
; Line 915
	mov	al, 1
	jmp	SHORT $LN6@uhash_comp
$LN5@uhash_comp:
; Line 917
	cmp	DWORD PTR _p1$[ebp], 0
	je	SHORT $LN3@uhash_comp
	cmp	DWORD PTR _p2$[ebp], 0
	jne	SHORT $LN2@uhash_comp
$LN3@uhash_comp:
; Line 918
	xor	al, al
	jmp	SHORT $LN6@uhash_comp
$LN2@uhash_comp:
; Line 920
	mov	eax, DWORD PTR _p1$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@uhash_comp
	mov	eax, DWORD PTR _p1$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _p2$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@uhash_comp
; Line 921
	mov	eax, DWORD PTR _p1$[ebp]
	add	eax, 2
	mov	DWORD PTR _p1$[ebp], eax
; Line 922
	mov	eax, DWORD PTR _p2$[ebp]
	add	eax, 2
	mov	DWORD PTR _p2$[ebp], eax
; Line 923
	jmp	SHORT $LN2@uhash_comp
$LN1@uhash_comp:
; Line 924
	mov	eax, DWORD PTR _p1$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _p2$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	sete	al
$LN6@uhash_comp:
; Line 925
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_compareUChars_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_compareChars_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_compareChars_56
_TEXT	SEGMENT
_p2$ = -20						; size = 4
_p1$ = -8						; size = 4
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_uhash_compareChars_56 PROC				; COMDAT
; Line 928
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 929
	mov	eax, DWORD PTR _key1$[ebp]
	mov	DWORD PTR _p1$[ebp], eax
; Line 930
	mov	eax, DWORD PTR _key2$[ebp]
	mov	DWORD PTR _p2$[ebp], eax
; Line 931
	mov	eax, DWORD PTR _p1$[ebp]
	cmp	eax, DWORD PTR _p2$[ebp]
	jne	SHORT $LN5@uhash_comp@2
; Line 932
	mov	al, 1
	jmp	SHORT $LN6@uhash_comp@2
$LN5@uhash_comp@2:
; Line 934
	cmp	DWORD PTR _p1$[ebp], 0
	je	SHORT $LN3@uhash_comp@2
	cmp	DWORD PTR _p2$[ebp], 0
	jne	SHORT $LN2@uhash_comp@2
$LN3@uhash_comp@2:
; Line 935
	xor	al, al
	jmp	SHORT $LN6@uhash_comp@2
$LN2@uhash_comp@2:
; Line 937
	mov	eax, DWORD PTR _p1$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@uhash_comp@2
	mov	eax, DWORD PTR _p1$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _p2$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@uhash_comp@2
; Line 938
	mov	eax, DWORD PTR _p1$[ebp]
	add	eax, 1
	mov	DWORD PTR _p1$[ebp], eax
; Line 939
	mov	eax, DWORD PTR _p2$[ebp]
	add	eax, 1
	mov	DWORD PTR _p2$[ebp], eax
; Line 940
	jmp	SHORT $LN2@uhash_comp@2
$LN1@uhash_comp@2:
; Line 941
	mov	eax, DWORD PTR _p1$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _p2$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	sete	al
$LN6@uhash_comp@2:
; Line 942
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_compareChars_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_compareIChars_56
EXTRN	_uprv_asciitolower_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_compareIChars_56
_TEXT	SEGMENT
_p2$ = -20						; size = 4
_p1$ = -8						; size = 4
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_uhash_compareIChars_56 PROC				; COMDAT
; Line 945
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 946
	mov	eax, DWORD PTR _key1$[ebp]
	mov	DWORD PTR _p1$[ebp], eax
; Line 947
	mov	eax, DWORD PTR _key2$[ebp]
	mov	DWORD PTR _p2$[ebp], eax
; Line 948
	mov	eax, DWORD PTR _p1$[ebp]
	cmp	eax, DWORD PTR _p2$[ebp]
	jne	SHORT $LN5@uhash_comp@3
; Line 949
	mov	al, 1
	jmp	SHORT $LN6@uhash_comp@3
$LN5@uhash_comp@3:
; Line 951
	cmp	DWORD PTR _p1$[ebp], 0
	je	SHORT $LN3@uhash_comp@3
	cmp	DWORD PTR _p2$[ebp], 0
	jne	SHORT $LN2@uhash_comp@3
$LN3@uhash_comp@3:
; Line 952
	xor	al, al
	jmp	SHORT $LN6@uhash_comp@3
$LN2@uhash_comp@3:
; Line 954
	mov	eax, DWORD PTR _p1$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@uhash_comp@3
	mov	eax, DWORD PTR _p1$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	_uprv_asciitolower_56
	add	esp, 4
	movsx	esi, al
	mov	edx, DWORD PTR _p2$[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	call	_uprv_asciitolower_56
	add	esp, 4
	movsx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN1@uhash_comp@3
; Line 955
	mov	eax, DWORD PTR _p1$[ebp]
	add	eax, 1
	mov	DWORD PTR _p1$[ebp], eax
; Line 956
	mov	eax, DWORD PTR _p2$[ebp]
	add	eax, 1
	mov	DWORD PTR _p2$[ebp], eax
; Line 957
	jmp	SHORT $LN2@uhash_comp@3
$LN1@uhash_comp@3:
; Line 958
	mov	eax, DWORD PTR _p1$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _p2$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	sete	al
$LN6@uhash_comp@3:
; Line 959
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_compareIChars_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_hashLong_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_hashLong_56
_TEXT	SEGMENT
_key$ = 8						; size = 4
_uhash_hashLong_56 PROC					; COMDAT
; Line 966
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 967
	mov	eax, DWORD PTR _key$[ebp]
; Line 968
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_hashLong_56 ENDP
_TEXT	ENDS
PUBLIC	_uhash_compareLong_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uhash_compareLong_56
_TEXT	SEGMENT
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_uhash_compareLong_56 PROC				; COMDAT
; Line 971
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 972
	mov	eax, DWORD PTR _key1$[ebp]
	cmp	eax, DWORD PTR _key2$[ebp]
	sete	al
; Line 973
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_uhash_compareLong_56 ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\uts46.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_asciiData DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33504 = -32					; size = 4
_len$33503 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33503[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33504[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33503[ebp]
	cmp	ecx, DWORD PTR _textLength$33504[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33503[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T45700 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T45700[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T45700[ebp]
	or	eax, 1
	mov	DWORD PTR $T45700[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??_7IDNA@icu_56@@6B@				; icu_56::IDNA::`vftable'
PUBLIC	??0IDNA@icu_56@@QAE@XZ				; icu_56::IDNA::IDNA
PUBLIC	??_R4IDNA@icu_56@@6B@				; icu_56::IDNA::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIDNA@icu_56@@@8				; icu_56::IDNA `RTTI Type Descriptor'
PUBLIC	??_R3IDNA@icu_56@@8				; icu_56::IDNA::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDNA@icu_56@@8				; icu_56::IDNA::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDNA@icu_56@@8			; icu_56::IDNA::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EIDNA@icu_56@@UAEPAXI@Z			; icu_56::IDNA::`vector deleting destructor'
PUBLIC	?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::IDNA::labelToASCII_UTF8
PUBLIC	?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::IDNA::labelToUnicodeUTF8
PUBLIC	?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::IDNA::nameToASCII_UTF8
PUBLIC	?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::IDNA::nameToUnicodeUTF8
;	COMDAT ??_R1A@?0A@EA@IDNA@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDNA@icu_56@@8 DD FLAT:??_R0?AVIDNA@icu_56@@@8 ; icu_56::IDNA::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDNA@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2IDNA@icu_56@@8
rdata$r	SEGMENT
??_R2IDNA@icu_56@@8 DD FLAT:??_R1A@?0A@EA@IDNA@icu_56@@8 ; icu_56::IDNA::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3IDNA@icu_56@@8
rdata$r	SEGMENT
??_R3IDNA@icu_56@@8 DD 00H				; icu_56::IDNA::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IDNA@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIDNA@icu_56@@@8
_DATA	SEGMENT
??_R0?AVIDNA@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::IDNA `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIDNA@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IDNA@icu_56@@6B@
rdata$r	SEGMENT
??_R4IDNA@icu_56@@6B@ DD 00H				; icu_56::IDNA::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIDNA@icu_56@@@8
	DD	FLAT:??_R3IDNA@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7IDNA@icu_56@@6B@
CONST	SEGMENT
??_7IDNA@icu_56@@6B@ DD FLAT:??_R4IDNA@icu_56@@6B@	; icu_56::IDNA::`vftable'
	DD	FLAT:??_EIDNA@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0IDNA@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IDNA@icu_56@@QAE@XZ PROC				; icu_56::IDNA::IDNA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDNA@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDNA@icu_56@@QAE@XZ ENDP				; icu_56::IDNA::IDNA
_TEXT	ENDS
PUBLIC	??0IDNA@icu_56@@QAE@ABV01@@Z			; icu_56::IDNA::IDNA
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IDNA@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0IDNA@icu_56@@QAE@ABV01@@Z PROC			; icu_56::IDNA::IDNA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDNA@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IDNA@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::IDNA::IDNA
_TEXT	ENDS
PUBLIC	??4IDNA@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::IDNA::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4IDNA@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4IDNA@icu_56@@QAEAAV01@ABV01@@Z PROC			; icu_56::IDNA::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4IDNA@icu_56@@QAEAAV01@ABV01@@Z ENDP			; icu_56::IDNA::operator=
_TEXT	ENDS
PUBLIC	??1IDNA@icu_56@@UAE@XZ				; icu_56::IDNA::~IDNA
PUBLIC	??_GIDNA@icu_56@@UAEPAXI@Z			; icu_56::IDNA::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIDNA@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIDNA@icu_56@@UAEPAXI@Z PROC				; icu_56::IDNA::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IDNA@icu_56@@UAE@XZ			; icu_56::IDNA::~IDNA
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIDNA@icu_56@@UAEPAXI@Z ENDP				; icu_56::IDNA::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EIDNA@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EIDNA@icu_56@@UAEPAXI@Z PROC				; icu_56::IDNA::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1IDNA@icu_56@@UAE@XZ		; icu_56::IDNA::~IDNA
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IDNA@icu_56@@UAE@XZ			; icu_56::IDNA::~IDNA
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EIDNA@icu_56@@UAEPAXI@Z ENDP				; icu_56::IDNA::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0IDNAInfo@icu_56@@QAE@XZ			; icu_56::IDNAInfo::IDNAInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IDNAInfo@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IDNAInfo@icu_56@@QAE@XZ PROC				; icu_56::IDNAInfo::IDNAInfo, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\idna.h
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+9], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], 1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDNAInfo@icu_56@@QAE@XZ ENDP				; icu_56::IDNAInfo::IDNAInfo
_TEXT	ENDS
PUBLIC	?hasErrors@IDNAInfo@icu_56@@QBECXZ		; icu_56::IDNAInfo::hasErrors
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasErrors@IDNAInfo@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasErrors@IDNAInfo@icu_56@@QBECXZ PROC			; icu_56::IDNAInfo::hasErrors, COMDAT
; _this$ = ecx
; Line 278
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasErrors@IDNAInfo@icu_56@@QBECXZ ENDP			; icu_56::IDNAInfo::hasErrors
_TEXT	ENDS
PUBLIC	?getErrors@IDNAInfo@icu_56@@QBEIXZ		; icu_56::IDNAInfo::getErrors
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getErrors@IDNAInfo@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getErrors@IDNAInfo@icu_56@@QBEIXZ PROC			; icu_56::IDNAInfo::getErrors, COMDAT
; _this$ = ecx
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getErrors@IDNAInfo@icu_56@@QBEIXZ ENDP			; icu_56::IDNAInfo::getErrors
_TEXT	ENDS
PUBLIC	?isTransitionalDifferent@IDNAInfo@icu_56@@QBECXZ ; icu_56::IDNAInfo::isTransitionalDifferent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isTransitionalDifferent@IDNAInfo@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isTransitionalDifferent@IDNAInfo@icu_56@@QBECXZ PROC	; icu_56::IDNAInfo::isTransitionalDifferent, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isTransitionalDifferent@IDNAInfo@icu_56@@QBECXZ ENDP	; icu_56::IDNAInfo::isTransitionalDifferent
_TEXT	ENDS
PUBLIC	?reset@IDNAInfo@icu_56@@AAEXXZ			; icu_56::IDNAInfo::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@IDNAInfo@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@IDNAInfo@icu_56@@AAEXXZ PROC			; icu_56::IDNAInfo::reset, COMDAT
; _this$ = ecx
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 309
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+9], 0
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], 1
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@IDNAInfo@icu_56@@AAEXXZ ENDP			; icu_56::IDNAInfo::reset
_TEXT	ENDS
PUBLIC	??_7UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`vftable'
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@XZ		; icu_56::UnicodeFunctor::UnicodeFunctor
PUBLIC	??_R4UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFunctor::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFunctor@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeFunctor@icu_56@@6B@ DD 00H			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFunctor@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeFunctor@icu_56@@6B@ DD FLAT:??_R4UnicodeFunctor@icu_56@@6B@ ; icu_56::UnicodeFunctor::`vftable'
	DD	FLAT:??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFunctor@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFunctor::UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFunctor::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeFunctor::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeFunctor::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`scalar deleting destructor'
EXTRN	??1UnicodeFunctor@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFunctor::~UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`vftable'
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@XZ		; icu_56::UnicodeMatcher::UnicodeMatcher
PUBLIC	??_R4UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeMatcher@icu_56@@6B@ DD 00H			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeMatcher@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeMatcher@icu_56@@6B@ DD FLAT:??_R4UnicodeMatcher@icu_56@@6B@ ; icu_56::UnicodeMatcher::`vftable'
	DD	FLAT:??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@XZ PROC			; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeMatcher@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeMatcher::UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`scalar deleting destructor'
EXTRN	??1UnicodeMatcher@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeMatcher::~UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??0UnicodeFilter@icu_56@@QAE@XZ			; icu_56::UnicodeFilter::UnicodeFilter
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_EUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`vector deleting destructor'
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeFilter@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeFilter::matches
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFilter@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFilter@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFilter::UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UnicodeFil
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@UnicodeFil
$LN3@UnicodeFil:
	mov	DWORD PTR tv90[ebp], 0
$LN4@UnicodeFil:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFilter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeFilter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@operator@2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	DWORD PTR tv84[ebp], 0
$LN4@operator@2:
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeFilter::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`scalar deleting destructor'
EXTRN	??1UnicodeFilter@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFilter::~UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1UnicodeFilter@icu_56@@UAE@XZ	; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9UnicodeSet@icu_56@@QBECABV01@@Z		; icu_56::UnicodeSet::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeSet@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_o$ = 8							; size = 4
??9UnicodeSet@icu_56@@QBECABV01@@Z PROC			; icu_56::UnicodeSet::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\uniset.h
; Line 1651
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1652
	mov	esi, esp
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeSet@icu_56@@QBECABV01@@Z ENDP			; icu_56::UnicodeSet::operator!=
_TEXT	ENDS
PUBLIC	?isFrozen@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isFrozen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFrozen@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
?isFrozen@UnicodeSet@icu_56@@QBECXZ PROC		; icu_56::UnicodeSet::isFrozen, COMDAT
; _this$ = ecx
; Line 1655
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@isFrozen
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jne	SHORT $LN3@isFrozen
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN4@isFrozen
$LN3@isFrozen:
	mov	BYTE PTR tv68[ebp], 1
$LN4@isFrozen:
	mov	al, BYTE PTR tv68[ebp]
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFrozen@UnicodeSet@icu_56@@QBECXZ ENDP		; icu_56::UnicodeSet::isFrozen
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECHH@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECHH@Z:PROC	; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?containsSome@UnicodeSet@icu_56@@QBECHH@Z PROC		; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1660
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECHH@Z ; icu_56::UnicodeSet::containsNone
	movsx	edx, al
	test	edx, edx
	sete	al
; Line 1661
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?containsSome@UnicodeSet@icu_56@@QBECHH@Z ENDP		; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1664
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1667
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1668
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1669
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeSet@icu_56@@QBECXZ PROC			; icu_56::UnicodeSet::isBogus, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1672
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+48]
	and	eax, 1
; Line 1673
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeSet@icu_56@@QBECXZ ENDP			; icu_56::UnicodeSet::isBogus
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1675
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1676
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1677
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1679
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1680
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1681
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1683
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1684
	mov	eax, DWORD PTR _this$[ebp]
; Line 1685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1688
	mov	eax, DWORD PTR _this$[ebp]
; Line 1689
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
EXTRN	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::span
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::span, COMDAT
; _this$ = ecx
; Line 1691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1692
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1693
	cmp	DWORD PTR _start$[ebp], 0
	jge	SHORT $LN3@span
; Line 1694
	mov	DWORD PTR _start$[ebp], 0
	jmp	SHORT $LN2@span
$LN3@span:
; Line 1695
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@span
; Line 1696
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN2@span:
; Line 1698
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	edx, DWORD PTR _start$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	add	eax, DWORD PTR _start$[ebp]
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::span
_TEXT	ENDS
PUBLIC	?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
EXTRN	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::spanBack
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_limit$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBack, COMDAT
; _this$ = ecx
; Line 1701
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1702
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1703
	cmp	DWORD PTR _limit$[ebp], 0
	jge	SHORT $LN3@spanBack
; Line 1704
	mov	DWORD PTR _limit$[ebp], 0
	jmp	SHORT $LN2@spanBack
$LN3@spanBack:
; Line 1705
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@spanBack
; Line 1706
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN2@spanBack:
; Line 1708
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
; Line 1709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBack
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::Normalizer2::normalize
EXTRN	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\unicode\normalizer2.h
xdata$x	SEGMENT
__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T45865 = -300						; size = 4
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::Normalizer2::normalize, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T45865[ebp], 0
; Line 195
	lea	ecx, DWORD PTR _result$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 196
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	ecx, DWORD PTR $T45865[ebp]
	or	ecx, 1
	mov	DWORD PTR $T45865[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@normalize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN9@normalize:
	DD	1
	DD	$LN8@normalize
$LN8@normalize:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@normalize
$LN6@normalize:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T45865[ebp]
	and	eax, 1
	je	$LN5@normalize
	and	DWORD PTR $T45865[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN5@normalize:
	ret	0
__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::Normalizer2::normalize
PUBLIC	??_7Normalizer2@icu_56@@6B@			; icu_56::Normalizer2::`vftable'
PUBLIC	??0Normalizer2@icu_56@@QAE@XZ			; icu_56::Normalizer2::Normalizer2
PUBLIC	??_R4Normalizer2@icu_56@@6B@			; icu_56::Normalizer2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNormalizer2@icu_56@@@8			; icu_56::Normalizer2 `RTTI Type Descriptor'
PUBLIC	??_R3Normalizer2@icu_56@@8			; icu_56::Normalizer2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Normalizer2@icu_56@@8			; icu_56::Normalizer2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Normalizer2@icu_56@@8		; icu_56::Normalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENormalizer2@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2::`vector deleting destructor'
EXTRN	?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::Normalizer2::getRawDecomposition
EXTRN	?composePair@Normalizer2@icu_56@@UBEHHH@Z:PROC	; icu_56::Normalizer2::composePair
EXTRN	?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z:PROC ; icu_56::Normalizer2::getCombiningClass
;	COMDAT ??_R1A@?0A@EA@Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Normalizer2@icu_56@@8 DD FLAT:??_R0?AVNormalizer2@icu_56@@@8 ; icu_56::Normalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R2Normalizer2@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Normalizer2@icu_56@@8 ; icu_56::Normalizer2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R3Normalizer2@icu_56@@8 DD 00H			; icu_56::Normalizer2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNormalizer2@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNormalizer2@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Normalizer2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNormalizer2@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Normalizer2@icu_56@@6B@
rdata$r	SEGMENT
??_R4Normalizer2@icu_56@@6B@ DD 00H			; icu_56::Normalizer2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNormalizer2@icu_56@@@8
	DD	FLAT:??_R3Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Normalizer2@icu_56@@6B@
CONST	SEGMENT
??_7Normalizer2@icu_56@@6B@ DD FLAT:??_R4Normalizer2@icu_56@@6B@ ; icu_56::Normalizer2::`vftable'
	DD	FLAT:??_ENormalizer2@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?composePair@Normalizer2@icu_56@@UBEHHH@Z
	DD	FLAT:?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Normalizer2@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Normalizer2@icu_56@@QAE@XZ PROC			; icu_56::Normalizer2::Normalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Normalizer2@icu_56@@QAE@XZ ENDP			; icu_56::Normalizer2::Normalizer2
_TEXT	ENDS
PUBLIC	??0Normalizer2@icu_56@@QAE@ABV01@@Z		; icu_56::Normalizer2::Normalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Normalizer2@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Normalizer2@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Normalizer2::Normalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Normalizer2@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Normalizer2::Normalizer2
_TEXT	ENDS
PUBLIC	??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Normalizer2::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Normalizer2::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Normalizer2::operator=
_TEXT	ENDS
PUBLIC	??_GNormalizer2@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2::`scalar deleting destructor'
EXTRN	??1Normalizer2@icu_56@@UAE@XZ:PROC		; icu_56::Normalizer2::~Normalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNormalizer2@icu_56@@UAEPAXI@Z PROC			; icu_56::Normalizer2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2@icu_56@@UAE@XZ		; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNormalizer2@icu_56@@UAEPAXI@Z ENDP			; icu_56::Normalizer2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENormalizer2@icu_56@@UAEPAXI@Z PROC			; icu_56::Normalizer2::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1Normalizer2@icu_56@@UAE@XZ	; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2@icu_56@@UAE@XZ		; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENormalizer2@icu_56@@UAEPAXI@Z ENDP			; icu_56::Normalizer2::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7FilteredNormalizer2@icu_56@@6B@		; icu_56::FilteredNormalizer2::`vftable'
PUBLIC	??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z ; icu_56::FilteredNormalizer2::FilteredNormalizer2
PUBLIC	??_R4FilteredNormalizer2@icu_56@@6B@		; icu_56::FilteredNormalizer2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFilteredNormalizer2@icu_56@@@8		; icu_56::FilteredNormalizer2 `RTTI Type Descriptor'
PUBLIC	??_R3FilteredNormalizer2@icu_56@@8		; icu_56::FilteredNormalizer2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FilteredNormalizer2@icu_56@@8		; icu_56::FilteredNormalizer2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8	; icu_56::FilteredNormalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z	; icu_56::FilteredNormalizer2::`vector deleting destructor'
EXTRN	?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::normalize
EXTRN	?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::normalizeSecondAndAppend
EXTRN	?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::append
EXTRN	?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::FilteredNormalizer2::getDecomposition
EXTRN	?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::FilteredNormalizer2::getRawDecomposition
EXTRN	?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z:PROC ; icu_56::FilteredNormalizer2::composePair
EXTRN	?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z:PROC ; icu_56::FilteredNormalizer2::getCombiningClass
EXTRN	?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::isNormalized
EXTRN	?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::quickCheck
EXTRN	?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::spanQuickCheckYes
EXTRN	?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::hasBoundaryBefore
EXTRN	?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::hasBoundaryAfter
EXTRN	?isInert@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::isInert
;	COMDAT ??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8 DD FLAT:??_R0?AVFilteredNormalizer2@icu_56@@@8 ; icu_56::FilteredNormalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R2FilteredNormalizer2@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8 ; icu_56::FilteredNormalizer2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Normalizer2@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R3FilteredNormalizer2@icu_56@@8 DD 00H		; icu_56::FilteredNormalizer2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFilteredNormalizer2@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFilteredNormalizer2@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FilteredNormalizer2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFilteredNormalizer2@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FilteredNormalizer2@icu_56@@6B@
rdata$r	SEGMENT
??_R4FilteredNormalizer2@icu_56@@6B@ DD 00H		; icu_56::FilteredNormalizer2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFilteredNormalizer2@icu_56@@@8
	DD	FLAT:??_R3FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FilteredNormalizer2@icu_56@@6B@
CONST	SEGMENT
??_7FilteredNormalizer2@icu_56@@6B@ DD FLAT:??_R4FilteredNormalizer2@icu_56@@6B@ ; icu_56::FilteredNormalizer2::`vftable'
	DD	FLAT:??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z
	DD	FLAT:?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z
	DD	FLAT:?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z
	DD	FLAT:?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z
	DD	FLAT:?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z
	DD	FLAT:?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z
	DD	FLAT:?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z
	DD	FLAT:?isInert@FilteredNormalizer2@icu_56@@UBECH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n2$ = 8						; size = 4
_filterSet$ = 12					; size = 4
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z PROC ; icu_56::FilteredNormalizer2::FilteredNormalizer2, COMDAT
; _this$ = ecx
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Normalizer2@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FilteredNormalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n2$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _filterSet$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z ENDP ; icu_56::FilteredNormalizer2::FilteredNormalizer2
_TEXT	ENDS
PUBLIC	??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z	; icu_56::FilteredNormalizer2::FilteredNormalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z PROC	; icu_56::FilteredNormalizer2::FilteredNormalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Normalizer2@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FilteredNormalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::FilteredNormalizer2::FilteredNormalizer2
_TEXT	ENDS
PUBLIC	??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z	; icu_56::FilteredNormalizer2::`scalar deleting destructor'
EXTRN	??1FilteredNormalizer2@icu_56@@UAE@XZ:PROC	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z PROC		; icu_56::FilteredNormalizer2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FilteredNormalizer2@icu_56@@UAE@XZ	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z ENDP		; icu_56::FilteredNormalizer2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z PROC		; icu_56::FilteredNormalizer2::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@10
	push	OFFSET ??1FilteredNormalizer2@icu_56@@UAE@XZ ; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@10
$LN3@vector@10:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FilteredNormalizer2@icu_56@@UAE@XZ	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@10:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z ENDP		; icu_56::FilteredNormalizer2::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1IDNA@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IDNA@icu_56@@UAE@XZ PROC				; icu_56::IDNA::~IDNA, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uts46.cpp
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDNA@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1IDNA@icu_56@@UAE@XZ ENDP				; icu_56::IDNA::~IDNA
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?toUTF8@UnicodeString@icu_56@@QBEXAAVByteSink@2@@Z:PROC ; icu_56::UnicodeString::toUTF8
EXTRN	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z:PROC ; icu_56::UnicodeString::fromUTF8
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -372						; size = 4
tv69 = -368						; size = 4
$T37630 = -360						; size = 64
_destString$37629 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_label$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::IDNA::labelToASCII_UTF8, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN2@labelToASC
; Line 74
	lea	ecx, DWORD PTR _destString$37629[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	lea	eax, DWORD PTR _destString$37629[ebp]
	push	eax
	mov	ecx, DWORD PTR _label$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T37630[ebp]
	push	edx
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv88[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?toUTF8@UnicodeString@icu_56@@QBEXAAVByteSink@2@@Z ; icu_56::UnicodeString::toUTF8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37630[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _destString$37629[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN2@labelToASC:
; Line 78
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@labelToASC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN9@labelToASC:
	DD	1
	DD	$LN8@labelToASC
$LN8@labelToASC:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@labelToASC
$LN6@labelToASC:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _destString$37629[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T37630[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?labelToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::IDNA::labelToASCII_UTF8
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\uts46.cpp
xdata$x	SEGMENT
__unwindtable$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -372						; size = 4
tv69 = -368						; size = 4
$T37640 = -360						; size = 64
_destString$37639 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_label$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::IDNA::labelToUnicodeUTF8, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN2@labelToUni
; Line 84
	lea	ecx, DWORD PTR _destString$37639[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 86
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	lea	eax, DWORD PTR _destString$37639[ebp]
	push	eax
	mov	ecx, DWORD PTR _label$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T37640[ebp]
	push	edx
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv88[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?toUTF8@UnicodeString@icu_56@@QBEXAAVByteSink@2@@Z ; icu_56::UnicodeString::toUTF8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37640[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 87
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _destString$37639[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN2@labelToUni:
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@labelToUni
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN9@labelToUni:
	DD	1
	DD	$LN8@labelToUni
$LN8@labelToUni:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@labelToUni
$LN6@labelToUni:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _destString$37639[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T37640[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?labelToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::IDNA::labelToUnicodeUTF8
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -372						; size = 4
tv69 = -368						; size = 4
$T37650 = -360						; size = 64
_destString$37649 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::IDNA::nameToASCII_UTF8, COMDAT
; _this$ = ecx
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN2@nameToASCI
; Line 94
	lea	ecx, DWORD PTR _destString$37649[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 96
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	lea	eax, DWORD PTR _destString$37649[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T37650[ebp]
	push	edx
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv88[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?toUTF8@UnicodeString@icu_56@@QBEXAAVByteSink@2@@Z ; icu_56::UnicodeString::toUTF8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37650[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 97
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _destString$37649[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN2@nameToASCI:
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@nameToASCI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN9@nameToASCI:
	DD	1
	DD	$LN8@nameToASCI
$LN8@nameToASCI:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@nameToASCI
$LN6@nameToASCI:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _destString$37649[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T37650[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nameToASCII_UTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::IDNA::nameToASCII_UTF8
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -372						; size = 4
tv69 = -368						; size = 4
$T37660 = -360						; size = 64
_destString$37659 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::IDNA::nameToUnicodeUTF8, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN2@nameToUnic
; Line 104
	lea	ecx, DWORD PTR _destString$37659[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 106
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	lea	eax, DWORD PTR _destString$37659[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T37660[ebp]
	push	edx
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv88[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?toUTF8@UnicodeString@icu_56@@QBEXAAVByteSink@2@@Z ; icu_56::UnicodeString::toUTF8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37660[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 107
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _destString$37659[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN2@nameToUnic:
; Line 108
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@nameToUnic
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN9@nameToUnic:
	DD	1
	DD	$LN8@nameToUnic
$LN8@nameToUnic:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@nameToUnic
$LN6@nameToUnic:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _destString$37659[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T37660[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nameToUnicodeUTF8@IDNA@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::IDNA::nameToUnicodeUTF8
PUBLIC	??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z	; icu_56::UTS46::UTS46
PUBLIC	?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z ; icu_56::IDNA::createUTS46Instance
EXTRN	??2UMemory@icu_56@@SAPAXI@Z:PROC		; icu_56::UMemory::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z$0
__ehfuncinfo$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv128 = -268						; size = 4
tv80 = -268						; size = 4
$T45964 = -260						; size = 4
$T45965 = -248						; size = 4
$T45968 = -236						; size = 4
$T45969 = -224						; size = 4
_idna$37773 = -20					; size = 4
__$EHRec$ = -12						; size = 12
_options$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z PROC ; icu_56::IDNA::createUTS46Instance, COMDAT
; Line 199
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 200
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@createUTS4
; Line 201
	push	12					; 0000000cH
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45965[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45965[ebp], 0
	je	SHORT $LN8@createUTS4
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _options$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T45965[ebp]
	call	??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z ; icu_56::UTS46::UTS46
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN9@createUTS4
$LN8@createUTS4:
	mov	DWORD PTR tv80[ebp], 0
$LN9@createUTS4:
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T45964[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T45964[ebp]
	mov	DWORD PTR _idna$37773[ebp], eax
; Line 202
	cmp	DWORD PTR _idna$37773[ebp], 0
	jne	SHORT $LN4@createUTS4
; Line 203
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
	jmp	SHORT $LN3@createUTS4
$LN4@createUTS4:
; Line 204
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@createUTS4
; Line 205
	mov	eax, DWORD PTR _idna$37773[ebp]
	mov	DWORD PTR $T45969[ebp], eax
	mov	ecx, DWORD PTR $T45969[ebp]
	mov	DWORD PTR $T45968[ebp], ecx
	cmp	DWORD PTR $T45968[ebp], 0
	je	SHORT $LN10@createUTS4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45968[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45968[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN11@createUTS4
$LN10@createUTS4:
	mov	DWORD PTR tv128[ebp], 0
$LN11@createUTS4:
; Line 206
	mov	DWORD PTR _idna$37773[ebp], 0
$LN3@createUTS4:
; Line 208
	mov	eax, DWORD PTR _idna$37773[ebp]
	jmp	SHORT $LN6@createUTS4
; Line 209
	jmp	SHORT $LN6@createUTS4
$LN5@createUTS4:
; Line 210
	xor	eax, eax
$LN6@createUTS4:
; Line 212
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T45965[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z ENDP ; icu_56::IDNA::createUTS46Instance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_C@_05MKHEFHGK@uts46?$AA@			; `string'
PUBLIC	??_7UTS46@icu_56@@6B@				; icu_56::UTS46::`vftable'
PUBLIC	??_R4UTS46@icu_56@@6B@				; icu_56::UTS46::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUTS46@icu_56@@@8			; icu_56::UTS46 `RTTI Type Descriptor'
PUBLIC	??_R3UTS46@icu_56@@8				; icu_56::UTS46::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UTS46@icu_56@@8				; icu_56::UTS46::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UTS46@icu_56@@8			; icu_56::UTS46::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?labelToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::labelToASCII
PUBLIC	?labelToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::labelToUnicode
PUBLIC	?nameToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::nameToASCII
PUBLIC	?nameToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::nameToUnicode
PUBLIC	?labelToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::labelToASCII_UTF8
PUBLIC	?labelToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::labelToUnicodeUTF8
PUBLIC	?nameToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::nameToASCII_UTF8
PUBLIC	?nameToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::nameToUnicodeUTF8
EXTRN	?getInstance@Normalizer2@icu_56@@SAPBV12@PBD0W4UNormalization2Mode@@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2::getInstance
EXTRN	??_EUTS46@icu_56@@UAEPAXI@Z:PROC		; icu_56::UTS46::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UTS46@icu_56@@8
; File d:\mozilla\intl\icu\source\common\uts46.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UTS46@icu_56@@8 DD FLAT:??_R0?AVUTS46@icu_56@@@8 ; icu_56::UTS46::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UTS46@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UTS46@icu_56@@8
rdata$r	SEGMENT
??_R2UTS46@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UTS46@icu_56@@8 ; icu_56::UTS46::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDNA@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UTS46@icu_56@@8
rdata$r	SEGMENT
??_R3UTS46@icu_56@@8 DD 00H				; icu_56::UTS46::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UTS46@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUTS46@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUTS46@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UTS46 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUTS46@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UTS46@icu_56@@6B@
rdata$r	SEGMENT
??_R4UTS46@icu_56@@6B@ DD 00H				; icu_56::UTS46::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUTS46@icu_56@@@8
	DD	FLAT:??_R3UTS46@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_05MKHEFHGK@uts46?$AA@
CONST	SEGMENT
??_C@_05MKHEFHGK@uts46?$AA@ DB 'uts46', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7UTS46@icu_56@@6B@
CONST	SEGMENT
??_7UTS46@icu_56@@6B@ DD FLAT:??_R4UTS46@icu_56@@6B@	; icu_56::UTS46::`vftable'
	DD	FLAT:??_EUTS46@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?labelToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?labelToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?nameToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?nameToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?labelToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?labelToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?nameToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	FLAT:?nameToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_opt$ = 8						; size = 4
_errorCode$ = 12					; size = 4
??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z PROC		; icu_56::UTS46::UTS46, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDNA@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UTS46@icu_56@@6B@
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_05MKHEFHGK@uts46?$AA@
	push	0
	call	?getInstance@Normalizer2@icu_56@@SAPBV12@PBD0W4UNormalization2Mode@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2::getInstance
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _opt$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1IDNA@icu_56@@UAE@XZ			; icu_56::IDNA::~IDNA
__ehhandler$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UTS46@icu_56@@QAE@IAAW4UErrorCode@@@Z ENDP		; icu_56::UTS46::UTS46
PUBLIC	??1UTS46@icu_56@@UAE@XZ				; icu_56::UTS46::~UTS46
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUTS46@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUTS46@icu_56@@UAEPAXI@Z PROC			; icu_56::UTS46::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UTS46@icu_56@@UAE@XZ			; icu_56::UTS46::~UTS46
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUTS46@icu_56@@UAEPAXI@Z ENDP			; icu_56::UTS46::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1UTS46@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1UTS46@icu_56@@UAE@XZ PROC				; icu_56::UTS46::~UTS46, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UTS46@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IDNA@icu_56@@UAE@XZ			; icu_56::IDNA::~IDNA
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UTS46@icu_56@@UAE@XZ ENDP				; icu_56::UTS46::~UTS46
_TEXT	ENDS
PUBLIC	?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::process
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?labelToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?labelToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::labelToASCII, COMDAT
; _this$ = ecx
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	1
	push	1
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::process
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?labelToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::labelToASCII
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?labelToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?labelToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::labelToUnicode, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 231
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::process
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?labelToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::labelToUnicode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?nameToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nameToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::nameToASCII, COMDAT
; _this$ = ecx
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::process
; Line 241
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	eax, 254				; 000000feH
	jl	SHORT $LN2@nameToASCI@2
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4
	jne	SHORT $LN2@nameToASCI@2
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	?isASCIIString@icu_56@@YACABVUnicodeString@1@@Z ; icu_56::isASCIIString
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@nameToASCI@2
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	eax, 254				; 000000feH
	jg	SHORT $LN1@nameToASCI@2
	push	253					; 000000fdH
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??AUnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::operator[]
	movzx	eax, ax
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN2@nameToASCI@2
$LN1@nameToASCI@2:
; Line 242
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@nameToASCI@2:
; Line 244
	mov	eax, DWORD PTR _dest$[ebp]
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?nameToASCII@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::nameToASCII
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isASCIIString@icu_56@@YACABVUnicodeString@1@@Z
_TEXT	SEGMENT
tv74 = -220						; size = 4
_limit$ = -20						; size = 4
_s$ = -8						; size = 4
_dest$ = 8						; size = 4
?isASCIIString@icu_56@@YACABVUnicodeString@1@@Z PROC	; icu_56::isASCIIString, COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 50
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _s$[ebp], eax
; Line 51
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _s$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _limit$[ebp], edx
$LN3@isASCIIStr:
; Line 52
	mov	eax, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	SHORT $LN2@isASCIIStr
; Line 53
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	cmp	ecx, 127				; 0000007fH
	jle	SHORT $LN6@isASCIIStr
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN7@isASCIIStr
$LN6@isASCIIStr:
	mov	DWORD PTR tv74[ebp], 0
$LN7@isASCIIStr:
	cmp	DWORD PTR tv74[ebp], 0
	je	SHORT $LN1@isASCIIStr
; Line 54
	xor	al, al
	jmp	SHORT $LN4@isASCIIStr
$LN1@isASCIIStr:
; Line 56
	jmp	SHORT $LN3@isASCIIStr
$LN2@isASCIIStr:
; Line 57
	mov	al, 1
$LN4@isASCIIStr:
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isASCIIString@icu_56@@YACABVUnicodeString@1@@Z ENDP	; icu_56::isASCIIString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?nameToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nameToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::nameToUnicode, COMDAT
; _this$ = ecx
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 250
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::process
; Line 251
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?nameToUnicode@UTS46@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::nameToUnicode
_TEXT	ENDS
PUBLIC	?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUTF8
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?labelToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?labelToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::labelToASCII_UTF8, COMDAT
; _this$ = ecx
; Line 255
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	1
	push	1
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUTF8
; Line 257
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?labelToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::labelToASCII_UTF8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?labelToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?labelToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::labelToUnicodeUTF8, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUTF8
; Line 263
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?labelToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::labelToUnicodeUTF8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?nameToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nameToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::nameToASCII_UTF8, COMDAT
; _this$ = ecx
; Line 267
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 268
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUTF8
; Line 269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?nameToASCII_UTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::nameToASCII_UTF8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?nameToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_dest$ = 12						; size = 4
_info$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nameToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::nameToUnicodeUTF8, COMDAT
; _this$ = ecx
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 274
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUTF8
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?nameToUnicodeUTF8@UTS46@icu_56@@UBEXABVStringPiece@2@AAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::nameToUnicodeUTF8
_TEXT	ENDS
PUBLIC	?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUnicode
EXTRN	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC ; icu_56::UnicodeString::releaseBuffer
EXTRN	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC ; icu_56::UnicodeString::getBuffer
EXTRN	?setToBogus@UnicodeString@icu_56@@QAEXXZ:PROC	; icu_56::UnicodeString::setToBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_cData$37886 = -104					; size = 4
_c$37884 = -92						; size = 2
_i$ = -80						; size = 4
_labelStart$ = -68					; size = 4
_disallowNonLDHDot$ = -53				; size = 1
_destArray$ = -44					; size = 4
_srcLength$ = -32					; size = 4
_srcArray$ = -20					; size = 4
_this$ = -8						; size = 4
_src$ = 8						; size = 4
_isLabel$ = 12						; size = 1
_toASCII$ = 16						; size = 1
_dest$ = 20						; size = 4
_info$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::process, COMDAT
; _this$ = ecx
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 307
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN30@process
; Line 308
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?setToBogus@UnicodeString@icu_56@@QAEXXZ ; icu_56::UnicodeString::setToBogus
; Line 309
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN31@process
$LN30@process:
; Line 311
	mov	ecx, DWORD PTR _src$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _srcArray$[ebp], eax
; Line 312
	mov	eax, DWORD PTR _dest$[ebp]
	cmp	eax, DWORD PTR _src$[ebp]
	je	SHORT $LN28@process
	cmp	DWORD PTR _srcArray$[ebp], 0
	jne	SHORT $LN29@process
$LN28@process:
; Line 313
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 314
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?setToBogus@UnicodeString@icu_56@@QAEXXZ ; icu_56::UnicodeString::setToBogus
; Line 315
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN31@process
$LN29@process:
; Line 318
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
; Line 319
	mov	ecx, DWORD PTR _info$[ebp]
	call	?reset@IDNAInfo@icu_56@@AAEXXZ		; icu_56::IDNAInfo::reset
; Line 320
	mov	ecx, DWORD PTR _src$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _srcLength$[ebp], eax
; Line 321
	cmp	DWORD PTR _srcLength$[ebp], 0
	jne	SHORT $LN27@process
; Line 322
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 1
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 323
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN31@process
$LN27@process:
; Line 325
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _destArray$[ebp], eax
; Line 326
	cmp	DWORD PTR _destArray$[ebp], 0
	jne	SHORT $LN26@process
; Line 327
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 328
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN31@process
$LN26@process:
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2
	setne	dl
	mov	BYTE PTR _disallowNonLDHDot$[ebp], dl
; Line 332
	mov	DWORD PTR _labelStart$[ebp], 0
; Line 334
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN25@process
$LN24@process:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN25@process:
; Line 335
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	jne	SHORT $LN22@process
; Line 336
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN21@process
; Line 337
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, 63					; 0000003fH
	jle	SHORT $LN20@process
; Line 338
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN20@process:
; Line 341
	movsx	eax, BYTE PTR _isLabel$[ebp]
	test	eax, eax
	jne	SHORT $LN21@process
	cmp	DWORD PTR _i$[ebp], 254			; 000000feH
	jl	SHORT $LN21@process
	cmp	DWORD PTR _i$[ebp], 254			; 000000feH
	jg	SHORT $LN18@process
	mov	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jge	SHORT $LN21@process
$LN18@process:
; Line 342
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
$LN21@process:
; Line 345
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 346
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 347
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN31@process
$LN22@process:
; Line 349
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _srcArray$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$37884[ebp], dx
; Line 350
	movzx	eax, WORD PTR _c$37884[ebp]
	cmp	eax, 127				; 0000007fH
	jle	SHORT $LN17@process
; Line 351
	jmp	$LN23@process
$LN17@process:
; Line 353
	movzx	eax, WORD PTR _c$37884[ebp]
	movsx	ecx, BYTE PTR _asciiData[eax]
	mov	DWORD PTR _cData$37886[ebp], ecx
; Line 354
	cmp	DWORD PTR _cData$37886[ebp], 0
	jle	SHORT $LN16@process
; Line 355
	movzx	eax, WORD PTR _c$37884[ebp]
	add	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _destArray$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	jmp	$LN15@process
$LN16@process:
; Line 356
	cmp	DWORD PTR _cData$37886[ebp], 0
	jge	SHORT $LN14@process
	movsx	eax, BYTE PTR _disallowNonLDHDot$[ebp]
	test	eax, eax
	je	SHORT $LN14@process
; Line 357
	jmp	$LN23@process
; Line 358
	jmp	$LN15@process
$LN14@process:
; Line 359
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _destArray$[ebp]
	mov	dx, WORD PTR _c$37884[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 360
	movzx	eax, WORD PTR _c$37884[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN12@process
; Line 361
	mov	eax, DWORD PTR _labelStart$[ebp]
	add	eax, 3
	cmp	DWORD PTR _i$[ebp], eax
	jne	SHORT $LN11@process
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _srcArray$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN11@process
; Line 363
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 364
	jmp	$LN23@process
$LN11@process:
; Line 366
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jne	SHORT $LN10@process
; Line 368
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN10@process:
; Line 370
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _srcLength$[ebp]
	je	SHORT $LN8@process
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _srcArray$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+2]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN9@process
$LN8@process:
; Line 372
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN9@process:
; Line 373
	jmp	SHORT $LN15@process
$LN12@process:
; Line 374
	movzx	eax, WORD PTR _c$37884[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN15@process
; Line 375
	movsx	eax, BYTE PTR _isLabel$[ebp]
	test	eax, eax
	je	SHORT $LN5@process
; Line 377
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 378
	jmp	SHORT $LN23@process
$LN5@process:
; Line 380
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jne	SHORT $LN4@process
; Line 381
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 1
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN4@process:
; Line 383
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN3@process
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, 63					; 0000003fH
	jle	SHORT $LN3@process
; Line 384
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@process:
; Line 386
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 387
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 388
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _labelStart$[ebp], eax
$LN15@process:
; Line 391
	jmp	$LN24@process
$LN23@process:
; Line 392
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 393
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 394
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	movzx	eax, BYTE PTR _toASCII$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isLabel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUnicode
; Line 397
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN2@process
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@process
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1984				; 000007c0H
	jne	SHORT $LN2@process
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN1@process
	cmp	DWORD PTR _labelStart$[ebp], 0
	jle	SHORT $LN2@process
	mov	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	call	?isASCIIOkBiDi@icu_56@@YACPB_WH@Z	; icu_56::isASCIIOkBiDi
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@process
$LN1@process:
; Line 398
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 2048				; 00000800H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@process:
; Line 400
	mov	eax, DWORD PTR _dest$[ebp]
$LN31@process:
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?process@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@CCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::process
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@H@Z:PROC	; icu_56::StringPiece::StringPiece
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv311 = -944						; size = 4
tv309 = -944						; size = 4
tv307 = -944						; size = 4
tv313 = -940						; size = 4
tv312 = -940						; size = 4
tv81 = -940						; size = 4
$T37955 = -932						; size = 64
$T37957 = -860						; size = 64
$T37959 = -788						; size = 64
$T46020 = -716						; size = 8
$T46021 = -700						; size = 8
_length$37961 = -492					; size = 4
_mappingStart$37953 = -480				; size = 4
_cData$37937 = -468					; size = 4
_c$37934 = -453						; size = 1
_i$37925 = -444						; size = 4
_disallowNonLDHDot$37924 = -429				; size = 1
_destArray$37922 = -420					; size = 4
_destCapacity$37921 = -408				; size = 4
_stackArray$37920 = -396				; size = 256
_labelStart$ = -132					; size = 4
_destString$ = -120					; size = 64
_srcLength$ = -48					; size = 4
_srcArray$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_isLabel$ = 12						; size = 1
_toASCII$ = 16						; size = 1
_dest$ = 20						; size = 4
_info$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::processUTF8, COMDAT
; _this$ = ecx
; Line 407
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 932				; 000003a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-944]
	mov	ecx, 233				; 000000e9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 408
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN33@processUTF
; Line 409
	jmp	$LN34@processUTF
$LN33@processUTF:
; Line 411
	mov	ecx, DWORD PTR _src$[ebp]
	call	?data@StringPiece@icu_56@@QBEPBDXZ	; icu_56::StringPiece::data
	mov	DWORD PTR _srcArray$[ebp], eax
; Line 412
	mov	ecx, DWORD PTR _src$[ebp]
	call	?length@StringPiece@icu_56@@QBEHXZ	; icu_56::StringPiece::length
	mov	DWORD PTR _srcLength$[ebp], eax
; Line 413
	cmp	DWORD PTR _srcArray$[ebp], 0
	jne	SHORT $LN32@processUTF
	cmp	DWORD PTR _srcLength$[ebp], 0
	je	SHORT $LN32@processUTF
; Line 414
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 415
	jmp	$LN34@processUTF
$LN32@processUTF:
; Line 418
	mov	ecx, DWORD PTR _info$[ebp]
	call	?reset@IDNAInfo@icu_56@@AAEXXZ		; icu_56::IDNAInfo::reset
; Line 419
	cmp	DWORD PTR _srcLength$[ebp], 0
	jne	SHORT $LN31@processUTF
; Line 420
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 1
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 421
	mov	eax, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 422
	jmp	$LN34@processUTF
$LN31@processUTF:
; Line 424
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 425
	mov	DWORD PTR _labelStart$[ebp], 0
; Line 426
	cmp	DWORD PTR _srcLength$[ebp], 256		; 00000100H
	jg	$LN30@processUTF
; Line 431
	mov	esi, esp
	lea	eax, DWORD PTR _destCapacity$37921[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _stackArray$37920[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _destArray$37922[ebp], eax
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2
	setne	dl
	mov	BYTE PTR _disallowNonLDHDot$37924[ebp], dl
; Line 434
	mov	DWORD PTR _i$37925[ebp], 0
	jmp	SHORT $LN29@processUTF
$LN28@processUTF:
	mov	eax, DWORD PTR _i$37925[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37925[ebp], eax
$LN29@processUTF:
; Line 435
	mov	eax, DWORD PTR _i$37925[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	jne	$LN26@processUTF
; Line 436
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN25@processUTF
; Line 437
	mov	eax, DWORD PTR _i$37925[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, 63					; 0000003fH
	jle	SHORT $LN24@processUTF
; Line 438
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN24@processUTF:
; Line 441
	movsx	eax, BYTE PTR _isLabel$[ebp]
	test	eax, eax
	jne	SHORT $LN25@processUTF
	cmp	DWORD PTR _i$37925[ebp], 254		; 000000feH
	jl	SHORT $LN25@processUTF
	cmp	DWORD PTR _i$37925[ebp], 254		; 000000feH
	jg	SHORT $LN22@processUTF
	mov	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, DWORD PTR _i$37925[ebp]
	jge	SHORT $LN25@processUTF
$LN22@processUTF:
; Line 442
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
$LN25@processUTF:
; Line 445
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 446
	mov	esi, esp
	mov	eax, DWORD PTR _i$37925[ebp]
	push	eax
	mov	ecx, DWORD PTR _destArray$37922[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 447
	mov	eax, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 448
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN34@processUTF
$LN26@processUTF:
; Line 450
	mov	eax, DWORD PTR _srcArray$[ebp]
	add	eax, DWORD PTR _i$37925[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$37934[ebp], cl
; Line 451
	movsx	eax, BYTE PTR _c$37934[ebp]
	test	eax, eax
	jge	SHORT $LN21@processUTF
; Line 452
	jmp	$LN27@processUTF
$LN21@processUTF:
; Line 454
	movsx	eax, BYTE PTR _c$37934[ebp]
	movsx	ecx, BYTE PTR _asciiData[eax]
	mov	DWORD PTR _cData$37937[ebp], ecx
; Line 455
	cmp	DWORD PTR _cData$37937[ebp], 0
	jle	SHORT $LN20@processUTF
; Line 456
	movsx	eax, BYTE PTR _c$37934[ebp]
	add	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _destArray$37922[ebp]
	add	ecx, DWORD PTR _i$37925[ebp]
	mov	BYTE PTR [ecx], al
	jmp	$LN19@processUTF
$LN20@processUTF:
; Line 457
	cmp	DWORD PTR _cData$37937[ebp], 0
	jge	SHORT $LN18@processUTF
	movsx	eax, BYTE PTR _disallowNonLDHDot$37924[ebp]
	test	eax, eax
	je	SHORT $LN18@processUTF
; Line 458
	jmp	$LN27@processUTF
; Line 459
	jmp	$LN19@processUTF
$LN18@processUTF:
; Line 460
	mov	eax, DWORD PTR _destArray$37922[ebp]
	add	eax, DWORD PTR _i$37925[ebp]
	mov	cl, BYTE PTR _c$37934[ebp]
	mov	BYTE PTR [eax], cl
; Line 461
	movsx	eax, BYTE PTR _c$37934[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN16@processUTF
; Line 462
	mov	eax, DWORD PTR _labelStart$[ebp]
	add	eax, 3
	cmp	DWORD PTR _i$37925[ebp], eax
	jne	SHORT $LN15@processUTF
	mov	eax, DWORD PTR _srcArray$[ebp]
	add	eax, DWORD PTR _i$37925[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN15@processUTF
; Line 464
	jmp	$LN27@processUTF
$LN15@processUTF:
; Line 466
	mov	eax, DWORD PTR _i$37925[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jne	SHORT $LN14@processUTF
; Line 468
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN14@processUTF:
; Line 470
	mov	eax, DWORD PTR _i$37925[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _srcLength$[ebp]
	je	SHORT $LN12@processUTF
	mov	eax, DWORD PTR _srcArray$[ebp]
	add	eax, DWORD PTR _i$37925[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN13@processUTF
$LN12@processUTF:
; Line 472
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN13@processUTF:
; Line 473
	jmp	$LN19@processUTF
$LN16@processUTF:
; Line 474
	movsx	eax, BYTE PTR _c$37934[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN19@processUTF
; Line 475
	movsx	eax, BYTE PTR _isLabel$[ebp]
	test	eax, eax
	je	SHORT $LN9@processUTF
; Line 476
	jmp	SHORT $LN27@processUTF
$LN9@processUTF:
; Line 478
	mov	eax, DWORD PTR _i$37925[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jne	SHORT $LN8@processUTF
; Line 479
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 1
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN8@processUTF:
; Line 481
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN7@processUTF
	mov	eax, DWORD PTR _i$37925[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, 63					; 0000003fH
	jle	SHORT $LN7@processUTF
; Line 482
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN7@processUTF:
; Line 484
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 485
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 486
	mov	eax, DWORD PTR _i$37925[ebp]
	add	eax, 1
	mov	DWORD PTR _labelStart$[ebp], eax
$LN19@processUTF:
; Line 489
	jmp	$LN28@processUTF
$LN27@processUTF:
; Line 490
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 492
	mov	eax, DWORD PTR _i$37925[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	mov	DWORD PTR _mappingStart$37953[ebp], eax
; Line 493
	mov	eax, DWORD PTR _mappingStart$37953[ebp]
	push	eax
	mov	ecx, DWORD PTR _destArray$37922[ebp]
	add	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T46020[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
	push	eax
	lea	edx, DWORD PTR $T37955[ebp]
	push	edx
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv81[ebp], eax
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv307[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv307[ebp]
	push	ecx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ; icu_56::UnicodeString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37955[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 495
	mov	esi, esp
	mov	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destArray$37922[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 498
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _destString$[ebp]
	push	edx
	movzx	eax, BYTE PTR _toASCII$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isLabel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mappingStart$37953[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T46021[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@H@Z	; icu_56::StringPiece::StringPiece
	push	eax
	lea	edx, DWORD PTR $T37957[ebp]
	push	edx
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv312[ebp], eax
	mov	eax, DWORD PTR tv312[ebp]
	mov	DWORD PTR tv309[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv309[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUnicode
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37957[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	SHORT $LN6@processUTF
$LN30@processUTF:
; Line 503
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _destString$[ebp]
	push	edx
	movzx	eax, BYTE PTR _toASCII$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isLabel$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	lea	eax, DWORD PTR $T37959[ebp]
	push	eax
	call	?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z ; icu_56::UnicodeString::fromUTF8
	add	esp, 8
	mov	DWORD PTR tv313[ebp], eax
	mov	ecx, DWORD PTR tv313[ebp]
	mov	DWORD PTR tv311[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv311[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processUnicode
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37959[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN6@processUTF:
; Line 505
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR _destString$[ebp]
	call	?toUTF8@UnicodeString@icu_56@@QBEXAAVByteSink@2@@Z ; icu_56::UnicodeString::toUTF8
; Line 506
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN5@processUTF
	movsx	eax, BYTE PTR _isLabel$[ebp]
	test	eax, eax
	jne	SHORT $LN5@processUTF
; Line 509
	lea	ecx, DWORD PTR _destString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	add	eax, DWORD PTR _labelStart$[ebp]
	mov	DWORD PTR _length$37961[ebp], eax
; Line 513
	cmp	DWORD PTR _length$37961[ebp], 254	; 000000feH
	jl	SHORT $LN5@processUTF
	lea	eax, DWORD PTR _destString$[ebp]
	push	eax
	call	?isASCIIString@icu_56@@YACABVUnicodeString@1@@Z ; icu_56::isASCIIString
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@processUTF
	cmp	DWORD PTR _length$37961[ebp], 254	; 000000feH
	jg	SHORT $LN3@processUTF
	cmp	DWORD PTR _labelStart$[ebp], 254	; 000000feH
	jge	SHORT $LN5@processUTF
	mov	eax, 253				; 000000fdH
	sub	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??AUnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::operator[]
	movzx	ecx, ax
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN5@processUTF
$LN3@processUTF:
; Line 514
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
$LN5@processUTF:
; Line 519
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN2@processUTF
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@processUTF
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1984				; 000007c0H
	jne	SHORT $LN2@processUTF
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN1@processUTF
	cmp	DWORD PTR _labelStart$[ebp], 0
	jle	SHORT $LN2@processUTF
	mov	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcArray$[ebp]
	push	ecx
	call	?isASCIIOkBiDi@icu_56@@YACPBDH@Z	; icu_56::isASCIIOkBiDi
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@processUTF
$LN1@processUTF:
; Line 520
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 2048				; 00000800H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@processUTF:
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN34@processUTF:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@processUTF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 944				; 000003b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN45@processUTF:
	DD	3
	DD	$LN44@processUTF
$LN44@processUTF:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN40@processUTF
	DD	-396					; fffffe74H
	DD	256					; 00000100H
	DD	$LN41@processUTF
	DD	-408					; fffffe68H
	DD	4
	DD	$LN42@processUTF
$LN42@processUTF:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
$LN41@processUTF:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
$LN40@processUTF:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _destString$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T37955[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR $T37957[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR $T37959[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-948]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?processUTF8@UTS46@icu_56@@ABEXABVStringPiece@2@CCAAVByteSink@2@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::processUTF8
PUBLIC	?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::UTS46::mapDevChars
PUBLIC	?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processLabel
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv213 = -384						; size = 4
tv214 = -380						; size = 4
tv138 = -380						; size = 4
$T37979 = -372						; size = 64
_newLength$37991 = -108					; size = 4
_labelLength$37990 = -96				; size = 4
_c$37988 = -84						; size = 2
_labelLimit$ = -72					; size = 4
_destLength$ = -60					; size = 4
_destArray$ = -48					; size = 4
_doMapDevChars$ = -33					; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_labelStart$ = 12					; size = 4
_mappingStart$ = 16					; size = 4
_isLabel$ = 20						; size = 1
_toASCII$ = 24						; size = 1
_dest$ = 28						; size = 4
_info$ = 32						; size = 4
_errorCode$ = 36					; size = 4
?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::processUnicode, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _mappingStart$[ebp], 0
	jne	SHORT $LN16@processUni
; Line 531
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 532
	jmp	SHORT $LN15@processUni
$LN16@processUni:
; Line 533
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	2147483647				; 7fffffffH
	mov	ecx, DWORD PTR _mappingStart$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T37979[ebp]
	push	edx
	mov	ecx, DWORD PTR _src$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	DWORD PTR tv214[ebp], eax
	mov	eax, DWORD PTR tv214[ebp]
	mov	DWORD PTR tv213[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv213[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T37979[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN15@processUni:
; Line 535
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@processUni
; Line 536
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN17@processUni
$LN14@processUni:
; Line 540
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN19@processUni
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 16					; 00000010H
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN20@processUni
$LN19@processUni:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 32					; 00000020H
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	DWORD PTR tv138[ebp], ecx
$LN20@processUni:
	mov	dl, BYTE PTR tv138[ebp]
	mov	BYTE PTR _doMapDevChars$[ebp], dl
; Line 541
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _destArray$[ebp], eax
; Line 542
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _destLength$[ebp], eax
; Line 543
	mov	eax, DWORD PTR _labelStart$[ebp]
	mov	DWORD PTR _labelLimit$[ebp], eax
$LN13@processUni:
; Line 544
	mov	eax, DWORD PTR _labelLimit$[ebp]
	cmp	eax, DWORD PTR _destLength$[ebp]
	jge	$LN12@processUni
; Line 545
	mov	eax, DWORD PTR _labelLimit$[ebp]
	mov	ecx, DWORD PTR _destArray$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$37988[ebp], dx
; Line 546
	movzx	eax, WORD PTR _c$37988[ebp]
	cmp	eax, 46					; 0000002eH
	jne	$LN11@processUni
	movsx	eax, BYTE PTR _isLabel$[ebp]
	test	eax, eax
	jne	$LN11@processUni
; Line 547
	mov	eax, DWORD PTR _labelLimit$[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	mov	DWORD PTR _labelLength$37990[ebp], eax
; Line 549
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _toASCII$[ebp]
	push	edx
	mov	eax, DWORD PTR _labelLength$37990[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processLabel
	mov	DWORD PTR _newLength$37991[ebp], eax
; Line 550
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
; Line 551
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 552
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@processUni
; Line 553
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN17@processUni
$LN10@processUni:
; Line 555
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _destArray$[ebp], eax
; Line 556
	mov	eax, DWORD PTR _newLength$37991[ebp]
	sub	eax, DWORD PTR _labelLength$37990[ebp]
	add	eax, DWORD PTR _destLength$[ebp]
	mov	DWORD PTR _destLength$[ebp], eax
; Line 557
	mov	eax, DWORD PTR _newLength$37991[ebp]
	mov	ecx, DWORD PTR _labelStart$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _labelStart$[ebp], edx
	mov	eax, DWORD PTR _labelStart$[ebp]
	mov	DWORD PTR _labelLimit$[ebp], eax
	jmp	$LN9@processUni
$LN11@processUni:
; Line 558
	movzx	eax, WORD PTR _c$37988[ebp]
	cmp	eax, 223				; 000000dfH
	jl	$LN8@processUni
	movzx	eax, WORD PTR _c$37988[ebp]
	cmp	eax, 8205				; 0000200dH
	jg	$LN8@processUni
	movzx	eax, WORD PTR _c$37988[ebp]
	cmp	eax, 223				; 000000dfH
	je	SHORT $LN7@processUni
	movzx	eax, WORD PTR _c$37988[ebp]
	cmp	eax, 962				; 000003c2H
	je	SHORT $LN7@processUni
	movzx	eax, WORD PTR _c$37988[ebp]
	cmp	eax, 8204				; 0000200cH
	jl	SHORT $LN8@processUni
$LN7@processUni:
; Line 559
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+8], 1
; Line 560
	movsx	eax, BYTE PTR _doMapDevChars$[ebp]
	test	eax, eax
	je	SHORT $LN6@processUni
; Line 561
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelLimit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _labelStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::UTS46::mapDevChars
	mov	DWORD PTR _destLength$[ebp], eax
; Line 562
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@processUni
; Line 563
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	SHORT $LN17@processUni
$LN5@processUni:
; Line 565
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _destArray$[ebp], eax
; Line 568
	mov	BYTE PTR _doMapDevChars$[ebp], 0
; Line 569
	jmp	SHORT $LN4@processUni
$LN6@processUni:
; Line 570
	mov	eax, DWORD PTR _labelLimit$[ebp]
	add	eax, 1
	mov	DWORD PTR _labelLimit$[ebp], eax
$LN4@processUni:
; Line 572
	jmp	SHORT $LN9@processUni
$LN8@processUni:
; Line 573
	mov	eax, DWORD PTR _labelLimit$[ebp]
	add	eax, 1
	mov	DWORD PTR _labelLimit$[ebp], eax
$LN9@processUni:
; Line 575
	jmp	$LN13@processUni
$LN12@processUni:
; Line 579
	cmp	DWORD PTR _labelStart$[ebp], 0
	je	SHORT $LN1@processUni
	mov	eax, DWORD PTR _labelStart$[ebp]
	cmp	eax, DWORD PTR _labelLimit$[ebp]
	jge	SHORT $LN2@processUni
$LN1@processUni:
; Line 581
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _toASCII$[ebp]
	push	edx
	mov	eax, DWORD PTR _labelLimit$[ebp]
	sub	eax, DWORD PTR _labelStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::processLabel
; Line 582
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@processUni:
; Line 584
	mov	eax, DWORD PTR _dest$[ebp]
$LN17@processUni:
; Line 585
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR $T37979[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-388]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?processUnicode@UTS46@icu_56@@ABEAAVUnicodeString@2@ABV32@HHCCAAV32@AAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::processUnicode
PUBLIC	__$ArrayPad$
EXTRN	_u_memmove_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
__ehfuncinfo$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv201 = -468						; size = 4
tv166 = -464						; size = 4
tv87 = -464						; size = 4
tv78 = -464						; size = 4
$T38034 = -456						; size = 64
$T46055 = -384						; size = 4
_normalized$38033 = -180				; size = 64
_c$38020 = -108						; size = 2
_writeIndex$ = -96					; size = 4
_readIndex$ = -84					; size = 4
_didMapDevChars$ = -69					; size = 1
_capacity$ = -60					; size = 4
_s$ = -48						; size = 4
_length$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dest$ = 8						; size = 4
_labelStart$ = 12					; size = 4
_mappingStart$ = 16					; size = 4
_errorCode$ = 20					; size = 4
?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::UTS46::mapDevChars, COMDAT
; _this$ = ecx
; Line 589
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 456				; 000001c8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-468]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 590
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@mapDevChar
; Line 591
	xor	eax, eax
	jmp	$LN18@mapDevChar
$LN17@mapDevChar:
; Line 593
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _length$[ebp], eax
; Line 594
	mov	eax, DWORD PTR _mappingStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??AUnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::operator[]
	movzx	ecx, ax
	cmp	ecx, 223				; 000000dfH
	jne	SHORT $LN20@mapDevChar
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 1
	mov	DWORD PTR tv78[ebp], edx
	jmp	SHORT $LN21@mapDevChar
$LN20@mapDevChar:
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv78[ebp], eax
$LN21@mapDevChar:
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _s$[ebp], eax
; Line 595
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN16@mapDevChar
; Line 596
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 597
	mov	eax, DWORD PTR _length$[ebp]
	jmp	$LN18@mapDevChar
$LN16@mapDevChar:
; Line 599
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getCapacity@UnicodeString@icu_56@@QBEHXZ ; icu_56::UnicodeString::getCapacity
	mov	DWORD PTR _capacity$[ebp], eax
; Line 600
	mov	BYTE PTR _didMapDevChars$[ebp], 0
; Line 601
	mov	eax, DWORD PTR _mappingStart$[ebp]
	mov	DWORD PTR _readIndex$[ebp], eax
	mov	eax, DWORD PTR _mappingStart$[ebp]
	mov	DWORD PTR _writeIndex$[ebp], eax
$LN15@mapDevChar:
; Line 603
	mov	eax, DWORD PTR _readIndex$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$38020[ebp], dx
	mov	eax, DWORD PTR _readIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _readIndex$[ebp], eax
; Line 604
	movzx	eax, WORD PTR _c$38020[ebp]
	mov	DWORD PTR tv87[ebp], eax
	cmp	DWORD PTR tv87[ebp], 962		; 000003c2H
	jg	SHORT $LN22@mapDevChar
	cmp	DWORD PTR tv87[ebp], 962		; 000003c2H
	je	$LN6@mapDevChar
	cmp	DWORD PTR tv87[ebp], 223		; 000000dfH
	je	SHORT $LN10@mapDevChar
	jmp	$LN4@mapDevChar
$LN22@mapDevChar:
	cmp	DWORD PTR tv87[ebp], 8204		; 0000200cH
	jl	$LN4@mapDevChar
	cmp	DWORD PTR tv87[ebp], 8205		; 0000200dH
	jle	$LN5@mapDevChar
	jmp	$LN4@mapDevChar
$LN10@mapDevChar:
; Line 607
	mov	BYTE PTR _didMapDevChars$[ebp], 1
; Line 608
	mov	eax, 115				; 00000073H
	mov	ecx, DWORD PTR _writeIndex$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _writeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _writeIndex$[ebp], eax
; Line 610
	mov	eax, DWORD PTR _writeIndex$[ebp]
	cmp	eax, DWORD PTR _readIndex$[ebp]
	jne	SHORT $LN9@mapDevChar
; Line 611
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jne	SHORT $LN8@mapDevChar
; Line 612
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 613
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _s$[ebp], eax
; Line 614
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN7@mapDevChar
; Line 615
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 616
	mov	eax, DWORD PTR _length$[ebp]
	jmp	$LN18@mapDevChar
$LN7@mapDevChar:
; Line 618
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getCapacity@UnicodeString@icu_56@@QBEHXZ ; icu_56::UnicodeString::getCapacity
	mov	DWORD PTR _capacity$[ebp], eax
$LN8@mapDevChar:
; Line 620
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _writeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writeIndex$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _writeIndex$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
	push	eax
	call	_u_memmove_56
	add	esp, 12					; 0000000cH
; Line 621
	mov	eax, DWORD PTR _readIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _readIndex$[ebp], eax
$LN9@mapDevChar:
; Line 623
	mov	eax, 115				; 00000073H
	mov	ecx, DWORD PTR _writeIndex$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _writeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _writeIndex$[ebp], eax
; Line 624
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 625
	jmp	SHORT $LN14@mapDevChar
$LN6@mapDevChar:
; Line 627
	mov	BYTE PTR _didMapDevChars$[ebp], 1
; Line 628
	mov	eax, 963				; 000003c3H
	mov	ecx, DWORD PTR _writeIndex$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _writeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _writeIndex$[ebp], eax
; Line 629
	jmp	SHORT $LN14@mapDevChar
$LN5@mapDevChar:
; Line 632
	mov	BYTE PTR _didMapDevChars$[ebp], 1
; Line 633
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 634
	jmp	SHORT $LN14@mapDevChar
$LN4@mapDevChar:
; Line 637
	mov	eax, DWORD PTR _writeIndex$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR _c$38020[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _writeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _writeIndex$[ebp], eax
$LN14@mapDevChar:
; Line 640
	mov	eax, DWORD PTR _writeIndex$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jl	$LN15@mapDevChar
; Line 641
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 642
	movsx	eax, BYTE PTR _didMapDevChars$[ebp]
	test	eax, eax
	je	$LN3@mapDevChar
; Line 646
	lea	ecx, DWORD PTR _normalized$38033[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 647
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _normalized$38033[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	mov	edx, DWORD PTR _labelStart$[ebp]
	push	edx
	lea	eax, DWORD PTR $T38034[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv201[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv201[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T38034[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 648
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@mapDevChar
; Line 649
	lea	eax, DWORD PTR _normalized$38033[ebp]
	push	eax
	push	2147483647				; 7fffffffH
	mov	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
; Line 650
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@mapDevChar
; Line 651
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@mapDevChar:
; Line 653
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR $T46055[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _normalized$38033[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46055[ebp]
	jmp	SHORT $LN18@mapDevChar
$LN2@mapDevChar:
; Line 655
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _normalized$38033[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN3@mapDevChar:
; Line 656
	mov	eax, DWORD PTR _length$[ebp]
$LN18@mapDevChar:
; Line 657
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@mapDevChar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 468				; 000001d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN28@mapDevChar:
	DD	1
	DD	$LN27@mapDevChar
$LN27@mapDevChar:
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$LN25@mapDevChar
$LN25@mapDevChar:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _normalized$38033[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR $T38034[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-472]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?mapDevChars@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::mapDevChars
PUBLIC	?checkLabelContextO@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z ; icu_56::UTS46::checkLabelContextO
PUBLIC	?isLabelOkContextJ@UTS46@icu_56@@ABECPB_WH@Z	; icu_56::UTS46::isLabelOkContextJ
PUBLIC	?checkLabelBiDi@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z ; icu_56::UTS46::checkLabelBiDi
PUBLIC	?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::markBadACELabel
PUBLIC	__$ArrayPad$
EXTRN	_u_strToPunycode_56:PROC
EXTRN	_u_charType_56:PROC
EXTRN	_u_strFromPunycode_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T46080 = -732						; size = 4
$T46081 = -720						; size = 4
$T46082 = -708						; size = 4
$T46070 = -696						; size = 4
$T46071 = -684						; size = 4
$T46072 = -672						; size = 4
$T46073 = -660						; size = 4
$T46074 = -648						; size = 4
$T46075 = -636						; size = 4
$T46076 = -624						; size = 4
$T46077 = -612						; size = 4
$T46078 = -600						; size = 4
$T46079 = -588						; size = 4
_punycodeLength$38134 = -384				; size = 4
_buffer$38131 = -372					; size = 4
_punycode$38130 = -360					; size = 64
_cpLength$ = -288					; size = 4
_c$ = -276						; size = 4
_c$38098 = -264						; size = 2
_disallowNonLDHDot$ = -249				; size = 1
_oredChars$ = -240					; size = 2
_limit$ = -228						; size = 4
_s$ = -216						; size = 4
_isValid$38079 = -201					; size = 1
_unicodeLength$38073 = -192				; size = 4
_punycodeErrorCode$38072 = -180				; size = 4
_unicodeBuffer$38069 = -168				; size = 4
_wasPunycode$ = -153					; size = 1
_destLabelLength$ = -144				; size = 4
_destLabelStart$ = -132					; size = 4
_label$ = -120						; size = 4
_labelString$ = -108					; size = 4
_fromPunycode$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dest$ = 8						; size = 4
_labelStart$ = 12					; size = 4
_labelLength$ = 16					; size = 4
_toASCII$ = 20						; size = 1
_info$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::processLabel, COMDAT
; _this$ = ecx
; Line 692
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 724				; 000002d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-736]
	mov	ecx, 181				; 000000b5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 693
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN46@processLab
; Line 694
	xor	eax, eax
	jmp	$LN47@processLab
$LN46@processLab:
; Line 696
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 698
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	ecx, DWORD PTR _labelStart$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _label$[ebp], edx
; Line 699
	mov	eax, DWORD PTR _labelStart$[ebp]
	mov	DWORD PTR _destLabelStart$[ebp], eax
; Line 700
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	DWORD PTR _destLabelLength$[ebp], eax
; Line 702
	cmp	DWORD PTR _labelLength$[ebp], 4
	jl	$LN45@processLab
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 120				; 00000078H
	jne	$LN45@processLab
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 110				; 0000006eH
	jne	$LN45@processLab
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 45					; 0000002dH
	jne	$LN45@processLab
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 45					; 0000002dH
	jne	$LN45@processLab
; Line 704
	mov	BYTE PTR _wasPunycode$[ebp], 1
; Line 705
	push	-1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _unicodeBuffer$38069[ebp], eax
; Line 706
	cmp	DWORD PTR _unicodeBuffer$38069[ebp], 0
	jne	SHORT $LN44@processLab
; Line 708
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 709
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	DWORD PTR $T46070[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46070[ebp]
	jmp	$LN47@processLab
$LN44@processLab:
; Line 711
	mov	DWORD PTR _punycodeErrorCode$38072[ebp], 0
; Line 714
	lea	eax, DWORD PTR _punycodeErrorCode$38072[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?getCapacity@UnicodeString@icu_56@@QBEHXZ ; icu_56::UnicodeString::getCapacity
	push	eax
	mov	ecx, DWORD PTR _unicodeBuffer$38069[ebp]
	push	ecx
	mov	edx, DWORD PTR _labelLength$[ebp]
	sub	edx, 4
	push	edx
	mov	eax, DWORD PTR _label$[ebp]
	add	eax, 8
	push	eax
	call	_u_strFromPunycode_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _unicodeLength$38073[ebp], eax
; Line 715
	cmp	DWORD PTR _punycodeErrorCode$38072[ebp], 15 ; 0000000fH
	jne	$LN43@processLab
; Line 716
	push	0
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 717
	mov	eax, DWORD PTR _unicodeLength$38073[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _unicodeBuffer$38069[ebp], eax
; Line 718
	cmp	DWORD PTR _unicodeBuffer$38069[ebp], 0
	jne	SHORT $LN42@processLab
; Line 719
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 720
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	DWORD PTR $T46071[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46071[ebp]
	jmp	$LN47@processLab
$LN42@processLab:
; Line 722
	mov	DWORD PTR _punycodeErrorCode$38072[ebp], 0
; Line 725
	lea	eax, DWORD PTR _punycodeErrorCode$38072[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?getCapacity@UnicodeString@icu_56@@QBEHXZ ; icu_56::UnicodeString::getCapacity
	push	eax
	mov	ecx, DWORD PTR _unicodeBuffer$38069[ebp]
	push	ecx
	mov	edx, DWORD PTR _labelLength$[ebp]
	sub	edx, 4
	push	edx
	mov	eax, DWORD PTR _label$[ebp]
	add	eax, 8
	push	eax
	call	_u_strFromPunycode_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _unicodeLength$38073[ebp], eax
$LN43@processLab:
; Line 727
	mov	eax, DWORD PTR _unicodeLength$38073[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 728
	mov	eax, DWORD PTR _punycodeErrorCode$38072[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN41@processLab
; Line 729
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 730
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _toASCII$[ebp]
	push	edx
	mov	eax, DWORD PTR _labelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::markBadACELabel
	mov	DWORD PTR $T46072[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46072[ebp]
	jmp	$LN47@processLab
$LN41@processLab:
; Line 739
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _isValid$38079[ebp], al
; Line 740
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN40@processLab
; Line 741
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	DWORD PTR $T46073[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46073[ebp]
	jmp	$LN47@processLab
$LN40@processLab:
; Line 743
	movsx	eax, BYTE PTR _isValid$38079[ebp]
	test	eax, eax
	jne	SHORT $LN39@processLab
; Line 744
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 1024				; 00000400H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 745
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _toASCII$[ebp]
	push	edx
	mov	eax, DWORD PTR _labelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::markBadACELabel
	mov	DWORD PTR $T46074[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46074[ebp]
	jmp	$LN47@processLab
$LN39@processLab:
; Line 747
	lea	eax, DWORD PTR _fromPunycode$[ebp]
	mov	DWORD PTR _labelString$[ebp], eax
; Line 748
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _label$[ebp], eax
; Line 749
	mov	DWORD PTR _labelStart$[ebp], 0
; Line 750
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _labelLength$[ebp], eax
; Line 751
	jmp	SHORT $LN38@processLab
$LN45@processLab:
; Line 752
	mov	BYTE PTR _wasPunycode$[ebp], 0
; Line 753
	mov	eax, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _labelString$[ebp], eax
$LN38@processLab:
; Line 756
	cmp	DWORD PTR _labelLength$[ebp], 0
	jne	SHORT $LN37@processLab
; Line 757
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 1
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 759
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _labelString$[ebp]
	push	edx
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLabelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	?replaceLabel@icu_56@@YAHAAVUnicodeString@1@HHABV21@HAAW4UErrorCode@@@Z ; icu_56::replaceLabel
	add	esp, 24					; 00000018H
	mov	DWORD PTR $T46075[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46075[ebp]
	jmp	$LN47@processLab
$LN37@processLab:
; Line 762
	cmp	DWORD PTR _labelLength$[ebp], 4
	jl	SHORT $LN36@processLab
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN36@processLab
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN36@processLab
; Line 764
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN36@processLab:
; Line 766
	mov	eax, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN35@processLab
; Line 768
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN35@processLab:
; Line 770
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN34@processLab
; Line 772
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN34@processLab:
; Line 783
	mov	eax, DWORD PTR _label$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 784
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _limit$[ebp], edx
; Line 785
	xor	eax, eax
	mov	WORD PTR _oredChars$[ebp], ax
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2
	setne	dl
	mov	BYTE PTR _disallowNonLDHDot$[ebp], dl
$LN33@processLab:
; Line 789
	mov	eax, DWORD PTR _s$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$38098[ebp], cx
; Line 790
	movzx	eax, WORD PTR _c$38098[ebp]
	cmp	eax, 127				; 0000007fH
	jg	SHORT $LN30@processLab
; Line 791
	movzx	eax, WORD PTR _c$38098[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN29@processLab
; Line 792
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 793
	mov	eax, 65533				; 0000fffdH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	WORD PTR [ecx], ax
	jmp	SHORT $LN28@processLab
$LN29@processLab:
; Line 794
	movsx	eax, BYTE PTR _disallowNonLDHDot$[ebp]
	test	eax, eax
	je	SHORT $LN28@processLab
	movzx	eax, WORD PTR _c$38098[ebp]
	movsx	ecx, BYTE PTR _asciiData[eax]
	test	ecx, ecx
	jge	SHORT $LN28@processLab
; Line 795
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 796
	mov	eax, 65533				; 0000fffdH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	WORD PTR [ecx], ax
$LN28@processLab:
; Line 798
	jmp	SHORT $LN26@processLab
$LN30@processLab:
; Line 799
	movzx	eax, WORD PTR _c$38098[ebp]
	movzx	ecx, WORD PTR _oredChars$[ebp]
	or	ecx, eax
	mov	WORD PTR _oredChars$[ebp], cx
; Line 800
	movsx	eax, BYTE PTR _disallowNonLDHDot$[ebp]
	test	eax, eax
	je	SHORT $LN25@processLab
	movzx	eax, WORD PTR _c$38098[ebp]
	push	eax
	call	?isNonASCIIDisallowedSTD3Valid@icu_56@@YACH@Z ; icu_56::isNonASCIIDisallowedSTD3Valid
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN25@processLab
; Line 801
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 802
	mov	eax, 65533				; 0000fffdH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	WORD PTR [ecx], ax
	jmp	SHORT $LN26@processLab
$LN25@processLab:
; Line 803
	movzx	eax, WORD PTR _c$38098[ebp]
	cmp	eax, 65533				; 0000fffdH
	jne	SHORT $LN26@processLab
; Line 804
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN26@processLab:
; Line 807
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 808
	mov	eax, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jb	$LN33@processLab
; Line 812
	mov	DWORD PTR _cpLength$[ebp], 0
; Line 814
	mov	eax, DWORD PTR _cpLength$[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _cpLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _cpLength$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN22@processLab
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _cpLength$[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _cpLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _cpLength$[ebp], eax
$LN22@processLab:
; Line 815
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charType_56
	add	esp, 4
	movsx	ecx, al
	mov	edx, 1
	shl	edx, cl
	and	edx, 448				; 000001c0H
	je	SHORT $LN21@processLab
; Line 816
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 817
	push	65533					; 0000fffdH
	mov	eax, DWORD PTR _cpLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _labelString$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ; icu_56::UnicodeString::replace
; Line 818
	mov	ecx, DWORD PTR _labelString$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	ecx, DWORD PTR _labelStart$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _label$[ebp], edx
; Line 819
	mov	eax, 1
	sub	eax, DWORD PTR _cpLength$[ebp]
	add	eax, DWORD PTR _labelLength$[ebp]
	mov	DWORD PTR _labelLength$[ebp], eax
; Line 820
	mov	eax, DWORD PTR _labelString$[ebp]
	cmp	eax, DWORD PTR _dest$[ebp]
	jne	SHORT $LN21@processLab
; Line 821
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	DWORD PTR _destLabelLength$[ebp], eax
$LN21@processLab:
; Line 824
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 1984				; 000007c0H
	jne	$LN19@processLab
; Line 827
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 4
	je	SHORT $LN18@processLab
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN17@processLab
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN18@processLab
$LN17@processLab:
; Line 828
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _label$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkLabelBiDi@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z ; icu_56::UTS46::checkLabelBiDi
$LN18@processLab:
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8
	je	SHORT $LN16@processLab
	movzx	eax, WORD PTR _oredChars$[ebp]
	and	eax, 8204				; 0000200cH
	cmp	eax, 8204				; 0000200cH
	jne	SHORT $LN16@processLab
	mov	eax, DWORD PTR _labelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _label$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isLabelOkContextJ@UTS46@icu_56@@ABECPB_WH@Z ; icu_56::UTS46::isLabelOkContextJ
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN16@processLab
; Line 833
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 4096				; 00001000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN16@processLab:
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 64					; 00000040H
	je	SHORT $LN15@processLab
	movzx	eax, WORD PTR _oredChars$[ebp]
	cmp	eax, 183				; 000000b7H
	jl	SHORT $LN15@processLab
; Line 836
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _label$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkLabelContextO@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z ; icu_56::UTS46::checkLabelContextO
$LN15@processLab:
; Line 838
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	$LN14@processLab
; Line 839
	movsx	eax, BYTE PTR _wasPunycode$[ebp]
	test	eax, eax
	je	SHORT $LN13@processLab
; Line 841
	cmp	DWORD PTR _destLabelLength$[ebp], 63	; 0000003fH
	jle	SHORT $LN12@processLab
; Line 842
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN12@processLab:
; Line 844
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	mov	DWORD PTR $T46076[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46076[ebp]
	jmp	$LN47@processLab
	jmp	$LN14@processLab
$LN13@processLab:
; Line 845
	movzx	eax, WORD PTR _oredChars$[ebp]
	cmp	eax, 128				; 00000080H
	jl	$LN10@processLab
; Line 847
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 848
	push	63					; 0000003fH
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _buffer$38131[ebp], eax
; Line 849
	cmp	DWORD PTR _buffer$38131[ebp], 0
	jne	SHORT $LN9@processLab
; Line 850
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 851
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	mov	DWORD PTR $T46077[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46077[ebp]
	jmp	$LN47@processLab
$LN9@processLab:
; Line 853
	mov	eax, 120				; 00000078H
	mov	ecx, DWORD PTR _buffer$38131[ebp]
	mov	WORD PTR [ecx], ax
; Line 854
	mov	eax, 110				; 0000006eH
	mov	ecx, DWORD PTR _buffer$38131[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 855
	mov	eax, 45					; 0000002dH
	mov	ecx, DWORD PTR _buffer$38131[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 856
	mov	eax, 45					; 0000002dH
	mov	ecx, DWORD PTR _buffer$38131[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 859
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	?getCapacity@UnicodeString@icu_56@@QBEHXZ ; icu_56::UnicodeString::getCapacity
	sub	eax, 4
	push	eax
	mov	ecx, DWORD PTR _buffer$38131[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _labelLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	call	_u_strToPunycode_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _punycodeLength$38134[ebp], eax
; Line 860
	mov	eax, DWORD PTR _errorCode$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	$LN8@processLab
; Line 861
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 862
	push	4
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 863
	mov	eax, DWORD PTR _punycodeLength$38134[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _buffer$38131[ebp], eax
; Line 864
	cmp	DWORD PTR _buffer$38131[ebp], 0
	jne	SHORT $LN7@processLab
; Line 865
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 866
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	mov	DWORD PTR $T46078[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46078[ebp]
	jmp	$LN47@processLab
$LN7@processLab:
; Line 870
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	?getCapacity@UnicodeString@icu_56@@QBEHXZ ; icu_56::UnicodeString::getCapacity
	sub	eax, 4
	push	eax
	mov	ecx, DWORD PTR _buffer$38131[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _labelLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	call	_u_strToPunycode_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _punycodeLength$38134[ebp], eax
$LN8@processLab:
; Line 872
	mov	eax, DWORD PTR _punycodeLength$38134[ebp]
	add	eax, 4
	mov	DWORD PTR _punycodeLength$38134[ebp], eax
; Line 873
	mov	eax, DWORD PTR _punycodeLength$38134[ebp]
	push	eax
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
; Line 874
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@processLab
; Line 875
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	mov	DWORD PTR $T46079[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46079[ebp]
	jmp	$LN47@processLab
$LN6@processLab:
; Line 877
	cmp	DWORD PTR _punycodeLength$38134[ebp], 63 ; 0000003fH
	jle	SHORT $LN5@processLab
; Line 878
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@processLab:
; Line 881
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _punycodeLength$38134[ebp]
	push	ecx
	lea	edx, DWORD PTR _punycode$38130[ebp]
	push	edx
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLabelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	?replaceLabel@icu_56@@YAHAAVUnicodeString@1@HHABV21@HAAW4UErrorCode@@@Z ; icu_56::replaceLabel
	add	esp, 24					; 00000018H
	mov	DWORD PTR $T46080[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46080[ebp]
	jmp	$LN47@processLab
; Line 882
	jmp	SHORT $LN14@processLab
$LN10@processLab:
; Line 884
	cmp	DWORD PTR _labelLength$[ebp], 63	; 0000003fH
	jle	SHORT $LN14@processLab
; Line 885
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN14@processLab:
; Line 889
	jmp	SHORT $LN2@processLab
$LN19@processLab:
; Line 892
	movsx	eax, BYTE PTR _wasPunycode$[ebp]
	test	eax, eax
	je	SHORT $LN2@processLab
; Line 893
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 1024				; 00000400H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 894
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _toASCII$[ebp]
	push	edx
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLabelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ; icu_56::UTS46::markBadACELabel
	mov	DWORD PTR $T46081[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46081[ebp]
	jmp	SHORT $LN47@processLab
$LN2@processLab:
; Line 898
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _labelLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _labelString$[ebp]
	push	edx
	mov	eax, DWORD PTR _destLabelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLabelStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	?replaceLabel@icu_56@@YAHAAVUnicodeString@1@HHABV21@HAAW4UErrorCode@@@Z ; icu_56::replaceLabel
	add	esp, 24					; 00000018H
	mov	DWORD PTR $T46082[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46082[ebp]
$LN47@processLab:
; Line 899
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN56@processLab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 736				; 000002e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN56@processLab:
	DD	3
	DD	$LN55@processLab
$LN55@processLab:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN51@processLab
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN52@processLab
	DD	-360					; fffffe98H
	DD	64					; 00000040H
	DD	$LN53@processLab
$LN53@processLab:
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	121					; 00000079H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN52@processLab:
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	121					; 00000079H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN51@processLab:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	121					; 00000079H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _fromPunycode$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _punycode$38130[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-740]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?processLabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::processLabel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNonASCIIDisallowedSTD3Valid@icu_56@@YACH@Z
_TEXT	SEGMENT
tv67 = -193						; size = 1
_c$ = 8							; size = 4
?isNonASCIIDisallowedSTD3Valid@icu_56@@YACH@Z PROC	; icu_56::isNonASCIIDisallowedSTD3Valid, COMDAT
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 664
	cmp	DWORD PTR _c$[ebp], 8800		; 00002260H
	je	SHORT $LN3@isNonASCII
	cmp	DWORD PTR _c$[ebp], 8814		; 0000226eH
	je	SHORT $LN3@isNonASCII
	cmp	DWORD PTR _c$[ebp], 8815		; 0000226fH
	je	SHORT $LN3@isNonASCII
	mov	BYTE PTR tv67[ebp], 0
	jmp	SHORT $LN4@isNonASCII
$LN3@isNonASCII:
	mov	BYTE PTR tv67[ebp], 1
$LN4@isNonASCII:
	mov	al, BYTE PTR tv67[ebp]
; Line 665
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNonASCIIDisallowedSTD3Valid@icu_56@@YACH@Z ENDP	; icu_56::isNonASCIIDisallowedSTD3Valid
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?replaceLabel@icu_56@@YAHAAVUnicodeString@1@HHABV21@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_destLabelStart$ = 12					; size = 4
_destLabelLength$ = 16					; size = 4
_label$ = 20						; size = 4
_labelLength$ = 24					; size = 4
_errorCode$ = 28					; size = 4
?replaceLabel@icu_56@@YAHAAVUnicodeString@1@HHABV21@HAAW4UErrorCode@@@Z PROC ; icu_56::replaceLabel, COMDAT
; Line 674
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 675
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@replaceLab
; Line 676
	xor	eax, eax
	jmp	SHORT $LN4@replaceLab
$LN3@replaceLab:
; Line 678
	mov	eax, DWORD PTR _label$[ebp]
	cmp	eax, DWORD PTR _dest$[ebp]
	je	SHORT $LN2@replaceLab
; Line 679
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLabelLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destLabelStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
; Line 680
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@replaceLab
; Line 681
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 682
	xor	eax, eax
	jmp	SHORT $LN4@replaceLab
$LN2@replaceLab:
; Line 685
	mov	eax, DWORD PTR _labelLength$[ebp]
$LN4@replaceLab:
; Line 686
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?replaceLabel@icu_56@@YAHAAVUnicodeString@1@HHABV21@HAAW4UErrorCode@@@Z ENDP ; icu_56::replaceLabel
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_c$38168 = -92						; size = 2
_limit$ = -80						; size = 4
_s$ = -68						; size = 4
_label$ = -56						; size = 4
_onlyLDH$ = -41						; size = 1
_isASCII$ = -29						; size = 1
_disallowNonLDHDot$ = -17				; size = 1
_this$ = -8						; size = 4
_dest$ = 8						; size = 4
_labelStart$ = 12					; size = 4
_labelLength$ = 16					; size = 4
_toASCII$ = 20						; size = 1
_info$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::UTS46::markBadACELabel, COMDAT
; _this$ = ecx
; Line 907
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 908
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@markBadACE
; Line 909
	xor	eax, eax
	jmp	$LN15@markBadACE
$LN14@markBadACE:
; Line 911
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2
	setne	dl
	mov	BYTE PTR _disallowNonLDHDot$[ebp], dl
; Line 912
	mov	BYTE PTR _isASCII$[ebp], 1
; Line 913
	mov	BYTE PTR _onlyLDH$[ebp], 1
; Line 914
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	ecx, DWORD PTR _labelStart$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _label$[ebp], edx
; Line 916
	mov	eax, DWORD PTR _label$[ebp]
	add	eax, 8
	mov	DWORD PTR _s$[ebp], eax
; Line 917
	mov	eax, DWORD PTR _labelLength$[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _limit$[ebp], edx
$LN13@markBadACE:
; Line 919
	mov	eax, DWORD PTR _s$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$38168[ebp], cx
; Line 920
	movzx	eax, WORD PTR _c$38168[ebp]
	cmp	eax, 127				; 0000007fH
	jg	SHORT $LN10@markBadACE
; Line 921
	movzx	eax, WORD PTR _c$38168[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN9@markBadACE
; Line 922
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 923
	mov	eax, 65533				; 0000fffdH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	WORD PTR [ecx], ax
; Line 924
	mov	BYTE PTR _onlyLDH$[ebp], 0
	mov	al, BYTE PTR _onlyLDH$[ebp]
	mov	BYTE PTR _isASCII$[ebp], al
	jmp	SHORT $LN8@markBadACE
$LN9@markBadACE:
; Line 925
	movzx	eax, WORD PTR _c$38168[ebp]
	movsx	ecx, BYTE PTR _asciiData[eax]
	test	ecx, ecx
	jge	SHORT $LN8@markBadACE
; Line 926
	mov	BYTE PTR _onlyLDH$[ebp], 0
; Line 927
	movsx	eax, BYTE PTR _disallowNonLDHDot$[ebp]
	test	eax, eax
	je	SHORT $LN8@markBadACE
; Line 928
	mov	eax, 65533				; 0000fffdH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	WORD PTR [ecx], ax
; Line 929
	mov	BYTE PTR _isASCII$[ebp], 0
$LN8@markBadACE:
; Line 932
	jmp	SHORT $LN12@markBadACE
$LN10@markBadACE:
; Line 933
	mov	BYTE PTR _onlyLDH$[ebp], 0
	mov	al, BYTE PTR _onlyLDH$[ebp]
	mov	BYTE PTR _isASCII$[ebp], al
$LN12@markBadACE:
; Line 935
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	ecx, DWORD PTR _limit$[ebp]
	jb	$LN13@markBadACE
; Line 936
	movsx	eax, BYTE PTR _onlyLDH$[ebp]
	test	eax, eax
	je	SHORT $LN4@markBadACE
; Line 937
	push	65533					; 0000fffdH
	mov	eax, DWORD PTR _labelStart$[ebp]
	add	eax, DWORD PTR _labelLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ; icu_56::UnicodeString::insert
; Line 938
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@markBadACE
; Line 939
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 940
	xor	eax, eax
	jmp	SHORT $LN15@markBadACE
$LN3@markBadACE:
; Line 942
	mov	eax, DWORD PTR _labelLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _labelLength$[ebp], eax
; Line 943
	jmp	SHORT $LN2@markBadACE
$LN4@markBadACE:
; Line 944
	movsx	eax, BYTE PTR _toASCII$[ebp]
	test	eax, eax
	je	SHORT $LN2@markBadACE
	movsx	eax, BYTE PTR _isASCII$[ebp]
	test	eax, eax
	je	SHORT $LN2@markBadACE
	cmp	DWORD PTR _labelLength$[ebp], 63	; 0000003fH
	jle	SHORT $LN2@markBadACE
; Line 945
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 2
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@markBadACE:
; Line 948
	mov	eax, DWORD PTR _labelLength$[ebp]
$LN15@markBadACE:
; Line 949
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?markBadACELabel@UTS46@icu_56@@ABEHAAVUnicodeString@2@HHCAAVIDNAInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UTS46::markBadACELabel
_TEXT	ENDS
EXTRN	_u_charDirection_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkLabelBiDi@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z
_TEXT	SEGMENT
tv141 = -280						; size = 4
_mask$ = -80						; size = 4
_dir$38225 = -68					; size = 4
_lastMask$ = -56					; size = 4
_firstMask$ = -44					; size = 4
_i$ = -32						; size = 4
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_labelLength$ = 12					; size = 4
_info$ = 16						; size = 4
?checkLabelBiDi@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z PROC ; icu_56::UTS46::checkLabelBiDi, COMDAT
; _this$ = ecx
; Line 977
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 981
	mov	DWORD PTR _i$[ebp], 0
; Line 982
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN17@checkLabel
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@checkLabel:
; Line 983
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charDirection_56
	add	esp, 4
	mov	edx, 1
	mov	ecx, eax
	shl	edx, cl
	mov	DWORD PTR _firstMask$[ebp], edx
; Line 987
	mov	eax, DWORD PTR _firstMask$[ebp]
	and	eax, -8196				; ffffdffcH
	je	SHORT $LN15@checkLabel
; Line 988
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 0
$LN15@checkLabel:
; Line 993
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _labelLength$[ebp]
	jl	SHORT $LN13@checkLabel
; Line 994
	mov	eax, DWORD PTR _firstMask$[ebp]
	mov	DWORD PTR _lastMask$[ebp], eax
; Line 995
	jmp	SHORT $LN14@checkLabel
$LN13@checkLabel:
; Line 997
	mov	eax, DWORD PTR _labelLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _labelLength$[ebp], eax
	mov	ecx, DWORD PTR _labelLength$[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN12@checkLabel
	mov	eax, DWORD PTR _labelLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _labelLength$[ebp], eax
	mov	ecx, DWORD PTR _labelLength$[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN12@checkLabel:
; Line 998
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charDirection_56
	add	esp, 4
	mov	DWORD PTR _dir$38225[ebp], eax
; Line 999
	cmp	DWORD PTR _dir$38225[ebp], 17		; 00000011H
	je	SHORT $LN11@checkLabel
; Line 1000
	mov	eax, 1
	mov	ecx, DWORD PTR _dir$38225[ebp]
	shl	eax, cl
	mov	DWORD PTR _lastMask$[ebp], eax
; Line 1001
	jmp	SHORT $LN14@checkLabel
$LN11@checkLabel:
; Line 1003
	jmp	SHORT $LN15@checkLabel
$LN14@checkLabel:
; Line 1013
	mov	eax, DWORD PTR _firstMask$[ebp]
	and	eax, 1
	je	SHORT $LN20@checkLabel
	mov	ecx, DWORD PTR _lastMask$[ebp]
	and	ecx, -6					; fffffffaH
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR tv141[ebp], ecx
	jmp	SHORT $LN21@checkLabel
$LN20@checkLabel:
	mov	edx, DWORD PTR _lastMask$[ebp]
	and	edx, -8231				; ffffdfd9H
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	DWORD PTR tv141[ebp], edx
$LN21@checkLabel:
	cmp	DWORD PTR tv141[ebp], 0
	je	SHORT $LN10@checkLabel
; Line 1014
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 0
$LN10@checkLabel:
; Line 1017
	mov	DWORD PTR _mask$[ebp], 0
$LN9@checkLabel:
; Line 1018
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _labelLength$[ebp]
	jge	SHORT $LN8@checkLabel
; Line 1019
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN7@checkLabel
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@checkLabel:
; Line 1020
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charDirection_56
	add	esp, 4
	mov	edx, 1
	mov	ecx, eax
	shl	edx, cl
	or	edx, DWORD PTR _mask$[ebp]
	mov	DWORD PTR _mask$[ebp], edx
; Line 1021
	jmp	SHORT $LN9@checkLabel
$LN8@checkLabel:
; Line 1022
	mov	eax, DWORD PTR _firstMask$[ebp]
	and	eax, 1
	je	SHORT $LN6@checkLabel
; Line 1025
	mov	eax, DWORD PTR _mask$[ebp]
	and	eax, -394334				; fff9fba2H
	je	SHORT $LN5@checkLabel
; Line 1026
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 0
$LN5@checkLabel:
; Line 1028
	jmp	SHORT $LN4@checkLabel
$LN6@checkLabel:
; Line 1031
	mov	eax, DWORD PTR _mask$[ebp]
	and	eax, -402559				; fff9db81H
	je	SHORT $LN3@checkLabel
; Line 1032
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 0
$LN3@checkLabel:
; Line 1036
	mov	eax, DWORD PTR _mask$[ebp]
	and	eax, 36					; 00000024H
	cmp	eax, 36					; 00000024H
	jne	SHORT $LN4@checkLabel
; Line 1037
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 0
$LN4@checkLabel:
; Line 1046
	mov	eax, DWORD PTR _firstMask$[ebp]
	or	eax, DWORD PTR _mask$[ebp]
	or	eax, DWORD PTR _lastMask$[ebp]
	and	eax, 8226				; 00002022H
	je	SHORT $LN18@checkLabel
; Line 1047
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+9], 1
$LN18@checkLabel:
; Line 1049
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?checkLabelBiDi@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z ENDP ; icu_56::UTS46::checkLabelBiDi
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isASCIIOkBiDi@icu_56@@YACPB_WH@Z
_TEXT	SEGMENT
_c$38252 = -32						; size = 2
_i$38248 = -20						; size = 4
_labelStart$ = -8					; size = 4
_s$ = 8							; size = 4
_length$ = 12						; size = 4
?isASCIIOkBiDi@icu_56@@YACPB_WH@Z PROC			; icu_56::isASCIIOkBiDi, COMDAT
; Line 1065
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1066
	mov	DWORD PTR _labelStart$[ebp], 0
; Line 1067
	mov	DWORD PTR _i$38248[ebp], 0
	jmp	SHORT $LN15@isASCIIOkB
$LN14@isASCIIOkB:
	mov	eax, DWORD PTR _i$38248[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38248[ebp], eax
$LN15@isASCIIOkB:
	mov	eax, DWORD PTR _i$38248[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN13@isASCIIOkB
; Line 1068
	mov	eax, DWORD PTR _i$38248[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$38252[ebp], dx
; Line 1069
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN12@isASCIIOkB
; Line 1070
	mov	eax, DWORD PTR _i$38248[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jle	SHORT $LN11@isASCIIOkB
; Line 1071
	mov	eax, DWORD PTR _i$38248[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2-2]
	mov	WORD PTR _c$38252[ebp], dx
; Line 1072
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN9@isASCIIOkB
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN11@isASCIIOkB
$LN9@isASCIIOkB:
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN8@isASCIIOkB
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 57					; 00000039H
	jle	SHORT $LN11@isASCIIOkB
$LN8@isASCIIOkB:
; Line 1074
	xor	al, al
	jmp	SHORT $LN16@isASCIIOkB
$LN11@isASCIIOkB:
; Line 1077
	mov	eax, DWORD PTR _i$38248[ebp]
	add	eax, 1
	mov	DWORD PTR _labelStart$[ebp], eax
	jmp	SHORT $LN7@isASCIIOkB
$LN12@isASCIIOkB:
; Line 1078
	mov	eax, DWORD PTR _i$38248[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jne	SHORT $LN6@isASCIIOkB
; Line 1079
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN4@isASCIIOkB
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN5@isASCIIOkB
$LN4@isASCIIOkB:
; Line 1081
	xor	al, al
	jmp	SHORT $LN16@isASCIIOkB
$LN5@isASCIIOkB:
; Line 1083
	jmp	SHORT $LN7@isASCIIOkB
$LN6@isASCIIOkB:
; Line 1084
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 32					; 00000020H
	jg	SHORT $LN7@isASCIIOkB
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 28					; 0000001cH
	jge	SHORT $LN1@isASCIIOkB
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 9
	jl	SHORT $LN7@isASCIIOkB
	movzx	eax, WORD PTR _c$38252[ebp]
	cmp	eax, 13					; 0000000dH
	jg	SHORT $LN7@isASCIIOkB
$LN1@isASCIIOkB:
; Line 1086
	xor	al, al
	jmp	SHORT $LN16@isASCIIOkB
$LN7@isASCIIOkB:
; Line 1089
	jmp	$LN14@isASCIIOkB
$LN13@isASCIIOkB:
; Line 1090
	mov	al, 1
$LN16@isASCIIOkB:
; Line 1091
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isASCIIOkBiDi@icu_56@@YACPB_WH@Z ENDP			; icu_56::isASCIIOkBiDi
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isASCIIOkBiDi@icu_56@@YACPBDH@Z
_TEXT	SEGMENT
_c$38274 = -29						; size = 1
_i$38270 = -20						; size = 4
_labelStart$ = -8					; size = 4
_s$ = 8							; size = 4
_length$ = 12						; size = 4
?isASCIIOkBiDi@icu_56@@YACPBDH@Z PROC			; icu_56::isASCIIOkBiDi, COMDAT
; Line 1097
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1098
	mov	DWORD PTR _labelStart$[ebp], 0
; Line 1099
	mov	DWORD PTR _i$38270[ebp], 0
	jmp	SHORT $LN17@isASCIIOkB@2
$LN16@isASCIIOkB@2:
	mov	eax, DWORD PTR _i$38270[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38270[ebp], eax
$LN17@isASCIIOkB@2:
	mov	eax, DWORD PTR _i$38270[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN15@isASCIIOkB@2
; Line 1100
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$38270[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$38274[ebp], cl
; Line 1101
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN14@isASCIIOkB@2
; Line 1102
	mov	eax, DWORD PTR _i$38270[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jle	SHORT $LN13@isASCIIOkB@2
; Line 1103
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$38270[ebp]
	mov	cl, BYTE PTR [eax-1]
	mov	BYTE PTR _c$38274[ebp], cl
; Line 1104
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN11@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN13@isASCIIOkB@2
$LN11@isASCIIOkB@2:
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN10@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 90					; 0000005aH
	jle	SHORT $LN13@isASCIIOkB@2
$LN10@isASCIIOkB@2:
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN9@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 57					; 00000039H
	jle	SHORT $LN13@isASCIIOkB@2
$LN9@isASCIIOkB@2:
; Line 1106
	xor	al, al
	jmp	SHORT $LN18@isASCIIOkB@2
$LN13@isASCIIOkB@2:
; Line 1109
	mov	eax, DWORD PTR _i$38270[ebp]
	add	eax, 1
	mov	DWORD PTR _labelStart$[ebp], eax
	jmp	SHORT $LN8@isASCIIOkB@2
$LN14@isASCIIOkB@2:
; Line 1110
	mov	eax, DWORD PTR _i$38270[ebp]
	cmp	eax, DWORD PTR _labelStart$[ebp]
	jne	SHORT $LN7@isASCIIOkB@2
; Line 1111
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN5@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN6@isASCIIOkB@2
$LN5@isASCIIOkB@2:
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN4@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 90					; 0000005aH
	jle	SHORT $LN6@isASCIIOkB@2
$LN4@isASCIIOkB@2:
; Line 1113
	xor	al, al
	jmp	SHORT $LN18@isASCIIOkB@2
$LN6@isASCIIOkB@2:
; Line 1115
	jmp	SHORT $LN8@isASCIIOkB@2
$LN7@isASCIIOkB@2:
; Line 1116
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 32					; 00000020H
	jg	SHORT $LN8@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 28					; 0000001cH
	jge	SHORT $LN1@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 9
	jl	SHORT $LN8@isASCIIOkB@2
	movsx	eax, BYTE PTR _c$38274[ebp]
	cmp	eax, 13					; 0000000dH
	jg	SHORT $LN8@isASCIIOkB@2
$LN1@isASCIIOkB@2:
; Line 1118
	xor	al, al
	jmp	SHORT $LN18@isASCIIOkB@2
$LN8@isASCIIOkB@2:
; Line 1121
	jmp	$LN16@isASCIIOkB@2
$LN15@isASCIIOkB@2:
; Line 1122
	mov	al, 1
$LN18@isASCIIOkB@2:
; Line 1123
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isASCIIOkBiDi@icu_56@@YACPBDH@Z ENDP			; icu_56::isASCIIOkBiDi
_TEXT	ENDS
EXTRN	_ubidi_getJoiningType_56:PROC
EXTRN	_ubidi_getSingleton_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLabelOkContextJ@UTS46@icu_56@@ABECPB_WH@Z
_TEXT	SEGMENT
_j$38337 = -104						; size = 4
_c$38336 = -92						; size = 4
_type$38327 = -80					; size = 4
_type$38310 = -68					; size = 4
_j$38302 = -56						; size = 4
_c$38301 = -44						; size = 4
_i$38295 = -32						; size = 4
_bdp$ = -20						; size = 4
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_labelLength$ = 12					; size = 4
?isLabelOkContextJ@UTS46@icu_56@@ABECPB_WH@Z PROC	; icu_56::UTS46::isLabelOkContextJ, COMDAT
; _this$ = ecx
; Line 1126
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1127
	call	_ubidi_getSingleton_56
	mov	DWORD PTR _bdp$[ebp], eax
; Line 1130
	mov	DWORD PTR _i$38295[ebp], 0
	jmp	SHORT $LN30@isLabelOkC
$LN29@isLabelOkC:
	mov	eax, DWORD PTR _i$38295[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38295[ebp], eax
$LN30@isLabelOkC:
	mov	eax, DWORD PTR _i$38295[ebp]
	cmp	eax, DWORD PTR _labelLength$[ebp]
	jge	$LN28@isLabelOkC
; Line 1131
	mov	eax, DWORD PTR _i$38295[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 8204				; 0000200cH
	jne	$LN27@isLabelOkC
; Line 1138
	cmp	DWORD PTR _i$38295[ebp], 0
	jne	SHORT $LN26@isLabelOkC
; Line 1139
	xor	al, al
	jmp	$LN31@isLabelOkC
$LN26@isLabelOkC:
; Line 1142
	mov	eax, DWORD PTR _i$38295[ebp]
	mov	DWORD PTR _j$38302[ebp], eax
; Line 1143
	mov	eax, DWORD PTR _j$38302[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
	mov	ecx, DWORD PTR _j$38302[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$38301[ebp], eax
	mov	eax, DWORD PTR _c$38301[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN25@isLabelOkC
	mov	eax, DWORD PTR _j$38302[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
	mov	ecx, DWORD PTR _j$38302[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$38301[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38301[ebp], edx
$LN25@isLabelOkC:
; Line 1144
	mov	esi, esp
	mov	eax, DWORD PTR _c$38301[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	cmp	ecx, 9
	jne	SHORT $LN23@isLabelOkC
; Line 1145
	jmp	$LN29@isLabelOkC
$LN23@isLabelOkC:
; Line 1149
	mov	eax, DWORD PTR _c$38301[ebp]
	push	eax
	mov	ecx, DWORD PTR _bdp$[ebp]
	push	ecx
	call	_ubidi_getJoiningType_56
	add	esp, 8
	mov	DWORD PTR _type$38310[ebp], eax
; Line 1150
	cmp	DWORD PTR _type$38310[ebp], 5
	jne	SHORT $LN21@isLabelOkC
; Line 1151
	cmp	DWORD PTR _j$38302[ebp], 0
	jne	SHORT $LN20@isLabelOkC
; Line 1152
	xor	al, al
	jmp	$LN31@isLabelOkC
$LN20@isLabelOkC:
; Line 1154
	mov	eax, DWORD PTR _j$38302[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
	mov	ecx, DWORD PTR _j$38302[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$38301[ebp], eax
	mov	eax, DWORD PTR _c$38301[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN19@isLabelOkC
	mov	eax, DWORD PTR _j$38302[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
	mov	ecx, DWORD PTR _j$38302[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$38301[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38301[ebp], edx
$LN19@isLabelOkC:
	jmp	SHORT $LN18@isLabelOkC
$LN21@isLabelOkC:
; Line 1155
	cmp	DWORD PTR _type$38310[ebp], 3
	je	SHORT $LN16@isLabelOkC
	cmp	DWORD PTR _type$38310[ebp], 2
	jne	SHORT $LN17@isLabelOkC
$LN16@isLabelOkC:
; Line 1156
	jmp	SHORT $LN22@isLabelOkC
; Line 1157
	jmp	SHORT $LN18@isLabelOkC
$LN17@isLabelOkC:
; Line 1158
	xor	al, al
	jmp	$LN31@isLabelOkC
$LN18@isLabelOkC:
; Line 1160
	jmp	$LN23@isLabelOkC
$LN22@isLabelOkC:
; Line 1162
	mov	eax, DWORD PTR _i$38295[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
$LN14@isLabelOkC:
; Line 1163
	mov	eax, DWORD PTR _j$38302[ebp]
	cmp	eax, DWORD PTR _labelLength$[ebp]
	jne	SHORT $LN12@isLabelOkC
; Line 1164
	xor	al, al
	jmp	$LN31@isLabelOkC
$LN12@isLabelOkC:
; Line 1166
	mov	eax, DWORD PTR _j$38302[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$38301[ebp], edx
	mov	eax, DWORD PTR _j$38302[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
	mov	eax, DWORD PTR _c$38301[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN11@isLabelOkC
	mov	eax, DWORD PTR _c$38301[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _j$38302[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38301[ebp], edx
	mov	eax, DWORD PTR _j$38302[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38302[ebp], eax
$LN11@isLabelOkC:
; Line 1167
	mov	eax, DWORD PTR _c$38301[ebp]
	push	eax
	mov	ecx, DWORD PTR _bdp$[ebp]
	push	ecx
	call	_ubidi_getJoiningType_56
	add	esp, 8
	mov	DWORD PTR _type$38327[ebp], eax
; Line 1168
	cmp	DWORD PTR _type$38327[ebp], 5
	jne	SHORT $LN10@isLabelOkC
	jmp	SHORT $LN9@isLabelOkC
$LN10@isLabelOkC:
; Line 1170
	cmp	DWORD PTR _type$38327[ebp], 4
	je	SHORT $LN7@isLabelOkC
	cmp	DWORD PTR _type$38327[ebp], 2
	jne	SHORT $LN8@isLabelOkC
$LN7@isLabelOkC:
; Line 1171
	jmp	SHORT $LN13@isLabelOkC
; Line 1172
	jmp	SHORT $LN9@isLabelOkC
$LN8@isLabelOkC:
; Line 1173
	xor	al, al
	jmp	$LN31@isLabelOkC
$LN9@isLabelOkC:
; Line 1175
	jmp	$LN14@isLabelOkC
$LN13@isLabelOkC:
	jmp	$LN5@isLabelOkC
$LN27@isLabelOkC:
; Line 1176
	mov	eax, DWORD PTR _i$38295[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 8205				; 0000200dH
	jne	$LN5@isLabelOkC
; Line 1181
	cmp	DWORD PTR _i$38295[ebp], 0
	jne	SHORT $LN3@isLabelOkC
; Line 1182
	xor	al, al
	jmp	$LN31@isLabelOkC
$LN3@isLabelOkC:
; Line 1185
	mov	eax, DWORD PTR _i$38295[ebp]
	mov	DWORD PTR _j$38337[ebp], eax
; Line 1186
	mov	eax, DWORD PTR _j$38337[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38337[ebp], eax
	mov	ecx, DWORD PTR _j$38337[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$38336[ebp], eax
	mov	eax, DWORD PTR _c$38336[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN2@isLabelOkC
	mov	eax, DWORD PTR _j$38337[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38337[ebp], eax
	mov	ecx, DWORD PTR _j$38337[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$38336[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38336[ebp], edx
$LN2@isLabelOkC:
; Line 1187
	mov	esi, esp
	mov	eax, DWORD PTR _c$38336[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	cmp	ecx, 9
	je	SHORT $LN5@isLabelOkC
; Line 1188
	xor	al, al
	jmp	SHORT $LN31@isLabelOkC
$LN5@isLabelOkC:
; Line 1191
	jmp	$LN29@isLabelOkC
$LN28@isLabelOkC:
; Line 1192
	mov	al, 1
$LN31@isLabelOkC:
; Line 1193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?isLabelOkContextJ@UTS46@icu_56@@ABECPB_WH@Z ENDP	; icu_56::UTS46::isLabelOkContextJ
_TEXT	ENDS
EXTRN	_uscript_getScript_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkLabelContextO@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z
_TEXT	SEGMENT
_script$38406 = -200					; size = 4
___c2$38402 = -188					; size = 2
_j$38396 = -176						; size = 4
_errorCode$38395 = -164					; size = 4
___c2$38381 = -152					; size = 2
_j$38379 = -140						; size = 4
_errorCode$38378 = -128					; size = 4
_script$38376 = -116					; size = 4
___c2$38368 = -104					; size = 2
_j$38366 = -92						; size = 4
_errorCode$38365 = -80					; size = 4
_script$38363 = -68					; size = 4
_c$38354 = -56						; size = 4
_i$38350 = -44						; size = 4
_arabicDigits$ = -32					; size = 4
_labelEnd$ = -20					; size = 4
_this$ = -8						; size = 4
_label$ = 8						; size = 4
_labelLength$ = 12					; size = 4
_info$ = 16						; size = 4
?checkLabelContextO@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z PROC ; icu_56::UTS46::checkLabelContextO, COMDAT
; _this$ = ecx
; Line 1196
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1197
	mov	eax, DWORD PTR _labelLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _labelEnd$[ebp], eax
; Line 1198
	mov	DWORD PTR _arabicDigits$[ebp], 0
; Line 1199
	mov	DWORD PTR _i$38350[ebp], 0
	jmp	SHORT $LN38@checkLabel@2
$LN37@checkLabel@2:
	mov	eax, DWORD PTR _i$38350[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38350[ebp], eax
$LN38@checkLabel@2:
	mov	eax, DWORD PTR _i$38350[ebp]
	cmp	eax, DWORD PTR _labelEnd$[ebp]
	jg	$LN39@checkLabel@2
; Line 1200
	mov	eax, DWORD PTR _i$38350[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$38354[ebp], edx
; Line 1201
	cmp	DWORD PTR _c$38354[ebp], 183		; 000000b7H
	jge	SHORT $LN35@checkLabel@2
	jmp	$LN34@checkLabel@2
$LN35@checkLabel@2:
; Line 1203
	cmp	DWORD PTR _c$38354[ebp], 1785		; 000006f9H
	jg	$LN33@checkLabel@2
; Line 1204
	cmp	DWORD PTR _c$38354[ebp], 183		; 000000b7H
	jne	SHORT $LN32@checkLabel@2
; Line 1211
	cmp	DWORD PTR _i$38350[ebp], 0
	jle	SHORT $LN30@checkLabel@2
	mov	eax, DWORD PTR _i$38350[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 108				; 0000006cH
	jne	SHORT $LN30@checkLabel@2
	mov	eax, DWORD PTR _i$38350[ebp]
	cmp	eax, DWORD PTR _labelEnd$[ebp]
	jge	SHORT $LN30@checkLabel@2
	mov	eax, DWORD PTR _i$38350[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+2]
	cmp	edx, 108				; 0000006cH
	je	SHORT $LN31@checkLabel@2
$LN30@checkLabel@2:
; Line 1212
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN31@checkLabel@2:
; Line 1213
	jmp	$LN29@checkLabel@2
$LN32@checkLabel@2:
; Line 1214
	cmp	DWORD PTR _c$38354[ebp], 885		; 00000375H
	jne	$LN28@checkLabel@2
; Line 1219
	mov	DWORD PTR _script$38363[ebp], -1
; Line 1220
	mov	eax, DWORD PTR _i$38350[ebp]
	cmp	eax, DWORD PTR _labelEnd$[ebp]
	jge	$LN27@checkLabel@2
; Line 1221
	mov	DWORD PTR _errorCode$38365[ebp], 0
; Line 1222
	mov	eax, DWORD PTR _i$38350[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38366[ebp], eax
; Line 1223
	mov	eax, DWORD PTR _j$38366[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$38354[ebp], edx
	mov	eax, DWORD PTR _j$38366[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38366[ebp], eax
	mov	eax, DWORD PTR _c$38354[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN26@checkLabel@2
	mov	eax, DWORD PTR _j$38366[ebp]
	cmp	eax, DWORD PTR _labelLength$[ebp]
	je	SHORT $LN26@checkLabel@2
	mov	eax, DWORD PTR _j$38366[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$38368[ebp], dx
	movzx	eax, WORD PTR ___c2$38368[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN26@checkLabel@2
	mov	eax, DWORD PTR _j$38366[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38366[ebp], eax
	mov	eax, DWORD PTR _c$38354[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$38368[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38354[ebp], edx
$LN26@checkLabel@2:
; Line 1224
	lea	eax, DWORD PTR _errorCode$38365[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$38354[ebp]
	push	ecx
	call	_uscript_getScript_56
	add	esp, 8
	mov	DWORD PTR _script$38363[ebp], eax
$LN27@checkLabel@2:
; Line 1226
	cmp	DWORD PTR _script$38363[ebp], 14	; 0000000eH
	je	SHORT $LN24@checkLabel@2
; Line 1227
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN24@checkLabel@2:
; Line 1228
	jmp	$LN29@checkLabel@2
$LN28@checkLabel@2:
; Line 1229
	cmp	DWORD PTR _c$38354[ebp], 1523		; 000005f3H
	je	SHORT $LN21@checkLabel@2
	cmp	DWORD PTR _c$38354[ebp], 1524		; 000005f4H
	jne	$LN22@checkLabel@2
$LN21@checkLabel@2:
; Line 1239
	mov	DWORD PTR _script$38376[ebp], -1
; Line 1240
	cmp	DWORD PTR _i$38350[ebp], 0
	jle	$LN20@checkLabel@2
; Line 1241
	mov	DWORD PTR _errorCode$38378[ebp], 0
; Line 1242
	mov	eax, DWORD PTR _i$38350[ebp]
	mov	DWORD PTR _j$38379[ebp], eax
; Line 1243
	mov	eax, DWORD PTR _j$38379[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38379[ebp], eax
	mov	ecx, DWORD PTR _j$38379[ebp]
	mov	edx, DWORD PTR _label$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$38354[ebp], eax
	mov	eax, DWORD PTR _c$38354[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN19@checkLabel@2
	cmp	DWORD PTR _j$38379[ebp], 0
	jle	SHORT $LN19@checkLabel@2
	mov	eax, DWORD PTR _j$38379[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	mov	dx, WORD PTR [ecx+eax*2-2]
	mov	WORD PTR ___c2$38381[ebp], dx
	movzx	eax, WORD PTR ___c2$38381[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN19@checkLabel@2
	mov	eax, DWORD PTR _j$38379[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$38379[ebp], eax
	movzx	eax, WORD PTR ___c2$38381[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$38354[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38354[ebp], edx
$LN19@checkLabel@2:
; Line 1244
	lea	eax, DWORD PTR _errorCode$38378[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$38354[ebp]
	push	ecx
	call	_uscript_getScript_56
	add	esp, 8
	mov	DWORD PTR _script$38376[ebp], eax
$LN20@checkLabel@2:
; Line 1246
	cmp	DWORD PTR _script$38376[ebp], 19	; 00000013H
	je	SHORT $LN17@checkLabel@2
; Line 1247
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN17@checkLabel@2:
; Line 1248
	jmp	SHORT $LN29@checkLabel@2
$LN22@checkLabel@2:
; Line 1249
	cmp	DWORD PTR _c$38354[ebp], 1632		; 00000660H
	jl	SHORT $LN29@checkLabel@2
; Line 1263
	cmp	DWORD PTR _c$38354[ebp], 1641		; 00000669H
	jg	SHORT $LN14@checkLabel@2
; Line 1264
	cmp	DWORD PTR _arabicDigits$[ebp], 0
	jle	SHORT $LN13@checkLabel@2
; Line 1265
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 16384				; 00004000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN13@checkLabel@2:
; Line 1267
	mov	DWORD PTR _arabicDigits$[ebp], -1
	jmp	SHORT $LN29@checkLabel@2
$LN14@checkLabel@2:
; Line 1268
	cmp	DWORD PTR _c$38354[ebp], 1776		; 000006f0H
	jl	SHORT $LN29@checkLabel@2
; Line 1269
	cmp	DWORD PTR _arabicDigits$[ebp], 0
	jge	SHORT $LN10@checkLabel@2
; Line 1270
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 16384				; 00004000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN10@checkLabel@2:
; Line 1272
	mov	DWORD PTR _arabicDigits$[ebp], 1
$LN29@checkLabel@2:
; Line 1274
	jmp	$LN34@checkLabel@2
$LN33@checkLabel@2:
; Line 1275
	cmp	DWORD PTR _c$38354[ebp], 12539		; 000030fbH
	jne	$LN34@checkLabel@2
; Line 1282
	mov	DWORD PTR _errorCode$38395[ebp], 0
; Line 1283
	mov	DWORD PTR _j$38396[ebp], 0
$LN7@checkLabel@2:
; Line 1284
	mov	eax, DWORD PTR _j$38396[ebp]
	cmp	eax, DWORD PTR _labelEnd$[ebp]
	jle	SHORT $LN5@checkLabel@2
; Line 1285
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 1286
	jmp	$LN34@checkLabel@2
$LN5@checkLabel@2:
; Line 1288
	mov	eax, DWORD PTR _j$38396[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$38354[ebp], edx
	mov	eax, DWORD PTR _j$38396[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38396[ebp], eax
	mov	eax, DWORD PTR _c$38354[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN4@checkLabel@2
	mov	eax, DWORD PTR _j$38396[ebp]
	cmp	eax, DWORD PTR _labelLength$[ebp]
	je	SHORT $LN4@checkLabel@2
	mov	eax, DWORD PTR _j$38396[ebp]
	mov	ecx, DWORD PTR _label$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$38402[ebp], dx
	movzx	eax, WORD PTR ___c2$38402[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN4@checkLabel@2
	mov	eax, DWORD PTR _j$38396[ebp]
	add	eax, 1
	mov	DWORD PTR _j$38396[ebp], eax
	mov	eax, DWORD PTR _c$38354[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$38402[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$38354[ebp], edx
$LN4@checkLabel@2:
; Line 1289
	lea	eax, DWORD PTR _errorCode$38395[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$38354[ebp]
	push	ecx
	call	_uscript_getScript_56
	add	esp, 8
	mov	DWORD PTR _script$38406[ebp], eax
; Line 1290
	cmp	DWORD PTR _script$38406[ebp], 20	; 00000014H
	je	SHORT $LN1@checkLabel@2
	cmp	DWORD PTR _script$38406[ebp], 22	; 00000016H
	je	SHORT $LN1@checkLabel@2
	cmp	DWORD PTR _script$38406[ebp], 17	; 00000011H
	jne	SHORT $LN2@checkLabel@2
$LN1@checkLabel@2:
; Line 1291
	jmp	SHORT $LN34@checkLabel@2
$LN2@checkLabel@2:
; Line 1293
	jmp	$LN7@checkLabel@2
$LN34@checkLabel@2:
; Line 1295
	jmp	$LN37@checkLabel@2
$LN39@checkLabel@2:
; Line 1296
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@checkLabel@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN45@checkLabel@2:
	DD	3
	DD	$LN44@checkLabel@2
$LN44@checkLabel@2:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN41@checkLabel@2
	DD	-128					; ffffff80H
	DD	4
	DD	$LN42@checkLabel@2
	DD	-164					; ffffff5cH
	DD	4
	DD	$LN43@checkLabel@2
$LN43@checkLabel@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN42@checkLabel@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN41@checkLabel@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
?checkLabelContextO@UTS46@icu_56@@ABEXPB_WHAAVIDNAInfo@2@@Z ENDP ; icu_56::UTS46::checkLabelContextO
_TEXT	ENDS
PUBLIC	_uidna_openUTS46_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_openUTS46_56
_TEXT	SEGMENT
_options$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_uidna_openUTS46_56 PROC				; COMDAT
; Line 1305
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1306
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _options$[ebp]
	push	ecx
	call	?createUTS46Instance@IDNA@icu_56@@SAPAV12@IAAW4UErrorCode@@@Z ; icu_56::IDNA::createUTS46Instance
	add	esp, 8
; Line 1307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uidna_openUTS46_56 ENDP
_TEXT	ENDS
PUBLIC	_uidna_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_close_56
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T46125 = -212						; size = 4
$T46126 = -200						; size = 4
_idna$ = 8						; size = 4
_uidna_close_56 PROC					; COMDAT
; Line 1310
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1311
	mov	eax, DWORD PTR _idna$[ebp]
	mov	DWORD PTR $T46126[ebp], eax
	mov	ecx, DWORD PTR $T46126[ebp]
	mov	DWORD PTR $T46125[ebp], ecx
	cmp	DWORD PTR $T46125[ebp], 0
	je	SHORT $LN3@uidna_clos
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46125[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46125[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@uidna_clos
$LN3@uidna_clos:
	mov	DWORD PTR tv74[ebp], 0
$LN1@uidna_clos:
; Line 1312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uidna_close_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_uidna_labelToASCII_56
EXTRN	?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:PROC ; icu_56::UnicodeString::extract
EXTRN	??0UnicodeString@icu_56@@QAE@PA_WHH@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC	; icu_56::UnicodeString::UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_labelToASCII_56
_TEXT	SEGMENT
$T46132 = -368						; size = 4
_info$ = -164						; size = 12
_destString$ = -144					; size = 64
_src$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_idna$ = 8						; size = 4
_label$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_labelToASCII_56 PROC				; COMDAT
; Line 1348
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1349
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _label$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_labe
; Line 1350
	xor	eax, eax
	jmp	$LN2@uidna_labe
$LN1@uidna_labe:
; Line 1352
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _label$[ebp]
	push	ecx
	cmp	DWORD PTR _length$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1353
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??0UnicodeString@icu_56@@QAE@PA_WHH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1354
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1355
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _destString$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1356
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1357
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ; icu_56::UnicodeString::extract
	mov	DWORD PTR $T46132[ebp], eax
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	lea	ecx, DWORD PTR _src$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46132[ebp]
$LN2@uidna_labe:
; Line 1358
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@uidna_labe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@uidna_labe:
	DD	3
	DD	$LN7@uidna_labe
$LN7@uidna_labe:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN4@uidna_labe
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN5@uidna_labe
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN6@uidna_labe
$LN6@uidna_labe:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@uidna_labe:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN4@uidna_labe:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_labelToASCII_56 ENDP
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv83 = -196						; size = 4
tv76 = -196						; size = 4
_label$ = 8						; size = 4
_length$ = 12						; size = 4
_dest$ = 16						; size = 4
_capacity$ = 20						; size = 4
_pInfo$ = 24						; size = 4
_pErrorCode$ = 28					; size = 4
?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z PROC ; checkArgs, COMDAT
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1318
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@checkArgs
; Line 1319
	xor	al, al
	jmp	$LN6@checkArgs
$LN5@checkArgs:
; Line 1322
	cmp	DWORD PTR _pInfo$[ebp], 0
	je	SHORT $LN3@checkArgs
	mov	eax, DWORD PTR _pInfo$[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	ecx, 16					; 00000010H
	jge	SHORT $LN4@checkArgs
$LN3@checkArgs:
; Line 1323
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1324
	xor	al, al
	jmp	$LN6@checkArgs
$LN4@checkArgs:
; Line 1329
	cmp	DWORD PTR _label$[ebp], 0
	jne	SHORT $LN8@checkArgs
	xor	eax, eax
	cmp	DWORD PTR _length$[ebp], 0
	setne	al
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN9@checkArgs
$LN8@checkArgs:
	xor	ecx, ecx
	cmp	DWORD PTR _length$[ebp], -1
	setl	cl
	mov	DWORD PTR tv76[ebp], ecx
$LN9@checkArgs:
	cmp	DWORD PTR tv76[ebp], 0
	jne	SHORT $LN1@checkArgs
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN10@checkArgs
	xor	eax, eax
	cmp	DWORD PTR _capacity$[ebp], 0
	setne	al
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN11@checkArgs
$LN10@checkArgs:
	xor	ecx, ecx
	cmp	DWORD PTR _capacity$[ebp], 0
	setl	cl
	mov	DWORD PTR tv83[ebp], ecx
$LN11@checkArgs:
	cmp	DWORD PTR tv83[ebp], 0
	jne	SHORT $LN1@checkArgs
	mov	eax, DWORD PTR _dest$[ebp]
	cmp	eax, DWORD PTR _label$[ebp]
	jne	SHORT $LN2@checkArgs
	cmp	DWORD PTR _label$[ebp], 0
	je	SHORT $LN2@checkArgs
$LN1@checkArgs:
; Line 1330
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1331
	xor	al, al
	jmp	SHORT $LN6@checkArgs
$LN2@checkArgs:
; Line 1334
	mov	eax, DWORD PTR _pInfo$[ebp]
	movsx	ecx, WORD PTR [eax]
	sub	ecx, 2
	push	ecx
	push	0
	mov	edx, DWORD PTR _pInfo$[ebp]
	add	edx, 2
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1335
	mov	al, 1
$LN6@checkArgs:
; Line 1336
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ENDP ; checkArgs
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z
_TEXT	SEGMENT
_info$ = 8						; size = 4
_pInfo$ = 12						; size = 4
?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z PROC ; idnaInfoToStruct, COMDAT
; Line 1339
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1340
	mov	ecx, DWORD PTR _info$[ebp]
	call	?isTransitionalDifferent@IDNAInfo@icu_56@@QBECXZ ; icu_56::IDNAInfo::isTransitionalDifferent
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	BYTE PTR [ecx+2], al
; Line 1341
	mov	ecx, DWORD PTR _info$[ebp]
	call	?getErrors@IDNAInfo@icu_56@@QBEIXZ	; icu_56::IDNAInfo::getErrors
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1342
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ENDP ; idnaInfoToStruct
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_uidna_labelToUnicode_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_labelToUnicode_56
_TEXT	SEGMENT
$T46149 = -368						; size = 4
_info$ = -164						; size = 12
_destString$ = -144					; size = 64
_src$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_idna$ = 8						; size = 4
_label$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_labelToUnicode_56 PROC				; COMDAT
; Line 1364
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1365
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _label$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_labe@2
; Line 1366
	xor	eax, eax
	jmp	$LN2@uidna_labe@2
$LN1@uidna_labe@2:
; Line 1368
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _label$[ebp]
	push	ecx
	cmp	DWORD PTR _length$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1369
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??0UnicodeString@icu_56@@QAE@PA_WHH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1370
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1371
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _destString$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1372
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1373
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ; icu_56::UnicodeString::extract
	mov	DWORD PTR $T46149[ebp], eax
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	lea	ecx, DWORD PTR _src$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46149[ebp]
$LN2@uidna_labe@2:
; Line 1374
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@uidna_labe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@uidna_labe@2:
	DD	3
	DD	$LN7@uidna_labe@2
$LN7@uidna_labe@2:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN4@uidna_labe@2
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN5@uidna_labe@2
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN6@uidna_labe@2
$LN6@uidna_labe@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@uidna_labe@2:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN4@uidna_labe@2:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_labelToUnicode_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_uidna_nameToASCII_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_nameToASCII_56
_TEXT	SEGMENT
$T46158 = -368						; size = 4
_info$ = -164						; size = 12
_destString$ = -144					; size = 64
_src$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_idna$ = 8						; size = 4
_name$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_nameToASCII_56 PROC				; COMDAT
; Line 1380
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1381
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_name
; Line 1382
	xor	eax, eax
	jmp	$LN2@uidna_name
$LN1@uidna_name:
; Line 1384
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	cmp	DWORD PTR _length$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1385
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??0UnicodeString@icu_56@@QAE@PA_WHH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1386
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1387
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _destString$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1388
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1389
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ; icu_56::UnicodeString::extract
	mov	DWORD PTR $T46158[ebp], eax
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	lea	ecx, DWORD PTR _src$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46158[ebp]
$LN2@uidna_name:
; Line 1390
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@uidna_name
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@uidna_name:
	DD	3
	DD	$LN7@uidna_name
$LN7@uidna_name:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN4@uidna_name
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN5@uidna_name
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN6@uidna_name
$LN6@uidna_name:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@uidna_name:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN4@uidna_name:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_nameToASCII_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_uidna_nameToUnicode_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_nameToUnicode_56
_TEXT	SEGMENT
$T46167 = -368						; size = 4
_info$ = -164						; size = 12
_destString$ = -144					; size = 64
_src$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_idna$ = 8						; size = 4
_name$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_nameToUnicode_56 PROC				; COMDAT
; Line 1396
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1397
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_name@2
; Line 1398
	xor	eax, eax
	jmp	$LN2@uidna_name@2
$LN1@uidna_name@2:
; Line 1400
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	cmp	DWORD PTR _length$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1401
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??0UnicodeString@icu_56@@QAE@PA_WHH@Z	; icu_56::UnicodeString::UnicodeString
; Line 1402
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1403
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _destString$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1404
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1405
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	ecx, DWORD PTR _destString$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ; icu_56::UnicodeString::extract
	mov	DWORD PTR $T46167[ebp], eax
	lea	ecx, DWORD PTR _destString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	lea	ecx, DWORD PTR _src$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T46167[ebp]
$LN2@uidna_name@2:
; Line 1406
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@uidna_name@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@uidna_name@2:
	DD	3
	DD	$LN7@uidna_name@2
$LN7@uidna_name@2:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN4@uidna_name@2
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN5@uidna_name@2
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN6@uidna_name@2
$LN6@uidna_name@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@uidna_name@2:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN4@uidna_name@2:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_nameToUnicode_56 ENDP
_TEXT	ENDS
PUBLIC	_uidna_labelToASCII_UTF8_56
EXTRN	??1CheckedArrayByteSink@icu_56@@UAE@XZ:PROC	; icu_56::CheckedArrayByteSink::~CheckedArrayByteSink
EXTRN	_u_terminateChars_56:PROC
EXTRN	??0CheckedArrayByteSink@icu_56@@QAE@PADH@Z:PROC	; icu_56::CheckedArrayByteSink::CheckedArrayByteSink
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_labelToASCII_UTF8_56
_TEXT	SEGMENT
tv78 = -276						; size = 4
$T46177 = -268						; size = 4
_info$ = -64						; size = 12
_sink$ = -44						; size = 24
_src$ = -12						; size = 8
_idna$ = 8						; size = 4
_label$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_labelToASCII_UTF8_56 PROC			; COMDAT
; Line 1412
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1413
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _label$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_labe@3
; Line 1414
	xor	eax, eax
	jmp	$LN2@uidna_labe@3
$LN1@uidna_labe@3:
; Line 1416
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@uidna_labe@3
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@uidna_labe@3
$LN4@uidna_labe@3:
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
$LN5@uidna_labe@3:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
; Line 1417
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??0CheckedArrayByteSink@icu_56@@QAE@PADH@Z ; icu_56::CheckedArrayByteSink::CheckedArrayByteSink
; Line 1418
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1419
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sink$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1420
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1421
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T46177[ebp], eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??1CheckedArrayByteSink@icu_56@@UAE@XZ	; icu_56::CheckedArrayByteSink::~CheckedArrayByteSink
	mov	eax, DWORD PTR $T46177[ebp]
$LN2@uidna_labe@3:
; Line 1422
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@uidna_labe@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@uidna_labe@3:
	DD	3
	DD	$LN9@uidna_labe@3
$LN9@uidna_labe@3:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN6@uidna_labe@3
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN7@uidna_labe@3
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN8@uidna_labe@3
$LN8@uidna_labe@3:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN7@uidna_labe@3:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN6@uidna_labe@3:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_labelToASCII_UTF8_56 ENDP
_TEXT	ENDS
PUBLIC	_uidna_labelToUnicodeUTF8_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_labelToUnicodeUTF8_56
_TEXT	SEGMENT
tv78 = -276						; size = 4
$T46187 = -268						; size = 4
_info$ = -64						; size = 12
_sink$ = -44						; size = 24
_src$ = -12						; size = 8
_idna$ = 8						; size = 4
_label$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_labelToUnicodeUTF8_56 PROC			; COMDAT
; Line 1428
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1429
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _label$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_labe@4
; Line 1430
	xor	eax, eax
	jmp	$LN2@uidna_labe@4
$LN1@uidna_labe@4:
; Line 1432
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@uidna_labe@4
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@uidna_labe@4
$LN4@uidna_labe@4:
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
$LN5@uidna_labe@4:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR _label$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
; Line 1433
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??0CheckedArrayByteSink@icu_56@@QAE@PADH@Z ; icu_56::CheckedArrayByteSink::CheckedArrayByteSink
; Line 1434
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1435
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sink$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1436
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1437
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T46187[ebp], eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??1CheckedArrayByteSink@icu_56@@UAE@XZ	; icu_56::CheckedArrayByteSink::~CheckedArrayByteSink
	mov	eax, DWORD PTR $T46187[ebp]
$LN2@uidna_labe@4:
; Line 1438
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@uidna_labe@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@uidna_labe@4:
	DD	3
	DD	$LN9@uidna_labe@4
$LN9@uidna_labe@4:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN6@uidna_labe@4
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN7@uidna_labe@4
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN8@uidna_labe@4
$LN8@uidna_labe@4:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN7@uidna_labe@4:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN6@uidna_labe@4:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_labelToUnicodeUTF8_56 ENDP
_TEXT	ENDS
PUBLIC	_uidna_nameToASCII_UTF8_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_nameToASCII_UTF8_56
_TEXT	SEGMENT
tv78 = -276						; size = 4
$T46197 = -268						; size = 4
_info$ = -64						; size = 12
_sink$ = -44						; size = 24
_src$ = -12						; size = 8
_idna$ = 8						; size = 4
_name$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_nameToASCII_UTF8_56 PROC				; COMDAT
; Line 1444
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1445
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_name@3
; Line 1446
	xor	eax, eax
	jmp	$LN2@uidna_name@3
$LN1@uidna_name@3:
; Line 1448
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@uidna_name@3
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@uidna_name@3
$LN4@uidna_name@3:
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
$LN5@uidna_name@3:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
; Line 1449
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??0CheckedArrayByteSink@icu_56@@QAE@PADH@Z ; icu_56::CheckedArrayByteSink::CheckedArrayByteSink
; Line 1450
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1451
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sink$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1452
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1453
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T46197[ebp], eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??1CheckedArrayByteSink@icu_56@@UAE@XZ	; icu_56::CheckedArrayByteSink::~CheckedArrayByteSink
	mov	eax, DWORD PTR $T46197[ebp]
$LN2@uidna_name@3:
; Line 1454
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@uidna_name@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@uidna_name@3:
	DD	3
	DD	$LN9@uidna_name@3
$LN9@uidna_name@3:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN6@uidna_name@3
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN7@uidna_name@3
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN8@uidna_name@3
$LN8@uidna_name@3:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN7@uidna_name@3:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN6@uidna_name@3:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_nameToASCII_UTF8_56 ENDP
_TEXT	ENDS
PUBLIC	_uidna_nameToUnicodeUTF8_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uidna_nameToUnicodeUTF8_56
_TEXT	SEGMENT
tv78 = -276						; size = 4
$T46207 = -268						; size = 4
_info$ = -64						; size = 12
_sink$ = -44						; size = 24
_src$ = -12						; size = 8
_idna$ = 8						; size = 4
_name$ = 12						; size = 4
_length$ = 16						; size = 4
_dest$ = 20						; size = 4
_capacity$ = 24						; size = 4
_pInfo$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_uidna_nameToUnicodeUTF8_56 PROC			; COMDAT
; Line 1460
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1461
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	?checkArgs@@YACPBXHPAXHPAUUIDNAInfo@@PAW4UErrorCode@@@Z ; checkArgs
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@uidna_name@4
; Line 1462
	xor	eax, eax
	jmp	$LN2@uidna_name@4
$LN1@uidna_name@4:
; Line 1464
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@uidna_name@4
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@uidna_name@4
$LN4@uidna_name@4:
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
$LN5@uidna_name@4:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
; Line 1465
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??0CheckedArrayByteSink@icu_56@@QAE@PADH@Z ; icu_56::CheckedArrayByteSink::CheckedArrayByteSink
; Line 1466
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0IDNAInfo@icu_56@@QAE@XZ		; icu_56::IDNAInfo::IDNAInfo
; Line 1467
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sink$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _idna$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1468
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	call	?idnaInfoToStruct@@YAXAAVIDNAInfo@icu_56@@PAUUIDNAInfo@@@Z ; idnaInfoToStruct
	add	esp, 8
; Line 1469
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T46207[ebp], eax
	lea	ecx, DWORD PTR _sink$[ebp]
	call	??1CheckedArrayByteSink@icu_56@@UAE@XZ	; icu_56::CheckedArrayByteSink::~CheckedArrayByteSink
	mov	eax, DWORD PTR $T46207[ebp]
$LN2@uidna_name@4:
; Line 1470
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@uidna_name@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@uidna_name@4:
	DD	3
	DD	$LN9@uidna_name@4
$LN9@uidna_name@4:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN6@uidna_name@4
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN7@uidna_name@4
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN8@uidna_name@4
$LN8@uidna_name@4:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN7@uidna_name@4:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN6@uidna_name@4:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_uidna_nameToUnicodeUTF8_56 ENDP
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z PROC		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeFilter@icu_56@@UAEPAXI@Z
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z ENDP		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
END

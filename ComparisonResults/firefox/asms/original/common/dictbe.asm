; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\dictbe.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
?katakanaCost@?1??getKatakanaCost@icu_56@@YAIH@Z@4QBIB DD 02000H ; `icu_56::getKatakanaCost'::`2'::katakanaCost
	DD	03d8H
	DD	0198H
	DD	0f0H
	DD	0ccH
	DD	0fcH
	DD	012cH
	DD	0174H
	DD	01e0H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$34136 = -32					; size = 4
_len$34135 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$34135[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$34136[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$34135[ebp]
	cmp	ecx, DWORD PTR _textLength$34136[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$34135[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T47500 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T47500[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T47500[ebp]
	or	eax, 1
	mov	DWORD PTR $T47500[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::ForwardCharacterIterator::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z PROC ; icu_56::ForwardCharacterIterator::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\chariter.h
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z ENDP ; icu_56::ForwardCharacterIterator::operator=
_TEXT	ENDS
PUBLIC	??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z ; icu_56::ForwardCharacterIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::ForwardCharacterIterator::operator!=, COMDAT
; _this$ = ecx
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 688
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 689
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::ForwardCharacterIterator::operator!=
_TEXT	ENDS
PUBLIC	?setToStart@CharacterIterator@icu_56@@QAEHXZ	; icu_56::CharacterIterator::setToStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToStart@CharacterIterator@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToStart@CharacterIterator@icu_56@@QAEHXZ PROC	; icu_56::CharacterIterator::setToStart, COMDAT
; _this$ = ecx
; Line 692
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 693
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 694
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToStart@CharacterIterator@icu_56@@QAEHXZ ENDP	; icu_56::CharacterIterator::setToStart
_TEXT	ENDS
PUBLIC	?setToEnd@CharacterIterator@icu_56@@QAEHXZ	; icu_56::CharacterIterator::setToEnd
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEnd@CharacterIterator@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEnd@CharacterIterator@icu_56@@QAEHXZ PROC		; icu_56::CharacterIterator::setToEnd, COMDAT
; _this$ = ecx
; Line 697
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 698
	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEnd@CharacterIterator@icu_56@@QAEHXZ ENDP		; icu_56::CharacterIterator::setToEnd
_TEXT	ENDS
PUBLIC	?startIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::startIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?startIndex@CharacterIterator@icu_56@@QBEHXZ PROC	; icu_56::CharacterIterator::startIndex, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 703
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 704
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?startIndex@CharacterIterator@icu_56@@QBEHXZ ENDP	; icu_56::CharacterIterator::startIndex
_TEXT	ENDS
PUBLIC	?endIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::endIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?endIndex@CharacterIterator@icu_56@@QBEHXZ PROC		; icu_56::CharacterIterator::endIndex, COMDAT
; _this$ = ecx
; Line 707
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 708
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 709
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?endIndex@CharacterIterator@icu_56@@QBEHXZ ENDP		; icu_56::CharacterIterator::endIndex
_TEXT	ENDS
PUBLIC	?getIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::getIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIndex@CharacterIterator@icu_56@@QBEHXZ PROC		; icu_56::CharacterIterator::getIndex, COMDAT
; _this$ = ecx
; Line 712
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 713
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 714
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIndex@CharacterIterator@icu_56@@QBEHXZ ENDP		; icu_56::CharacterIterator::getIndex
_TEXT	ENDS
PUBLIC	?getLength@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::getLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLength@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLength@CharacterIterator@icu_56@@QBEHXZ PROC	; icu_56::CharacterIterator::getLength, COMDAT
; _this$ = ecx
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 718
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 719
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLength@CharacterIterator@icu_56@@QBEHXZ ENDP	; icu_56::CharacterIterator::getLength
_TEXT	ENDS
PUBLIC	??_7UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`vftable'
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@XZ		; icu_56::UnicodeFunctor::UnicodeFunctor
PUBLIC	??_R4UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFunctor::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFunctor@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeFunctor@icu_56@@6B@ DD 00H			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFunctor@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeFunctor@icu_56@@6B@ DD FLAT:??_R4UnicodeFunctor@icu_56@@6B@ ; icu_56::UnicodeFunctor::`vftable'
	DD	FLAT:??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFunctor@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFunctor::UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFunctor::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeFunctor::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeFunctor::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`scalar deleting destructor'
EXTRN	??1UnicodeFunctor@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFunctor::~UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`vftable'
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@XZ		; icu_56::UnicodeMatcher::UnicodeMatcher
PUBLIC	??_R4UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeMatcher@icu_56@@6B@ DD 00H			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeMatcher@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeMatcher@icu_56@@6B@ DD FLAT:??_R4UnicodeMatcher@icu_56@@6B@ ; icu_56::UnicodeMatcher::`vftable'
	DD	FLAT:??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@XZ PROC			; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeMatcher@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeMatcher::UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`scalar deleting destructor'
EXTRN	??1UnicodeMatcher@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeMatcher::~UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??0UnicodeFilter@icu_56@@QAE@XZ			; icu_56::UnicodeFilter::UnicodeFilter
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_EUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`vector deleting destructor'
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeFilter@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeFilter::matches
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFilter@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFilter@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFilter::UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UnicodeFil
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@UnicodeFil
$LN3@UnicodeFil:
	mov	DWORD PTR tv90[ebp], 0
$LN4@UnicodeFil:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFilter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeFilter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@operator@2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	DWORD PTR tv84[ebp], 0
$LN4@operator@2:
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeFilter::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`scalar deleting destructor'
EXTRN	??1UnicodeFilter@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFilter::~UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1UnicodeFilter@icu_56@@UAE@XZ	; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9UnicodeSet@icu_56@@QBECABV01@@Z		; icu_56::UnicodeSet::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeSet@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_o$ = 8							; size = 4
??9UnicodeSet@icu_56@@QBECABV01@@Z PROC			; icu_56::UnicodeSet::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\uniset.h
; Line 1651
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1652
	mov	esi, esp
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeSet@icu_56@@QBECABV01@@Z ENDP			; icu_56::UnicodeSet::operator!=
_TEXT	ENDS
PUBLIC	?isFrozen@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isFrozen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFrozen@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
?isFrozen@UnicodeSet@icu_56@@QBECXZ PROC		; icu_56::UnicodeSet::isFrozen, COMDAT
; _this$ = ecx
; Line 1655
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@isFrozen
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jne	SHORT $LN3@isFrozen
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN4@isFrozen
$LN3@isFrozen:
	mov	BYTE PTR tv68[ebp], 1
$LN4@isFrozen:
	mov	al, BYTE PTR tv68[ebp]
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFrozen@UnicodeSet@icu_56@@QBECXZ ENDP		; icu_56::UnicodeSet::isFrozen
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECHH@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECHH@Z:PROC	; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?containsSome@UnicodeSet@icu_56@@QBECHH@Z PROC		; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1660
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECHH@Z ; icu_56::UnicodeSet::containsNone
	movsx	edx, al
	test	edx, edx
	sete	al
; Line 1661
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?containsSome@UnicodeSet@icu_56@@QBECHH@Z ENDP		; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1664
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1667
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1668
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1669
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeSet@icu_56@@QBECXZ PROC			; icu_56::UnicodeSet::isBogus, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1672
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+48]
	and	eax, 1
; Line 1673
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeSet@icu_56@@QBECXZ ENDP			; icu_56::UnicodeSet::isBogus
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1675
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1676
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1677
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1679
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1680
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1681
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1683
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1684
	mov	eax, DWORD PTR _this$[ebp]
; Line 1685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1688
	mov	eax, DWORD PTR _this$[ebp]
; Line 1689
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
EXTRN	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::span
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::span, COMDAT
; _this$ = ecx
; Line 1691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1692
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1693
	cmp	DWORD PTR _start$[ebp], 0
	jge	SHORT $LN3@span
; Line 1694
	mov	DWORD PTR _start$[ebp], 0
	jmp	SHORT $LN2@span
$LN3@span:
; Line 1695
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@span
; Line 1696
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN2@span:
; Line 1698
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	edx, DWORD PTR _start$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	add	eax, DWORD PTR _start$[ebp]
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::span
_TEXT	ENDS
PUBLIC	?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
EXTRN	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::spanBack
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_limit$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBack, COMDAT
; _this$ = ecx
; Line 1701
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1702
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1703
	cmp	DWORD PTR _limit$[ebp], 0
	jge	SHORT $LN3@spanBack
; Line 1704
	mov	DWORD PTR _limit$[ebp], 0
	jmp	SHORT $LN2@spanBack
$LN3@spanBack:
; Line 1705
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@spanBack
; Line 1706
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN2@spanBack:
; Line 1708
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
; Line 1709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBack
_TEXT	ENDS
PUBLIC	??_7StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`vftable'
PUBLIC	??0StringEnumeration@icu_56@@QAE@ABV01@@Z	; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??_R4StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`vector deleting destructor'
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringEnumeration@icu_56@@6B@ DD 00H		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringEnumeration@icu_56@@@8
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7StringEnumeration@icu_56@@6B@ DD FLAT:??_R4StringEnumeration@icu_56@@6B@ ; icu_56::StringEnumeration::`vftable'
	DD	FLAT:??_EStringEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0StringEnumeration@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringEnumeration::StringEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringEnumeration@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringEnumeration::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$36679 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::StringEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
	mov	DWORD PTR _$S1$36679[ebp], 0
	jmp	SHORT $LN3@operator@3
$LN2@operator@3:
	mov	eax, DWORD PTR _$S1$36679[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$36679[ebp], eax
$LN3@operator@3:
	cmp	DWORD PTR _$S1$36679[ebp], 32		; 00000020H
	jae	SHORT $LN1@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$36679[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$36679[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
	jmp	SHORT $LN2@operator@3
$LN1@operator@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::StringEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`scalar deleting destructor'
EXTRN	??1StringEnumeration@icu_56@@UAE@XZ:PROC	; icu_56::StringEnumeration::~StringEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	108					; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector32::ensureCapacity
EXTRN	?expandCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector32::expandCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_minimumCapacity$ = 8					; size = 4
_status$ = 12						; size = 4
?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z PROC ; icu_56::UVector32::ensureCapacity, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvectr32.h
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	cmp	DWORD PTR _minimumCapacity$[ebp], 0
	jl	SHORT $LN2@ensureCapa
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _minimumCapacity$[ebp]
	jl	SHORT $LN2@ensureCapa
; Line 215
	mov	al, 1
	jmp	SHORT $LN3@ensureCapa
; Line 216
	jmp	SHORT $LN3@ensureCapa
$LN2@ensureCapa:
; Line 217
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _minimumCapacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?expandCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector32::expandCapacity
$LN3@ensureCapa:
; Line 219
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector32::ensureCapacity
_TEXT	ENDS
PUBLIC	?elementAti@UVector32@icu_56@@QBEHH@Z		; icu_56::UVector32::elementAti
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?elementAti@UVector32@icu_56@@QBEHH@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?elementAti@UVector32@icu_56@@QBEHH@Z PROC		; icu_56::UVector32::elementAti, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@elementAti
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jle	SHORT $LN3@elementAti
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR _index$[ebp]
	test	edx, edx
	jle	SHORT $LN3@elementAti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@elementAti
$LN3@elementAti:
	mov	DWORD PTR tv73[ebp], 0
$LN4@elementAti:
	mov	eax, DWORD PTR tv73[ebp]
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?elementAti@UVector32@icu_56@@QBEHH@Z ENDP		; icu_56::UVector32::elementAti
_TEXT	ENDS
PUBLIC	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_elem$ = 8						; size = 4
_status$ = 12						; size = 4
?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z PROC ; icu_56::UVector32::addElement, COMDAT
; _this$ = ecx
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector32::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@addElement
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _elem$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@addElement:
; Line 231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector32::addElement
_TEXT	ENDS
PUBLIC	?reserveBlock@UVector32@icu_56@@QAEPAHHAAW4UErrorCode@@@Z ; icu_56::UVector32::reserveBlock
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserveBlock@UVector32@icu_56@@QAEPAHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_rp$ = -20						; size = 4
_this$ = -8						; size = 4
_size$ = 8						; size = 4
_status$ = 12						; size = 4
?reserveBlock@UVector32@icu_56@@QAEPAHHAAW4UErrorCode@@@Z PROC ; icu_56::UVector32::reserveBlock, COMDAT
; _this$ = ecx
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 234
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector32::ensureCapacity
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@reserveBlo
; Line 235
	xor	eax, eax
	jmp	SHORT $LN2@reserveBlo
$LN1@reserveBlo:
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _rp$[ebp], ecx
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 239
	mov	eax, DWORD PTR _rp$[ebp]
$LN2@reserveBlo:
; Line 240
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reserveBlock@UVector32@icu_56@@QAEPAHHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector32::reserveBlock
_TEXT	ENDS
PUBLIC	??_C@_1BM@FLCAFPEE@?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@CCGGFNFG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??popFrame@UVector32@icu_56@@QAEPAHH@Z@4JA ; `icu_56::UVector32::popFrame'::`2'::__LINE__Var
PUBLIC	?popFrame@UVector32@icu_56@@QAEPAHH@Z		; icu_56::UVector32::popFrame
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1BM@FLCAFPEE@?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@FLCAFPEE@?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@CCGGFNFG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FK@CCGGFNFG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'u', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'r'
	DB	00H, '3', 00H, '2', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??popFrame@UVector32@icu_56@@QAEPAHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??popFrame@UVector32@icu_56@@QAEPAHH@Z@4JA DD 0f2H ; `icu_56::UVector32::popFrame'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?popFrame@UVector32@icu_56@@QAEPAHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_size$ = 8						; size = 4
?popFrame@UVector32@icu_56@@QAEPAHH@Z PROC		; icu_56::UVector32::popFrame, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _size$[ebp]
	jge	SHORT $LN4@popFrame
	mov	edx, DWORD PTR ?__LINE__Var@?1??popFrame@UVector32@icu_56@@QAEPAHH@Z@4JA
	add	edx, 1
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@CCGGFNFG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BM@FLCAFPEE@?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@popFrame:
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jge	SHORT $LN1@popFrame
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN1@popFrame:
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR _size$[ebp]
	shl	ecx, 2
	sub	eax, ecx
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?popFrame@UVector32@icu_56@@QAEPAHH@Z ENDP		; icu_56::UVector32::popFrame
_TEXT	ENDS
PUBLIC	?size@UVector32@icu_56@@QBEHXZ			; icu_56::UVector32::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@UVector32@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@UVector32@icu_56@@QBEHXZ PROC			; icu_56::UVector32::size, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UVector32@icu_56@@QBEHXZ ENDP			; icu_56::UVector32::size
_TEXT	ENDS
PUBLIC	?isEmpty@UVector32@icu_56@@QBECXZ		; icu_56::UVector32::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UVector32@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UVector32@icu_56@@QBECXZ PROC			; icu_56::UVector32::isEmpty, COMDAT
; _this$ = ecx
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
; Line 259
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UVector32@icu_56@@QBECXZ ENDP			; icu_56::UVector32::isEmpty
_TEXT	ENDS
PUBLIC	?contains@UVector32@icu_56@@QBECH@Z		; icu_56::UVector32::contains
EXTRN	?indexOf@UVector32@icu_56@@QBEHHH@Z:PROC	; icu_56::UVector32::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector32@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector32@icu_56@@QBECH@Z PROC		; icu_56::UVector32::contains, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector32@icu_56@@QBEHHH@Z	; icu_56::UVector32::indexOf
	test	eax, eax
	setge	al
; Line 263
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector32@icu_56@@QBECH@Z ENDP		; icu_56::UVector32::contains
_TEXT	ENDS
PUBLIC	?lastElementi@UVector32@icu_56@@QBEHXZ		; icu_56::UVector32::lastElementi
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElementi@UVector32@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElementi@UVector32@icu_56@@QBEHXZ PROC		; icu_56::UVector32::lastElementi, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
; Line 267
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElementi@UVector32@icu_56@@QBEHXZ ENDP		; icu_56::UVector32::lastElementi
_TEXT	ENDS
PUBLIC	??9UVector32@icu_56@@QAECABV01@@Z		; icu_56::UVector32::operator!=
EXTRN	??8UVector32@icu_56@@QAECABV01@@Z:PROC		; icu_56::UVector32::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UVector32@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9UVector32@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector32::operator!=, COMDAT
; _this$ = ecx
; Line 269
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 270
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UVector32@icu_56@@QAECABV01@@Z	; icu_56::UVector32::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UVector32@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector32::operator!=
_TEXT	ENDS
PUBLIC	?getBuffer@UVector32@icu_56@@QBEPAHXZ		; icu_56::UVector32::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UVector32@icu_56@@QBEPAHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UVector32@icu_56@@QBEPAHXZ PROC		; icu_56::UVector32::getBuffer, COMDAT
; _this$ = ecx
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UVector32@icu_56@@QBEPAHXZ ENDP		; icu_56::UVector32::getBuffer
_TEXT	ENDS
PUBLIC	?empty@UVector32@icu_56@@QBECXZ			; icu_56::UVector32::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@UVector32@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@UVector32@icu_56@@QBECXZ PROC			; icu_56::UVector32::empty, COMDAT
; _this$ = ecx
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 281
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEmpty@UVector32@icu_56@@QBECXZ	; icu_56::UVector32::isEmpty
; Line 282
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@UVector32@icu_56@@QBECXZ ENDP			; icu_56::UVector32::empty
_TEXT	ENDS
PUBLIC	?peeki@UVector32@icu_56@@QBEHXZ			; icu_56::UVector32::peeki
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peeki@UVector32@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peeki@UVector32@icu_56@@QBEHXZ PROC			; icu_56::UVector32::peeki, COMDAT
; _this$ = ecx
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 285
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElementi@UVector32@icu_56@@QBEHXZ	; icu_56::UVector32::lastElementi
; Line 286
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peeki@UVector32@icu_56@@QBEHXZ ENDP			; icu_56::UVector32::peeki
_TEXT	ENDS
PUBLIC	?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z	; icu_56::UVector32::push
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_status$ = 12						; size = 4
?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z PROC	; icu_56::UVector32::push, COMDAT
; _this$ = ecx
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 289
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 290
	mov	eax, DWORD PTR _i$[ebp]
; Line 291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z ENDP	; icu_56::UVector32::push
_TEXT	ENDS
PUBLIC	?popi@UVector32@icu_56@@QAEHXZ			; icu_56::UVector32::popi
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?popi@UVector32@icu_56@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?popi@UVector32@icu_56@@QAEHXZ PROC			; icu_56::UVector32::popi, COMDAT
; _this$ = ecx
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 294
	mov	DWORD PTR _result$[ebp], 0
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jle	SHORT $LN1@popi
; Line 296
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 297
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _result$[ebp], ecx
$LN1@popi:
; Line 299
	mov	eax, DWORD PTR _result$[ebp]
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?popi@UVector32@icu_56@@QAEHXZ ENDP			; icu_56::UVector32::popi
_TEXT	ENDS
PUBLIC	?size@UVector@icu_56@@QBEHXZ			; icu_56::UVector::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@UVector@icu_56@@QBEHXZ PROC			; icu_56::UVector::size, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvector.h
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 353
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UVector@icu_56@@QBEHXZ ENDP			; icu_56::UVector::size
_TEXT	ENDS
PUBLIC	?isEmpty@UVector@icu_56@@QBECXZ			; icu_56::UVector::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UVector@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UVector@icu_56@@QBECXZ PROC			; icu_56::UVector::isEmpty, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UVector@icu_56@@QBECXZ ENDP			; icu_56::UVector::isEmpty
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECPAX@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHPAXH@Z:PROC	; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECPAX@Z PROC		; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHPAXH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECPAX@Z ENDP		; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECH@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHHH@Z:PROC		; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECH@Z PROC			; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 364
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHHH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECH@Z ENDP			; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?firstElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::firstElement
EXTRN	?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC	; icu_56::UVector::elementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?firstElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?firstElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::firstElement, COMDAT
; _this$ = ecx
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?firstElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::firstElement
_TEXT	ENDS
PUBLIC	?lastElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::lastElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::lastElement, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::lastElement
_TEXT	ENDS
PUBLIC	?lastElementi@UVector@icu_56@@QBEHXZ		; icu_56::UVector::lastElementi
EXTRN	?elementAti@UVector@icu_56@@QBEHH@Z:PROC	; icu_56::UVector::elementAti
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElementi@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElementi@UVector@icu_56@@QBEHXZ PROC		; icu_56::UVector::lastElementi, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
; Line 377
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElementi@UVector@icu_56@@QBEHXZ ENDP		; icu_56::UVector::lastElementi
_TEXT	ENDS
PUBLIC	??AUVector@icu_56@@QBEPAXH@Z			; icu_56::UVector::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUVector@icu_56@@QBEPAXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AUVector@icu_56@@QBEPAXH@Z PROC			; icu_56::UVector::operator[], COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUVector@icu_56@@QBEPAXH@Z ENDP			; icu_56::UVector::operator[]
_TEXT	ENDS
PUBLIC	??9UVector@icu_56@@QAECABV01@@Z			; icu_56::UVector::operator!=
EXTRN	??8UVector@icu_56@@QAECABV01@@Z:PROC		; icu_56::UVector::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UVector@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9UVector@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector::operator!=, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 384
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UVector@icu_56@@QAECABV01@@Z		; icu_56::UVector::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UVector@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector::operator!=
_TEXT	ENDS
PUBLIC	?empty@UStack@icu_56@@QBECXZ			; icu_56::UStack::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@UStack@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@UStack@icu_56@@QBECXZ PROC			; icu_56::UStack::empty, COMDAT
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@UStack@icu_56@@QBECXZ ENDP			; icu_56::UStack::empty
_TEXT	ENDS
PUBLIC	?peek@UStack@icu_56@@QBEPAXXZ			; icu_56::UStack::peek
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peek@UStack@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peek@UStack@icu_56@@QBEPAXXZ PROC			; icu_56::UStack::peek, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElement@UVector@icu_56@@QBEPAXXZ	; icu_56::UVector::lastElement
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peek@UStack@icu_56@@QBEPAXXZ ENDP			; icu_56::UStack::peek
_TEXT	ENDS
PUBLIC	?peeki@UStack@icu_56@@QBEHXZ			; icu_56::UStack::peeki
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peeki@UStack@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peeki@UStack@icu_56@@QBEHXZ PROC			; icu_56::UStack::peeki, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElementi@UVector@icu_56@@QBEHXZ	; icu_56::UVector::lastElementi
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peeki@UStack@icu_56@@QBEHXZ ENDP			; icu_56::UStack::peeki
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 403
	mov	eax, DWORD PTR _obj$[ebp]
; Line 404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z	; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 408
	mov	eax, DWORD PTR _i$[ebp]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::Normalizer2::normalize
EXTRN	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\unicode\normalizer2.h
xdata$x	SEGMENT
__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T47743 = -300						; size = 4
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::Normalizer2::normalize, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T47743[ebp], 0
; Line 195
	lea	ecx, DWORD PTR _result$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 196
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	ecx, DWORD PTR $T47743[ebp]
	or	ecx, 1
	mov	DWORD PTR $T47743[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@normalize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN9@normalize:
	DD	1
	DD	$LN8@normalize
$LN8@normalize:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@normalize
$LN6@normalize:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T47743[ebp]
	and	eax, 1
	je	$LN5@normalize
	and	DWORD PTR $T47743[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN5@normalize:
	ret	0
__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::Normalizer2::normalize
PUBLIC	??_7Normalizer2@icu_56@@6B@			; icu_56::Normalizer2::`vftable'
PUBLIC	??0Normalizer2@icu_56@@QAE@XZ			; icu_56::Normalizer2::Normalizer2
PUBLIC	??_R4Normalizer2@icu_56@@6B@			; icu_56::Normalizer2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNormalizer2@icu_56@@@8			; icu_56::Normalizer2 `RTTI Type Descriptor'
PUBLIC	??_R3Normalizer2@icu_56@@8			; icu_56::Normalizer2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Normalizer2@icu_56@@8			; icu_56::Normalizer2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Normalizer2@icu_56@@8		; icu_56::Normalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENormalizer2@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2::`vector deleting destructor'
EXTRN	?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::Normalizer2::getRawDecomposition
EXTRN	?composePair@Normalizer2@icu_56@@UBEHHH@Z:PROC	; icu_56::Normalizer2::composePair
EXTRN	?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z:PROC ; icu_56::Normalizer2::getCombiningClass
;	COMDAT ??_R1A@?0A@EA@Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Normalizer2@icu_56@@8 DD FLAT:??_R0?AVNormalizer2@icu_56@@@8 ; icu_56::Normalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R2Normalizer2@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Normalizer2@icu_56@@8 ; icu_56::Normalizer2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R3Normalizer2@icu_56@@8 DD 00H			; icu_56::Normalizer2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNormalizer2@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNormalizer2@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Normalizer2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNormalizer2@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Normalizer2@icu_56@@6B@
rdata$r	SEGMENT
??_R4Normalizer2@icu_56@@6B@ DD 00H			; icu_56::Normalizer2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNormalizer2@icu_56@@@8
	DD	FLAT:??_R3Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Normalizer2@icu_56@@6B@
CONST	SEGMENT
??_7Normalizer2@icu_56@@6B@ DD FLAT:??_R4Normalizer2@icu_56@@6B@ ; icu_56::Normalizer2::`vftable'
	DD	FLAT:??_ENormalizer2@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?composePair@Normalizer2@icu_56@@UBEHHH@Z
	DD	FLAT:?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Normalizer2@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Normalizer2@icu_56@@QAE@XZ PROC			; icu_56::Normalizer2::Normalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Normalizer2@icu_56@@QAE@XZ ENDP			; icu_56::Normalizer2::Normalizer2
_TEXT	ENDS
PUBLIC	??0Normalizer2@icu_56@@QAE@ABV01@@Z		; icu_56::Normalizer2::Normalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Normalizer2@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Normalizer2@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Normalizer2::Normalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Normalizer2@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Normalizer2::Normalizer2
_TEXT	ENDS
PUBLIC	??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Normalizer2::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Normalizer2::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Normalizer2::operator=
_TEXT	ENDS
PUBLIC	??_GNormalizer2@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2::`scalar deleting destructor'
EXTRN	??1Normalizer2@icu_56@@UAE@XZ:PROC		; icu_56::Normalizer2::~Normalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNormalizer2@icu_56@@UAEPAXI@Z PROC			; icu_56::Normalizer2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2@icu_56@@UAE@XZ		; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNormalizer2@icu_56@@UAEPAXI@Z ENDP			; icu_56::Normalizer2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENormalizer2@icu_56@@UAEPAXI@Z PROC			; icu_56::Normalizer2::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1Normalizer2@icu_56@@UAE@XZ	; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2@icu_56@@UAE@XZ		; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENormalizer2@icu_56@@UAEPAXI@Z ENDP			; icu_56::Normalizer2::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7FilteredNormalizer2@icu_56@@6B@		; icu_56::FilteredNormalizer2::`vftable'
PUBLIC	??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z ; icu_56::FilteredNormalizer2::FilteredNormalizer2
PUBLIC	??_R4FilteredNormalizer2@icu_56@@6B@		; icu_56::FilteredNormalizer2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFilteredNormalizer2@icu_56@@@8		; icu_56::FilteredNormalizer2 `RTTI Type Descriptor'
PUBLIC	??_R3FilteredNormalizer2@icu_56@@8		; icu_56::FilteredNormalizer2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FilteredNormalizer2@icu_56@@8		; icu_56::FilteredNormalizer2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8	; icu_56::FilteredNormalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z	; icu_56::FilteredNormalizer2::`vector deleting destructor'
EXTRN	?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::normalize
EXTRN	?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::normalizeSecondAndAppend
EXTRN	?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::append
EXTRN	?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::FilteredNormalizer2::getDecomposition
EXTRN	?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::FilteredNormalizer2::getRawDecomposition
EXTRN	?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z:PROC ; icu_56::FilteredNormalizer2::composePair
EXTRN	?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z:PROC ; icu_56::FilteredNormalizer2::getCombiningClass
EXTRN	?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::isNormalized
EXTRN	?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::quickCheck
EXTRN	?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::spanQuickCheckYes
EXTRN	?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::hasBoundaryBefore
EXTRN	?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::hasBoundaryAfter
EXTRN	?isInert@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::isInert
;	COMDAT ??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8 DD FLAT:??_R0?AVFilteredNormalizer2@icu_56@@@8 ; icu_56::FilteredNormalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R2FilteredNormalizer2@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8 ; icu_56::FilteredNormalizer2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Normalizer2@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R3FilteredNormalizer2@icu_56@@8 DD 00H		; icu_56::FilteredNormalizer2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFilteredNormalizer2@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFilteredNormalizer2@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FilteredNormalizer2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFilteredNormalizer2@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FilteredNormalizer2@icu_56@@6B@
rdata$r	SEGMENT
??_R4FilteredNormalizer2@icu_56@@6B@ DD 00H		; icu_56::FilteredNormalizer2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFilteredNormalizer2@icu_56@@@8
	DD	FLAT:??_R3FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FilteredNormalizer2@icu_56@@6B@
CONST	SEGMENT
??_7FilteredNormalizer2@icu_56@@6B@ DD FLAT:??_R4FilteredNormalizer2@icu_56@@6B@ ; icu_56::FilteredNormalizer2::`vftable'
	DD	FLAT:??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z
	DD	FLAT:?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z
	DD	FLAT:?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z
	DD	FLAT:?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z
	DD	FLAT:?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z
	DD	FLAT:?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z
	DD	FLAT:?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z
	DD	FLAT:?isInert@FilteredNormalizer2@icu_56@@UBECH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n2$ = 8						; size = 4
_filterSet$ = 12					; size = 4
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z PROC ; icu_56::FilteredNormalizer2::FilteredNormalizer2, COMDAT
; _this$ = ecx
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Normalizer2@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FilteredNormalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n2$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _filterSet$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z ENDP ; icu_56::FilteredNormalizer2::FilteredNormalizer2
_TEXT	ENDS
PUBLIC	??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z	; icu_56::FilteredNormalizer2::FilteredNormalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z PROC	; icu_56::FilteredNormalizer2::FilteredNormalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Normalizer2@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FilteredNormalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::FilteredNormalizer2::FilteredNormalizer2
_TEXT	ENDS
PUBLIC	??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z	; icu_56::FilteredNormalizer2::`scalar deleting destructor'
EXTRN	??1FilteredNormalizer2@icu_56@@UAE@XZ:PROC	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z PROC		; icu_56::FilteredNormalizer2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FilteredNormalizer2@icu_56@@UAE@XZ	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z ENDP		; icu_56::FilteredNormalizer2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z PROC		; icu_56::FilteredNormalizer2::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@10
	push	OFFSET ??1FilteredNormalizer2@icu_56@@UAE@XZ ; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@10
$LN3@vector@10:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FilteredNormalizer2@icu_56@@UAE@XZ	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@10:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z ENDP		; icu_56::FilteredNormalizer2::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9Normalizer@icu_56@@QBECABV01@@Z		; icu_56::Normalizer::operator!=
EXTRN	??8Normalizer@icu_56@@QBECABV01@@Z:PROC		; icu_56::Normalizer::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Normalizer@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Normalizer@icu_56@@QBECABV01@@Z PROC			; icu_56::Normalizer::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\normlzr.h
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Normalizer@icu_56@@QBECABV01@@Z	; icu_56::Normalizer::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Normalizer@icu_56@@QBECABV01@@Z ENDP			; icu_56::Normalizer::operator!=
_TEXT	ENDS
PUBLIC	?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z ; icu_56::Normalizer::quickCheck
EXTRN	?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer::quickCheck
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
_mode$ = 12						; size = 4
_status$ = 16						; size = 4
?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z PROC ; icu_56::Normalizer::quickCheck, COMDAT
; Line 782
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 783
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	call	?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z ; icu_56::Normalizer::quickCheck
	add	esp, 16					; 00000010H
; Line 784
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z ENDP ; icu_56::Normalizer::quickCheck
_TEXT	ENDS
PUBLIC	?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z ; icu_56::Normalizer::isNormalized
EXTRN	?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer::isNormalized
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
_mode$ = 12						; size = 4
_status$ = 16						; size = 4
?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z PROC ; icu_56::Normalizer::isNormalized, COMDAT
; Line 789
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 790
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	call	?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z ; icu_56::Normalizer::isNormalized
	add	esp, 16					; 00000010H
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z ENDP ; icu_56::Normalizer::isNormalized
_TEXT	ENDS
PUBLIC	?compare@Normalizer@icu_56@@SAHABVUnicodeString@2@0IAAW4UErrorCode@@@Z ; icu_56::Normalizer::compare
EXTRN	_unorm_compare_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@Normalizer@icu_56@@SAHABVUnicodeString@2@0IAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
_options$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?compare@Normalizer@icu_56@@SAHABVUnicodeString@2@0IAAW4UErrorCode@@@Z PROC ; icu_56::Normalizer::compare, COMDAT
; Line 797
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 802
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _options$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s2$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _s2$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	call	_unorm_compare_56
	add	esp, 24					; 00000018H
; Line 803
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compare@Normalizer@icu_56@@SAHABVUnicodeString@2@0IAAW4UErrorCode@@@Z ENDP ; icu_56::Normalizer::compare
_TEXT	ENDS
PUBLIC	??4DictionaryData@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DictionaryData::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DictionaryData@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DictionaryData@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::DictionaryData::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DictionaryData@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::DictionaryData::operator=
_TEXT	ENDS
PUBLIC	??_7DictionaryMatcher@icu_56@@6B@		; icu_56::DictionaryMatcher::`vftable'
PUBLIC	??0DictionaryMatcher@icu_56@@QAE@XZ		; icu_56::DictionaryMatcher::DictionaryMatcher
PUBLIC	??_R4DictionaryMatcher@icu_56@@6B@		; icu_56::DictionaryMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDictionaryMatcher@icu_56@@@8		; icu_56::DictionaryMatcher `RTTI Type Descriptor'
PUBLIC	??_R3DictionaryMatcher@icu_56@@8		; icu_56::DictionaryMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DictionaryMatcher@icu_56@@8		; icu_56::DictionaryMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8	; icu_56::DictionaryMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EDictionaryMatcher@icu_56@@UAEPAXI@Z		; icu_56::DictionaryMatcher::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8
; File d:\mozilla\intl\icu\source\common\dictionarydata.h
rdata$r	SEGMENT
??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8 DD FLAT:??_R0?AVDictionaryMatcher@icu_56@@@8 ; icu_56::DictionaryMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2DictionaryMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8 ; icu_56::DictionaryMatcher::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3DictionaryMatcher@icu_56@@8 DD 00H			; icu_56::DictionaryMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDictionaryMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDictionaryMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DictionaryMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDictionaryMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DictionaryMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4DictionaryMatcher@icu_56@@6B@ DD 00H		; icu_56::DictionaryMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDictionaryMatcher@icu_56@@@8
	DD	FLAT:??_R3DictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DictionaryMatcher@icu_56@@6B@
CONST	SEGMENT
??_7DictionaryMatcher@icu_56@@6B@ DD FLAT:??_R4DictionaryMatcher@icu_56@@6B@ ; icu_56::DictionaryMatcher::`vftable'
	DD	FLAT:??_EDictionaryMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DictionaryMatcher@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DictionaryMatcher@icu_56@@QAE@XZ PROC		; icu_56::DictionaryMatcher::DictionaryMatcher, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DictionaryMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DictionaryMatcher@icu_56@@QAE@XZ ENDP		; icu_56::DictionaryMatcher::DictionaryMatcher
_TEXT	ENDS
PUBLIC	??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z	; icu_56::DictionaryMatcher::DictionaryMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z PROC		; icu_56::DictionaryMatcher::DictionaryMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@Dictionary
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@Dictionary
$LN3@Dictionary:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Dictionary:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DictionaryMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::DictionaryMatcher::DictionaryMatcher
_TEXT	ENDS
PUBLIC	??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DictionaryMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::DictionaryMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::DictionaryMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GDictionaryMatcher@icu_56@@UAEPAXI@Z		; icu_56::DictionaryMatcher::`scalar deleting destructor'
EXTRN	??1DictionaryMatcher@icu_56@@UAE@XZ:PROC	; icu_56::DictionaryMatcher::~DictionaryMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDictionaryMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDictionaryMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::DictionaryMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryMatcher@icu_56@@UAE@XZ	; icu_56::DictionaryMatcher::~DictionaryMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDictionaryMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::DictionaryMatcher::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EDictionaryMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDictionaryMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::DictionaryMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@11
	push	OFFSET ??1DictionaryMatcher@icu_56@@UAE@XZ ; icu_56::DictionaryMatcher::~DictionaryMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@11
$LN3@vector@11:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryMatcher@icu_56@@UAE@XZ	; icu_56::DictionaryMatcher::~DictionaryMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@11:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDictionaryMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::DictionaryMatcher::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UCharsDictionaryMatcher@icu_56@@6B@		; icu_56::UCharsDictionaryMatcher::`vftable'
PUBLIC	??0UCharsDictionaryMatcher@icu_56@@QAE@PB_WPAUUDataMemory@@@Z ; icu_56::UCharsDictionaryMatcher::UCharsDictionaryMatcher
PUBLIC	??_R4UCharsDictionaryMatcher@icu_56@@6B@	; icu_56::UCharsDictionaryMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUCharsDictionaryMatcher@icu_56@@@8	; icu_56::UCharsDictionaryMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UCharsDictionaryMatcher@icu_56@@8		; icu_56::UCharsDictionaryMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UCharsDictionaryMatcher@icu_56@@8		; icu_56::UCharsDictionaryMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UCharsDictionaryMatcher@icu_56@@8	; icu_56::UCharsDictionaryMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z	; icu_56::UCharsDictionaryMatcher::`vector deleting destructor'
EXTRN	?matches@UCharsDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z:PROC ; icu_56::UCharsDictionaryMatcher::matches
EXTRN	?getType@UCharsDictionaryMatcher@icu_56@@UBEHXZ:PROC ; icu_56::UCharsDictionaryMatcher::getType
;	COMDAT ??_R1A@?0A@EA@UCharsDictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UCharsDictionaryMatcher@icu_56@@8 DD FLAT:??_R0?AVUCharsDictionaryMatcher@icu_56@@@8 ; icu_56::UCharsDictionaryMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UCharsDictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UCharsDictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UCharsDictionaryMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UCharsDictionaryMatcher@icu_56@@8 ; icu_56::UCharsDictionaryMatcher::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UCharsDictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UCharsDictionaryMatcher@icu_56@@8 DD 00H		; icu_56::UCharsDictionaryMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UCharsDictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUCharsDictionaryMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUCharsDictionaryMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UCharsDictionaryMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUCharsDictionaryMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UCharsDictionaryMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4UCharsDictionaryMatcher@icu_56@@6B@ DD 00H		; icu_56::UCharsDictionaryMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUCharsDictionaryMatcher@icu_56@@@8
	DD	FLAT:??_R3UCharsDictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UCharsDictionaryMatcher@icu_56@@6B@
CONST	SEGMENT
??_7UCharsDictionaryMatcher@icu_56@@6B@ DD FLAT:??_R4UCharsDictionaryMatcher@icu_56@@6B@ ; icu_56::UCharsDictionaryMatcher::`vftable'
	DD	FLAT:??_EUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:?matches@UCharsDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z
	DD	FLAT:?getType@UCharsDictionaryMatcher@icu_56@@UBEHXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UCharsDictionaryMatcher@icu_56@@QAE@PB_WPAUUDataMemory@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_f$ = 12						; size = 4
??0UCharsDictionaryMatcher@icu_56@@QAE@PB_WPAUUDataMemory@@@Z PROC ; icu_56::UCharsDictionaryMatcher::UCharsDictionaryMatcher, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryMatcher@icu_56@@QAE@XZ	; icu_56::DictionaryMatcher::DictionaryMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UCharsDictionaryMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0UCharsDictionaryMatcher@icu_56@@QAE@PB_WPAUUDataMemory@@@Z ENDP ; icu_56::UCharsDictionaryMatcher::UCharsDictionaryMatcher
_TEXT	ENDS
PUBLIC	??0UCharsDictionaryMatcher@icu_56@@QAE@ABV01@@Z	; icu_56::UCharsDictionaryMatcher::UCharsDictionaryMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UCharsDictionaryMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UCharsDictionaryMatcher@icu_56@@QAE@ABV01@@Z PROC	; icu_56::UCharsDictionaryMatcher::UCharsDictionaryMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UCharsDictionaryMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UCharsDictionaryMatcher@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::UCharsDictionaryMatcher::UCharsDictionaryMatcher
_TEXT	ENDS
PUBLIC	??4UCharsDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UCharsDictionaryMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UCharsDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UCharsDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::UCharsDictionaryMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UCharsDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::UCharsDictionaryMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z	; icu_56::UCharsDictionaryMatcher::`scalar deleting destructor'
EXTRN	??1UCharsDictionaryMatcher@icu_56@@UAE@XZ:PROC	; icu_56::UCharsDictionaryMatcher::~UCharsDictionaryMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z PROC	; icu_56::UCharsDictionaryMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UCharsDictionaryMatcher@icu_56@@UAE@XZ ; icu_56::UCharsDictionaryMatcher::~UCharsDictionaryMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z ENDP	; icu_56::UCharsDictionaryMatcher::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z PROC	; icu_56::UCharsDictionaryMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@12
	push	OFFSET ??1UCharsDictionaryMatcher@icu_56@@UAE@XZ ; icu_56::UCharsDictionaryMatcher::~UCharsDictionaryMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@12
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@12:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@12
$LN3@vector@12:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UCharsDictionaryMatcher@icu_56@@UAE@XZ ; icu_56::UCharsDictionaryMatcher::~UCharsDictionaryMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@12
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@12:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@12:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z ENDP	; icu_56::UCharsDictionaryMatcher::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7BytesDictionaryMatcher@icu_56@@6B@		; icu_56::BytesDictionaryMatcher::`vftable'
PUBLIC	??0BytesDictionaryMatcher@icu_56@@QAE@PBDHPAUUDataMemory@@@Z ; icu_56::BytesDictionaryMatcher::BytesDictionaryMatcher
PUBLIC	??_R4BytesDictionaryMatcher@icu_56@@6B@		; icu_56::BytesDictionaryMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBytesDictionaryMatcher@icu_56@@@8	; icu_56::BytesDictionaryMatcher `RTTI Type Descriptor'
PUBLIC	??_R3BytesDictionaryMatcher@icu_56@@8		; icu_56::BytesDictionaryMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BytesDictionaryMatcher@icu_56@@8		; icu_56::BytesDictionaryMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BytesDictionaryMatcher@icu_56@@8	; icu_56::BytesDictionaryMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EBytesDictionaryMatcher@icu_56@@UAEPAXI@Z	; icu_56::BytesDictionaryMatcher::`vector deleting destructor'
EXTRN	?matches@BytesDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z:PROC ; icu_56::BytesDictionaryMatcher::matches
EXTRN	?getType@BytesDictionaryMatcher@icu_56@@UBEHXZ:PROC ; icu_56::BytesDictionaryMatcher::getType
;	COMDAT ??_R1A@?0A@EA@BytesDictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BytesDictionaryMatcher@icu_56@@8 DD FLAT:??_R0?AVBytesDictionaryMatcher@icu_56@@@8 ; icu_56::BytesDictionaryMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BytesDictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BytesDictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2BytesDictionaryMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BytesDictionaryMatcher@icu_56@@8 ; icu_56::BytesDictionaryMatcher::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BytesDictionaryMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3BytesDictionaryMatcher@icu_56@@8 DD 00H		; icu_56::BytesDictionaryMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2BytesDictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBytesDictionaryMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBytesDictionaryMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BytesDictionaryMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBytesDictionaryMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4BytesDictionaryMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4BytesDictionaryMatcher@icu_56@@6B@ DD 00H		; icu_56::BytesDictionaryMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBytesDictionaryMatcher@icu_56@@@8
	DD	FLAT:??_R3BytesDictionaryMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7BytesDictionaryMatcher@icu_56@@6B@
CONST	SEGMENT
??_7BytesDictionaryMatcher@icu_56@@6B@ DD FLAT:??_R4BytesDictionaryMatcher@icu_56@@6B@ ; icu_56::BytesDictionaryMatcher::`vftable'
	DD	FLAT:??_EBytesDictionaryMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:?matches@BytesDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z
	DD	FLAT:?getType@BytesDictionaryMatcher@icu_56@@UBEHXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0BytesDictionaryMatcher@icu_56@@QAE@PBDHPAUUDataMemory@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_t$ = 12						; size = 4
_f$ = 16						; size = 4
??0BytesDictionaryMatcher@icu_56@@QAE@PBDHPAUUDataMemory@@@Z PROC ; icu_56::BytesDictionaryMatcher::BytesDictionaryMatcher, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryMatcher@icu_56@@QAE@XZ	; icu_56::DictionaryMatcher::DictionaryMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BytesDictionaryMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0BytesDictionaryMatcher@icu_56@@QAE@PBDHPAUUDataMemory@@@Z ENDP ; icu_56::BytesDictionaryMatcher::BytesDictionaryMatcher
_TEXT	ENDS
PUBLIC	??0BytesDictionaryMatcher@icu_56@@QAE@ABV01@@Z	; icu_56::BytesDictionaryMatcher::BytesDictionaryMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0BytesDictionaryMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0BytesDictionaryMatcher@icu_56@@QAE@ABV01@@Z PROC	; icu_56::BytesDictionaryMatcher::BytesDictionaryMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BytesDictionaryMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0BytesDictionaryMatcher@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::BytesDictionaryMatcher::BytesDictionaryMatcher
_TEXT	ENDS
PUBLIC	??4BytesDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::BytesDictionaryMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4BytesDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4BytesDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::BytesDictionaryMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4BytesDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::BytesDictionaryMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GBytesDictionaryMatcher@icu_56@@UAEPAXI@Z	; icu_56::BytesDictionaryMatcher::`scalar deleting destructor'
EXTRN	??1BytesDictionaryMatcher@icu_56@@UAE@XZ:PROC	; icu_56::BytesDictionaryMatcher::~BytesDictionaryMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBytesDictionaryMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GBytesDictionaryMatcher@icu_56@@UAEPAXI@Z PROC	; icu_56::BytesDictionaryMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BytesDictionaryMatcher@icu_56@@UAE@XZ ; icu_56::BytesDictionaryMatcher::~BytesDictionaryMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@13
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@13:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBytesDictionaryMatcher@icu_56@@UAEPAXI@Z ENDP	; icu_56::BytesDictionaryMatcher::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EBytesDictionaryMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EBytesDictionaryMatcher@icu_56@@UAEPAXI@Z PROC	; icu_56::BytesDictionaryMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@13
	push	OFFSET ??1BytesDictionaryMatcher@icu_56@@UAE@XZ ; icu_56::BytesDictionaryMatcher::~BytesDictionaryMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@13
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@13:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@13
$LN3@vector@13:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BytesDictionaryMatcher@icu_56@@UAE@XZ ; icu_56::BytesDictionaryMatcher::~BytesDictionaryMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@13
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@13:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@13:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EBytesDictionaryMatcher@icu_56@@UAEPAXI@Z ENDP	; icu_56::BytesDictionaryMatcher::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7DictionaryBreakEngine@icu_56@@6B@		; icu_56::DictionaryBreakEngine::`vftable'
PUBLIC	??0DictionaryBreakEngine@icu_56@@QAE@I@Z	; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
PUBLIC	??_R4DictionaryBreakEngine@icu_56@@6B@		; icu_56::DictionaryBreakEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDictionaryBreakEngine@icu_56@@@8	; icu_56::DictionaryBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3DictionaryBreakEngine@icu_56@@8		; icu_56::DictionaryBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DictionaryBreakEngine@icu_56@@8		; icu_56::DictionaryBreakEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8	; icu_56::DictionaryBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8	; icu_56::LanguageBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVLanguageBreakEngine@icu_56@@@8		; icu_56::LanguageBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3LanguageBreakEngine@icu_56@@8		; icu_56::LanguageBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LanguageBreakEngine@icu_56@@8		; icu_56::LanguageBreakEngine::`RTTI Base Class Array'
PUBLIC	?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z	; icu_56::DictionaryBreakEngine::handles
PUBLIC	?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z ; icu_56::DictionaryBreakEngine::findBreaks
PUBLIC	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
EXTRN	??1LanguageBreakEngine@icu_56@@UAE@XZ:PROC	; icu_56::LanguageBreakEngine::~LanguageBreakEngine
EXTRN	??0UnicodeSet@icu_56@@QAE@XZ:PROC		; icu_56::UnicodeSet::UnicodeSet
EXTRN	??0LanguageBreakEngine@icu_56@@QAE@XZ:PROC	; icu_56::LanguageBreakEngine::LanguageBreakEngine
EXTRN	??_EDictionaryBreakEngine@icu_56@@UAEPAXI@Z:PROC ; icu_56::DictionaryBreakEngine::`vector deleting destructor'
;	COMDAT ??_R2LanguageBreakEngine@icu_56@@8
; File d:\mozilla\intl\icu\source\common\dictbe.cpp
rdata$r	SEGMENT
??_R2LanguageBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8 ; icu_56::LanguageBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3LanguageBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3LanguageBreakEngine@icu_56@@8 DD 00H		; icu_56::LanguageBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2LanguageBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLanguageBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVLanguageBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::LanguageBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLanguageBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8 DD FLAT:??_R0?AVLanguageBreakEngine@icu_56@@@8 ; icu_56::LanguageBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LanguageBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8 DD FLAT:??_R0?AVDictionaryBreakEngine@icu_56@@@8 ; icu_56::DictionaryBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DictionaryBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DictionaryBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R2DictionaryBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8 ; icu_56::DictionaryBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DictionaryBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3DictionaryBreakEngine@icu_56@@8 DD 00H		; icu_56::DictionaryBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DictionaryBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDictionaryBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDictionaryBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DictionaryBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDictionaryBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DictionaryBreakEngine@icu_56@@6B@
rdata$r	SEGMENT
??_R4DictionaryBreakEngine@icu_56@@6B@ DD 00H		; icu_56::DictionaryBreakEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDictionaryBreakEngine@icu_56@@@8
	DD	FLAT:??_R3DictionaryBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DictionaryBreakEngine@icu_56@@6B@
CONST	SEGMENT
??_7DictionaryBreakEngine@icu_56@@6B@ DD FLAT:??_R4DictionaryBreakEngine@icu_56@@6B@ ; icu_56::DictionaryBreakEngine::`vftable'
	DD	FLAT:??_EDictionaryBreakEngine@icu_56@@UAEPAXI@Z
	DD	FLAT:?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
	DD	FLAT:?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
	DD	FLAT:?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DictionaryBreakEngine@icu_56@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DictionaryBreakEngine@icu_56@@QAE@I@Z$0
__ehfuncinfo$??0DictionaryBreakEngine@icu_56@@QAE@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DictionaryBreakEngine@icu_56@@QAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DictionaryBreakEngine@icu_56@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_breakTypes$ = 8					; size = 4
??0DictionaryBreakEngine@icu_56@@QAE@I@Z PROC		; icu_56::DictionaryBreakEngine::DictionaryBreakEngine, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DictionaryBreakEngine@icu_56@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0LanguageBreakEngine@icu_56@@QAE@XZ	; icu_56::LanguageBreakEngine::LanguageBreakEngine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DictionaryBreakEngine@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _breakTypes$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 32
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DictionaryBreakEngine@icu_56@@QAE@I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1LanguageBreakEngine@icu_56@@UAE@XZ	; icu_56::LanguageBreakEngine::~LanguageBreakEngine
__ehhandler$??0DictionaryBreakEngine@icu_56@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DictionaryBreakEngine@icu_56@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DictionaryBreakEngine@icu_56@@QAE@I@Z ENDP		; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
PUBLIC	??1DictionaryBreakEngine@icu_56@@UAE@XZ		; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDictionaryBreakEngine@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDictionaryBreakEngine@icu_56@@UAEPAXI@Z PROC	; icu_56::DictionaryBreakEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@14
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@14:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDictionaryBreakEngine@icu_56@@UAEPAXI@Z ENDP	; icu_56::DictionaryBreakEngine::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1UnicodeSet@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeSet::~UnicodeSet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DictionaryBreakEngine@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DictionaryBreakEngine@icu_56@@UAE@XZ$0
__ehfuncinfo$??1DictionaryBreakEngine@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DictionaryBreakEngine@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DictionaryBreakEngine@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DictionaryBreakEngine@icu_56@@UAE@XZ PROC		; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DictionaryBreakEngine@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DictionaryBreakEngine@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LanguageBreakEngine@icu_56@@UAE@XZ	; icu_56::LanguageBreakEngine::~LanguageBreakEngine
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DictionaryBreakEngine@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1LanguageBreakEngine@icu_56@@UAE@XZ	; icu_56::LanguageBreakEngine::~LanguageBreakEngine
__ehhandler$??1DictionaryBreakEngine@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DictionaryBreakEngine@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DictionaryBreakEngine@icu_56@@UAE@XZ ENDP		; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
_TEXT	SEGMENT
tv83 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_breakType$ = 12					; size = 4
?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z PROC	; icu_56::DictionaryBreakEngine::handles, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	cmp	DWORD PTR _breakType$[ebp], 0
	jl	SHORT $LN3@handles
	cmp	DWORD PTR _breakType$[ebp], 32		; 00000020H
	jge	SHORT $LN3@handles
	mov	eax, 1
	mov	ecx, DWORD PTR _breakType$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+56]
	je	SHORT $LN3@handles
	mov	esi, esp
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@handles
	mov	BYTE PTR tv83[ebp], 1
	jmp	SHORT $LN4@handles
$LN3@handles:
	mov	BYTE PTR tv83[ebp], 0
$LN4@handles:
	mov	al, BYTE PTR tv83[ebp]
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z ENDP	; icu_56::DictionaryBreakEngine::handles
_TEXT	ENDS
EXTRN	_utext_setNativeIndex_56:PROC
EXTRN	_utext_next32_56:PROC
EXTRN	_utext_previous32_56:PROC
EXTRN	_utext_current32_56:PROC
EXTRN	_utext_getNativeIndex_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
_TEXT	SEGMENT
_isDict$39339 = -89					; size = 1
_c$ = -80						; size = 4
_rangeEnd$ = -68					; size = 4
_rangeStart$ = -56					; size = 4
_current$ = -44						; size = 4
_start$ = -32						; size = 4
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_startPos$ = 12						; size = 4
_endPos$ = 16						; size = 4
_reverse$ = 20						; size = 1
_breakType$ = 24					; size = 4
_foundBreaks$ = 28					; size = 4
?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z PROC ; icu_56::DictionaryBreakEngine::findBreaks, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	DWORD PTR _result$[ebp], 0
; Line 56
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _start$[ebp], eax
; Line 60
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 61
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	$LN3@findBreaks
; Line 62
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _isDict$39339[ebp], al
$LN9@findBreaks:
; Line 63
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _current$[ebp], eax
	mov	ecx, DWORD PTR _current$[ebp]
	cmp	ecx, DWORD PTR _startPos$[ebp]
	jle	SHORT $LN8@findBreaks
	movsx	eax, BYTE PTR _isDict$39339[ebp]
	test	eax, eax
	je	SHORT $LN8@findBreaks
; Line 64
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 65
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _isDict$39339[ebp], al
; Line 66
	jmp	SHORT $LN9@findBreaks
$LN8@findBreaks:
; Line 67
	mov	eax, DWORD PTR _current$[ebp]
	cmp	eax, DWORD PTR _startPos$[ebp]
	jge	SHORT $LN7@findBreaks
; Line 68
	mov	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _rangeStart$[ebp], eax
; Line 69
	jmp	SHORT $LN6@findBreaks
$LN7@findBreaks:
; Line 70
	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _rangeStart$[ebp], eax
; Line 71
	movsx	eax, BYTE PTR _isDict$39339[ebp]
	test	eax, eax
	jne	SHORT $LN6@findBreaks
; Line 72
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 73
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _rangeStart$[ebp], eax
$LN6@findBreaks:
; Line 77
	mov	eax, DWORD PTR _start$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 78
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 79
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _rangeEnd$[ebp], eax
; Line 81
	jmp	SHORT $LN4@findBreaks
$LN3@findBreaks:
; Line 82
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _current$[ebp], eax
	mov	ecx, DWORD PTR _current$[ebp]
	cmp	ecx, DWORD PTR _endPos$[ebp]
	jge	SHORT $LN2@findBreaks
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@findBreaks
; Line 83
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 84
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 85
	jmp	SHORT $LN3@findBreaks
$LN2@findBreaks:
; Line 86
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _rangeStart$[ebp], eax
; Line 87
	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _rangeEnd$[ebp], eax
$LN4@findBreaks:
; Line 89
	cmp	DWORD PTR _breakType$[ebp], 0
	jl	SHORT $LN1@findBreaks
	cmp	DWORD PTR _breakType$[ebp], 32		; 00000020H
	jge	SHORT $LN1@findBreaks
	mov	eax, 1
	mov	ecx, DWORD PTR _breakType$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+56]
	je	SHORT $LN1@findBreaks
; Line 90
	mov	esi, esp
	mov	eax, DWORD PTR _foundBreaks$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rangeStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 91
	mov	eax, DWORD PTR _current$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN1@findBreaks:
; Line 94
	mov	eax, DWORD PTR _result$[ebp]
; Line 95
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z ENDP ; icu_56::DictionaryBreakEngine::findBreaks
_TEXT	ENDS
EXTRN	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeSet::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_set$ = 8						; size = 4
?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z PROC ; icu_56::DictionaryBreakEngine::setCharacters, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ENDP ; icu_56::DictionaryBreakEngine::setCharacters
_TEXT	ENDS
PUBLIC	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z
_TEXT	SEGMENT
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_dict$ = 12						; size = 4
_rangeEnd$ = 16						; size = 4
?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z PROC ; icu_56::PossibleWord::candidates, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 156
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _start$[ebp], eax
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN3@candidates
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	20					; 00000014H
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dict$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _dict$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN3@candidates
; Line 162
	mov	eax, DWORD PTR _start$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN3@candidates:
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@candidates
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+16]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN1@candidates:
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+12], edx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 171
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ENDP ; icu_56::PossibleWord::candidates
_TEXT	ENDS
PUBLIC	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z PROC ; icu_56::PossibleWord::acceptMarked, COMDAT
; _this$ = ecx
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+20]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+20]
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ENDP ; icu_56::PossibleWord::acceptMarked
_TEXT	ENDS
PUBLIC	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z	; icu_56::PossibleWord::backUp
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z PROC	; icu_56::PossibleWord::backUp, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	SHORT $LN1@backUp
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR tv70[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+edx*4+20]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 184
	mov	al, 1
	jmp	SHORT $LN2@backUp
$LN1@backUp:
; Line 186
	xor	al, al
$LN2@backUp:
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ENDP	; icu_56::PossibleWord::backUp
_TEXT	ENDS
PUBLIC	??_C@_1EE@GGKKCAAG@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ ; `string'
PUBLIC	??_C@_1DI@ELKHNJKF@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_7ThaiBreakEngine@icu_56@@6B@			; icu_56::ThaiBreakEngine::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ; icu_56::ThaiBreakEngine::ThaiBreakEngine
PUBLIC	??_R4ThaiBreakEngine@icu_56@@6B@		; icu_56::ThaiBreakEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVThaiBreakEngine@icu_56@@@8		; icu_56::ThaiBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3ThaiBreakEngine@icu_56@@8			; icu_56::ThaiBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ThaiBreakEngine@icu_56@@8			; icu_56::ThaiBreakEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ThaiBreakEngine@icu_56@@8		; icu_56::ThaiBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ; icu_56::ThaiBreakEngine::divideUpDictionaryRange
EXTRN	?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::UnicodeSet::applyPattern
EXTRN	??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	??_EThaiBreakEngine@icu_56@@UAEPAXI@Z:PROC	; icu_56::ThaiBreakEngine::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ThaiBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ThaiBreakEngine@icu_56@@8 DD FLAT:??_R0?AVThaiBreakEngine@icu_56@@@8 ; icu_56::ThaiBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ThaiBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ThaiBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R2ThaiBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ThaiBreakEngine@icu_56@@8 ; icu_56::ThaiBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ThaiBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3ThaiBreakEngine@icu_56@@8 DD 00H			; icu_56::ThaiBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ThaiBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVThaiBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVThaiBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ThaiBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVThaiBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ThaiBreakEngine@icu_56@@6B@
rdata$r	SEGMENT
??_R4ThaiBreakEngine@icu_56@@6B@ DD 00H			; icu_56::ThaiBreakEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVThaiBreakEngine@icu_56@@@8
	DD	FLAT:??_R3ThaiBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EE@GGKKCAAG@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
CONST	SEGMENT
??_C@_1EE@GGKKCAAG@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'T', 00H, 'h', 00H, 'a', 00H, 'i', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, '&'
	DB	00H, '[', 00H, ':', 00H, 'M', 00H, ':', 00H, ']', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@ELKHNJKF@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@ELKHNJKF@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'T', 00H, 'h', 00H, 'a', 00H, 'i', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7ThaiBreakEngine@icu_56@@6B@
CONST	SEGMENT
??_7ThaiBreakEngine@icu_56@@6B@ DD FLAT:??_R4ThaiBreakEngine@icu_56@@6B@ ; icu_56::ThaiBreakEngine::`vftable'
	DD	FLAT:??_EThaiBreakEngine@icu_56@@UAEPAXI@Z
	DD	FLAT:?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
	DD	FLAT:?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
	DD	FLAT:?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
	DD	FLAT:?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv243 = -372						; size = 4
tv241 = -372						; size = 4
tv244 = -368						; size = 4
tv69 = -368						; size = 4
$T39432 = -360						; size = 64
$T39436 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_adoptDictionary$ = 8					; size = 4
_status$ = 12						; size = 4
??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z PROC ; icu_56::ThaiBreakEngine::ThaiBreakEngine, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryBreakEngine@icu_56@@QAE@I@Z ; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ThaiBreakEngine@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptDictionary$[ebp]
	mov	DWORD PTR [eax+320], ecx
; Line 220
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1DI@ELKHNJKF@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39432[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv241[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv241[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T39432[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 221
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ThaiBreakE
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
$LN1@ThaiBreakE:
; Line 224
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1EE@GGKKCAAG@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
	push	1
	lea	ecx, DWORD PTR $T39436[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv244[ebp], eax
	mov	ecx, DWORD PTR tv244[ebp]
	mov	DWORD PTR tv243[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv243[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T39436[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 225
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 227
	push	3633					; 00000e31H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::remove
; Line 228
	mov	esi, esp
	push	3652					; 00000e44H
	push	3648					; 00000e40H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 229
	mov	esi, esp
	push	3630					; 00000e2eH
	push	3585					; 00000e01H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 230
	mov	esi, esp
	push	3652					; 00000e44H
	push	3648					; 00000e40H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 231
	push	3631					; 00000e2fH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 232
	push	3654					; 00000e46H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 235
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+268]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 237
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+216]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 239
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6:
	lea	ecx, DWORD PTR $T39432[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$7:
	lea	ecx, DWORD PTR $T39436[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ENDP ; icu_56::ThaiBreakEngine::ThaiBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??1ThaiBreakEngine@icu_56@@UAE@XZ		; icu_56::ThaiBreakEngine::~ThaiBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GThaiBreakEngine@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GThaiBreakEngine@icu_56@@UAEPAXI@Z PROC		; icu_56::ThaiBreakEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ThaiBreakEngine@icu_56@@UAE@XZ	; icu_56::ThaiBreakEngine::~ThaiBreakEngine
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@15
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@15:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GThaiBreakEngine@icu_56@@UAEPAXI@Z ENDP		; icu_56::ThaiBreakEngine::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\dictbe.cpp
xdata$x	SEGMENT
__ehfuncinfo$??1ThaiBreakEngine@icu_56@@UAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1ThaiBreakEngine@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1ThaiBreakEngine@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1ThaiBreakEngine@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv91 = -244						; size = 4
$T47877 = -236						; size = 4
$T47878 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ThaiBreakEngine@icu_56@@UAE@XZ PROC			; icu_56::ThaiBreakEngine::~ThaiBreakEngine, COMDAT
; _this$ = ecx
; Line 241
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ThaiBreakEngine@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ThaiBreakEngine@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 5
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR $T47878[ebp], ecx
	mov	edx, DWORD PTR $T47878[ebp]
	mov	DWORD PTR $T47877[ebp], edx
	cmp	DWORD PTR $T47877[ebp], 0
	je	SHORT $LN3@ThaiBreakE@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47877[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47877[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN1@ThaiBreakE@2
$LN3@ThaiBreakE@2:
	mov	DWORD PTR tv91[ebp], 0
$LN1@ThaiBreakE@2:
; Line 243
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$??1ThaiBreakEngine@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ThaiBreakEngine@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ThaiBreakEngine@icu_56@@UAE@XZ ENDP			; icu_56::ThaiBreakEngine::~ThaiBreakEngine
PUBLIC	?longestPrefix@PossibleWord@icu_56@@QAEHXZ	; icu_56::PossibleWord::longestPrefix
PUBLIC	?markCurrent@PossibleWord@icu_56@@QAEXXZ	; icu_56::PossibleWord::markCurrent
PUBLIC	?markedCPLength@PossibleWord@icu_56@@QAEHXZ	; icu_56::PossibleWord::markedCPLength
PUBLIC	??0PossibleWord@icu_56@@QAE@XZ			; icu_56::PossibleWord::PossibleWord
PUBLIC	??1PossibleWord@icu_56@@QAE@XZ			; icu_56::PossibleWord::~PossibleWord
PUBLIC	__$ArrayPad$
EXTRN	?popi@UStack@icu_56@@QAEHXZ:PROC		; icu_56::UStack::popi
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	_utext_moveIndex32_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3
__ehfuncinfo$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
_TEXT	SEGMENT
tv463 = -1000						; size = 8
tv460 = -992						; size = 8
$T47896 = -980						; size = 4
_maiyamokIndex$39524 = -776				; size = 4
_paiyannoiIndex$39520 = -764				; size = 4
_currPos$39509 = -752					; size = 4
_candidates$39505 = -740				; size = 4
_pcSize$39502 = -728					; size = 4
_pcIndex$39501 = -716					; size = 4
_chars$39497 = -704					; size = 4
_pc$39496 = -692					; size = 4
_remaining$39495 = -680					; size = 4
_uc$39490 = -668					; size = 4
_wordsMatched$39479 = -656				; size = 4
_candidates$39468 = -644				; size = 4
_words$ = -632						; size = 540
_status$ = -84						; size = 4
_current$ = -72						; size = 4
_cuWordLength$ = -60					; size = 4
_cpWordLength$ = -48					; size = 4
_wordsFound$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_rangeStart$ = 12					; size = 4
_rangeEnd$ = 16						; size = 4
_foundBreaks$ = 20					; size = 4
?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z PROC ; icu_56::ThaiBreakEngine::divideUpDictionaryRange, COMDAT
; _this$ = ecx
; Line 249
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 988				; 000003dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1000]
	mov	ecx, 247				; 000000f7H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 250
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 251
	push	4
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_moveIndex32_56
	add	esp, 8
; Line 252
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	cdq
	mov	DWORD PTR tv460[ebp], ecx
	mov	DWORD PTR tv460[ebp+4], esi
	mov	DWORD PTR tv463[ebp], eax
	mov	DWORD PTR tv463[ebp+4], edx
	mov	edx, DWORD PTR tv460[ebp+4]
	cmp	edx, DWORD PTR tv463[ebp+4]
	jl	SHORT $LN43@divideUpDi
	jg	SHORT $LN47@divideUpDi
	mov	eax, DWORD PTR tv460[ebp]
	cmp	eax, DWORD PTR tv463[ebp]
	jb	SHORT $LN43@divideUpDi
$LN47@divideUpDi:
; Line 253
	xor	eax, eax
	jmp	$LN44@divideUpDi
$LN43@divideUpDi:
; Line 255
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 258
	mov	DWORD PTR _wordsFound$[ebp], 0
; Line 259
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 260
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 262
	mov	DWORD PTR _status$[ebp], 0
; Line 263
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	OFFSET ??0PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN42@divideUpDi:
; Line 267
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN41@divideUpDi
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _current$[ebp], eax
	mov	ecx, DWORD PTR _current$[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	$LN41@divideUpDi
; Line 268
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 269
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 272
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39468[ebp], eax
; Line 275
	cmp	DWORD PTR _candidates$39468[ebp], 1
	jne	SHORT $LN40@divideUpDi
; Line 276
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 277
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 278
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
	jmp	$LN39@divideUpDi
$LN40@divideUpDi:
; Line 281
	cmp	DWORD PTR _candidates$39468[ebp], 1
	jle	$LN39@divideUpDi
; Line 283
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN35@divideUpDi
; Line 284
	jmp	$foundBest$39474
$LN35@divideUpDi:
; Line 287
	mov	DWORD PTR _wordsMatched$39479[ebp], 1
; Line 288
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jle	$LN34@divideUpDi
; Line 289
	cmp	DWORD PTR _wordsMatched$39479[ebp], 2
	jge	SHORT $LN31@divideUpDi
; Line 291
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 292
	mov	DWORD PTR _wordsMatched$39479[ebp], 2
$LN31@divideUpDi:
; Line 296
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN28@divideUpDi
; Line 297
	jmp	$foundBest$39474
$LN28@divideUpDi:
; Line 303
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 2
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	je	SHORT $LN27@divideUpDi
; Line 304
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 305
	jmp	SHORT $foundBest$39474
$LN27@divideUpDi:
; Line 308
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN28@divideUpDi
$LN34@divideUpDi:
; Line 311
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN35@divideUpDi
$foundBest$39474:
; Line 314
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 315
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 316
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN39@divideUpDi:
; Line 325
	mov	DWORD PTR _uc$39490[ebp], 0
; Line 326
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jge	$LN13@divideUpDi
	cmp	DWORD PTR _cpWordLength$[ebp], 3
	jge	$LN13@divideUpDi
; Line 332
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jg	$LN22@divideUpDi
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	je	SHORT $LN21@divideUpDi
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?longestPrefix@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::longestPrefix
	cmp	eax, 3
	jge	$LN22@divideUpDi
$LN21@divideUpDi:
; Line 334
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _remaining$39495[ebp], ecx
; Line 336
	mov	DWORD PTR _chars$39497[ebp], 0
$LN20@divideUpDi:
; Line 338
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _pcIndex$39501[ebp], eax
; Line 339
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR _pc$39496[ebp], eax
; Line 340
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _pcIndex$39501[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	mov	DWORD PTR _pcSize$39502[ebp], ecx
; Line 341
	mov	eax, DWORD PTR _chars$39497[ebp]
	add	eax, DWORD PTR _pcSize$39502[ebp]
	mov	DWORD PTR _chars$39497[ebp], eax
; Line 342
	mov	eax, DWORD PTR _remaining$39495[ebp]
	sub	eax, DWORD PTR _pcSize$39502[ebp]
	mov	DWORD PTR _remaining$39495[ebp], eax
; Line 343
	cmp	DWORD PTR _remaining$39495[ebp], 0
	jg	SHORT $LN18@divideUpDi
; Line 344
	jmp	$LN19@divideUpDi
$LN18@divideUpDi:
; Line 346
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _uc$39490[ebp], eax
; Line 347
	mov	esi, esp
	mov	eax, DWORD PTR _pc$39496[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN17@divideUpDi
	mov	esi, esp
	mov	eax, DWORD PTR _uc$39490[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN17@divideUpDi
; Line 353
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39505[ebp], eax
; Line 354
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39497[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 355
	cmp	DWORD PTR _candidates$39505[ebp], 0
	jle	SHORT $LN17@divideUpDi
; Line 356
	jmp	SHORT $LN19@divideUpDi
$LN17@divideUpDi:
; Line 359
	jmp	$LN20@divideUpDi
$LN19@divideUpDi:
; Line 362
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jg	SHORT $LN15@divideUpDi
; Line 363
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN15@divideUpDi:
; Line 367
	mov	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39497[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 369
	jmp	SHORT $LN13@divideUpDi
$LN22@divideUpDi:
; Line 371
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN13@divideUpDi:
; Line 377
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _currPos$39509[ebp], eax
	mov	ecx, DWORD PTR _currPos$39509[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	SHORT $LN12@divideUpDi
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+268]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@divideUpDi
; Line 378
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 379
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	sub	eax, DWORD PTR _currPos$39509[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 380
	jmp	SHORT $LN13@divideUpDi
$LN12@divideUpDi:
; Line 386
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jge	$LN11@divideUpDi
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jle	$LN11@divideUpDi
; Line 388
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jg	$LN10@divideUpDi
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _uc$39490[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _uc$39490[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN10@divideUpDi
; Line 389
	cmp	DWORD PTR _uc$39490[ebp], 3631		; 00000e2fH
	jne	$LN9@divideUpDi
; Line 390
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_previous32_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN8@divideUpDi
; Line 392
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 393
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _paiyannoiIndex$39520[ebp], eax
; Line 394
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 395
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _paiyannoiIndex$39520[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	mov	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	add	eax, ecx
	adc	edx, esi
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 396
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _uc$39490[ebp], eax
; Line 398
	jmp	SHORT $LN9@divideUpDi
$LN8@divideUpDi:
; Line 400
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
$LN9@divideUpDi:
; Line 403
	cmp	DWORD PTR _uc$39490[ebp], 3654		; 00000e46H
	jne	SHORT $LN6@divideUpDi
; Line 404
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_previous32_56
	add	esp, 4
	cmp	eax, 3654				; 00000e46H
	je	SHORT $LN5@divideUpDi
; Line 406
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 407
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _maiyamokIndex$39524[ebp], eax
; Line 408
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 409
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _maiyamokIndex$39524[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	mov	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	add	eax, ecx
	adc	edx, esi
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 411
	jmp	SHORT $LN6@divideUpDi
$LN5@divideUpDi:
; Line 413
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
$LN6@divideUpDi:
; Line 417
	jmp	SHORT $LN11@divideUpDi
$LN10@divideUpDi:
; Line 418
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN11@divideUpDi:
; Line 423
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jle	SHORT $LN2@divideUpDi
; Line 424
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	add	ecx, DWORD PTR _cuWordLength$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ; icu_56::UStack::push
$LN2@divideUpDi:
; Line 426
	jmp	$LN42@divideUpDi
$LN41@divideUpDi:
; Line 429
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN1@divideUpDi
; Line 430
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?popi@UStack@icu_56@@QAEHXZ		; icu_56::UStack::popi
; Line 431
	mov	eax, DWORD PTR _wordsFound$[ebp]
	sub	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN1@divideUpDi:
; Line 434
	mov	eax, DWORD PTR _wordsFound$[ebp]
	mov	DWORD PTR $T47896[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR $T47896[ebp]
$LN44@divideUpDi:
; Line 435
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN52@divideUpDi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1000				; 000003e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN52@divideUpDi:
	DD	2
	DD	$LN51@divideUpDi
$LN51@divideUpDi:
	DD	-84					; ffffffacH
	DD	4
	DD	$LN48@divideUpDi
	DD	-632					; fffffd88H
	DD	540					; 0000021cH
	DD	$LN49@divideUpDi
$LN49@divideUpDi:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN48@divideUpDi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3:
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1004]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ENDP ; icu_56::ThaiBreakEngine::divideUpDictionaryRange
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PossibleWord@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PossibleWord@icu_56@@QAE@XZ PROC			; icu_56::PossibleWord::PossibleWord, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PossibleWord@icu_56@@QAE@XZ ENDP			; icu_56::PossibleWord::PossibleWord
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1PossibleWord@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PossibleWord@icu_56@@QAE@XZ PROC			; icu_56::PossibleWord::~PossibleWord, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PossibleWord@icu_56@@QAE@XZ ENDP			; icu_56::PossibleWord::~PossibleWord
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?longestPrefix@PossibleWord@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?longestPrefix@PossibleWord@icu_56@@QAEHXZ PROC		; icu_56::PossibleWord::longestPrefix, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?longestPrefix@PossibleWord@icu_56@@QAEHXZ ENDP		; icu_56::PossibleWord::longestPrefix
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?markCurrent@PossibleWord@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?markCurrent@PossibleWord@icu_56@@QAEXXZ PROC		; icu_56::PossibleWord::markCurrent, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+12], edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?markCurrent@PossibleWord@icu_56@@QAEXXZ ENDP		; icu_56::PossibleWord::markCurrent
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?markedCPLength@PossibleWord@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?markedCPLength@PossibleWord@icu_56@@QAEHXZ PROC	; icu_56::PossibleWord::markedCPLength, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+100]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?markedCPLength@PossibleWord@icu_56@@QAEHXZ ENDP	; icu_56::PossibleWord::markedCPLength
_TEXT	ENDS
PUBLIC	??_C@_1EE@FFIPMKLO@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ ; `string'
PUBLIC	??_C@_1DI@PLPACDPG@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_7LaoBreakEngine@icu_56@@6B@			; icu_56::LaoBreakEngine::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ; icu_56::LaoBreakEngine::LaoBreakEngine
PUBLIC	??_R4LaoBreakEngine@icu_56@@6B@			; icu_56::LaoBreakEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLaoBreakEngine@icu_56@@@8		; icu_56::LaoBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3LaoBreakEngine@icu_56@@8			; icu_56::LaoBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LaoBreakEngine@icu_56@@8			; icu_56::LaoBreakEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LaoBreakEngine@icu_56@@8		; icu_56::LaoBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ; icu_56::LaoBreakEngine::divideUpDictionaryRange
EXTRN	??_ELaoBreakEngine@icu_56@@UAEPAXI@Z:PROC	; icu_56::LaoBreakEngine::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LaoBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LaoBreakEngine@icu_56@@8 DD FLAT:??_R0?AVLaoBreakEngine@icu_56@@@8 ; icu_56::LaoBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LaoBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2LaoBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R2LaoBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@LaoBreakEngine@icu_56@@8 ; icu_56::LaoBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3LaoBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3LaoBreakEngine@icu_56@@8 DD 00H			; icu_56::LaoBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2LaoBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLaoBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVLaoBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::LaoBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLaoBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LaoBreakEngine@icu_56@@6B@
rdata$r	SEGMENT
??_R4LaoBreakEngine@icu_56@@6B@ DD 00H			; icu_56::LaoBreakEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLaoBreakEngine@icu_56@@@8
	DD	FLAT:??_R3LaoBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EE@FFIPMKLO@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
CONST	SEGMENT
??_C@_1EE@FFIPMKLO@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'L', 00H, 'a', 00H, 'o', 00H, 'o', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, '&'
	DB	00H, '[', 00H, ':', 00H, 'M', 00H, ':', 00H, ']', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@PLPACDPG@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@PLPACDPG@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'L', 00H, 'a', 00H, 'o', 00H, 'o', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7LaoBreakEngine@icu_56@@6B@
CONST	SEGMENT
??_7LaoBreakEngine@icu_56@@6B@ DD FLAT:??_R4LaoBreakEngine@icu_56@@6B@ ; icu_56::LaoBreakEngine::`vftable'
	DD	FLAT:??_ELaoBreakEngine@icu_56@@UAEPAXI@Z
	DD	FLAT:?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
	DD	FLAT:?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
	DD	FLAT:?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
	DD	FLAT:?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv229 = -372						; size = 4
tv227 = -372						; size = 4
tv230 = -368						; size = 4
tv69 = -368						; size = 4
$T39542 = -360						; size = 64
$T39546 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_adoptDictionary$ = 8					; size = 4
_status$ = 12						; size = 4
??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z PROC ; icu_56::LaoBreakEngine::LaoBreakEngine, COMDAT
; _this$ = ecx
; Line 461
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryBreakEngine@icu_56@@QAE@I@Z ; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LaoBreakEngine@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptDictionary$[ebp]
	mov	DWORD PTR [eax+268], ecx
; Line 462
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1DI@PLPACDPG@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39542[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv227[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv227[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39542[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 463
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@LaoBreakEn
; Line 464
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
$LN1@LaoBreakEn:
; Line 466
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1EE@FFIPMKLO@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
	push	1
	lea	ecx, DWORD PTR $T39546[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv230[ebp], eax
	mov	ecx, DWORD PTR tv230[ebp]
	mov	DWORD PTR tv229[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv229[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39546[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 467
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 469
	mov	esi, esp
	push	3780					; 00000ec4H
	push	3776					; 00000ec0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 470
	mov	esi, esp
	push	3758					; 00000eaeH
	push	3713					; 00000e81H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 471
	mov	esi, esp
	push	3805					; 00000eddH
	push	3804					; 00000edcH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 472
	mov	esi, esp
	push	3780					; 00000ec4H
	push	3776					; 00000ec0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 475
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+216]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 476
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 477
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 478
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5:
	lea	ecx, DWORD PTR $T39542[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6:
	lea	ecx, DWORD PTR $T39546[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ENDP ; icu_56::LaoBreakEngine::LaoBreakEngine
PUBLIC	??1LaoBreakEngine@icu_56@@UAE@XZ		; icu_56::LaoBreakEngine::~LaoBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GLaoBreakEngine@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GLaoBreakEngine@icu_56@@UAEPAXI@Z PROC		; icu_56::LaoBreakEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LaoBreakEngine@icu_56@@UAE@XZ	; icu_56::LaoBreakEngine::~LaoBreakEngine
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@16
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@16:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLaoBreakEngine@icu_56@@UAEPAXI@Z ENDP		; icu_56::LaoBreakEngine::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1LaoBreakEngine@icu_56@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1LaoBreakEngine@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1LaoBreakEngine@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1LaoBreakEngine@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T47939 = -236						; size = 4
$T47940 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1LaoBreakEngine@icu_56@@UAE@XZ PROC			; icu_56::LaoBreakEngine::~LaoBreakEngine, COMDAT
; _this$ = ecx
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1LaoBreakEngine@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LaoBreakEngine@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	mov	DWORD PTR $T47940[ebp], ecx
	mov	edx, DWORD PTR $T47940[ebp]
	mov	DWORD PTR $T47939[ebp], edx
	cmp	DWORD PTR $T47939[ebp], 0
	je	SHORT $LN3@LaoBreakEn@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47939[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47939[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN1@LaoBreakEn@2
$LN3@LaoBreakEn@2:
	mov	DWORD PTR tv89[ebp], 0
$LN1@LaoBreakEn@2:
; Line 482
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$??1LaoBreakEngine@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1LaoBreakEngine@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1LaoBreakEngine@icu_56@@UAE@XZ ENDP			; icu_56::LaoBreakEngine::~LaoBreakEngine
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3
__ehfuncinfo$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
_TEXT	SEGMENT
tv401 = -976						; size = 8
tv398 = -968						; size = 8
$T47957 = -956						; size = 4
_currPos$39618 = -752					; size = 4
_candidates$39614 = -740				; size = 4
_pcSize$39611 = -728					; size = 4
_pcIndex$39610 = -716					; size = 4
_chars$39606 = -704					; size = 4
_uc$39605 = -692					; size = 4
_pc$39604 = -680					; size = 4
_remaining$39603 = -668					; size = 4
_wordsMatched$39588 = -656				; size = 4
_candidates$39578 = -644				; size = 4
_words$ = -632						; size = 540
_status$ = -84						; size = 4
_current$ = -72						; size = 4
_cuWordLength$ = -60					; size = 4
_cpWordLength$ = -48					; size = 4
_wordsFound$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_rangeStart$ = 12					; size = 4
_rangeEnd$ = 16						; size = 4
_foundBreaks$ = 20					; size = 4
?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z PROC ; icu_56::LaoBreakEngine::divideUpDictionaryRange, COMDAT
; _this$ = ecx
; Line 488
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 964				; 000003c4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-976]
	mov	ecx, 241				; 000000f1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 489
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	sub	eax, DWORD PTR _rangeStart$[ebp]
	cmp	eax, 4
	jge	SHORT $LN34@divideUpDi@2
; Line 490
	xor	eax, eax
	jmp	$LN35@divideUpDi@2
$LN34@divideUpDi@2:
; Line 493
	mov	DWORD PTR _wordsFound$[ebp], 0
; Line 494
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 495
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 497
	mov	DWORD PTR _status$[ebp], 0
; Line 498
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	OFFSET ??0PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 500
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN33@divideUpDi@2:
; Line 502
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN32@divideUpDi@2
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _current$[ebp], eax
	mov	ecx, DWORD PTR _current$[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	$LN32@divideUpDi@2
; Line 503
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 504
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 507
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39578[ebp], eax
; Line 510
	cmp	DWORD PTR _candidates$39578[ebp], 1
	jne	SHORT $LN31@divideUpDi@2
; Line 511
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 512
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 513
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
	jmp	$LN30@divideUpDi@2
$LN31@divideUpDi@2:
; Line 516
	cmp	DWORD PTR _candidates$39578[ebp], 1
	jle	$LN30@divideUpDi@2
; Line 518
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	cdq
	mov	DWORD PTR tv398[ebp], ecx
	mov	DWORD PTR tv398[ebp+4], esi
	mov	DWORD PTR tv401[ebp], eax
	mov	DWORD PTR tv401[ebp+4], edx
	mov	edx, DWORD PTR tv398[ebp+4]
	cmp	edx, DWORD PTR tv401[ebp+4]
	jl	SHORT $LN26@divideUpDi@2
	jg	SHORT __unwind$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0
	mov	eax, DWORD PTR tv398[ebp]
	cmp	eax, DWORD PTR tv401[ebp]
	jb	SHORT $LN26@divideUpDi@2
__unwind$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0:
; Line 519
	jmp	$foundBest$39583
$LN26@divideUpDi@2:
; Line 522
	mov	DWORD PTR _wordsMatched$39588[ebp], 1
; Line 523
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jle	$LN25@divideUpDi@2
; Line 524
	cmp	DWORD PTR _wordsMatched$39588[ebp], 2
	jge	SHORT $LN22@divideUpDi@2
; Line 526
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 527
	mov	DWORD PTR _wordsMatched$39588[ebp], 2
$LN22@divideUpDi@2:
; Line 531
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN19@divideUpDi@2
; Line 532
	jmp	$foundBest$39583
$LN19@divideUpDi@2:
; Line 538
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 2
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	je	SHORT $LN18@divideUpDi@2
; Line 539
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 540
	jmp	SHORT $foundBest$39583
$LN18@divideUpDi@2:
; Line 543
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN19@divideUpDi@2
$LN25@divideUpDi@2:
; Line 546
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN26@divideUpDi@2
$foundBest$39583:
; Line 548
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 549
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 550
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN30@divideUpDi@2:
; Line 558
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jge	$LN4@divideUpDi@2
	cmp	DWORD PTR _cpWordLength$[ebp], 3
	jge	$LN4@divideUpDi@2
; Line 564
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jg	$LN13@divideUpDi@2
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	je	SHORT $LN12@divideUpDi@2
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?longestPrefix@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::longestPrefix
	cmp	eax, 3
	jge	$LN13@divideUpDi@2
$LN12@divideUpDi@2:
; Line 566
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _remaining$39603[ebp], ecx
; Line 569
	mov	DWORD PTR _chars$39606[ebp], 0
$LN11@divideUpDi@2:
; Line 571
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _pcIndex$39610[ebp], eax
; Line 572
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR _pc$39604[ebp], eax
; Line 573
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _pcIndex$39610[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	mov	DWORD PTR _pcSize$39611[ebp], ecx
; Line 574
	mov	eax, DWORD PTR _chars$39606[ebp]
	add	eax, DWORD PTR _pcSize$39611[ebp]
	mov	DWORD PTR _chars$39606[ebp], eax
; Line 575
	mov	eax, DWORD PTR _remaining$39603[ebp]
	sub	eax, DWORD PTR _pcSize$39611[ebp]
	mov	DWORD PTR _remaining$39603[ebp], eax
; Line 576
	cmp	DWORD PTR _remaining$39603[ebp], 0
	jg	SHORT $LN9@divideUpDi@2
; Line 577
	jmp	$LN10@divideUpDi@2
$LN9@divideUpDi@2:
; Line 579
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _uc$39605[ebp], eax
; Line 580
	mov	esi, esp
	mov	eax, DWORD PTR _pc$39604[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN8@divideUpDi@2
	mov	esi, esp
	mov	eax, DWORD PTR _uc$39605[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@divideUpDi@2
; Line 583
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39614[ebp], eax
; Line 584
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39606[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 585
	cmp	DWORD PTR _candidates$39614[ebp], 0
	jle	SHORT $LN8@divideUpDi@2
; Line 586
	jmp	SHORT $LN10@divideUpDi@2
$LN8@divideUpDi@2:
; Line 589
	jmp	$LN11@divideUpDi@2
$LN10@divideUpDi@2:
; Line 592
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jg	SHORT $LN6@divideUpDi@2
; Line 593
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN6@divideUpDi@2:
; Line 597
	mov	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39606[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 599
	jmp	SHORT $LN4@divideUpDi@2
$LN13@divideUpDi@2:
; Line 601
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN4@divideUpDi@2:
; Line 607
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _currPos$39618[ebp], eax
	mov	ecx, DWORD PTR _currPos$39618[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	SHORT $LN3@divideUpDi@2
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@divideUpDi@2
; Line 608
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 609
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	sub	eax, DWORD PTR _currPos$39618[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 610
	jmp	SHORT $LN4@divideUpDi@2
$LN3@divideUpDi@2:
; Line 619
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jle	SHORT $LN2@divideUpDi@2
; Line 620
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	add	ecx, DWORD PTR _cuWordLength$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ; icu_56::UStack::push
$LN2@divideUpDi@2:
; Line 622
	jmp	$LN33@divideUpDi@2
$LN32@divideUpDi@2:
; Line 625
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN1@divideUpDi@2
; Line 626
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?popi@UStack@icu_56@@QAEHXZ		; icu_56::UStack::popi
; Line 627
	mov	eax, DWORD PTR _wordsFound$[ebp]
	sub	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN1@divideUpDi@2:
; Line 630
	mov	eax, DWORD PTR _wordsFound$[ebp]
	mov	DWORD PTR $T47957[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR $T47957[ebp]
$LN35@divideUpDi@2:
; Line 631
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@divideUpDi@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 976				; 000003d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN43@divideUpDi@2:
	DD	2
	DD	$LN42@divideUpDi@2
$LN42@divideUpDi@2:
	DD	-84					; ffffffacH
	DD	4
	DD	$LN39@divideUpDi@2
	DD	-632					; fffffd88H
	DD	540					; 0000021cH
	DD	$LN40@divideUpDi@2
$LN40@divideUpDi@2:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN39@divideUpDi@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3:
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-980]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ENDP ; icu_56::LaoBreakEngine::divideUpDictionaryRange
PUBLIC	??_C@_1EE@IFJHHOM@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ ; `string'
PUBLIC	??_C@_1DI@BMPIDMJK@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_7BurmeseBreakEngine@icu_56@@6B@		; icu_56::BurmeseBreakEngine::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ; icu_56::BurmeseBreakEngine::BurmeseBreakEngine
PUBLIC	??_R4BurmeseBreakEngine@icu_56@@6B@		; icu_56::BurmeseBreakEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBurmeseBreakEngine@icu_56@@@8		; icu_56::BurmeseBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3BurmeseBreakEngine@icu_56@@8		; icu_56::BurmeseBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BurmeseBreakEngine@icu_56@@8		; icu_56::BurmeseBreakEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BurmeseBreakEngine@icu_56@@8	; icu_56::BurmeseBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ; icu_56::BurmeseBreakEngine::divideUpDictionaryRange
EXTRN	??_EBurmeseBreakEngine@icu_56@@UAEPAXI@Z:PROC	; icu_56::BurmeseBreakEngine::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@BurmeseBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BurmeseBreakEngine@icu_56@@8 DD FLAT:??_R0?AVBurmeseBreakEngine@icu_56@@@8 ; icu_56::BurmeseBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BurmeseBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BurmeseBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R2BurmeseBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BurmeseBreakEngine@icu_56@@8 ; icu_56::BurmeseBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BurmeseBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3BurmeseBreakEngine@icu_56@@8 DD 00H		; icu_56::BurmeseBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2BurmeseBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBurmeseBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBurmeseBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BurmeseBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBurmeseBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4BurmeseBreakEngine@icu_56@@6B@
rdata$r	SEGMENT
??_R4BurmeseBreakEngine@icu_56@@6B@ DD 00H		; icu_56::BurmeseBreakEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBurmeseBreakEngine@icu_56@@@8
	DD	FLAT:??_R3BurmeseBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EE@IFJHHOM@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
CONST	SEGMENT
??_C@_1EE@IFJHHOM@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'M', 00H, 'y', 00H, 'm', 00H, 'r', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, '&'
	DB	00H, '[', 00H, ':', 00H, 'M', 00H, ':', 00H, ']', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@BMPIDMJK@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@BMPIDMJK@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'M', 00H, 'y', 00H, 'm', 00H, 'r', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7BurmeseBreakEngine@icu_56@@6B@
CONST	SEGMENT
??_7BurmeseBreakEngine@icu_56@@6B@ DD FLAT:??_R4BurmeseBreakEngine@icu_56@@6B@ ; icu_56::BurmeseBreakEngine::`vftable'
	DD	FLAT:??_EBurmeseBreakEngine@icu_56@@UAEPAXI@Z
	DD	FLAT:?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
	DD	FLAT:?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
	DD	FLAT:?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
	DD	FLAT:?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv208 = -372						; size = 4
tv206 = -372						; size = 4
tv209 = -368						; size = 4
tv69 = -368						; size = 4
$T39639 = -360						; size = 64
$T39643 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_adoptDictionary$ = 8					; size = 4
_status$ = 12						; size = 4
??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z PROC ; icu_56::BurmeseBreakEngine::BurmeseBreakEngine, COMDAT
; _this$ = ecx
; Line 657
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryBreakEngine@icu_56@@QAE@I@Z ; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BurmeseBreakEngine@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptDictionary$[ebp]
	mov	DWORD PTR [eax+268], ecx
; Line 658
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1DI@BMPIDMJK@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39639[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv206[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv206[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39639[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 659
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@BurmeseBre
; Line 660
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
$LN1@BurmeseBre:
; Line 662
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1EE@IFJHHOM@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
	push	1
	lea	ecx, DWORD PTR $T39643[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv209[ebp], eax
	mov	ecx, DWORD PTR tv209[ebp]
	mov	DWORD PTR tv208[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv208[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39643[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 663
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 664
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 665
	mov	esi, esp
	push	4138					; 0000102aH
	push	4096					; 00001000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+216]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 669
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 670
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 671
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5:
	lea	ecx, DWORD PTR $T39639[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6:
	lea	ecx, DWORD PTR $T39643[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ENDP ; icu_56::BurmeseBreakEngine::BurmeseBreakEngine
PUBLIC	??1BurmeseBreakEngine@icu_56@@UAE@XZ		; icu_56::BurmeseBreakEngine::~BurmeseBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBurmeseBreakEngine@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GBurmeseBreakEngine@icu_56@@UAEPAXI@Z PROC		; icu_56::BurmeseBreakEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BurmeseBreakEngine@icu_56@@UAE@XZ	; icu_56::BurmeseBreakEngine::~BurmeseBreakEngine
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@17
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@17:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBurmeseBreakEngine@icu_56@@UAEPAXI@Z ENDP		; icu_56::BurmeseBreakEngine::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1BurmeseBreakEngine@icu_56@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1BurmeseBreakEngine@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1BurmeseBreakEngine@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1BurmeseBreakEngine@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T47990 = -236						; size = 4
$T47991 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1BurmeseBreakEngine@icu_56@@UAE@XZ PROC		; icu_56::BurmeseBreakEngine::~BurmeseBreakEngine, COMDAT
; _this$ = ecx
; Line 673
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1BurmeseBreakEngine@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BurmeseBreakEngine@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	mov	DWORD PTR $T47991[ebp], ecx
	mov	edx, DWORD PTR $T47991[ebp]
	mov	DWORD PTR $T47990[ebp], edx
	cmp	DWORD PTR $T47990[ebp], 0
	je	SHORT $LN3@BurmeseBre@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47990[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47990[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN1@BurmeseBre@2
$LN3@BurmeseBre@2:
	mov	DWORD PTR tv89[ebp], 0
$LN1@BurmeseBre@2:
; Line 675
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$??1BurmeseBreakEngine@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1BurmeseBreakEngine@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1BurmeseBreakEngine@icu_56@@UAE@XZ ENDP		; icu_56::BurmeseBreakEngine::~BurmeseBreakEngine
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3
__ehfuncinfo$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
_TEXT	SEGMENT
tv401 = -976						; size = 8
tv398 = -968						; size = 8
$T48008 = -956						; size = 4
_currPos$39715 = -752					; size = 4
_candidates$39711 = -740				; size = 4
_pcSize$39708 = -728					; size = 4
_pcIndex$39707 = -716					; size = 4
_chars$39703 = -704					; size = 4
_uc$39702 = -692					; size = 4
_pc$39701 = -680					; size = 4
_remaining$39700 = -668					; size = 4
_wordsMatched$39685 = -656				; size = 4
_candidates$39675 = -644				; size = 4
_words$ = -632						; size = 540
_status$ = -84						; size = 4
_current$ = -72						; size = 4
_cuWordLength$ = -60					; size = 4
_cpWordLength$ = -48					; size = 4
_wordsFound$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_rangeStart$ = 12					; size = 4
_rangeEnd$ = 16						; size = 4
_foundBreaks$ = 20					; size = 4
?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z PROC ; icu_56::BurmeseBreakEngine::divideUpDictionaryRange, COMDAT
; _this$ = ecx
; Line 681
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 964				; 000003c4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-976]
	mov	ecx, 241				; 000000f1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 682
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	sub	eax, DWORD PTR _rangeStart$[ebp]
	cmp	eax, 4
	jge	SHORT $LN34@divideUpDi@3
; Line 683
	xor	eax, eax
	jmp	$LN35@divideUpDi@3
$LN34@divideUpDi@3:
; Line 686
	mov	DWORD PTR _wordsFound$[ebp], 0
; Line 687
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 688
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 690
	mov	DWORD PTR _status$[ebp], 0
; Line 691
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	OFFSET ??0PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 693
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN33@divideUpDi@3:
; Line 695
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN32@divideUpDi@3
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _current$[ebp], eax
	mov	ecx, DWORD PTR _current$[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	$LN32@divideUpDi@3
; Line 696
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 697
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 700
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39675[ebp], eax
; Line 703
	cmp	DWORD PTR _candidates$39675[ebp], 1
	jne	SHORT $LN31@divideUpDi@3
; Line 704
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 705
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 706
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
	jmp	$LN30@divideUpDi@3
$LN31@divideUpDi@3:
; Line 709
	cmp	DWORD PTR _candidates$39675[ebp], 1
	jle	$LN30@divideUpDi@3
; Line 711
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	cdq
	mov	DWORD PTR tv398[ebp], ecx
	mov	DWORD PTR tv398[ebp+4], esi
	mov	DWORD PTR tv401[ebp], eax
	mov	DWORD PTR tv401[ebp+4], edx
	mov	edx, DWORD PTR tv398[ebp+4]
	cmp	edx, DWORD PTR tv401[ebp+4]
	jl	SHORT $LN26@divideUpDi@3
	jg	SHORT __unwind$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0
	mov	eax, DWORD PTR tv398[ebp]
	cmp	eax, DWORD PTR tv401[ebp]
	jb	SHORT $LN26@divideUpDi@3
__unwind$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0:
; Line 712
	jmp	$foundBest$39680
$LN26@divideUpDi@3:
; Line 715
	mov	DWORD PTR _wordsMatched$39685[ebp], 1
; Line 716
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jle	$LN25@divideUpDi@3
; Line 717
	cmp	DWORD PTR _wordsMatched$39685[ebp], 2
	jge	SHORT $LN22@divideUpDi@3
; Line 719
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 720
	mov	DWORD PTR _wordsMatched$39685[ebp], 2
$LN22@divideUpDi@3:
; Line 724
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN19@divideUpDi@3
; Line 725
	jmp	$foundBest$39680
$LN19@divideUpDi@3:
; Line 731
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 2
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	je	SHORT $LN18@divideUpDi@3
; Line 732
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 733
	jmp	SHORT $foundBest$39680
$LN18@divideUpDi@3:
; Line 736
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN19@divideUpDi@3
$LN25@divideUpDi@3:
; Line 739
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN26@divideUpDi@3
$foundBest$39680:
; Line 741
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 742
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 743
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN30@divideUpDi@3:
; Line 751
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jge	$LN4@divideUpDi@3
	cmp	DWORD PTR _cpWordLength$[ebp], 3
	jge	$LN4@divideUpDi@3
; Line 757
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jg	$LN13@divideUpDi@3
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	je	SHORT $LN12@divideUpDi@3
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?longestPrefix@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::longestPrefix
	cmp	eax, 3
	jge	$LN13@divideUpDi@3
$LN12@divideUpDi@3:
; Line 759
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _remaining$39700[ebp], ecx
; Line 762
	mov	DWORD PTR _chars$39703[ebp], 0
$LN11@divideUpDi@3:
; Line 764
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _pcIndex$39707[ebp], eax
; Line 765
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR _pc$39701[ebp], eax
; Line 766
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _pcIndex$39707[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	mov	DWORD PTR _pcSize$39708[ebp], ecx
; Line 767
	mov	eax, DWORD PTR _chars$39703[ebp]
	add	eax, DWORD PTR _pcSize$39708[ebp]
	mov	DWORD PTR _chars$39703[ebp], eax
; Line 768
	mov	eax, DWORD PTR _remaining$39700[ebp]
	sub	eax, DWORD PTR _pcSize$39708[ebp]
	mov	DWORD PTR _remaining$39700[ebp], eax
; Line 769
	cmp	DWORD PTR _remaining$39700[ebp], 0
	jg	SHORT $LN9@divideUpDi@3
; Line 770
	jmp	$LN10@divideUpDi@3
$LN9@divideUpDi@3:
; Line 772
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _uc$39702[ebp], eax
; Line 773
	mov	esi, esp
	mov	eax, DWORD PTR _pc$39701[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN8@divideUpDi@3
	mov	esi, esp
	mov	eax, DWORD PTR _uc$39702[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@divideUpDi@3
; Line 776
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39711[ebp], eax
; Line 777
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39703[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 778
	cmp	DWORD PTR _candidates$39711[ebp], 0
	jle	SHORT $LN8@divideUpDi@3
; Line 779
	jmp	SHORT $LN10@divideUpDi@3
$LN8@divideUpDi@3:
; Line 782
	jmp	$LN11@divideUpDi@3
$LN10@divideUpDi@3:
; Line 785
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jg	SHORT $LN6@divideUpDi@3
; Line 786
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN6@divideUpDi@3:
; Line 790
	mov	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39703[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 792
	jmp	SHORT $LN4@divideUpDi@3
$LN13@divideUpDi@3:
; Line 794
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN4@divideUpDi@3:
; Line 800
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _currPos$39715[ebp], eax
	mov	ecx, DWORD PTR _currPos$39715[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	SHORT $LN3@divideUpDi@3
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@divideUpDi@3
; Line 801
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 802
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	sub	eax, DWORD PTR _currPos$39715[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 803
	jmp	SHORT $LN4@divideUpDi@3
$LN3@divideUpDi@3:
; Line 812
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jle	SHORT $LN2@divideUpDi@3
; Line 813
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	add	ecx, DWORD PTR _cuWordLength$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ; icu_56::UStack::push
$LN2@divideUpDi@3:
; Line 815
	jmp	$LN33@divideUpDi@3
$LN32@divideUpDi@3:
; Line 818
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN1@divideUpDi@3
; Line 819
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?popi@UStack@icu_56@@QAEHXZ		; icu_56::UStack::popi
; Line 820
	mov	eax, DWORD PTR _wordsFound$[ebp]
	sub	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN1@divideUpDi@3:
; Line 823
	mov	eax, DWORD PTR _wordsFound$[ebp]
	mov	DWORD PTR $T48008[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR $T48008[ebp]
$LN35@divideUpDi@3:
; Line 824
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@divideUpDi@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 976				; 000003d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN43@divideUpDi@3:
	DD	2
	DD	$LN42@divideUpDi@3
$LN42@divideUpDi@3:
	DD	-84					; ffffffacH
	DD	4
	DD	$LN39@divideUpDi@3
	DD	-632					; fffffd88H
	DD	540					; 0000021cH
	DD	$LN40@divideUpDi@3
$LN40@divideUpDi@3:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN39@divideUpDi@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3:
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-980]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ENDP ; icu_56::BurmeseBreakEngine::divideUpDictionaryRange
PUBLIC	??_C@_1EE@NLBDGEPK@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ ; `string'
PUBLIC	??_C@_1DI@OCPBEJKA@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_7KhmerBreakEngine@icu_56@@6B@		; icu_56::KhmerBreakEngine::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ; icu_56::KhmerBreakEngine::KhmerBreakEngine
PUBLIC	??_R4KhmerBreakEngine@icu_56@@6B@		; icu_56::KhmerBreakEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVKhmerBreakEngine@icu_56@@@8		; icu_56::KhmerBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3KhmerBreakEngine@icu_56@@8			; icu_56::KhmerBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2KhmerBreakEngine@icu_56@@8			; icu_56::KhmerBreakEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@KhmerBreakEngine@icu_56@@8	; icu_56::KhmerBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ; icu_56::KhmerBreakEngine::divideUpDictionaryRange
EXTRN	??_EKhmerBreakEngine@icu_56@@UAEPAXI@Z:PROC	; icu_56::KhmerBreakEngine::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@KhmerBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@KhmerBreakEngine@icu_56@@8 DD FLAT:??_R0?AVKhmerBreakEngine@icu_56@@@8 ; icu_56::KhmerBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3KhmerBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2KhmerBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R2KhmerBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@KhmerBreakEngine@icu_56@@8 ; icu_56::KhmerBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3KhmerBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3KhmerBreakEngine@icu_56@@8 DD 00H			; icu_56::KhmerBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2KhmerBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVKhmerBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVKhmerBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::KhmerBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVKhmerBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4KhmerBreakEngine@icu_56@@6B@
rdata$r	SEGMENT
??_R4KhmerBreakEngine@icu_56@@6B@ DD 00H		; icu_56::KhmerBreakEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVKhmerBreakEngine@icu_56@@@8
	DD	FLAT:??_R3KhmerBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EE@NLBDGEPK@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
CONST	SEGMENT
??_C@_1EE@NLBDGEPK@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'K', 00H, 'h', 00H, 'm', 00H, 'r', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, '&'
	DB	00H, '[', 00H, ':', 00H, 'M', 00H, ':', 00H, ']', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@OCPBEJKA@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@OCPBEJKA@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'K', 00H, 'h', 00H, 'm', 00H, 'r', 00H
	DB	':', 00H, ']', 00H, '&', 00H, '[', 00H, ':', 00H, 'L', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'k', 00H, '=', 00H, 'S', 00H, 'A', 00H, ':', 00H, ']', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7KhmerBreakEngine@icu_56@@6B@
CONST	SEGMENT
??_7KhmerBreakEngine@icu_56@@6B@ DD FLAT:??_R4KhmerBreakEngine@icu_56@@6B@ ; icu_56::KhmerBreakEngine::`vftable'
	DD	FLAT:??_EKhmerBreakEngine@icu_56@@UAEPAXI@Z
	DD	FLAT:?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
	DD	FLAT:?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
	DD	FLAT:?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
	DD	FLAT:?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv211 = -372						; size = 4
tv209 = -372						; size = 4
tv212 = -368						; size = 4
tv69 = -368						; size = 4
$T39736 = -360						; size = 64
$T39740 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_adoptDictionary$ = 8					; size = 4
_status$ = 12						; size = 4
??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z PROC ; icu_56::KhmerBreakEngine::KhmerBreakEngine, COMDAT
; _this$ = ecx
; Line 850
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryBreakEngine@icu_56@@QAE@I@Z ; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7KhmerBreakEngine@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptDictionary$[ebp]
	mov	DWORD PTR [eax+268], ecx
; Line 851
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1DI@OCPBEJKA@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39736[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv209[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv209[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39736[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 852
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@KhmerBreak
; Line 853
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
$LN1@KhmerBreak:
; Line 855
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1EE@NLBDGEPK@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@
	push	1
	lea	ecx, DWORD PTR $T39740[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv212[ebp], eax
	mov	ecx, DWORD PTR tv212[ebp]
	mov	DWORD PTR tv211[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv211[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39740[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 856
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 857
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 858
	mov	esi, esp
	push	6067					; 000017b3H
	push	6016					; 00001780H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 862
	push	6098					; 000017d2H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::remove
; Line 872
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+216]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 873
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 874
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 876
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5:
	lea	ecx, DWORD PTR $T39736[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6:
	lea	ecx, DWORD PTR $T39740[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z ENDP ; icu_56::KhmerBreakEngine::KhmerBreakEngine
PUBLIC	??1KhmerBreakEngine@icu_56@@UAE@XZ		; icu_56::KhmerBreakEngine::~KhmerBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GKhmerBreakEngine@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GKhmerBreakEngine@icu_56@@UAEPAXI@Z PROC		; icu_56::KhmerBreakEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1KhmerBreakEngine@icu_56@@UAE@XZ	; icu_56::KhmerBreakEngine::~KhmerBreakEngine
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@18
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@18:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GKhmerBreakEngine@icu_56@@UAEPAXI@Z ENDP		; icu_56::KhmerBreakEngine::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1KhmerBreakEngine@icu_56@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1KhmerBreakEngine@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1KhmerBreakEngine@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1KhmerBreakEngine@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T48041 = -236						; size = 4
$T48042 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1KhmerBreakEngine@icu_56@@UAE@XZ PROC			; icu_56::KhmerBreakEngine::~KhmerBreakEngine, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1KhmerBreakEngine@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7KhmerBreakEngine@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	mov	DWORD PTR $T48042[ebp], ecx
	mov	edx, DWORD PTR $T48042[ebp]
	mov	DWORD PTR $T48041[ebp], edx
	cmp	DWORD PTR $T48041[ebp], 0
	je	SHORT $LN3@KhmerBreak@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48041[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48041[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN1@KhmerBreak@2
$LN3@KhmerBreak@2:
	mov	DWORD PTR tv89[ebp], 0
$LN1@KhmerBreak@2:
; Line 880
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$??1KhmerBreakEngine@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1KhmerBreakEngine@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1KhmerBreakEngine@icu_56@@UAE@XZ ENDP			; icu_56::KhmerBreakEngine::~KhmerBreakEngine
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3
__ehfuncinfo$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
_TEXT	SEGMENT
$T48059 = -956						; size = 4
_currPos$39813 = -752					; size = 4
_candidates$39809 = -740				; size = 4
_pcSize$39806 = -728					; size = 4
_pcIndex$39805 = -716					; size = 4
_chars$39801 = -704					; size = 4
_uc$39800 = -692					; size = 4
_pc$39799 = -680					; size = 4
_remaining$39798 = -668					; size = 4
_wordsMatched$39783 = -656				; size = 4
_candidates$39772 = -644				; size = 4
_words$ = -632						; size = 540
_status$ = -84						; size = 4
_current$ = -72						; size = 4
_cuWordLength$ = -60					; size = 4
_cpWordLength$ = -48					; size = 4
_wordsFound$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_rangeStart$ = 12					; size = 4
_rangeEnd$ = 16						; size = 4
_foundBreaks$ = 20					; size = 4
?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z PROC ; icu_56::KhmerBreakEngine::divideUpDictionaryRange, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 948				; 000003b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-960]
	mov	ecx, 237				; 000000edH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	sub	eax, DWORD PTR _rangeStart$[ebp]
	cmp	eax, 4
	jge	SHORT $LN34@divideUpDi@4
; Line 888
	xor	eax, eax
	jmp	$LN35@divideUpDi@4
$LN34@divideUpDi@4:
; Line 891
	mov	DWORD PTR _wordsFound$[ebp], 0
; Line 892
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 893
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 895
	mov	DWORD PTR _status$[ebp], 0
; Line 896
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	OFFSET ??0PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 898
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN33@divideUpDi@4:
; Line 900
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN32@divideUpDi@4
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _current$[ebp], eax
	mov	ecx, DWORD PTR _current$[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	$LN32@divideUpDi@4
; Line 901
	mov	DWORD PTR _cuWordLength$[ebp], 0
; Line 902
	mov	DWORD PTR _cpWordLength$[ebp], 0
; Line 905
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39772[ebp], eax
; Line 908
	cmp	DWORD PTR _candidates$39772[ebp], 1
	jne	SHORT $LN31@divideUpDi@4
; Line 909
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 910
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 911
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
	jmp	$LN30@divideUpDi@4
$LN31@divideUpDi@4:
; Line 915
	cmp	DWORD PTR _candidates$39772[ebp], 1
	jle	$LN30@divideUpDi@4
; Line 917
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN26@divideUpDi@4
; Line 918
	jmp	$foundBest$39778
$LN26@divideUpDi@4:
; Line 921
	mov	DWORD PTR _wordsMatched$39783[ebp], 1
; Line 922
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jle	$LN25@divideUpDi@4
; Line 923
	cmp	DWORD PTR _wordsMatched$39783[ebp], 2
	jge	SHORT $LN22@divideUpDi@4
; Line 925
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 926
	mov	DWORD PTR _wordsMatched$39783[ebp], 2
$LN22@divideUpDi@4:
; Line 930
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN19@divideUpDi@4
; Line 931
	jmp	$foundBest$39778
$LN19@divideUpDi@4:
; Line 937
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 2
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	je	SHORT $LN18@divideUpDi@4
; Line 938
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markCurrent@PossibleWord@icu_56@@QAEXXZ ; icu_56::PossibleWord::markCurrent
; Line 939
	jmp	SHORT $foundBest$39778
$LN18@divideUpDi@4:
; Line 942
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN19@divideUpDi@4
$LN25@divideUpDi@4:
; Line 945
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z ; icu_56::PossibleWord::backUp
	movsx	edx, al
	test	edx, edx
	jne	$LN26@divideUpDi@4
$foundBest$39778:
; Line 947
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z ; icu_56::PossibleWord::acceptMarked
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 948
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?markedCPLength@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::markedCPLength
	mov	DWORD PTR _cpWordLength$[ebp], eax
; Line 949
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN30@divideUpDi@4:
; Line 957
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jge	$LN4@divideUpDi@4
	cmp	DWORD PTR _cpWordLength$[ebp], 3
	jge	$LN4@divideUpDi@4
; Line 963
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	test	eax, eax
	jg	$LN13@divideUpDi@4
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	je	SHORT $LN12@divideUpDi@4
	mov	eax, DWORD PTR _wordsFound$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?longestPrefix@PossibleWord@icu_56@@QAEHXZ ; icu_56::PossibleWord::longestPrefix
	cmp	eax, 3
	jge	$LN13@divideUpDi@4
$LN12@divideUpDi@4:
; Line 965
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _remaining$39798[ebp], ecx
; Line 968
	mov	DWORD PTR _chars$39801[ebp], 0
$LN11@divideUpDi@4:
; Line 970
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _pcIndex$39805[ebp], eax
; Line 971
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR _pc$39799[ebp], eax
; Line 972
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _pcIndex$39805[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	mov	DWORD PTR _pcSize$39806[ebp], ecx
; Line 973
	mov	eax, DWORD PTR _chars$39801[ebp]
	add	eax, DWORD PTR _pcSize$39806[ebp]
	mov	DWORD PTR _chars$39801[ebp], eax
; Line 974
	mov	eax, DWORD PTR _remaining$39798[ebp]
	sub	eax, DWORD PTR _pcSize$39806[ebp]
	mov	DWORD PTR _remaining$39798[ebp], eax
; Line 975
	cmp	DWORD PTR _remaining$39798[ebp], 0
	jg	SHORT $LN9@divideUpDi@4
; Line 976
	jmp	$LN10@divideUpDi@4
$LN9@divideUpDi@4:
; Line 978
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _uc$39800[ebp], eax
; Line 979
	mov	esi, esp
	mov	eax, DWORD PTR _pc$39799[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN8@divideUpDi@4
	mov	esi, esp
	mov	eax, DWORD PTR _uc$39800[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@divideUpDi@4
; Line 981
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+268]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	imul	edx, 180				; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp+edx]
	call	?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z ; icu_56::PossibleWord::candidates
	mov	DWORD PTR _candidates$39809[ebp], eax
; Line 982
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39801[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 983
	cmp	DWORD PTR _candidates$39809[ebp], 0
	jle	SHORT $LN8@divideUpDi@4
; Line 984
	jmp	SHORT $LN10@divideUpDi@4
$LN8@divideUpDi@4:
; Line 987
	jmp	$LN11@divideUpDi@4
$LN10@divideUpDi@4:
; Line 990
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jg	SHORT $LN6@divideUpDi@4
; Line 991
	mov	eax, DWORD PTR _wordsFound$[ebp]
	add	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN6@divideUpDi@4:
; Line 995
	mov	eax, DWORD PTR _cuWordLength$[ebp]
	add	eax, DWORD PTR _chars$39801[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 997
	jmp	SHORT $LN4@divideUpDi@4
$LN13@divideUpDi@4:
; Line 999
	mov	eax, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN4@divideUpDi@4:
; Line 1005
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _currPos$39813[ebp], eax
	mov	ecx, DWORD PTR _currPos$39813[ebp]
	cmp	ecx, DWORD PTR _rangeEnd$[ebp]
	jge	SHORT $LN3@divideUpDi@4
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_current32_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@divideUpDi@4
; Line 1006
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
; Line 1007
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	sub	eax, DWORD PTR _currPos$39813[ebp]
	add	eax, DWORD PTR _cuWordLength$[ebp]
	mov	DWORD PTR _cuWordLength$[ebp], eax
; Line 1008
	jmp	SHORT $LN4@divideUpDi@4
$LN3@divideUpDi@4:
; Line 1049
	cmp	DWORD PTR _cuWordLength$[ebp], 0
	jle	SHORT $LN2@divideUpDi@4
; Line 1050
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	add	ecx, DWORD PTR _cuWordLength$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ; icu_56::UStack::push
$LN2@divideUpDi@4:
; Line 1052
	jmp	$LN33@divideUpDi@4
$LN32@divideUpDi@4:
; Line 1055
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN1@divideUpDi@4
; Line 1056
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?popi@UStack@icu_56@@QAEHXZ		; icu_56::UStack::popi
; Line 1057
	mov	eax, DWORD PTR _wordsFound$[ebp]
	sub	eax, 1
	mov	DWORD PTR _wordsFound$[ebp], eax
$LN1@divideUpDi@4:
; Line 1060
	mov	eax, DWORD PTR _wordsFound$[ebp]
	mov	DWORD PTR $T48059[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	ecx, DWORD PTR _words$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR $T48059[ebp]
$LN35@divideUpDi@4:
; Line 1061
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@divideUpDi@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 960				; 000003c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN42@divideUpDi@4:
	DD	2
	DD	$LN41@divideUpDi@4
$LN41@divideUpDi@4:
	DD	-84					; ffffffacH
	DD	4
	DD	$LN38@divideUpDi@4
	DD	-632					; fffffd88H
	DD	540					; 0000021cH
	DD	$LN39@divideUpDi@4
$LN39@divideUpDi@4:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN38@divideUpDi@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3:
	push	OFFSET ??1PossibleWord@icu_56@@QAE@XZ	; icu_56::PossibleWord::~PossibleWord
	push	3
	push	180					; 000000b4H
	lea	eax, DWORD PTR _words$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-964]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ENDP ; icu_56::KhmerBreakEngine::divideUpDictionaryRange
PUBLIC	??_C@_1BK@PJEAFFAL@?$AA?$FL?$AA?3?$AAH?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@BIONPNNM@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAa?$AAt?$AAa?$AAk?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAe?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAf?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@KJIKCGCB@?$AA?$FL?$AA?3?$AAH?$AAa?$AAn?$AA?3?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@BMFKKFLJ@?$AA?$FL?$AA?2?$AAu?$AAa?$AAc?$AA0?$AA0?$AA?9?$AA?2?$AAu?$AAd?$AA7?$AAa?$AA3?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_7CjkBreakEngine@icu_56@@6B@			; icu_56::CjkBreakEngine::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z ; icu_56::CjkBreakEngine::CjkBreakEngine
PUBLIC	??_R4CjkBreakEngine@icu_56@@6B@			; icu_56::CjkBreakEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCjkBreakEngine@icu_56@@@8		; icu_56::CjkBreakEngine `RTTI Type Descriptor'
PUBLIC	??_R3CjkBreakEngine@icu_56@@8			; icu_56::CjkBreakEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CjkBreakEngine@icu_56@@8			; icu_56::CjkBreakEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CjkBreakEngine@icu_56@@8		; icu_56::CjkBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ; icu_56::CjkBreakEngine::divideUpDictionaryRange
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?getNFKCInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2::getNFKCInstance
EXTRN	??_ECjkBreakEngine@icu_56@@UAEPAXI@Z:PROC	; icu_56::CjkBreakEngine::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CjkBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CjkBreakEngine@icu_56@@8 DD FLAT:??_R0?AVCjkBreakEngine@icu_56@@@8 ; icu_56::CjkBreakEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CjkBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CjkBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R2CjkBreakEngine@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CjkBreakEngine@icu_56@@8 ; icu_56::CjkBreakEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CjkBreakEngine@icu_56@@8
rdata$r	SEGMENT
??_R3CjkBreakEngine@icu_56@@8 DD 00H			; icu_56::CjkBreakEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CjkBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCjkBreakEngine@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCjkBreakEngine@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CjkBreakEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCjkBreakEngine@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CjkBreakEngine@icu_56@@6B@
rdata$r	SEGMENT
??_R4CjkBreakEngine@icu_56@@6B@ DD 00H			; icu_56::CjkBreakEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCjkBreakEngine@icu_56@@@8
	DD	FLAT:??_R3CjkBreakEngine@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BK@PJEAFFAL@?$AA?$FL?$AA?3?$AAH?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@PJEAFFAL@?$AA?$FL?$AA?3?$AAH?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, ':', 00H, 'H', 00H, 'i', 00H, 'r', 00H, 'a', 00H, 'g', 00H
	DB	'a', 00H, 'n', 00H, 'a', 00H, ':', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@BIONPNNM@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAa?$AAt?$AAa?$AAk?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAe?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAf?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@BIONPNNM@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAa?$AAt?$AAa?$AAk?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAe?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAf?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, '[', 00H, ':', 00H, 'K', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	'k', 00H, 'a', 00H, 'n', 00H, 'a', 00H, ':', 00H, ']', 00H, '\'
	DB	00H, 'u', 00H, 'f', 00H, 'f', 00H, '9', 00H, 'e', 00H, '\', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, '9', 00H, 'f', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@KJIKCGCB@?$AA?$FL?$AA?3?$AAH?$AAa?$AAn?$AA?3?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@KJIKCGCB@?$AA?$FL?$AA?3?$AAH?$AAa?$AAn?$AA?3?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, ':', 00H, 'H', 00H, 'a', 00H, 'n', 00H, ':', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@BMFKKFLJ@?$AA?$FL?$AA?2?$AAu?$AAa?$AAc?$AA0?$AA0?$AA?9?$AA?2?$AAu?$AAd?$AA7?$AAa?$AA3?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@BMFKKFLJ@?$AA?$FL?$AA?2?$AAu?$AAa?$AAc?$AA0?$AA0?$AA?9?$AA?2?$AAu?$AAd?$AA7?$AAa?$AA3?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, '\', 00H, 'u', 00H, 'a', 00H, 'c', 00H, '0', 00H, '0', 00H
	DB	'-', 00H, '\', 00H, 'u', 00H, 'd', 00H, '7', 00H, 'a', 00H, '3'
	DB	00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CjkBreakEngine@icu_56@@6B@
CONST	SEGMENT
??_7CjkBreakEngine@icu_56@@6B@ DD FLAT:??_R4CjkBreakEngine@icu_56@@6B@ ; icu_56::CjkBreakEngine::`vftable'
	DD	FLAT:??_ECjkBreakEngine@icu_56@@UAEPAXI@Z
	DD	FLAT:?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z
	DD	FLAT:?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z
	DD	FLAT:?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z
	DD	FLAT:?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$9
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv231 = -576						; size = 4
tv229 = -576						; size = 4
tv227 = -576						; size = 4
tv225 = -576						; size = 4
tv235 = -572						; size = 4
tv234 = -572						; size = 4
tv233 = -572						; size = 4
tv69 = -572						; size = 4
$T39831 = -564						; size = 64
$T39834 = -492						; size = 64
$T39837 = -420						; size = 64
$T39840 = -348						; size = 64
_cjSet$39845 = -84					; size = 52
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_adoptDictionary$ = 8					; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z PROC ; icu_56::CjkBreakEngine::CjkBreakEngine, COMDAT
; _this$ = ecx
; Line 1070
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 564				; 00000234H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-576]
	mov	ecx, 141				; 0000008dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DictionaryBreakEngine@icu_56@@QAE@I@Z ; icu_56::DictionaryBreakEngine::DictionaryBreakEngine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CjkBreakEngine@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptDictionary$[ebp]
	mov	DWORD PTR [eax+268], ecx
; Line 1072
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1CA@BMFKKFLJ@?$AA?$FL?$AA?2?$AAu?$AAa?$AAc?$AA0?$AA0?$AA?9?$AA?2?$AAu?$AAd?$AA7?$AAa?$AA3?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39831[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv225[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv225[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39831[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 1073
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1BA@KJIKCGCB@?$AA?$FL?$AA?3?$AAH?$AAa?$AAn?$AA?3?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39834[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv233[ebp], eax
	mov	ecx, DWORD PTR tv233[ebp]
	mov	DWORD PTR tv227[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv227[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39834[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 1074
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1DG@BIONPNNM@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAa?$AAt?$AAa?$AAk?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAe?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAf?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39837[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv234[ebp], eax
	mov	ecx, DWORD PTR tv234[ebp]
	mov	DWORD PTR tv229[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv229[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39837[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 1075
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1BK@PJEAFFAL@?$AA?$FL?$AA?3?$AAH?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T39840[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv235[ebp], eax
	mov	ecx, DWORD PTR tv235[ebp]
	mov	DWORD PTR tv231[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv231[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T39840[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 1076
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getNFKCInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z ; icu_56::Normalizer2::getNFKCInstance
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+272], eax
; Line 1078
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN4@CjkBreakEn
; Line 1080
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN2@CjkBreakEn
; Line 1081
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
; Line 1082
	jmp	SHORT $LN4@CjkBreakEn
$LN2@CjkBreakEn:
; Line 1083
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 1084
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::addAll
; Line 1085
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::addAll
; Line 1086
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::addAll
; Line 1087
	push	65392					; 0000ff70H
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 1088
	push	12540					; 000030fcH
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 1089
	lea	eax, DWORD PTR _cjSet$39845[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z ; icu_56::DictionaryBreakEngine::setCharacters
; Line 1090
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
$LN4@CjkBreakEn:
; Line 1092
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@CjkBreakEn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 576				; 00000240H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN19@CjkBreakEn:
	DD	1
	DD	$LN18@CjkBreakEn
$LN18@CjkBreakEn:
	DD	-84					; ffffffacH
	DD	52					; 00000034H
	DD	$LN16@CjkBreakEn
$LN16@CjkBreakEn:
	DB	99					; 00000063H
	DB	106					; 0000006aH
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$5:
	lea	ecx, DWORD PTR $T39831[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$6:
	lea	ecx, DWORD PTR $T39834[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$7:
	lea	ecx, DWORD PTR $T39837[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$8:
	lea	ecx, DWORD PTR $T39840[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$9:
	lea	ecx, DWORD PTR _cjSet$39845[ebp]
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-580]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z ENDP ; icu_56::CjkBreakEngine::CjkBreakEngine
PUBLIC	??1CjkBreakEngine@icu_56@@UAE@XZ		; icu_56::CjkBreakEngine::~CjkBreakEngine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCjkBreakEngine@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCjkBreakEngine@icu_56@@UAEPAXI@Z PROC		; icu_56::CjkBreakEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CjkBreakEngine@icu_56@@UAE@XZ	; icu_56::CjkBreakEngine::~CjkBreakEngine
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@19
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@19:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCjkBreakEngine@icu_56@@UAEPAXI@Z ENDP		; icu_56::CjkBreakEngine::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CjkBreakEngine@icu_56@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1CjkBreakEngine@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CjkBreakEngine@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CjkBreakEngine@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T48097 = -236						; size = 4
$T48098 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CjkBreakEngine@icu_56@@UAE@XZ PROC			; icu_56::CjkBreakEngine::~CjkBreakEngine, COMDAT
; _this$ = ecx
; Line 1094
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CjkBreakEngine@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CjkBreakEngine@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 1095
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	mov	DWORD PTR $T48098[ebp], ecx
	mov	edx, DWORD PTR $T48098[ebp]
	mov	DWORD PTR $T48097[ebp], edx
	cmp	DWORD PTR $T48097[ebp], 0
	je	SHORT $LN3@CjkBreakEn@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48097[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48097[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN1@CjkBreakEn@2
$LN3@CjkBreakEn@2:
	mov	DWORD PTR tv89[ebp], 0
$LN1@CjkBreakEn@2:
; Line 1096
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DictionaryBreakEngine@icu_56@@UAE@XZ	; icu_56::DictionaryBreakEngine::~DictionaryBreakEngine
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$??1CjkBreakEngine@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CjkBreakEngine@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CjkBreakEngine@icu_56@@UAE@XZ ENDP			; icu_56::CjkBreakEngine::~CjkBreakEngine
PUBLIC	??_C@_1HC@GDEJECAF@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB@ ; `string'
PUBLIC	??_C@_1HG@ELJMMCLP@?$AAp?$AAr?$AAe?$AAv?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAA?$AAt?$AAi?$AA?$CI?$AAt?$AA_?$AAb?$AAo?$AAu?$AAn?$AAd?$AAa?$AAr?$AAy?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_1BO@HHICADMK@?$AAc?$AAu?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAc?$AAp?$AAI?$AAd?$AAx?$AA?$AA@ ; `string'
PUBLIC	?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::LocalPointer<icu_56::UVector32>::moveFrom
PUBLIC	??_C@_1GE@CIBAKEOJ@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AAM?$AAa?$AAp?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi@ ; `string'
PUBLIC	?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid
PUBLIC	??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>
PUBLIC	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
PUBLIC	??_C@_1BE@LMGOGEHB@?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
PUBLIC	?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UVector32>::adoptInsteadAndCheckErrorCode
PUBLIC	??_C@_1EO@NBEKDALA@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAi@ ; `string'
PUBLIC	??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA ; `icu_56::CjkBreakEngine::divideUpDictionaryRange'::`2'::__LINE__Var
PUBLIC	??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>
PUBLIC	__$ArrayPad$
EXTRN	??1UVector32@icu_56@@UAE@XZ:PROC		; icu_56::UVector32::~UVector32
EXTRN	_utext_close_56:PROC
EXTRN	_utext_openUnicodeString_56:PROC
EXTRN	?setSize@UVector32@icu_56@@QAEXH@Z:PROC		; icu_56::UVector32::setSize
EXTRN	??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z:PROC ; icu_56::UVector32::UVector32
EXTRN	?setElementAt@UVector32@icu_56@@QAEXHH@Z:PROC	; icu_56::UVector32::setElementAt
EXTRN	?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC ; icu_56::UnicodeString::countChar32
EXTRN	?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z:PROC ; icu_56::UnicodeString::moveIndex32
EXTRN	?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC	; icu_56::UnicodeString::char32At
EXTRN	??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::UVector32::UVector32
EXTRN	??2UMemory@icu_56@@SAPAXI@Z:PROC		; icu_56::UMemory::operator new
EXTRN	_utext_nativeLength_56:PROC
EXTRN	?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z:PROC ; icu_56::UnicodeString::setTo
EXTRN	__allmul:PROC
;	COMDAT ??_C@_1HC@GDEJECAF@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB@
CONST	SEGMENT
??_C@_1HC@GDEJECAF@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB@ DB 'f'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 'k', 00H, 's', 00H, '.', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, 'f'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 'k', 00H, 's', 00H, '.', 00H, 'p', 00H, 'e'
	DB	00H, 'e', 00H, 'k', 00H, 'i', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, ' ', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'P', 00H, 'o', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@ELJMMCLP@?$AAp?$AAr?$AAe?$AAv?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAA?$AAt?$AAi?$AA?$CI?$AAt?$AA_?$AAb?$AAo?$AAu?$AAn?$AAd?$AAa?$AAr?$AAy?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe@
CONST	SEGMENT
??_C@_1HG@ELJMMCLP@?$AAp?$AAr?$AAe?$AAv?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAA?$AAt?$AAi?$AA?$CI?$AAt?$AA_?$AAb?$AAo?$AAu?$AAn?$AAd?$AAa?$AAr?$AAy?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe@ DB 'p'
	DB	00H, 'r', 00H, 'e', 00H, 'v', 00H, '.', 00H, 'e', 00H, 'l', 00H
	DB	'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'A', 00H, 't'
	DB	00H, 'i', 00H, '(', 00H, 't', 00H, '_', 00H, 'b', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 'd', 00H, 'a', 00H, 'r', 00H, 'y', 00H, '.'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'A', 00H, 't', 00H, 'i', 00H, '(', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'k', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@HHICADMK@?$AAc?$AAu?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAc?$AAp?$AAI?$AAd?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@HHICADMK@?$AAc?$AAu?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAc?$AAp?$AAI?$AAd?$AAx?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'I', 00H, 'd', 00H, 'x', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, 'c', 00H, 'p', 00H, 'I', 00H, 'd', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@CIBAKEOJ@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AAM?$AAa?$AAp?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi@
CONST	SEGMENT
??_C@_1GE@CIBAKEOJ@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AAM?$AAa?$AAp?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi@ DB 'n'
	DB	00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '-'
	DB	00H, '>', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'n', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't'
	DB	00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@LMGOGEHB@?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@LMGOGEHB@?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?$AA@ DB 'c'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, '-', 00H
	DB	'1', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@NBEKDALA@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAi@
CONST	SEGMENT
??_C@_1EO@NBEKDALA@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAi@ DB 'l'
	DB	00H, 'i', 00H, 'm', 00H, 'i', 00H, 't', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, '_', 00H, 'n', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'e', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h'
	DB	00H, '_', 00H, '5', 00H, '6', 00H, '(', 00H, 'i', 00H, 'n', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 't', 00H, 'b', 00H, 'e'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA DD 0470H ; `icu_56::CjkBreakEngine::divideUpDictionaryRange'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$13
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
_TEXT	SEGMENT
tv1025 = -1312						; size = 8
tv988 = -1312						; size = 8
tv962 = -1312						; size = 8
tv912 = -1312						; size = 8
tv882 = -1308						; size = 8
tv865 = -1308						; size = 8
tv1022 = -1304						; size = 8
tv985 = -1304						; size = 8
tv959 = -1304						; size = 8
tv909 = -1304						; size = 8
tv881 = -1300						; size = 4
tv864 = -1300						; size = 4
tv807 = -1300						; size = 4
tv626 = -1300						; size = 4
tv413 = -1300						; size = 4
tv374 = -1300						; size = 4
tv311 = -1300						; size = 4
tv239 = -1300						; size = 4
tv162 = -1300						; size = 4
$T48132 = -1292						; size = 4
$T48133 = -1280						; size = 4
$T48136 = -1268						; size = 4
$T48142 = -1256						; size = 4
$T48116 = -1244						; size = 4
$T48117 = -1232						; size = 4
$T48120 = -1220						; size = 4
$T48122 = -1208						; size = 4
$T48123 = -1196						; size = 4
$T48126 = -1184						; size = 4
_utextPos$40109 = -980					; size = 4
_cpPos$40108 = -968					; size = 4
_i$40104 = -956						; size = 4
_i$40096 = -944						; size = 4
_numBreaks$ = -932					; size = 4
_t_boundary$ = -920					; size = 20
_newSnlp$40088 = -892					; size = 4
_j$40083 = -880						; size = 4
_katakanaRunLength$40081 = -868				; size = 4
_is_katakana$40080 = -853				; size = 1
_is_prev_katakana$40079 = -841				; size = 1
_ln_j_i$40076 = -832					; size = 4
_newSnlp$40073 = -820					; size = 4
_j$40069 = -808						; size = 4
_count$40066 = -796					; size = 4
_i$40060 = -784						; size = 4
_ix$ = -772						; size = 4
_fu$ = -760						; size = 112
_lengths$ = -640					; size = 20
_values$ = -612						; size = 20
_maxWordSize$ = -584					; size = 4
_i$40050 = -572						; size = 4
_prev$ = -560						; size = 20
_i$40045 = -532						; size = 4
_bestSnlp$ = -520					; size = 20
_cuIdx$40035 = -492					; size = 4
_cpIdx$40034 = -480					; size = 4
_hadExistingMap$40026 = -465				; size = 1
_numCodePts$ = -456					; size = 4
_nativeEnd$40023 = -444					; size = 4
_fragmentOriginalStart$40016 = -432			; size = 4
_c$40010 = -420						; size = 4
_fragmentStartI$40009 = -408				; size = 4
_srcI$40005 = -396					; size = 4
_normalizedFragment$40004 = -384			; size = 64
_fragment$40003 = -312					; size = 64
_normalizedMap$40000 = -240				; size = 4
_normalizedInput$39994 = -228				; size = 64
_c$39987 = -156						; size = 4
_nativePosition$39986 = -144				; size = 4
_limit$39971 = -132					; size = 4
_status$ = -120						; size = 4
_inputMap$ = -108					; size = 4
_inString$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_inText$ = 8						; size = 4
_rangeStart$ = 12					; size = 4
_rangeEnd$ = 16						; size = 4
_foundBreaks$ = 20					; size = 4
?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z PROC ; icu_56::CjkBreakEngine::divideUpDictionaryRange, COMDAT
; _this$ = ecx
; Line 1136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1300				; 00000514H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1312]
	mov	ecx, 325				; 00000145H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1137
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN60@divideUpDi@5
; Line 1138
	xor	eax, eax
	jmp	$LN61@divideUpDi@5
$LN60@divideUpDi@5:
; Line 1142
	lea	ecx, DWORD PTR _inString$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1146
	push	0
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1148
	mov	DWORD PTR _status$[ebp], 0
; Line 1155
	push	2
	call	?utext_i32_flag@icu_56@@YAHH@Z		; icu_56::utext_i32_flag
	add	esp, 4
	mov	ecx, DWORD PTR _inText$[ebp]
	and	eax, DWORD PTR [ecx+8]
	je	$LN59@divideUpDi@5
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	mov	ecx, DWORD PTR _inText$[ebp]
	mov	DWORD PTR tv864[ebp], ecx
	mov	DWORD PTR tv865[ebp], eax
	mov	DWORD PTR tv865[ebp+4], edx
	mov	edx, DWORD PTR tv864[ebp]
	mov	eax, DWORD PTR [edx+36]
	cmp	eax, DWORD PTR tv865[ebp+4]
	jg	$LN59@divideUpDi@5
	jl	SHORT $LN95@divideUpDi@5
	mov	ecx, DWORD PTR tv864[ebp]
	mov	edx, DWORD PTR [ecx+32]
	cmp	edx, DWORD PTR tv865[ebp]
	ja	$LN59@divideUpDi@5
$LN95@divideUpDi@5:
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	cdq
	mov	ecx, DWORD PTR _inText$[ebp]
	mov	DWORD PTR tv881[ebp], ecx
	mov	DWORD PTR tv882[ebp], eax
	mov	DWORD PTR tv882[ebp+4], edx
	mov	edx, DWORD PTR tv881[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR tv882[ebp+4]
	jl	$LN59@divideUpDi@5
	jg	SHORT $LN96@divideUpDi@5
	mov	ecx, DWORD PTR tv881[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR tv882[ebp]
	jb	$LN59@divideUpDi@5
$LN96@divideUpDi@5:
	mov	eax, DWORD PTR _inText$[ebp]
	mov	eax, DWORD PTR [eax+28]
	cdq
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	cdq
	mov	edi, DWORD PTR _inText$[ebp]
	sub	eax, DWORD PTR [edi+32]
	sbb	edx, DWORD PTR [edi+36]
	mov	DWORD PTR tv909[ebp], ecx
	mov	DWORD PTR tv909[ebp+4], esi
	mov	DWORD PTR tv912[ebp], eax
	mov	DWORD PTR tv912[ebp+4], edx
	mov	edx, DWORD PTR tv909[ebp+4]
	cmp	edx, DWORD PTR tv912[ebp+4]
	jl	SHORT $LN59@divideUpDi@5
	jg	SHORT $LN97@divideUpDi@5
	mov	eax, DWORD PTR tv909[ebp]
	cmp	eax, DWORD PTR tv912[ebp]
	jb	SHORT $LN59@divideUpDi@5
$LN97@divideUpDi@5:
; Line 1161
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	sub	eax, DWORD PTR _rangeStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inText$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _rangeStart$[ebp]
	lea	esi, DWORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _inText$[ebp]
	push	0
	push	2
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR [ecx+32]
	push	eax
	call	__allmul
	sub	esi, eax
	push	esi
	push	0
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z ; icu_56::UnicodeString::setTo
; Line 1162
	jmp	$LN58@divideUpDi@5
$LN59@divideUpDi@5:
; Line 1165
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 1166
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	mov	DWORD PTR _limit$39971[ebp], eax
; Line 1167
	mov	eax, DWORD PTR _limit$39971[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR tv959[ebp], esi
	mov	DWORD PTR tv959[ebp+4], edi
	mov	DWORD PTR tv962[ebp], eax
	mov	DWORD PTR tv962[ebp+4], edx
	mov	ecx, DWORD PTR tv959[ebp+4]
	cmp	ecx, DWORD PTR tv962[ebp+4]
	jl	SHORT $LN63@divideUpDi@5
	jg	SHORT $LN98@divideUpDi@5
	mov	edx, DWORD PTR tv959[ebp]
	cmp	edx, DWORD PTR tv962[ebp]
	jbe	SHORT $LN63@divideUpDi@5
$LN98@divideUpDi@5:
	mov	eax, DWORD PTR ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
	add	eax, 31					; 0000001fH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EO@NBEKDALA@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAi@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN63@divideUpDi@5:
; Line 1168
	mov	eax, DWORD PTR _limit$39971[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR tv985[ebp], esi
	mov	DWORD PTR tv985[ebp+4], edi
	mov	DWORD PTR tv988[ebp], eax
	mov	DWORD PTR tv988[ebp+4], edx
	mov	ecx, DWORD PTR tv985[ebp+4]
	cmp	ecx, DWORD PTR tv988[ebp+4]
	jl	SHORT $LN57@divideUpDi@5
	jg	SHORT $LN99@divideUpDi@5
	mov	edx, DWORD PTR tv985[ebp]
	cmp	edx, DWORD PTR tv988[ebp]
	jbe	SHORT $LN57@divideUpDi@5
$LN99@divideUpDi@5:
; Line 1169
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR _limit$39971[ebp], eax
$LN57@divideUpDi@5:
; Line 1171
	push	20					; 00000014H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T48117[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T48117[ebp], 0
	je	SHORT $LN64@divideUpDi@5
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48117[ebp]
	call	??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN65@divideUpDi@5
$LN64@divideUpDi@5:
	mov	DWORD PTR tv162[ebp], 0
$LN65@divideUpDi@5:
	mov	ecx, DWORD PTR tv162[ebp]
	mov	DWORD PTR $T48116[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T48116[ebp]
	push	eax
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UVector32>::adoptInsteadAndCheckErrorCode
; Line 1172
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN55@divideUpDi@5
; Line 1173
	mov	DWORD PTR $T48120[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T48120[ebp]
	jmp	$LN61@divideUpDi@5
$LN55@divideUpDi@5:
; Line 1175
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _limit$39971[ebp]
	cdq
	mov	DWORD PTR tv1022[ebp], ecx
	mov	DWORD PTR tv1022[ebp+4], esi
	mov	DWORD PTR tv1025[ebp], eax
	mov	DWORD PTR tv1025[ebp+4], edx
	mov	edx, DWORD PTR tv1022[ebp+4]
	cmp	edx, DWORD PTR tv1025[ebp+4]
	jg	$LN54@divideUpDi@5
	jl	SHORT $LN100@divideUpDi@5
	mov	eax, DWORD PTR tv1022[ebp]
	cmp	eax, DWORD PTR tv1025[ebp]
	jae	$LN54@divideUpDi@5
$LN100@divideUpDi@5:
; Line 1176
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _nativePosition$39986[ebp], eax
; Line 1177
	mov	eax, DWORD PTR _inText$[ebp]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR _c$39987[ebp], eax
; Line 1178
	cmp	DWORD PTR _c$39987[ebp], -1
	jne	SHORT $LN66@divideUpDi@5
	mov	eax, DWORD PTR ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
	add	eax, 42					; 0000002aH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BE@LMGOGEHB@?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN66@divideUpDi@5:
; Line 1179
	mov	eax, DWORD PTR _c$39987[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
$LN53@divideUpDi@5:
; Line 1180
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?size@UVector32@icu_56@@QBEHXZ		; icu_56::UVector32::size
	mov	esi, eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	jge	SHORT $LN52@divideUpDi@5
; Line 1181
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nativePosition$39986[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1182
	jmp	SHORT $LN53@divideUpDi@5
$LN52@divideUpDi@5:
; Line 1183
	jmp	$LN55@divideUpDi@5
$LN54@divideUpDi@5:
; Line 1184
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$39971[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
$LN58@divideUpDi@5:
; Line 1188
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+272]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+272]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN51@divideUpDi@5
; Line 1189
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1191
	push	20					; 00000014H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T48123[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T48123[ebp], 0
	je	SHORT $LN67@divideUpDi@5
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48123[ebp]
	call	??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	DWORD PTR tv239[ebp], eax
	jmp	SHORT $LN68@divideUpDi@5
$LN67@divideUpDi@5:
	mov	DWORD PTR tv239[ebp], 0
$LN68@divideUpDi@5:
	mov	ecx, DWORD PTR tv239[ebp]
	mov	DWORD PTR $T48122[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T48122[ebp]
	push	eax
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1192
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN50@divideUpDi@5
; Line 1193
	mov	DWORD PTR $T48126[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T48126[ebp]
	jmp	$LN61@divideUpDi@5
$LN50@divideUpDi@5:
; Line 1196
	lea	ecx, DWORD PTR _fragment$40003[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1197
	lea	ecx, DWORD PTR _normalizedFragment$40004[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 1198
	mov	DWORD PTR _srcI$40005[ebp], 0
$LN49@divideUpDi@5:
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _srcI$40005[ebp], eax
	jge	$LN48@divideUpDi@5
; Line 1199
	lea	ecx, DWORD PTR _fragment$40003[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
; Line 1200
	mov	eax, DWORD PTR _srcI$40005[ebp]
	mov	DWORD PTR _fragmentStartI$40009[ebp], eax
; Line 1201
	mov	eax, DWORD PTR _srcI$40005[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	DWORD PTR _c$40010[ebp], eax
$LN47@divideUpDi@5:
; Line 1203
	mov	eax, DWORD PTR _c$40010[ebp]
	push	eax
	lea	ecx, DWORD PTR _fragment$40003[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 1204
	push	1
	mov	eax, DWORD PTR _srcI$40005[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::moveIndex32
	mov	DWORD PTR _srcI$40005[ebp], eax
; Line 1205
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _srcI$40005[ebp], eax
	jne	SHORT $LN45@divideUpDi@5
; Line 1206
	jmp	SHORT $LN46@divideUpDi@5
$LN45@divideUpDi@5:
; Line 1208
	mov	eax, DWORD PTR _srcI$40005[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	DWORD PTR _c$40010[ebp], eax
; Line 1209
	mov	esi, esp
	mov	eax, DWORD PTR _c$40010[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+272]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@divideUpDi@5
; Line 1210
	jmp	SHORT $LN46@divideUpDi@5
$LN44@divideUpDi@5:
; Line 1212
	jmp	$LN47@divideUpDi@5
$LN46@divideUpDi@5:
; Line 1213
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _normalizedFragment$40004[ebp]
	push	ecx
	lea	edx, DWORD PTR _fragment$40003[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+272]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1214
	lea	eax, DWORD PTR _normalizedFragment$40004[ebp]
	push	eax
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::UnicodeString::append
; Line 1219
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN69@divideUpDi@5
	mov	ecx, DWORD PTR _fragmentStartI$40009[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	DWORD PTR tv311[ebp], eax
	jmp	SHORT $LN70@divideUpDi@5
$LN69@divideUpDi@5:
	mov	edx, DWORD PTR _fragmentStartI$40009[ebp]
	add	edx, DWORD PTR _rangeStart$[ebp]
	mov	DWORD PTR tv311[ebp], edx
$LN70@divideUpDi@5:
	mov	eax, DWORD PTR tv311[ebp]
	mov	DWORD PTR _fragmentOriginalStart$40016[ebp], eax
$LN43@divideUpDi@5:
; Line 1220
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?size@UVector32@icu_56@@QBEHXZ		; icu_56::UVector32::size
	mov	esi, eax
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	jge	SHORT $LN42@divideUpDi@5
; Line 1221
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fragmentOriginalStart$40016[ebp]
	push	ecx
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1222
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN41@divideUpDi@5
; Line 1223
	jmp	SHORT $LN42@divideUpDi@5
$LN41@divideUpDi@5:
; Line 1225
	jmp	SHORT $LN43@divideUpDi@5
$LN42@divideUpDi@5:
; Line 1226
	jmp	$LN49@divideUpDi@5
$LN48@divideUpDi@5:
; Line 1227
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?size@UVector32@icu_56@@QBEHXZ		; icu_56::UVector32::size
	mov	esi, eax
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	je	SHORT $LN71@divideUpDi@5
	mov	eax, DWORD PTR ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
	add	eax, 91					; 0000005bH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1GE@CIBAKEOJ@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AAM?$AAa?$AAp?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN71@divideUpDi@5:
; Line 1229
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN72@divideUpDi@5
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	DWORD PTR tv374[ebp], eax
	jmp	SHORT $LN73@divideUpDi@5
$LN72@divideUpDi@5:
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	add	eax, DWORD PTR _rangeStart$[ebp]
	mov	DWORD PTR tv374[ebp], eax
$LN73@divideUpDi@5:
	mov	ecx, DWORD PTR tv374[ebp]
	mov	DWORD PTR _nativeEnd$40023[ebp], ecx
; Line 1230
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nativeEnd$40023[ebp]
	push	ecx
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1232
	lea	eax, DWORD PTR _normalizedMap$40000[ebp]
	push	eax
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::LocalPointer<icu_56::UVector32>::moveFrom
; Line 1233
	lea	eax, DWORD PTR _normalizedInput$39994[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1234
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _normalizedFragment$40004[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _fragment$40003[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	call	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN51@divideUpDi@5:
; Line 1236
	push	2147483647				; 7fffffffH
	push	0
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?countChar32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::countChar32
	mov	DWORD PTR _numCodePts$[ebp], eax
; Line 1237
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _numCodePts$[ebp], eax
	je	$LN40@divideUpDi@5
; Line 1243
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid
	mov	BYTE PTR _hadExistingMap$40026[ebp], al
; Line 1244
	movsx	eax, BYTE PTR _hadExistingMap$40026[ebp]
	test	eax, eax
	jne	$LN39@divideUpDi@5
; Line 1245
	push	20					; 00000014H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T48133[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T48133[ebp], 0
	je	SHORT $LN74@divideUpDi@5
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48133[ebp]
	call	??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	DWORD PTR tv413[ebp], eax
	jmp	SHORT $LN75@divideUpDi@5
$LN74@divideUpDi@5:
	mov	DWORD PTR tv413[ebp], 0
$LN75@divideUpDi@5:
	mov	ecx, DWORD PTR tv413[ebp]
	mov	DWORD PTR $T48132[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T48132[ebp]
	push	eax
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UVector32>::adoptInsteadAndCheckErrorCode
; Line 1246
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@divideUpDi@5
; Line 1247
	mov	DWORD PTR $T48136[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T48136[ebp]
	jmp	$LN61@divideUpDi@5
$LN39@divideUpDi@5:
; Line 1250
	mov	DWORD PTR _cpIdx$40034[ebp], 0
; Line 1251
	mov	DWORD PTR _cuIdx$40035[ebp], 0
	jmp	SHORT $LN37@divideUpDi@5
$LN36@divideUpDi@5:
	push	1
	mov	eax, DWORD PTR _cuIdx$40035[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::moveIndex32
	mov	DWORD PTR _cuIdx$40035[ebp], eax
$LN37@divideUpDi@5:
; Line 1252
	mov	eax, DWORD PTR _cuIdx$40035[ebp]
	cmp	eax, DWORD PTR _cpIdx$40034[ebp]
	jge	SHORT $LN76@divideUpDi@5
	mov	ecx, DWORD PTR ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
	add	ecx, 116				; 00000074H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BO@HHICADMK@?$AAc?$AAu?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAc?$AAp?$AAI?$AAd?$AAx?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN76@divideUpDi@5:
; Line 1253
	movsx	eax, BYTE PTR _hadExistingMap$40026[ebp]
	test	eax, eax
	je	SHORT $LN34@divideUpDi@5
; Line 1254
	mov	eax, DWORD PTR _cpIdx$40034[ebp]
	push	eax
	mov	ecx, DWORD PTR _cuIdx$40035[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	push	eax
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
; Line 1255
	jmp	SHORT $LN33@divideUpDi@5
$LN34@divideUpDi@5:
; Line 1256
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cuIdx$40035[ebp]
	add	ecx, DWORD PTR _rangeStart$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
$LN33@divideUpDi@5:
; Line 1258
	mov	eax, DWORD PTR _cpIdx$40034[ebp]
	add	eax, 1
	mov	DWORD PTR _cpIdx$40034[ebp], eax
; Line 1259
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _cuIdx$40035[ebp], eax
	jne	SHORT $LN32@divideUpDi@5
; Line 1260
	jmp	SHORT $LN40@divideUpDi@5
$LN32@divideUpDi@5:
; Line 1262
	jmp	$LN36@divideUpDi@5
$LN40@divideUpDi@5:
; Line 1267
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numCodePts$[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 1268
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1269
	mov	DWORD PTR _i$40045[ebp], 1
	jmp	SHORT $LN31@divideUpDi@5
$LN30@divideUpDi@5:
	mov	eax, DWORD PTR _i$40045[ebp]
	add	eax, 1
	mov	DWORD PTR _i$40045[ebp], eax
$LN31@divideUpDi@5:
	mov	eax, DWORD PTR _i$40045[ebp]
	cmp	eax, DWORD PTR _numCodePts$[ebp]
	jg	SHORT $LN29@divideUpDi@5
; Line 1270
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1271
	jmp	SHORT $LN30@divideUpDi@5
$LN29@divideUpDi@5:
; Line 1276
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numCodePts$[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _prev$[ebp]
	call	??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 1277
	mov	DWORD PTR _i$40050[ebp], 0
	jmp	SHORT $LN28@divideUpDi@5
$LN27@divideUpDi@5:
	mov	eax, DWORD PTR _i$40050[ebp]
	add	eax, 1
	mov	DWORD PTR _i$40050[ebp], eax
$LN28@divideUpDi@5:
	mov	eax, DWORD PTR _i$40050[ebp]
	cmp	eax, DWORD PTR _numCodePts$[ebp]
	jg	SHORT $LN26@divideUpDi@5
; Line 1278
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _prev$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1279
	jmp	SHORT $LN27@divideUpDi@5
$LN26@divideUpDi@5:
; Line 1281
	mov	DWORD PTR _maxWordSize$[ebp], 20	; 00000014H
; Line 1282
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numCodePts$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _values$[ebp]
	call	??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 1283
	mov	eax, DWORD PTR _numCodePts$[ebp]
	push	eax
	lea	ecx, DWORD PTR _values$[ebp]
	call	?setSize@UVector32@icu_56@@QAEXH@Z	; icu_56::UVector32::setSize
; Line 1284
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numCodePts$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
; Line 1285
	mov	eax, DWORD PTR _numCodePts$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	?setSize@UVector32@icu_56@@QAEXH@Z	; icu_56::UVector32::setSize
; Line 1287
	mov	DWORD PTR _fu$[ebp], 878368812		; 345ad82cH
	mov	DWORD PTR _fu$[ebp+4], 0
	mov	DWORD PTR _fu$[ebp+8], 0
	mov	DWORD PTR _fu$[ebp+12], 112		; 00000070H
	mov	DWORD PTR _fu$[ebp+16], 0
	mov	DWORD PTR _fu$[ebp+20], 0
	mov	DWORD PTR _fu$[ebp+24], 0
	mov	DWORD PTR _fu$[ebp+28], 0
	mov	DWORD PTR _fu$[ebp+32], 0
	mov	DWORD PTR _fu$[ebp+36], 0
	mov	DWORD PTR _fu$[ebp+40], 0
	mov	DWORD PTR _fu$[ebp+44], 0
	mov	DWORD PTR _fu$[ebp+48], 0
	mov	DWORD PTR _fu$[ebp+52], 0
	mov	DWORD PTR _fu$[ebp+56], 0
	mov	DWORD PTR _fu$[ebp+60], 0
	mov	DWORD PTR _fu$[ebp+64], 0
	mov	DWORD PTR _fu$[ebp+68], 0
	mov	DWORD PTR _fu$[ebp+72], 0
	mov	DWORD PTR _fu$[ebp+76], 0
	mov	DWORD PTR _fu$[ebp+80], 0
	mov	DWORD PTR _fu$[ebp+84], 0
	mov	DWORD PTR _fu$[ebp+88], 0
	mov	DWORD PTR _fu$[ebp+92], 0
	mov	DWORD PTR _fu$[ebp+96], 0
	mov	DWORD PTR _fu$[ebp+100], 0
	mov	DWORD PTR _fu$[ebp+104], 0
	mov	DWORD PTR _fu$[ebp+108], 0
; Line 1288
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fu$[ebp]
	push	edx
	call	_utext_openUnicodeString_56
	add	esp, 12					; 0000000cH
; Line 1295
	mov	DWORD PTR _ix$[ebp], 0
; Line 1296
	mov	DWORD PTR _i$40060[ebp], 0
	jmp	SHORT $LN25@divideUpDi@5
$LN24@divideUpDi@5:
	mov	eax, DWORD PTR _i$40060[ebp]
	add	eax, 1
	mov	DWORD PTR _i$40060[ebp], eax
	push	1
	mov	ecx, DWORD PTR _ix$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::moveIndex32
	mov	DWORD PTR _ix$[ebp], eax
$LN25@divideUpDi@5:
	mov	eax, DWORD PTR _i$40060[ebp]
	cmp	eax, DWORD PTR _numCodePts$[ebp]
	jge	$LN23@divideUpDi@5
; Line 1297
	mov	eax, DWORD PTR _i$40060[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	cmp	eax, -1
	jne	SHORT $LN22@divideUpDi@5
; Line 1298
	jmp	SHORT $LN24@divideUpDi@5
$LN22@divideUpDi@5:
; Line 1302
	mov	eax, DWORD PTR _ix$[ebp]
	cdq
	push	edx
	push	eax
	lea	eax, DWORD PTR _fu$[ebp]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 1304
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _values$[ebp]
	call	?getBuffer@UVector32@icu_56@@QBEPAHXZ	; icu_56::UVector32::getBuffer
	push	eax
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	?getBuffer@UVector32@icu_56@@QBEPAHXZ	; icu_56::UVector32::getBuffer
	push	eax
	push	0
	mov	eax, DWORD PTR _numCodePts$[ebp]
	push	eax
	push	20					; 00000014H
	lea	ecx, DWORD PTR _fu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+268]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+268]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$40066[ebp], eax
; Line 1314
	cmp	DWORD PTR _count$40066[ebp], 0
	je	SHORT $LN20@divideUpDi@5
	push	0
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	cmp	eax, 1
	je	SHORT $LN21@divideUpDi@5
$LN20@divideUpDi@5:
	mov	eax, DWORD PTR _ix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN21@divideUpDi@5
; Line 1315
	mov	eax, DWORD PTR _count$40066[ebp]
	push	eax
	push	255					; 000000ffH
	lea	ecx, DWORD PTR _values$[ebp]
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
; Line 1316
	mov	eax, DWORD PTR _count$40066[ebp]
	mov	DWORD PTR tv626[ebp], eax
	mov	ecx, DWORD PTR _count$40066[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$40066[ebp], ecx
	mov	edx, DWORD PTR tv626[ebp]
	push	edx
	push	1
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
$LN21@divideUpDi@5:
; Line 1319
	mov	DWORD PTR _j$40069[ebp], 0
	jmp	SHORT $LN19@divideUpDi@5
$LN18@divideUpDi@5:
	mov	eax, DWORD PTR _j$40069[ebp]
	add	eax, 1
	mov	DWORD PTR _j$40069[ebp], eax
$LN19@divideUpDi@5:
	mov	eax, DWORD PTR _j$40069[ebp]
	cmp	eax, DWORD PTR _count$40066[ebp]
	jge	$LN17@divideUpDi@5
; Line 1320
	mov	eax, DWORD PTR _i$40060[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	esi, eax
	mov	ecx, DWORD PTR _j$40069[ebp]
	push	ecx
	lea	ecx, DWORD PTR _values$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	add	esi, eax
	mov	DWORD PTR _newSnlp$40073[ebp], esi
; Line 1321
	mov	eax, DWORD PTR _j$40069[ebp]
	push	eax
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	add	eax, DWORD PTR _i$40060[ebp]
	mov	DWORD PTR _ln_j_i$40076[ebp], eax
; Line 1322
	mov	eax, DWORD PTR _ln_j_i$40076[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	cmp	DWORD PTR _newSnlp$40073[ebp], eax
	jae	SHORT $LN16@divideUpDi@5
; Line 1323
	mov	eax, DWORD PTR _ln_j_i$40076[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSnlp$40073[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
; Line 1324
	mov	eax, DWORD PTR _ln_j_i$40076[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$40060[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prev$[ebp]
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
$LN16@divideUpDi@5:
; Line 1326
	jmp	$LN18@divideUpDi@5
$LN17@divideUpDi@5:
; Line 1334
	mov	BYTE PTR _is_prev_katakana$40079[ebp], 0
; Line 1335
	mov	eax, DWORD PTR _ix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	push	eax
	call	?isKatakana@icu_56@@YA_NG@Z		; icu_56::isKatakana
	add	esp, 4
	mov	BYTE PTR _is_katakana$40080[ebp], al
; Line 1336
	mov	DWORD PTR _katakanaRunLength$40081[ebp], 1
; Line 1337
	movzx	eax, BYTE PTR _is_prev_katakana$40079[ebp]
	test	eax, eax
	jne	$LN15@divideUpDi@5
	movzx	eax, BYTE PTR _is_katakana$40080[ebp]
	test	eax, eax
	je	$LN15@divideUpDi@5
; Line 1338
	push	1
	mov	eax, DWORD PTR _ix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::moveIndex32
	mov	DWORD PTR _j$40083[ebp], eax
$LN14@divideUpDi@5:
; Line 1341
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _j$40083[ebp], eax
	jge	SHORT $LN13@divideUpDi@5
	cmp	DWORD PTR _katakanaRunLength$40081[ebp], 20 ; 00000014H
	jge	SHORT $LN13@divideUpDi@5
	mov	eax, DWORD PTR _j$40083[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	push	eax
	call	?isKatakana@icu_56@@YA_NG@Z		; icu_56::isKatakana
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@divideUpDi@5
; Line 1342
	push	1
	mov	eax, DWORD PTR _j$40083[ebp]
	push	eax
	lea	ecx, DWORD PTR _inString$[ebp]
	call	?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::moveIndex32
	mov	DWORD PTR _j$40083[ebp], eax
; Line 1343
	mov	eax, DWORD PTR _katakanaRunLength$40081[ebp]
	add	eax, 1
	mov	DWORD PTR _katakanaRunLength$40081[ebp], eax
; Line 1344
	jmp	SHORT $LN14@divideUpDi@5
$LN13@divideUpDi@5:
; Line 1345
	cmp	DWORD PTR _katakanaRunLength$40081[ebp], 20 ; 00000014H
	jge	SHORT $LN15@divideUpDi@5
; Line 1346
	mov	eax, DWORD PTR _i$40060[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	esi, eax
	mov	ecx, DWORD PTR _katakanaRunLength$40081[ebp]
	push	ecx
	call	?getKatakanaCost@icu_56@@YAIH@Z		; icu_56::getKatakanaCost
	add	esp, 4
	add	esi, eax
	mov	DWORD PTR _newSnlp$40088[ebp], esi
; Line 1347
	mov	eax, DWORD PTR _j$40083[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	cmp	DWORD PTR _newSnlp$40088[ebp], eax
	jae	SHORT $LN15@divideUpDi@5
; Line 1348
	mov	eax, DWORD PTR _j$40083[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSnlp$40088[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
; Line 1349
	mov	eax, DWORD PTR _i$40060[ebp]
	add	eax, DWORD PTR _katakanaRunLength$40081[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$40060[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prev$[ebp]
	call	?setElementAt@UVector32@icu_56@@QAEXHH@Z ; icu_56::UVector32::setElementAt
$LN15@divideUpDi@5:
; Line 1353
	mov	al, BYTE PTR _is_katakana$40080[ebp]
	mov	BYTE PTR _is_prev_katakana$40079[ebp], al
; Line 1354
	jmp	$LN24@divideUpDi@5
$LN23@divideUpDi@5:
; Line 1355
	lea	eax, DWORD PTR _fu$[ebp]
	push	eax
	call	_utext_close_56
	add	esp, 4
; Line 1361
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numCodePts$[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z ; icu_56::UVector32::UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
; Line 1363
	mov	DWORD PTR _numBreaks$[ebp], 0
; Line 1365
	mov	eax, DWORD PTR _numCodePts$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	cmp	eax, -1
	jne	SHORT $LN10@divideUpDi@5
; Line 1366
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numCodePts$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1367
	mov	eax, DWORD PTR _numBreaks$[ebp]
	add	eax, 1
	mov	DWORD PTR _numBreaks$[ebp], eax
; Line 1368
	jmp	$LN9@divideUpDi@5
$LN10@divideUpDi@5:
; Line 1369
	mov	eax, DWORD PTR _numCodePts$[ebp]
	mov	DWORD PTR _i$40096[ebp], eax
	jmp	SHORT $LN8@divideUpDi@5
$LN7@divideUpDi@5:
	mov	eax, DWORD PTR _i$40096[ebp]
	push	eax
	lea	ecx, DWORD PTR _prev$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	DWORD PTR _i$40096[ebp], eax
$LN8@divideUpDi@5:
	cmp	DWORD PTR _i$40096[ebp], 0
	jle	SHORT $LN6@divideUpDi@5
; Line 1370
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$40096[ebp]
	push	ecx
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1371
	mov	eax, DWORD PTR _numBreaks$[ebp]
	add	eax, 1
	mov	DWORD PTR _numBreaks$[ebp], eax
; Line 1372
	jmp	SHORT $LN7@divideUpDi@5
$LN6@divideUpDi@5:
; Line 1373
	mov	eax, DWORD PTR _numBreaks$[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	push	eax
	lea	ecx, DWORD PTR _prev$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	test	eax, eax
	je	SHORT $LN9@divideUpDi@5
	mov	ecx, DWORD PTR ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
	add	ecx, 237				; 000000edH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1HG@ELJMMCLP@?$AAp?$AAr?$AAe?$AAv?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAA?$AAt?$AAi?$AA?$CI?$AAt?$AA_?$AAb?$AAo?$AAu?$AAn?$AAd?$AAa?$AAr?$AAy?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@divideUpDi@5:
; Line 1378
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	test	eax, eax
	je	SHORT $LN4@divideUpDi@5
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	eax, DWORD PTR _rangeStart$[ebp]
	jge	SHORT $LN5@divideUpDi@5
$LN4@divideUpDi@5:
; Line 1379
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector32::addElement
; Line 1380
	mov	eax, DWORD PTR _numBreaks$[ebp]
	add	eax, 1
	mov	DWORD PTR _numBreaks$[ebp], eax
$LN5@divideUpDi@5:
; Line 1386
	mov	eax, DWORD PTR _numBreaks$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$40104[ebp], eax
	jmp	SHORT $LN3@divideUpDi@5
$LN2@divideUpDi@5:
	mov	eax, DWORD PTR _i$40104[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$40104[ebp], eax
$LN3@divideUpDi@5:
	cmp	DWORD PTR _i$40104[ebp], 0
	jl	$LN1@divideUpDi@5
; Line 1387
	mov	eax, DWORD PTR _i$40104[ebp]
	push	eax
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	DWORD PTR _cpPos$40108[ebp], eax
; Line 1388
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN78@divideUpDi@5
	mov	ecx, DWORD PTR _cpPos$40108[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
	mov	ecx, eax
	call	?elementAti@UVector32@icu_56@@QBEHH@Z	; icu_56::UVector32::elementAti
	mov	DWORD PTR tv807[ebp], eax
	jmp	SHORT $LN79@divideUpDi@5
$LN78@divideUpDi@5:
	mov	edx, DWORD PTR _cpPos$40108[ebp]
	add	edx, DWORD PTR _rangeStart$[ebp]
	mov	DWORD PTR tv807[ebp], edx
$LN79@divideUpDi@5:
	mov	eax, DWORD PTR tv807[ebp]
	mov	DWORD PTR _utextPos$40109[ebp], eax
; Line 1390
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	test	eax, eax
	je	SHORT $LN80@divideUpDi@5
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	eax, DWORD PTR _utextPos$40109[ebp]
	jl	SHORT $LN80@divideUpDi@5
	mov	eax, DWORD PTR ?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA
	add	eax, 254				; 000000feH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1HC@GDEJECAF@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN80@divideUpDi@5:
; Line 1391
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _utextPos$40109[ebp]
	push	ecx
	mov	ecx, DWORD PTR _foundBreaks$[ebp]
	call	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ; icu_56::UStack::push
; Line 1392
	jmp	$LN2@divideUpDi@5
$LN1@divideUpDi@5:
; Line 1396
	mov	eax, DWORD PTR _numBreaks$[ebp]
	mov	DWORD PTR $T48142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	call	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _lengths$[ebp]
	call	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _values$[ebp]
	call	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _prev$[ebp]
	call	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	call	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _inputMap$[ebp]
	call	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inString$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T48142[ebp]
$LN61@divideUpDi@5:
; Line 1397
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN116@divideUpDi@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1312				; 00000520H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN116@divideUpDi@5:
	DD	13					; 0000000dH
	DD	$LN115@divideUpDi@5
$LN115@divideUpDi@5:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN101@divideUpDi@5
	DD	-108					; ffffff94H
	DD	4
	DD	$LN102@divideUpDi@5
	DD	-120					; ffffff88H
	DD	4
	DD	$LN103@divideUpDi@5
	DD	-228					; ffffff1cH
	DD	64					; 00000040H
	DD	$LN104@divideUpDi@5
	DD	-240					; ffffff10H
	DD	4
	DD	$LN105@divideUpDi@5
	DD	-312					; fffffec8H
	DD	64					; 00000040H
	DD	$LN106@divideUpDi@5
	DD	-384					; fffffe80H
	DD	64					; 00000040H
	DD	$LN107@divideUpDi@5
	DD	-520					; fffffdf8H
	DD	20					; 00000014H
	DD	$LN108@divideUpDi@5
	DD	-560					; fffffdd0H
	DD	20					; 00000014H
	DD	$LN109@divideUpDi@5
	DD	-612					; fffffd9cH
	DD	20					; 00000014H
	DD	$LN110@divideUpDi@5
	DD	-640					; fffffd80H
	DD	20					; 00000014H
	DD	$LN111@divideUpDi@5
	DD	-760					; fffffd08H
	DD	112					; 00000070H
	DD	$LN112@divideUpDi@5
	DD	-920					; fffffc68H
	DD	20					; 00000014H
	DD	$LN113@divideUpDi@5
$LN113@divideUpDi@5:
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$LN112@divideUpDi@5:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	0
$LN111@divideUpDi@5:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	0
$LN110@divideUpDi@5:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN109@divideUpDi@5:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	0
$LN108@divideUpDi@5:
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	110					; 0000006eH
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	0
$LN107@divideUpDi@5:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN106@divideUpDi@5:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN105@divideUpDi@5:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
$LN104@divideUpDi@5:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN103@divideUpDi@5:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN102@divideUpDi@5:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
$LN101@divideUpDi@5:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0:
	lea	ecx, DWORD PTR _inString$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$1:
	lea	ecx, DWORD PTR _inputMap$[ebp]
	jmp	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$2:
	mov	eax, DWORD PTR $T48117[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3:
	lea	ecx, DWORD PTR _normalizedInput$39994[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$4:
	mov	eax, DWORD PTR $T48123[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$5:
	lea	ecx, DWORD PTR _normalizedMap$40000[ebp]
	jmp	??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$6:
	lea	ecx, DWORD PTR _fragment$40003[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$7:
	lea	ecx, DWORD PTR _normalizedFragment$40004[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$8:
	mov	eax, DWORD PTR $T48133[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$9:
	lea	ecx, DWORD PTR _bestSnlp$[ebp]
	jmp	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$10:
	lea	ecx, DWORD PTR _prev$[ebp]
	jmp	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$11:
	lea	ecx, DWORD PTR _values$[ebp]
	jmp	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$12:
	lea	ecx, DWORD PTR _lengths$[ebp]
	jmp	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$13:
	lea	ecx, DWORD PTR _t_boundary$[ebp]
	jmp	??1UVector32@icu_56@@UAE@XZ		; icu_56::UVector32::~UVector32
__ehhandler$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z ENDP ; icu_56::CjkBreakEngine::divideUpDictionaryRange
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getKatakanaCost@icu_56@@YAIH@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
_wordLength$ = 8					; size = 4
?getKatakanaCost@icu_56@@YAIH@Z PROC			; icu_56::getKatakanaCost, COMDAT
; File d:\mozilla\intl\icu\source\common\dictbe.cpp
; Line 1104
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1108
	cmp	DWORD PTR _wordLength$[ebp], 8
	jle	SHORT $LN3@getKatakan
	mov	DWORD PTR tv67[ebp], 8192		; 00002000H
	jmp	SHORT $LN4@getKatakan
$LN3@getKatakan:
	mov	eax, DWORD PTR _wordLength$[ebp]
	mov	ecx, DWORD PTR ?katakanaCost@?1??getKatakanaCost@icu_56@@YAIH@Z@4QBIB[eax*4]
	mov	DWORD PTR tv67[ebp], ecx
$LN4@getKatakan:
	mov	eax, DWORD PTR tv67[ebp]
; Line 1109
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getKatakanaCost@icu_56@@YAIH@Z ENDP			; icu_56::getKatakanaCost
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isKatakana@icu_56@@YA_NG@Z
_TEXT	SEGMENT
tv74 = -196						; size = 4
_value$ = 8						; size = 2
?isKatakana@icu_56@@YA_NG@Z PROC			; icu_56::isKatakana, COMDAT
; Line 1111
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1113
	movzx	eax, WORD PTR _value$[ebp]
	cmp	eax, 12449				; 000030a1H
	jb	SHORT $LN3@isKatakana
	movzx	ecx, WORD PTR _value$[ebp]
	cmp	ecx, 12542				; 000030feH
	ja	SHORT $LN3@isKatakana
	movzx	edx, WORD PTR _value$[ebp]
	cmp	edx, 12539				; 000030fbH
	jne	SHORT $LN5@isKatakana
$LN3@isKatakana:
	movzx	eax, WORD PTR _value$[ebp]
	cmp	eax, 65382				; 0000ff66H
	jb	SHORT $LN4@isKatakana
	movzx	ecx, WORD PTR _value$[ebp]
	cmp	ecx, 65439				; 0000ff9fH
	jbe	SHORT $LN5@isKatakana
$LN4@isKatakana:
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN6@isKatakana
$LN5@isKatakana:
	mov	DWORD PTR tv74[ebp], 1
$LN6@isKatakana:
	mov	al, BYTE PTR tv74[ebp]
; Line 1114
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isKatakana@icu_56@@YA_NG@Z ENDP			; icu_56::isKatakana
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?utext_i32_flag@icu_56@@YAHH@Z
_TEXT	SEGMENT
_bitIndex$ = 8						; size = 4
?utext_i32_flag@icu_56@@YAHH@Z PROC			; icu_56::utext_i32_flag, COMDAT
; Line 1120
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1121
	mov	eax, 1
	mov	ecx, DWORD PTR _bitIndex$[ebp]
	shl	eax, cl
; Line 1122
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?utext_i32_flag@icu_56@@YAHH@Z ENDP			; icu_56::utext_i32_flag
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ; icu_56::LocalPointerBase<icu_56::UVector32>::LocalPointerBase<icu_56::UVector32>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z PROC ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\localpointer.h
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ; icu_56::LocalPointerBase<icu_56::UVector32>::LocalPointerBase<icu_56::UVector32>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ENDP ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::~LocalPointerBase<icu_56::UVector32>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ; icu_56::LocalPointerBase<icu_56::UVector32>::LocalPointerBase<icu_56::UVector32>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 209
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalPoint
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalPoint
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalPoint:
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::~LocalPointerBase<icu_56::UVector32>
__ehhandler$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<icu_56::UVector32>::LocalPointer<icu_56::UVector32>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T48219 = -236						; size = 4
$T48220 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T48220[ebp], ecx
	mov	edx, DWORD PTR $T48220[ebp]
	mov	DWORD PTR $T48219[ebp], edx
	cmp	DWORD PTR $T48219[ebp], 0
	je	SHORT $LN3@LocalPoint@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48219[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48219[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@2
$LN3@LocalPoint@2:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@2:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::~LocalPointerBase<icu_56::UVector32>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector32>::~LocalPointerBase<icu_56::UVector32>
__ehhandler$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::UVector32>::~LocalPointer<icu_56::UVector32>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z
_TEXT	SEGMENT
tv79 = -232						; size = 4
$T48232 = -224						; size = 4
$T48233 = -212						; size = 4
_this$ = -8						; size = 4
_src$ = 8						; size = 4
?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z PROC ; icu_56::LocalPointer<icu_56::UVector32>::moveFrom, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T48233[ebp], ecx
	mov	edx, DWORD PTR $T48233[ebp]
	mov	DWORD PTR $T48232[ebp], edx
	cmp	DWORD PTR $T48232[ebp], 0
	je	SHORT $LN3@moveFrom
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48232[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48232[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@moveFrom
$LN3@moveFrom:
	mov	DWORD PTR tv79[ebp], 0
$LN4@moveFrom:
; Line 255
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 256
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], 0
; Line 257
	mov	eax, DWORD PTR _this$[ebp]
; Line 258
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z ENDP ; icu_56::LocalPointer<icu_56::UVector32>::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv132 = -256						; size = 4
tv83 = -256						; size = 4
$T48238 = -248						; size = 4
$T48239 = -236						; size = 4
$T48242 = -224						; size = 4
$T48243 = -212						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<icu_56::UVector32>::adoptInsteadAndCheckErrorCode, COMDAT
; _this$ = ecx
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 306
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@adoptInste
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T48239[ebp], ecx
	mov	edx, DWORD PTR $T48239[ebp]
	mov	DWORD PTR $T48238[ebp], edx
	cmp	DWORD PTR $T48238[ebp], 0
	je	SHORT $LN6@adoptInste
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48238[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48238[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN7@adoptInste
$LN6@adoptInste:
	mov	DWORD PTR tv83[ebp], 0
$LN7@adoptInste:
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 309
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@adoptInste
; Line 310
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@adoptInste:
; Line 312
	jmp	SHORT $LN4@adoptInste
$LN3@adoptInste:
; Line 313
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T48243[ebp], eax
	mov	ecx, DWORD PTR $T48243[ebp]
	mov	DWORD PTR $T48242[ebp], ecx
	cmp	DWORD PTR $T48242[ebp], 0
	je	SHORT $LN8@adoptInste
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48242[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48242[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN4@adoptInste
$LN8@adoptInste:
	mov	DWORD PTR tv132[ebp], 0
$LN4@adoptInste:
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<icu_56::UVector32>::adoptInsteadAndCheckErrorCode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ PROC ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ ENDP ; icu_56::LocalPointerBase<icu_56::UVector32>::isValid
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::UVector32>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::UVector32>::LocalPointerBase<icu_56::UVector32>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\localpointer.h
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::UVector32>::LocalPointerBase<icu_56::UVector32>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::UVector32>::~LocalPointerBase<icu_56::UVector32>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::UVector32>::~LocalPointerBase<icu_56::UVector32>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z PROC		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeFilter@icu_56@@UAEPAXI@Z
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z ENDP		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
END

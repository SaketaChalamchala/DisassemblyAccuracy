; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\wintz.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DJ@JKGGCIEE@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@ ; `string'
PUBLIC	??_C@_0DG@MFEMHAMF@SOFTWARE?2Microsoft?2Windows?2Curre@ ; `string'
PUBLIC	??_C@_0DM@COEJKJAG@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@ ; `string'
PUBLIC	??_C@_0DF@JEJGGGGH@SOFTWARE?2Microsoft?2Windows?2Curre@ ; `string'
_BSS	SEGMENT
_gWinType DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DJ@JKGGCIEE@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@
CONST	SEGMENT
??_C@_0DJ@JKGGCIEE@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@ DB 'SOFTWARE\Mic'
	DB	'rosoft\Windows NT\CurrentVersion\Time Zones\', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MFEMHAMF@SOFTWARE?2Microsoft?2Windows?2Curre@
CONST	SEGMENT
??_C@_0DG@MFEMHAMF@SOFTWARE?2Microsoft?2Windows?2Curre@ DB 'SOFTWARE\Micr'
	DB	'osoft\Windows\CurrentVersion\Time Zones\', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@COEJKJAG@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@
CONST	SEGMENT
??_C@_0DM@COEJKJAG@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@ DB 'SOFTWARE\Mic'
	DB	'rosoft\Windows NT\CurrentVersion\Time Zones\GMT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JEJGGGGH@SOFTWARE?2Microsoft?2Windows?2Curre@
CONST	SEGMENT
??_C@_0DF@JEJGGGGH@SOFTWARE?2Microsoft?2Windows?2Curre@ DB 'SOFTWARE\Micr'
	DB	'osoft\Windows\CurrentVersion\Time Zones', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_CURRENT_ZONE_REGKEY DB 'SYSTEM\CurrentControlSet\Control\TimeZoneInforma'
	DB	'tion\', 00H
	ORG $+2
_STANDARD_TIME_REGKEY DB ' Standard Time', 00H
	ORG $+1
_TZI_REGKEY DB	'TZI', 00H
_STD_REGKEY DB	'Std', 00H
_WIN_TYPE_PROBE_REGKEY DD FLAT:??_C@_0DF@JEJGGGGH@SOFTWARE?2Microsoft?2Windows?2Curre@
	DD	FLAT:??_C@_0DM@COEJKJAG@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@
_TZ_REGKEY DD	FLAT:??_C@_0DG@MFEMHAMF@SOFTWARE?2Microsoft?2Windows?2Curre@
	DD	FLAT:??_C@_0DJ@JKGGCIEE@SOFTWARE?2Microsoft?2Windows?5NT?2Cu@
CONST	ENDS
PUBLIC	??_C@_03MMKGDKGA@001?$AA@			; `string'
PUBLIC	??_C@_0N@GPCNLNJ@mapTimezones?$AA@		; `string'
PUBLIC	??_C@_0N@IHBGPIIF@windowsZones?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_uprv_detectWindowsTimeZone
EXTRN	_strcpy:PROC
EXTRN	_uprv_calloc_56:PROC
EXTRN	_strlen:PROC
EXTRN	_ures_close_56:PROC
EXTRN	_strcmp:PROC
EXTRN	_memcmp:PROC
EXTRN	_ures_getKey_56:PROC
EXTRN	_ures_getNextResource_56:PROC
EXTRN	_ures_hasNext_56:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	__imp__GetVersionExA@4:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_openDirect_56:PROC
EXTRN	_u_strToUTF8_56:PROC
EXTRN	__imp__GetGeoInfoW@20:PROC
EXTRN	__imp__GetUserGeoID@4:PROC
EXTRN	__imp__wcstombs:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	__imp__GetTimeZoneInformation@4:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_03MMKGDKGA@001?$AA@
; File d:\mozilla\intl\icu\source\common\wintz.c
CONST	SEGMENT
??_C@_03MMKGDKGA@001?$AA@ DB '001', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GPCNLNJ@mapTimezones?$AA@
CONST	SEGMENT
??_C@_0N@GPCNLNJ@mapTimezones?$AA@ DB 'mapTimezones', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHBGPIIF@windowsZones?$AA@
CONST	SEGMENT
??_C@_0N@IHBGPIIF@windowsZones?$AA@ DB 'windowsZones', 00H ; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_detectWindowsTimeZone
_TEXT	SEGMENT
_index$43054 = -816					; size = 4
_icuTZ$43043 = -804					; size = 4
_winTZ$43036 = -792					; size = 4
_winid$43035 = -780					; size = 4
_idFound$43034 = -765					; size = 1
_index$43025 = -756					; size = 4
_icuTZ$43017 = -744					; size = 4
_winTZ$43014 = -732					; size = 4
_osVerInfo$ = -720					; size = 148
_tryPreVistaFallback$ = -564				; size = 4
_isVistaOrHigher$ = -552				; size = 4
_apiTZI$ = -540						; size = 172
_tziReg$ = -360						; size = 44
_tziKey$ = -308						; size = 44
_result$ = -256						; size = 4
_ISOcodeA$ = -244					; size = 3
_ISOcodeW$ = -232					; size = 6
_errorCode$ = -216					; size = 4
_id$ = -204						; size = 4
_len$ = -192						; size = 4
_tmpid$ = -180						; size = 40
_regStdName$ = -132					; size = 40
_apiStdName$ = -84					; size = 40
_icuid$ = -36						; size = 4
_bundle$ = -24						; size = 4
_status$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_uprv_detectWindowsTimeZone PROC			; COMDAT
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 1012				; 000003f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1012]
	mov	ecx, 253				; 000000fdH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 274
	mov	DWORD PTR _status$[ebp], 0
; Line 275
	mov	DWORD PTR _bundle$[ebp], 0
; Line 276
	mov	DWORD PTR _icuid$[ebp], 0
; Line 298
	push	172					; 000000acH
	push	0
	lea	eax, DWORD PTR _apiTZI$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 299
	push	44					; 0000002cH
	push	0
	lea	eax, DWORD PTR _tziKey$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 300
	push	44					; 0000002cH
	push	0
	lea	eax, DWORD PTR _tziReg$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 301
	mov	esi, esp
	lea	eax, DWORD PTR _apiTZI$[ebp]
	push	eax
	call	DWORD PTR __imp__GetTimeZoneInformation@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 302
	mov	eax, DWORD PTR _apiTZI$[ebp]
	mov	DWORD PTR _tziKey$[ebp], eax
; Line 304
	push	1
	lea	eax, DWORD PTR _apiTZI$[ebp+68]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	16					; 00000010H
	lea	ecx, DWORD PTR _apiTZI$[ebp+68]
	push	ecx
	lea	edx, DWORD PTR _tziKey$[ebp+12]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 306
	push	1
	lea	eax, DWORD PTR _apiTZI$[ebp+152]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	16					; 00000010H
	lea	ecx, DWORD PTR _apiTZI$[ebp+152]
	push	ecx
	lea	edx, DWORD PTR _tziKey$[ebp+28]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 309
	push	40					; 00000028H
	push	0
	lea	eax, DWORD PTR _apiStdName$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 310
	mov	esi, esp
	push	40					; 00000028H
	lea	eax, DWORD PTR _apiTZI$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _apiStdName$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcstombs
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 312
	mov	BYTE PTR _tmpid$[ebp], 0
; Line 314
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__GetUserGeoID@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _id$[ebp], eax
; Line 315
	mov	esi, esp
	push	0
	push	3
	lea	eax, DWORD PTR _ISOcodeW$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetGeoInfoW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _errorCode$[ebp], eax
; Line 316
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3
	lea	ecx, DWORD PTR _ISOcodeW$[ebp]
	push	ecx
	push	0
	push	3
	lea	edx, DWORD PTR _ISOcodeA$[ebp]
	push	edx
	call	_u_strToUTF8_56
	add	esp, 24					; 00000018H
; Line 318
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@IHBGPIIF@windowsZones?$AA@
	push	0
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
; Line 319
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	push	OFFSET ??_C@_0N@GPCNLNJ@mapTimezones?$AA@
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 326
	push	148					; 00000094H
	push	0
	lea	eax, DWORD PTR _osVerInfo$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 327
	mov	DWORD PTR _osVerInfo$[ebp], 148		; 00000094H
; Line 328
	mov	esi, esp
	lea	eax, DWORD PTR _osVerInfo$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 329
	cmp	DWORD PTR _osVerInfo$[ebp+4], 6
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _isVistaOrHigher$[ebp], eax
; Line 330
	mov	DWORD PTR _tryPreVistaFallback$[ebp], 1
; Line 331
	cmp	DWORD PTR _isVistaOrHigher$[ebp], 0
	je	$LN28@uprv_detec
; Line 332
	push	40					; 00000028H
	lea	eax, DWORD PTR _regStdName$[ebp]
	push	eax
	call	_getTZKeyName
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 333
	cmp	DWORD PTR _result$[ebp], 0
	jne	$LN28@uprv_detec
; Line 334
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _regStdName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _winTZ$43014[ebp], eax
; Line 335
	cmp	DWORD PTR _status$[ebp], 0
	jg	$LN28@uprv_detec
; Line 336
	mov	DWORD PTR _icuTZ$43017[ebp], 0
; Line 337
	cmp	DWORD PTR _errorCode$[ebp], 0
	je	SHORT $LN25@uprv_detec
; Line 338
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ISOcodeA$[ebp]
	push	edx
	mov	eax, DWORD PTR _winTZ$43014[ebp]
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _icuTZ$43017[ebp], eax
$LN25@uprv_detec:
; Line 340
	cmp	DWORD PTR _errorCode$[ebp], 0
	je	SHORT $LN23@uprv_detec
	cmp	DWORD PTR _icuTZ$43017[ebp], 0
	jne	SHORT $LN24@uprv_detec
$LN23@uprv_detec:
; Line 342
	mov	DWORD PTR _status$[ebp], 0
; Line 343
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	OFFSET ??_C@_03MMKGDKGA@001?$AA@
	mov	edx, DWORD PTR _winTZ$43014[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _icuTZ$43017[ebp], eax
$LN24@uprv_detec:
; Line 346
	cmp	DWORD PTR _status$[ebp], 0
	jg	SHORT $LN28@uprv_detec
; Line 347
	mov	DWORD PTR _index$43025[ebp], 0
$LN21@uprv_detec:
; Line 348
	mov	eax, DWORD PTR _icuTZ$43017[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN20@uprv_detec
	mov	eax, DWORD PTR _icuTZ$43017[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN20@uprv_detec
; Line 349
	mov	eax, DWORD PTR _index$43025[ebp]
	mov	ecx, DWORD PTR _icuTZ$43017[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _tmpid$[ebp+eax], dl
	mov	eax, DWORD PTR _index$43025[ebp]
	add	eax, 1
	mov	DWORD PTR _index$43025[ebp], eax
	mov	ecx, DWORD PTR _icuTZ$43017[ebp]
	add	ecx, 2
	mov	DWORD PTR _icuTZ$43017[ebp], ecx
; Line 350
	jmp	SHORT $LN21@uprv_detec
$LN20@uprv_detec:
; Line 351
	mov	eax, DWORD PTR _index$43025[ebp]
	mov	BYTE PTR _tmpid$[ebp+eax], 0
; Line 352
	mov	DWORD PTR _tryPreVistaFallback$[ebp], 0
$LN28@uprv_detec:
; Line 358
	cmp	DWORD PTR _tryPreVistaFallback$[ebp], 0
	je	$LN19@uprv_detec
$LN18@uprv_detec:
; Line 361
	cmp	DWORD PTR _status$[ebp], 0
	jg	$LN19@uprv_detec
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_hasNext_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN19@uprv_detec
; Line 362
	mov	BYTE PTR _idFound$43034[ebp], 0
; Line 364
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _winTZ$43036[ebp], eax
; Line 365
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN16@uprv_detec
; Line 366
	jmp	$LN19@uprv_detec
$LN16@uprv_detec:
; Line 368
	mov	eax, DWORD PTR _winTZ$43036[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _winid$43035[ebp], eax
; Line 369
	lea	eax, DWORD PTR _tziReg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _winid$43035[ebp]
	push	ecx
	call	_getTZI
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 371
	cmp	DWORD PTR _result$[ebp], 0
	jne	$LN15@uprv_detec
; Line 375
	mov	eax, DWORD PTR _tziReg$[ebp+4]
	mov	DWORD PTR _tziKey$[ebp+4], eax
; Line 376
	mov	eax, DWORD PTR _tziReg$[ebp+8]
	mov	DWORD PTR _tziKey$[ebp+8], eax
; Line 378
	push	44					; 0000002cH
	lea	eax, DWORD PTR _tziReg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tziKey$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN15@uprv_detec
; Line 379
	mov	DWORD PTR _icuTZ$43043[ebp], 0
; Line 380
	cmp	DWORD PTR _errorCode$[ebp], 0
	je	SHORT $LN13@uprv_detec
; Line 381
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ISOcodeA$[ebp]
	push	edx
	mov	eax, DWORD PTR _winTZ$43036[ebp]
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _icuTZ$43043[ebp], eax
$LN13@uprv_detec:
; Line 383
	cmp	DWORD PTR _errorCode$[ebp], 0
	je	SHORT $LN11@uprv_detec
	cmp	DWORD PTR _icuTZ$43043[ebp], 0
	jne	SHORT $LN12@uprv_detec
$LN11@uprv_detec:
; Line 385
	mov	DWORD PTR _status$[ebp], 0
; Line 386
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	OFFSET ??_C@_03MMKGDKGA@001?$AA@
	mov	edx, DWORD PTR _winTZ$43036[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _icuTZ$43043[ebp], eax
$LN12@uprv_detec:
; Line 389
	cmp	DWORD PTR _status$[ebp], 0
	jg	$LN15@uprv_detec
; Line 392
	push	40					; 00000028H
	push	0
	lea	eax, DWORD PTR _regStdName$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 393
	push	40					; 00000028H
	lea	eax, DWORD PTR _regStdName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _winid$43035[ebp]
	push	ecx
	call	_getSTDName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$[ebp], eax
; Line 394
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN9@uprv_detec
; Line 395
	lea	eax, DWORD PTR _regStdName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _apiStdName$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@uprv_detec
; Line 396
	mov	BYTE PTR _idFound$43034[ebp], 1
$LN9@uprv_detec:
; Line 404
	movsx	eax, BYTE PTR _idFound$43034[ebp]
	test	eax, eax
	jne	SHORT $LN6@uprv_detec
	movsx	eax, BYTE PTR _tmpid$[ebp]
	test	eax, eax
	jne	SHORT $LN15@uprv_detec
$LN6@uprv_detec:
; Line 406
	mov	DWORD PTR _index$43054[ebp], 0
$LN5@uprv_detec:
; Line 407
	mov	eax, DWORD PTR _icuTZ$43043[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@uprv_detec
	mov	eax, DWORD PTR _icuTZ$43043[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN4@uprv_detec
; Line 408
	mov	eax, DWORD PTR _index$43054[ebp]
	mov	ecx, DWORD PTR _icuTZ$43043[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _tmpid$[ebp+eax], dl
	mov	eax, DWORD PTR _index$43054[ebp]
	add	eax, 1
	mov	DWORD PTR _index$43054[ebp], eax
	mov	ecx, DWORD PTR _icuTZ$43043[ebp]
	add	ecx, 2
	mov	DWORD PTR _icuTZ$43043[ebp], ecx
; Line 409
	jmp	SHORT $LN5@uprv_detec
$LN4@uprv_detec:
; Line 410
	mov	eax, DWORD PTR _index$43054[ebp]
	mov	BYTE PTR _tmpid$[ebp+eax], 0
$LN15@uprv_detec:
; Line 415
	mov	eax, DWORD PTR _winTZ$43036[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 416
	movsx	eax, BYTE PTR _idFound$43034[ebp]
	test	eax, eax
	je	SHORT $LN3@uprv_detec
; Line 417
	jmp	SHORT $LN19@uprv_detec
$LN3@uprv_detec:
; Line 419
	jmp	$LN18@uprv_detec
$LN19@uprv_detec:
; Line 425
	movsx	eax, BYTE PTR _tmpid$[ebp]
	test	eax, eax
	je	SHORT $LN2@uprv_detec
; Line 426
	lea	eax, DWORD PTR _tmpid$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 427
	push	1
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	_uprv_calloc_56
	add	esp, 8
	mov	DWORD PTR _icuid$[ebp], eax
; Line 428
	cmp	DWORD PTR _icuid$[ebp], 0
	je	SHORT $LN2@uprv_detec
; Line 429
	lea	eax, DWORD PTR _tmpid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _icuid$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN2@uprv_detec:
; Line 433
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 435
	mov	eax, DWORD PTR _icuid$[ebp]
; Line 436
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@uprv_detec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1012				; 000003f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN43@uprv_detec:
	DD	11					; 0000000bH
	DD	$LN42@uprv_detec
$LN42@uprv_detec:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN31@uprv_detec
	DD	-84					; ffffffacH
	DD	40					; 00000028H
	DD	$LN32@uprv_detec
	DD	-132					; ffffff7cH
	DD	40					; 00000028H
	DD	$LN33@uprv_detec
	DD	-180					; ffffff4cH
	DD	40					; 00000028H
	DD	$LN34@uprv_detec
	DD	-192					; ffffff40H
	DD	4
	DD	$LN35@uprv_detec
	DD	-232					; ffffff18H
	DD	6
	DD	$LN36@uprv_detec
	DD	-244					; ffffff0cH
	DD	3
	DD	$LN37@uprv_detec
	DD	-308					; fffffeccH
	DD	44					; 0000002cH
	DD	$LN38@uprv_detec
	DD	-360					; fffffe98H
	DD	44					; 0000002cH
	DD	$LN39@uprv_detec
	DD	-540					; fffffde4H
	DD	172					; 000000acH
	DD	$LN40@uprv_detec
	DD	-720					; fffffd30H
	DD	148					; 00000094H
	DD	$LN41@uprv_detec
$LN41@uprv_detec:
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN40@uprv_detec:
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	84					; 00000054H
	DB	90					; 0000005aH
	DB	73					; 00000049H
	DB	0
$LN39@uprv_detec:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	0
$LN38@uprv_detec:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN37@uprv_detec:
	DB	73					; 00000049H
	DB	83					; 00000053H
	DB	79					; 0000004fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	0
$LN36@uprv_detec:
	DB	73					; 00000049H
	DB	83					; 00000053H
	DB	79					; 0000004fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	87					; 00000057H
	DB	0
$LN35@uprv_detec:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN34@uprv_detec:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN33@uprv_detec:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN32@uprv_detec:
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN31@uprv_detec:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_uprv_detectWindowsTimeZone ENDP
_TEXT	ENDS
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegQueryValueExA@24:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getTZI
_TEXT	SEGMENT
_hkey$ = -32						; size = 4
_result$ = -20						; size = 4
_cbData$ = -8						; size = 4
_winid$ = 8						; size = 4
_tzi$ = 12						; size = 4
_getTZI	PROC						; COMDAT
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 153
	mov	DWORD PTR _cbData$[ebp], 44		; 0000002cH
; Line 157
	mov	eax, DWORD PTR _winid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hkey$[ebp]
	push	ecx
	call	_openTZRegKey
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 159
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@getTZI
; Line 165
	mov	esi, esp
	lea	eax, DWORD PTR _cbData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tzi$[ebp]
	push	ecx
	push	0
	push	0
	push	OFFSET _TZI_REGKEY
	mov	edx, DWORD PTR _hkey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegQueryValueExA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN1@getTZI:
; Line 169
	mov	esi, esp
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	mov	eax, DWORD PTR _result$[ebp]
; Line 172
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getTZI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@getTZI:
	DD	2
	DD	$LN6@getTZI
$LN6@getTZI:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@getTZI
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@getTZI
$LN5@getTZI:
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN4@getTZI:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_getTZI	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__RegOpenKeyExA@20:PROC
EXTRN	__imp__strstr:PROC
EXTRN	_strcat:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _openTZRegKey
_TEXT	SEGMENT
_pStd$42930 = -156					; size = 4
_result$ = -144						; size = 4
_name$ = -132						; size = 4
_subKeyName$ = -120					; size = 110
__$ArrayPad$ = -4					; size = 4
_hkey$ = 8						; size = 4
_winid$ = 12						; size = 4
_openTZRegKey PROC					; COMDAT
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 127
	cmp	DWORD PTR _gWinType, 0
	jg	SHORT $LN3@openTZRegK
; Line 128
	call	_detectWindowsType
	mov	DWORD PTR _gWinType, eax
$LN3@openTZRegK:
; Line 131
	xor	eax, eax
	cmp	DWORD PTR _gWinType, 1
	setne	al
	mov	ecx, DWORD PTR _TZ_REGKEY[eax*4]
	push	ecx
	lea	edx, DWORD PTR _subKeyName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 132
	lea	eax, DWORD PTR _subKeyName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	lea	ecx, DWORD PTR _subKeyName$[ebp+eax]
	mov	DWORD PTR _name$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _winid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _subKeyName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 135
	cmp	DWORD PTR _gWinType, 1
	jne	SHORT $LN2@openTZRegK
; Line 137
	mov	esi, esp
	push	OFFSET _STANDARD_TIME_REGKEY
	lea	eax, DWORD PTR _subKeyName$[ebp]
	push	eax
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pStd$42930[ebp], eax
; Line 138
	cmp	DWORD PTR _pStd$42930[ebp], 0
	je	SHORT $LN2@openTZRegK
; Line 139
	mov	eax, DWORD PTR _pStd$42930[ebp]
	mov	BYTE PTR [eax], 0
$LN2@openTZRegK:
; Line 147
	mov	esi, esp
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	push	1
	push	0
	lea	ecx, DWORD PTR _subKeyName$[ebp]
	push	ecx
	push	-2147483646				; 80000002H
	call	DWORD PTR __imp__RegOpenKeyExA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 148
	mov	eax, DWORD PTR _result$[ebp]
; Line 149
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@openTZRegK
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@openTZRegK:
	DD	1
	DD	$LN7@openTZRegK
$LN7@openTZRegK:
	DD	-120					; ffffff88H
	DD	110					; 0000006eH
	DD	$LN6@openTZRegK
$LN6@openTZRegK:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_openTZRegKey ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _detectWindowsType
_TEXT	SEGMENT
_hkey$ = -32						; size = 4
_result$ = -20						; size = 4
_winType$ = -8						; size = 4
_detectWindowsType PROC					; COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 104
	mov	DWORD PTR _winType$[ebp], 0
	jmp	SHORT $LN4@detectWind
$LN3@detectWind:
	mov	eax, DWORD PTR _winType$[ebp]
	add	eax, 1
	mov	DWORD PTR _winType$[ebp], eax
$LN4@detectWind:
	cmp	DWORD PTR _winType$[ebp], 2
	jge	SHORT $LN2@detectWind
; Line 109
	mov	esi, esp
	lea	eax, DWORD PTR _hkey$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _winType$[ebp]
	mov	edx, DWORD PTR _WIN_TYPE_PROBE_REGKEY[ecx*4]
	push	edx
	push	-2147483646				; 80000002H
	call	DWORD PTR __imp__RegOpenKeyExA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 110
	mov	esi, esp
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 112
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@detectWind
; Line 113
	jmp	SHORT $LN2@detectWind
$LN1@detectWind:
; Line 115
	jmp	SHORT $LN3@detectWind
$LN2@detectWind:
; Line 117
	mov	eax, DWORD PTR _winType$[ebp]
	add	eax, 1
; Line 118
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@detectWind
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@detectWind:
	DD	1
	DD	$LN8@detectWind
$LN8@detectWind:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@detectWind
$LN7@detectWind:
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_detectWindowsType ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _getSTDName
_TEXT	SEGMENT
_hkey$ = -32						; size = 4
_result$ = -20						; size = 4
_cbData$ = -8						; size = 4
_winid$ = 8						; size = 4
_regStdName$ = 12					; size = 4
_length$ = 16						; size = 4
_getSTDName PROC					; COMDAT
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 175
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _cbData$[ebp], eax
; Line 179
	mov	eax, DWORD PTR _winid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hkey$[ebp]
	push	ecx
	call	_openTZRegKey
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 181
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@getSTDName
; Line 187
	mov	esi, esp
	lea	eax, DWORD PTR _cbData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _regStdName$[ebp]
	push	ecx
	push	0
	push	0
	push	OFFSET _STD_REGKEY
	mov	edx, DWORD PTR _hkey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegQueryValueExA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN1@getSTDName:
; Line 191
	mov	esi, esp
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 193
	mov	eax, DWORD PTR _result$[ebp]
; Line 194
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getSTDName
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@getSTDName:
	DD	2
	DD	$LN6@getSTDName
$LN6@getSTDName:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@getSTDName
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@getSTDName
$LN5@getSTDName:
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN4@getSTDName:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_getSTDName ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@GCKJIEGO@TimeZoneKeyName?$AA@		; `string'
;	COMDAT ??_C@_0BA@GCKJIEGO@TimeZoneKeyName?$AA@
CONST	SEGMENT
??_C@_0BA@GCKJIEGO@TimeZoneKeyName?$AA@ DB 'TimeZoneKeyName', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _getTZKeyName
_TEXT	SEGMENT
_cbData$ = -32						; size = 4
_result$ = -20						; size = 4
_hkey$ = -8						; size = 4
_tzKeyName$ = 8						; size = 4
_length$ = 12						; size = 4
_getTZKeyName PROC					; COMDAT
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 198
	mov	DWORD PTR _result$[ebp], 0
; Line 199
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _cbData$[ebp], eax
; Line 206
	mov	esi, esp
	lea	eax, DWORD PTR _hkey$[ebp]
	push	eax
	push	1
	push	0
	push	OFFSET _CURRENT_ZONE_REGKEY
	push	-2147483646				; 80000002H
	call	DWORD PTR __imp__RegOpenKeyExA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@getTZKeyNa
; Line 214
	mov	esi, esp
	lea	eax, DWORD PTR _cbData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tzKeyName$[ebp]
	push	ecx
	push	0
	push	0
	push	OFFSET ??_C@_0BA@GCKJIEGO@TimeZoneKeyName?$AA@
	mov	edx, DWORD PTR _hkey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegQueryValueExA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN1@getTZKeyNa:
; Line 217
	mov	eax, DWORD PTR _result$[ebp]
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getTZKeyNa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@getTZKeyNa:
	DD	2
	DD	$LN6@getTZKeyNa
$LN6@getTZKeyNa:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@getTZKeyNa
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@getTZKeyNa
$LN5@getTZKeyNa:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN4@getTZKeyNa:
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_getTZKeyName ENDP
_TEXT	ENDS
END

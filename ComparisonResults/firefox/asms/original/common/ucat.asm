; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucat.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_SEPARATOR DB	025H
CONST	ENDS
PUBLIC	_u_catopen_56
EXTRN	_ures_open_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\ucat.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _u_catopen_56
_TEXT	SEGMENT
_name$ = 8						; size = 4
_locale$ = 12						; size = 4
_ec$ = 16						; size = 4
_u_catopen_56 PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_ures_open_56
	add	esp, 12					; 0000000cH
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_catopen_56 ENDP
_TEXT	ENDS
PUBLIC	_u_catclose_56
EXTRN	_ures_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_catclose_56
_TEXT	SEGMENT
_catd$ = 8						; size = 4
_u_catclose_56 PROC					; COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	mov	eax, DWORD PTR _catd$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_catclose_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_u_catgets_56
EXTRN	_u_strlen_56:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_catgets_56
_TEXT	SEGMENT
_result$ = -44						; size = 4
_key$ = -32						; size = 24
__$ArrayPad$ = -4					; size = 4
_catd$ = 8						; size = 4
_set_num$ = 12						; size = 4
_msg_num$ = 16						; size = 4
_s$ = 20						; size = 4
_len$ = 24						; size = 4
_ec$ = 28						; size = 4
_u_catgets_56 PROC					; COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 55
	cmp	DWORD PTR _ec$[ebp], 0
	je	SHORT $LN3@u_catgets_
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN4@u_catgets_
$LN3@u_catgets_:
; Line 56
	jmp	SHORT $ERROR$8648
$LN4@u_catgets_:
; Line 61
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg_num$[ebp]
	push	edx
	mov	eax, DWORD PTR _set_num$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	__catkey
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _catd$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 62
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN2@u_catgets_
; Line 63
	jmp	SHORT $ERROR$8648
$LN2@u_catgets_:
; Line 66
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN5@u_catgets_
$ERROR$8648:
; Line 70
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN1@u_catgets_
; Line 71
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@u_catgets_:
; Line 73
	mov	eax, DWORD PTR _s$[ebp]
$LN5@u_catgets_:
; Line 74
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@u_catgets_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@u_catgets_:
	DD	1
	DD	$LN8@u_catgets_
$LN8@u_catgets_:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN7@u_catgets_
$LN7@u_catgets_:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_u_catgets_56 ENDP
_TEXT	ENDS
EXTRN	_T_CString_integerToString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __catkey
_TEXT	SEGMENT
_i$ = -8						; size = 4
_buffer$ = 8						; size = 4
_set_num$ = 12						; size = 4
_msg_num$ = 16						; size = 4
__catkey PROC						; COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 30
	mov	DWORD PTR _i$[ebp], 0
; Line 31
	push	10					; 0000000aH
	mov	eax, DWORD PTR _set_num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_T_CString_integerToString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
; Line 32
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR _SEPARATOR
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 33
	push	10					; 0000000aH
	mov	eax, DWORD PTR _msg_num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	call	_T_CString_integerToString_56
	add	esp, 12					; 0000000cH
; Line 34
	mov	eax, DWORD PTR _buffer$[ebp]
; Line 35
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__catkey ENDP
_TEXT	ENDS
END

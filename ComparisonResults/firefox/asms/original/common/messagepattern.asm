; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\messagepattern.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_LENGTH
PUBLIC	?MAX_VALUE@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	SEGMENT
_kOffsetColon DW 06fH
	DW	066H
	DW	066H
	DW	073H
	DW	065H
	DW	074H
	DW	03aH
	ORG $+2
_kOther	DW	06fH
	DW	074H
	DW	068H
	DW	065H
	DW	072H
CONST	ENDS
;	COMDAT ?MAX_VALUE@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_VALUE@Part@MessagePattern@icu_56@@0HB DD 07fffH	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB DD 0ffffH	; icu_56::MessagePattern::Part::MAX_LENGTH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33262 = -32					; size = 4
_len$33261 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33261[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33262[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33261[ebp]
	cmp	ecx, DWORD PTR _textLength$33262[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33261[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T42682 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T42682[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T42682[ebp]
	or	eax, 1
	mov	DWORD PTR $T42682[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?clear@MessagePattern@icu_56@@QAEXXZ		; icu_56::MessagePattern::clear
PUBLIC	?clearPatternAndSetApostropheMode@MessagePattern@icu_56@@QAEXW4UMessagePatternApostropheMode@@@Z ; icu_56::MessagePattern::clearPatternAndSetApostropheMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clearPatternAndSetApostropheMode@MessagePattern@icu_56@@QAEXW4UMessagePatternApostropheMode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mode$ = 8						; size = 4
?clearPatternAndSetApostropheMode@MessagePattern@icu_56@@QAEXW4UMessagePatternApostropheMode@@@Z PROC ; icu_56::MessagePattern::clearPatternAndSetApostropheMode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@MessagePattern@icu_56@@QAEXXZ	; icu_56::MessagePattern::clear
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?clearPatternAndSetApostropheMode@MessagePattern@icu_56@@QAEXW4UMessagePatternApostropheMode@@@Z ENDP ; icu_56::MessagePattern::clearPatternAndSetApostropheMode
_TEXT	ENDS
PUBLIC	??8MessagePattern@icu_56@@QBECABV01@@Z		; icu_56::MessagePattern::operator==
PUBLIC	??9MessagePattern@icu_56@@QBECABV01@@Z		; icu_56::MessagePattern::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MessagePattern@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MessagePattern@icu_56@@QBECABV01@@Z PROC		; icu_56::MessagePattern::operator!=, COMDAT
; _this$ = ecx
; Line 532
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8MessagePattern@icu_56@@QBECABV01@@Z	; icu_56::MessagePattern::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 534
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MessagePattern@icu_56@@QBECABV01@@Z ENDP		; icu_56::MessagePattern::operator!=
_TEXT	ENDS
PUBLIC	?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ; icu_56::MessagePattern::getApostropheMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ PROC ; icu_56::MessagePattern::getApostropheMode, COMDAT
; _this$ = ecx
; Line 546
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 547
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 548
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ENDP ; icu_56::MessagePattern::getApostropheMode
_TEXT	ENDS
PUBLIC	?getPatternString@MessagePattern@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::MessagePattern::getPatternString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPatternString@MessagePattern@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPatternString@MessagePattern@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::MessagePattern::getPatternString, COMDAT
; _this$ = ecx
; Line 557
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 559
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getPatternString@MessagePattern@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::MessagePattern::getPatternString
_TEXT	ENDS
PUBLIC	?hasNamedArguments@MessagePattern@icu_56@@QBECXZ ; icu_56::MessagePattern::hasNamedArguments
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasNamedArguments@MessagePattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasNamedArguments@MessagePattern@icu_56@@QBECXZ PROC	; icu_56::MessagePattern::hasNamedArguments, COMDAT
; _this$ = ecx
; Line 566
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 567
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+96]
; Line 568
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasNamedArguments@MessagePattern@icu_56@@QBECXZ ENDP	; icu_56::MessagePattern::hasNamedArguments
_TEXT	ENDS
PUBLIC	?hasNumberedArguments@MessagePattern@icu_56@@QBECXZ ; icu_56::MessagePattern::hasNumberedArguments
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasNumberedArguments@MessagePattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasNumberedArguments@MessagePattern@icu_56@@QBECXZ PROC ; icu_56::MessagePattern::hasNumberedArguments, COMDAT
; _this$ = ecx
; Line 575
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+97]
; Line 577
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasNumberedArguments@MessagePattern@icu_56@@QBECXZ ENDP ; icu_56::MessagePattern::hasNumberedArguments
_TEXT	ENDS
PUBLIC	?countParts@MessagePattern@icu_56@@QBEHXZ	; icu_56::MessagePattern::countParts
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countParts@MessagePattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countParts@MessagePattern@icu_56@@QBEHXZ PROC		; icu_56::MessagePattern::countParts, COMDAT
; _this$ = ecx
; Line 612
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 613
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
; Line 614
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?countParts@MessagePattern@icu_56@@QBEHXZ ENDP		; icu_56::MessagePattern::countParts
_TEXT	ENDS
PUBLIC	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z PROC	; icu_56::MessagePattern::getPart, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+76]
; Line 624
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ENDP	; icu_56::MessagePattern::getPart
_TEXT	ENDS
PUBLIC	?getPartType@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@H@Z ; icu_56::MessagePattern::getPartType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPartType@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?getPartType@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@H@Z PROC ; icu_56::MessagePattern::getPartType, COMDAT
; _this$ = ecx
; Line 633
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 634
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	eax, DWORD PTR [eax]
; Line 635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPartType@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@H@Z ENDP ; icu_56::MessagePattern::getPartType
_TEXT	ENDS
PUBLIC	?getPatternIndex@MessagePattern@icu_56@@QBEHH@Z	; icu_56::MessagePattern::getPatternIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPatternIndex@MessagePattern@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_partIndex$ = 8						; size = 4
?getPatternIndex@MessagePattern@icu_56@@QBEHH@Z PROC	; icu_56::MessagePattern::getPatternIndex, COMDAT
; _this$ = ecx
; Line 644
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 645
	mov	eax, DWORD PTR _partIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	eax, DWORD PTR [eax+4]
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPatternIndex@MessagePattern@icu_56@@QBEHH@Z ENDP	; icu_56::MessagePattern::getPatternIndex
_TEXT	ENDS
PUBLIC	?getSubstring@MessagePattern@icu_56@@QBE?AVUnicodeString@2@ABVPart@12@@Z ; icu_56::MessagePattern::getSubstring
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSubstring@MessagePattern@icu_56@@QBE?AVUnicodeString@2@ABVPart@12@@Z
_TEXT	SEGMENT
$T42783 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_part$ = 12						; size = 4
?getSubstring@MessagePattern@icu_56@@QBE?AVUnicodeString@2@ABVPart@12@@Z PROC ; icu_56::MessagePattern::getSubstring, COMDAT
; _this$ = ecx
; Line 655
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T42783[ebp], 0
; Line 656
	mov	eax, DWORD PTR _part$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _part$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	edx, DWORD PTR $T42783[ebp]
	or	edx, 1
	mov	DWORD PTR $T42783[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 657
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSubstring@MessagePattern@icu_56@@QBE?AVUnicodeString@2@ABVPart@12@@Z ENDP ; icu_56::MessagePattern::getSubstring
_TEXT	ENDS
PUBLIC	?partSubstringMatches@MessagePattern@icu_56@@QBECABVPart@12@ABVUnicodeString@2@@Z ; icu_56::MessagePattern::partSubstringMatches
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?partSubstringMatches@MessagePattern@icu_56@@QBECABVPart@12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_part$ = 8						; size = 4
_s$ = 12						; size = 4
?partSubstringMatches@MessagePattern@icu_56@@QBECABVPart@12@ABVUnicodeString@2@@Z PROC ; icu_56::MessagePattern::partSubstringMatches, COMDAT
; _this$ = ecx
; Line 666
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 667
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _part$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _part$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compare
	movsx	edx, al
	test	edx, edx
	sete	al
; Line 668
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?partSubstringMatches@MessagePattern@icu_56@@QBECABVPart@12@ABVUnicodeString@2@@Z ENDP ; icu_56::MessagePattern::partSubstringMatches
_TEXT	ENDS
PUBLIC	?getLimitPartIndex@MessagePattern@icu_56@@QBEHH@Z ; icu_56::MessagePattern::getLimitPartIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLimitPartIndex@MessagePattern@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_limit$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?getLimitPartIndex@MessagePattern@icu_56@@QBEHH@Z PROC	; icu_56::MessagePattern::getLimitPartIndex, COMDAT
; _this$ = ecx
; Line 694
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 695
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _limit$[ebp], ecx
; Line 696
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jge	SHORT $LN1@getLimitPa
; Line 697
	mov	eax, DWORD PTR _start$[ebp]
	jmp	SHORT $LN2@getLimitPa
$LN1@getLimitPa:
; Line 699
	mov	eax, DWORD PTR _limit$[ebp]
$LN2@getLimitPa:
; Line 700
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLimitPartIndex@MessagePattern@icu_56@@QBEHH@Z ENDP	; icu_56::MessagePattern::getLimitPartIndex
_TEXT	ENDS
PUBLIC	?parseArgNumber@MessagePattern@icu_56@@CAHABVUnicodeString@2@HH@Z ; icu_56::MessagePattern::parseArgNumber
PUBLIC	?parseArgNumber@MessagePattern@icu_56@@AAEHHH@Z	; icu_56::MessagePattern::parseArgNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseArgNumber@MessagePattern@icu_56@@AAEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?parseArgNumber@MessagePattern@icu_56@@AAEHHH@Z PROC	; icu_56::MessagePattern::parseArgNumber, COMDAT
; _this$ = ecx
; Line 860
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 861
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	?parseArgNumber@MessagePattern@icu_56@@CAHABVUnicodeString@2@HH@Z ; icu_56::MessagePattern::parseArgNumber
	add	esp, 12					; 0000000cH
; Line 862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?parseArgNumber@MessagePattern@icu_56@@AAEHHH@Z ENDP	; icu_56::MessagePattern::parseArgNumber
_TEXT	ENDS
PUBLIC	??1MessagePattern@icu_56@@UAE@XZ		; icu_56::MessagePattern::~MessagePattern
PUBLIC	??_GMessagePattern@icu_56@@UAEPAXI@Z		; icu_56::MessagePattern::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMessagePattern@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMessagePattern@icu_56@@UAEPAXI@Z PROC		; icu_56::MessagePattern::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MessagePattern@icu_56@@UAE@XZ	; icu_56::MessagePattern::~MessagePattern
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMessagePattern@icu_56@@UAEPAXI@Z ENDP		; icu_56::MessagePattern::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EMessagePattern@icu_56@@UAEPAXI@Z		; icu_56::MessagePattern::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EMessagePattern@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMessagePattern@icu_56@@UAEPAXI@Z PROC		; icu_56::MessagePattern::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1MessagePattern@icu_56@@UAE@XZ	; icu_56::MessagePattern::~MessagePattern
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	100					; 00000064H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MessagePattern@icu_56@@UAE@XZ	; icu_56::MessagePattern::~MessagePattern
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMessagePattern@icu_56@@UAEPAXI@Z ENDP		; icu_56::MessagePattern::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?jdkAposMode@MessageImpl@icu_56@@SACABVMessagePattern@2@@Z ; icu_56::MessageImpl::jdkAposMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?jdkAposMode@MessageImpl@icu_56@@SACABVMessagePattern@2@@Z
_TEXT	SEGMENT
_msgPattern$ = 8					; size = 4
?jdkAposMode@MessageImpl@icu_56@@SACABVMessagePattern@2@@Z PROC ; icu_56::MessageImpl::jdkAposMode, COMDAT
; File d:\mozilla\intl\icu\source\common\messageimpl.h
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	ecx, DWORD PTR _msgPattern$[ebp]
	call	?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ; icu_56::MessagePattern::getApostropheMode
	cmp	eax, 1
	sete	al
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?jdkAposMode@MessageImpl@icu_56@@SACABVMessagePattern@2@@Z ENDP ; icu_56::MessageImpl::jdkAposMode
_TEXT	ENDS
PUBLIC	??4MessageImpl@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::MessageImpl::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MessageImpl@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MessageImpl@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::MessageImpl::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4MessageImpl@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::MessageImpl::operator=
_TEXT	ENDS
PUBLIC	??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PatternProps::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PatternProps::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PatternProps::operator=
_TEXT	ENDS
PUBLIC	?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::MessagePattern::init
PUBLIC	??_7MessagePattern@icu_56@@6B@			; icu_56::MessagePattern::`vftable'
PUBLIC	??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::MessagePattern
PUBLIC	??_R4MessagePattern@icu_56@@6B@			; icu_56::MessagePattern::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMessagePattern@icu_56@@@8		; icu_56::MessagePattern `RTTI Type Descriptor'
PUBLIC	??_R3MessagePattern@icu_56@@8			; icu_56::MessagePattern::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MessagePattern@icu_56@@8			; icu_56::MessagePattern::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MessagePattern@icu_56@@8		; icu_56::MessagePattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_R1A@?0A@EA@MessagePattern@icu_56@@8
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@MessagePattern@icu_56@@8 DD FLAT:??_R0?AVMessagePattern@icu_56@@@8 ; icu_56::MessagePattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MessagePattern@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MessagePattern@icu_56@@8
rdata$r	SEGMENT
??_R2MessagePattern@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MessagePattern@icu_56@@8 ; icu_56::MessagePattern::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MessagePattern@icu_56@@8
rdata$r	SEGMENT
??_R3MessagePattern@icu_56@@8 DD 00H			; icu_56::MessagePattern::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MessagePattern@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMessagePattern@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMessagePattern@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MessagePattern `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMessagePattern@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MessagePattern@icu_56@@6B@
rdata$r	SEGMENT
??_R4MessagePattern@icu_56@@6B@ DD 00H			; icu_56::MessagePattern::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMessagePattern@icu_56@@@8
	DD	FLAT:??_R3MessagePattern@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MessagePattern@icu_56@@6B@
CONST	SEGMENT
??_7MessagePattern@icu_56@@6B@ DD FLAT:??_R4MessagePattern@icu_56@@6B@ ; icu_56::MessagePattern::`vftable'
	DD	FLAT:??_EMessagePattern@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z PROC	; icu_56::MessagePattern::MessagePattern, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MessagePattern@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+97], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 0
; Line 149
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::MessagePattern::init
; Line 150
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__unwindfunclet$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MessagePattern@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP	; icu_56::MessagePattern::MessagePattern
PUBLIC	??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::MessagePattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_mode$ = 8						; size = 4
_errorCode$ = 12					; size = 4
??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::MessagePattern, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MessagePattern@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+97], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 0
; Line 157
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::MessagePattern::init
; Line 158
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__unwindfunclet$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MessagePattern@icu_56@@QAE@W4UMessagePatternApostropheMode@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::MessagePattern
PUBLIC	?parse@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parse
PUBLIC	??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::MessagePattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::MessagePattern, COMDAT
; _this$ = ecx
; Line 164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MessagePattern@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+97], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 0
; Line 165
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::MessagePattern::init
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@MessagePat
; Line 166
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parse
$LN2@MessagePat:
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MessagePattern@icu_56@@QAE@ABVUnicodeString@1@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::MessagePattern
PUBLIC	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
PUBLIC	??0MessagePatternPartsList@icu_56@@QAE@XZ	; icu_56::MessagePatternPartsList::MessagePatternPartsList
EXTRN	??2UMemory@icu_56@@SAPAXI@Z:PROC		; icu_56::UMemory::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z$0
__ehfuncinfo$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T42838 = -236						; size = 4
$T42839 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::init, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@init
; Line 173
	xor	al, al
	jmp	$LN3@init
$LN2@init:
; Line 175
	push	524					; 0000020cH
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T42839[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T42839[ebp], 0
	je	SHORT $LN5@init
	mov	ecx, DWORD PTR $T42839[ebp]
	call	??0MessagePatternPartsList@icu_56@@QAE@XZ
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@init
$LN5@init:
	mov	DWORD PTR tv76[ebp], 0
$LN6@init:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T42838[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T42838[ebp]
	mov	DWORD PTR [ecx+72], edx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jne	SHORT $LN1@init
; Line 177
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 178
	xor	al, al
	jmp	SHORT $LN3@init
$LN1@init:
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 181
	mov	al, 1
$LN3@init:
; Line 182
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T42839[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@MessagePattern@icu_56@@AAECAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::MessagePatternList<icu_56::MessagePattern::Part,32>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MessagePatternPartsList@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MessagePatternPartsList@icu_56@@QAE@XZ PROC		; icu_56::MessagePatternPartsList::MessagePatternPartsList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::MessagePatternList<icu_56::MessagePattern::Part,32>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MessagePatternPartsList@icu_56@@QAE@XZ ENDP		; icu_56::MessagePatternPartsList::MessagePatternPartsList
_TEXT	ENDS
PUBLIC	?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::copyStorage
PUBLIC	??0MessagePattern@icu_56@@QAE@ABV01@@Z		; icu_56::MessagePattern::MessagePattern
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
xdata$x	SEGMENT
__unwindtable$??0MessagePattern@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0MessagePattern@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0MessagePattern@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0MessagePattern@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_errorCode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0MessagePattern@icu_56@@QAE@ABV01@@Z PROC		; icu_56::MessagePattern::MessagePattern, COMDAT
; _this$ = ecx
; Line 189
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MessagePattern@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MessagePattern@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+96]
	mov	BYTE PTR [eax+96], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+97]
	mov	BYTE PTR [eax+97], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+98]
	mov	BYTE PTR [eax+98], dl
; Line 190
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 191
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::copyStorage
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@MessagePat@2
; Line 192
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@MessagePattern@icu_56@@QAEXXZ	; icu_56::MessagePattern::clear
$LN2@MessagePat@2:
; Line 194
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@MessagePat@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN9@MessagePat@2:
	DD	1
	DD	$LN8@MessagePat@2
$LN8@MessagePat@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@MessagePat@2
$LN6@MessagePat@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__unwindfunclet$??0MessagePattern@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0MessagePattern@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MessagePattern@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MessagePattern@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::MessagePattern::MessagePattern
PUBLIC	??4MessagePattern@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::MessagePattern::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MessagePattern@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_errorCode$ = -20					; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4MessagePattern@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::MessagePattern::operator=, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 198
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN2@operator@2
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 202
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+96]
	mov	BYTE PTR [eax+96], dl
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+97]
	mov	BYTE PTR [eax+97], dl
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+98]
	mov	BYTE PTR [eax+98], dl
; Line 206
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 207
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::copyStorage
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@operator@2
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@MessagePattern@icu_56@@QAEXXZ	; icu_56::MessagePattern::clear
$LN1@operator@2:
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
$LN3@operator@2:
; Line 211
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@operator@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@operator@2:
	DD	1
	DD	$LN6@operator@2
$LN6@operator@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@operator@2
$LN5@operator@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
??4MessagePattern@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::MessagePattern::operator=
_TEXT	ENDS
PUBLIC	?copyFrom@?$MessagePatternList@N$07@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<double,8>::copyFrom
PUBLIC	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
PUBLIC	??0MessagePatternDoubleList@icu_56@@QAE@XZ	; icu_56::MessagePatternDoubleList::MessagePatternDoubleList
PUBLIC	?copyFrom@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::copyFrom
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv169 = -268						; size = 4
tv82 = -268						; size = 4
$T42875 = -260						; size = 4
$T42876 = -248						; size = 4
$T42879 = -236						; size = 4
$T42880 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::copyStorage, COMDAT
; _this$ = ecx
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 215
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@copyStorag
; Line 216
	xor	al, al
	jmp	$LN10@copyStorag
$LN9@copyStorag:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jne	$LN8@copyStorag
; Line 223
	push	524					; 0000020cH
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T42876[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T42876[ebp], 0
	je	SHORT $LN12@copyStorag
	mov	ecx, DWORD PTR $T42876[ebp]
	call	??0MessagePatternPartsList@icu_56@@QAE@XZ
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN13@copyStorag
$LN12@copyStorag:
	mov	DWORD PTR tv82[ebp], 0
$LN13@copyStorag:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T42875[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T42875[ebp]
	mov	DWORD PTR [ecx+72], edx
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jne	SHORT $LN7@copyStorag
; Line 225
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 226
	xor	al, al
	jmp	$LN10@copyStorag
$LN7@copyStorag:
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
$LN8@copyStorag:
; Line 230
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jle	SHORT $LN6@copyStorag
; Line 231
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+72]
	call	?copyFrom@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::copyFrom
; Line 232
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@copyStorag
; Line 233
	xor	al, al
	jmp	$LN10@copyStorag
$LN5@copyStorag:
; Line 235
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
$LN6@copyStorag:
; Line 238
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+92], 0
	jle	$LN4@copyStorag
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	$LN3@copyStorag
; Line 240
	push	80					; 00000050H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T42880[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T42880[ebp], 0
	je	SHORT $LN14@copyStorag
	mov	ecx, DWORD PTR $T42880[ebp]
	call	??0MessagePatternDoubleList@icu_56@@QAE@XZ
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN15@copyStorag
$LN14@copyStorag:
	mov	DWORD PTR tv169[ebp], 0
$LN15@copyStorag:
	mov	eax, DWORD PTR tv169[ebp]
	mov	DWORD PTR $T42879[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T42879[ebp]
	mov	DWORD PTR [ecx+84], edx
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN2@copyStorag
; Line 242
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 243
	xor	al, al
	jmp	SHORT $LN10@copyStorag
$LN2@copyStorag:
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax
$LN3@copyStorag:
; Line 248
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?copyFrom@?$MessagePatternList@N$07@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<double,8>::copyFrom
; Line 249
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@copyStorag
; Line 250
	xor	al, al
	jmp	SHORT $LN10@copyStorag
$LN1@copyStorag:
; Line 252
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax+92], edx
$LN4@copyStorag:
; Line 255
	mov	al, 1
$LN10@copyStorag:
; Line 256
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T42876[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T42880[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?copyStorage@MessagePattern@icu_56@@AAECABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::copyStorage
PUBLIC	??0?$MessagePatternList@N$07@icu_56@@QAE@XZ	; icu_56::MessagePatternList<double,8>::MessagePatternList<double,8>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MessagePatternDoubleList@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MessagePatternDoubleList@icu_56@@QAE@XZ PROC		; icu_56::MessagePatternDoubleList::MessagePatternDoubleList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MessagePatternList@N$07@icu_56@@QAE@XZ ; icu_56::MessagePatternList<double,8>::MessagePatternList<double,8>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MessagePatternDoubleList@icu_56@@QAE@XZ ENDP		; icu_56::MessagePatternDoubleList::MessagePatternDoubleList
_TEXT	ENDS
PUBLIC	??_GMessagePatternDoubleList@icu_56@@QAEPAXI@Z	; icu_56::MessagePatternDoubleList::`scalar deleting destructor'
PUBLIC	??_GMessagePatternPartsList@icu_56@@QAEPAXI@Z	; icu_56::MessagePatternPartsList::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1MessagePattern@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1MessagePattern@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1MessagePattern@icu_56@@UAE@XZ$1
__ehfuncinfo$??1MessagePattern@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1MessagePattern@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1MessagePattern@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv87 = -268						; size = 4
tv81 = -268						; size = 4
$T42896 = -260						; size = 4
$T42897 = -248						; size = 4
$T42900 = -236						; size = 4
$T42901 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1MessagePattern@icu_56@@UAE@XZ PROC			; icu_56::MessagePattern::~MessagePattern, COMDAT
; _this$ = ecx
; Line 258
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1MessagePattern@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MessagePattern@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T42897[ebp], ecx
	mov	edx, DWORD PTR $T42897[ebp]
	mov	DWORD PTR $T42896[ebp], edx
	cmp	DWORD PTR $T42896[ebp], 0
	je	SHORT $LN3@MessagePat@3
	push	1
	mov	ecx, DWORD PTR $T42896[ebp]
	call	??_GMessagePatternPartsList@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN4@MessagePat@3
$LN3@MessagePat@3:
	mov	DWORD PTR tv81[ebp], 0
$LN4@MessagePat@3:
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T42901[ebp], ecx
	mov	edx, DWORD PTR $T42901[ebp]
	mov	DWORD PTR $T42900[ebp], edx
	cmp	DWORD PTR $T42900[ebp], 0
	je	SHORT $LN5@MessagePat@3
	push	1
	mov	ecx, DWORD PTR $T42900[ebp]
	call	??_GMessagePatternDoubleList@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN1@MessagePat@3
$LN5@MessagePat@3:
	mov	DWORD PTR tv87[ebp], 0
$LN1@MessagePat@3:
; Line 261
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1MessagePattern@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__unwindfunclet$??1MessagePattern@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??1MessagePattern@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1MessagePattern@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1MessagePattern@icu_56@@UAE@XZ ENDP			; icu_56::MessagePattern::~MessagePattern
PUBLIC	??1MessagePatternPartsList@icu_56@@QAE@XZ	; icu_56::MessagePatternPartsList::~MessagePatternPartsList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMessagePatternPartsList@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMessagePatternPartsList@icu_56@@QAEPAXI@Z PROC	; icu_56::MessagePatternPartsList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MessagePatternPartsList@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMessagePatternPartsList@icu_56@@QAEPAXI@Z ENDP	; icu_56::MessagePatternPartsList::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1MessagePatternDoubleList@icu_56@@QAE@XZ	; icu_56::MessagePatternDoubleList::~MessagePatternDoubleList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMessagePatternDoubleList@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMessagePatternDoubleList@icu_56@@QAEPAXI@Z PROC	; icu_56::MessagePatternDoubleList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MessagePatternDoubleList@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMessagePatternDoubleList@icu_56@@QAEPAXI@Z ENDP	; icu_56::MessagePatternDoubleList::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::~MessagePatternList<icu_56::MessagePattern::Part,32>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MessagePatternPartsList@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MessagePatternPartsList@icu_56@@QAE@XZ PROC		; icu_56::MessagePatternPartsList::~MessagePatternPartsList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MessagePatternPartsList@icu_56@@QAE@XZ ENDP		; icu_56::MessagePatternPartsList::~MessagePatternPartsList
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::~MaybeStackArray<icu_56::MessagePattern::Part,32>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ PROC ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::~MessagePatternList<icu_56::MessagePattern::Part,32>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::~MaybeStackArray<icu_56::MessagePattern::Part,32>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ENDP ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::~MessagePatternList<icu_56::MessagePattern::Part,32>
_TEXT	ENDS
PUBLIC	??1?$MessagePatternList@N$07@icu_56@@QAE@XZ	; icu_56::MessagePatternList<double,8>::~MessagePatternList<double,8>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MessagePatternDoubleList@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MessagePatternDoubleList@icu_56@@QAE@XZ PROC		; icu_56::MessagePatternDoubleList::~MessagePatternDoubleList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MessagePatternList@N$07@icu_56@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MessagePatternDoubleList@icu_56@@QAE@XZ ENDP		; icu_56::MessagePatternDoubleList::~MessagePatternDoubleList
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@N$07@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<double,8>::~MaybeStackArray<double,8>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MessagePatternList@N$07@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MessagePatternList@N$07@icu_56@@QAE@XZ PROC	; icu_56::MessagePatternList<double,8>::~MessagePatternList<double,8>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MaybeStackArray@N$07@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<double,8>::~MaybeStackArray<double,8>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MessagePatternList@N$07@icu_56@@QAE@XZ ENDP	; icu_56::MessagePatternList<double,8>::~MessagePatternList<double,8>
_TEXT	ENDS
PUBLIC	?postParse@MessagePattern@icu_56@@AAEXXZ	; icu_56::MessagePattern::postParse
PUBLIC	?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseMessage
PUBLIC	?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::preParse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parse@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?parse@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parse, COMDAT
; _this$ = ecx
; Line 266
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 267
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::preParse
; Line 268
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseMessage
; Line 269
	mov	ecx, DWORD PTR _this$[ebp]
	call	?postParse@MessagePattern@icu_56@@AAEXXZ ; icu_56::MessagePattern::postParse
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
; Line 271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parse@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parse
_TEXT	ENDS
PUBLIC	?parseChoiceStyle@MessagePattern@icu_56@@AAEHHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseChoiceStyle
PUBLIC	?parseChoiceStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseChoiceStyle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseChoiceStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?parseChoiceStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseChoiceStyle, COMDAT
; _this$ = ecx
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 276
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::preParse
; Line 277
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseChoiceStyle@MessagePattern@icu_56@@AAEHHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseChoiceStyle
; Line 278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?postParse@MessagePattern@icu_56@@AAEXXZ ; icu_56::MessagePattern::postParse
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
; Line 280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseChoiceStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseChoiceStyle
_TEXT	ENDS
PUBLIC	?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parsePluralOrSelectStyle
PUBLIC	?parsePluralStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parsePluralStyle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parsePluralStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?parsePluralStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parsePluralStyle, COMDAT
; _this$ = ecx
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 285
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::preParse
; Line 286
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	push	0
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parsePluralOrSelectStyle
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	call	?postParse@MessagePattern@icu_56@@AAEXXZ ; icu_56::MessagePattern::postParse
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parsePluralStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parsePluralStyle
_TEXT	ENDS
PUBLIC	?parseSelectStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseSelectStyle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseSelectStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?parseSelectStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseSelectStyle, COMDAT
; _this$ = ecx
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 294
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::preParse
; Line 295
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parsePluralOrSelectStyle
; Line 296
	mov	ecx, DWORD PTR _this$[ebp]
	call	?postParse@MessagePattern@icu_56@@AAEXXZ ; icu_56::MessagePattern::postParse
; Line 297
	mov	eax, DWORD PTR _this$[ebp]
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseSelectStyle@MessagePattern@icu_56@@QAEAAV12@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseSelectStyle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?clear@MessagePattern@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@MessagePattern@icu_56@@QAEXXZ PROC		; icu_56::MessagePattern::clear, COMDAT
; _this$ = ecx
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+97], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+96], 0
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 0
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@MessagePattern@icu_56@@QAEXXZ ENDP		; icu_56::MessagePattern::clear
_TEXT	ENDS
PUBLIC	?equals@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBECABV12@H@Z ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8MessagePattern@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv129 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8MessagePattern@icu_56@@QBECABV01@@Z PROC		; icu_56::MessagePattern::operator==, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN1@operator@3
; Line 313
	mov	al, 1
	jmp	SHORT $LN2@operator@3
$LN1@operator@3:
; Line 320
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@operator@3
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	cmp	ecx, DWORD PTR [eax+80]
	jne	SHORT $LN4@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN5@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	?equals@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBECABV12@H@Z ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@operator@3
$LN5@operator@3:
	mov	BYTE PTR tv129[ebp], 1
	jmp	SHORT $LN6@operator@3
$LN4@operator@3:
	mov	BYTE PTR tv129[ebp], 0
$LN6@operator@3:
	mov	al, BYTE PTR tv129[ebp]
$LN2@operator@3:
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8MessagePattern@icu_56@@QBECABV01@@Z ENDP		; icu_56::MessagePattern::operator==
_TEXT	ENDS
PUBLIC	?hashCode@Part@MessagePattern@icu_56@@QBEHXZ	; icu_56::MessagePattern::Part::hashCode
PUBLIC	?hashCode@MessagePattern@icu_56@@QBEHXZ		; icu_56::MessagePattern::hashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@MessagePattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_i$35023 = -32						; size = 4
_hash$ = -20						; size = 4
_this$ = -8						; size = 4
?hashCode@MessagePattern@icu_56@@QBEHXZ PROC		; icu_56::MessagePattern::hashCode, COMDAT
; _this$ = ecx
; Line 325
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 326
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+4]
	imul	esi, 37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?hashCode@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::hashCode
	add	esi, eax
	imul	esi, 37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [ecx+80]
	mov	DWORD PTR _hash$[ebp], esi
; Line 327
	mov	DWORD PTR _i$35023[ebp], 0
	jmp	SHORT $LN3@hashCode
$LN2@hashCode:
	mov	eax, DWORD PTR _i$35023[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35023[ebp], eax
$LN3@hashCode:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$35023[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN1@hashCode
; Line 328
	mov	esi, DWORD PTR _hash$[ebp]
	imul	esi, 37					; 00000025H
	mov	ecx, DWORD PTR _i$35023[ebp]
	shl	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+76]
	call	?hashCode@Part@MessagePattern@icu_56@@QBEHXZ ; icu_56::MessagePattern::Part::hashCode
	add	esi, eax
	mov	DWORD PTR _hash$[ebp], esi
; Line 329
	jmp	SHORT $LN2@hashCode
$LN1@hashCode:
; Line 330
	mov	eax, DWORD PTR _hash$[ebp]
; Line 331
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@MessagePattern@icu_56@@QBEHXZ ENDP		; icu_56::MessagePattern::hashCode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?hashCode@Part@MessagePattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@Part@MessagePattern@icu_56@@QBEHXZ PROC	; icu_56::MessagePattern::Part::hashCode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 811
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 812
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	imul	eax, 37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	imul	eax, 37					; 00000025H
	mov	edx, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [edx+8]
	add	eax, ecx
	imul	eax, 37					; 00000025H
	mov	edx, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [edx+10]
	add	eax, ecx
; Line 813
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@Part@MessagePattern@icu_56@@QBEHXZ ENDP	; icu_56::MessagePattern::Part::hashCode
_TEXT	ENDS
PUBLIC	?validateArgumentName@MessagePattern@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::MessagePattern::validateArgumentName
EXTRN	?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z:PROC ; icu_56::PatternProps::isIdentifier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?validateArgumentName@MessagePattern@icu_56@@SAHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?validateArgumentName@MessagePattern@icu_56@@SAHABVUnicodeString@2@@Z PROC ; icu_56::MessagePattern::validateArgumentName, COMDAT
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	ecx, DWORD PTR _name$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	call	?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z ; icu_56::PatternProps::isIdentifier
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@validateAr
; Line 336
	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN2@validateAr
$LN1@validateAr:
; Line 338
	mov	ecx, DWORD PTR _name$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?parseArgNumber@MessagePattern@icu_56@@CAHABVUnicodeString@2@HH@Z ; icu_56::MessagePattern::parseArgNumber
	add	esp, 12					; 0000000cH
$LN2@validateAr:
; Line 339
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?validateArgumentName@MessagePattern@icu_56@@SAHABVUnicodeString@2@@Z ENDP ; icu_56::MessagePattern::validateArgumentName
_TEXT	ENDS
PUBLIC	?getType@Part@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@XZ ; icu_56::MessagePattern::Part::getType
PUBLIC	__$ArrayPad$
PUBLIC	?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ ; icu_56::MessagePattern::autoQuoteApostropheDeep
EXTRN	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ$1
__ehfuncinfo$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T42953 = -336						; size = 4
_part$35042 = -132					; size = 4
_i$35038 = -120						; size = 4
_count$ = -108						; size = 4
_modified$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ PROC ; icu_56::MessagePattern::autoQuoteApostropheDeep, COMDAT
; _this$ = ecx
; Line 342
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T42953[ebp], 0
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+98]
	test	ecx, ecx
	jne	SHORT $LN4@autoQuoteA
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T42953[ebp]
	or	ecx, 1
	mov	DWORD PTR $T42953[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@autoQuoteA
$LN4@autoQuoteA:
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _modified$[ebp]
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 348
	mov	ecx, DWORD PTR _this$[ebp]
	call	?countParts@MessagePattern@icu_56@@QBEHXZ ; icu_56::MessagePattern::countParts
	mov	DWORD PTR _count$[ebp], eax
; Line 349
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _i$35038[ebp], eax
$LN3@autoQuoteA:
	cmp	DWORD PTR _i$35038[ebp], 0
	jle	SHORT $LN2@autoQuoteA
; Line 350
	mov	eax, DWORD PTR _i$35038[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$35038[ebp], eax
	mov	ecx, DWORD PTR _i$35038[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	DWORD PTR _part$35042[ebp], eax
; Line 351
	mov	ecx, DWORD PTR _part$35042[ebp]
	call	?getType@Part@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@XZ ; icu_56::MessagePattern::Part::getType
	cmp	eax, 3
	jne	SHORT $LN1@autoQuoteA
; Line 352
	mov	eax, DWORD PTR _part$35042[ebp]
	movzx	ecx, WORD PTR [eax+10]
	push	ecx
	mov	edx, DWORD PTR _part$35042[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _modified$[ebp]
	call	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ; icu_56::UnicodeString::insert
$LN1@autoQuoteA:
; Line 354
	jmp	SHORT $LN3@autoQuoteA
$LN2@autoQuoteA:
; Line 355
	lea	eax, DWORD PTR _modified$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	ecx, DWORD PTR $T42953[ebp]
	or	ecx, 1
	mov	DWORD PTR $T42953[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _modified$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@autoQuoteA:
; Line 356
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@autoQuoteA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@autoQuoteA:
	DD	1
	DD	$LN12@autoQuoteA
$LN12@autoQuoteA:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN10@autoQuoteA
$LN10@autoQuoteA:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ$0:
	mov	eax, DWORD PTR $T42953[ebp]
	and	eax, 1
	je	$LN8@autoQuoteA
	and	DWORD PTR $T42953[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN8@autoQuoteA:
	ret	0
__unwindfunclet$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ$1:
	lea	ecx, DWORD PTR _modified$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?autoQuoteApostropheDeep@MessagePattern@icu_56@@QBE?AVUnicodeString@2@XZ ENDP ; icu_56::MessagePattern::autoQuoteApostropheDeep
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getType@Part@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getType@Part@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@XZ PROC ; icu_56::MessagePattern::Part::getType, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 722
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 723
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 724
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getType@Part@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@XZ ENDP ; icu_56::MessagePattern::Part::getType
_TEXT	ENDS
PUBLIC	__real@c19d6f3454000000
PUBLIC	?getNumericValue@MessagePattern@icu_56@@QBENABVPart@12@@Z ; icu_56::MessagePattern::getNumericValue
EXTRN	__fltused:DWORD
;	COMDAT __real@c19d6f3454000000
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
CONST	SEGMENT
__real@c19d6f3454000000 DQ 0c19d6f3454000000r	; -1.23457e+008
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getNumericValue@MessagePattern@icu_56@@QBENABVPart@12@@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_type$ = -20						; size = 4
_this$ = -8						; size = 4
_part$ = 8						; size = 4
?getNumericValue@MessagePattern@icu_56@@QBENABVPart@12@@Z PROC ; icu_56::MessagePattern::getNumericValue, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR _part$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _type$[ebp], ecx
; Line 361
	cmp	DWORD PTR _type$[ebp], 12		; 0000000cH
	jne	SHORT $LN4@getNumeric
; Line 362
	mov	eax, DWORD PTR _part$[ebp]
	movsx	ecx, WORD PTR [eax+10]
	mov	DWORD PTR tv78[ebp], ecx
	fild	DWORD PTR tv78[ebp]
	jmp	SHORT $LN1@getNumeric
	jmp	SHORT $LN1@getNumeric
$LN4@getNumeric:
; Line 363
	cmp	DWORD PTR _type$[ebp], 13		; 0000000dH
	jne	SHORT $LN2@getNumeric
; Line 364
	mov	eax, DWORD PTR _part$[ebp]
	movsx	ecx, WORD PTR [eax+10]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	fld	QWORD PTR [eax+ecx*8]
	jmp	SHORT $LN1@getNumeric
; Line 365
	jmp	SHORT $LN1@getNumeric
$LN2@getNumeric:
; Line 366
	fld	QWORD PTR __real@c19d6f3454000000
$LN1@getNumeric:
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getNumericValue@MessagePattern@icu_56@@QBENABVPart@12@@Z ENDP ; icu_56::MessagePattern::getNumericValue
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?hasNumericValue@Part@MessagePattern@icu_56@@SACW4UMessagePatternPartType@@@Z ; icu_56::MessagePattern::Part::hasNumericValue
PUBLIC	?getPluralOffset@MessagePattern@icu_56@@QBENH@Z	; icu_56::MessagePattern::getPluralOffset
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getPluralOffset@MessagePattern@icu_56@@QBENH@Z
_TEXT	SEGMENT
_part$ = -20						; size = 4
_this$ = -8						; size = 4
_pluralStart$ = 8					; size = 4
?getPluralOffset@MessagePattern@icu_56@@QBENH@Z PROC	; icu_56::MessagePattern::getPluralOffset, COMDAT
; _this$ = ecx
; Line 377
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _pluralStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	DWORD PTR _part$[ebp], eax
; Line 379
	mov	eax, DWORD PTR _part$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?hasNumericValue@Part@MessagePattern@icu_56@@SACW4UMessagePatternPartType@@@Z ; icu_56::MessagePattern::Part::hasNumericValue
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getPluralO
; Line 380
	mov	eax, DWORD PTR _part$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNumericValue@MessagePattern@icu_56@@QBENABVPart@12@@Z ; icu_56::MessagePattern::getNumericValue
	jmp	SHORT $LN1@getPluralO
; Line 381
	jmp	SHORT $LN1@getPluralO
$LN2@getPluralO:
; Line 382
	fldz
$LN1@getPluralO:
; Line 384
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPluralOffset@MessagePattern@icu_56@@QBENH@Z ENDP	; icu_56::MessagePattern::getPluralOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?hasNumericValue@Part@MessagePattern@icu_56@@SACW4UMessagePatternPartType@@@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_type$ = 8						; size = 4
?hasNumericValue@Part@MessagePattern@icu_56@@SACW4UMessagePatternPartType@@@Z PROC ; icu_56::MessagePattern::Part::hasNumericValue, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 787
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 788
	cmp	DWORD PTR _type$[ebp], 12		; 0000000cH
	je	SHORT $LN3@hasNumeric
	cmp	DWORD PTR _type$[ebp], 13		; 0000000dH
	je	SHORT $LN3@hasNumeric
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@hasNumeric
$LN3@hasNumeric:
	mov	BYTE PTR tv66[ebp], 1
$LN4@hasNumeric:
	mov	al, BYTE PTR tv66[ebp]
; Line 789
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasNumericValue@Part@MessagePattern@icu_56@@SACW4UMessagePatternPartType@@@Z ENDP ; icu_56::MessagePattern::Part::hasNumericValue
_TEXT	ENDS
PUBLIC	??8Part@MessagePattern@icu_56@@QBECABV012@@Z	; icu_56::MessagePattern::Part::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8Part@MessagePattern@icu_56@@QBECABV012@@Z
_TEXT	SEGMENT
tv82 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8Part@MessagePattern@icu_56@@QBECABV012@@Z PROC	; icu_56::MessagePattern::Part::operator==, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN1@operator@4
; Line 391
	mov	al, 1
	jmp	SHORT $LN2@operator@4
$LN1@operator@4:
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	mov	edx, DWORD PTR _other$[ebp]
	movzx	eax, WORD PTR [edx+8]
	cmp	ecx, eax
	jne	SHORT $LN4@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+10]
	mov	eax, DWORD PTR _other$[ebp]
	movsx	ecx, WORD PTR [eax+10]
	cmp	edx, ecx
	jne	SHORT $LN4@operator@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN4@operator@4
	mov	BYTE PTR tv82[ebp], 1
	jmp	SHORT $LN5@operator@4
$LN4@operator@4:
	mov	BYTE PTR tv82[ebp], 0
$LN5@operator@4:
	mov	al, BYTE PTR tv82[ebp]
$LN2@operator@4:
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8Part@MessagePattern@icu_56@@QBECABV012@@Z ENDP	; icu_56::MessagePattern::Part::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::preParse, COMDAT
; _this$ = ecx
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 405
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@preParse
; Line 406
	jmp	SHORT $LN3@preParse
$LN2@preParse:
; Line 408
	cmp	DWORD PTR _parseError$[ebp], 0
	je	SHORT $LN1@preParse
; Line 409
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax], 0
; Line 410
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 411
	xor	eax, eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [ecx+8], ax
; Line 412
	xor	eax, eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [ecx+40], ax
$LN1@preParse:
; Line 414
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
; Line 415
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+97], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+96], 0
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 0
; Line 417
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 418
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
$LN3@preParse:
; Line 419
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?preParse@MessagePattern@icu_56@@AAEXABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::preParse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?postParse@MessagePattern@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?postParse@MessagePattern@icu_56@@AAEXXZ PROC		; icu_56::MessagePattern::postParse, COMDAT
; _this$ = ecx
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN2@postParse
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
$LN2@postParse:
; Line 426
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN3@postParse
; Line 427
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax
$LN3@postParse:
; Line 429
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?postParse@MessagePattern@icu_56@@AAEXXZ ENDP		; icu_56::MessagePattern::postParse
_TEXT	ENDS
PUBLIC	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
PUBLIC	?inTopLevelChoiceMessage@MessagePattern@icu_56@@AAECHW4UMessagePatternArgType@@@Z ; icu_56::MessagePattern::inTopLevelChoiceMessage
PUBLIC	?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addLimitPart
PUBLIC	?parseArg@MessagePattern@icu_56@@AAEHHHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseArg
PUBLIC	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv246 = -244						; size = 4
tv196 = -244						; size = 4
tv147 = -244						; size = 4
tv89 = -244						; size = 4
_limitLength$35124 = -44				; size = 4
_c$35097 = -32						; size = 2
_msgStart$ = -20					; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_msgStartLength$ = 12					; size = 4
_nestingLevel$ = 16					; size = 4
_parentType$ = 20					; size = 4
_parseError$ = 24					; size = 4
_errorCode$ = 28					; size = 4
?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseMessage, COMDAT
; _this$ = ecx
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 435
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN34@parseMessa
; Line 436
	xor	eax, eax
	jmp	$LN35@parseMessa
$LN34@parseMessa:
; Line 438
	cmp	DWORD PTR _nestingLevel$[ebp], 32767	; 00007fffH
	jle	SHORT $LN33@parseMessa
; Line 439
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 440
	xor	eax, eax
	jmp	$LN35@parseMessa
$LN33@parseMessa:
; Line 442
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _msgStart$[ebp], ecx
; Line 443
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nestingLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msgStartLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 444
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, DWORD PTR _msgStartLength$[ebp]
	mov	DWORD PTR _index$[ebp], eax
$LN32@parseMessa:
; Line 446
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN30@parseMessa
; Line 447
	xor	eax, eax
	jmp	$LN35@parseMessa
$LN30@parseMessa:
; Line 449
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jl	SHORT $LN29@parseMessa
; Line 450
	jmp	$LN31@parseMessa
$LN29@parseMessa:
; Line 452
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv89[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35097[ebp], ax
; Line 453
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 39					; 00000027H
	jne	$LN28@parseMessa
; Line 454
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jne	SHORT $LN27@parseMessa
; Line 458
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	39					; 00000027H
	push	0
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 1
; Line 460
	jmp	$LN26@parseMessa
$LN27@parseMessa:
; Line 461
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35097[ebp], ax
; Line 462
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN25@parseMessa
; Line 464
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR _errorCode$[ebp]
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR tv147[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 465
	jmp	$LN26@parseMessa
$LN25@parseMessa:
; Line 470
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	je	SHORT $LN22@parseMessa
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 123				; 0000007bH
	je	SHORT $LN22@parseMessa
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 125				; 0000007dH
	je	SHORT $LN22@parseMessa
	cmp	DWORD PTR _parentType$[ebp], 2
	jne	SHORT $LN21@parseMessa
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 124				; 0000007cH
	je	SHORT $LN22@parseMessa
$LN21@parseMessa:
	cmp	DWORD PTR _parentType$[ebp], 3
	je	SHORT $LN20@parseMessa
	cmp	DWORD PTR _parentType$[ebp], 5
	jne	$LN23@parseMessa
$LN20@parseMessa:
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 35					; 00000023H
	jne	$LN23@parseMessa
$LN22@parseMessa:
; Line 472
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _index$[ebp]
	sub	ecx, 1
	push	ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
$LN19@parseMessa:
; Line 475
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	push	39					; 00000027H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ; icu_56::UnicodeString::indexOf
	mov	DWORD PTR _index$[ebp], eax
; Line 476
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN17@parseMessa
; Line 477
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN16@parseMessa
; Line 480
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	push	0
	push	1
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 481
	jmp	SHORT $LN15@parseMessa
$LN16@parseMessa:
; Line 483
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv196[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR _errorCode$[ebp]
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR tv196[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 484
	jmp	SHORT $LN18@parseMessa
$LN15@parseMessa:
; Line 486
	jmp	SHORT $LN14@parseMessa
$LN17@parseMessa:
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _index$[ebp], eax
; Line 491
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	39					; 00000027H
	push	0
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 1
; Line 493
	jmp	SHORT $LN18@parseMessa
$LN14@parseMessa:
; Line 495
	jmp	$LN19@parseMessa
$LN18@parseMessa:
	jmp	SHORT $LN26@parseMessa
$LN23@parseMessa:
; Line 500
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	39					; 00000027H
	push	0
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 501
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+98], 1
$LN26@parseMessa:
; Line 503
	jmp	$LN12@parseMessa
$LN28@parseMessa:
; Line 504
	cmp	DWORD PTR _parentType$[ebp], 3
	je	SHORT $LN10@parseMessa
	cmp	DWORD PTR _parentType$[ebp], 5
	jne	SHORT $LN11@parseMessa
$LN10@parseMessa:
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN11@parseMessa
; Line 507
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _index$[ebp]
	sub	ecx, 1
	push	ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
	jmp	$LN12@parseMessa
$LN11@parseMessa:
; Line 508
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 123				; 0000007bH
	jne	SHORT $LN8@parseMessa
; Line 509
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nestingLevel$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseArg@MessagePattern@icu_56@@AAEHHHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseArg
	mov	DWORD PTR _index$[ebp], eax
; Line 510
	jmp	$LN12@parseMessa
$LN8@parseMessa:
; Line 511
	cmp	DWORD PTR _nestingLevel$[ebp], 0
	jle	SHORT $LN4@parseMessa
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 125				; 0000007dH
	je	SHORT $LN5@parseMessa
$LN4@parseMessa:
	cmp	DWORD PTR _parentType$[ebp], 2
	jne	SHORT $LN12@parseMessa
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 124				; 0000007cH
	jne	SHORT $LN12@parseMessa
$LN5@parseMessa:
; Line 515
	cmp	DWORD PTR _parentType$[ebp], 2
	jne	SHORT $LN37@parseMessa
	movzx	eax, WORD PTR _c$35097[ebp]
	cmp	eax, 125				; 0000007dH
	jne	SHORT $LN37@parseMessa
	mov	DWORD PTR tv246[ebp], 0
	jmp	SHORT $LN38@parseMessa
$LN37@parseMessa:
	mov	DWORD PTR tv246[ebp], 1
$LN38@parseMessa:
	mov	ecx, DWORD PTR tv246[ebp]
	mov	DWORD PTR _limitLength$35124[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nestingLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limitLength$35124[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	push	eax
	push	1
	mov	ecx, DWORD PTR _msgStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addLimitPart
; Line 518
	cmp	DWORD PTR _parentType$[ebp], 2
	jne	SHORT $LN3@parseMessa
; Line 520
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	jmp	SHORT $LN35@parseMessa
; Line 521
	jmp	SHORT $LN12@parseMessa
$LN3@parseMessa:
; Line 523
	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN35@parseMessa
$LN12@parseMessa:
; Line 526
	jmp	$LN32@parseMessa
$LN31@parseMessa:
; Line 527
	cmp	DWORD PTR _nestingLevel$[ebp], 0
	jle	SHORT $LN1@parseMessa
	mov	eax, DWORD PTR _parentType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nestingLevel$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inTopLevelChoiceMessage@MessagePattern@icu_56@@AAECHW4UMessagePatternArgType@@@Z ; icu_56::MessagePattern::inTopLevelChoiceMessage
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@parseMessa
; Line 528
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 529
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65801			; 00010109H
; Line 530
	xor	eax, eax
	jmp	SHORT $LN35@parseMessa
$LN1@parseMessa:
; Line 532
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nestingLevel$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _msgStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addLimitPart
; Line 533
	mov	eax, DWORD PTR _index$[ebp]
$LN35@parseMessa:
; Line 534
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseMessage
_TEXT	ENDS
PUBLIC	?parseSimpleStyle@MessagePattern@icu_56@@AAEHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseSimpleStyle
PUBLIC	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
PUBLIC	?isOrdinal@MessagePattern@icu_56@@AAECH@Z	; icu_56::MessagePattern::isOrdinal
PUBLIC	?isSelect@MessagePattern@icu_56@@AAECH@Z	; icu_56::MessagePattern::isSelect
PUBLIC	?isPlural@MessagePattern@icu_56@@AAECH@Z	; icu_56::MessagePattern::isPlural
PUBLIC	?isChoice@MessagePattern@icu_56@@AAECH@Z	; icu_56::MessagePattern::isChoice
PUBLIC	?isArgTypeChar@MessagePattern@icu_56@@CACH@Z	; icu_56::MessagePattern::isArgTypeChar
PUBLIC	?skipIdentifier@MessagePattern@icu_56@@AAEHH@Z	; icu_56::MessagePattern::skipIdentifier
PUBLIC	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z	; icu_56::MessagePattern::skipWhiteSpace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseArg@MessagePattern@icu_56@@AAEHHHHPAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_length$35161 = -116					; size = 4
_typeIndex$35157 = -104					; size = 4
_c$ = -92						; size = 2
_length$35148 = -80					; size = 4
_length$35143 = -68					; size = 4
_number$ = -56						; size = 4
_nameIndex$ = -44					; size = 4
_argType$ = -32						; size = 4
_argStart$ = -20					; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_argStartLength$ = 12					; size = 4
_nestingLevel$ = 16					; size = 4
_parseError$ = 20					; size = 4
_errorCode$ = 24					; size = 4
?parseArg@MessagePattern@icu_56@@AAEHHHHPAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseArg, COMDAT
; _this$ = ecx
; Line 538
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 539
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _argStart$[ebp], ecx
; Line 540
	mov	DWORD PTR _argType$[ebp], 0
; Line 541
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _argStartLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 542
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN37@parseArg
; Line 543
	xor	eax, eax
	jmp	$LN38@parseArg
$LN37@parseArg:
; Line 545
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, DWORD PTR _argStartLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _nameIndex$[ebp], ecx
; Line 546
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jne	SHORT $LN36@parseArg
; Line 547
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 548
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65801			; 00010109H
; Line 549
	xor	eax, eax
	jmp	$LN38@parseArg
$LN36@parseArg:
; Line 552
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipIdentifier@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipIdentifier
	mov	DWORD PTR _index$[ebp], eax
; Line 553
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nameIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseArgNumber@MessagePattern@icu_56@@AAEHHH@Z ; icu_56::MessagePattern::parseArgNumber
	mov	DWORD PTR _number$[ebp], eax
; Line 554
	cmp	DWORD PTR _number$[ebp], 0
	jl	SHORT $LN35@parseArg
; Line 555
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _nameIndex$[ebp]
	mov	DWORD PTR _length$35143[ebp], eax
; Line 556
	cmp	DWORD PTR _length$35143[ebp], 65535	; 0000ffffH
	jg	SHORT $LN33@parseArg
	cmp	DWORD PTR _number$[ebp], 32767		; 00007fffH
	jle	SHORT $LN34@parseArg
$LN33@parseArg:
; Line 557
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 558
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 559
	xor	eax, eax
	jmp	$LN38@parseArg
$LN34@parseArg:
; Line 561
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+97], 1
; Line 562
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$35143[ebp]
	push	edx
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
	jmp	SHORT $LN32@parseArg
$LN35@parseArg:
; Line 563
	cmp	DWORD PTR _number$[ebp], -1
	jne	SHORT $LN31@parseArg
; Line 564
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _nameIndex$[ebp]
	mov	DWORD PTR _length$35148[ebp], eax
; Line 565
	cmp	DWORD PTR _length$35148[ebp], 65535	; 0000ffffH
	jle	SHORT $LN30@parseArg
; Line 566
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 567
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 568
	xor	eax, eax
	jmp	$LN38@parseArg
$LN30@parseArg:
; Line 570
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 1
; Line 571
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _length$35148[ebp]
	push	ecx
	mov	edx, DWORD PTR _nameIndex$[ebp]
	push	edx
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 572
	jmp	SHORT $LN32@parseArg
$LN31@parseArg:
; Line 573
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 574
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 575
	xor	eax, eax
	jmp	$LN38@parseArg
$LN32@parseArg:
; Line 577
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 578
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jne	SHORT $LN28@parseArg
; Line 579
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 580
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65801			; 00010109H
; Line 581
	xor	eax, eax
	jmp	$LN38@parseArg
$LN28@parseArg:
; Line 583
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
; Line 584
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 125				; 0000007dH
	jne	SHORT $LN27@parseArg
	jmp	$LN26@parseArg
$LN27@parseArg:
; Line 586
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN25@parseArg
; Line 587
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 588
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 589
	xor	eax, eax
	jmp	$LN38@parseArg
; Line 590
	jmp	$LN26@parseArg
$LN25@parseArg:
; Line 592
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _typeIndex$35157[ebp], ecx
$LN23@parseArg:
; Line 593
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jge	SHORT $LN22@parseArg
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	push	ecx
	call	?isArgTypeChar@MessagePattern@icu_56@@CACH@Z ; icu_56::MessagePattern::isArgTypeChar
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@parseArg
; Line 594
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
; Line 595
	jmp	SHORT $LN23@parseArg
$LN22@parseArg:
; Line 596
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _typeIndex$35157[ebp]
	mov	DWORD PTR _length$35161[ebp], eax
; Line 597
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 598
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jne	SHORT $LN21@parseArg
; Line 599
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 600
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65801			; 00010109H
; Line 601
	xor	eax, eax
	jmp	$LN38@parseArg
$LN21@parseArg:
; Line 603
	cmp	DWORD PTR _length$35161[ebp], 0
	je	SHORT $LN19@parseArg
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 44					; 0000002cH
	je	SHORT $LN20@parseArg
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 125				; 0000007dH
	je	SHORT $LN20@parseArg
$LN19@parseArg:
; Line 604
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 605
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 606
	xor	eax, eax
	jmp	$LN38@parseArg
$LN20@parseArg:
; Line 608
	cmp	DWORD PTR _length$35161[ebp], 65535	; 0000ffffH
	jle	SHORT $LN18@parseArg
; Line 609
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 610
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 611
	xor	eax, eax
	jmp	$LN38@parseArg
$LN18@parseArg:
; Line 613
	mov	DWORD PTR _argType$[ebp], 1
; Line 614
	cmp	DWORD PTR _length$35161[ebp], 6
	jne	SHORT $LN17@parseArg
; Line 616
	mov	eax, DWORD PTR _typeIndex$35157[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isChoice@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::isChoice
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@parseArg
; Line 617
	mov	DWORD PTR _argType$[ebp], 2
	jmp	SHORT $LN15@parseArg
$LN16@parseArg:
; Line 618
	mov	eax, DWORD PTR _typeIndex$35157[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isPlural@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::isPlural
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@parseArg
; Line 619
	mov	DWORD PTR _argType$[ebp], 3
	jmp	SHORT $LN15@parseArg
$LN14@parseArg:
; Line 620
	mov	eax, DWORD PTR _typeIndex$35157[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isSelect@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::isSelect
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@parseArg
; Line 621
	mov	DWORD PTR _argType$[ebp], 4
$LN15@parseArg:
; Line 622
	jmp	SHORT $LN11@parseArg
$LN17@parseArg:
; Line 623
	cmp	DWORD PTR _length$35161[ebp], 13	; 0000000dH
	jne	SHORT $LN11@parseArg
; Line 624
	mov	eax, DWORD PTR _typeIndex$35157[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isSelect@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::isSelect
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@parseArg
	mov	eax, DWORD PTR _typeIndex$35157[ebp]
	add	eax, 6
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isOrdinal@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::isOrdinal
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@parseArg
; Line 625
	mov	DWORD PTR _argType$[ebp], 5
$LN11@parseArg:
; Line 629
	mov	eax, DWORD PTR _argStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	mov	dx, WORD PTR _argType$[ebp]
	mov	WORD PTR [eax+10], dx
; Line 630
	cmp	DWORD PTR _argType$[ebp], 1
	jne	SHORT $LN8@parseArg
; Line 631
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _length$35161[ebp]
	push	ecx
	mov	edx, DWORD PTR _typeIndex$35157[ebp]
	push	edx
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
$LN8@parseArg:
; Line 634
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 125				; 0000007dH
	jne	SHORT $LN7@parseArg
; Line 635
	cmp	DWORD PTR _argType$[ebp], 1
	je	SHORT $LN6@parseArg
; Line 636
	mov	eax, DWORD PTR _nameIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 637
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 638
	xor	eax, eax
	jmp	$LN38@parseArg
$LN6@parseArg:
; Line 640
	jmp	SHORT $LN26@parseArg
$LN7@parseArg:
; Line 641
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
; Line 642
	cmp	DWORD PTR _argType$[ebp], 1
	jne	SHORT $LN4@parseArg
; Line 643
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseSimpleStyle@MessagePattern@icu_56@@AAEHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseSimpleStyle
	mov	DWORD PTR _index$[ebp], eax
	jmp	SHORT $LN26@parseArg
$LN4@parseArg:
; Line 644
	cmp	DWORD PTR _argType$[ebp], 2
	jne	SHORT $LN2@parseArg
; Line 645
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nestingLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseChoiceStyle@MessagePattern@icu_56@@AAEHHHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseChoiceStyle
	mov	DWORD PTR _index$[ebp], eax
; Line 646
	jmp	SHORT $LN26@parseArg
$LN2@parseArg:
; Line 647
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nestingLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argType$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parsePluralOrSelectStyle
	mov	DWORD PTR _index$[ebp], eax
$LN26@parseArg:
; Line 652
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argType$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	6
	mov	eax, DWORD PTR _argStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addLimitPart
; Line 653
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
$LN38@parseArg:
; Line 654
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?parseArg@MessagePattern@icu_56@@AAEHHHHPAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseArg
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parseSimpleStyle@MessagePattern@icu_56@@AAEHHPAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv76 = -256						; size = 4
_length$35205 = -56					; size = 4
_c$35196 = -44						; size = 2
_nestedBraces$ = -32					; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_parseError$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?parseSimpleStyle@MessagePattern@icu_56@@AAEHHPAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseSimpleStyle, COMDAT
; _this$ = ecx
; Line 657
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 658
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@parseSimpl
; Line 659
	xor	eax, eax
	jmp	$LN13@parseSimpl
$LN12@parseSimpl:
; Line 661
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 662
	mov	DWORD PTR _nestedBraces$[ebp], 0
$LN11@parseSimpl:
; Line 663
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jge	$LN10@parseSimpl
; Line 664
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35196[ebp], ax
; Line 665
	movzx	eax, WORD PTR _c$35196[ebp]
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN9@parseSimpl
; Line 668
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	push	39					; 00000027H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ; icu_56::UnicodeString::indexOf
	mov	DWORD PTR _index$[ebp], eax
; Line 669
	cmp	DWORD PTR _index$[ebp], 0
	jge	SHORT $LN8@parseSimpl
; Line 671
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 672
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 673
	xor	eax, eax
	jmp	$LN13@parseSimpl
$LN8@parseSimpl:
; Line 676
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	jmp	$LN7@parseSimpl
$LN9@parseSimpl:
; Line 677
	movzx	eax, WORD PTR _c$35196[ebp]
	cmp	eax, 123				; 0000007bH
	jne	SHORT $LN6@parseSimpl
; Line 678
	mov	eax, DWORD PTR _nestedBraces$[ebp]
	add	eax, 1
	mov	DWORD PTR _nestedBraces$[ebp], eax
	jmp	SHORT $LN7@parseSimpl
$LN6@parseSimpl:
; Line 679
	movzx	eax, WORD PTR _c$35196[ebp]
	cmp	eax, 125				; 0000007dH
	jne	SHORT $LN7@parseSimpl
; Line 680
	cmp	DWORD PTR _nestedBraces$[ebp], 0
	jle	SHORT $LN3@parseSimpl
; Line 681
	mov	eax, DWORD PTR _nestedBraces$[ebp]
	sub	eax, 1
	mov	DWORD PTR _nestedBraces$[ebp], eax
; Line 682
	jmp	SHORT $LN7@parseSimpl
$LN3@parseSimpl:
; Line 683
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR _length$35205[ebp], ecx
; Line 684
	cmp	DWORD PTR _length$35205[ebp], 65535	; 0000ffffH
	jle	SHORT $LN1@parseSimpl
; Line 685
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 686
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 687
	xor	eax, eax
	jmp	SHORT $LN13@parseSimpl
$LN1@parseSimpl:
; Line 689
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _length$35205[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 690
	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN13@parseSimpl
$LN7@parseSimpl:
; Line 693
	jmp	$LN11@parseSimpl
$LN10@parseSimpl:
; Line 694
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 695
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65801			; 00010109H
; Line 696
	xor	eax, eax
$LN13@parseSimpl:
; Line 697
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseSimpleStyle@MessagePattern@icu_56@@AAEHHPAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseSimpleStyle
_TEXT	ENDS
PUBLIC	?inMessageFormatPattern@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::inMessageFormatPattern
PUBLIC	?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseDouble
PUBLIC	?skipDouble@MessagePattern@icu_56@@AAEHH@Z	; icu_56::MessagePattern::skipDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseChoiceStyle@MessagePattern@icu_56@@AAEHHHPAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_c$35227 = -56						; size = 2
_length$35222 = -44					; size = 4
_numberIndex$35221 = -32				; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_nestingLevel$ = 12					; size = 4
_parseError$ = 16					; size = 4
_errorCode$ = 20					; size = 4
?parseChoiceStyle@MessagePattern@icu_56@@AAEHHHPAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseChoiceStyle, COMDAT
; _this$ = ecx
; Line 701
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 702
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@parseChoic
; Line 703
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN14@parseChoic:
; Line 705
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 706
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 707
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	je	SHORT $LN12@parseChoic
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 125				; 0000007dH
	jne	SHORT $LN11@parseChoic
$LN12@parseChoic:
; Line 708
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 709
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 710
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN11@parseChoic:
; Line 715
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _numberIndex$35221[ebp], eax
; Line 716
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipDouble@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipDouble
	mov	DWORD PTR _index$[ebp], eax
; Line 717
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _numberIndex$35221[ebp]
	mov	DWORD PTR _length$35222[ebp], eax
; Line 718
	jne	SHORT $LN9@parseChoic
; Line 719
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 720
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 721
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN9@parseChoic:
; Line 723
	cmp	DWORD PTR _length$35222[ebp], 65535	; 0000ffffH
	jle	SHORT $LN8@parseChoic
; Line 724
	mov	eax, DWORD PTR _numberIndex$35221[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 725
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 726
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN8@parseChoic:
; Line 728
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _numberIndex$35221[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseDouble
; Line 729
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseChoic
; Line 730
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN7@parseChoic:
; Line 733
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 734
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jne	SHORT $LN6@parseChoic
; Line 735
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 736
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 737
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN6@parseChoic:
; Line 739
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35227[ebp], ax
; Line 740
	movzx	eax, WORD PTR _c$35227[ebp]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN5@parseChoic
	movzx	eax, WORD PTR _c$35227[ebp]
	cmp	eax, 60					; 0000003cH
	je	SHORT $LN5@parseChoic
	movzx	eax, WORD PTR _c$35227[ebp]
	cmp	eax, 8804				; 00002264H
	je	SHORT $LN5@parseChoic
; Line 741
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 742
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 743
	xor	eax, eax
	jmp	$LN15@parseChoic
$LN5@parseChoic:
; Line 745
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 747
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _parseError$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _nestingLevel$[ebp]
	add	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseMessage
	mov	DWORD PTR _index$[ebp], eax
; Line 748
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@parseChoic
; Line 749
	xor	eax, eax
	jmp	SHORT $LN15@parseChoic
$LN4@parseChoic:
; Line 752
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jne	SHORT $LN3@parseChoic
; Line 753
	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN15@parseChoic
$LN3@parseChoic:
; Line 755
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 125				; 0000007dH
	jne	SHORT $LN2@parseChoic
; Line 756
	mov	eax, DWORD PTR _nestingLevel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inMessageFormatPattern@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::inMessageFormatPattern
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@parseChoic
; Line 757
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 758
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 759
	xor	eax, eax
	jmp	SHORT $LN15@parseChoic
$LN1@parseChoic:
; Line 761
	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN15@parseChoic
$LN2@parseChoic:
; Line 763
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 764
	jmp	$LN11@parseChoic
$LN15@parseChoic:
; Line 765
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?parseChoiceStyle@MessagePattern@icu_56@@AAEHHHPAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseChoiceStyle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_valueIndex$35265 = -104				; size = 4
_length$35260 = -92					; size = 4
_length$35256 = -80					; size = 4
_selectorIndex$35253 = -68				; size = 4
_eos$35248 = -53					; size = 1
_hasOther$ = -41					; size = 1
_isEmpty$ = -29						; size = 1
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_argType$ = 8						; size = 4
_index$ = 12						; size = 4
_nestingLevel$ = 16					; size = 4
_parseError$ = 20					; size = 4
_errorCode$ = 24					; size = 4
?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parsePluralOrSelectStyle, COMDAT
; _this$ = ecx
; Line 770
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 771
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@parsePlura
; Line 772
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN26@parsePlura:
; Line 774
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 775
	mov	BYTE PTR _isEmpty$[ebp], 1
; Line 776
	mov	BYTE PTR _hasOther$[ebp], 0
$LN25@parsePlura:
; Line 781
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 782
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	sete	al
	mov	BYTE PTR _eos$35248[ebp], al
; Line 783
	movsx	eax, BYTE PTR _eos$35248[ebp]
	test	eax, eax
	jne	SHORT $LN22@parsePlura
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 125				; 0000007dH
	jne	SHORT $LN23@parsePlura
$LN22@parsePlura:
; Line 784
	movsx	esi, BYTE PTR _eos$35248[ebp]
	mov	eax, DWORD PTR _nestingLevel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?inMessageFormatPattern@MessagePattern@icu_56@@AAECH@Z ; icu_56::MessagePattern::inMessageFormatPattern
	movsx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN21@parsePlura
; Line 785
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 786
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 787
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN21@parsePlura:
; Line 789
	movsx	eax, BYTE PTR _hasOther$[ebp]
	test	eax, eax
	jne	SHORT $LN20@parsePlura
; Line 790
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 791
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65807			; 0001010fH
; Line 792
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN20@parsePlura:
; Line 794
	mov	eax, DWORD PTR _index$[ebp]
	jmp	$LN27@parsePlura
$LN23@parsePlura:
; Line 796
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _selectorIndex$35253[ebp], eax
; Line 797
	cmp	DWORD PTR _argType$[ebp], 3
	je	SHORT $LN18@parsePlura
	cmp	DWORD PTR _argType$[ebp], 5
	jne	$LN19@parsePlura
$LN18@parsePlura:
	mov	eax, DWORD PTR _selectorIndex$35253[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 61					; 0000003dH
	jne	$LN19@parsePlura
; Line 799
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipDouble@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipDouble
	mov	DWORD PTR _index$[ebp], eax
; Line 800
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _selectorIndex$35253[ebp]
	mov	DWORD PTR _length$35256[ebp], eax
; Line 801
	cmp	DWORD PTR _length$35256[ebp], 1
	jne	SHORT $LN17@parsePlura
; Line 802
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 803
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 804
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN17@parsePlura:
; Line 806
	cmp	DWORD PTR _length$35256[ebp], 65535	; 0000ffffH
	jle	SHORT $LN16@parsePlura
; Line 807
	mov	eax, DWORD PTR _selectorIndex$35253[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 808
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 809
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN16@parsePlura:
; Line 811
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _length$35256[ebp]
	push	ecx
	mov	edx, DWORD PTR _selectorIndex$35253[ebp]
	push	edx
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 813
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _selectorIndex$35253[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseDouble
; Line 814
	jmp	$LN15@parsePlura
$LN19@parsePlura:
; Line 815
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipIdentifier@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipIdentifier
	mov	DWORD PTR _index$[ebp], eax
; Line 816
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _selectorIndex$35253[ebp]
	mov	DWORD PTR _length$35260[ebp], eax
; Line 817
	jne	SHORT $LN14@parsePlura
; Line 818
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 819
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 820
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN14@parsePlura:
; Line 825
	cmp	DWORD PTR _argType$[ebp], 3
	je	SHORT $LN12@parsePlura
	cmp	DWORD PTR _argType$[ebp], 5
	jne	$LN13@parsePlura
$LN12@parsePlura:
	cmp	DWORD PTR _length$35260[ebp], 6
	jne	$LN13@parsePlura
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	jge	$LN13@parsePlura
	push	7
	push	0
	push	OFFSET _kOffsetColon
	push	7
	mov	eax, DWORD PTR _selectorIndex$35253[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN13@parsePlura
; Line 827
	movsx	eax, BYTE PTR _isEmpty$[ebp]
	test	eax, eax
	jne	SHORT $LN11@parsePlura
; Line 829
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 830
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 831
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN11@parsePlura:
; Line 834
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _valueIndex$35265[ebp], eax
; Line 835
	mov	eax, DWORD PTR _valueIndex$35265[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipDouble@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipDouble
	mov	DWORD PTR _index$[ebp], eax
; Line 836
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _valueIndex$35265[ebp]
	jne	SHORT $LN10@parsePlura
; Line 837
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 838
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 839
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN10@parsePlura:
; Line 841
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _valueIndex$35265[ebp]
	cmp	eax, 65535				; 0000ffffH
	jle	SHORT $LN9@parsePlura
; Line 842
	mov	eax, DWORD PTR _valueIndex$35265[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 843
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 844
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN9@parsePlura:
; Line 847
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _valueIndex$35265[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseDouble
; Line 848
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@parsePlura
; Line 849
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN8@parsePlura:
; Line 851
	mov	BYTE PTR _isEmpty$[ebp], 0
; Line 852
	jmp	$LN25@parsePlura
; Line 853
	jmp	SHORT $LN15@parsePlura
$LN13@parsePlura:
; Line 855
	cmp	DWORD PTR _length$35260[ebp], 65535	; 0000ffffH
	jle	SHORT $LN6@parsePlura
; Line 856
	mov	eax, DWORD PTR _selectorIndex$35253[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 857
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 858
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN6@parsePlura:
; Line 860
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _length$35260[ebp]
	push	ecx
	mov	edx, DWORD PTR _selectorIndex$35253[ebp]
	push	edx
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 861
	push	5
	push	0
	push	OFFSET _kOther
	mov	eax, DWORD PTR _length$35260[ebp]
	push	eax
	mov	ecx, DWORD PTR _selectorIndex$35253[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compare
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN15@parsePlura
; Line 862
	mov	BYTE PTR _hasOther$[ebp], 1
$LN15@parsePlura:
; Line 866
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@parsePlura
; Line 867
	xor	eax, eax
	jmp	$LN27@parsePlura
$LN4@parsePlura:
; Line 871
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ; icu_56::MessagePattern::skipWhiteSpace
	mov	DWORD PTR _index$[ebp], eax
; Line 872
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _index$[ebp], eax
	je	SHORT $LN2@parsePlura
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 123				; 0000007bH
	je	SHORT $LN3@parsePlura
$LN2@parsePlura:
; Line 873
	mov	eax, DWORD PTR _selectorIndex$35253[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 874
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
; Line 875
	xor	eax, eax
	jmp	SHORT $LN27@parsePlura
$LN3@parsePlura:
; Line 877
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _argType$[ebp]
	push	edx
	mov	eax, DWORD PTR _nestingLevel$[ebp]
	add	eax, 1
	push	eax
	push	1
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseMessage@MessagePattern@icu_56@@AAEHHHHW4UMessagePatternArgType@@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::MessagePattern::parseMessage
	mov	DWORD PTR _index$[ebp], eax
; Line 878
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parsePlura
; Line 879
	xor	eax, eax
	jmp	SHORT $LN27@parsePlura
$LN1@parsePlura:
; Line 881
	mov	BYTE PTR _isEmpty$[ebp], 0
; Line 882
	jmp	$LN25@parsePlura
$LN27@parsePlura:
; Line 883
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?parsePluralOrSelectStyle@MessagePattern@icu_56@@AAEHW4UMessagePatternArgType@@HHPAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parsePluralOrSelectStyle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parseArgNumber@MessagePattern@icu_56@@CAHABVUnicodeString@2@HH@Z
_TEXT	SEGMENT
tv83 = -232						; size = 4
tv68 = -232						; size = 4
_c$ = -32						; size = 2
_badNumber$ = -17					; size = 1
_number$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?parseArgNumber@MessagePattern@icu_56@@CAHABVUnicodeString@2@HH@Z PROC ; icu_56::MessagePattern::parseArgNumber, COMDAT
; Line 886
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 890
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jl	SHORT $LN14@parseArgNu
; Line 891
	mov	eax, -2					; fffffffeH
	jmp	$LN15@parseArgNu
$LN14@parseArgNu:
; Line 896
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _start$[ebp]
	add	ecx, 1
	mov	DWORD PTR _start$[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
; Line 897
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN13@parseArgNu
; Line 898
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN12@parseArgNu
; Line 899
	xor	eax, eax
	jmp	$LN15@parseArgNu
; Line 900
	jmp	SHORT $LN11@parseArgNu
$LN12@parseArgNu:
; Line 901
	mov	DWORD PTR _number$[ebp], 0
; Line 902
	mov	BYTE PTR _badNumber$[ebp], 1
$LN11@parseArgNu:
; Line 903
	jmp	SHORT $LN7@parseArgNu
$LN13@parseArgNu:
; Line 904
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 49					; 00000031H
	jl	SHORT $LN9@parseArgNu
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN9@parseArgNu
; Line 905
	movzx	eax, WORD PTR _c$[ebp]
	sub	eax, 48					; 00000030H
	mov	DWORD PTR _number$[ebp], eax
; Line 906
	mov	BYTE PTR _badNumber$[ebp], 0
; Line 907
	jmp	SHORT $LN7@parseArgNu
$LN9@parseArgNu:
; Line 908
	or	eax, -1
	jmp	SHORT $LN15@parseArgNu
$LN7@parseArgNu:
; Line 910
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN6@parseArgNu
; Line 911
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR _start$[ebp]
	add	ecx, 1
	mov	DWORD PTR _start$[ebp], ecx
	mov	edx, DWORD PTR tv83[ebp]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
; Line 912
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN5@parseArgNu
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN5@parseArgNu
; Line 913
	cmp	DWORD PTR _number$[ebp], 214748364	; 0cccccccH
	jl	SHORT $LN4@parseArgNu
; Line 914
	mov	BYTE PTR _badNumber$[ebp], 1
$LN4@parseArgNu:
; Line 916
	mov	eax, DWORD PTR _number$[ebp]
	imul	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-48]
	mov	DWORD PTR _number$[ebp], edx
; Line 917
	jmp	SHORT $LN3@parseArgNu
$LN5@parseArgNu:
; Line 918
	or	eax, -1
	jmp	SHORT $LN15@parseArgNu
$LN3@parseArgNu:
; Line 920
	jmp	SHORT $LN7@parseArgNu
$LN6@parseArgNu:
; Line 922
	movsx	eax, BYTE PTR _badNumber$[ebp]
	test	eax, eax
	je	SHORT $LN2@parseArgNu
; Line 923
	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN15@parseArgNu
; Line 924
	jmp	SHORT $LN15@parseArgNu
$LN2@parseArgNu:
; Line 925
	mov	eax, DWORD PTR _number$[ebp]
$LN15@parseArgNu:
; Line 927
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?parseArgNumber@MessagePattern@icu_56@@CAHABVUnicodeString@2@HH@Z ENDP ; icu_56::MessagePattern::parseArgNumber
_TEXT	ENDS
PUBLIC	?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addArgDoublePart
PUBLIC	??_C@_1BI@JIIPEDNH@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$DM?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GK@CEACJPPF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z@4JA ; `icu_56::MessagePattern::parseDouble'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	__imp__strtod:PROC
EXTRN	_strlen:PROC
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC ; icu_56::UnicodeString::extract
EXTRN	_uprv_getInfinity_56:PROC
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1BI@JIIPEDNH@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$DM?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@JIIPEDNH@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$DM?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, '<', 00H, 'l', 00H
	DB	'i', 00H, 'm', 00H, 'i', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@CEACJPPF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1GK@CEACJPPF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'p', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'n', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z@4JA DD 03a3H ; `icu_56::MessagePattern::parseDouble'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv143 = -468						; size = 8
tv170 = -464						; size = 4
tv160 = -464						; size = 4
tv128 = -464						; size = 4
tv87 = -464						; size = 4
tv78 = -464						; size = 4
_numericValue$35341 = -264				; size = 8
_end$35340 = -248					; size = 4
_length$35336 = -236					; size = 4
_capacity$35334 = -224					; size = 4
_numberChars$35333 = -212				; size = 128
_infinity$35326 = -76					; size = 8
_c$35318 = -60						; size = 2
_index$35317 = -48					; size = 4
_isNegative$35316 = -36					; size = 4
_value$35315 = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_allowInfinity$ = 16					; size = 1
_parseError$ = 20					; size = 4
_errorCode$ = 24					; size = 4
?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::parseDouble, COMDAT
; _this$ = ecx
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 468				; 000001d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-468]
	mov	ecx, 117				; 00000075H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 932
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@parseDoubl
; Line 933
	jmp	$LN19@parseDoubl
$LN18@parseDoubl:
; Line 935
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jl	SHORT $LN21@parseDoubl
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z@4JA
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GK@CEACJPPF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BI@JIIPEDNH@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$DM?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@parseDoubl:
; Line 939
	mov	DWORD PTR _value$35315[ebp], 0
; Line 940
	mov	DWORD PTR _isNegative$35316[ebp], 0
; Line 941
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _index$35317[ebp], eax
; Line 942
	mov	eax, DWORD PTR _index$35317[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR _index$35317[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$35317[ebp], ecx
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35318[ebp], ax
; Line 943
	movzx	eax, WORD PTR _c$35318[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN15@parseDoubl
; Line 944
	mov	DWORD PTR _isNegative$35316[ebp], 1
; Line 945
	mov	eax, DWORD PTR _index$35317[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN14@parseDoubl
; Line 946
	jmp	$LN16@parseDoubl
$LN14@parseDoubl:
; Line 948
	mov	eax, DWORD PTR _index$35317[ebp]
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR _index$35317[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$35317[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35318[ebp], ax
	jmp	SHORT $LN12@parseDoubl
$LN15@parseDoubl:
; Line 949
	movzx	eax, WORD PTR _c$35318[ebp]
	cmp	eax, 43					; 0000002bH
	jne	SHORT $LN12@parseDoubl
; Line 950
	mov	eax, DWORD PTR _index$35317[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN11@parseDoubl
; Line 951
	jmp	$LN16@parseDoubl
$LN11@parseDoubl:
; Line 953
	mov	eax, DWORD PTR _index$35317[ebp]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR _index$35317[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$35317[ebp], ecx
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35318[ebp], ax
$LN12@parseDoubl:
; Line 955
	movzx	eax, WORD PTR _c$35318[ebp]
	cmp	eax, 8734				; 0000221eH
	jne	SHORT $LN8@parseDoubl
; Line 956
	movsx	eax, BYTE PTR _allowInfinity$[ebp]
	test	eax, eax
	je	SHORT $LN9@parseDoubl
	mov	eax, DWORD PTR _index$35317[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN9@parseDoubl
; Line 957
	call	_uprv_getInfinity_56
	fstp	QWORD PTR _infinity$35326[ebp]
; Line 960
	cmp	DWORD PTR _isNegative$35316[ebp], 0
	je	SHORT $LN22@parseDoubl
	fld	QWORD PTR _infinity$35326[ebp]
	fchs
	fstp	QWORD PTR tv143[ebp]
	jmp	SHORT $LN23@parseDoubl
$LN22@parseDoubl:
	fld	QWORD PTR _infinity$35326[ebp]
	fstp	QWORD PTR tv143[ebp]
$LN23@parseDoubl:
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR tv143[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addArgDoublePart
; Line 961
	jmp	$LN19@parseDoubl
; Line 962
	jmp	SHORT $LN8@parseDoubl
$LN9@parseDoubl:
; Line 963
	jmp	$LN16@parseDoubl
$LN8@parseDoubl:
; Line 967
	movzx	eax, WORD PTR _c$35318[ebp]
	cmp	eax, 48					; 00000030H
	jl	$LN6@parseDoubl
	movzx	eax, WORD PTR _c$35318[ebp]
	cmp	eax, 57					; 00000039H
	jg	$LN6@parseDoubl
; Line 968
	mov	eax, DWORD PTR _value$35315[ebp]
	imul	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _c$35318[ebp]
	lea	edx, DWORD PTR [eax+ecx-48]
	mov	DWORD PTR _value$35315[ebp], edx
; Line 969
	mov	eax, DWORD PTR _isNegative$35316[ebp]
	add	eax, 32767				; 00007fffH
	cmp	DWORD PTR _value$35315[ebp], eax
	jle	SHORT $LN5@parseDoubl
; Line 970
	jmp	SHORT $LN6@parseDoubl
$LN5@parseDoubl:
; Line 972
	mov	eax, DWORD PTR _index$35317[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN4@parseDoubl
; Line 974
	cmp	DWORD PTR _isNegative$35316[ebp], 0
	je	SHORT $LN24@parseDoubl
	mov	eax, DWORD PTR _value$35315[ebp]
	neg	eax
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN25@parseDoubl
$LN24@parseDoubl:
	mov	ecx, DWORD PTR _value$35315[ebp]
	mov	DWORD PTR tv160[ebp], ecx
$LN25@parseDoubl:
	mov	edx, DWORD PTR _errorCode$[ebp]
	push	edx
	mov	eax, DWORD PTR tv160[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 975
	jmp	$LN19@parseDoubl
$LN4@parseDoubl:
; Line 977
	mov	eax, DWORD PTR _index$35317[ebp]
	mov	DWORD PTR tv170[ebp], eax
	mov	ecx, DWORD PTR _index$35317[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$35317[ebp], ecx
	mov	edx, DWORD PTR tv170[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35318[ebp], ax
; Line 978
	jmp	$LN8@parseDoubl
$LN6@parseDoubl:
; Line 981
	mov	DWORD PTR _capacity$35334[ebp], 128	; 00000080H
; Line 982
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _length$35336[ebp], eax
; Line 983
	mov	eax, DWORD PTR _length$35336[ebp]
	cmp	eax, DWORD PTR _capacity$35334[ebp]
	jl	SHORT $LN3@parseDoubl
; Line 984
	jmp	$LN16@parseDoubl
$LN3@parseDoubl:
; Line 986
	push	0
	mov	eax, DWORD PTR _capacity$35334[ebp]
	push	eax
	lea	ecx, DWORD PTR _numberChars$35333[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$35336[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z ; icu_56::UnicodeString::extract
; Line 987
	lea	eax, DWORD PTR _numberChars$35333[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, DWORD PTR _length$35336[ebp]
	jge	SHORT $LN2@parseDoubl
; Line 988
	jmp	SHORT $LN16@parseDoubl
$LN2@parseDoubl:
; Line 991
	mov	esi, esp
	lea	eax, DWORD PTR _end$35340[ebp]
	push	eax
	lea	ecx, DWORD PTR _numberChars$35333[ebp]
	push	ecx
	call	DWORD PTR __imp__strtod
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _numericValue$35341[ebp]
; Line 992
	mov	eax, DWORD PTR _length$35336[ebp]
	lea	ecx, DWORD PTR _numberChars$35333[ebp+eax]
	cmp	DWORD PTR _end$35340[ebp], ecx
	je	SHORT $LN1@parseDoubl
; Line 993
	jmp	SHORT $LN16@parseDoubl
$LN1@parseDoubl:
; Line 995
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$35336[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _numericValue$35341[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addArgDoublePart
; Line 996
	jmp	SHORT $LN19@parseDoubl
; Line 997
	jmp	$LN21@parseDoubl
$LN16@parseDoubl:
; Line 998
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ; icu_56::MessagePattern::setParseError
; Line 999
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 65799			; 00010107H
$LN19@parseDoubl:
; Line 1001
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@parseDoubl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 468				; 000001d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN29@parseDoubl:
	DD	2
	DD	$LN28@parseDoubl
$LN28@parseDoubl:
	DD	-212					; ffffff2cH
	DD	128					; 00000080H
	DD	$LN26@parseDoubl
	DD	-248					; ffffff08H
	DD	4
	DD	$LN27@parseDoubl
$LN27@parseDoubl:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN26@parseDoubl:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
?parseDouble@MessagePattern@icu_56@@AAEXHHCPAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::parseDouble
_TEXT	ENDS
EXTRN	?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z:PROC ; icu_56::PatternProps::skipWhiteSpace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z
_TEXT	SEGMENT
_t$ = -44						; size = 4
_msgLength$ = -32					; size = 4
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z PROC	; icu_56::MessagePattern::skipWhiteSpace, COMDAT
; _this$ = ecx
; Line 1004
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1005
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _s$[ebp], eax
; Line 1006
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _msgLength$[ebp], eax
; Line 1007
	mov	eax, DWORD PTR _msgLength$[ebp]
	sub	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	call	?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z ; icu_56::PatternProps::skipWhiteSpace
	add	esp, 8
	mov	DWORD PTR _t$[ebp], eax
; Line 1008
	mov	eax, DWORD PTR _t$[ebp]
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
; Line 1009
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?skipWhiteSpace@MessagePattern@icu_56@@AAEHH@Z ENDP	; icu_56::MessagePattern::skipWhiteSpace
_TEXT	ENDS
EXTRN	?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z:PROC ; icu_56::PatternProps::skipIdentifier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipIdentifier@MessagePattern@icu_56@@AAEHH@Z
_TEXT	SEGMENT
_t$ = -44						; size = 4
_msgLength$ = -32					; size = 4
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?skipIdentifier@MessagePattern@icu_56@@AAEHH@Z PROC	; icu_56::MessagePattern::skipIdentifier, COMDAT
; _this$ = ecx
; Line 1012
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1013
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	DWORD PTR _s$[ebp], eax
; Line 1014
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _msgLength$[ebp], eax
; Line 1015
	mov	eax, DWORD PTR _msgLength$[ebp]
	sub	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	call	?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z ; icu_56::PatternProps::skipIdentifier
	add	esp, 8
	mov	DWORD PTR _t$[ebp], eax
; Line 1016
	mov	eax, DWORD PTR _t$[ebp]
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
; Line 1017
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?skipIdentifier@MessagePattern@icu_56@@AAEHH@Z ENDP	; icu_56::MessagePattern::skipIdentifier
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?skipDouble@MessagePattern@icu_56@@AAEHH@Z
_TEXT	SEGMENT
_c$35367 = -32						; size = 2
_msgLength$ = -20					; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?skipDouble@MessagePattern@icu_56@@AAEHH@Z PROC		; icu_56::MessagePattern::skipDouble, COMDAT
; _this$ = ecx
; Line 1020
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1021
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _msgLength$[ebp], eax
$LN5@skipDouble:
; Line 1022
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _msgLength$[ebp]
	jge	SHORT $LN4@skipDouble
; Line 1023
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$35367[ebp], ax
; Line 1025
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 48					; 00000030H
	jge	SHORT $LN1@skipDouble
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 43					; 0000002bH
	je	SHORT $LN1@skipDouble
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN1@skipDouble
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN2@skipDouble
$LN1@skipDouble:
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 57					; 00000039H
	jle	SHORT $LN3@skipDouble
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 101				; 00000065H
	je	SHORT $LN3@skipDouble
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 69					; 00000045H
	je	SHORT $LN3@skipDouble
	movzx	eax, WORD PTR _c$35367[ebp]
	cmp	eax, 8734				; 0000221eH
	je	SHORT $LN3@skipDouble
$LN2@skipDouble:
; Line 1026
	jmp	SHORT $LN4@skipDouble
$LN3@skipDouble:
; Line 1028
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
; Line 1029
	jmp	SHORT $LN5@skipDouble
$LN4@skipDouble:
; Line 1030
	mov	eax, DWORD PTR _index$[ebp]
; Line 1031
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?skipDouble@MessagePattern@icu_56@@AAEHH@Z ENDP		; icu_56::MessagePattern::skipDouble
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isArgTypeChar@MessagePattern@icu_56@@CACH@Z
_TEXT	SEGMENT
tv68 = -193						; size = 1
_c$ = 8							; size = 4
?isArgTypeChar@MessagePattern@icu_56@@CACH@Z PROC	; icu_56::MessagePattern::isArgTypeChar, COMDAT
; Line 1034
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1035
	cmp	DWORD PTR _c$[ebp], 97			; 00000061H
	jl	SHORT $LN3@isArgTypeC
	cmp	DWORD PTR _c$[ebp], 122			; 0000007aH
	jle	SHORT $LN5@isArgTypeC
$LN3@isArgTypeC:
	cmp	DWORD PTR _c$[ebp], 65			; 00000041H
	jl	SHORT $LN4@isArgTypeC
	cmp	DWORD PTR _c$[ebp], 90			; 0000005aH
	jle	SHORT $LN5@isArgTypeC
$LN4@isArgTypeC:
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN6@isArgTypeC
$LN5@isArgTypeC:
	mov	BYTE PTR tv68[ebp], 1
$LN6@isArgTypeC:
	mov	al, BYTE PTR tv68[ebp]
; Line 1036
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isArgTypeChar@MessagePattern@icu_56@@CACH@Z ENDP	; icu_56::MessagePattern::isArgTypeChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isChoice@MessagePattern@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv154 = -237						; size = 1
tv140 = -236						; size = 4
tv130 = -232						; size = 4
tv88 = -228						; size = 4
tv78 = -224						; size = 4
tv68 = -220						; size = 4
_c$ = -20						; size = 2
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?isChoice@MessagePattern@icu_56@@AAECH@Z PROC		; icu_56::MessagePattern::isChoice, COMDAT
; _this$ = ecx
; Line 1039
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1047
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 99					; 00000063H
	je	SHORT $LN3@isChoice
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 67					; 00000043H
	jne	$LN5@isChoice
$LN3@isChoice:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 104				; 00000068H
	je	SHORT $LN4@isChoice
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 72					; 00000048H
	jne	$LN5@isChoice
$LN4@isChoice:
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
	mov	eax, DWORD PTR tv88[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 111				; 0000006fH
	je	SHORT $LN6@isChoice
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 79					; 0000004fH
	jne	$LN5@isChoice
$LN6@isChoice:
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv130[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 105				; 00000069H
	je	SHORT $LN7@isChoice
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 73					; 00000049H
	jne	SHORT $LN5@isChoice
$LN7@isChoice:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 99					; 00000063H
	je	SHORT $LN8@isChoice
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 67					; 00000043H
	jne	SHORT $LN5@isChoice
$LN8@isChoice:
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 101				; 00000065H
	je	SHORT $LN9@isChoice
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 69					; 00000045H
	jne	SHORT $LN5@isChoice
$LN9@isChoice:
	mov	BYTE PTR tv154[ebp], 1
	jmp	SHORT $LN10@isChoice
$LN5@isChoice:
	mov	BYTE PTR tv154[ebp], 0
$LN10@isChoice:
	mov	al, BYTE PTR tv154[ebp]
; Line 1048
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isChoice@MessagePattern@icu_56@@AAECH@Z ENDP		; icu_56::MessagePattern::isChoice
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isPlural@MessagePattern@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv154 = -237						; size = 1
tv140 = -236						; size = 4
tv130 = -232						; size = 4
tv88 = -228						; size = 4
tv78 = -224						; size = 4
tv68 = -220						; size = 4
_c$ = -20						; size = 2
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?isPlural@MessagePattern@icu_56@@AAECH@Z PROC		; icu_56::MessagePattern::isPlural, COMDAT
; _this$ = ecx
; Line 1051
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1059
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 112				; 00000070H
	je	SHORT $LN3@isPlural
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 80					; 00000050H
	jne	$LN5@isPlural
$LN3@isPlural:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 108				; 0000006cH
	je	SHORT $LN4@isPlural
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 76					; 0000004cH
	jne	$LN5@isPlural
$LN4@isPlural:
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
	mov	eax, DWORD PTR tv88[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 117				; 00000075H
	je	SHORT $LN6@isPlural
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 85					; 00000055H
	jne	$LN5@isPlural
$LN6@isPlural:
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv130[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 114				; 00000072H
	je	SHORT $LN7@isPlural
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 82					; 00000052H
	jne	SHORT $LN5@isPlural
$LN7@isPlural:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 97					; 00000061H
	je	SHORT $LN8@isPlural
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65					; 00000041H
	jne	SHORT $LN5@isPlural
$LN8@isPlural:
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 108				; 0000006cH
	je	SHORT $LN9@isPlural
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 76					; 0000004cH
	jne	SHORT $LN5@isPlural
$LN9@isPlural:
	mov	BYTE PTR tv154[ebp], 1
	jmp	SHORT $LN10@isPlural
$LN5@isPlural:
	mov	BYTE PTR tv154[ebp], 0
$LN10@isPlural:
	mov	al, BYTE PTR tv154[ebp]
; Line 1060
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isPlural@MessagePattern@icu_56@@AAECH@Z ENDP		; icu_56::MessagePattern::isPlural
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isSelect@MessagePattern@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv154 = -237						; size = 1
tv140 = -236						; size = 4
tv130 = -232						; size = 4
tv88 = -228						; size = 4
tv78 = -224						; size = 4
tv68 = -220						; size = 4
_c$ = -20						; size = 2
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?isSelect@MessagePattern@icu_56@@AAECH@Z PROC		; icu_56::MessagePattern::isSelect, COMDAT
; _this$ = ecx
; Line 1063
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1071
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 115				; 00000073H
	je	SHORT $LN3@isSelect
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 83					; 00000053H
	jne	$LN5@isSelect
$LN3@isSelect:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 101				; 00000065H
	je	SHORT $LN4@isSelect
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 69					; 00000045H
	jne	$LN5@isSelect
$LN4@isSelect:
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
	mov	eax, DWORD PTR tv88[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 108				; 0000006cH
	je	SHORT $LN6@isSelect
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 76					; 0000004cH
	jne	$LN5@isSelect
$LN6@isSelect:
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv130[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 101				; 00000065H
	je	SHORT $LN7@isSelect
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 69					; 00000045H
	jne	SHORT $LN5@isSelect
$LN7@isSelect:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 99					; 00000063H
	je	SHORT $LN8@isSelect
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 67					; 00000043H
	jne	SHORT $LN5@isSelect
$LN8@isSelect:
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 116				; 00000074H
	je	SHORT $LN9@isSelect
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 84					; 00000054H
	jne	SHORT $LN5@isSelect
$LN9@isSelect:
	mov	BYTE PTR tv154[ebp], 1
	jmp	SHORT $LN10@isSelect
$LN5@isSelect:
	mov	BYTE PTR tv154[ebp], 0
$LN10@isSelect:
	mov	al, BYTE PTR tv154[ebp]
; Line 1072
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isSelect@MessagePattern@icu_56@@AAECH@Z ENDP		; icu_56::MessagePattern::isSelect
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isOrdinal@MessagePattern@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv164 = -241						; size = 1
tv150 = -240						; size = 4
tv140 = -236						; size = 4
tv130 = -232						; size = 4
tv88 = -228						; size = 4
tv78 = -224						; size = 4
tv68 = -220						; size = 4
_c$ = -20						; size = 2
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?isOrdinal@MessagePattern@icu_56@@AAECH@Z PROC		; icu_56::MessagePattern::isOrdinal, COMDAT
; _this$ = ecx
; Line 1075
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1084
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 111				; 0000006fH
	je	SHORT $LN3@isOrdinal
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 79					; 0000004fH
	jne	$LN5@isOrdinal
$LN3@isOrdinal:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 114				; 00000072H
	je	SHORT $LN4@isOrdinal
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 82					; 00000052H
	jne	$LN5@isOrdinal
$LN4@isOrdinal:
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
	mov	eax, DWORD PTR tv88[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 100				; 00000064H
	je	SHORT $LN6@isOrdinal
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 68					; 00000044H
	jne	$LN5@isOrdinal
$LN6@isOrdinal:
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
	mov	edx, DWORD PTR tv130[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 105				; 00000069H
	je	SHORT $LN7@isOrdinal
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 73					; 00000049H
	jne	$LN5@isOrdinal
$LN7@isOrdinal:
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 110				; 0000006eH
	je	SHORT $LN8@isOrdinal
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 78					; 0000004eH
	jne	SHORT $LN5@isOrdinal
$LN8@isOrdinal:
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv150[ebp], ecx
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
	mov	eax, DWORD PTR tv150[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 97					; 00000061H
	je	SHORT $LN9@isOrdinal
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 65					; 00000041H
	jne	SHORT $LN5@isOrdinal
$LN9@isOrdinal:
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 108				; 0000006cH
	je	SHORT $LN10@isOrdinal
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 76					; 0000004cH
	jne	SHORT $LN5@isOrdinal
$LN10@isOrdinal:
	mov	BYTE PTR tv164[ebp], 1
	jmp	SHORT $LN11@isOrdinal
$LN5@isOrdinal:
	mov	BYTE PTR tv164[ebp], 0
$LN11@isOrdinal:
	mov	al, BYTE PTR tv164[ebp]
; Line 1085
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isOrdinal@MessagePattern@icu_56@@AAECH@Z ENDP		; icu_56::MessagePattern::isOrdinal
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?inMessageFormatPattern@MessagePattern@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv75 = -205						; size = 1
_this$ = -8						; size = 4
_nestingLevel$ = 8					; size = 4
?inMessageFormatPattern@MessagePattern@icu_56@@AAECH@Z PROC ; icu_56::MessagePattern::inMessageFormatPattern, COMDAT
; _this$ = ecx
; Line 1088
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1089
	cmp	DWORD PTR _nestingLevel$[ebp], 0
	jg	SHORT $LN3@inMessageF
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@inMessageF
	mov	BYTE PTR tv75[ebp], 0
	jmp	SHORT $LN4@inMessageF
$LN3@inMessageF:
	mov	BYTE PTR tv75[ebp], 1
$LN4@inMessageF:
	mov	al, BYTE PTR tv75[ebp]
; Line 1090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?inMessageFormatPattern@MessagePattern@icu_56@@AAECH@Z ENDP ; icu_56::MessagePattern::inMessageFormatPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?inTopLevelChoiceMessage@MessagePattern@icu_56@@AAECHW4UMessagePatternArgType@@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_nestingLevel$ = 8					; size = 4
_parentType$ = 12					; size = 4
?inTopLevelChoiceMessage@MessagePattern@icu_56@@AAECHW4UMessagePatternArgType@@@Z PROC ; icu_56::MessagePattern::inTopLevelChoiceMessage, COMDAT
; _this$ = ecx
; Line 1093
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1097
	cmp	DWORD PTR _nestingLevel$[ebp], 1
	jne	SHORT $LN3@inTopLevel
	cmp	DWORD PTR _parentType$[ebp], 2
	jne	SHORT $LN3@inTopLevel
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@inTopLevel
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@inTopLevel
$LN3@inTopLevel:
	mov	BYTE PTR tv76[ebp], 0
$LN4@inTopLevel:
	mov	al, BYTE PTR tv76[ebp]
; Line 1098
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?inTopLevelChoiceMessage@MessagePattern@icu_56@@AAECHW4UMessagePatternArgType@@@Z ENDP ; icu_56::MessagePattern::inTopLevelChoiceMessage
_TEXT	ENDS
PUBLIC	?ensureCapacityForOneMore@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::ensureCapacityForOneMore
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -220						; size = 4
_part$35412 = -20					; size = 4
_this$ = -8						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
_value$ = 20						; size = 4
_errorCode$ = 24					; size = 4
?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::addPart, COMDAT
; _this$ = ecx
; Line 1102
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1103
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	?ensureCapacityForOneMore@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::ensureCapacityForOneMore
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@addPart
; Line 1104
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR tv88[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
	mov	edx, DWORD PTR tv88[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	mov	DWORD PTR _part$35412[ebp], eax
; Line 1105
	mov	eax, DWORD PTR _part$35412[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1106
	mov	eax, DWORD PTR _part$35412[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1107
	mov	eax, DWORD PTR _part$35412[ebp]
	mov	cx, WORD PTR _length$[ebp]
	mov	WORD PTR [eax+8], cx
; Line 1108
	mov	eax, DWORD PTR _part$35412[ebp]
	mov	cx, WORD PTR _value$[ebp]
	mov	WORD PTR [eax+10], cx
; Line 1109
	mov	eax, DWORD PTR _part$35412[ebp]
	mov	DWORD PTR [eax+12], 0
$LN2@addPart:
; Line 1111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::addPart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_type$ = 12						; size = 4
_index$ = 16						; size = 4
_length$ = 20						; size = 4
_value$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::addLimitPart, COMDAT
; _this$ = ecx
; Line 1116
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1117
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR [eax+12], ecx
; Line 1118
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
; Line 1119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?addLimitPart@MessagePattern@icu_56@@AAEXHW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::addLimitPart
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@N$07@icu_56@@QAEAANH@Z	; icu_56::MaybeStackArray<double,8>::operator[]
PUBLIC	?ensureCapacityForOneMore@?$MessagePatternList@N$07@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<double,8>::ensureCapacityForOneMore
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv138 = -256						; size = 4
tv79 = -256						; size = 4
$T43082 = -248						; size = 4
$T43083 = -236						; size = 4
_numericIndex$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_numericValue$ = 8					; size = 8
_start$ = 16						; size = 4
_length$ = 20						; size = 4
_errorCode$ = 24					; size = 4
?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z PROC ; icu_56::MessagePattern::addArgDoublePart, COMDAT
; _this$ = ecx
; Line 1123
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1124
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@addArgDoub
; Line 1125
	jmp	$LN8@addArgDoub
$LN7@addArgDoub:
; Line 1127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _numericIndex$[ebp], ecx
; Line 1128
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN6@addArgDoub
; Line 1129
	push	80					; 00000050H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T43083[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T43083[ebp], 0
	je	SHORT $LN10@addArgDoub
	mov	ecx, DWORD PTR $T43083[ebp]
	call	??0MessagePatternDoubleList@icu_56@@QAE@XZ
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN11@addArgDoub
$LN10@addArgDoub:
	mov	DWORD PTR tv79[ebp], 0
$LN11@addArgDoub:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T43082[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T43082[ebp]
	mov	DWORD PTR [ecx+84], edx
; Line 1130
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN5@addArgDoub
; Line 1131
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1132
	jmp	$LN8@addArgDoub
$LN5@addArgDoub:
; Line 1133
	jmp	SHORT $LN1@addArgDoub
$LN6@addArgDoub:
; Line 1134
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?ensureCapacityForOneMore@?$MessagePatternList@N$07@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::MessagePatternList<double,8>::ensureCapacityForOneMore
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@addArgDoub
; Line 1135
	jmp	SHORT $LN8@addArgDoub
; Line 1136
	jmp	SHORT $LN1@addArgDoub
$LN3@addArgDoub:
; Line 1137
	cmp	DWORD PTR _numericIndex$[ebp], 32767	; 00007fffH
	jle	SHORT $LN1@addArgDoub
; Line 1138
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1139
	jmp	SHORT $LN8@addArgDoub
$LN1@addArgDoub:
; Line 1142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR tv138[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], eax
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	??A?$MaybeStackArray@N$07@icu_56@@QAEAANH@Z ; icu_56::MaybeStackArray<double,8>::operator[]
	fld	QWORD PTR _numericValue$[ebp]
	fstp	QWORD PTR [eax]
; Line 1143
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numericIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addPart@MessagePattern@icu_56@@AAEXW4UMessagePatternPartType@@HHHAAW4UErrorCode@@@Z ; icu_56::MessagePattern::addPart
$LN8@addArgDoub:
; Line 1144
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T43083[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addArgDoublePart@MessagePattern@icu_56@@AAEXNHHAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePattern::addArgDoublePart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z
_TEXT	SEGMENT
_length$ = -20						; size = 4
_this$ = -8						; size = 4
_parseError$ = 8					; size = 4
_index$ = 12						; size = 4
?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z PROC ; icu_56::MessagePattern::setParseError, COMDAT
; _this$ = ecx
; Line 1147
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	cmp	DWORD PTR _parseError$[ebp], 0
	jne	SHORT $LN5@setParseEr
; Line 1149
	jmp	$LN6@setParseEr
$LN5@setParseEr:
; Line 1151
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1155
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 1156
	cmp	DWORD PTR _length$[ebp], 16		; 00000010H
	jl	SHORT $LN4@setParseEr
; Line 1157
	mov	DWORD PTR _length$[ebp], 15		; 0000000fH
; Line 1158
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@setParseEr
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??AUnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::operator[]
	movzx	ecx, ax
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 56320				; 0000dc00H
	jne	SHORT $LN4@setParseEr
; Line 1159
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
$LN4@setParseEr:
; Line 1162
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	sub	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extract
; Line 1163
	xor	eax, eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [edx+ecx*2+8], ax
; Line 1166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 1167
	cmp	DWORD PTR _length$[ebp], 16		; 00000010H
	jl	SHORT $LN2@setParseEr
; Line 1168
	mov	DWORD PTR _length$[ebp], 15		; 0000000fH
; Line 1169
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN2@setParseEr
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??AUnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::operator[]
	movzx	eax, ax
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN2@setParseEr
; Line 1170
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
$LN2@setParseEr:
; Line 1173
	push	0
	mov	eax, DWORD PTR _parseError$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extract
; Line 1174
	xor	eax, eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [edx+ecx*2+40], ax
$LN6@setParseEr:
; Line 1175
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setParseError@MessagePattern@icu_56@@AAEXPAUUParseError@@H@Z ENDP ; icu_56::MessagePattern::setParseError
_TEXT	ENDS
PUBLIC	?appendReducedApostrophes@MessageImpl@icu_56@@SAXABVUnicodeString@2@HHAAV32@@Z ; icu_56::MessageImpl::appendReducedApostrophes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendReducedApostrophes@MessageImpl@icu_56@@SAXABVUnicodeString@2@HHAAV32@@Z
_TEXT	SEGMENT
_i$35464 = -20						; size = 4
_doubleApos$ = -8					; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
_sb$ = 20						; size = 4
?appendReducedApostrophes@MessageImpl@icu_56@@SAXABVUnicodeString@2@HHAAV32@@Z PROC ; icu_56::MessageImpl::appendReducedApostrophes, COMDAT
; Line 1181
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1182
	mov	DWORD PTR _doubleApos$[ebp], -1
$LN6@appendRedu:
; Line 1184
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	39					; 00000027H
	mov	ecx, DWORD PTR _s$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ; icu_56::UnicodeString::indexOf
	mov	DWORD PTR _i$35464[ebp], eax
; Line 1185
	cmp	DWORD PTR _i$35464[ebp], 0
	jl	SHORT $LN3@appendRedu
	mov	eax, DWORD PTR _i$35464[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jl	SHORT $LN4@appendRedu
$LN3@appendRedu:
; Line 1186
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sb$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
; Line 1187
	jmp	SHORT $LN7@appendRedu
$LN4@appendRedu:
; Line 1189
	mov	eax, DWORD PTR _i$35464[ebp]
	cmp	eax, DWORD PTR _doubleApos$[ebp]
	jne	SHORT $LN2@appendRedu
; Line 1191
	push	39					; 00000027H
	mov	ecx, DWORD PTR _sb$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 1192
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
; Line 1193
	mov	DWORD PTR _doubleApos$[ebp], -1
; Line 1194
	jmp	SHORT $LN1@appendRedu
$LN2@appendRedu:
; Line 1196
	mov	eax, DWORD PTR _i$35464[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _sb$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
; Line 1197
	mov	eax, DWORD PTR _i$35464[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR _doubleApos$[ebp], ecx
$LN1@appendRedu:
; Line 1199
	jmp	$LN6@appendRedu
$LN7@appendRedu:
; Line 1200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?appendReducedApostrophes@MessageImpl@icu_56@@SAXABVUnicodeString@2@HHAAV32@@Z ENDP ; icu_56::MessageImpl::appendReducedApostrophes
_TEXT	ENDS
PUBLIC	?getIndex@Part@MessagePattern@icu_56@@QBEHXZ	; icu_56::MessagePattern::Part::getIndex
PUBLIC	?getLimit@Part@MessagePattern@icu_56@@QBEHXZ	; icu_56::MessagePattern::Part::getLimit
PUBLIC	?appendSubMessageWithoutSkipSyntax@MessageImpl@icu_56@@SAAAVUnicodeString@2@ABVMessagePattern@2@HAAV32@@Z ; icu_56::MessageImpl::appendSubMessageWithoutSkipSyntax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendSubMessageWithoutSkipSyntax@MessageImpl@icu_56@@SAAAVUnicodeString@2@ABVMessagePattern@2@HAAV32@@Z
_TEXT	SEGMENT
_index$35482 = -68					; size = 4
_type$35481 = -56					; size = 4
_part$35480 = -44					; size = 4
_i$35476 = -32						; size = 4
_prevIndex$ = -20					; size = 4
_msgString$ = -8					; size = 4
_msgPattern$ = 8					; size = 4
_msgStart$ = 12						; size = 4
_result$ = 16						; size = 4
?appendSubMessageWithoutSkipSyntax@MessageImpl@icu_56@@SAAAVUnicodeString@2@ABVMessagePattern@2@HAAV32@@Z PROC ; icu_56::MessageImpl::appendSubMessageWithoutSkipSyntax, COMDAT
; Line 1206
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1207
	mov	ecx, DWORD PTR _msgPattern$[ebp]
	call	?getPatternString@MessagePattern@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::MessagePattern::getPatternString
	mov	DWORD PTR _msgString$[ebp], eax
; Line 1208
	mov	eax, DWORD PTR _msgStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgPattern$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	ecx, eax
	call	?getLimit@Part@MessagePattern@icu_56@@QBEHXZ ; icu_56::MessagePattern::Part::getLimit
	mov	DWORD PTR _prevIndex$[ebp], eax
; Line 1209
	mov	eax, DWORD PTR _msgStart$[ebp]
	mov	DWORD PTR _i$35476[ebp], eax
$LN7@appendSubM:
; Line 1210
	mov	eax, DWORD PTR _i$35476[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35476[ebp], eax
	mov	ecx, DWORD PTR _i$35476[ebp]
	push	ecx
	mov	ecx, DWORD PTR _msgPattern$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	DWORD PTR _part$35480[ebp], eax
; Line 1211
	mov	ecx, DWORD PTR _part$35480[ebp]
	call	?getType@Part@MessagePattern@icu_56@@QBE?AW4UMessagePatternPartType@@XZ ; icu_56::MessagePattern::Part::getType
	mov	DWORD PTR _type$35481[ebp], eax
; Line 1212
	mov	ecx, DWORD PTR _part$35480[ebp]
	call	?getIndex@Part@MessagePattern@icu_56@@QBEHXZ ; icu_56::MessagePattern::Part::getIndex
	mov	DWORD PTR _index$35482[ebp], eax
; Line 1213
	cmp	DWORD PTR _type$35481[ebp], 1
	jne	SHORT $LN5@appendSubM
; Line 1214
	mov	eax, DWORD PTR _index$35482[ebp]
	sub	eax, DWORD PTR _prevIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msgString$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
	jmp	$LN8@appendSubM
	jmp	$LN4@appendSubM
$LN5@appendSubM:
; Line 1215
	cmp	DWORD PTR _type$35481[ebp], 2
	jne	SHORT $LN3@appendSubM
; Line 1216
	mov	eax, DWORD PTR _index$35482[ebp]
	sub	eax, DWORD PTR _prevIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msgString$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
; Line 1217
	mov	ecx, DWORD PTR _part$35480[ebp]
	call	?getLimit@Part@MessagePattern@icu_56@@QBEHXZ ; icu_56::MessagePattern::Part::getLimit
	mov	DWORD PTR _prevIndex$[ebp], eax
	jmp	SHORT $LN4@appendSubM
$LN3@appendSubM:
; Line 1218
	cmp	DWORD PTR _type$35481[ebp], 5
	jne	SHORT $LN4@appendSubM
; Line 1219
	mov	eax, DWORD PTR _index$35482[ebp]
	sub	eax, DWORD PTR _prevIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msgString$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
; Line 1220
	mov	eax, DWORD PTR _index$35482[ebp]
	mov	DWORD PTR _prevIndex$[ebp], eax
; Line 1221
	mov	eax, DWORD PTR _i$35476[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgPattern$[ebp]
	call	?getLimitPartIndex@MessagePattern@icu_56@@QBEHH@Z ; icu_56::MessagePattern::getLimitPartIndex
	mov	DWORD PTR _i$35476[ebp], eax
; Line 1222
	mov	eax, DWORD PTR _i$35476[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgPattern$[ebp]
	call	?getPart@MessagePattern@icu_56@@QBEABVPart@12@H@Z ; icu_56::MessagePattern::getPart
	mov	ecx, eax
	call	?getLimit@Part@MessagePattern@icu_56@@QBEHXZ ; icu_56::MessagePattern::Part::getLimit
	mov	DWORD PTR _index$35482[ebp], eax
; Line 1223
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$35482[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _msgString$[ebp]
	push	eax
	call	?appendReducedApostrophes@MessageImpl@icu_56@@SAXABVUnicodeString@2@HHAAV32@@Z ; icu_56::MessageImpl::appendReducedApostrophes
	add	esp, 16					; 00000010H
; Line 1224
	mov	eax, DWORD PTR _index$35482[ebp]
	mov	DWORD PTR _prevIndex$[ebp], eax
$LN4@appendSubM:
; Line 1226
	jmp	$LN7@appendSubM
$LN8@appendSubM:
; Line 1227
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?appendSubMessageWithoutSkipSyntax@MessageImpl@icu_56@@SAAAVUnicodeString@2@ABVMessagePattern@2@HAAV32@@Z ENDP ; icu_56::MessageImpl::appendSubMessageWithoutSkipSyntax
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getIndex@Part@MessagePattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIndex@Part@MessagePattern@icu_56@@QBEHXZ PROC	; icu_56::MessagePattern::Part::getIndex, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 731
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 732
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 733
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIndex@Part@MessagePattern@icu_56@@QBEHXZ ENDP	; icu_56::MessagePattern::Part::getIndex
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getLimit@Part@MessagePattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLimit@Part@MessagePattern@icu_56@@QBEHXZ PROC	; icu_56::MessagePattern::Part::getLimit, COMDAT
; _this$ = ecx
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 752
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLimit@Part@MessagePattern@icu_56@@QBEHXZ ENDP	; icu_56::MessagePattern::Part::getLimit
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	??0?$MaybeStackArray@N$07@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<double,8>::MaybeStackArray<double,8>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MessagePatternList@N$07@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MessagePatternList@N$07@icu_56@@QAE@XZ PROC	; icu_56::MessagePatternList<double,8>::MessagePatternList<double,8>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@N$07@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<double,8>::MaybeStackArray<double,8>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MessagePatternList@N$07@icu_56@@QAE@XZ ENDP	; icu_56::MessagePatternList<double,8>::MessagePatternList<double,8>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@N$07@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<double,8>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@N$07@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@N$07@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<double,8>::~MaybeStackArray<double,8>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@N$07@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<double,8>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@N$07@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<double,8>::~MaybeStackArray<double,8>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ PROC	; icu_56::MaybeStackArray<double,8>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ENDP	; icu_56::MaybeStackArray<double,8>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@N$07@icu_56@@QAEAANH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@N$07@icu_56@@QAEAANH@Z PROC	; icu_56::MaybeStackArray<double,8>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@N$07@icu_56@@QAEAANH@Z ENDP	; icu_56::MaybeStackArray<double,8>::operator[]
_TEXT	ENDS
PUBLIC	??0?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::MaybeStackArray<icu_56::MessagePattern::Part,32>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ PROC ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::MessagePatternList<icu_56::MessagePattern::Part,32>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::MaybeStackArray<icu_56::MessagePattern::Part,32>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ENDP ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::MessagePatternList<icu_56::MessagePattern::Part,32>
_TEXT	ENDS
PUBLIC	??9Part@MessagePattern@icu_56@@QBECABV012@@Z	; icu_56::MessagePattern::Part::operator!=
PUBLIC	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEABVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBECABV12@H@Z
_TEXT	SEGMENT
_i$37180 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_length$ = 12						; size = 4
?equals@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBECABV12@H@Z PROC ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::equals, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	DWORD PTR _i$37180[ebp], 0
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	eax, DWORD PTR _i$37180[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37180[ebp], eax
$LN4@equals:
	mov	eax, DWORD PTR _i$37180[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN2@equals
; Line 98
	mov	eax, DWORD PTR _i$37180[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEABVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	push	eax
	mov	ecx, DWORD PTR _i$37180[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEABVPart@MessagePattern@1@H@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
	mov	ecx, eax
	call	??9Part@MessagePattern@icu_56@@QBECABV012@@Z ; icu_56::MessagePattern::Part::operator!=
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@equals
	xor	al, al
	jmp	SHORT $LN5@equals
$LN1@equals:
; Line 99
	jmp	SHORT $LN3@equals
$LN2@equals:
; Line 100
	mov	al, 1
$LN5@equals:
; Line 101
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equals@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBECABV12@H@Z ENDP ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::equals
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??9Part@MessagePattern@icu_56@@QBECABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Part@MessagePattern@icu_56@@QBECABV012@@Z PROC	; icu_56::MessagePattern::Part::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 803
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 804
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Part@MessagePattern@icu_56@@QBECABV012@@Z ; icu_56::MessagePattern::Part::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 805
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Part@MessagePattern@icu_56@@QBECABV012@@Z ENDP	; icu_56::MessagePattern::Part::operator!=
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::~MaybeStackArray<icu_56::MessagePattern::Part,32>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::~MaybeStackArray<icu_56::MessagePattern::Part,32>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEAAVPart@MessagePattern@1@H@Z ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@N$07@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@N$07@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<double,8>::MaybeStackArray<double,8>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@N$07@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<double,8>::MaybeStackArray<double,8>
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseArray@?$MaybeStackArray@N$07@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@N$07@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<double,8>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@N$07@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<double,8>::releaseArray
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0Part@MessagePattern@icu_56@@QAE@XZ		; icu_56::MessagePattern::Part::Part
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::MaybeStackArray<icu_56::MessagePattern::Part,32>, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 32			; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	push	OFFSET ??0Part@MessagePattern@icu_56@@QAE@XZ ; icu_56::MessagePattern::Part::Part
	push	32					; 00000020H
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::MaybeStackArray<icu_56::MessagePattern::Part,32>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0Part@MessagePattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Part@MessagePattern@icu_56@@QAE@XZ PROC		; icu_56::MessagePattern::Part::Part, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\messagepattern.h
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Part@MessagePattern@icu_56@@QAE@XZ ENDP		; icu_56::MessagePattern::Part::Part
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEABVPart@MessagePattern@1@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEABVPart@MessagePattern@1@H@Z PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[], COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEABVPart@MessagePattern@1@H@Z ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?releaseArray@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr@2
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr@2:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector@6:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector@6
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector@6
$LN3@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@N$07@icu_56@@QAEPANHH@Z ; icu_56::MaybeStackArray<double,8>::resize
PUBLIC	?getCapacity@?$MaybeStackArray@N$07@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<double,8>::getCapacity
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyFrom@?$MessagePatternList@N$07@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_length$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?copyFrom@?$MessagePatternList@N$07@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z PROC ; icu_56::MessagePatternList<double,8>::copyFrom, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@copyFrom
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN3@copyFrom
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@N$07@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<double,8>::getCapacity
	cmp	DWORD PTR _length$[ebp], eax
	jle	SHORT $LN1@copyFrom
	push	0
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$MaybeStackArray@N$07@icu_56@@QAEPANHH@Z ; icu_56::MaybeStackArray<double,8>::resize
	test	eax, eax
	jne	SHORT $LN1@copyFrom
; Line 114
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 115
	jmp	SHORT $LN3@copyFrom
$LN1@copyFrom:
; Line 117
	push	1
	mov	ecx, DWORD PTR _other$[ebp]
	call	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	eax, DWORD PTR _length$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@N$07@icu_56@@QBEPANXZ ; icu_56::MaybeStackArray<double,8>::getAlias
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN3@copyFrom:
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?copyFrom@?$MessagePatternList@N$07@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePatternList<double,8>::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ensureCapacityForOneMore@?$MessagePatternList@N$07@icu_56@@QAECHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldLength$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?ensureCapacityForOneMore@?$MessagePatternList@N$07@icu_56@@QAECHAAW4UErrorCode@@@Z PROC ; icu_56::MessagePatternList<double,8>::ensureCapacityForOneMore, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\messagepattern.cpp
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ensureCapa
; Line 125
	xor	al, al
	jmp	SHORT $LN4@ensureCapa
$LN3@ensureCapa:
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@N$07@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<double,8>::getCapacity
	cmp	eax, DWORD PTR _oldLength$[ebp]
	jg	SHORT $LN1@ensureCapa
	mov	eax, DWORD PTR _oldLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldLength$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$MaybeStackArray@N$07@icu_56@@QAEPANHH@Z ; icu_56::MaybeStackArray<double,8>::resize
	test	eax, eax
	je	SHORT $LN2@ensureCapa
$LN1@ensureCapa:
; Line 128
	mov	al, 1
	jmp	SHORT $LN4@ensureCapa
$LN2@ensureCapa:
; Line 130
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 131
	xor	al, al
$LN4@ensureCapa:
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureCapacityForOneMore@?$MessagePatternList@N$07@icu_56@@QAECHAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePatternList<double,8>::ensureCapacityForOneMore
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEPAVPart@MessagePattern@2@HH@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::resize
PUBLIC	?getCapacity@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyFrom@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_length$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?copyFrom@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z PROC ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::copyFrom, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@copyFrom@2
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN3@copyFrom@2
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getCapacity
	cmp	DWORD PTR _length$[ebp], eax
	jle	SHORT $LN1@copyFrom@2
	push	0
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEPAVPart@MessagePattern@2@HH@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::resize
	test	eax, eax
	jne	SHORT $LN1@copyFrom@2
; Line 114
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 115
	jmp	SHORT $LN3@copyFrom@2
$LN1@copyFrom@2:
; Line 117
	push	1
	mov	ecx, DWORD PTR _other$[ebp]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	eax, DWORD PTR _length$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEPAVPart@MessagePattern@2@XZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getAlias
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN3@copyFrom@2:
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?copyFrom@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEXABV12@HAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ensureCapacityForOneMore@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAECHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldLength$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?ensureCapacityForOneMore@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAECHAAW4UErrorCode@@@Z PROC ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::ensureCapacityForOneMore, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ensureCapa@2
; Line 125
	xor	al, al
	jmp	SHORT $LN4@ensureCapa@2
$LN3@ensureCapa@2:
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getCapacity
	cmp	eax, DWORD PTR _oldLength$[ebp]
	jg	SHORT $LN1@ensureCapa@2
	mov	eax, DWORD PTR _oldLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldLength$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEPAVPart@MessagePattern@2@HH@Z ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::resize
	test	eax, eax
	je	SHORT $LN2@ensureCapa@2
$LN1@ensureCapa@2:
; Line 128
	mov	al, 1
	jmp	SHORT $LN4@ensureCapa@2
$LN2@ensureCapa@2:
; Line 130
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 131
	xor	al, al
$LN4@ensureCapa@2:
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureCapacityForOneMore@?$MessagePatternList@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAECHAAW4UErrorCode@@@Z ENDP ; icu_56::MessagePatternList<icu_56::MessagePattern::Part,32>::ensureCapacityForOneMore
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCapacity@?$MaybeStackArray@N$07@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@N$07@icu_56@@QBEHXZ PROC	; icu_56::MaybeStackArray<double,8>::getCapacity, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@N$07@icu_56@@QBEHXZ ENDP	; icu_56::MaybeStackArray<double,8>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCapacity@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getCapacity, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::getCapacity
_TEXT	ENDS
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackArray@N$07@icu_56@@QAEPANHH@Z
_TEXT	SEGMENT
_p$40162 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@N$07@icu_56@@QAEPANHH@Z PROC	; icu_56::MaybeStackArray<double,8>::resize, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$40162[ebp], eax
; Line 421
	cmp	DWORD PTR _p$40162[ebp], 0
	je	SHORT $LN5@resize
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$40162[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@N$07@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<double,8>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$40162[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize:
; Line 436
	mov	eax, DWORD PTR _p$40162[ebp]
	jmp	SHORT $LN7@resize
; Line 437
	jmp	SHORT $LN7@resize
$LN6@resize:
; Line 438
	xor	eax, eax
$LN7@resize:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@N$07@icu_56@@QAEPANHH@Z ENDP	; icu_56::MaybeStackArray<double,8>::resize
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?resize@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEPAVPart@MessagePattern@2@HH@Z
_TEXT	SEGMENT
_p$40180 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEPAVPart@MessagePattern@2@HH@Z PROC ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::resize, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize@2
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	shl	eax, 4
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$40180[ebp], eax
; Line 421
	cmp	DWORD PTR _p$40180[ebp], 0
	je	SHORT $LN5@resize@2
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize@2
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize@2
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize@2:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize@2
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize@2:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$40180[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize@2:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$40180[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize@2:
; Line 436
	mov	eax, DWORD PTR _p$40180[ebp]
	jmp	SHORT $LN7@resize@2
; Line 437
	jmp	SHORT $LN7@resize@2
$LN6@resize@2:
; Line 438
	xor	eax, eax
$LN7@resize@2:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@VPart@MessagePattern@icu_56@@$0CA@@icu_56@@QAEPAVPart@MessagePattern@2@HH@Z ENDP ; icu_56::MaybeStackArray<icu_56::MessagePattern::Part,32>::resize
_TEXT	ENDS
END

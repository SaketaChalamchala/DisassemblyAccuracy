; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\patternprops.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_latin1	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	00H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	00H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_index2000 DB	02H
	DB	03H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	06H
	DB	07H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	09H
	ORG $+2
_syntax2000 DD	00H
	DD	0ffffffffH
	DD	0ffff0000H
	DD	07fff00ffH
	DD	07feffffeH
	DD	0ffff0000H
	DD	03fffffH
	DD	0fff00000H
	DD	0ffffff0eH
	DD	010001H
_syntaxOrWhiteSpace2000 DD 00H
	DD	0ffffffffH
	DD	0ffffc000H
	DD	07fff03ffH
	DD	07feffffeH
	DD	0ffff0000H
	DD	03fffffH
	DD	0fff00000H
	DD	0ffffff0eH
	DD	010001H
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PatternProps::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PatternProps::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PatternProps::operator=
_TEXT	ENDS
PUBLIC	?isSyntax@PatternProps@icu_56@@SACH@Z		; icu_56::PatternProps::isSyntax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSyntax@PatternProps@icu_56@@SACH@Z
_TEXT	SEGMENT
tv89 = -205						; size = 1
_bits$6338 = -8						; size = 4
_c$ = 8							; size = 4
?isSyntax@PatternProps@icu_56@@SACH@Z PROC		; icu_56::PatternProps::isSyntax, COMDAT
; File d:\mozilla\intl\icu\source\common\patternprops.cpp
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 118
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN10@isSyntax
; Line 119
	xor	al, al
	jmp	$LN11@isSyntax
	jmp	$LN11@isSyntax
$LN10@isSyntax:
; Line 120
	cmp	DWORD PTR _c$[ebp], 255			; 000000ffH
	jg	SHORT $LN8@isSyntax
; Line 121
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR _latin1[eax]
	sar	ecx, 1
	movsx	eax, cl
	and	eax, 1
	jmp	$LN11@isSyntax
	jmp	$LN11@isSyntax
$LN8@isSyntax:
; Line 122
	cmp	DWORD PTR _c$[ebp], 8208		; 00002010H
	jge	SHORT $LN6@isSyntax
; Line 123
	xor	al, al
	jmp	SHORT $LN11@isSyntax
	jmp	SHORT $LN11@isSyntax
$LN6@isSyntax:
; Line 124
	cmp	DWORD PTR _c$[ebp], 12336		; 00003030H
	jg	SHORT $LN4@isSyntax
; Line 125
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 8192				; 00002000H
	sar	eax, 5
	movzx	ecx, BYTE PTR _index2000[eax]
	mov	edx, DWORD PTR _syntax2000[ecx*4]
	mov	DWORD PTR _bits$6338[ebp], edx
; Line 126
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	mov	eax, DWORD PTR _bits$6338[ebp]
	shr	eax, cl
	and	eax, 1
	jmp	SHORT $LN11@isSyntax
	jmp	SHORT $LN11@isSyntax
$LN4@isSyntax:
; Line 127
	cmp	DWORD PTR _c$[ebp], 64830		; 0000fd3eH
	jl	SHORT $LN2@isSyntax
	cmp	DWORD PTR _c$[ebp], 65094		; 0000fe46H
	jg	SHORT $LN2@isSyntax
; Line 128
	cmp	DWORD PTR _c$[ebp], 64831		; 0000fd3fH
	jle	SHORT $LN13@isSyntax
	cmp	DWORD PTR _c$[ebp], 65093		; 0000fe45H
	jge	SHORT $LN13@isSyntax
	mov	BYTE PTR tv89[ebp], 0
	jmp	SHORT $LN14@isSyntax
$LN13@isSyntax:
	mov	BYTE PTR tv89[ebp], 1
$LN14@isSyntax:
	mov	al, BYTE PTR tv89[ebp]
	jmp	SHORT $LN11@isSyntax
; Line 129
	jmp	SHORT $LN11@isSyntax
$LN2@isSyntax:
; Line 130
	xor	al, al
$LN11@isSyntax:
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSyntax@PatternProps@icu_56@@SACH@Z ENDP		; icu_56::PatternProps::isSyntax
_TEXT	ENDS
PUBLIC	?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isSyntaxOrWhiteSpace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z
_TEXT	SEGMENT
tv86 = -205						; size = 1
_bits$6354 = -8						; size = 4
_c$ = 8							; size = 4
?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z PROC	; icu_56::PatternProps::isSyntaxOrWhiteSpace, COMDAT
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 136
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN10@isSyntaxOr
; Line 137
	xor	al, al
	jmp	$LN11@isSyntaxOr
	jmp	$LN11@isSyntaxOr
$LN10@isSyntaxOr:
; Line 138
	cmp	DWORD PTR _c$[ebp], 255			; 000000ffH
	jg	SHORT $LN8@isSyntaxOr
; Line 139
	mov	eax, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR _latin1[eax]
	and	eax, 1
	jmp	$LN11@isSyntaxOr
	jmp	$LN11@isSyntaxOr
$LN8@isSyntaxOr:
; Line 140
	cmp	DWORD PTR _c$[ebp], 8206		; 0000200eH
	jge	SHORT $LN6@isSyntaxOr
; Line 141
	xor	al, al
	jmp	SHORT $LN11@isSyntaxOr
	jmp	SHORT $LN11@isSyntaxOr
$LN6@isSyntaxOr:
; Line 142
	cmp	DWORD PTR _c$[ebp], 12336		; 00003030H
	jg	SHORT $LN4@isSyntaxOr
; Line 143
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 8192				; 00002000H
	sar	eax, 5
	movzx	ecx, BYTE PTR _index2000[eax]
	mov	edx, DWORD PTR _syntaxOrWhiteSpace2000[ecx*4]
	mov	DWORD PTR _bits$6354[ebp], edx
; Line 144
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	mov	eax, DWORD PTR _bits$6354[ebp]
	shr	eax, cl
	and	eax, 1
	jmp	SHORT $LN11@isSyntaxOr
	jmp	SHORT $LN11@isSyntaxOr
$LN4@isSyntaxOr:
; Line 145
	cmp	DWORD PTR _c$[ebp], 64830		; 0000fd3eH
	jl	SHORT $LN2@isSyntaxOr
	cmp	DWORD PTR _c$[ebp], 65094		; 0000fe46H
	jg	SHORT $LN2@isSyntaxOr
; Line 146
	cmp	DWORD PTR _c$[ebp], 64831		; 0000fd3fH
	jle	SHORT $LN13@isSyntaxOr
	cmp	DWORD PTR _c$[ebp], 65093		; 0000fe45H
	jge	SHORT $LN13@isSyntaxOr
	mov	BYTE PTR tv86[ebp], 0
	jmp	SHORT $LN14@isSyntaxOr
$LN13@isSyntaxOr:
	mov	BYTE PTR tv86[ebp], 1
$LN14@isSyntaxOr:
	mov	al, BYTE PTR tv86[ebp]
	jmp	SHORT $LN11@isSyntaxOr
; Line 147
	jmp	SHORT $LN11@isSyntaxOr
$LN2@isSyntaxOr:
; Line 148
	xor	al, al
$LN11@isSyntaxOr:
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z ENDP	; icu_56::PatternProps::isSyntaxOrWhiteSpace
_TEXT	ENDS
PUBLIC	?isWhiteSpace@PatternProps@icu_56@@SACH@Z	; icu_56::PatternProps::isWhiteSpace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWhiteSpace@PatternProps@icu_56@@SACH@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_c$ = 8							; size = 4
?isWhiteSpace@PatternProps@icu_56@@SACH@Z PROC		; icu_56::PatternProps::isWhiteSpace, COMDAT
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 154
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN6@isWhiteSpa
; Line 155
	xor	al, al
	jmp	SHORT $LN7@isWhiteSpa
	jmp	SHORT $LN7@isWhiteSpa
$LN6@isWhiteSpa:
; Line 156
	cmp	DWORD PTR _c$[ebp], 255			; 000000ffH
	jg	SHORT $LN4@isWhiteSpa
; Line 157
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR _latin1[eax]
	sar	ecx, 2
	movsx	eax, cl
	and	eax, 1
	jmp	SHORT $LN7@isWhiteSpa
	jmp	SHORT $LN7@isWhiteSpa
$LN4@isWhiteSpa:
; Line 158
	cmp	DWORD PTR _c$[ebp], 8206		; 0000200eH
	jl	SHORT $LN2@isWhiteSpa
	cmp	DWORD PTR _c$[ebp], 8233		; 00002029H
	jg	SHORT $LN2@isWhiteSpa
; Line 159
	cmp	DWORD PTR _c$[ebp], 8207		; 0000200fH
	jle	SHORT $LN9@isWhiteSpa
	cmp	DWORD PTR _c$[ebp], 8232		; 00002028H
	jge	SHORT $LN9@isWhiteSpa
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN10@isWhiteSpa
$LN9@isWhiteSpa:
	mov	BYTE PTR tv77[ebp], 1
$LN10@isWhiteSpa:
	mov	al, BYTE PTR tv77[ebp]
	jmp	SHORT $LN7@isWhiteSpa
; Line 160
	jmp	SHORT $LN7@isWhiteSpa
$LN2@isWhiteSpa:
; Line 161
	xor	al, al
$LN7@isWhiteSpa:
; Line 163
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWhiteSpace@PatternProps@icu_56@@SACH@Z ENDP		; icu_56::PatternProps::isWhiteSpace
_TEXT	ENDS
PUBLIC	?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z ; icu_56::PatternProps::skipWhiteSpace
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_length$ = 12						; size = 4
?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z PROC	; icu_56::PatternProps::skipWhiteSpace, COMDAT
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@skipWhiteS:
; Line 167
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN1@skipWhiteS
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?isWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isWhiteSpace
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@skipWhiteS
; Line 168
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 169
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 170
	jmp	SHORT $LN2@skipWhiteS
$LN1@skipWhiteS:
; Line 171
	mov	eax, DWORD PTR _s$[ebp]
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z ENDP	; icu_56::PatternProps::skipWhiteSpace
_TEXT	ENDS
PUBLIC	?trimWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WAAH@Z ; icu_56::PatternProps::trimWhiteSpace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?trimWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WAAH@Z
_TEXT	SEGMENT
_limit$ = -20						; size = 4
_start$ = -8						; size = 4
_s$ = 8							; size = 4
_length$ = 12						; size = 4
?trimWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WAAH@Z PROC ; icu_56::PatternProps::trimWhiteSpace, COMDAT
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 176
	mov	eax, DWORD PTR _length$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN6@trimWhiteS
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?isWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isWhiteSpace
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN7@trimWhiteS
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	push	eax
	call	?isWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isWhiteSpace
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@trimWhiteS
$LN6@trimWhiteS:
; Line 177
	mov	eax, DWORD PTR _s$[ebp]
	jmp	SHORT $LN8@trimWhiteS
$LN7@trimWhiteS:
; Line 179
	mov	DWORD PTR _start$[ebp], 0
; Line 180
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _limit$[ebp], ecx
$LN5@trimWhiteS:
; Line 181
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN4@trimWhiteS
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	push	edx
	call	?isWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isWhiteSpace
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@trimWhiteS
; Line 182
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
; Line 183
	jmp	SHORT $LN5@trimWhiteS
$LN4@trimWhiteS:
; Line 184
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN3@trimWhiteS
$LN2@trimWhiteS:
; Line 187
	mov	eax, DWORD PTR _limit$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	push	edx
	call	?isWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isWhiteSpace
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@trimWhiteS
; Line 188
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
; Line 189
	jmp	SHORT $LN2@trimWhiteS
$LN3@trimWhiteS:
; Line 191
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 192
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]
$LN8@trimWhiteS:
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?trimWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WAAH@Z ENDP ; icu_56::PatternProps::trimWhiteSpace
_TEXT	ENDS
PUBLIC	?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z	; icu_56::PatternProps::isIdentifier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_limit$ = -8						; size = 4
_s$ = 8							; size = 4
_length$ = 12						; size = 4
?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z PROC	; icu_56::PatternProps::isIdentifier, COMDAT
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN5@isIdentifi
; Line 198
	xor	al, al
	jmp	SHORT $LN6@isIdentifi
$LN5@isIdentifi:
; Line 200
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _limit$[ebp], edx
$LN4@isIdentifi:
; Line 202
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR tv70[ebp]
	push	eax
	call	?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isSyntaxOrWhiteSpace
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isIdentifi
; Line 203
	xor	al, al
	jmp	SHORT $LN6@isIdentifi
$LN3@isIdentifi:
; Line 205
	mov	eax, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jb	SHORT $LN4@isIdentifi
; Line 206
	mov	al, 1
$LN6@isIdentifi:
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z ENDP	; icu_56::PatternProps::isIdentifier
_TEXT	ENDS
PUBLIC	?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z ; icu_56::PatternProps::skipIdentifier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_length$ = 12						; size = 4
?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z PROC	; icu_56::PatternProps::skipIdentifier, COMDAT
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@skipIdenti:
; Line 211
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN1@skipIdenti
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isSyntaxOrWhiteSpace
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@skipIdenti
; Line 212
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 213
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 214
	jmp	SHORT $LN2@skipIdenti
$LN1@skipIdenti:
; Line 215
	mov	eax, DWORD PTR _s$[ebp]
; Line 216
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z ENDP	; icu_56::PatternProps::skipIdentifier
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\udatamem.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_UDataMemory_init_56
EXTRN	_memset:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\udatamem.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _UDataMemory_init_56
_TEXT	SEGMENT
_This$ = 8						; size = 4
_UDataMemory_init_56 PROC				; COMDAT
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 27
	push	28					; 0000001cH
	push	0
	mov	eax, DWORD PTR _This$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 28
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR [eax+24], -1
; Line 29
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UDataMemory_init_56 ENDP
_TEXT	ENDS
PUBLIC	_UDatamemory_assign_56
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UDatamemory_assign_56
_TEXT	SEGMENT
_mallocedFlag$ = -5					; size = 1
_dest$ = 8						; size = 4
_source$ = 12						; size = 4
_UDatamemory_assign_56 PROC				; COMDAT
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 34
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cl, BYTE PTR [eax+12]
	mov	BYTE PTR _mallocedFlag$[ebp], cl
; Line 35
	push	1
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 36
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cl, BYTE PTR _mallocedFlag$[ebp]
	mov	BYTE PTR [eax+12], cl
; Line 37
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UDatamemory_assign_56 ENDP
_TEXT	ENDS
PUBLIC	_UDataMemory_createNewInstance_56
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UDataMemory_createNewInstance_56
_TEXT	SEGMENT
_This$ = -8						; size = 4
_pErr$ = 8						; size = 4
_UDataMemory_createNewInstance_56 PROC			; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _pErr$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@UDataMemor
; Line 43
	xor	eax, eax
	jmp	SHORT $LN4@UDataMemor
$LN3@UDataMemor:
; Line 45
	push	28					; 0000001cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _This$[ebp], eax
; Line 46
	cmp	DWORD PTR _This$[ebp], 0
	jne	SHORT $LN2@UDataMemor
; Line 47
	mov	eax, DWORD PTR _pErr$[ebp]
	mov	DWORD PTR [eax], 7
; Line 48
	jmp	SHORT $LN1@UDataMemor
$LN2@UDataMemor:
; Line 49
	mov	eax, DWORD PTR _This$[ebp]
	push	eax
	call	_UDataMemory_init_56
	add	esp, 4
; Line 50
	mov	eax, DWORD PTR _This$[ebp]
	mov	BYTE PTR [eax+12], 1
$LN1@UDataMemor:
; Line 52
	mov	eax, DWORD PTR _This$[ebp]
$LN4@UDataMemor:
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UDataMemory_createNewInstance_56 ENDP
_TEXT	ENDS
PUBLIC	_UDataMemory_normalizeDataPointer_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UDataMemory_normalizeDataPointer_56
_TEXT	SEGMENT
_pdh$ = -8						; size = 4
_p$ = 8							; size = 4
_UDataMemory_normalizeDataPointer_56 PROC		; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _pdh$[ebp], eax
; Line 60
	cmp	DWORD PTR _pdh$[ebp], 0
	je	SHORT $LN2@UDataMemor@2
	mov	eax, DWORD PTR _pdh$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	cmp	ecx, 218				; 000000daH
	jne	SHORT $LN3@UDataMemor@2
	mov	eax, DWORD PTR _pdh$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN3@UDataMemor@2
$LN2@UDataMemor@2:
; Line 61
	mov	eax, DWORD PTR _pdh$[ebp]
	jmp	SHORT $LN4@UDataMemor@2
; Line 62
	jmp	SHORT $LN4@UDataMemor@2
$LN3@UDataMemor@2:
; Line 78
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 8
$LN4@UDataMemor@2:
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_UDataMemory_normalizeDataPointer_56 ENDP
_TEXT	ENDS
PUBLIC	_UDataMemory_setData_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UDataMemory_setData_56
_TEXT	SEGMENT
_This$ = 8						; size = 4
_dataAddr$ = 12						; size = 4
_UDataMemory_setData_56 PROC				; COMDAT
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 85
	mov	eax, DWORD PTR _dataAddr$[ebp]
	push	eax
	call	_UDataMemory_normalizeDataPointer_56
	add	esp, 4
	mov	ecx, DWORD PTR _This$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UDataMemory_setData_56 ENDP
_TEXT	ENDS
PUBLIC	_udata_close_56
EXTRN	_uprv_free_56:PROC
EXTRN	_uprv_unmapFile_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udata_close_56
_TEXT	SEGMENT
_pData$ = 8						; size = 4
_udata_close_56 PROC					; COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 91
	cmp	DWORD PTR _pData$[ebp], 0
	je	SHORT $LN4@udata_clos
; Line 92
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_uprv_unmapFile_56
	add	esp, 4
; Line 93
	mov	eax, DWORD PTR _pData$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@udata_clos
; Line 94
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 95
	jmp	SHORT $LN4@udata_clos
$LN2@udata_clos:
; Line 96
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_UDataMemory_init_56
	add	esp, 4
$LN4@udata_clos:
; Line 99
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udata_close_56 ENDP
_TEXT	ENDS
PUBLIC	_udata_getMemory_56
EXTRN	_udata_getHeaderSize_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udata_getMemory_56
_TEXT	SEGMENT
_pData$ = 8						; size = 4
_udata_getMemory_56 PROC				; COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	cmp	DWORD PTR _pData$[ebp], 0
	je	SHORT $LN2@udata_getM
	mov	eax, DWORD PTR _pData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@udata_getM
; Line 104
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_udata_getHeaderSize_56
	add	esp, 4
	movzx	eax, ax
	mov	edx, DWORD PTR _pData$[ebp]
	add	eax, DWORD PTR [edx+4]
	jmp	SHORT $LN3@udata_getM
; Line 105
	jmp	SHORT $LN3@udata_getM
$LN2@udata_getM:
; Line 106
	xor	eax, eax
$LN3@udata_getM:
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udata_getMemory_56 ENDP
_TEXT	ENDS
PUBLIC	_udata_getLength_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udata_getLength_56
_TEXT	SEGMENT
_pData$ = 8						; size = 4
_udata_getLength_56 PROC				; COMDAT
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 132
	cmp	DWORD PTR _pData$[ebp], 0
	je	SHORT $LN2@udata_getL
	mov	eax, DWORD PTR _pData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@udata_getL
	mov	eax, DWORD PTR _pData$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jl	SHORT $LN2@udata_getL
; Line 137
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_udata_getHeaderSize_56
	add	esp, 4
	movzx	edx, ax
	mov	eax, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, edx
	jmp	SHORT $LN3@udata_getL
; Line 138
	jmp	SHORT $LN3@udata_getL
$LN2@udata_getL:
; Line 139
	or	eax, -1
$LN3@udata_getL:
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udata_getLength_56 ENDP
_TEXT	ENDS
PUBLIC	_udata_getRawMemory_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udata_getRawMemory_56
_TEXT	SEGMENT
_pData$ = 8						; size = 4
_udata_getRawMemory_56 PROC				; COMDAT
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	cmp	DWORD PTR _pData$[ebp], 0
	je	SHORT $LN2@udata_getR
	mov	eax, DWORD PTR _pData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@udata_getR
; Line 151
	mov	eax, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN3@udata_getR
; Line 152
	jmp	SHORT $LN3@udata_getR
$LN2@udata_getR:
; Line 153
	xor	eax, eax
$LN3@udata_getR:
; Line 155
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_udata_getRawMemory_56 ENDP
_TEXT	ENDS
PUBLIC	_UDataMemory_isLoaded_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UDataMemory_isLoaded_56
_TEXT	SEGMENT
_This$ = 8						; size = 4
_UDataMemory_isLoaded_56 PROC				; COMDAT
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 158
	mov	eax, DWORD PTR _This$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	setne	cl
	mov	al, cl
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_UDataMemory_isLoaded_56 ENDP
_TEXT	ENDS
END

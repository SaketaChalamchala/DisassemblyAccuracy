; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\uvector.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
?classID@?1??getStaticClassID@UVector@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::UVector::getStaticClassID'::`2'::classID
_BSS	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1UVector@icu_56@@UAE@XZ			; icu_56::UVector::~UVector
PUBLIC	??_GUVector@icu_56@@UAEPAXI@Z			; icu_56::UVector::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UVector@icu_56@@UAE@XZ		; icu_56::UVector::~UVector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUVector@icu_56@@UAEPAXI@Z			; icu_56::UVector::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUVector@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUVector@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1UVector@icu_56@@UAE@XZ	; icu_56::UVector::~UVector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UVector@icu_56@@UAE@XZ		; icu_56::UVector::~UVector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUVector@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?size@UVector@icu_56@@QBEHXZ			; icu_56::UVector::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@UVector@icu_56@@QBEHXZ PROC			; icu_56::UVector::size, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvector.h
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 353
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UVector@icu_56@@QBEHXZ ENDP			; icu_56::UVector::size
_TEXT	ENDS
PUBLIC	?isEmpty@UVector@icu_56@@QBECXZ			; icu_56::UVector::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UVector@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UVector@icu_56@@QBECXZ PROC			; icu_56::UVector::isEmpty, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UVector@icu_56@@QBECXZ ENDP			; icu_56::UVector::isEmpty
_TEXT	ENDS
PUBLIC	?indexOf@UVector@icu_56@@QBEHPAXH@Z		; icu_56::UVector::indexOf
PUBLIC	?contains@UVector@icu_56@@QBECPAX@Z		; icu_56::UVector::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECPAX@Z PROC		; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHPAXH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECPAX@Z ENDP		; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?indexOf@UVector@icu_56@@QBEHHH@Z		; icu_56::UVector::indexOf
PUBLIC	?contains@UVector@icu_56@@QBECH@Z		; icu_56::UVector::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECH@Z PROC			; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 364
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHHH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECH@Z ENDP			; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?elementAt@UVector@icu_56@@QBEPAXH@Z		; icu_56::UVector::elementAt
PUBLIC	?firstElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::firstElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?firstElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?firstElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::firstElement, COMDAT
; _this$ = ecx
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?firstElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::firstElement
_TEXT	ENDS
PUBLIC	?lastElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::lastElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::lastElement, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::lastElement
_TEXT	ENDS
PUBLIC	?elementAti@UVector@icu_56@@QBEHH@Z		; icu_56::UVector::elementAti
PUBLIC	?lastElementi@UVector@icu_56@@QBEHXZ		; icu_56::UVector::lastElementi
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElementi@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElementi@UVector@icu_56@@QBEHXZ PROC		; icu_56::UVector::lastElementi, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
; Line 377
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElementi@UVector@icu_56@@QBEHXZ ENDP		; icu_56::UVector::lastElementi
_TEXT	ENDS
PUBLIC	??AUVector@icu_56@@QBEPAXH@Z			; icu_56::UVector::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUVector@icu_56@@QBEPAXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AUVector@icu_56@@QBEPAXH@Z PROC			; icu_56::UVector::operator[], COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUVector@icu_56@@QBEPAXH@Z ENDP			; icu_56::UVector::operator[]
_TEXT	ENDS
PUBLIC	??8UVector@icu_56@@QAECABV01@@Z			; icu_56::UVector::operator==
PUBLIC	??9UVector@icu_56@@QAECABV01@@Z			; icu_56::UVector::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UVector@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9UVector@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector::operator!=, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 384
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UVector@icu_56@@QAECABV01@@Z		; icu_56::UVector::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UVector@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector::operator!=
_TEXT	ENDS
PUBLIC	?empty@UStack@icu_56@@QBECXZ			; icu_56::UStack::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@UStack@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@UStack@icu_56@@QBECXZ PROC			; icu_56::UStack::empty, COMDAT
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@UStack@icu_56@@QBECXZ ENDP			; icu_56::UStack::empty
_TEXT	ENDS
PUBLIC	?peek@UStack@icu_56@@QBEPAXXZ			; icu_56::UStack::peek
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peek@UStack@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peek@UStack@icu_56@@QBEPAXXZ PROC			; icu_56::UStack::peek, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElement@UVector@icu_56@@QBEPAXXZ	; icu_56::UVector::lastElement
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peek@UStack@icu_56@@QBEPAXXZ ENDP			; icu_56::UStack::peek
_TEXT	ENDS
PUBLIC	?peeki@UStack@icu_56@@QBEHXZ			; icu_56::UStack::peeki
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peeki@UStack@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peeki@UStack@icu_56@@QBEHXZ PROC			; icu_56::UStack::peeki, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElementi@UVector@icu_56@@QBEHXZ	; icu_56::UVector::lastElementi
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peeki@UStack@icu_56@@QBEHXZ ENDP			; icu_56::UStack::peeki
_TEXT	ENDS
PUBLIC	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
PUBLIC	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 403
	mov	eax, DWORD PTR _obj$[ebp]
; Line 404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
PUBLIC	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z	; icu_56::UStack::push
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 408
	mov	eax, DWORD PTR _i$[ebp]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	?getStaticClassID@UVector@icu_56@@SAPAXXZ	; icu_56::UVector::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@UVector@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@UVector@icu_56@@SAPAXXZ PROC		; icu_56::UVector::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\common\uvector.cpp
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@UVector@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@UVector@icu_56@@SAPAXXZ ENDP		; icu_56::UVector::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@UVector@icu_56@@UBEPAXXZ	; icu_56::UVector::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@UVector@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@UVector@icu_56@@UBEPAXXZ PROC	; icu_56::UVector::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@UVector@icu_56@@SAPAXXZ ; icu_56::UVector::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@UVector@icu_56@@UBEPAXXZ ENDP	; icu_56::UVector::getDynamicClassID
_TEXT	ENDS
PUBLIC	?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z	; icu_56::UVector::_init
PUBLIC	??_7UVector@icu_56@@6B@				; icu_56::UVector::`vftable'
PUBLIC	??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z	; icu_56::UVector::UVector
PUBLIC	??_R4UVector@icu_56@@6B@			; icu_56::UVector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector@icu_56@@@8			; icu_56::UVector `RTTI Type Descriptor'
PUBLIC	??_R3UVector@icu_56@@8				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector@icu_56@@8				; icu_56::UVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector@icu_56@@8			; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_R1A@?0A@EA@UVector@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector@icu_56@@8 DD FLAT:??_R0?AVUVector@icu_56@@@8 ; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector@icu_56@@8
rdata$r	SEGMENT
??_R2UVector@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector@icu_56@@8 ; icu_56::UVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector@icu_56@@8
rdata$r	SEGMENT
??_R3UVector@icu_56@@8 DD 00H				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector@icu_56@@6B@ DD 00H				; icu_56::UVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector@icu_56@@@8
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UVector@icu_56@@6B@
CONST	SEGMENT
??_7UVector@icu_56@@6B@ DD FLAT:??_R4UVector@icu_56@@6B@ ; icu_56::UVector::`vftable'
	DD	FLAT:??_EUVector@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z PROC		; icu_56::UVector::UVector, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UVector@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 37
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::_init
; Line 38
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP		; icu_56::UVector::UVector
PUBLIC	??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z	; icu_56::UVector::UVector
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_initialCapacity$ = 8					; size = 4
_status$ = 12						; size = 4
??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z PROC		; icu_56::UVector::UVector, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UVector@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 47
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initialCapacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::_init
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z ENDP		; icu_56::UVector::UVector
PUBLIC	??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z ; icu_56::UVector::UVector
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_c$ = 12						; size = 4
_status$ = 16						; size = 4
??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z PROC ; icu_56::UVector::UVector, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UVector@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 57
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::_init
; Line 58
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::UVector
PUBLIC	??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z ; icu_56::UVector::UVector
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_c$ = 12						; size = 4
_initialCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z PROC ; icu_56::UVector::UVector, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UVector@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 67
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initialCapacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::_init
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::UVector
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_initialCapacity$ = 8					; size = 4
_status$ = 12						; size = 4
?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z PROC	; icu_56::UVector::_init, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@init
; Line 72
	jmp	SHORT $LN6@init
$LN5@init:
; Line 75
	cmp	DWORD PTR _initialCapacity$[ebp], 1
	jl	SHORT $LN3@init
	cmp	DWORD PTR _initialCapacity$[ebp], 536870911 ; 1fffffffH
	jle	SHORT $LN4@init
$LN3@init:
; Line 76
	mov	DWORD PTR _initialCapacity$[ebp], 8
$LN4@init:
; Line 78
	mov	eax, DWORD PTR _initialCapacity$[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@init
; Line 80
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 81
	jmp	SHORT $LN6@init
$LN2@init:
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _initialCapacity$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN6@init:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_init@UVector@icu_56@@AAEXHAAW4UErrorCode@@@Z ENDP	; icu_56::UVector::_init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?removeAllElements@UVector@icu_56@@QAEXXZ	; icu_56::UVector::removeAllElements
EXTRN	_uprv_free_56:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\uvector.cpp
xdata$x	SEGMENT
__unwindtable$??1UVector@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1UVector@icu_56@@UAE@XZ$0
__ehfuncinfo$??1UVector@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1UVector@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1UVector@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1UVector@icu_56@@UAE@XZ PROC				; icu_56::UVector::~UVector, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1UVector@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UVector@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeAllElements@UVector@icu_56@@QAEXXZ ; icu_56::UVector::removeAllElements
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 90
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1UVector@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??1UVector@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1UVector@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1UVector@icu_56@@UAE@XZ ENDP				; icu_56::UVector::~UVector
PUBLIC	?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::setSize
PUBLIC	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
PUBLIC	?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z ; icu_56::UVector::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$7731 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_assign$ = 12						; size = 4
_ec$ = 16						; size = 4
?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z PROC ; icu_56::UVector::assign, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	$LN7@assign
; Line 98
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::setSize
; Line 99
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN7@assign
; Line 100
	mov	DWORD PTR _i$7731[ebp], 0
	jmp	SHORT $LN4@assign
$LN3@assign:
	mov	eax, DWORD PTR _i$7731[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7731[ebp], eax
$LN4@assign:
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR _i$7731[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN7@assign
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7731[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN1@assign
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@assign
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _i$7731[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@assign:
; Line 104
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7731[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _i$7731[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	DWORD PTR _assign$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 105
	jmp	SHORT $LN3@assign
$LN7@assign:
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??8UVector@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8UVector@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector::operator==, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvector.cpp
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN6@operator
	xor	al, al
	jmp	SHORT $LN7@operator
$LN6@operator:
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN5@operator
; Line 116
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN5@operator
; Line 117
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@operator
; Line 118
	xor	al, al
	jmp	SHORT $LN7@operator
$LN1@operator:
; Line 120
	jmp	SHORT $LN3@operator
$LN5@operator:
; Line 122
	mov	al, 1
$LN7@operator:
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UVector@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_status$ = 12						; size = 4
?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z PROC ; icu_56::UVector::addElement, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 126
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@addElement
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@addElement:
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_elem$ = 8						; size = 4
_status$ = 12						; size = 4
?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z PROC ; icu_56::UVector::addElement, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@addElement@2
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+ecx*4], 0
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _elem$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@addElement@2:
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::addElement
_TEXT	ENDS
PUBLIC	?setElementAt@UVector@icu_56@@QAEXPAXH@Z	; icu_56::UVector::setElementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setElementAt@UVector@icu_56@@QAEXPAXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_index$ = 12						; size = 4
?setElementAt@UVector@icu_56@@QAEXPAXH@Z PROC		; icu_56::UVector::setElementAt, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@setElement
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@setElement
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN1@setElement
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@setElement
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setElement:
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
$LN3@setElement:
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setElementAt@UVector@icu_56@@QAEXPAXH@Z ENDP		; icu_56::UVector::setElementAt
_TEXT	ENDS
PUBLIC	?setElementAt@UVector@icu_56@@QAEXHH@Z		; icu_56::UVector::setElementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setElementAt@UVector@icu_56@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_elem$ = 8						; size = 4
_index$ = 12						; size = 4
?setElementAt@UVector@icu_56@@QAEXHH@Z PROC		; icu_56::UVector::setElementAt, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@setElement@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@setElement@2
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN1@setElement@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@setElement@2
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setElement@2:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _elem$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
$LN3@setElement@2:
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setElementAt@UVector@icu_56@@QAEXHH@Z ENDP		; icu_56::UVector::setElementAt
_TEXT	ENDS
PUBLIC	?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z ; icu_56::UVector::insertElementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$7780 = -20						; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_index$ = 12						; size = 4
_status$ = 16						; size = 4
?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z PROC ; icu_56::UVector::insertElementAt, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN5@insertElem
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN5@insertElem
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@insertElem
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _i$7780[ebp], ecx
	jmp	SHORT $LN3@insertElem
$LN2@insertElem:
	mov	eax, DWORD PTR _i$7780[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$7780[ebp], eax
$LN3@insertElem:
	mov	eax, DWORD PTR _i$7780[ebp]
	cmp	eax, DWORD PTR _index$[ebp]
	jle	SHORT $LN1@insertElem
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7780[ebp]
	mov	eax, DWORD PTR [ecx+edx*4-4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _i$7780[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 166
	jmp	SHORT $LN2@insertElem
$LN1@insertElem:
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@insertElem:
; Line 171
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::insertElementAt
_TEXT	ENDS
PUBLIC	?insertElementAt@UVector@icu_56@@QAEXHHAAW4UErrorCode@@@Z ; icu_56::UVector::insertElementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insertElementAt@UVector@icu_56@@QAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$7791 = -20						; size = 4
_this$ = -8						; size = 4
_elem$ = 8						; size = 4
_index$ = 12						; size = 4
_status$ = 16						; size = 4
?insertElementAt@UVector@icu_56@@QAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::UVector::insertElementAt, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 175
	cmp	DWORD PTR _index$[ebp], 0
	jl	$LN5@insertElem@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	$LN5@insertElem@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@insertElem@2
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _i$7791[ebp], ecx
	jmp	SHORT $LN3@insertElem@2
$LN2@insertElem@2:
	mov	eax, DWORD PTR _i$7791[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$7791[ebp], eax
$LN3@insertElem@2:
	mov	eax, DWORD PTR _i$7791[ebp]
	cmp	eax, DWORD PTR _index$[ebp]
	jle	SHORT $LN1@insertElem@2
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7791[ebp]
	mov	eax, DWORD PTR [ecx+edx*4-4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _i$7791[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 178
	jmp	SHORT $LN2@insertElem@2
$LN1@insertElem@2:
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _elem$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@insertElem@2:
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insertElementAt@UVector@icu_56@@QAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::insertElementAt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?elementAt@UVector@icu_56@@QBEPAXH@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?elementAt@UVector@icu_56@@QBEPAXH@Z PROC		; icu_56::UVector::elementAt, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@elementAt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@elementAt
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@elementAt
$LN3@elementAt:
	mov	DWORD PTR tv70[ebp], 0
$LN4@elementAt:
	mov	eax, DWORD PTR tv70[ebp]
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?elementAt@UVector@icu_56@@QBEPAXH@Z ENDP		; icu_56::UVector::elementAt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?elementAti@UVector@icu_56@@QBEHH@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?elementAti@UVector@icu_56@@QBEHH@Z PROC		; icu_56::UVector::elementAti, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@elementAti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@elementAti
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@elementAti
$LN3@elementAti:
	mov	DWORD PTR tv70[ebp], 0
$LN4@elementAti:
	mov	eax, DWORD PTR tv70[ebp]
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?elementAti@UVector@icu_56@@QBEHH@Z ENDP		; icu_56::UVector::elementAti
_TEXT	ENDS
PUBLIC	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z	; icu_56::UVector::indexOf
PUBLIC	?containsAll@UVector@icu_56@@QBECABV12@@Z	; icu_56::UVector::containsAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsAll@UVector@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_i$7807 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?containsAll@UVector@icu_56@@QBECABV12@@Z PROC		; icu_56::UVector::containsAll, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	DWORD PTR _i$7807[ebp], 0
	jmp	SHORT $LN4@containsAl
$LN3@containsAl:
	mov	eax, DWORD PTR _i$7807[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7807[ebp], eax
$LN4@containsAl:
	mov	ecx, DWORD PTR _other$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$7807[ebp], eax
	jge	SHORT $LN2@containsAl
; Line 196
	push	0
	push	0
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7807[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ; icu_56::UVector::indexOf
	test	eax, eax
	jge	SHORT $LN1@containsAl
; Line 197
	xor	al, al
	jmp	SHORT $LN5@containsAl
$LN1@containsAl:
; Line 199
	jmp	SHORT $LN3@containsAl
$LN2@containsAl:
; Line 200
	mov	al, 1
$LN5@containsAl:
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsAll@UVector@icu_56@@QBECABV12@@Z ENDP		; icu_56::UVector::containsAll
_TEXT	ENDS
PUBLIC	?containsNone@UVector@icu_56@@QBECABV12@@Z	; icu_56::UVector::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsNone@UVector@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_i$7816 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?containsNone@UVector@icu_56@@QBECABV12@@Z PROC		; icu_56::UVector::containsNone, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	DWORD PTR _i$7816[ebp], 0
	jmp	SHORT $LN4@containsNo
$LN3@containsNo:
	mov	eax, DWORD PTR _i$7816[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7816[ebp], eax
$LN4@containsNo:
	mov	ecx, DWORD PTR _other$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$7816[ebp], eax
	jge	SHORT $LN2@containsNo
; Line 205
	push	0
	push	0
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7816[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ; icu_56::UVector::indexOf
	test	eax, eax
	jl	SHORT $LN1@containsNo
; Line 206
	xor	al, al
	jmp	SHORT $LN5@containsNo
$LN1@containsNo:
; Line 208
	jmp	SHORT $LN3@containsNo
$LN2@containsNo:
; Line 209
	mov	al, 1
$LN5@containsNo:
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsNone@UVector@icu_56@@QBECABV12@@Z ENDP		; icu_56::UVector::containsNone
_TEXT	ENDS
PUBLIC	?removeElementAt@UVector@icu_56@@QAEXH@Z	; icu_56::UVector::removeElementAt
PUBLIC	?removeAll@UVector@icu_56@@QAECABV12@@Z		; icu_56::UVector::removeAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeAll@UVector@icu_56@@QAECABV12@@Z
_TEXT	SEGMENT
_j$7830 = -44						; size = 4
_i$7826 = -32						; size = 4
_changed$ = -17						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?removeAll@UVector@icu_56@@QAECABV12@@Z PROC		; icu_56::UVector::removeAll, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	BYTE PTR _changed$[ebp], 0
; Line 214
	mov	DWORD PTR _i$7826[ebp], 0
	jmp	SHORT $LN4@removeAll
$LN3@removeAll:
	mov	eax, DWORD PTR _i$7826[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7826[ebp], eax
$LN4@removeAll:
	mov	ecx, DWORD PTR _other$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$7826[ebp], eax
	jge	SHORT $LN2@removeAll
; Line 215
	push	0
	push	0
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7826[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ; icu_56::UVector::indexOf
	mov	DWORD PTR _j$7830[ebp], eax
; Line 216
	cmp	DWORD PTR _j$7830[ebp], 0
	jl	SHORT $LN1@removeAll
; Line 217
	mov	eax, DWORD PTR _j$7830[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeElementAt@UVector@icu_56@@QAEXH@Z ; icu_56::UVector::removeElementAt
; Line 218
	mov	BYTE PTR _changed$[ebp], 1
$LN1@removeAll:
; Line 220
	jmp	SHORT $LN3@removeAll
$LN2@removeAll:
; Line 221
	mov	al, BYTE PTR _changed$[ebp]
; Line 222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeAll@UVector@icu_56@@QAECABV12@@Z ENDP		; icu_56::UVector::removeAll
_TEXT	ENDS
PUBLIC	?retainAll@UVector@icu_56@@QAECABV12@@Z		; icu_56::UVector::retainAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainAll@UVector@icu_56@@QAECABV12@@Z
_TEXT	SEGMENT
_i$7841 = -44						; size = 4
_j$7837 = -32						; size = 4
_changed$ = -17						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?retainAll@UVector@icu_56@@QAECABV12@@Z PROC		; icu_56::UVector::retainAll, COMDAT
; _this$ = ecx
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	BYTE PTR _changed$[ebp], 0
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	sub	eax, 1
	mov	DWORD PTR _j$7837[ebp], eax
	jmp	SHORT $LN4@retainAll
$LN3@retainAll:
	mov	eax, DWORD PTR _j$7837[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$7837[ebp], eax
$LN4@retainAll:
	cmp	DWORD PTR _j$7837[ebp], 0
	jl	SHORT $LN2@retainAll
; Line 227
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _j$7837[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ; icu_56::UVector::indexOf
	mov	DWORD PTR _i$7841[ebp], eax
; Line 228
	cmp	DWORD PTR _i$7841[ebp], 0
	jge	SHORT $LN1@retainAll
; Line 229
	mov	eax, DWORD PTR _j$7837[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeElementAt@UVector@icu_56@@QAEXH@Z ; icu_56::UVector::removeElementAt
; Line 230
	mov	BYTE PTR _changed$[ebp], 1
$LN1@retainAll:
; Line 232
	jmp	SHORT $LN3@retainAll
$LN2@retainAll:
; Line 233
	mov	al, BYTE PTR _changed$[ebp]
; Line 234
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?retainAll@UVector@icu_56@@QAECABV12@@Z ENDP		; icu_56::UVector::retainAll
_TEXT	ENDS
PUBLIC	?orphanElementAt@UVector@icu_56@@QAEPAXH@Z	; icu_56::UVector::orphanElementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeElementAt@UVector@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_e$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?removeElementAt@UVector@icu_56@@QAEXH@Z PROC		; icu_56::UVector::removeElementAt, COMDAT
; _this$ = ecx
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?orphanElementAt@UVector@icu_56@@QAEPAXH@Z ; icu_56::UVector::orphanElementAt
	mov	DWORD PTR _e$[ebp], eax
; Line 238
	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN2@removeElem
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@removeElem
; Line 239
	mov	esi, esp
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@removeElem:
; Line 241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeElementAt@UVector@icu_56@@QAEXH@Z ENDP		; icu_56::UVector::removeElementAt
_TEXT	ENDS
PUBLIC	?removeElement@UVector@icu_56@@QAECPAX@Z	; icu_56::UVector::removeElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeElement@UVector@icu_56@@QAECPAX@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?removeElement@UVector@icu_56@@QAECPAX@Z PROC		; icu_56::UVector::removeElement, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHPAXH@Z	; icu_56::UVector::indexOf
	mov	DWORD PTR _i$[ebp], eax
; Line 245
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN1@removeElem@2
; Line 246
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeElementAt@UVector@icu_56@@QAEXH@Z ; icu_56::UVector::removeElementAt
; Line 247
	mov	al, 1
	jmp	SHORT $LN2@removeElem@2
$LN1@removeElem@2:
; Line 249
	xor	al, al
$LN2@removeElem@2:
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeElement@UVector@icu_56@@QAECPAX@Z ENDP		; icu_56::UVector::removeElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?removeAllElements@UVector@icu_56@@QAEXXZ
_TEXT	SEGMENT
_i$7860 = -20						; size = 4
_this$ = -8						; size = 4
?removeAllElements@UVector@icu_56@@QAEXXZ PROC		; icu_56::UVector::removeAllElements, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN5@removeAllE
; Line 254
	mov	DWORD PTR _i$7860[ebp], 0
	jmp	SHORT $LN4@removeAllE
$LN3@removeAllE:
	mov	eax, DWORD PTR _i$7860[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7860[ebp], eax
$LN4@removeAllE:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$7860[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN5@removeAllE
; Line 255
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7860[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN1@removeAllE
; Line 256
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _i$7860[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@removeAllE:
; Line 258
	jmp	SHORT $LN3@removeAllE
$LN5@removeAllE:
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?removeAllElements@UVector@icu_56@@QAEXXZ ENDP		; icu_56::UVector::removeAllElements
_TEXT	ENDS
PUBLIC	?equals@UVector@icu_56@@QBECABV12@@Z		; icu_56::UVector::equals
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@UVector@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_key$7877 = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@UVector@icu_56@@QBECABV12@@Z PROC		; icu_56::UVector::equals, COMDAT
; _this$ = ecx
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN11@equals
; Line 267
	xor	al, al
	jmp	$LN12@equals
$LN11@equals:
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN10@equals
; Line 270
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@equals
$LN8@equals:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@equals:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN7@equals
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	cmp	ecx, DWORD PTR [eax+esi*4]
	je	SHORT $LN6@equals
; Line 272
	xor	al, al
	jmp	SHORT $LN12@equals
$LN6@equals:
; Line 274
	jmp	SHORT $LN8@equals
$LN7@equals:
	jmp	SHORT $LN5@equals
$LN10@equals:
; Line 277
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@equals:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN5@equals
; Line 278
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _key$7877[ebp], eax
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _key$7877[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@equals
; Line 280
	xor	al, al
	jmp	SHORT $LN12@equals
$LN1@equals:
; Line 282
	jmp	SHORT $LN3@equals
$LN5@equals:
; Line 284
	mov	al, 1
$LN12@equals:
; Line 285
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@equals
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN16@equals:
	DD	1
	DD	$LN15@equals
$LN15@equals:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN14@equals
$LN14@equals:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
?equals@UVector@icu_56@@QBECABV12@@Z ENDP		; icu_56::UVector::equals
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?indexOf@UVector@icu_56@@QBEHPAXH@Z
_TEXT	SEGMENT
_key$ = -20						; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_startIndex$ = 12					; size = 4
?indexOf@UVector@icu_56@@QBEHPAXH@Z PROC		; icu_56::UVector::indexOf, COMDAT
; _this$ = ecx
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 291
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _key$[ebp], eax
; Line 292
	push	1
	mov	eax, DWORD PTR _startIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ; icu_56::UVector::indexOf
; Line 293
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@indexOf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN5@indexOf:
	DD	1
	DD	$LN4@indexOf
$LN4@indexOf:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@indexOf
$LN3@indexOf:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
?indexOf@UVector@icu_56@@QBEHPAXH@Z ENDP		; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?indexOf@UVector@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_key$ = -20						; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_startIndex$ = 12					; size = 4
?indexOf@UVector@icu_56@@QBEHHH@Z PROC			; icu_56::UVector::indexOf, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _key$[ebp], eax
; Line 298
	push	0
	mov	eax, DWORD PTR _startIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ; icu_56::UVector::indexOf
; Line 299
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@indexOf@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN5@indexOf@2:
	DD	1
	DD	$LN4@indexOf@2
$LN4@indexOf@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@indexOf@2
$LN3@indexOf@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
?indexOf@UVector@icu_56@@QBEHHH@Z ENDP			; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_startIndex$ = 12					; size = 4
_hint$ = 16						; size = 1
?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z PROC	; icu_56::UVector::indexOf, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN13@indexOf@3
; Line 305
	mov	eax, DWORD PTR _startIndex$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN12@indexOf@3
$LN11@indexOf@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@indexOf@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN10@indexOf@3
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@indexOf@3
; Line 307
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN14@indexOf@3
$LN9@indexOf@3:
; Line 309
	jmp	SHORT $LN11@indexOf@3
$LN10@indexOf@3:
	jmp	SHORT $LN8@indexOf@3
$LN13@indexOf@3:
; Line 311
	mov	eax, DWORD PTR _startIndex$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN7@indexOf@3
$LN6@indexOf@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@indexOf@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN8@indexOf@3
; Line 315
	movsx	eax, BYTE PTR _hint$[ebp]
	and	eax, 1
	je	SHORT $LN4@indexOf@3
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4]
	jne	SHORT $LN3@indexOf@3
; Line 317
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN14@indexOf@3
$LN3@indexOf@3:
; Line 319
	jmp	SHORT $LN2@indexOf@3
$LN4@indexOf@3:
; Line 320
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4]
	jne	SHORT $LN2@indexOf@3
; Line 321
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN14@indexOf@3
$LN2@indexOf@3:
; Line 324
	jmp	SHORT $LN6@indexOf@3
$LN8@indexOf@3:
; Line 326
	or	eax, -1
$LN14@indexOf@3:
; Line 327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UVector@icu_56@@ABEHTUElement@@HC@Z ENDP	; icu_56::UVector::indexOf
_TEXT	ENDS
EXTRN	_uprv_realloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_newElems$7927 = -32					; size = 4
_newCap$7922 = -20					; size = 4
_this$ = -8						; size = 4
_minimumCapacity$ = 8					; size = 4
_status$ = 12						; size = 4
?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z PROC ; icu_56::UVector::ensureCapacity, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 330
	cmp	DWORD PTR _minimumCapacity$[ebp], 0
	jge	SHORT $LN6@ensureCapa
; Line 331
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 332
	xor	al, al
	jmp	$LN7@ensureCapa
$LN6@ensureCapa:
; Line 334
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _minimumCapacity$[ebp]
	jge	$LN5@ensureCapa
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 1073741823		; 3fffffffH
	jle	SHORT $LN4@ensureCapa
; Line 336
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 337
	xor	al, al
	jmp	SHORT $LN7@ensureCapa
$LN4@ensureCapa:
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	DWORD PTR _newCap$7922[ebp], ecx
; Line 340
	mov	eax, DWORD PTR _newCap$7922[ebp]
	cmp	eax, DWORD PTR _minimumCapacity$[ebp]
	jge	SHORT $LN3@ensureCapa
; Line 341
	mov	eax, DWORD PTR _minimumCapacity$[ebp]
	mov	DWORD PTR _newCap$7922[ebp], eax
$LN3@ensureCapa:
; Line 343
	cmp	DWORD PTR _newCap$7922[ebp], 536870911	; 1fffffffH
	jle	SHORT $LN2@ensureCapa
; Line 345
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 346
	xor	al, al
	jmp	SHORT $LN7@ensureCapa
$LN2@ensureCapa:
; Line 348
	mov	eax, DWORD PTR _newCap$7922[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _newElems$7927[ebp], eax
; Line 349
	cmp	DWORD PTR _newElems$7927[ebp], 0
	jne	SHORT $LN1@ensureCapa
; Line 351
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 352
	xor	al, al
	jmp	SHORT $LN7@ensureCapa
$LN1@ensureCapa:
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newElems$7927[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$7922[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@ensureCapa:
; Line 357
	mov	al, 1
$LN7@ensureCapa:
; Line 358
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::ensureCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_empty$7940 = -32					; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_newSize$ = 8						; size = 4
_status$ = 12						; size = 4
?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z PROC	; icu_56::UVector::setSize, COMDAT
; _this$ = ecx
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	cmp	DWORD PTR _newSize$[ebp], 0
	jge	SHORT $LN10@setSize
; Line 369
	jmp	$LN11@setSize
$LN10@setSize:
; Line 371
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newSize$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN9@setSize
; Line 372
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN8@setSize
; Line 373
	jmp	SHORT $LN11@setSize
$LN8@setSize:
; Line 376
	mov	DWORD PTR _empty$7940[ebp], 0
; Line 377
	mov	DWORD PTR _empty$7940[ebp], 0
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN7@setSize
$LN6@setSize:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@setSize:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _newSize$[ebp]
	jge	SHORT $LN5@setSize
; Line 379
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _empty$7940[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 380
	jmp	SHORT $LN6@setSize
$LN5@setSize:
	jmp	SHORT $LN4@setSize
$LN9@setSize:
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN3@setSize
$LN2@setSize:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@setSize:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _newSize$[ebp]
	jl	SHORT $LN4@setSize
; Line 384
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeElementAt@UVector@icu_56@@QAEXH@Z ; icu_56::UVector::removeElementAt
; Line 385
	jmp	SHORT $LN2@setSize
$LN4@setSize:
; Line 387
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newSize$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN11@setSize:
; Line 388
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@setSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN15@setSize:
	DD	1
	DD	$LN14@setSize
$LN14@setSize:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@setSize
$LN13@setSize:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
?setSize@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ENDP	; icu_56::UVector::setSize
_TEXT	ENDS
PUBLIC	?toArray@UVector@icu_56@@QBEPAPAXPAPAX@Z	; icu_56::UVector::toArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toArray@UVector@icu_56@@QBEPAPAXPAPAX@Z
_TEXT	SEGMENT
_i$7953 = -32						; size = 4
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?toArray@UVector@icu_56@@QBEPAPAXPAPAX@Z PROC		; icu_56::UVector::toArray, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 395
	mov	DWORD PTR _i$7953[ebp], 0
	jmp	SHORT $LN3@toArray
$LN2@toArray:
	mov	eax, DWORD PTR _i$7953[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7953[ebp], eax
$LN3@toArray:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$7953[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN1@toArray
; Line 396
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _i$7953[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR _a$[ebp]
	add	edx, 4
	mov	DWORD PTR _a$[ebp], edx
; Line 397
	jmp	SHORT $LN2@toArray
$LN1@toArray:
; Line 398
	mov	eax, DWORD PTR _result$[ebp]
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?toArray@UVector@icu_56@@QBEPAPAXPAPAX@Z ENDP		; icu_56::UVector::toArray
_TEXT	ENDS
PUBLIC	?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z ; icu_56::UVector::setDeleter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
_TEXT	SEGMENT
_old$ = -20						; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z PROC	; icu_56::UVector::setDeleter, COMDAT
; _this$ = ecx
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _old$[ebp], ecx
; Line 403
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 404
	mov	eax, DWORD PTR _old$[ebp]
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z ENDP	; icu_56::UVector::setDeleter
_TEXT	ENDS
PUBLIC	?setComparer@UVector@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z ; icu_56::UVector::setComparer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setComparer@UVector@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z
_TEXT	SEGMENT
_old$ = -20						; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
?setComparer@UVector@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z PROC ; icu_56::UVector::setComparer, COMDAT
; _this$ = ecx
; Line 407
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _old$[ebp], ecx
; Line 409
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 410
	mov	eax, DWORD PTR _old$[ebp]
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setComparer@UVector@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z ENDP ; icu_56::UVector::setComparer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
_TEXT	SEGMENT
_i$7973 = -32						; size = 4
_e$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?orphanElementAt@UVector@icu_56@@QAEPAXH@Z PROC		; icu_56::UVector::orphanElementAt, COMDAT
; _this$ = ecx
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 423
	mov	DWORD PTR _e$[ebp], 0
; Line 424
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN4@orphanElem
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN4@orphanElem
; Line 425
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _e$[ebp], eax
; Line 426
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _i$7973[ebp], eax
	jmp	SHORT $LN3@orphanElem
$LN2@orphanElem:
	mov	eax, DWORD PTR _i$7973[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7973[ebp], eax
$LN3@orphanElem:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	cmp	DWORD PTR _i$7973[ebp], ecx
	jge	SHORT $LN1@orphanElem
; Line 427
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$7973[ebp]
	mov	eax, DWORD PTR [ecx+edx*4+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _i$7973[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 428
	jmp	SHORT $LN2@orphanElem
$LN1@orphanElem:
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN4@orphanElem:
; Line 432
	mov	eax, DWORD PTR _e$[ebp]
; Line 433
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?orphanElementAt@UVector@icu_56@@QAEPAXH@Z ENDP		; icu_56::UVector::orphanElementAt
_TEXT	ENDS
PUBLIC	?sortedInsert@UVector@icu_56@@AAEXTUElement@@P6AC00@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sortedInsert
PUBLIC	?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sortedInsert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_e$ = -20						; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_compare$ = 12						; size = 4
_ec$ = 16						; size = 4
?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z PROC ; icu_56::UVector::sortedInsert, COMDAT
; _this$ = ecx
; Line 440
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 442
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _e$[ebp], eax
; Line 443
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortedInsert@UVector@icu_56@@AAEXTUElement@@P6AC00@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sortedInsert
; Line 444
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@sortedInse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN5@sortedInse:
	DD	1
	DD	$LN4@sortedInse
$LN4@sortedInse:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@sortedInse
$LN3@sortedInse:
	DB	101					; 00000065H
	DB	0
?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::sortedInsert
_TEXT	ENDS
PUBLIC	?sortedInsert@UVector@icu_56@@QAEXHP6ACTUElement@@0@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sortedInsert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortedInsert@UVector@icu_56@@QAEXHP6ACTUElement@@0@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_e$ = -20						; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_compare$ = 12						; size = 4
_ec$ = 16						; size = 4
?sortedInsert@UVector@icu_56@@QAEXHP6ACTUElement@@0@ZAAW4UErrorCode@@@Z PROC ; icu_56::UVector::sortedInsert, COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 453
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _e$[ebp], eax
; Line 454
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortedInsert@UVector@icu_56@@AAEXTUElement@@P6AC00@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sortedInsert
; Line 455
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@sortedInse@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN5@sortedInse@2:
	DD	1
	DD	$LN4@sortedInse@2
$LN4@sortedInse@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@sortedInse@2
$LN3@sortedInse@2:
	DB	101					; 00000065H
	DB	0
?sortedInsert@UVector@icu_56@@QAEXHP6ACTUElement@@0@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::sortedInsert
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?sortedInsert@UVector@icu_56@@AAEXTUElement@@P6AC00@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$8007 = -68						; size = 4
_c$8003 = -53						; size = 1
_probe$8002 = -44					; size = 4
_max$ = -32						; size = 4
_min$ = -20						; size = 4
_this$ = -8						; size = 4
_e$ = 8							; size = 4
_compare$ = 12						; size = 4
_ec$ = 16						; size = 4
?sortedInsert@UVector@icu_56@@AAEXTUElement@@P6AC00@ZAAW4UErrorCode@@@Z PROC ; icu_56::UVector::sortedInsert, COMDAT
; _this$ = ecx
; Line 458
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 464
	mov	DWORD PTR _min$[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _max$[ebp], ecx
$LN8@sortedInse@3:
; Line 465
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	je	SHORT $LN7@sortedInse@3
; Line 466
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _probe$8002[ebp], eax
; Line 467
	mov	esi, esp
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _probe$8002[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	DWORD PTR _compare$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _c$8003[ebp], al
; Line 468
	movsx	eax, BYTE PTR _c$8003[ebp]
	test	eax, eax
	jle	SHORT $LN6@sortedInse@3
; Line 469
	mov	eax, DWORD PTR _probe$8002[ebp]
	mov	DWORD PTR _max$[ebp], eax
; Line 470
	jmp	SHORT $LN5@sortedInse@3
$LN6@sortedInse@3:
; Line 472
	mov	eax, DWORD PTR _probe$8002[ebp]
	add	eax, 1
	mov	DWORD PTR _min$[ebp], eax
$LN5@sortedInse@3:
; Line 474
	jmp	SHORT $LN8@sortedInse@3
$LN7@sortedInse@3:
; Line 475
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UVector@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::UVector::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN9@sortedInse@3
; Line 476
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _i$8007[ebp], ecx
	jmp	SHORT $LN3@sortedInse@3
$LN2@sortedInse@3:
	mov	eax, DWORD PTR _i$8007[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$8007[ebp], eax
$LN3@sortedInse@3:
	mov	eax, DWORD PTR _i$8007[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jle	SHORT $LN1@sortedInse@3
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$8007[ebp]
	mov	eax, DWORD PTR [ecx+edx*4-4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _i$8007[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 478
	jmp	SHORT $LN2@sortedInse@3
$LN1@sortedInse@3:
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _min$[ebp]
	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN9@sortedInse@3:
; Line 482
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?sortedInsert@UVector@icu_56@@AAEXTUElement@@P6AC00@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::sortedInsert
_TEXT	ENDS
PUBLIC	?sorti@UVector@icu_56@@QAEXAAW4UErrorCode@@@Z	; icu_56::UVector::sorti
EXTRN	_uprv_sortArray_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sorti@UVector@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ec$ = 8						; size = 4
?sorti@UVector@icu_56@@QAEXAAW4UErrorCode@@@Z PROC	; icu_56::UVector::sorti, COMDAT
; _this$ = ecx
; Line 524
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 525
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@sorti
; Line 527
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ?sortiComparator@icu_56@@YAHPBX00@Z ; icu_56::sortiComparator
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
$LN2@sorti:
; Line 529
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?sorti@UVector@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP	; icu_56::UVector::sorti
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?sortiComparator@icu_56@@YAHPBX00@Z
_TEXT	SEGMENT
tv67 = -232						; size = 4
_result$ = -32						; size = 4
_e2$ = -20						; size = 4
_e1$ = -8						; size = 4
___formal$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
?sortiComparator@icu_56@@YAHPBX00@Z PROC		; icu_56::sortiComparator, COMDAT
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 511
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR _e1$[ebp], eax
; Line 512
	mov	eax, DWORD PTR _right$[ebp]
	mov	DWORD PTR _e2$[ebp], eax
; Line 514
	mov	eax, DWORD PTR _e1$[ebp]
	mov	ecx, DWORD PTR _e2$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN3@sortiCompa
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN4@sortiCompa
$LN3@sortiCompa:
	mov	eax, DWORD PTR _e1$[ebp]
	mov	ecx, DWORD PTR _e2$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	setne	al
	mov	DWORD PTR tv67[ebp], eax
$LN4@sortiCompa:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _result$[ebp], ecx
; Line 515
	mov	eax, DWORD PTR _result$[ebp]
; Line 516
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sortiComparator@icu_56@@YAHPBX00@Z ENDP		; icu_56::sortiComparator
_TEXT	ENDS
PUBLIC	?sort@UVector@icu_56@@QAEXP6ACTUElement@@0@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sort
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sort@UVector@icu_56@@QAEXP6ACTUElement@@0@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
_ec$ = 12						; size = 4
?sort@UVector@icu_56@@QAEXP6ACTUElement@@0@ZAAW4UErrorCode@@@Z PROC ; icu_56::UVector::sort, COMDAT
; _this$ = ecx
; Line 546
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 547
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@sort
; Line 549
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	push	OFFSET ?sortComparator@icu_56@@YAHPBX00@Z ; icu_56::sortComparator
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
$LN2@sort:
; Line 551
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?sort@UVector@icu_56@@QAEXP6ACTUElement@@0@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UVector::sort
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?sortComparator@icu_56@@YAHPBX00@Z
_TEXT	SEGMENT
_result$ = -44						; size = 4
_e2$ = -32						; size = 4
_e1$ = -20						; size = 4
_compare$ = -8						; size = 4
_context$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
?sortComparator@icu_56@@YAHPBX00@Z PROC			; icu_56::sortComparator, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 497
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _compare$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _e1$[ebp], ecx
; Line 499
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _e2$[ebp], ecx
; Line 500
	mov	esi, esp
	mov	eax, DWORD PTR _e2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _e1$[ebp]
	push	ecx
	call	DWORD PTR _compare$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	mov	DWORD PTR _result$[ebp], edx
; Line 501
	mov	eax, DWORD PTR _result$[ebp]
; Line 502
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@sortCompar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@sortCompar:
	DD	2
	DD	$LN5@sortCompar
$LN5@sortCompar:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@sortCompar
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@sortCompar
$LN4@sortCompar:
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN3@sortCompar:
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
?sortComparator@icu_56@@YAHPBX00@Z ENDP			; icu_56::sortComparator
_TEXT	ENDS
PUBLIC	?sortWithUComparator@UVector@icu_56@@QAEXP6AHPBX00@Z0AAW4UErrorCode@@@Z ; icu_56::UVector::sortWithUComparator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortWithUComparator@UVector@icu_56@@QAEXP6AHPBX00@Z0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
_context$ = 12						; size = 4
_ec$ = 16						; size = 4
?sortWithUComparator@UVector@icu_56@@QAEXP6AHPBX00@Z0AAW4UErrorCode@@@Z PROC ; icu_56::UVector::sortWithUComparator, COMDAT
; _this$ = ecx
; Line 557
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@sortWithUC
; Line 560
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	mov	edx, DWORD PTR _compare$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
$LN2@sortWithUC:
; Line 562
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?sortWithUComparator@UVector@icu_56@@QAEXP6AHPBX00@Z0AAW4UErrorCode@@@Z ENDP ; icu_56::UVector::sortWithUComparator
_TEXT	ENDS
END

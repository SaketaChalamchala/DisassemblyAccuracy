; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucnv_cnv.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_ucnv_getCompleteUnicodeSet_56
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\ucnv_cnv.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ucnv_getCompleteUnicodeSet_56
_TEXT	SEGMENT
_cnv$ = 8						; size = 4
_sa$ = 12						; size = 4
_which$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
_ucnv_getCompleteUnicodeSet_56 PROC			; COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 34
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 35
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_getCompleteUnicodeSet_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_getNonSurrogateUnicodeSet_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_getNonSurrogateUnicodeSet_56
_TEXT	SEGMENT
_cnv$ = 8						; size = 4
_sa$ = 12						; size = 4
_which$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
_ucnv_getNonSurrogateUnicodeSet_56 PROC			; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	esi, esp
	push	55295					; 0000d7ffH
	push	0
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 43
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	57344					; 0000e000H
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_getNonSurrogateUnicodeSet_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_fromUWriteBytes_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_fromUWriteBytes_56
_TEXT	SEGMENT
_o$ = -20						; size = 4
_t$ = -8						; size = 4
_cnv$ = 8						; size = 4
_bytes$ = 12						; size = 4
_length$ = 16						; size = 4
_target$ = 20						; size = 4
_targetLimit$ = 24					; size = 4
_offsets$ = 28						; size = 4
_sourceIndex$ = 32					; size = 4
_pErrorCode$ = 36					; size = 4
_ucnv_fromUWriteBytes_56 PROC				; COMDAT
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _t$[ebp], ecx
; Line 57
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN10@ucnv_fromU
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _o$[ebp], ecx
	cmp	DWORD PTR _o$[ebp], 0
	jne	SHORT $LN7@ucnv_fromU
$LN10@ucnv_fromU:
; Line 58
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN9@ucnv_fromU
	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN9@ucnv_fromU
; Line 59
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
	mov	ecx, DWORD PTR _bytes$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 61
	jmp	SHORT $LN10@ucnv_fromU
$LN9@ucnv_fromU:
; Line 62
	jmp	SHORT $LN8@ucnv_fromU
$LN7@ucnv_fromU:
; Line 64
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN6@ucnv_fromU
	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN6@ucnv_fromU
; Line 65
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
	mov	ecx, DWORD PTR _bytes$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _o$[ebp]
	add	edx, 4
	mov	DWORD PTR _o$[ebp], edx
; Line 67
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 68
	jmp	SHORT $LN7@ucnv_fromU
$LN6@ucnv_fromU:
; Line 69
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	DWORD PTR [eax], ecx
$LN8@ucnv_fromU:
; Line 71
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 74
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN13@ucnv_fromU
; Line 75
	cmp	DWORD PTR _cnv$[ebp], 0
	je	SHORT $LN4@ucnv_fromU
; Line 76
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 76					; 0000004cH
	mov	DWORD PTR _t$[ebp], eax
; Line 77
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _length$[ebp]
	mov	BYTE PTR [eax+63], cl
$LN3@ucnv_fromU:
; Line 79
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
	mov	ecx, DWORD PTR _bytes$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN3@ucnv_fromU
$LN4@ucnv_fromU:
; Line 82
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN13@ucnv_fromU:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_fromUWriteBytes_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_toUWriteUChars_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_toUWriteUChars_56
_TEXT	SEGMENT
_o$ = -20						; size = 4
_t$ = -8						; size = 4
_cnv$ = 8						; size = 4
_uchars$ = 12						; size = 4
_length$ = 16						; size = 4
_target$ = 20						; size = 4
_targetLimit$ = 24					; size = 4
_offsets$ = 28						; size = 4
_sourceIndex$ = 32					; size = 4
_pErrorCode$ = 36					; size = 4
_ucnv_toUWriteUChars_56 PROC				; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _t$[ebp], ecx
; Line 97
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN10@ucnv_toUWr
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _o$[ebp], ecx
	cmp	DWORD PTR _o$[ebp], 0
	jne	SHORT $LN7@ucnv_toUWr
$LN10@ucnv_toUWr:
; Line 98
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN9@ucnv_toUWr
	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN9@ucnv_toUWr
; Line 99
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _uchars$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 2
	mov	DWORD PTR _t$[ebp], eax
	mov	ecx, DWORD PTR _uchars$[ebp]
	add	ecx, 2
	mov	DWORD PTR _uchars$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 101
	jmp	SHORT $LN10@ucnv_toUWr
$LN9@ucnv_toUWr:
; Line 102
	jmp	SHORT $LN8@ucnv_toUWr
$LN7@ucnv_toUWr:
; Line 104
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN6@ucnv_toUWr
	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN6@ucnv_toUWr
; Line 105
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _uchars$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 2
	mov	DWORD PTR _t$[ebp], eax
	mov	ecx, DWORD PTR _uchars$[ebp]
	add	ecx, 2
	mov	DWORD PTR _uchars$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _o$[ebp]
	add	edx, 4
	mov	DWORD PTR _o$[ebp], edx
; Line 107
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 108
	jmp	SHORT $LN7@ucnv_toUWr
$LN6@ucnv_toUWr:
; Line 109
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	DWORD PTR [eax], ecx
$LN8@ucnv_toUWr:
; Line 111
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 114
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN13@ucnv_toUWr
; Line 115
	cmp	DWORD PTR _cnv$[ebp], 0
	je	SHORT $LN4@ucnv_toUWr
; Line 116
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 116				; 00000074H
	mov	DWORD PTR _t$[ebp], eax
; Line 117
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _length$[ebp]
	mov	BYTE PTR [eax+65], cl
$LN3@ucnv_toUWr:
; Line 119
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _uchars$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 2
	mov	DWORD PTR _t$[ebp], eax
	mov	ecx, DWORD PTR _uchars$[ebp]
	add	ecx, 2
	mov	DWORD PTR _uchars$[ebp], ecx
; Line 120
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN3@ucnv_toUWr
$LN4@ucnv_toUWr:
; Line 122
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN13@ucnv_toUWr:
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_toUWriteUChars_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_toUWriteCodePoint_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_toUWriteCodePoint_56
_TEXT	SEGMENT
_i$8660 = -29						; size = 1
_o$ = -20						; size = 4
_t$ = -8						; size = 4
_cnv$ = 8						; size = 4
_c$ = 12						; size = 4
_target$ = 16						; size = 4
_targetLimit$ = 20					; size = 4
_offsets$ = 24						; size = 4
_sourceIndex$ = 28					; size = 4
_pErrorCode$ = 32					; size = 4
_ucnv_toUWriteCodePoint_56 PROC				; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 136
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _t$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	$LN10@ucnv_toUWr@2
; Line 139
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN9@ucnv_toUWr@2
; Line 140
	mov	eax, DWORD PTR _t$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _t$[ebp]
	add	edx, 2
	mov	DWORD PTR _t$[ebp], edx
; Line 141
	mov	DWORD PTR _c$[ebp], -1
; Line 142
	jmp	SHORT $LN8@ucnv_toUWr@2
$LN9@ucnv_toUWr@2:
; Line 143
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _t$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _t$[ebp]
	add	edx, 2
	mov	DWORD PTR _t$[ebp], edx
; Line 144
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	movzx	ecx, ax
	mov	DWORD PTR _c$[ebp], ecx
; Line 145
	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN8@ucnv_toUWr@2
; Line 146
	mov	eax, DWORD PTR _t$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _t$[ebp]
	add	edx, 2
	mov	DWORD PTR _t$[ebp], edx
; Line 147
	mov	DWORD PTR _c$[ebp], -1
$LN8@ucnv_toUWr@2:
; Line 152
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN10@ucnv_toUWr@2
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _o$[ebp], ecx
	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN10@ucnv_toUWr@2
; Line 153
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _o$[ebp]
	add	edx, 4
	mov	DWORD PTR _o$[ebp], edx
; Line 154
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	cmp	ecx, DWORD PTR _t$[ebp]
	jae	SHORT $LN5@ucnv_toUWr@2
; Line 155
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _o$[ebp]
	add	edx, 4
	mov	DWORD PTR _o$[ebp], edx
$LN5@ucnv_toUWr@2:
; Line 157
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@ucnv_toUWr@2:
; Line 161
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 164
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN11@ucnv_toUWr@2
; Line 165
	cmp	DWORD PTR _cnv$[ebp], 0
	je	SHORT $LN3@ucnv_toUWr@2
; Line 166
	mov	BYTE PTR _i$8660[ebp], 0
; Line 167
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN2@ucnv_toUWr@2
	movsx	eax, BYTE PTR _i$8660[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	dx, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx+eax*2+116], dx
	mov	al, BYTE PTR _i$8660[ebp]
	add	al, 1
	mov	BYTE PTR _i$8660[ebp], al
	jmp	SHORT $LN1@ucnv_toUWr@2
$LN2@ucnv_toUWr@2:
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	movsx	ecx, BYTE PTR _i$8660[ebp]
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	WORD PTR [edx+ecx*2+116], ax
	mov	al, BYTE PTR _i$8660[ebp]
	add	al, 1
	mov	BYTE PTR _i$8660[ebp], al
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	movsx	ecx, BYTE PTR _i$8660[ebp]
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	WORD PTR [edx+ecx*2+116], ax
	mov	al, BYTE PTR _i$8660[ebp]
	add	al, 1
	mov	BYTE PTR _i$8660[ebp], al
$LN1@ucnv_toUWr@2:
; Line 168
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _i$8660[ebp]
	mov	BYTE PTR [eax+65], cl
$LN3@ucnv_toUWr@2:
; Line 170
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN11@ucnv_toUWr@2:
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_toUWriteCodePoint_56 ENDP
_TEXT	ENDS
END

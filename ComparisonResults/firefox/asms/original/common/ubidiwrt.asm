; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ubidiwrt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_ubidi_writeReverse_56
EXTRN	_u_terminateUChars_56:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\ubidiwrt.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ubidi_writeReverse_56
_TEXT	SEGMENT
_destLength$ = -8					; size = 4
_src$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_dest$ = 16						; size = 4
_destSize$ = 20						; size = 4
_options$ = 24						; size = 2
_pErrorCode$ = 28					; size = 4
_ubidi_writeReverse_56 PROC				; COMDAT
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 313
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN9@ubidi_writ
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN10@ubidi_writ
$LN9@ubidi_writ:
; Line 314
	xor	eax, eax
	jmp	$LN11@ubidi_writ
$LN10@ubidi_writ:
; Line 319
	cmp	DWORD PTR _src$[ebp], 0
	je	SHORT $LN7@ubidi_writ
	cmp	DWORD PTR _srcLength$[ebp], -1
	jl	SHORT $LN7@ubidi_writ
	cmp	DWORD PTR _destSize$[ebp], 0
	jl	SHORT $LN7@ubidi_writ
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN8@ubidi_writ
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN8@ubidi_writ
$LN7@ubidi_writ:
; Line 321
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 322
	xor	eax, eax
	jmp	$LN11@ubidi_writ
$LN8@ubidi_writ:
; Line 328
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN6@ubidi_writ
	mov	eax, DWORD PTR _src$[ebp]
	cmp	eax, DWORD PTR _dest$[ebp]
	jb	SHORT $LN4@ubidi_writ
	mov	eax, DWORD PTR _destSize$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	cmp	DWORD PTR _src$[ebp], edx
	jb	SHORT $LN5@ubidi_writ
$LN4@ubidi_writ:
	mov	eax, DWORD PTR _dest$[ebp]
	cmp	eax, DWORD PTR _src$[ebp]
	jb	SHORT $LN6@ubidi_writ
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	cmp	DWORD PTR _dest$[ebp], edx
	jae	SHORT $LN6@ubidi_writ
$LN5@ubidi_writ:
; Line 330
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 331
	xor	eax, eax
	jmp	SHORT $LN11@ubidi_writ
$LN6@ubidi_writ:
; Line 334
	cmp	DWORD PTR _srcLength$[ebp], -1
	jne	SHORT $LN3@ubidi_writ
; Line 335
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN3@ubidi_writ:
; Line 337
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@ubidi_writ
; Line 338
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	call	_doWriteReverse
	add	esp, 24					; 00000018H
	mov	DWORD PTR _destLength$[ebp], eax
; Line 339
	jmp	SHORT $LN1@ubidi_writ
$LN2@ubidi_writ:
; Line 341
	mov	DWORD PTR _destLength$[ebp], 0
$LN1@ubidi_writ:
; Line 344
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
$LN11@ubidi_writ:
; Line 345
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ubidi_writeReverse_56 ENDP
_TEXT	ENDS
EXTRN	_u_charMirror_56:PROC
EXTRN	_u_charType_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _doWriteReverse
_TEXT	SEGMENT
tv66 = -304						; size = 4
_k$9242 = -104						; size = 4
___c2$9232 = -92					; size = 2
___c2$9223 = -80					; size = 2
_ch$9210 = -68						; size = 2
_length$9209 = -56					; size = 4
___c2$9198 = -44					; size = 2
_c$ = -32						; size = 4
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_src$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_dest$ = 16						; size = 4
_destSize$ = 20						; size = 4
_options$ = 24						; size = 2
_pErrorCode$ = 28					; size = 4
_doWriteReverse PROC					; COMDAT
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 176
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 11					; 0000000bH
	mov	DWORD PTR tv66[ebp], eax
	je	SHORT $LN48@doWriteRev
	cmp	DWORD PTR tv66[ebp], 1
	je	$LN39@doWriteRev
	jmp	$LN25@doWriteRev
$LN48@doWriteRev:
; Line 184
	mov	eax, DWORD PTR _destSize$[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	jge	SHORT $LN47@doWriteRev
; Line 185
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 186
	mov	eax, DWORD PTR _srcLength$[ebp]
	jmp	$LN51@doWriteRev
$LN47@doWriteRev:
; Line 188
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
$LN46@doWriteRev:
; Line 193
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 196
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN43@doWriteRev
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN43@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	jne	SHORT $LN43@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
$LN43@doWriteRev:
; Line 199
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _j$[ebp], eax
$LN42@doWriteRev:
; Line 201
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	mov	cx, WORD PTR [edx+ecx*2]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 202
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jl	SHORT $LN42@doWriteRev
; Line 203
	cmp	DWORD PTR _srcLength$[ebp], 0
	jg	$LN46@doWriteRev
; Line 204
	jmp	$LN49@doWriteRev
$LN39@doWriteRev:
; Line 212
	mov	eax, DWORD PTR _destSize$[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	jge	SHORT $LN38@doWriteRev
; Line 213
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 214
	mov	eax, DWORD PTR _srcLength$[ebp]
	jmp	$LN51@doWriteRev
$LN38@doWriteRev:
; Line 216
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
$LN37@doWriteRev:
; Line 221
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _i$[ebp], eax
$LN34@doWriteRev:
; Line 225
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN33@doWriteRev
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN33@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx+eax*2-2]
	mov	WORD PTR ___c2$9198[ebp], dx
	movzx	eax, WORD PTR ___c2$9198[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN33@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	movzx	eax, WORD PTR ___c2$9198[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN33@doWriteRev:
; Line 226
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN32@doWriteRev
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charType_56
	add	esp, 4
	movsx	ecx, al
	mov	edx, 1
	shl	edx, cl
	and	edx, 448				; 000001c0H
	jne	$LN34@doWriteRev
$LN32@doWriteRev:
; Line 229
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _j$[ebp], eax
$LN28@doWriteRev:
; Line 231
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	mov	cx, WORD PTR [edx+ecx*2]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 232
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jl	SHORT $LN28@doWriteRev
; Line 233
	cmp	DWORD PTR _srcLength$[ebp], 0
	jg	$LN37@doWriteRev
; Line 234
	jmp	$LN49@doWriteRev
$LN25@doWriteRev:
; Line 243
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 8
	jne	SHORT $LN24@doWriteRev
; Line 244
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 245
	jmp	SHORT $LN23@doWriteRev
$LN24@doWriteRev:
; Line 248
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _length$9209[ebp], eax
; Line 251
	mov	DWORD PTR _i$[ebp], 0
$LN22@doWriteRev:
; Line 253
	mov	eax, DWORD PTR _src$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _ch$9210[ebp], cx
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 2
	mov	DWORD PTR _src$[ebp], edx
; Line 254
	movzx	eax, WORD PTR _ch$9210[ebp]
	and	eax, -4					; fffffffcH
	cmp	eax, 8204				; 0000200cH
	je	SHORT $LN21@doWriteRev
	movzx	eax, WORD PTR _ch$9210[ebp]
	sub	eax, 8234				; 0000202aH
	cmp	eax, 5
	jb	SHORT $LN21@doWriteRev
	movzx	eax, WORD PTR _ch$9210[ebp]
	sub	eax, 8294				; 00002066H
	cmp	eax, 4
	jb	SHORT $LN21@doWriteRev
; Line 255
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN21@doWriteRev:
; Line 257
	mov	eax, DWORD PTR _length$9209[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$9209[ebp], eax
	cmp	DWORD PTR _length$9209[ebp], 0
	jg	SHORT $LN22@doWriteRev
; Line 258
	mov	eax, DWORD PTR _srcLength$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _src$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _src$[ebp], ecx
$LN23@doWriteRev:
; Line 261
	mov	eax, DWORD PTR _destSize$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jge	SHORT $LN18@doWriteRev
; Line 262
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 263
	mov	eax, DWORD PTR _i$[ebp]
	jmp	$LN51@doWriteRev
$LN18@doWriteRev:
; Line 265
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
$LN17@doWriteRev:
; Line 270
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 273
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN14@doWriteRev
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN14@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx+eax*2-2]
	mov	WORD PTR ___c2$9223[ebp], dx
	movzx	eax, WORD PTR ___c2$9223[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN14@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	movzx	eax, WORD PTR ___c2$9223[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN14@doWriteRev:
; Line 274
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 1
	je	$LN12@doWriteRev
$LN11@doWriteRev:
; Line 276
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	$LN12@doWriteRev
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charType_56
	add	esp, 4
	movsx	ecx, al
	mov	edx, 1
	shl	edx, cl
	and	edx, 448				; 000001c0H
	je	SHORT $LN12@doWriteRev
; Line 277
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN9@doWriteRev
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN9@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx+eax*2-2]
	mov	WORD PTR ___c2$9232[ebp], dx
	movzx	eax, WORD PTR ___c2$9232[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN9@doWriteRev
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	movzx	eax, WORD PTR ___c2$9232[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN9@doWriteRev:
; Line 278
	jmp	$LN11@doWriteRev
$LN12@doWriteRev:
; Line 281
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 8
	je	SHORT $LN7@doWriteRev
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -4					; fffffffcH
	cmp	eax, 8204				; 0000200cH
	je	SHORT $LN6@doWriteRev
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 8234				; 0000202aH
	cmp	eax, 5
	jb	SHORT $LN6@doWriteRev
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 8294				; 00002066H
	cmp	eax, 4
	jae	SHORT $LN7@doWriteRev
$LN6@doWriteRev:
; Line 283
	jmp	$LN16@doWriteRev
$LN7@doWriteRev:
; Line 287
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _j$[ebp], eax
; Line 288
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 2
	je	$LN2@doWriteRev
; Line 290
	mov	DWORD PTR _k$9242[ebp], 0
; Line 291
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_charMirror_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 292
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN4@doWriteRev
	mov	eax, DWORD PTR _k$9242[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	dx, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _k$9242[ebp]
	add	eax, 1
	mov	DWORD PTR _k$9242[ebp], eax
	jmp	SHORT $LN3@doWriteRev
$LN4@doWriteRev:
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _k$9242[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _k$9242[ebp]
	add	eax, 1
	mov	DWORD PTR _k$9242[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _k$9242[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _k$9242[ebp]
	add	eax, 1
	mov	DWORD PTR _k$9242[ebp], eax
$LN3@doWriteRev:
; Line 293
	mov	eax, DWORD PTR _k$9242[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
; Line 294
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, DWORD PTR _k$9242[ebp]
	mov	DWORD PTR _j$[ebp], eax
$LN2@doWriteRev:
; Line 296
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jge	SHORT $LN16@doWriteRev
; Line 297
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	mov	cx, WORD PTR [edx+ecx*2]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 298
	jmp	SHORT $LN2@doWriteRev
$LN16@doWriteRev:
; Line 299
	cmp	DWORD PTR _srcLength$[ebp], 0
	jg	$LN17@doWriteRev
$LN49@doWriteRev:
; Line 303
	mov	eax, DWORD PTR _destSize$[ebp]
$LN51@doWriteRev:
; Line 304
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_doWriteReverse ENDP
_TEXT	ENDS
PUBLIC	_ubidi_writeReordered_56
EXTRN	_ubidi_getVisualRun_56:PROC
EXTRN	_ubidi_countRuns_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ubidi_writeReordered_56
_TEXT	SEGMENT
_dir$9384 = -188					; size = 4
_src$9383 = -176					; size = 4
_dirProps$9382 = -164					; size = 4
_markFlag$9331 = -152					; size = 4
_dir$9330 = -140					; size = 4
_uc$9329 = -128						; size = 2
_src$9328 = -116					; size = 4
_dirProps$9327 = -104					; size = 4
_runLength$ = -92					; size = 4
_logicalStart$ = -80					; size = 4
_runCount$ = -68					; size = 4
_run$ = -56						; size = 4
_destCapacity$ = -44					; size = 4
_length$ = -32						; size = 4
_saveDest$ = -20					; size = 4
_text$ = -8						; size = 4
_pBiDi$ = 8						; size = 4
_dest$ = 12						; size = 4
_destSize$ = 16						; size = 4
_options$ = 20						; size = 2
_pErrorCode$ = 24					; size = 4
_ubidi_writeReordered_56 PROC				; COMDAT
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 357
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN78@ubidi_writ@2
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN79@ubidi_writ@2
$LN78@ubidi_writ@2:
; Line 358
	xor	eax, eax
	jmp	$LN80@ubidi_writ@2
$LN79@ubidi_writ@2:
; Line 364
	cmp	DWORD PTR _pBiDi$[ebp], 0
	je	SHORT $LN76@ubidi_writ@2
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _text$[ebp], ecx
	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN76@ubidi_writ@2
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _length$[ebp], ecx
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN76@ubidi_writ@2
	cmp	DWORD PTR _destSize$[ebp], 0
	jl	SHORT $LN76@ubidi_writ@2
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN77@ubidi_writ@2
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN77@ubidi_writ@2
$LN76@ubidi_writ@2:
; Line 366
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 367
	xor	eax, eax
	jmp	$LN80@ubidi_writ@2
$LN77@ubidi_writ@2:
; Line 373
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN75@ubidi_writ@2
	mov	eax, DWORD PTR _text$[ebp]
	cmp	eax, DWORD PTR _dest$[ebp]
	jb	SHORT $LN73@ubidi_writ@2
	mov	eax, DWORD PTR _destSize$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	cmp	DWORD PTR _text$[ebp], edx
	jb	SHORT $LN74@ubidi_writ@2
$LN73@ubidi_writ@2:
	mov	eax, DWORD PTR _dest$[ebp]
	cmp	eax, DWORD PTR _text$[ebp]
	jb	SHORT $LN75@ubidi_writ@2
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _text$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	cmp	DWORD PTR _dest$[ebp], eax
	jae	SHORT $LN75@ubidi_writ@2
$LN74@ubidi_writ@2:
; Line 375
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 376
	xor	eax, eax
	jmp	$LN80@ubidi_writ@2
$LN75@ubidi_writ@2:
; Line 379
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN72@ubidi_writ@2
; Line 381
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _destSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
	jmp	$LN80@ubidi_writ@2
$LN72@ubidi_writ@2:
; Line 384
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBiDi$[ebp]
	push	ecx
	call	_ubidi_countRuns_56
	add	esp, 8
	mov	DWORD PTR _runCount$[ebp], eax
; Line 385
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN71@ubidi_writ@2
; Line 386
	xor	eax, eax
	jmp	$LN80@ubidi_writ@2
$LN71@ubidi_writ@2:
; Line 390
	mov	eax, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _saveDest$[ebp], eax
; Line 391
	mov	eax, DWORD PTR _destSize$[ebp]
	mov	DWORD PTR _destCapacity$[ebp], eax
; Line 397
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	and	ecx, 1
	je	SHORT $LN70@ubidi_writ@2
; Line 398
	movzx	eax, WORD PTR _options$[ebp]
	or	eax, 4
	mov	WORD PTR _options$[ebp], ax
; Line 399
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, -9					; fffffff7H
	mov	WORD PTR _options$[ebp], ax
$LN70@ubidi_writ@2:
; Line 405
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	and	ecx, 2
	je	SHORT $LN69@ubidi_writ@2
; Line 406
	movzx	eax, WORD PTR _options$[ebp]
	or	eax, 8
	mov	WORD PTR _options$[ebp], ax
; Line 407
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, -5					; fffffffbH
	mov	WORD PTR _options$[ebp], ax
$LN69@ubidi_writ@2:
; Line 416
	mov	eax, DWORD PTR _pBiDi$[ebp]
	cmp	DWORD PTR [eax+88], 4
	je	SHORT $LN68@ubidi_writ@2
	mov	eax, DWORD PTR _pBiDi$[ebp]
	cmp	DWORD PTR [eax+88], 5
	je	SHORT $LN68@ubidi_writ@2
	mov	eax, DWORD PTR _pBiDi$[ebp]
	cmp	DWORD PTR [eax+88], 6
	je	SHORT $LN68@ubidi_writ@2
	mov	eax, DWORD PTR _pBiDi$[ebp]
	cmp	DWORD PTR [eax+88], 3
	je	SHORT $LN68@ubidi_writ@2
; Line 417
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, -5					; fffffffbH
	mov	WORD PTR _options$[ebp], ax
$LN68@ubidi_writ@2:
; Line 431
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 16					; 00000010H
	jne	$LN67@ubidi_writ@2
; Line 433
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 4
	jne	$LN66@ubidi_writ@2
; Line 435
	mov	DWORD PTR _run$[ebp], 0
	jmp	SHORT $LN65@ubidi_writ@2
$LN64@ubidi_writ@2:
	mov	eax, DWORD PTR _run$[ebp]
	add	eax, 1
	mov	DWORD PTR _run$[ebp], eax
$LN65@ubidi_writ@2:
	mov	eax, DWORD PTR _run$[ebp]
	cmp	eax, DWORD PTR _runCount$[ebp]
	jge	$LN63@ubidi_writ@2
; Line 436
	lea	eax, DWORD PTR _runLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logicalStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _run$[ebp]
	push	edx
	mov	eax, DWORD PTR _pBiDi$[ebp]
	push	eax
	call	_ubidi_getVisualRun_56
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN62@ubidi_writ@2
; Line 439
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	and	ecx, -3					; fffffffdH
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _logicalStart$[ebp]
	mov	eax, DWORD PTR _text$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	_doWriteForward
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
; Line 440
	jmp	SHORT $LN61@ubidi_writ@2
$LN62@ubidi_writ@2:
; Line 443
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _logicalStart$[ebp]
	mov	eax, DWORD PTR _text$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	_doWriteReverse
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
$LN61@ubidi_writ@2:
; Line 445
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN60@ubidi_writ@2
; Line 446
	mov	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
$LN60@ubidi_writ@2:
; Line 448
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _runLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
; Line 449
	jmp	$LN64@ubidi_writ@2
$LN63@ubidi_writ@2:
; Line 450
	jmp	$LN59@ubidi_writ@2
$LN66@ubidi_writ@2:
; Line 452
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _dirProps$9327[ebp], ecx
; Line 458
	mov	DWORD PTR _run$[ebp], 0
	jmp	SHORT $LN58@ubidi_writ@2
$LN57@ubidi_writ@2:
	mov	eax, DWORD PTR _run$[ebp]
	add	eax, 1
	mov	DWORD PTR _run$[ebp], eax
$LN58@ubidi_writ@2:
	mov	eax, DWORD PTR _run$[ebp]
	cmp	eax, DWORD PTR _runCount$[ebp]
	jge	$LN59@ubidi_writ@2
; Line 459
	lea	eax, DWORD PTR _runLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logicalStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _run$[ebp]
	push	edx
	mov	eax, DWORD PTR _pBiDi$[ebp]
	push	eax
	call	_ubidi_getVisualRun_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _dir$9330[ebp], eax
; Line 460
	mov	eax, DWORD PTR _logicalStart$[ebp]
	mov	ecx, DWORD PTR _text$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _src$9328[ebp], edx
; Line 462
	mov	eax, DWORD PTR _run$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _pBiDi$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	mov	eax, DWORD PTR [edx+eax+8]
	mov	DWORD PTR _markFlag$9331[ebp], eax
; Line 463
	cmp	DWORD PTR _markFlag$9331[ebp], 0
	jge	SHORT $LN55@ubidi_writ@2
; Line 464
	mov	DWORD PTR _markFlag$9331[ebp], 0
$LN55@ubidi_writ@2:
; Line 467
	cmp	DWORD PTR _dir$9330[ebp], 0
	jne	$LN54@ubidi_writ@2
; Line 469
	mov	eax, DWORD PTR _pBiDi$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	je	SHORT $LN53@ubidi_writ@2
	mov	eax, DWORD PTR _dirProps$9327[ebp]
	add	eax, DWORD PTR _logicalStart$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN53@ubidi_writ@2
; Line 470
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	or	eax, 1
	mov	DWORD PTR _markFlag$9331[ebp], eax
$LN53@ubidi_writ@2:
; Line 472
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 1
	je	SHORT $LN52@ubidi_writ@2
; Line 473
	mov	eax, 8206				; 0000200eH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN51@ubidi_writ@2
$LN52@ubidi_writ@2:
; Line 475
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 4
	je	SHORT $LN50@ubidi_writ@2
; Line 476
	mov	eax, 8207				; 0000200fH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN51@ubidi_writ@2
$LN50@ubidi_writ@2:
; Line 478
	xor	eax, eax
	mov	WORD PTR _uc$9329[ebp], ax
$LN51@ubidi_writ@2:
; Line 479
	movzx	eax, WORD PTR _uc$9329[ebp]
	test	eax, eax
	je	SHORT $LN48@ubidi_writ@2
; Line 480
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN47@ubidi_writ@2
; Line 481
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cx, WORD PTR _uc$9329[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN47@ubidi_writ@2:
; Line 483
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN48@ubidi_writ@2:
; Line 488
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	and	ecx, -3					; fffffffdH
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$9328[ebp]
	push	edx
	call	_doWriteForward
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
; Line 489
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN46@ubidi_writ@2
; Line 490
	mov	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
$LN46@ubidi_writ@2:
; Line 492
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _runLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
; Line 495
	mov	eax, DWORD PTR _pBiDi$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	je	SHORT $LN45@ubidi_writ@2
	mov	eax, DWORD PTR _logicalStart$[ebp]
	add	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dirProps$9327[ebp]
	movzx	edx, BYTE PTR [ecx+eax-1]
	test	edx, edx
	je	SHORT $LN45@ubidi_writ@2
; Line 496
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	or	eax, 2
	mov	DWORD PTR _markFlag$9331[ebp], eax
$LN45@ubidi_writ@2:
; Line 498
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 2
	je	SHORT $LN44@ubidi_writ@2
; Line 499
	mov	eax, 8206				; 0000200eH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN43@ubidi_writ@2
$LN44@ubidi_writ@2:
; Line 501
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 8
	je	SHORT $LN42@ubidi_writ@2
; Line 502
	mov	eax, 8207				; 0000200fH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN43@ubidi_writ@2
$LN42@ubidi_writ@2:
; Line 504
	xor	eax, eax
	mov	WORD PTR _uc$9329[ebp], ax
$LN43@ubidi_writ@2:
; Line 505
	movzx	eax, WORD PTR _uc$9329[ebp]
	test	eax, eax
	je	SHORT $LN40@ubidi_writ@2
; Line 506
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN39@ubidi_writ@2
; Line 507
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cx, WORD PTR _uc$9329[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN39@ubidi_writ@2:
; Line 509
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN40@ubidi_writ@2:
; Line 511
	jmp	$LN38@ubidi_writ@2
$LN54@ubidi_writ@2:
; Line 513
	mov	eax, DWORD PTR _pBiDi$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	je	SHORT $LN37@ubidi_writ@2
	mov	eax, DWORD PTR _logicalStart$[ebp]
	add	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dirProps$9327[ebp]
	movzx	ecx, BYTE PTR [ecx+eax-1]
	mov	edx, 1
	shl	edx, cl
	and	edx, 8194				; 00002002H
	jne	SHORT $LN37@ubidi_writ@2
; Line 514
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	or	eax, 4
	mov	DWORD PTR _markFlag$9331[ebp], eax
$LN37@ubidi_writ@2:
; Line 516
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 1
	je	SHORT $LN36@ubidi_writ@2
; Line 517
	mov	eax, 8206				; 0000200eH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN35@ubidi_writ@2
$LN36@ubidi_writ@2:
; Line 519
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 4
	je	SHORT $LN34@ubidi_writ@2
; Line 520
	mov	eax, 8207				; 0000200fH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN35@ubidi_writ@2
$LN34@ubidi_writ@2:
; Line 522
	xor	eax, eax
	mov	WORD PTR _uc$9329[ebp], ax
$LN35@ubidi_writ@2:
; Line 523
	movzx	eax, WORD PTR _uc$9329[ebp]
	test	eax, eax
	je	SHORT $LN32@ubidi_writ@2
; Line 524
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN31@ubidi_writ@2
; Line 525
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cx, WORD PTR _uc$9329[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN31@ubidi_writ@2:
; Line 527
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN32@ubidi_writ@2:
; Line 532
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$9328[ebp]
	push	edx
	call	_doWriteReverse
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
; Line 533
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN30@ubidi_writ@2
; Line 534
	mov	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
$LN30@ubidi_writ@2:
; Line 536
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _runLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
; Line 539
	mov	eax, DWORD PTR _pBiDi$[ebp]
	movsx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	je	SHORT $LN29@ubidi_writ@2
	mov	eax, DWORD PTR _dirProps$9327[ebp]
	add	eax, DWORD PTR _logicalStart$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, 1
	shl	edx, cl
	and	edx, 8194				; 00002002H
	jne	SHORT $LN29@ubidi_writ@2
; Line 540
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	or	eax, 8
	mov	DWORD PTR _markFlag$9331[ebp], eax
$LN29@ubidi_writ@2:
; Line 542
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 2
	je	SHORT $LN28@ubidi_writ@2
; Line 543
	mov	eax, 8206				; 0000200eH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN27@ubidi_writ@2
$LN28@ubidi_writ@2:
; Line 545
	mov	eax, DWORD PTR _markFlag$9331[ebp]
	and	eax, 8
	je	SHORT $LN26@ubidi_writ@2
; Line 546
	mov	eax, 8207				; 0000200fH
	mov	WORD PTR _uc$9329[ebp], ax
	jmp	SHORT $LN27@ubidi_writ@2
$LN26@ubidi_writ@2:
; Line 548
	xor	eax, eax
	mov	WORD PTR _uc$9329[ebp], ax
$LN27@ubidi_writ@2:
; Line 549
	movzx	eax, WORD PTR _uc$9329[ebp]
	test	eax, eax
	je	SHORT $LN38@ubidi_writ@2
; Line 550
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN23@ubidi_writ@2
; Line 551
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cx, WORD PTR _uc$9329[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN23@ubidi_writ@2:
; Line 553
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN38@ubidi_writ@2:
; Line 556
	jmp	$LN57@ubidi_writ@2
$LN59@ubidi_writ@2:
; Line 558
	jmp	$LN22@ubidi_writ@2
$LN67@ubidi_writ@2:
; Line 560
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 4
	jne	$LN21@ubidi_writ@2
; Line 562
	mov	eax, DWORD PTR _runCount$[ebp]
	mov	DWORD PTR _run$[ebp], eax
$LN20@ubidi_writ@2:
	mov	eax, DWORD PTR _run$[ebp]
	sub	eax, 1
	mov	DWORD PTR _run$[ebp], eax
	js	$LN19@ubidi_writ@2
; Line 563
	lea	eax, DWORD PTR _runLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logicalStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _run$[ebp]
	push	edx
	mov	eax, DWORD PTR _pBiDi$[ebp]
	push	eax
	call	_ubidi_getVisualRun_56
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN18@ubidi_writ@2
; Line 566
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	and	ecx, -3					; fffffffdH
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _logicalStart$[ebp]
	mov	eax, DWORD PTR _text$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	_doWriteReverse
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
; Line 567
	jmp	SHORT $LN17@ubidi_writ@2
$LN18@ubidi_writ@2:
; Line 570
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _logicalStart$[ebp]
	mov	eax, DWORD PTR _text$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	_doWriteForward
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
$LN17@ubidi_writ@2:
; Line 572
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN16@ubidi_writ@2
; Line 573
	mov	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
$LN16@ubidi_writ@2:
; Line 575
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _runLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
; Line 576
	jmp	$LN20@ubidi_writ@2
$LN19@ubidi_writ@2:
; Line 577
	jmp	$LN22@ubidi_writ@2
$LN21@ubidi_writ@2:
; Line 579
	mov	eax, DWORD PTR _pBiDi$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _dirProps$9382[ebp], ecx
; Line 583
	mov	eax, DWORD PTR _runCount$[ebp]
	mov	DWORD PTR _run$[ebp], eax
$LN14@ubidi_writ@2:
	mov	eax, DWORD PTR _run$[ebp]
	sub	eax, 1
	mov	DWORD PTR _run$[ebp], eax
	js	$LN22@ubidi_writ@2
; Line 585
	lea	eax, DWORD PTR _runLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logicalStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _run$[ebp]
	push	edx
	mov	eax, DWORD PTR _pBiDi$[ebp]
	push	eax
	call	_ubidi_getVisualRun_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _dir$9384[ebp], eax
; Line 586
	mov	eax, DWORD PTR _logicalStart$[ebp]
	mov	ecx, DWORD PTR _text$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _src$9383[ebp], edx
; Line 588
	cmp	DWORD PTR _dir$9384[ebp], 0
	jne	$LN12@ubidi_writ@2
; Line 589
	mov	eax, DWORD PTR _logicalStart$[ebp]
	add	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dirProps$9382[ebp]
	movzx	edx, BYTE PTR [ecx+eax-1]
	test	edx, edx
	je	SHORT $LN11@ubidi_writ@2
; Line 590
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN10@ubidi_writ@2
; Line 591
	mov	eax, 8206				; 0000200eH
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN10@ubidi_writ@2:
; Line 593
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN11@ubidi_writ@2:
; Line 598
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	and	ecx, -3					; fffffffdH
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$9383[ebp]
	push	edx
	call	_doWriteReverse
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
; Line 599
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN9@ubidi_writ@2
; Line 600
	mov	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
$LN9@ubidi_writ@2:
; Line 602
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _runLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
; Line 604
	mov	eax, DWORD PTR _dirProps$9382[ebp]
	add	eax, DWORD PTR _logicalStart$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN8@ubidi_writ@2
; Line 605
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN7@ubidi_writ@2
; Line 606
	mov	eax, 8206				; 0000200eH
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN7@ubidi_writ@2:
; Line 608
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN8@ubidi_writ@2:
; Line 610
	jmp	$LN6@ubidi_writ@2
$LN12@ubidi_writ@2:
; Line 611
	mov	eax, DWORD PTR _dirProps$9382[ebp]
	add	eax, DWORD PTR _logicalStart$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, 1
	shl	edx, cl
	and	edx, 8194				; 00002002H
	jne	SHORT $LN5@ubidi_writ@2
; Line 612
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN4@ubidi_writ@2
; Line 613
	mov	eax, 8207				; 0000200fH
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN4@ubidi_writ@2:
; Line 615
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN5@ubidi_writ@2:
; Line 620
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, WORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$9383[ebp]
	push	edx
	call	_doWriteForward
	add	esp, 24					; 00000018H
	mov	DWORD PTR _runLength$[ebp], eax
; Line 621
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN3@ubidi_writ@2
; Line 622
	mov	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _dest$[ebp], edx
$LN3@ubidi_writ@2:
; Line 624
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _runLength$[ebp]
	mov	DWORD PTR _destSize$[ebp], eax
; Line 626
	mov	eax, DWORD PTR _logicalStart$[ebp]
	add	eax, DWORD PTR _runLength$[ebp]
	mov	ecx, DWORD PTR _dirProps$9382[ebp]
	movzx	ecx, BYTE PTR [ecx+eax-1]
	mov	edx, 1
	shl	edx, cl
	and	edx, 8194				; 00002002H
	jne	SHORT $LN6@ubidi_writ@2
; Line 627
	cmp	DWORD PTR _destSize$[ebp], 0
	jle	SHORT $LN1@ubidi_writ@2
; Line 628
	mov	eax, 8207				; 0000200fH
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN1@ubidi_writ@2:
; Line 630
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destSize$[ebp], eax
$LN6@ubidi_writ@2:
; Line 633
	jmp	$LN14@ubidi_writ@2
$LN22@ubidi_writ@2:
; Line 637
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destCapacity$[ebp]
	sub	ecx, DWORD PTR _destSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destCapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _saveDest$[ebp]
	push	eax
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
$LN80@ubidi_writ@2:
; Line 638
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN85@ubidi_writ@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN85@ubidi_writ@2:
	DD	2
	DD	$LN84@ubidi_writ@2
$LN84@ubidi_writ@2:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN82@ubidi_writ@2
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN83@ubidi_writ@2
$LN83@ubidi_writ@2:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN82@ubidi_writ@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_ubidi_writeReordered_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _doWriteForward
_TEXT	SEGMENT
tv66 = -340						; size = 4
___c2$9137 = -140					; size = 2
_c$9132 = -128						; size = 4
_j$9131 = -116						; size = 4
_i$9130 = -104						; size = 4
_remaining$9129 = -92					; size = 4
_c$9112 = -80						; size = 2
_remaining$9111 = -68					; size = 4
___c2$9100 = -56					; size = 2
_c$9094 = -44						; size = 4
_j$9093 = -32						; size = 4
_i$9092 = -20						; size = 4
_length$9086 = -8					; size = 4
_src$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_dest$ = 16						; size = 4
_destSize$ = 20						; size = 4
_options$ = 24						; size = 2
_pErrorCode$ = 28					; size = 4
_doWriteForward PROC					; COMDAT
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	movzx	eax, WORD PTR _options$[ebp]
	and	eax, 10					; 0000000aH
	mov	DWORD PTR tv66[ebp], eax
	je	SHORT $LN36@doWriteFor
	cmp	DWORD PTR tv66[ebp], 2
	je	SHORT $LN31@doWriteFor
	cmp	DWORD PTR tv66[ebp], 8
	je	$LN22@doWriteFor
	jmp	$LN13@doWriteFor
$LN36@doWriteFor:
; Line 65
	mov	eax, DWORD PTR _srcLength$[ebp]
	mov	DWORD PTR _length$9086[ebp], eax
; Line 66
	mov	eax, DWORD PTR _destSize$[ebp]
	cmp	eax, DWORD PTR _length$9086[ebp]
	jge	SHORT $LN34@doWriteFor
; Line 67
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 68
	mov	eax, DWORD PTR _srcLength$[ebp]
	jmp	$LN39@doWriteFor
$LN34@doWriteFor:
; Line 71
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, 2
	mov	DWORD PTR _src$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _length$9086[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$9086[ebp], eax
	cmp	DWORD PTR _length$9086[ebp], 0
	jg	SHORT $LN34@doWriteFor
; Line 73
	mov	eax, DWORD PTR _srcLength$[ebp]
	jmp	$LN39@doWriteFor
$LN31@doWriteFor:
; Line 77
	mov	DWORD PTR _i$9092[ebp], 0
	mov	DWORD PTR _j$9093[ebp], 0
; Line 80
	mov	eax, DWORD PTR _destSize$[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	jge	SHORT $LN29@doWriteFor
; Line 81
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 82
	mov	eax, DWORD PTR _srcLength$[ebp]
	jmp	$LN39@doWriteFor
$LN29@doWriteFor:
; Line 85
	mov	eax, DWORD PTR _i$9092[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$9094[ebp], edx
	mov	eax, DWORD PTR _i$9092[ebp]
	add	eax, 1
	mov	DWORD PTR _i$9092[ebp], eax
	mov	eax, DWORD PTR _c$9094[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN26@doWriteFor
	mov	eax, DWORD PTR _i$9092[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	je	SHORT $LN26@doWriteFor
	mov	eax, DWORD PTR _i$9092[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$9100[ebp], dx
	movzx	eax, WORD PTR ___c2$9100[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN26@doWriteFor
	mov	eax, DWORD PTR _i$9092[ebp]
	add	eax, 1
	mov	DWORD PTR _i$9092[ebp], eax
	mov	eax, DWORD PTR _c$9094[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$9100[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$9094[ebp], edx
$LN26@doWriteFor:
; Line 86
	mov	eax, DWORD PTR _c$9094[ebp]
	push	eax
	call	_u_charMirror_56
	add	esp, 4
	mov	DWORD PTR _c$9094[ebp], eax
; Line 87
	cmp	DWORD PTR _c$9094[ebp], 65535		; 0000ffffH
	ja	SHORT $LN24@doWriteFor
	mov	eax, DWORD PTR _j$9093[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	dx, WORD PTR _c$9094[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _j$9093[ebp]
	add	eax, 1
	mov	DWORD PTR _j$9093[ebp], eax
	jmp	SHORT $LN28@doWriteFor
$LN24@doWriteFor:
	mov	eax, DWORD PTR _c$9094[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _j$9093[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _j$9093[ebp]
	add	eax, 1
	mov	DWORD PTR _j$9093[ebp], eax
	mov	eax, DWORD PTR _c$9094[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _j$9093[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _j$9093[ebp]
	add	eax, 1
	mov	DWORD PTR _j$9093[ebp], eax
$LN28@doWriteFor:
; Line 88
	mov	eax, DWORD PTR _i$9092[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	jl	$LN29@doWriteFor
; Line 89
	mov	eax, DWORD PTR _srcLength$[ebp]
	jmp	$LN39@doWriteFor
$LN22@doWriteFor:
; Line 93
	mov	eax, DWORD PTR _destSize$[ebp]
	mov	DWORD PTR _remaining$9111[ebp], eax
$LN21@doWriteFor:
; Line 96
	mov	eax, DWORD PTR _src$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$9112[ebp], cx
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 2
	mov	DWORD PTR _src$[ebp], edx
; Line 97
	movzx	eax, WORD PTR _c$9112[ebp]
	and	eax, -4					; fffffffcH
	cmp	eax, 8204				; 0000200cH
	je	$LN20@doWriteFor
	movzx	eax, WORD PTR _c$9112[ebp]
	sub	eax, 8234				; 0000202aH
	cmp	eax, 5
	jb	$LN20@doWriteFor
	movzx	eax, WORD PTR _c$9112[ebp]
	sub	eax, 8294				; 00002066H
	cmp	eax, 4
	jb	$LN20@doWriteFor
; Line 98
	mov	eax, DWORD PTR _remaining$9111[ebp]
	sub	eax, 1
	mov	DWORD PTR _remaining$9111[ebp], eax
	jns	SHORT $LN17@doWriteFor
; Line 99
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN16@doWriteFor:
; Line 102
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN15@doWriteFor
; Line 103
	mov	eax, DWORD PTR _src$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$9112[ebp], cx
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 2
	mov	DWORD PTR _src$[ebp], edx
; Line 104
	movzx	eax, WORD PTR _c$9112[ebp]
	and	eax, -4					; fffffffcH
	cmp	eax, 8204				; 0000200cH
	je	SHORT $LN14@doWriteFor
	movzx	eax, WORD PTR _c$9112[ebp]
	sub	eax, 8234				; 0000202aH
	cmp	eax, 5
	jb	SHORT $LN14@doWriteFor
	movzx	eax, WORD PTR _c$9112[ebp]
	sub	eax, 8294				; 00002066H
	cmp	eax, 4
	jb	SHORT $LN14@doWriteFor
; Line 105
	mov	eax, DWORD PTR _remaining$9111[ebp]
	sub	eax, 1
	mov	DWORD PTR _remaining$9111[ebp], eax
$LN14@doWriteFor:
; Line 107
	jmp	SHORT $LN16@doWriteFor
$LN15@doWriteFor:
; Line 108
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _remaining$9111[ebp]
	jmp	$LN39@doWriteFor
$LN17@doWriteFor:
; Line 110
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cx, WORD PTR _c$9112[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
$LN20@doWriteFor:
; Line 112
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
	cmp	DWORD PTR _srcLength$[ebp], 0
	jg	$LN21@doWriteFor
; Line 113
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _remaining$9111[ebp]
	jmp	$LN39@doWriteFor
$LN13@doWriteFor:
; Line 117
	mov	eax, DWORD PTR _destSize$[ebp]
	mov	DWORD PTR _remaining$9129[ebp], eax
; Line 118
	mov	DWORD PTR _j$9131[ebp], 0
$LN12@doWriteFor:
; Line 121
	mov	DWORD PTR _i$9130[ebp], 0
; Line 122
	mov	eax, DWORD PTR _i$9130[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$9132[ebp], edx
	mov	eax, DWORD PTR _i$9130[ebp]
	add	eax, 1
	mov	DWORD PTR _i$9130[ebp], eax
	mov	eax, DWORD PTR _c$9132[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN9@doWriteFor
	mov	eax, DWORD PTR _i$9130[ebp]
	cmp	eax, DWORD PTR _srcLength$[ebp]
	je	SHORT $LN9@doWriteFor
	mov	eax, DWORD PTR _i$9130[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$9137[ebp], dx
	movzx	eax, WORD PTR ___c2$9137[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN9@doWriteFor
	mov	eax, DWORD PTR _i$9130[ebp]
	add	eax, 1
	mov	DWORD PTR _i$9130[ebp], eax
	mov	eax, DWORD PTR _c$9132[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$9137[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$9132[ebp], edx
$LN9@doWriteFor:
; Line 123
	mov	eax, DWORD PTR _i$9130[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _src$[ebp], edx
; Line 124
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, DWORD PTR _i$9130[ebp]
	mov	DWORD PTR _srcLength$[ebp], eax
; Line 125
	mov	eax, DWORD PTR _c$9132[ebp]
	and	eax, -4					; fffffffcH
	cmp	eax, 8204				; 0000200cH
	je	$LN11@doWriteFor
	mov	eax, DWORD PTR _c$9132[ebp]
	sub	eax, 8234				; 0000202aH
	cmp	eax, 5
	jb	$LN11@doWriteFor
	mov	eax, DWORD PTR _c$9132[ebp]
	sub	eax, 8294				; 00002066H
	cmp	eax, 4
	jb	$LN11@doWriteFor
; Line 126
	mov	eax, DWORD PTR _remaining$9129[ebp]
	sub	eax, DWORD PTR _i$9130[ebp]
	mov	DWORD PTR _remaining$9129[ebp], eax
; Line 127
	jns	SHORT $LN6@doWriteFor
; Line 128
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN5@doWriteFor:
; Line 131
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN4@doWriteFor
; Line 132
	mov	eax, DWORD PTR _src$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$9132[ebp], ecx
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 2
	mov	DWORD PTR _src$[ebp], edx
; Line 133
	mov	eax, DWORD PTR _c$9132[ebp]
	and	eax, -4					; fffffffcH
	cmp	eax, 8204				; 0000200cH
	je	SHORT $LN3@doWriteFor
	mov	eax, DWORD PTR _c$9132[ebp]
	sub	eax, 8234				; 0000202aH
	cmp	eax, 5
	jb	SHORT $LN3@doWriteFor
	mov	eax, DWORD PTR _c$9132[ebp]
	sub	eax, 8294				; 00002066H
	cmp	eax, 4
	jb	SHORT $LN3@doWriteFor
; Line 134
	mov	eax, DWORD PTR _remaining$9129[ebp]
	sub	eax, 1
	mov	DWORD PTR _remaining$9129[ebp], eax
$LN3@doWriteFor:
; Line 136
	mov	eax, DWORD PTR _srcLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _srcLength$[ebp], eax
; Line 137
	jmp	SHORT $LN5@doWriteFor
$LN4@doWriteFor:
; Line 138
	mov	eax, DWORD PTR _destSize$[ebp]
	sub	eax, DWORD PTR _remaining$9129[ebp]
	jmp	SHORT $LN39@doWriteFor
$LN6@doWriteFor:
; Line 140
	mov	eax, DWORD PTR _c$9132[ebp]
	push	eax
	call	_u_charMirror_56
	add	esp, 4
	mov	DWORD PTR _c$9132[ebp], eax
; Line 141
	cmp	DWORD PTR _c$9132[ebp], 65535		; 0000ffffH
	ja	SHORT $LN2@doWriteFor
	mov	eax, DWORD PTR _j$9131[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	dx, WORD PTR _c$9132[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _j$9131[ebp]
	add	eax, 1
	mov	DWORD PTR _j$9131[ebp], eax
	jmp	SHORT $LN11@doWriteFor
$LN2@doWriteFor:
	mov	eax, DWORD PTR _c$9132[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _j$9131[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _j$9131[ebp]
	add	eax, 1
	mov	DWORD PTR _j$9131[ebp], eax
	mov	eax, DWORD PTR _c$9132[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _j$9131[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _j$9131[ebp]
	add	eax, 1
	mov	DWORD PTR _j$9131[ebp], eax
$LN11@doWriteFor:
; Line 143
	cmp	DWORD PTR _srcLength$[ebp], 0
	jg	$LN12@doWriteFor
; Line 144
	mov	eax, DWORD PTR _j$9131[ebp]
$LN39@doWriteFor:
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_doWriteForward ENDP
_TEXT	ENDS
END

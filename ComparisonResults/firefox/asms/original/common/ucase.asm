; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucase.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_ucase_props_indexes DD 010H
	DD	067eaH
	DD	05658H
	DD	0737H
	DD	0172H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03H
_ucase_props_trieIndex DW 0316H
	DW	031eH
	DW	0326H
	DW	032eH
	DW	033cH
	DW	0344H
	DW	034cH
	DW	0354H
	DW	035cH
	DW	0364H
	DW	036bH
	DW	0373H
	DW	037bH
	DW	0383H
	DW	038bH
	DW	0393H
	DW	0399H
	DW	03a1H
	DW	03a9H
	DW	03b1H
	DW	03b9H
	DW	03c1H
	DW	03c9H
	DW	03d1H
	DW	03d9H
	DW	03e1H
	DW	03e9H
	DW	03f1H
	DW	03f9H
	DW	0401H
	DW	0409H
	DW	0411H
	DW	0419H
	DW	0421H
	DW	0425H
	DW	042dH
	DW	0435H
	DW	043dH
	DW	0445H
	DW	044dH
	DW	0449H
	DW	0451H
	DW	0456H
	DW	045eH
	DW	0465H
	DW	046dH
	DW	0475H
	DW	047dH
	DW	0485H
	DW	048dH
	DW	0495H
	DW	049dH
	DW	0335H
	DW	033dH
	DW	04a2H
	DW	04aaH
	DW	04afH
	DW	04b7H
	DW	04bfH
	DW	04c7H
	DW	04c6H
	DW	04ceH
	DW	04d3H
	DW	04dbH
	DW	04e2H
	DW	04e9H
	DW	04edH
	DW	0335H
	DW	0335H
	DW	0316H
	DW	0335H
	DW	04f5H
	DW	04fdH
	DW	04ffH
	DW	0507H
	DW	050fH
	DW	0513H
	DW	0514H
	DW	051cH
	DW	0524H
	DW	052cH
	DW	0514H
	DW	0534H
	DW	0539H
	DW	052cH
	DW	0514H
	DW	0541H
	DW	0524H
	DW	0513H
	DW	0545H
	DW	054dH
	DW	0524H
	DW	0552H
	DW	0335H
	DW	055aH
	DW	0335H
	DW	048cH
	DW	04c8H
	DW	0562H
	DW	0524H
	DW	0513H
	DW	0545H
	DW	0569H
	DW	0524H
	DW	0513H
	DW	0335H
	DW	051cH
	DW	0524H
	DW	0335H
	DW	0335H
	DW	056fH
	DW	0335H
	DW	0335H
	DW	0575H
	DW	057cH
	DW	0335H
	DW	0335H
	DW	0580H
	DW	0588H
	DW	0335H
	DW	058cH
	DW	0593H
	DW	0335H
	DW	059aH
	DW	05a2H
	DW	05a9H
	DW	05b1H
	DW	0335H
	DW	0335H
	DW	05b6H
	DW	05beH
	DW	05c6H
	DW	05ceH
	DW	05d6H
	DW	05deH
	DW	047bH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	05e2H
	DW	0335H
	DW	0335H
	DW	05f2H
	DW	05faH
	DW	05eaH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0602H
	DW	0602H
	DW	0520H
	DW	0520H
	DW	0335H
	DW	0608H
	DW	0610H
	DW	0335H
	DW	0618H
	DW	0335H
	DW	0620H
	DW	0335H
	DW	0335H
	DW	0626H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	062eH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0635H
	DW	0335H
	DW	063cH
	DW	0644H
	DW	0335H
	DW	064cH
	DW	0335H
	DW	0335H
	DW	0654H
	DW	0657H
	DW	065fH
	DW	0665H
	DW	066dH
	DW	0675H
	DW	0335H
	DW	067cH
	DW	0335H
	DW	0681H
	DW	0335H
	DW	0687H
	DW	0335H
	DW	0335H
	DW	068fH
	DW	0697H
	DW	069fH
	DW	06a4H
	DW	06a7H
	DW	06afH
	DW	06bfH
	DW	06b7H
	DW	06cfH
	DW	06c7H
	DW	035cH
	DW	06d7H
	DW	035cH
	DW	06dfH
	DW	06e2H
	DW	035cH
	DW	06eaH
	DW	035cH
	DW	06f2H
	DW	06faH
	DW	0702H
	DW	070aH
	DW	0712H
	DW	071aH
	DW	0722H
	DW	072aH
	DW	0732H
	DW	0739H
	DW	0335H
	DW	0741H
	DW	0749H
	DW	0335H
	DW	0751H
	DW	0759H
	DW	0761H
	DW	0769H
	DW	0771H
	DW	0779H
	DW	0781H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0784H
	DW	078aH
	DW	0790H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0798H
	DW	079dH
	DW	07a1H
	DW	07a9H
	DW	035cH
	DW	035cH
	DW	035cH
	DW	07b1H
	DW	07b9H
	DW	07c1H
	DW	0335H
	DW	07c6H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	07ceH
	DW	0335H
	DW	061dH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0512H
	DW	07d6H
	DW	0335H
	DW	0335H
	DW	07ddH
	DW	0335H
	DW	0335H
	DW	07e5H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	07edH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0687H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	07f3H
	DW	0335H
	DW	035cH
	DW	07fbH
	DW	0803H
	DW	0335H
	DW	0335H
	DW	080bH
	DW	0813H
	DW	081bH
	DW	035cH
	DW	0820H
	DW	0828H
	DW	082eH
	DW	0335H
	DW	0834H
	DW	083cH
	DW	052bH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0843H
	DW	084bH
	DW	0335H
	DW	0852H
	DW	0859H
	DW	0335H
	DW	04fdH
	DW	085eH
	DW	0866H
	DW	052bH
	DW	0335H
	DW	086cH
	DW	0874H
	DW	0878H
	DW	0335H
	DW	0880H
	DW	0888H
	DW	0890H
	DW	0335H
	DW	0896H
	DW	089aH
	DW	08a2H
	DW	08b2H
	DW	08aaH
	DW	0335H
	DW	08baH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	08c2H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	08caH
	DW	066dH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	08cfH
	DW	08d7H
	DW	08dbH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0318H
	DW	031eH
	DW	08e3H
	DW	08ebH
	DW	08f2H
	DW	04c8H
	DW	0335H
	DW	0335H
	DW	08faH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0cd8H
	DW	0cd8H
	DW	0cf0H
	DW	0d30H
	DW	0d70H
	DW	0dacH
	DW	0decH
	DW	0e2cH
	DW	0e64H
	DW	0ea4H
	DW	0ee4H
	DW	0f24H
	DW	0f64H
	DW	0fa4H
	DW	0fe4H
	DW	01024H
	DW	01064H
	DW	01094H
	DW	010d4H
	DW	01114H
	DW	01124H
	DW	01158H
	DW	01194H
	DW	011d4H
	DW	01214H
	DW	01254H
	DW	0cd4H
	DW	01288H
	DW	012bcH
	DW	012fcH
	DW	01318H
	DW	0134cH
	DW	09e1H
	DW	0a11H
	DW	0a51H
	DW	0a8cH
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0ab5H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0af2H
	DW	0188H
	DW	0188H
	DW	0b27H
	DW	0b66H
	DW	0188H
	DW	0ba0H
	DW	0bd7H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0188H
	DW	0c17H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0621H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0902H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0905H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	090dH
	DW	0913H
	DW	0917H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	091fH
	DW	0923H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	092bH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0933H
	DW	0937H
	DW	093fH
	DW	0943H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0513H
	DW	0948H
	DW	094fH
	DW	0951H
	DW	066dH
	DW	0959H
	DW	0335H
	DW	0335H
	DW	0961H
	DW	0968H
	DW	0335H
	DW	0954H
	DW	066dH
	DW	096eH
	DW	0976H
	DW	0335H
	DW	0335H
	DW	097bH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0318H
	DW	0983H
	DW	066dH
	DW	0514H
	DW	098bH
	DW	0992H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0998H
	DW	09a0H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	09a4H
	DW	09acH
	DW	0335H
	DW	0335H
	DW	09b4H
	DW	048cH
	DW	0335H
	DW	0335H
	DW	09bcH
	DW	0335H
	DW	0335H
	DW	09c2H
	DW	09caH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	041dH
	DW	09d2H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	09daH
	DW	0335H
	DW	09e0H
	DW	0654H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	09e6H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	09eeH
	DW	0654H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	09f6H
	DW	09feH
	DW	0a04H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0a0cH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0a14H
	DW	0a1cH
	DW	0a21H
	DW	0a27H
	DW	0a2fH
	DW	0a37H
	DW	0a3fH
	DW	0a18H
	DW	0a47H
	DW	0a4fH
	DW	0a57H
	DW	0a5eH
	DW	0a19H
	DW	0a14H
	DW	0a1cH
	DW	0a17H
	DW	0a27H
	DW	0a1aH
	DW	0a15H
	DW	0a66H
	DW	0a18H
	DW	0a6eH
	DW	0a76H
	DW	0a7eH
	DW	0a85H
	DW	0a71H
	DW	0a79H
	DW	0a81H
	DW	0a88H
	DW	0a74H
	DW	0a90H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0813H
	DW	0a98H
	DW	0813H
	DW	0a9fH
	DW	0aa6H
	DW	0aaeH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0ab2H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0a10H
	DW	0abaH
	DW	0abaH
	DW	0ac0H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0963H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0513H
	DW	0813H
	DW	0813H
	DW	0813H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0813H
	DW	0813H
	DW	0813H
	DW	0813H
	DW	0813H
	DW	0813H
	DW	0813H
	DW	09eaH
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0335H
	DW	0315H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	01aH
	DW	0baH
	DW	0faH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	017aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	01f9H
	DW	0f029H
	DW	0299H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0319H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	01H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	0399H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	01H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	03faH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	047aH
	DW	04baH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	00H
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	04f9H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0639H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	00H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	03c89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	06baH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	06faH
	DW	0ffa9H
	DW	073aH
	DW	07f9H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0899H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0c38aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0999H
	DW	06189H
	DW	0690aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0670aH
	DW	08aH
	DW	0ff89H
	DW	0668aH
	DW	0668aH
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	0278aH
	DW	0650aH
	DW	0658aH
	DW	08aH
	DW	0ff89H
	DW	0668aH
	DW	0678aH
	DW	03089H
	DW	0698aH
	DW	0688aH
	DW	08aH
	DW	0ff89H
	DW	05189H
	DW	01H
	DW	0698aH
	DW	06a8aH
	DW	04109H
	DW	06b0aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	06d0aH
	DW	08aH
	DW	0ff89H
	DW	06d0aH
	DW	01H
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	06d0aH
	DW	08aH
	DW	0ff89H
	DW	06c8aH
	DW	06c8aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	06d8aH
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	01c09H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	09faH
	DW	0a5bH
	DW	0ad9H
	DW	0b3aH
	DW	0b9bH
	DW	0c19H
	DW	0c7aH
	DW	0cdbH
	DW	0d59H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0d889H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0db9H
	DW	0ebaH
	DW	0f1bH
	DW	0f99H
	DW	08aH
	DW	0ff89H
	DW	0cf8aH
	DW	0e40aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0bf0aH
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0ffaH
	DW	08aH
	DW	0ff89H
	DW	0ae8aH
	DW	0103aH
	DW	01079H
	DW	010b9H
	DW	08aH
	DW	0ff89H
	DW	09e8aH
	DW	0228aH
	DW	0238aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ffa9H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	010f9H
	DW	01139H
	DW	01179H
	DW	09709H
	DW	09909H
	DW	01H
	DW	09989H
	DW	09989H
	DW	01H
	DW	09b09H
	DW	01H
	DW	09a89H
	DW	011b9H
	DW	01H
	DW	01H
	DW	01H
	DW	09989H
	DW	011f9H
	DW	01H
	DW	09889H
	DW	01H
	DW	01239H
	DW	01279H
	DW	01H
	DW	097a9H
	DW	09689H
	DW	01H
	DW	012b9H
	DW	012f9H
	DW	01H
	DW	01H
	DW	09689H
	DW	01H
	DW	01339H
	DW	09589H
	DW	01H
	DW	01H
	DW	09509H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01379H
	DW	01H
	DW	01H
	DW	09309H
	DW	01H
	DW	01H
	DW	09309H
	DW	01H
	DW	01H
	DW	01H
	DW	013b9H
	DW	09309H
	DW	0dd89H
	DW	09389H
	DW	09389H
	DW	0dc89H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	09289H
	DW	01H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	013f9H
	DW	01439H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	05H
	DW	025H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	04H
	DW	04H
	DW	04H
	DW	0cH
	DW	04H
	DW	0cH
	DW	04H
	DW	05H
	DW	05H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04cH
	DW	04cH
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	0147cH
	DW	04cH
	DW	044H
	DW	04cH
	DW	044H
	DW	04cH
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04cH
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	06cH
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04cH
	DW	044H
	DW	044H
	DW	0149dH
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	04H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	04H
	DW	04H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	00H
	DW	05H
	DW	04109H
	DW	04109H
	DW	04109H
	DW	00H
	DW	03a0aH
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	0130aH
	DW	04H
	DW	0128aH
	DW	0128aH
	DW	0128aH
	DW	00H
	DW	0200aH
	DW	00H
	DW	01f8aH
	DW	01f8aH
	DW	01539H
	DW	0100aH
	DW	016daH
	DW	0100aH
	DW	0100aH
	DW	0175aH
	DW	0100aH
	DW	0100aH
	DW	017daH
	DW	0187aH
	DW	0191aH
	DW	0100aH
	DW	0199aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	01a1aH
	DW	01a9aH
	DW	00H
	DW	01b1aH
	DW	0100aH
	DW	0100aH
	DW	01b9aH
	DW	0100aH
	DW	0100aH
	DW	01c1aH
	DW	0100aH
	DW	0100aH
	DW	0ed09H
	DW	0ed89H
	DW	0ed89H
	DW	0ed89H
	DW	01c99H
	DW	0f009H
	DW	01e39H
	DW	0f009H
	DW	0f009H
	DW	01eb9H
	DW	0f009H
	DW	0f009H
	DW	01f39H
	DW	01fd9H
	DW	02079H
	DW	0f009H
	DW	020f9H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	02179H
	DW	021f9H
	DW	02279H
	DW	022d9H
	DW	0f009H
	DW	0f009H
	DW	02359H
	DW	0f009H
	DW	0f009H
	DW	023d9H
	DW	0f009H
	DW	0f009H
	DW	0e009H
	DW	0e089H
	DW	0e089H
	DW	040aH
	DW	02459H
	DW	024b9H
	DW	02H
	DW	02H
	DW	02H
	DW	02559H
	DW	025b9H
	DW	0fc09H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	02619H
	DW	02679H
	DW	0389H
	DW	0c629H
	DW	026daH
	DW	02779H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	0fc8aH
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	0bf0aH
	DW	0bf0aH
	DW	0bf0aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0280aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d829H
	DW	0d809H
	DW	0d829H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	0d809H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04H
	DW	04H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	078aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0f889H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	027d9H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	064H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	044H
	DW	064H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	04H
	DW	04H
	DW	044H
	DW	044H
	DW	00H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	064H
	DW	044H
	DW	064H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04H
	DW	044H
	DW	044H
	DW	044H
	DW	04H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	064H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	04H
	DW	064H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	04H
	DW	00H
	DW	064H
	DW	04H
	DW	044H
	DW	044H
	DW	064H
	DW	00H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	028daH
	DW	0291aH
	DW	0295aH
	DW	0299aH
	DW	029daH
	DW	02a1aH
	DW	02a5aH
	DW	02a9aH
	DW	02adaH
	DW	02b1aH
	DW	02b5aH
	DW	02b9aH
	DW	02bdaH
	DW	02c1aH
	DW	02c5aH
	DW	02c9aH
	DW	02cdaH
	DW	02d1aH
	DW	02d5aH
	DW	02d9aH
	DW	02ddaH
	DW	02e1aH
	DW	02e5aH
	DW	02e9aH
	DW	02edaH
	DW	02f1aH
	DW	02f5aH
	DW	02f9aH
	DW	02fdaH
	DW	0301aH
	DW	0305aH
	DW	0309aH
	DW	030daH
	DW	0311aH
	DW	0315aH
	DW	0319aH
	DW	031daH
	DW	0321aH
	DW	00H
	DW	0325aH
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0329aH
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	04adaH
	DW	04b3aH
	DW	04b9aH
	DW	04bfaH
	DW	04c5aH
	DW	04cbaH
	DW	04d1aH
	DW	04d7aH
	DW	04ddaH
	DW	04e3aH
	DW	04e9aH
	DW	04efaH
	DW	04f5aH
	DW	04fbaH
	DW	0501aH
	DW	0507aH
	DW	050daH
	DW	0513aH
	DW	0519aH
	DW	051faH
	DW	0525aH
	DW	052baH
	DW	00H
	DW	00H
	DW	05319H
	DW	05379H
	DW	053d9H
	DW	05439H
	DW	05499H
	DW	054f9H
	DW	00H
	DW	00H
	DW	032daH
	DW	0333aH
	DW	0339aH
	DW	033faH
	DW	0345aH
	DW	034baH
	DW	0351aH
	DW	0357aH
	DW	035daH
	DW	0363aH
	DW	0369aH
	DW	036faH
	DW	0375aH
	DW	037baH
	DW	0381aH
	DW	0387aH
	DW	038daH
	DW	0393aH
	DW	0399aH
	DW	039faH
	DW	03a5aH
	DW	03abaH
	DW	03b1aH
	DW	03b7aH
	DW	03bdaH
	DW	03c3aH
	DW	03c9aH
	DW	03cfaH
	DW	03d5aH
	DW	03dbaH
	DW	03e1aH
	DW	03e7aH
	DW	03edaH
	DW	03f3aH
	DW	03f9aH
	DW	03ffaH
	DW	0405aH
	DW	040baH
	DW	0411aH
	DW	0417aH
	DW	041daH
	DW	0423aH
	DW	0429aH
	DW	042faH
	DW	0435aH
	DW	043baH
	DW	0441aH
	DW	0447aH
	DW	044daH
	DW	0453aH
	DW	0459aH
	DW	045faH
	DW	0465aH
	DW	046baH
	DW	0471aH
	DW	0477aH
	DW	047daH
	DW	0483aH
	DW	0489aH
	DW	048faH
	DW	0495aH
	DW	049baH
	DW	04a1aH
	DW	04a7aH
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	044H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	064H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	064H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	060H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	060H
	DW	064H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	060H
	DW	060H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	025H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	05559H
	DW	01H
	DW	01H
	DW	01H
	DW	05599H
	DW	01H
	DW	01H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	025H
	DW	05H
	DW	05H
	DW	05H
	DW	025H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ffa9H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	055daH
	DW	05659H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	056d9H
	DW	057d9H
	DW	058d9H
	DW	059d9H
	DW	05ad9H
	DW	05bd9H
	DW	01H
	DW	01H
	DW	05c3aH
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ffa9H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	00H
	DW	00H
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	00H
	DW	00H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	00H
	DW	00H
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	00H
	DW	00H
	DW	05cd9H
	DW	0409H
	DW	05dd9H
	DW	0409H
	DW	05f39H
	DW	0409H
	DW	06099H
	DW	0409H
	DW	00H
	DW	0fc0aH
	DW	00H
	DW	0fc0aH
	DW	00H
	DW	0fc0aH
	DW	00H
	DW	0fc0aH
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0409H
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	0fc0aH
	DW	02509H
	DW	02509H
	DW	02b09H
	DW	02b09H
	DW	02b09H
	DW	02b09H
	DW	03209H
	DW	03209H
	DW	04009H
	DW	04009H
	DW	03809H
	DW	03809H
	DW	03f09H
	DW	03f09H
	DW	00H
	DW	00H
	DW	061f9H
	DW	062d9H
	DW	063b9H
	DW	06499H
	DW	06579H
	DW	06659H
	DW	06739H
	DW	06819H
	DW	068fbH
	DW	069dbH
	DW	06abbH
	DW	06b9bH
	DW	06c7bH
	DW	06d5bH
	DW	06e3bH
	DW	06f1bH
	DW	06ff9H
	DW	070d9H
	DW	071b9H
	DW	07299H
	DW	07379H
	DW	07459H
	DW	07539H
	DW	07619H
	DW	076fbH
	DW	077dbH
	DW	078bbH
	DW	0799bH
	DW	07a7bH
	DW	07b5bH
	DW	07c3bH
	DW	07d1bH
	DW	07df9H
	DW	07ed9H
	DW	07fb9H
	DW	08099H
	DW	08179H
	DW	08259H
	DW	08339H
	DW	08419H
	DW	084fbH
	DW	085dbH
	DW	086bbH
	DW	0879bH
	DW	0887bH
	DW	0895bH
	DW	08a3bH
	DW	08b1bH
	DW	0409H
	DW	0409H
	DW	08bf9H
	DW	08cf9H
	DW	08dd9H
	DW	00H
	DW	08ed9H
	DW	08fd9H
	DW	0fc0aH
	DW	0fc0aH
	DW	0db0aH
	DW	0db0aH
	DW	0913bH
	DW	04H
	DW	09219H
	DW	04H
	DW	04H
	DW	04H
	DW	092b9H
	DW	093b9H
	DW	09499H
	DW	00H
	DW	09599H
	DW	09699H
	DW	0d50aH
	DW	0d50aH
	DW	0d50aH
	DW	0d50aH
	DW	097fbH
	DW	04H
	DW	04H
	DW	04H
	DW	0409H
	DW	0409H
	DW	098d9H
	DW	09a39H
	DW	00H
	DW	00H
	DW	09bd9H
	DW	09cd9H
	DW	0fc0aH
	DW	0fc0aH
	DW	0ce0aH
	DW	0ce0aH
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	0409H
	DW	0409H
	DW	09e39H
	DW	09f99H
	DW	0a139H
	DW	0389H
	DW	0a239H
	DW	0a339H
	DW	0fc0aH
	DW	0fc0aH
	DW	0c80aH
	DW	0c80aH
	DW	0fc8aH
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	0a499H
	DW	0a599H
	DW	0a679H
	DW	00H
	DW	0a779H
	DW	0a879H
	DW	0c00aH
	DW	0c00aH
	DW	0c10aH
	DW	0c10aH
	DW	0a9dbH
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	025H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	05H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	044H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	044H
	DW	064H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	00H
	DW	00H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	00H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	00H
	DW	0aabaH
	DW	00H
	DW	02H
	DW	00H
	DW	0ab3aH
	DW	0abbaH
	DW	02H
	DW	02H
	DW	00H
	DW	01H
	DW	02H
	DW	02H
	DW	0e0aH
	DW	02H
	DW	01H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01H
	DW	00H
	DW	00H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	01H
	DW	01H
	DW	021H
	DW	021H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f209H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	080aH
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	0f809H
	DW	00H
	DW	00H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0d0aH
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	0f309H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	0180aH
	DW	00H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	0e809H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	0ac3aH
	DW	0ac7aH
	DW	0acbaH
	DW	0acf9H
	DW	0ad39H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0ad7aH
	DW	0adbaH
	DW	0adfaH
	DW	0ae3aH
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	025H
	DW	05H
	DW	0ae7aH
	DW	0aebaH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	044H
	DW	044H
	DW	044H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0aef9H
	DW	0af39H
	DW	0af79H
	DW	0afb9H
	DW	0aff9H
	DW	0b039H
	DW	0b079H
	DW	0b0b9H
	DW	0b0f9H
	DW	0b139H
	DW	0b179H
	DW	0b1b9H
	DW	0b1f9H
	DW	0b239H
	DW	0b279H
	DW	0b2b9H
	DW	0b2f9H
	DW	0b339H
	DW	0b379H
	DW	0b3b9H
	DW	0b3f9H
	DW	0b439H
	DW	0b479H
	DW	0b4b9H
	DW	0b4f9H
	DW	0b539H
	DW	0b579H
	DW	0b5b9H
	DW	0b5f9H
	DW	0b639H
	DW	0b679H
	DW	0b6b9H
	DW	0b6f9H
	DW	0b739H
	DW	0b779H
	DW	0b7b9H
	DW	0b7f9H
	DW	0b839H
	DW	00H
	DW	0b879H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0b8b9H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	060H
	DW	060H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	044H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	04H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	05H
	DW	05H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0b8faH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	04H
	DW	04H
	DW	04H
	DW	08aH
	DW	0ff89H
	DW	0b93aH
	DW	01H
	DW	00H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	01H
	DW	01H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	0b97aH
	DW	0b9baH
	DW	0b9faH
	DW	0ba3aH
	DW	00H
	DW	00H
	DW	0ba7aH
	DW	0babaH
	DW	0bafaH
	DW	0bb3aH
	DW	08aH
	DW	0ff89H
	DW	08aH
	DW	0ff89H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	05H
	DW	05H
	DW	01H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	060H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	060H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	00H
	DW	044H
	DW	044H
	DW	064H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	00H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0bb79H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	05H
	DW	05H
	DW	05H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0bbb9H
	DW	0bc19H
	DW	0bc79H
	DW	0bcd9H
	DW	0bd39H
	DW	0bd99H
	DW	0bdf9H
	DW	0be59H
	DW	0beb9H
	DW	0bf19H
	DW	0bf79H
	DW	0bfd9H
	DW	0c039H
	DW	0c099H
	DW	0c0f9H
	DW	0c159H
	DW	0cdb9H
	DW	0ce19H
	DW	0ce79H
	DW	0ced9H
	DW	0cf39H
	DW	0cf99H
	DW	0cff9H
	DW	0d059H
	DW	0d0b9H
	DW	0d119H
	DW	0d179H
	DW	0d1d9H
	DW	0d239H
	DW	0d299H
	DW	0d2f9H
	DW	0d359H
	DW	0d3b9H
	DW	0d419H
	DW	0d479H
	DW	0d4d9H
	DW	0d539H
	DW	0d599H
	DW	0d5f9H
	DW	0d659H
	DW	0d6b9H
	DW	0d719H
	DW	0d779H
	DW	0d7d9H
	DW	0d839H
	DW	0d899H
	DW	0d8f9H
	DW	0d959H
	DW	0c1b9H
	DW	0c219H
	DW	0c279H
	DW	0c2d9H
	DW	0c339H
	DW	0c399H
	DW	0c3f9H
	DW	0c459H
	DW	0c4b9H
	DW	0c519H
	DW	0c579H
	DW	0c5d9H
	DW	0c639H
	DW	0c699H
	DW	0c6f9H
	DW	0c759H
	DW	0c7b9H
	DW	0c819H
	DW	0c879H
	DW	0c8d9H
	DW	0c939H
	DW	0c999H
	DW	0c9f9H
	DW	0ca59H
	DW	0cab9H
	DW	0cb19H
	DW	0cb79H
	DW	0cbd9H
	DW	0cc39H
	DW	0cc99H
	DW	0ccf9H
	DW	0cd59H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0d9b9H
	DW	0dab9H
	DW	0dbb9H
	DW	0dcb9H
	DW	0de19H
	DW	0df79H
	DW	0e0b9H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e1f9H
	DW	0e2f9H
	DW	0e3f9H
	DW	0e4f9H
	DW	0e5f9H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	0100aH
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0140aH
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	0ec09H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	064H
	DW	04H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	0200aH
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	0e009H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	060H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	060H
	DW	064H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	060H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	060H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	0f009H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	060H
	DW	060H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	060H
	DW	060H
	DW	060H
	DW	060H
	DW	060H
	DW	060H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	044H
	DW	044H
	DW	044H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	021H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	021H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	021H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	00H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	02H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	01H
	DW	00H
	DW	01H
	DW	021H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	021H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	021H
	DW	021H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	064H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
_ucase_props_exceptions DW 0c041H
	DW	069H
	DW	02H
	DW	0130H
	DW	0131H
	DW	04001H
	DW	06aH
	DW	041H
	DW	06bH
	DW	01H
	DW	0212aH
	DW	041H
	DW	073H
	DW	01H
	DW	017fH
	DW	05044H
	DW	049H
	DW	02H
	DW	0130H
	DW	0131H
	DW	044H
	DW	04bH
	DW	01H
	DW	0212aH
	DW	044H
	DW	053H
	DW	01H
	DW	017fH
	DW	06H
	DW	03bcH
	DW	039cH
	DW	041H
	DW	0e5H
	DW	01H
	DW	0212bH
	DW	04001H
	DW	0ecH
	DW	04001H
	DW	0edH
	DW	0c0H
	DW	01H
	DW	02220H
	DW	073H
	DW	073H
	DW	053H
	DW	053H
	DW	053H
	DW	073H
	DW	01e9eH
	DW	044H
	DW	0c5H
	DW	01H
	DW	0212bH
	DW	04001H
	DW	0129H
	DW	04001H
	DW	012fH
	DW	0c043H
	DW	069H
	DW	0130H
	DW	02H
	DW	049H
	DW	0131H
	DW	044H
	DW	049H
	DW	02H
	DW	069H
	DW	0130H
	DW	080H
	DW	02220H
	DW	02bcH
	DW	06eH
	DW	02bcH
	DW	04eH
	DW	02bcH
	DW	04eH
	DW	06H
	DW	073H
	DW	053H
	DW	09H
	DW	01c6H
	DW	01c5H
	DW	0dH
	DW	01c6H
	DW	01c4H
	DW	01c5H
	DW	0cH
	DW	01c4H
	DW	01c5H
	DW	09H
	DW	01c9H
	DW	01c8H
	DW	0dH
	DW	01c9H
	DW	01c7H
	DW	01c8H
	DW	0cH
	DW	01c7H
	DW	01c8H
	DW	09H
	DW	01ccH
	DW	01cbH
	DW	0dH
	DW	01ccH
	DW	01caH
	DW	01cbH
	DW	0cH
	DW	01caH
	DW	01cbH
	DW	080H
	DW	02220H
	DW	06aH
	DW	030cH
	DW	04aH
	DW	030cH
	DW	04aH
	DW	030cH
	DW	09H
	DW	01f3H
	DW	01f2H
	DW	0dH
	DW	01f3H
	DW	01f1H
	DW	01f2H
	DW	0cH
	DW	01f1H
	DW	01f2H
	DW	01H
	DW	02c65H
	DW	01H
	DW	02c66H
	DW	04H
	DW	02c7eH
	DW	04H
	DW	02c7fH
	DW	04H
	DW	02c6fH
	DW	04H
	DW	02c6dH
	DW	04H
	DW	02c70H
	DW	04H
	DW	0a7abH
	DW	04H
	DW	0a7acH
	DW	04H
	DW	0a78dH
	DW	04H
	DW	0a7aaH
	DW	04H
	DW	02c62H
	DW	04H
	DW	0a7adH
	DW	04H
	DW	02c6eH
	DW	04H
	DW	02c64H
	DW	04H
	DW	0a7b1H
	DW	01004H
	DW	0a7b2H
	DW	04H
	DW	0a7b0H
	DW	06000H
	DW	03046H
	DW	03b9H
	DW	0399H
	DW	01H
	DW	01fbeH
	DW	0c0H
	DW	01H
	DW	03330H
	DW	03b9H
	DW	0308H
	DW	0301H
	DW	0399H
	DW	0308H
	DW	0301H
	DW	0399H
	DW	0308H
	DW	0301H
	DW	01fd3H
	DW	041H
	DW	03b2H
	DW	01H
	DW	03d0H
	DW	041H
	DW	03b5H
	DW	01H
	DW	03f5H
	DW	041H
	DW	03b8H
	DW	02H
	DW	03d1H
	DW	03f4H
	DW	041H
	DW	03b9H
	DW	02H
	DW	0345H
	DW	01fbeH
	DW	041H
	DW	03baH
	DW	01H
	DW	03f0H
	DW	041H
	DW	03bcH
	DW	01H
	DW	0b5H
	DW	041H
	DW	03c0H
	DW	01H
	DW	03d6H
	DW	041H
	DW	03c1H
	DW	01H
	DW	03f1H
	DW	04041H
	DW	03c3H
	DW	01H
	DW	03c2H
	DW	041H
	DW	03c6H
	DW	01H
	DW	03d5H
	DW	041H
	DW	03c9H
	DW	01H
	DW	02126H
	DW	0c0H
	DW	01H
	DW	03330H
	DW	03c5H
	DW	0308H
	DW	0301H
	DW	03a5H
	DW	0308H
	DW	0301H
	DW	03a5H
	DW	0308H
	DW	0301H
	DW	01fe3H
	DW	044H
	DW	0392H
	DW	01H
	DW	03d0H
	DW	044H
	DW	0395H
	DW	01H
	DW	03f5H
	DW	044H
	DW	0398H
	DW	02H
	DW	03d1H
	DW	03f4H
	DW	044H
	DW	0399H
	DW	02H
	DW	0345H
	DW	01fbeH
	DW	044H
	DW	039aH
	DW	01H
	DW	03f0H
	DW	044H
	DW	039cH
	DW	01H
	DW	0b5H
	DW	044H
	DW	03a0H
	DW	01H
	DW	03d6H
	DW	044H
	DW	03a1H
	DW	01H
	DW	03f1H
	DW	06H
	DW	03c3H
	DW	03a3H
	DW	044H
	DW	03a3H
	DW	01H
	DW	03c2H
	DW	044H
	DW	03a6H
	DW	01H
	DW	03d5H
	DW	044H
	DW	03a9H
	DW	01H
	DW	02126H
	DW	06H
	DW	03b2H
	DW	0392H
	DW	046H
	DW	03b8H
	DW	0398H
	DW	01H
	DW	03f4H
	DW	06H
	DW	03c6H
	DW	03a6H
	DW	06H
	DW	03c0H
	DW	03a0H
	DW	06H
	DW	03baH
	DW	039aH
	DW	06H
	DW	03c1H
	DW	03a1H
	DW	041H
	DW	03b8H
	DW	02H
	DW	0398H
	DW	03d1H
	DW	06H
	DW	03b5H
	DW	0395H
	DW	080H
	DW	02220H
	DW	0565H
	DW	0582H
	DW	0535H
	DW	0552H
	DW	0535H
	DW	0582H
	DW	01H
	DW	02d00H
	DW	01H
	DW	02d01H
	DW	01H
	DW	02d02H
	DW	01H
	DW	02d03H
	DW	01H
	DW	02d04H
	DW	01H
	DW	02d05H
	DW	01H
	DW	02d06H
	DW	01H
	DW	02d07H
	DW	01H
	DW	02d08H
	DW	01H
	DW	02d09H
	DW	01H
	DW	02d0aH
	DW	01H
	DW	02d0bH
	DW	01H
	DW	02d0cH
	DW	01H
	DW	02d0dH
	DW	01H
	DW	02d0eH
	DW	01H
	DW	02d0fH
	DW	01H
	DW	02d10H
	DW	01H
	DW	02d11H
	DW	01H
	DW	02d12H
	DW	01H
	DW	02d13H
	DW	01H
	DW	02d14H
	DW	01H
	DW	02d15H
	DW	01H
	DW	02d16H
	DW	01H
	DW	02d17H
	DW	01H
	DW	02d18H
	DW	01H
	DW	02d19H
	DW	01H
	DW	02d1aH
	DW	01H
	DW	02d1bH
	DW	01H
	DW	02d1cH
	DW	01H
	DW	02d1dH
	DW	01H
	DW	02d1eH
	DW	01H
	DW	02d1fH
	DW	01H
	DW	02d20H
	DW	01H
	DW	02d21H
	DW	01H
	DW	02d22H
	DW	01H
	DW	02d23H
	DW	01H
	DW	02d24H
	DW	01H
	DW	02d25H
	DW	01H
	DW	02d27H
	DW	01H
	DW	02d2dH
	DW	03H
	DW	0ab70H
	DW	013a0H
	DW	03H
	DW	0ab71H
	DW	013a1H
	DW	03H
	DW	0ab72H
	DW	013a2H
	DW	03H
	DW	0ab73H
	DW	013a3H
	DW	03H
	DW	0ab74H
	DW	013a4H
	DW	03H
	DW	0ab75H
	DW	013a5H
	DW	03H
	DW	0ab76H
	DW	013a6H
	DW	03H
	DW	0ab77H
	DW	013a7H
	DW	03H
	DW	0ab78H
	DW	013a8H
	DW	03H
	DW	0ab79H
	DW	013a9H
	DW	03H
	DW	0ab7aH
	DW	013aaH
	DW	03H
	DW	0ab7bH
	DW	013abH
	DW	03H
	DW	0ab7cH
	DW	013acH
	DW	03H
	DW	0ab7dH
	DW	013adH
	DW	03H
	DW	0ab7eH
	DW	013aeH
	DW	03H
	DW	0ab7fH
	DW	013afH
	DW	03H
	DW	0ab80H
	DW	013b0H
	DW	03H
	DW	0ab81H
	DW	013b1H
	DW	03H
	DW	0ab82H
	DW	013b2H
	DW	03H
	DW	0ab83H
	DW	013b3H
	DW	03H
	DW	0ab84H
	DW	013b4H
	DW	03H
	DW	0ab85H
	DW	013b5H
	DW	03H
	DW	0ab86H
	DW	013b6H
	DW	03H
	DW	0ab87H
	DW	013b7H
	DW	03H
	DW	0ab88H
	DW	013b8H
	DW	03H
	DW	0ab89H
	DW	013b9H
	DW	03H
	DW	0ab8aH
	DW	013baH
	DW	03H
	DW	0ab8bH
	DW	013bbH
	DW	03H
	DW	0ab8cH
	DW	013bcH
	DW	03H
	DW	0ab8dH
	DW	013bdH
	DW	03H
	DW	0ab8eH
	DW	013beH
	DW	03H
	DW	0ab8fH
	DW	013bfH
	DW	03H
	DW	0ab90H
	DW	013c0H
	DW	03H
	DW	0ab91H
	DW	013c1H
	DW	03H
	DW	0ab92H
	DW	013c2H
	DW	03H
	DW	0ab93H
	DW	013c3H
	DW	03H
	DW	0ab94H
	DW	013c4H
	DW	03H
	DW	0ab95H
	DW	013c5H
	DW	03H
	DW	0ab96H
	DW	013c6H
	DW	03H
	DW	0ab97H
	DW	013c7H
	DW	03H
	DW	0ab98H
	DW	013c8H
	DW	03H
	DW	0ab99H
	DW	013c9H
	DW	03H
	DW	0ab9aH
	DW	013caH
	DW	03H
	DW	0ab9bH
	DW	013cbH
	DW	03H
	DW	0ab9cH
	DW	013ccH
	DW	03H
	DW	0ab9dH
	DW	013cdH
	DW	03H
	DW	0ab9eH
	DW	013ceH
	DW	03H
	DW	0ab9fH
	DW	013cfH
	DW	03H
	DW	0aba0H
	DW	013d0H
	DW	03H
	DW	0aba1H
	DW	013d1H
	DW	03H
	DW	0aba2H
	DW	013d2H
	DW	03H
	DW	0aba3H
	DW	013d3H
	DW	03H
	DW	0aba4H
	DW	013d4H
	DW	03H
	DW	0aba5H
	DW	013d5H
	DW	03H
	DW	0aba6H
	DW	013d6H
	DW	03H
	DW	0aba7H
	DW	013d7H
	DW	03H
	DW	0aba8H
	DW	013d8H
	DW	03H
	DW	0aba9H
	DW	013d9H
	DW	03H
	DW	0abaaH
	DW	013daH
	DW	03H
	DW	0ababH
	DW	013dbH
	DW	03H
	DW	0abacH
	DW	013dcH
	DW	03H
	DW	0abadH
	DW	013ddH
	DW	03H
	DW	0abaeH
	DW	013deH
	DW	03H
	DW	0abafH
	DW	013dfH
	DW	03H
	DW	0abb0H
	DW	013e0H
	DW	03H
	DW	0abb1H
	DW	013e1H
	DW	03H
	DW	0abb2H
	DW	013e2H
	DW	03H
	DW	0abb3H
	DW	013e3H
	DW	03H
	DW	0abb4H
	DW	013e4H
	DW	03H
	DW	0abb5H
	DW	013e5H
	DW	03H
	DW	0abb6H
	DW	013e6H
	DW	03H
	DW	0abb7H
	DW	013e7H
	DW	03H
	DW	0abb8H
	DW	013e8H
	DW	03H
	DW	0abb9H
	DW	013e9H
	DW	03H
	DW	0abbaH
	DW	013eaH
	DW	03H
	DW	0abbbH
	DW	013ebH
	DW	03H
	DW	0abbcH
	DW	013ecH
	DW	03H
	DW	0abbdH
	DW	013edH
	DW	03H
	DW	0abbeH
	DW	013eeH
	DW	03H
	DW	0abbfH
	DW	013efH
	DW	03H
	DW	013f8H
	DW	013f0H
	DW	03H
	DW	013f9H
	DW	013f1H
	DW	03H
	DW	013faH
	DW	013f2H
	DW	03H
	DW	013fbH
	DW	013f3H
	DW	03H
	DW	013fcH
	DW	013f4H
	DW	03H
	DW	013fdH
	DW	013f5H
	DW	06H
	DW	013f0H
	DW	013f0H
	DW	06H
	DW	013f1H
	DW	013f1H
	DW	06H
	DW	013f2H
	DW	013f2H
	DW	06H
	DW	013f3H
	DW	013f3H
	DW	06H
	DW	013f4H
	DW	013f4H
	DW	06H
	DW	013f5H
	DW	013f5H
	DW	04H
	DW	0a77dH
	DW	04H
	DW	02c63H
	DW	041H
	DW	01e61H
	DW	01H
	DW	01e9bH
	DW	044H
	DW	01e60H
	DW	01H
	DW	01e9bH
	DW	080H
	DW	02220H
	DW	068H
	DW	0331H
	DW	048H
	DW	0331H
	DW	048H
	DW	0331H
	DW	080H
	DW	02220H
	DW	074H
	DW	0308H
	DW	054H
	DW	0308H
	DW	054H
	DW	0308H
	DW	080H
	DW	02220H
	DW	077H
	DW	030aH
	DW	057H
	DW	030aH
	DW	057H
	DW	030aH
	DW	080H
	DW	02220H
	DW	079H
	DW	030aH
	DW	059H
	DW	030aH
	DW	059H
	DW	030aH
	DW	080H
	DW	02220H
	DW	061H
	DW	02beH
	DW	041H
	DW	02beH
	DW	041H
	DW	02beH
	DW	06H
	DW	01e61H
	DW	01e60H
	DW	081H
	DW	0dfH
	DW	020H
	DW	073H
	DW	073H
	DW	080H
	DW	02220H
	DW	03c5H
	DW	0313H
	DW	03a5H
	DW	0313H
	DW	03a5H
	DW	0313H
	DW	080H
	DW	03330H
	DW	03c5H
	DW	0313H
	DW	0300H
	DW	03a5H
	DW	0313H
	DW	0300H
	DW	03a5H
	DW	0313H
	DW	0300H
	DW	080H
	DW	03330H
	DW	03c5H
	DW	0313H
	DW	0301H
	DW	03a5H
	DW	0313H
	DW	0301H
	DW	03a5H
	DW	0313H
	DW	0301H
	DW	080H
	DW	03330H
	DW	03c5H
	DW	0313H
	DW	0342H
	DW	03a5H
	DW	0313H
	DW	0342H
	DW	03a5H
	DW	0313H
	DW	0342H
	DW	084H
	DW	01f88H
	DW	0220H
	DW	01f00H
	DW	03b9H
	DW	01f08H
	DW	0399H
	DW	084H
	DW	01f89H
	DW	0220H
	DW	01f01H
	DW	03b9H
	DW	01f09H
	DW	0399H
	DW	084H
	DW	01f8aH
	DW	0220H
	DW	01f02H
	DW	03b9H
	DW	01f0aH
	DW	0399H
	DW	084H
	DW	01f8bH
	DW	0220H
	DW	01f03H
	DW	03b9H
	DW	01f0bH
	DW	0399H
	DW	084H
	DW	01f8cH
	DW	0220H
	DW	01f04H
	DW	03b9H
	DW	01f0cH
	DW	0399H
	DW	084H
	DW	01f8dH
	DW	0220H
	DW	01f05H
	DW	03b9H
	DW	01f0dH
	DW	0399H
	DW	084H
	DW	01f8eH
	DW	0220H
	DW	01f06H
	DW	03b9H
	DW	01f0eH
	DW	0399H
	DW	084H
	DW	01f8fH
	DW	0220H
	DW	01f07H
	DW	03b9H
	DW	01f0fH
	DW	0399H
	DW	081H
	DW	01f80H
	DW	0220H
	DW	01f00H
	DW	03b9H
	DW	01f08H
	DW	0399H
	DW	081H
	DW	01f81H
	DW	0220H
	DW	01f01H
	DW	03b9H
	DW	01f09H
	DW	0399H
	DW	081H
	DW	01f82H
	DW	0220H
	DW	01f02H
	DW	03b9H
	DW	01f0aH
	DW	0399H
	DW	081H
	DW	01f83H
	DW	0220H
	DW	01f03H
	DW	03b9H
	DW	01f0bH
	DW	0399H
	DW	081H
	DW	01f84H
	DW	0220H
	DW	01f04H
	DW	03b9H
	DW	01f0cH
	DW	0399H
	DW	081H
	DW	01f85H
	DW	0220H
	DW	01f05H
	DW	03b9H
	DW	01f0dH
	DW	0399H
	DW	081H
	DW	01f86H
	DW	0220H
	DW	01f06H
	DW	03b9H
	DW	01f0eH
	DW	0399H
	DW	081H
	DW	01f87H
	DW	0220H
	DW	01f07H
	DW	03b9H
	DW	01f0fH
	DW	0399H
	DW	084H
	DW	01f98H
	DW	0220H
	DW	01f20H
	DW	03b9H
	DW	01f28H
	DW	0399H
	DW	084H
	DW	01f99H
	DW	0220H
	DW	01f21H
	DW	03b9H
	DW	01f29H
	DW	0399H
	DW	084H
	DW	01f9aH
	DW	0220H
	DW	01f22H
	DW	03b9H
	DW	01f2aH
	DW	0399H
	DW	084H
	DW	01f9bH
	DW	0220H
	DW	01f23H
	DW	03b9H
	DW	01f2bH
	DW	0399H
	DW	084H
	DW	01f9cH
	DW	0220H
	DW	01f24H
	DW	03b9H
	DW	01f2cH
	DW	0399H
	DW	084H
	DW	01f9dH
	DW	0220H
	DW	01f25H
	DW	03b9H
	DW	01f2dH
	DW	0399H
	DW	084H
	DW	01f9eH
	DW	0220H
	DW	01f26H
	DW	03b9H
	DW	01f2eH
	DW	0399H
	DW	084H
	DW	01f9fH
	DW	0220H
	DW	01f27H
	DW	03b9H
	DW	01f2fH
	DW	0399H
	DW	081H
	DW	01f90H
	DW	0220H
	DW	01f20H
	DW	03b9H
	DW	01f28H
	DW	0399H
	DW	081H
	DW	01f91H
	DW	0220H
	DW	01f21H
	DW	03b9H
	DW	01f29H
	DW	0399H
	DW	081H
	DW	01f92H
	DW	0220H
	DW	01f22H
	DW	03b9H
	DW	01f2aH
	DW	0399H
	DW	081H
	DW	01f93H
	DW	0220H
	DW	01f23H
	DW	03b9H
	DW	01f2bH
	DW	0399H
	DW	081H
	DW	01f94H
	DW	0220H
	DW	01f24H
	DW	03b9H
	DW	01f2cH
	DW	0399H
	DW	081H
	DW	01f95H
	DW	0220H
	DW	01f25H
	DW	03b9H
	DW	01f2dH
	DW	0399H
	DW	081H
	DW	01f96H
	DW	0220H
	DW	01f26H
	DW	03b9H
	DW	01f2eH
	DW	0399H
	DW	081H
	DW	01f97H
	DW	0220H
	DW	01f27H
	DW	03b9H
	DW	01f2fH
	DW	0399H
	DW	084H
	DW	01fa8H
	DW	0220H
	DW	01f60H
	DW	03b9H
	DW	01f68H
	DW	0399H
	DW	084H
	DW	01fa9H
	DW	0220H
	DW	01f61H
	DW	03b9H
	DW	01f69H
	DW	0399H
	DW	084H
	DW	01faaH
	DW	0220H
	DW	01f62H
	DW	03b9H
	DW	01f6aH
	DW	0399H
	DW	084H
	DW	01fabH
	DW	0220H
	DW	01f63H
	DW	03b9H
	DW	01f6bH
	DW	0399H
	DW	084H
	DW	01facH
	DW	0220H
	DW	01f64H
	DW	03b9H
	DW	01f6cH
	DW	0399H
	DW	084H
	DW	01fadH
	DW	0220H
	DW	01f65H
	DW	03b9H
	DW	01f6dH
	DW	0399H
	DW	084H
	DW	01faeH
	DW	0220H
	DW	01f66H
	DW	03b9H
	DW	01f6eH
	DW	0399H
	DW	084H
	DW	01fafH
	DW	0220H
	DW	01f67H
	DW	03b9H
	DW	01f6fH
	DW	0399H
	DW	081H
	DW	01fa0H
	DW	0220H
	DW	01f60H
	DW	03b9H
	DW	01f68H
	DW	0399H
	DW	081H
	DW	01fa1H
	DW	0220H
	DW	01f61H
	DW	03b9H
	DW	01f69H
	DW	0399H
	DW	081H
	DW	01fa2H
	DW	0220H
	DW	01f62H
	DW	03b9H
	DW	01f6aH
	DW	0399H
	DW	081H
	DW	01fa3H
	DW	0220H
	DW	01f63H
	DW	03b9H
	DW	01f6bH
	DW	0399H
	DW	081H
	DW	01fa4H
	DW	0220H
	DW	01f64H
	DW	03b9H
	DW	01f6cH
	DW	0399H
	DW	081H
	DW	01fa5H
	DW	0220H
	DW	01f65H
	DW	03b9H
	DW	01f6dH
	DW	0399H
	DW	081H
	DW	01fa6H
	DW	0220H
	DW	01f66H
	DW	03b9H
	DW	01f6eH
	DW	0399H
	DW	081H
	DW	01fa7H
	DW	0220H
	DW	01f67H
	DW	03b9H
	DW	01f6fH
	DW	0399H
	DW	080H
	DW	02220H
	DW	01f70H
	DW	03b9H
	DW	01fbaH
	DW	0399H
	DW	01fbaH
	DW	0345H
	DW	084H
	DW	01fbcH
	DW	0220H
	DW	03b1H
	DW	03b9H
	DW	0391H
	DW	0399H
	DW	080H
	DW	02220H
	DW	03acH
	DW	03b9H
	DW	0386H
	DW	0399H
	DW	0386H
	DW	0345H
	DW	080H
	DW	02220H
	DW	03b1H
	DW	0342H
	DW	0391H
	DW	0342H
	DW	0391H
	DW	0342H
	DW	080H
	DW	03330H
	DW	03b1H
	DW	0342H
	DW	03b9H
	DW	0391H
	DW	0342H
	DW	0399H
	DW	0391H
	DW	0342H
	DW	0345H
	DW	081H
	DW	01fb3H
	DW	0220H
	DW	03b1H
	DW	03b9H
	DW	0391H
	DW	0399H
	DW	046H
	DW	03b9H
	DW	0399H
	DW	01H
	DW	0345H
	DW	080H
	DW	02220H
	DW	01f74H
	DW	03b9H
	DW	01fcaH
	DW	0399H
	DW	01fcaH
	DW	0345H
	DW	084H
	DW	01fccH
	DW	0220H
	DW	03b7H
	DW	03b9H
	DW	0397H
	DW	0399H
	DW	080H
	DW	02220H
	DW	03aeH
	DW	03b9H
	DW	0389H
	DW	0399H
	DW	0389H
	DW	0345H
	DW	080H
	DW	02220H
	DW	03b7H
	DW	0342H
	DW	0397H
	DW	0342H
	DW	0397H
	DW	0342H
	DW	080H
	DW	03330H
	DW	03b7H
	DW	0342H
	DW	03b9H
	DW	0397H
	DW	0342H
	DW	0399H
	DW	0397H
	DW	0342H
	DW	0345H
	DW	081H
	DW	01fc3H
	DW	0220H
	DW	03b7H
	DW	03b9H
	DW	0397H
	DW	0399H
	DW	080H
	DW	03330H
	DW	03b9H
	DW	0308H
	DW	0300H
	DW	0399H
	DW	0308H
	DW	0300H
	DW	0399H
	DW	0308H
	DW	0300H
	DW	0c0H
	DW	01H
	DW	03330H
	DW	03b9H
	DW	0308H
	DW	0301H
	DW	0399H
	DW	0308H
	DW	0301H
	DW	0399H
	DW	0308H
	DW	0301H
	DW	0390H
	DW	080H
	DW	02220H
	DW	03b9H
	DW	0342H
	DW	0399H
	DW	0342H
	DW	0399H
	DW	0342H
	DW	080H
	DW	03330H
	DW	03b9H
	DW	0308H
	DW	0342H
	DW	0399H
	DW	0308H
	DW	0342H
	DW	0399H
	DW	0308H
	DW	0342H
	DW	080H
	DW	03330H
	DW	03c5H
	DW	0308H
	DW	0300H
	DW	03a5H
	DW	0308H
	DW	0300H
	DW	03a5H
	DW	0308H
	DW	0300H
	DW	0c0H
	DW	01H
	DW	03330H
	DW	03c5H
	DW	0308H
	DW	0301H
	DW	03a5H
	DW	0308H
	DW	0301H
	DW	03a5H
	DW	0308H
	DW	0301H
	DW	03b0H
	DW	080H
	DW	02220H
	DW	03c1H
	DW	0313H
	DW	03a1H
	DW	0313H
	DW	03a1H
	DW	0313H
	DW	080H
	DW	02220H
	DW	03c5H
	DW	0342H
	DW	03a5H
	DW	0342H
	DW	03a5H
	DW	0342H
	DW	080H
	DW	03330H
	DW	03c5H
	DW	0308H
	DW	0342H
	DW	03a5H
	DW	0308H
	DW	0342H
	DW	03a5H
	DW	0308H
	DW	0342H
	DW	080H
	DW	02220H
	DW	01f7cH
	DW	03b9H
	DW	01ffaH
	DW	0399H
	DW	01ffaH
	DW	0345H
	DW	084H
	DW	01ffcH
	DW	0220H
	DW	03c9H
	DW	03b9H
	DW	03a9H
	DW	0399H
	DW	080H
	DW	02220H
	DW	03ceH
	DW	03b9H
	DW	038fH
	DW	0399H
	DW	038fH
	DW	0345H
	DW	080H
	DW	02220H
	DW	03c9H
	DW	0342H
	DW	03a9H
	DW	0342H
	DW	03a9H
	DW	0342H
	DW	080H
	DW	03330H
	DW	03c9H
	DW	0342H
	DW	03b9H
	DW	03a9H
	DW	0342H
	DW	0399H
	DW	03a9H
	DW	0342H
	DW	0345H
	DW	081H
	DW	01ff3H
	DW	0220H
	DW	03c9H
	DW	03b9H
	DW	03a9H
	DW	0399H
	DW	041H
	DW	03c9H
	DW	01H
	DW	03a9H
	DW	041H
	DW	06bH
	DW	01H
	DW	04bH
	DW	041H
	DW	0e5H
	DW	01H
	DW	0c5H
	DW	01H
	DW	026bH
	DW	01H
	DW	01d7dH
	DW	01H
	DW	027dH
	DW	04H
	DW	023aH
	DW	04H
	DW	023eH
	DW	01H
	DW	0251H
	DW	01H
	DW	0271H
	DW	01H
	DW	0250H
	DW	01H
	DW	0252H
	DW	01H
	DW	023fH
	DW	01H
	DW	0240H
	DW	04H
	DW	010a0H
	DW	04H
	DW	010a1H
	DW	04H
	DW	010a2H
	DW	04H
	DW	010a3H
	DW	04H
	DW	010a4H
	DW	04H
	DW	010a5H
	DW	04H
	DW	010a6H
	DW	04H
	DW	010a7H
	DW	04H
	DW	010a8H
	DW	04H
	DW	010a9H
	DW	04H
	DW	010aaH
	DW	04H
	DW	010abH
	DW	04H
	DW	010acH
	DW	04H
	DW	010adH
	DW	04H
	DW	010aeH
	DW	04H
	DW	010afH
	DW	04H
	DW	010b0H
	DW	04H
	DW	010b1H
	DW	04H
	DW	010b2H
	DW	04H
	DW	010b3H
	DW	04H
	DW	010b4H
	DW	04H
	DW	010b5H
	DW	04H
	DW	010b6H
	DW	04H
	DW	010b7H
	DW	04H
	DW	010b8H
	DW	04H
	DW	010b9H
	DW	04H
	DW	010baH
	DW	04H
	DW	010bbH
	DW	04H
	DW	010bcH
	DW	04H
	DW	010bdH
	DW	04H
	DW	010beH
	DW	04H
	DW	010bfH
	DW	04H
	DW	010c0H
	DW	04H
	DW	010c1H
	DW	04H
	DW	010c2H
	DW	04H
	DW	010c3H
	DW	04H
	DW	010c4H
	DW	04H
	DW	010c5H
	DW	04H
	DW	010c7H
	DW	04H
	DW	010cdH
	DW	01H
	DW	01d79H
	DW	01H
	DW	0265H
	DW	01H
	DW	0266H
	DW	01H
	DW	025cH
	DW	01H
	DW	0261H
	DW	01H
	DW	026cH
	DW	01H
	DW	029eH
	DW	01H
	DW	0287H
	DW	01H
	DW	029dH
	DW	01H
	DW	0ab53H
	DW	04H
	DW	0a7b3H
	DW	06H
	DW	013a0H
	DW	013a0H
	DW	06H
	DW	013a1H
	DW	013a1H
	DW	06H
	DW	013a2H
	DW	013a2H
	DW	06H
	DW	013a3H
	DW	013a3H
	DW	06H
	DW	013a4H
	DW	013a4H
	DW	06H
	DW	013a5H
	DW	013a5H
	DW	06H
	DW	013a6H
	DW	013a6H
	DW	06H
	DW	013a7H
	DW	013a7H
	DW	06H
	DW	013a8H
	DW	013a8H
	DW	06H
	DW	013a9H
	DW	013a9H
	DW	06H
	DW	013aaH
	DW	013aaH
	DW	06H
	DW	013abH
	DW	013abH
	DW	06H
	DW	013acH
	DW	013acH
	DW	06H
	DW	013adH
	DW	013adH
	DW	06H
	DW	013aeH
	DW	013aeH
	DW	06H
	DW	013afH
	DW	013afH
	DW	06H
	DW	013b0H
	DW	013b0H
	DW	06H
	DW	013b1H
	DW	013b1H
	DW	06H
	DW	013b2H
	DW	013b2H
	DW	06H
	DW	013b3H
	DW	013b3H
	DW	06H
	DW	013b4H
	DW	013b4H
	DW	06H
	DW	013b5H
	DW	013b5H
	DW	06H
	DW	013b6H
	DW	013b6H
	DW	06H
	DW	013b7H
	DW	013b7H
	DW	06H
	DW	013b8H
	DW	013b8H
	DW	06H
	DW	013b9H
	DW	013b9H
	DW	06H
	DW	013baH
	DW	013baH
	DW	06H
	DW	013bbH
	DW	013bbH
	DW	06H
	DW	013bcH
	DW	013bcH
	DW	06H
	DW	013bdH
	DW	013bdH
	DW	06H
	DW	013beH
	DW	013beH
	DW	06H
	DW	013bfH
	DW	013bfH
	DW	06H
	DW	013c0H
	DW	013c0H
	DW	06H
	DW	013c1H
	DW	013c1H
	DW	06H
	DW	013c2H
	DW	013c2H
	DW	06H
	DW	013c3H
	DW	013c3H
	DW	06H
	DW	013c4H
	DW	013c4H
	DW	06H
	DW	013c5H
	DW	013c5H
	DW	06H
	DW	013c6H
	DW	013c6H
	DW	06H
	DW	013c7H
	DW	013c7H
	DW	06H
	DW	013c8H
	DW	013c8H
	DW	06H
	DW	013c9H
	DW	013c9H
	DW	06H
	DW	013caH
	DW	013caH
	DW	06H
	DW	013cbH
	DW	013cbH
	DW	06H
	DW	013ccH
	DW	013ccH
	DW	06H
	DW	013cdH
	DW	013cdH
	DW	06H
	DW	013ceH
	DW	013ceH
	DW	06H
	DW	013cfH
	DW	013cfH
	DW	06H
	DW	013d0H
	DW	013d0H
	DW	06H
	DW	013d1H
	DW	013d1H
	DW	06H
	DW	013d2H
	DW	013d2H
	DW	06H
	DW	013d3H
	DW	013d3H
	DW	06H
	DW	013d4H
	DW	013d4H
	DW	06H
	DW	013d5H
	DW	013d5H
	DW	06H
	DW	013d6H
	DW	013d6H
	DW	06H
	DW	013d7H
	DW	013d7H
	DW	06H
	DW	013d8H
	DW	013d8H
	DW	06H
	DW	013d9H
	DW	013d9H
	DW	06H
	DW	013daH
	DW	013daH
	DW	06H
	DW	013dbH
	DW	013dbH
	DW	06H
	DW	013dcH
	DW	013dcH
	DW	06H
	DW	013ddH
	DW	013ddH
	DW	06H
	DW	013deH
	DW	013deH
	DW	06H
	DW	013dfH
	DW	013dfH
	DW	06H
	DW	013e0H
	DW	013e0H
	DW	06H
	DW	013e1H
	DW	013e1H
	DW	06H
	DW	013e2H
	DW	013e2H
	DW	06H
	DW	013e3H
	DW	013e3H
	DW	06H
	DW	013e4H
	DW	013e4H
	DW	06H
	DW	013e5H
	DW	013e5H
	DW	06H
	DW	013e6H
	DW	013e6H
	DW	06H
	DW	013e7H
	DW	013e7H
	DW	06H
	DW	013e8H
	DW	013e8H
	DW	06H
	DW	013e9H
	DW	013e9H
	DW	06H
	DW	013eaH
	DW	013eaH
	DW	06H
	DW	013ebH
	DW	013ebH
	DW	06H
	DW	013ecH
	DW	013ecH
	DW	06H
	DW	013edH
	DW	013edH
	DW	06H
	DW	013eeH
	DW	013eeH
	DW	06H
	DW	013efH
	DW	013efH
	DW	080H
	DW	02220H
	DW	066H
	DW	066H
	DW	046H
	DW	046H
	DW	046H
	DW	066H
	DW	080H
	DW	02220H
	DW	066H
	DW	069H
	DW	046H
	DW	049H
	DW	046H
	DW	069H
	DW	080H
	DW	02220H
	DW	066H
	DW	06cH
	DW	046H
	DW	04cH
	DW	046H
	DW	06cH
	DW	080H
	DW	03330H
	DW	066H
	DW	066H
	DW	069H
	DW	046H
	DW	046H
	DW	049H
	DW	046H
	DW	066H
	DW	069H
	DW	080H
	DW	03330H
	DW	066H
	DW	066H
	DW	06cH
	DW	046H
	DW	046H
	DW	04cH
	DW	046H
	DW	066H
	DW	06cH
	DW	0c0H
	DW	01H
	DW	02220H
	DW	073H
	DW	074H
	DW	053H
	DW	054H
	DW	053H
	DW	074H
	DW	0fb06H
	DW	0c0H
	DW	01H
	DW	02220H
	DW	073H
	DW	074H
	DW	053H
	DW	054H
	DW	053H
	DW	074H
	DW	0fb05H
	DW	080H
	DW	02220H
	DW	0574H
	DW	0576H
	DW	0544H
	DW	0546H
	DW	0544H
	DW	0576H
	DW	080H
	DW	02220H
	DW	0574H
	DW	0565H
	DW	0544H
	DW	0535H
	DW	0544H
	DW	0565H
	DW	080H
	DW	02220H
	DW	0574H
	DW	056bH
	DW	0544H
	DW	053bH
	DW	0544H
	DW	056bH
	DW	080H
	DW	02220H
	DW	057eH
	DW	0576H
	DW	054eH
	DW	0546H
	DW	054eH
	DW	0576H
	DW	080H
	DW	02220H
	DW	0574H
	DW	056dH
	DW	0544H
	DW	053dH
	DW	0544H
	DW	056dH
	ORG $+2
_ucase_props_unfold DW 049H
	DW	05H
	DW	03H
	DW	00H
	DW	00H
	DW	061H
	DW	02beH
	DW	00H
	DW	01e9aH
	DW	00H
	DW	066H
	DW	066H
	DW	00H
	DW	0fb00H
	DW	00H
	DW	066H
	DW	066H
	DW	069H
	DW	0fb03H
	DW	00H
	DW	066H
	DW	066H
	DW	06cH
	DW	0fb04H
	DW	00H
	DW	066H
	DW	069H
	DW	00H
	DW	0fb01H
	DW	00H
	DW	066H
	DW	06cH
	DW	00H
	DW	0fb02H
	DW	00H
	DW	068H
	DW	0331H
	DW	00H
	DW	01e96H
	DW	00H
	DW	069H
	DW	0307H
	DW	00H
	DW	0130H
	DW	00H
	DW	06aH
	DW	030cH
	DW	00H
	DW	01f0H
	DW	00H
	DW	073H
	DW	073H
	DW	00H
	DW	0dfH
	DW	01e9eH
	DW	073H
	DW	074H
	DW	00H
	DW	0fb05H
	DW	0fb06H
	DW	074H
	DW	0308H
	DW	00H
	DW	01e97H
	DW	00H
	DW	077H
	DW	030aH
	DW	00H
	DW	01e98H
	DW	00H
	DW	079H
	DW	030aH
	DW	00H
	DW	01e99H
	DW	00H
	DW	02bcH
	DW	06eH
	DW	00H
	DW	0149H
	DW	00H
	DW	03acH
	DW	03b9H
	DW	00H
	DW	01fb4H
	DW	00H
	DW	03aeH
	DW	03b9H
	DW	00H
	DW	01fc4H
	DW	00H
	DW	03b1H
	DW	0342H
	DW	00H
	DW	01fb6H
	DW	00H
	DW	03b1H
	DW	0342H
	DW	03b9H
	DW	01fb7H
	DW	00H
	DW	03b1H
	DW	03b9H
	DW	00H
	DW	01fb3H
	DW	01fbcH
	DW	03b7H
	DW	0342H
	DW	00H
	DW	01fc6H
	DW	00H
	DW	03b7H
	DW	0342H
	DW	03b9H
	DW	01fc7H
	DW	00H
	DW	03b7H
	DW	03b9H
	DW	00H
	DW	01fc3H
	DW	01fccH
	DW	03b9H
	DW	0308H
	DW	0300H
	DW	01fd2H
	DW	00H
	DW	03b9H
	DW	0308H
	DW	0301H
	DW	0390H
	DW	01fd3H
	DW	03b9H
	DW	0308H
	DW	0342H
	DW	01fd7H
	DW	00H
	DW	03b9H
	DW	0342H
	DW	00H
	DW	01fd6H
	DW	00H
	DW	03c1H
	DW	0313H
	DW	00H
	DW	01fe4H
	DW	00H
	DW	03c5H
	DW	0308H
	DW	0300H
	DW	01fe2H
	DW	00H
	DW	03c5H
	DW	0308H
	DW	0301H
	DW	03b0H
	DW	01fe3H
	DW	03c5H
	DW	0308H
	DW	0342H
	DW	01fe7H
	DW	00H
	DW	03c5H
	DW	0313H
	DW	00H
	DW	01f50H
	DW	00H
	DW	03c5H
	DW	0313H
	DW	0300H
	DW	01f52H
	DW	00H
	DW	03c5H
	DW	0313H
	DW	0301H
	DW	01f54H
	DW	00H
	DW	03c5H
	DW	0313H
	DW	0342H
	DW	01f56H
	DW	00H
	DW	03c5H
	DW	0342H
	DW	00H
	DW	01fe6H
	DW	00H
	DW	03c9H
	DW	0342H
	DW	00H
	DW	01ff6H
	DW	00H
	DW	03c9H
	DW	0342H
	DW	03b9H
	DW	01ff7H
	DW	00H
	DW	03c9H
	DW	03b9H
	DW	00H
	DW	01ff3H
	DW	01ffcH
	DW	03ceH
	DW	03b9H
	DW	00H
	DW	01ff4H
	DW	00H
	DW	0565H
	DW	0582H
	DW	00H
	DW	0587H
	DW	00H
	DW	0574H
	DW	0565H
	DW	00H
	DW	0fb14H
	DW	00H
	DW	0574H
	DW	056bH
	DW	00H
	DW	0fb15H
	DW	00H
	DW	0574H
	DW	056dH
	DW	00H
	DW	0fb17H
	DW	00H
	DW	0574H
	DW	0576H
	DW	00H
	DW	0fb13H
	DW	00H
	DW	057eH
	DW	0576H
	DW	00H
	DW	0fb16H
	DW	00H
	DW	01f00H
	DW	03b9H
	DW	00H
	DW	01f80H
	DW	01f88H
	DW	01f01H
	DW	03b9H
	DW	00H
	DW	01f81H
	DW	01f89H
	DW	01f02H
	DW	03b9H
	DW	00H
	DW	01f82H
	DW	01f8aH
	DW	01f03H
	DW	03b9H
	DW	00H
	DW	01f83H
	DW	01f8bH
	DW	01f04H
	DW	03b9H
	DW	00H
	DW	01f84H
	DW	01f8cH
	DW	01f05H
	DW	03b9H
	DW	00H
	DW	01f85H
	DW	01f8dH
	DW	01f06H
	DW	03b9H
	DW	00H
	DW	01f86H
	DW	01f8eH
	DW	01f07H
	DW	03b9H
	DW	00H
	DW	01f87H
	DW	01f8fH
	DW	01f20H
	DW	03b9H
	DW	00H
	DW	01f90H
	DW	01f98H
	DW	01f21H
	DW	03b9H
	DW	00H
	DW	01f91H
	DW	01f99H
	DW	01f22H
	DW	03b9H
	DW	00H
	DW	01f92H
	DW	01f9aH
	DW	01f23H
	DW	03b9H
	DW	00H
	DW	01f93H
	DW	01f9bH
	DW	01f24H
	DW	03b9H
	DW	00H
	DW	01f94H
	DW	01f9cH
	DW	01f25H
	DW	03b9H
	DW	00H
	DW	01f95H
	DW	01f9dH
	DW	01f26H
	DW	03b9H
	DW	00H
	DW	01f96H
	DW	01f9eH
	DW	01f27H
	DW	03b9H
	DW	00H
	DW	01f97H
	DW	01f9fH
	DW	01f60H
	DW	03b9H
	DW	00H
	DW	01fa0H
	DW	01fa8H
	DW	01f61H
	DW	03b9H
	DW	00H
	DW	01fa1H
	DW	01fa9H
	DW	01f62H
	DW	03b9H
	DW	00H
	DW	01fa2H
	DW	01faaH
	DW	01f63H
	DW	03b9H
	DW	00H
	DW	01fa3H
	DW	01fabH
	DW	01f64H
	DW	03b9H
	DW	00H
	DW	01fa4H
	DW	01facH
	DW	01f65H
	DW	03b9H
	DW	00H
	DW	01fa5H
	DW	01fadH
	DW	01f66H
	DW	03b9H
	DW	00H
	DW	01fa6H
	DW	01faeH
	DW	01f67H
	DW	03b9H
	DW	00H
	DW	01fa7H
	DW	01fafH
	DW	01f70H
	DW	03b9H
	DW	00H
	DW	01fb2H
	DW	00H
	DW	01f74H
	DW	03b9H
	DW	00H
	DW	01fc2H
	DW	00H
	DW	01f7cH
	DW	03b9H
	DW	00H
	DW	01ff2H
	DW	00H
_iDot	DW	069H
	DW	0307H
_ucase_props_singleton DD 00H
	DD	FLAT:_ucase_props_indexes
	DD	FLAT:_ucase_props_exceptions
	DD	FLAT:_ucase_props_unfold
	DD	FLAT:_ucase_props_trieIndex
	DD	FLAT:_ucase_props_trieIndex+6320
	DD	00H
	DD	0c58H
	DD	01eccH
	DW	0188H
	DW	0cd4H
	DD	00H
	DD	00H
	DD	0e0800H
	DD	02b20H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DW	00H
	DD	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
_jDot	DW	06aH
	DW	0307H
_flagsOffset DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	06H
	DB	07H
	DB	07H
	DB	08H
_iOgonekDot DW	012fH
	DW	0307H
	ORG $+2
	ORG $+2
_iDotGrave DW	069H
	DW	0307H
	DW	0300H
	ORG $+2
_iDotAcute DW	069H
	DW	0307H
	DW	0301H
	ORG $+2
_iDotTilde DW	069H
	DW	0307H
	DW	0303H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33245 = -32					; size = 4
_len$33244 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33244[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33245[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33244[ebp]
	cmp	ecx, DWORD PTR _textLength$33245[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33244[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T77109 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T77109[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T77109[ebp]
	or	eax, 1
	mov	DWORD PTR $T77109[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z		; icu_56::Mutex::Mutex
PUBLIC	??_FMutex@icu_56@@QAEXXZ			; icu_56::Mutex::`default constructor closure'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_FMutex@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_FMutex@icu_56@@QAEXXZ PROC				; icu_56::Mutex::`default constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z	; icu_56::Mutex::Mutex
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_FMutex@icu_56@@QAEXXZ ENDP				; icu_56::Mutex::`default constructor closure'
_TEXT	ENDS
EXTRN	_umtx_lock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mutex$ = 8						; size = 4
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z PROC			; icu_56::Mutex::Mutex, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\mutex.h
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mutex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_umtx_lock_56
	add	esp, 4
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z ENDP			; icu_56::Mutex::Mutex
_TEXT	ENDS
PUBLIC	??1Mutex@icu_56@@QAE@XZ				; icu_56::Mutex::~Mutex
EXTRN	_umtx_unlock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Mutex@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Mutex@icu_56@@QAE@XZ PROC				; icu_56::Mutex::~Mutex, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_umtx_unlock_56
	add	esp, 4
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Mutex@icu_56@@QAE@XZ ENDP				; icu_56::Mutex::~Mutex
_TEXT	ENDS
PUBLIC	_ucase_getSingleton_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_getSingleton_56
_TEXT	SEGMENT
_ucase_getSingleton_56 PROC				; COMDAT
; File d:\mozilla\intl\icu\source\common\ucase.cpp
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 51
	mov	eax, OFFSET _ucase_props_singleton
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_getSingleton_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_addPropertyStarts_56
EXTRN	_utrie2_enum_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_addPropertyStarts_56
_TEXT	SEGMENT
_csp$ = 8						; size = 4
_sa$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
_ucase_addPropertyStarts_56 PROC			; COMDAT
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucase_addP
; Line 67
	jmp	SHORT $LN2@ucase_addP
$LN1@ucase_addP:
; Line 71
	mov	eax, DWORD PTR _sa$[ebp]
	push	eax
	push	OFFSET ?_enumPropertyStartsRange@@YACPBXHHI@Z ; _enumPropertyStartsRange
	push	0
	mov	ecx, DWORD PTR _csp$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	_utrie2_enum_56
	add	esp, 16					; 00000010H
$LN2@ucase_addP:
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_addPropertyStarts_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_enumPropertyStartsRange@@YACPBXHHI@Z
_TEXT	SEGMENT
_sa$ = -8						; size = 4
_context$ = 8						; size = 4
_start$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?_enumPropertyStartsRange@@YACPBXHHI@Z PROC		; _enumPropertyStartsRange, COMDAT
; File d:\mozilla\intl\icu\source\common\ucase.cpp
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _sa$[ebp], eax
; Line 60
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 61
	mov	al, 1
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_enumPropertyStartsRange@@YACPBXHHI@Z ENDP		; _enumPropertyStartsRange
_TEXT	ENDS
PUBLIC	_ucase_tolower_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_tolower_56
_TEXT	SEGMENT
tv148 = -244						; size = 4
tv149 = -240						; size = 4
tv150 = -236						; size = 4
tv151 = -232						; size = 4
_excWord$69469 = -32					; size = 2
_pe$69468 = -20						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_tolower_56 PROC					; COMDAT
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 135
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN15@ucase_tolo
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN16@ucase_tolo
$LN15@ucase_tolo:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN13@ucase_tolo
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN14@ucase_tolo
$LN13@ucase_tolo:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN11@ucase_tolo
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN12@ucase_tolo
$LN11@ucase_tolo:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN9@ucase_tolo
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN10@ucase_tolo
$LN9@ucase_tolo:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN10@ucase_tolo:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN12@ucase_tolo:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN14@ucase_tolo:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN16@ucase_tolo:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 136
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN6@ucase_tolo
; Line 137
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 2
	jl	SHORT $LN5@ucase_tolo
; Line 138
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$LN5@ucase_tolo:
; Line 140
	jmp	$LN4@ucase_tolo
$LN6@ucase_tolo:
; Line 141
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69468[ebp], eax
; Line 142
	mov	eax, DWORD PTR _pe$69468[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69469[ebp], cx
	mov	edx, DWORD PTR _pe$69468[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69468[ebp], edx
; Line 143
	movzx	eax, WORD PTR _excWord$69469[ebp]
	and	eax, 1
	je	SHORT $LN4@ucase_tolo
; Line 144
	movzx	eax, WORD PTR _excWord$69469[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@ucase_tolo
	movzx	eax, WORD PTR _excWord$69469[ebp]
	and	eax, 0
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$69468[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69468[ebp], eax
	mov	eax, DWORD PTR _pe$69468[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	jmp	SHORT $LN4@ucase_tolo
$LN2@ucase_tolo:
	movzx	eax, WORD PTR _excWord$69469[ebp]
	and	eax, 0
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$69468[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69468[ebp], eax
	mov	eax, DWORD PTR _pe$69468[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _pe$69468[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69468[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69468[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _c$[ebp], eax
$LN4@ucase_tolo:
; Line 147
	mov	eax, DWORD PTR _c$[ebp]
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_tolower_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_toupper_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_toupper_56
_TEXT	SEGMENT
tv148 = -244						; size = 4
tv149 = -240						; size = 4
tv150 = -236						; size = 4
tv151 = -232						; size = 4
_excWord$69489 = -32					; size = 2
_pe$69488 = -20						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_toupper_56 PROC					; COMDAT
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 152
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN15@ucase_toup
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN16@ucase_toup
$LN15@ucase_toup:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN13@ucase_toup
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN14@ucase_toup
$LN13@ucase_toup:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN11@ucase_toup
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN12@ucase_toup
$LN11@ucase_toup:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN9@ucase_toup
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN10@ucase_toup
$LN9@ucase_toup:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN10@ucase_toup:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN12@ucase_toup:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN14@ucase_toup:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN16@ucase_toup:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 153
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN6@ucase_toup
; Line 154
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN5@ucase_toup
; Line 155
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$LN5@ucase_toup:
; Line 157
	jmp	$LN4@ucase_toup
$LN6@ucase_toup:
; Line 158
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69488[ebp], eax
; Line 159
	mov	eax, DWORD PTR _pe$69488[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69489[ebp], cx
	mov	edx, DWORD PTR _pe$69488[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69488[ebp], edx
; Line 160
	movzx	eax, WORD PTR _excWord$69489[ebp]
	and	eax, 4
	je	SHORT $LN4@ucase_toup
; Line 161
	movzx	eax, WORD PTR _excWord$69489[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@ucase_toup
	movzx	eax, WORD PTR _excWord$69489[ebp]
	and	eax, 3
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$69488[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69488[ebp], eax
	mov	eax, DWORD PTR _pe$69488[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	jmp	SHORT $LN4@ucase_toup
$LN2@ucase_toup:
	movzx	eax, WORD PTR _excWord$69489[ebp]
	and	eax, 3
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$69488[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69488[ebp], eax
	mov	eax, DWORD PTR _pe$69488[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _pe$69488[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69488[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69488[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _c$[ebp], eax
$LN4@ucase_toup:
; Line 164
	mov	eax, DWORD PTR _c$[ebp]
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_toupper_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_totitle_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_totitle_56
_TEXT	SEGMENT
tv148 = -256						; size = 4
tv149 = -252						; size = 4
tv150 = -248						; size = 4
tv151 = -244						; size = 4
_idx$69510 = -44					; size = 4
_excWord$69509 = -32					; size = 2
_pe$69508 = -20						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_totitle_56 PROC					; COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 169
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN18@ucase_toti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN19@ucase_toti
$LN18@ucase_toti:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN16@ucase_toti
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN17@ucase_toti
$LN16@ucase_toti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN14@ucase_toti
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN15@ucase_toti
$LN14@ucase_toti:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN12@ucase_toti
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN13@ucase_toti
$LN12@ucase_toti:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN13@ucase_toti:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN15@ucase_toti:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN17@ucase_toti:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN19@ucase_toti:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 170
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN9@ucase_toti
; Line 171
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN8@ucase_toti
; Line 172
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$LN8@ucase_toti:
; Line 174
	jmp	$LN7@ucase_toti
$LN9@ucase_toti:
; Line 175
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69508[ebp], eax
; Line 176
	mov	eax, DWORD PTR _pe$69508[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69509[ebp], cx
	mov	edx, DWORD PTR _pe$69508[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69508[ebp], edx
; Line 178
	movzx	eax, WORD PTR _excWord$69509[ebp]
	and	eax, 8
	je	SHORT $LN6@ucase_toti
; Line 179
	mov	DWORD PTR _idx$69510[ebp], 3
	jmp	SHORT $LN5@ucase_toti
$LN6@ucase_toti:
; Line 180
	movzx	eax, WORD PTR _excWord$69509[ebp]
	and	eax, 4
	je	SHORT $LN4@ucase_toti
; Line 181
	mov	DWORD PTR _idx$69510[ebp], 2
; Line 182
	jmp	SHORT $LN5@ucase_toti
$LN4@ucase_toti:
; Line 183
	mov	eax, DWORD PTR _c$[ebp]
	jmp	$LN10@ucase_toti
$LN5@ucase_toti:
; Line 185
	movzx	eax, WORD PTR _excWord$69509[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@ucase_toti
	movzx	eax, WORD PTR _excWord$69509[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69510[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	mov	ecx, DWORD PTR _pe$69508[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69508[ebp], edx
	mov	eax, DWORD PTR _pe$69508[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	jmp	SHORT $LN7@ucase_toti
$LN2@ucase_toti:
	movzx	eax, WORD PTR _excWord$69509[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69510[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	shl	eax, 1
	mov	ecx, DWORD PTR _pe$69508[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69508[ebp], edx
	mov	eax, DWORD PTR _pe$69508[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _pe$69508[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69508[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69508[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _c$[ebp], eax
$LN7@ucase_toti:
; Line 187
	mov	eax, DWORD PTR _c$[ebp]
$LN10@ucase_toti:
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_totitle_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_addCaseClosure_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_addCaseClosure_56
_TEXT	SEGMENT
tv161 = -328						; size = 4
tv162 = -324						; size = 4
tv163 = -320						; size = 4
tv164 = -316						; size = 4
tv64 = -316						; size = 4
_length$69557 = -116					; size = 4
_fullLength$69556 = -104				; size = 4
_closureLength$69555 = -92				; size = 4
_idx$69554 = -80					; size = 4
_excWord$69553 = -68					; size = 2
_closure$69552 = -56					; size = 4
_pe$69551 = -44						; size = 4
_pe0$69550 = -32					; size = 4
_delta$69546 = -20					; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_sa$ = 16						; size = 4
_ucase_addCaseClosure_56 PROC				; COMDAT
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 210
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 73					; 00000049H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 232		; 000000e8H
	ja	$LN27@ucase_addC
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN39@ucase_addC[edx]
	jmp	DWORD PTR $LN40@ucase_addC[eax*4]
$LN26@ucase_addC:
; Line 213
	mov	esi, esp
	push	105					; 00000069H
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 214
	jmp	$LN29@ucase_addC
$LN25@ucase_addC:
; Line 216
	mov	esi, esp
	push	73					; 00000049H
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 217
	jmp	$LN29@ucase_addC
$LN24@ucase_addC:
; Line 220
	mov	esi, esp
	push	2
	push	OFFSET _iDot
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 221
	jmp	$LN29@ucase_addC
$LN23@ucase_addC:
; Line 224
	jmp	$LN29@ucase_addC
$LN27@ucase_addC:
; Line 230
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN37@ucase_addC
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv164[ebp], edx
	jmp	$LN38@ucase_addC
$LN37@ucase_addC:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN35@ucase_addC
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv163[ebp], ecx
	jmp	$LN36@ucase_addC
$LN35@ucase_addC:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN33@ucase_addC
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN34@ucase_addC
$LN33@ucase_addC:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN31@ucase_addC
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv161[ebp], ecx
	jmp	SHORT $LN32@ucase_addC
$LN31@ucase_addC:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv161[ebp], eax
$LN32@ucase_addC:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv162[ebp], ecx
$LN34@ucase_addC:
	mov	edx, DWORD PTR tv162[ebp]
	mov	DWORD PTR tv163[ebp], edx
$LN36@ucase_addC:
	mov	eax, DWORD PTR tv163[ebp]
	mov	DWORD PTR tv164[ebp], eax
$LN38@ucase_addC:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv164[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 231
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN21@ucase_addC
; Line 232
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	je	SHORT $LN20@ucase_addC
; Line 234
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	mov	DWORD PTR _delta$69546[ebp], eax
; Line 235
	cmp	DWORD PTR _delta$69546[ebp], 0
	je	SHORT $LN20@ucase_addC
; Line 236
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _delta$69546[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@ucase_addC:
; Line 239
	jmp	$LN29@ucase_addC
$LN21@ucase_addC:
; Line 244
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], eax
; Line 246
	mov	eax, DWORD PTR _pe$69551[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69553[ebp], cx
	mov	edx, DWORD PTR _pe$69551[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69551[ebp], edx
; Line 249
	mov	eax, DWORD PTR _pe$69551[ebp]
	mov	DWORD PTR _pe0$69550[ebp], eax
; Line 252
	mov	DWORD PTR _idx$69554[ebp], 0
	jmp	SHORT $LN17@ucase_addC
$LN16@ucase_addC:
	mov	eax, DWORD PTR _idx$69554[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$69554[ebp], eax
$LN17@ucase_addC:
	cmp	DWORD PTR _idx$69554[ebp], 3
	jg	$LN15@ucase_addC
; Line 253
	movzx	eax, WORD PTR _excWord$69553[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69554[ebp]
	shl	edx, cl
	and	eax, edx
	je	$LN14@ucase_addC
; Line 254
	mov	eax, DWORD PTR _pe0$69550[ebp]
	mov	DWORD PTR _pe$69551[ebp], eax
; Line 255
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN13@ucase_addC
	movzx	eax, WORD PTR _excWord$69553[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69554[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	mov	ecx, DWORD PTR _pe$69551[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], edx
	mov	eax, DWORD PTR _pe$69551[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	jmp	SHORT $LN12@ucase_addC
$LN13@ucase_addC:
	movzx	eax, WORD PTR _excWord$69553[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69554[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	shl	eax, 1
	mov	ecx, DWORD PTR _pe$69551[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], edx
	mov	eax, DWORD PTR _pe$69551[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _pe$69551[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69551[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69551[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _c$[ebp], eax
$LN12@ucase_addC:
; Line 256
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@ucase_addC:
; Line 258
	jmp	$LN16@ucase_addC
$LN15@ucase_addC:
; Line 261
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 64					; 00000040H
	je	$LN11@ucase_addC
; Line 262
	mov	eax, DWORD PTR _pe0$69550[ebp]
	mov	DWORD PTR _pe$69551[ebp], eax
; Line 263
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN10@ucase_addC
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 63					; 0000003fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$69551[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69551[ebp], eax
	mov	eax, DWORD PTR _pe$69551[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _closureLength$69555[ebp], ecx
	jmp	SHORT $LN9@ucase_addC
$LN10@ucase_addC:
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 63					; 0000003fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$69551[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69551[ebp], eax
	mov	eax, DWORD PTR _pe$69551[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _closureLength$69555[ebp], ecx
	mov	edx, DWORD PTR _pe$69551[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69551[ebp], edx
	mov	eax, DWORD PTR _closureLength$69555[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69551[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _closureLength$69555[ebp], eax
$LN9@ucase_addC:
; Line 264
	mov	eax, DWORD PTR _closureLength$69555[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _closureLength$69555[ebp], eax
; Line 265
	mov	eax, DWORD PTR _pe$69551[ebp]
	add	eax, 2
	mov	DWORD PTR _closure$69552[ebp], eax
; Line 266
	jmp	SHORT $LN8@ucase_addC
$LN11@ucase_addC:
; Line 267
	mov	DWORD PTR _closureLength$69555[ebp], 0
; Line 268
	mov	DWORD PTR _closure$69552[ebp], 0
$LN8@ucase_addC:
; Line 272
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 128				; 00000080H
	je	$LN7@ucase_addC
; Line 273
	mov	eax, DWORD PTR _pe0$69550[ebp]
	mov	DWORD PTR _pe$69551[ebp], eax
; Line 274
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN6@ucase_addC
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$69551[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69551[ebp], eax
	mov	eax, DWORD PTR _pe$69551[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _fullLength$69556[ebp], ecx
	jmp	SHORT $LN5@ucase_addC
$LN6@ucase_addC:
	movzx	eax, WORD PTR _excWord$69553[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$69551[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69551[ebp], eax
	mov	eax, DWORD PTR _pe$69551[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _fullLength$69556[ebp], ecx
	mov	edx, DWORD PTR _pe$69551[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69551[ebp], edx
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69551[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _fullLength$69556[ebp], eax
$LN5@ucase_addC:
; Line 277
	mov	eax, DWORD PTR _pe$69551[ebp]
	add	eax, 2
	mov	DWORD PTR _pe$69551[ebp], eax
; Line 279
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	and	eax, 65535				; 0000ffffH
	mov	DWORD PTR _fullLength$69556[ebp], eax
; Line 282
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pe$69551[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], edx
; Line 283
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	sar	eax, 4
	mov	DWORD PTR _fullLength$69556[ebp], eax
; Line 286
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _length$69557[ebp], eax
; Line 287
	je	SHORT $LN4@ucase_addC
; Line 288
	mov	esi, esp
	mov	eax, DWORD PTR _length$69557[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$69551[ebp]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 289
	mov	eax, DWORD PTR _length$69557[ebp]
	mov	ecx, DWORD PTR _pe$69551[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], edx
$LN4@ucase_addC:
; Line 293
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	sar	eax, 4
	mov	DWORD PTR _fullLength$69556[ebp], eax
; Line 294
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pe$69551[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], edx
; Line 295
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	sar	eax, 4
	mov	DWORD PTR _fullLength$69556[ebp], eax
; Line 296
	mov	eax, DWORD PTR _fullLength$69556[ebp]
	mov	ecx, DWORD PTR _pe$69551[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69551[ebp], edx
; Line 298
	mov	eax, DWORD PTR _pe$69551[ebp]
	mov	DWORD PTR _closure$69552[ebp], eax
$LN7@ucase_addC:
; Line 302
	mov	DWORD PTR _idx$69554[ebp], 0
$LN3@ucase_addC:
	mov	eax, DWORD PTR _idx$69554[ebp]
	cmp	eax, DWORD PTR _closureLength$69555[ebp]
	jge	SHORT $LN29@ucase_addC
; Line 303
	mov	eax, DWORD PTR _idx$69554[ebp]
	mov	ecx, DWORD PTR _closure$69552[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _idx$69554[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$69554[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN1@ucase_addC
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _idx$69554[ebp]
	mov	edx, DWORD PTR _closure$69552[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _idx$69554[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$69554[ebp], eax
$LN1@ucase_addC:
; Line 304
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 305
	jmp	SHORT $LN3@ucase_addC
$LN29@ucase_addC:
; Line 307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN40@ucase_addC:
	DD	$LN26@ucase_addC
	DD	$LN25@ucase_addC
	DD	$LN24@ucase_addC
	DD	$LN23@ucase_addC
	DD	$LN27@ucase_addC
$LN39@ucase_addC:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	3
_ucase_addCaseClosure_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_addStringCaseClosure_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_addStringCaseClosure_56
_TEXT	SEGMENT
_c$69621 = -116						; size = 4
_p$69618 = -104						; size = 4
_unfold$ = -92						; size = 4
_unfoldStringWidth$ = -80				; size = 4
_unfoldRowWidth$ = -68					; size = 4
_unfoldRows$ = -56					; size = 4
_result$ = -44						; size = 4
_limit$ = -32						; size = 4
_start$ = -20						; size = 4
_i$ = -8						; size = 4
_csp$ = 8						; size = 4
_s$ = 12						; size = 4
_length$ = 16						; size = 4
_sa$ = 20						; size = 4
_ucase_addStringCaseClosure_56 PROC			; COMDAT
; Line 339
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 342
	mov	eax, DWORD PTR _csp$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN12@ucase_addS
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN13@ucase_addS
$LN12@ucase_addS:
; Line 343
	xor	al, al
	jmp	$LN14@ucase_addS
$LN13@ucase_addS:
; Line 345
	cmp	DWORD PTR _length$[ebp], 1
	jg	SHORT $LN11@ucase_addS
; Line 353
	xor	al, al
	jmp	$LN14@ucase_addS
$LN11@ucase_addS:
; Line 356
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _unfold$[ebp], ecx
; Line 357
	mov	eax, DWORD PTR _unfold$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _unfoldRows$[ebp], ecx
; Line 358
	mov	eax, DWORD PTR _unfold$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _unfoldRowWidth$[ebp], ecx
; Line 359
	mov	eax, DWORD PTR _unfold$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _unfoldStringWidth$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR _unfoldRowWidth$[ebp]
	mov	ecx, DWORD PTR _unfold$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _unfold$[ebp], edx
; Line 362
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _unfoldStringWidth$[ebp]
	jle	SHORT $LN10@ucase_addS
; Line 364
	xor	al, al
	jmp	$LN14@ucase_addS
$LN10@ucase_addS:
; Line 368
	mov	DWORD PTR _start$[ebp], 0
; Line 369
	mov	eax, DWORD PTR _unfoldRows$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN9@ucase_addS:
; Line 370
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	$LN8@ucase_addS
; Line 371
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _limit$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 372
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, DWORD PTR _unfoldRowWidth$[ebp]
	mov	ecx, DWORD PTR _unfold$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _p$69618[ebp], edx
; Line 373
	mov	eax, DWORD PTR _unfoldStringWidth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$69618[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?strcmpMax@@YAHPB_WH0H@Z		; strcmpMax
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 375
	cmp	DWORD PTR _result$[ebp], 0
	jne	$LN7@ucase_addS
; Line 379
	mov	eax, DWORD PTR _unfoldStringWidth$[ebp]
	mov	DWORD PTR _i$[ebp], eax
$LN6@ucase_addS:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _unfoldRowWidth$[ebp]
	jge	$LN5@ucase_addS
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$69618[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	je	SHORT $LN5@ucase_addS
; Line 380
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$69618[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$69621[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _c$69621[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN4@ucase_addS
	mov	eax, DWORD PTR _c$69621[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _p$69618[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$69621[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ucase_addS:
; Line 381
	mov	esi, esp
	mov	eax, DWORD PTR _c$69621[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 382
	mov	eax, DWORD PTR _sa$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$69621[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	_ucase_addCaseClosure_56
	add	esp, 12					; 0000000cH
; Line 383
	jmp	$LN6@ucase_addS
$LN5@ucase_addS:
; Line 384
	mov	al, 1
	jmp	SHORT $LN14@ucase_addS
	jmp	SHORT $LN3@ucase_addS
$LN7@ucase_addS:
; Line 385
	cmp	DWORD PTR _result$[ebp], 0
	jge	SHORT $LN2@ucase_addS
; Line 386
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
; Line 387
	jmp	SHORT $LN3@ucase_addS
$LN2@ucase_addS:
; Line 388
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
$LN3@ucase_addS:
; Line 390
	jmp	$LN9@ucase_addS
$LN8@ucase_addS:
; Line 392
	xor	al, al
$LN14@ucase_addS:
; Line 393
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_addStringCaseClosure_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?strcmpMax@@YAHPB_WH0H@Z
_TEXT	SEGMENT
_c2$ = -20						; size = 4
_c1$ = -8						; size = 4
_s$ = 8							; size = 4
_length$ = 12						; size = 4
_t$ = 16						; size = 4
_max$ = 20						; size = 4
?strcmpMax@@YAHPB_WH0H@Z PROC				; strcmpMax, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 317
	mov	eax, DWORD PTR _max$[ebp]
	sub	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _max$[ebp], eax
$LN8@strcmpMax:
; Line 319
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c1$[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
; Line 320
	mov	eax, DWORD PTR _t$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c2$[ebp], ecx
	mov	edx, DWORD PTR _t$[ebp]
	add	edx, 2
	mov	DWORD PTR _t$[ebp], edx
; Line 321
	cmp	DWORD PTR _c2$[ebp], 0
	jne	SHORT $LN5@strcmpMax
; Line 322
	mov	eax, 1
	jmp	SHORT $LN9@strcmpMax
$LN5@strcmpMax:
; Line 324
	mov	eax, DWORD PTR _c1$[ebp]
	sub	eax, DWORD PTR _c2$[ebp]
	mov	DWORD PTR _c1$[ebp], eax
; Line 325
	je	SHORT $LN7@strcmpMax
; Line 326
	mov	eax, DWORD PTR _c1$[ebp]
	jmp	SHORT $LN9@strcmpMax
$LN7@strcmpMax:
; Line 328
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN8@strcmpMax
; Line 331
	cmp	DWORD PTR _max$[ebp], 0
	je	SHORT $LN2@strcmpMax
	mov	eax, DWORD PTR _t$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@strcmpMax
$LN2@strcmpMax:
; Line 332
	xor	eax, eax
	jmp	SHORT $LN9@strcmpMax
; Line 333
	jmp	SHORT $LN9@strcmpMax
$LN3@strcmpMax:
; Line 334
	mov	eax, DWORD PTR _max$[ebp]
	neg	eax
$LN9@strcmpMax:
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?strcmpMax@@YAHPB_WH0H@Z ENDP				; strcmpMax
_TEXT	ENDS
PUBLIC	??0FullCaseFoldingIterator@icu_56@@QAE@XZ	; icu_56::FullCaseFoldingIterator::FullCaseFoldingIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FullCaseFoldingIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FullCaseFoldingIterator@icu_56@@QAE@XZ PROC		; icu_56::FullCaseFoldingIterator::FullCaseFoldingIterator, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ucase_props_singleton+12
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+2]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+20], edx
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*2]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0FullCaseFoldingIterator@icu_56@@QAE@XZ ENDP		; icu_56::FullCaseFoldingIterator::FullCaseFoldingIterator
_TEXT	ENDS
PUBLIC	?next@FullCaseFoldingIterator@icu_56@@QAEHAAVUnicodeString@2@@Z ; icu_56::FullCaseFoldingIterator::next
EXTRN	?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z:PROC ; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@FullCaseFoldingIterator@icu_56@@QAEHAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_c$ = -44						; size = 4
_length$ = -32						; size = 4
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_full$ = 8						; size = 4
?next@FullCaseFoldingIterator@icu_56@@QAEHAAVUnicodeString@2@@Z PROC ; icu_56::FullCaseFoldingIterator::next, COMDAT
; _this$ = ecx
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	imul	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _p$[ebp], edx
; Line 411
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN5@next
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	jne	SHORT $LN6@next
$LN5@next:
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 413
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _p$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _p$[ebp], eax
; Line 414
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+20], edx
$LN6@next:
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN4@next
	or	eax, -1
	jmp	$LN7@next
$LN4@next:
; Line 418
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@next:
; Line 419
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN2@next
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	test	edx, edx
	jne	SHORT $LN2@next
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	jmp	SHORT $LN3@next
$LN2@next:
; Line 420
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _full$[ebp]
	call	?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z ; icu_56::UnicodeString::setTo
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN1@next
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	lea	eax, DWORD PTR [eax+edx-56613888]
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], edx
$LN1@next:
; Line 424
	mov	eax, DWORD PTR _c$[ebp]
$LN7@next:
; Line 425
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?next@FullCaseFoldingIterator@icu_56@@QAEHAAVUnicodeString@2@@Z ENDP ; icu_56::FullCaseFoldingIterator::next
_TEXT	ENDS
PUBLIC	_ucase_getType_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_getType_56
_TEXT	SEGMENT
tv148 = -220						; size = 4
tv149 = -216						; size = 4
tv150 = -212						; size = 4
tv151 = -208						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_getType_56 PROC					; COMDAT
; Line 431
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 432
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@ucase_getT
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN10@ucase_getT
$LN9@ucase_getT:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@ucase_getT
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN8@ucase_getT
$LN7@ucase_getT:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@ucase_getT
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN6@ucase_getT
$LN5@ucase_getT:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN3@ucase_getT
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN4@ucase_getT
$LN3@ucase_getT:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN4@ucase_getT:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN6@ucase_getT:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN8@ucase_getT:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN10@ucase_getT:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 433
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
; Line 434
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_getType_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_getTypeOrIgnorable_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_getTypeOrIgnorable_56
_TEXT	SEGMENT
tv148 = -220						; size = 4
tv149 = -216						; size = 4
tv150 = -212						; size = 4
tv151 = -208						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_getTypeOrIgnorable_56 PROC			; COMDAT
; Line 438
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 439
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@ucase_getT@2
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN10@ucase_getT@2
$LN9@ucase_getT@2:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@ucase_getT@2
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN8@ucase_getT@2
$LN7@ucase_getT@2:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@ucase_getT@2
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN6@ucase_getT@2
$LN5@ucase_getT@2:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN3@ucase_getT@2
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN4@ucase_getT@2
$LN3@ucase_getT@2:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN4@ucase_getT@2:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN6@ucase_getT@2:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN8@ucase_getT@2:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN10@ucase_getT@2:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 440
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 7
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_getTypeOrIgnorable_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_isSoftDotted_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_isSoftDotted_56
_TEXT	SEGMENT
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_isSoftDotted_56 PROC				; COMDAT
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 457
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	?getDotType@@YAHPBUUCaseProps@@H@Z	; getDotType
	add	esp, 8
	cmp	eax, 32					; 00000020H
	sete	al
; Line 458
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_isSoftDotted_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDotType@@YAHPBUUCaseProps@@H@Z
_TEXT	SEGMENT
tv148 = -232						; size = 4
tv149 = -228						; size = 4
tv150 = -224						; size = 4
tv151 = -220						; size = 4
_pe$69686 = -20						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
?getDotType@@YAHPBUUCaseProps@@H@Z PROC			; getDotType, COMDAT
; Line 445
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 446
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN11@getDotType
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN12@getDotType
$LN11@getDotType:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN9@getDotType
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN10@getDotType
$LN9@getDotType:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN7@getDotType
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN8@getDotType
$LN7@getDotType:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN5@getDotType
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN6@getDotType
$LN5@getDotType:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN6@getDotType:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN8@getDotType:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN10@getDotType:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN12@getDotType:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 447
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN2@getDotType
; Line 448
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 96					; 00000060H
	jmp	SHORT $LN3@getDotType
; Line 449
	jmp	SHORT $LN3@getDotType
$LN2@getDotType:
; Line 450
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69686[ebp], eax
; Line 451
	mov	eax, DWORD PTR _pe$69686[ebp]
	movzx	eax, WORD PTR [eax]
	sar	eax, 7
	and	eax, 96					; 00000060H
$LN3@getDotType:
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDotType@@YAHPBUUCaseProps@@H@Z ENDP			; getDotType
_TEXT	ENDS
PUBLIC	_ucase_isCaseSensitive_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_isCaseSensitive_56
_TEXT	SEGMENT
tv148 = -220						; size = 4
tv149 = -216						; size = 4
tv150 = -212						; size = 4
tv151 = -208						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_ucase_isCaseSensitive_56 PROC				; COMDAT
; Line 461
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 462
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@ucase_isCa
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN10@ucase_isCa
$LN9@ucase_isCa:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@ucase_isCa
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN8@ucase_isCa
$LN7@ucase_isCa:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@ucase_isCa
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN6@ucase_isCa
$LN5@ucase_isCa:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN3@ucase_isCa
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN4@ucase_isCa
$LN3@ucase_isCa:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN4@ucase_isCa:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN6@ucase_isCa:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN8@ucase_isCa:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN10@ucase_isCa:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 463
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 8
	setne	al
; Line 464
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_isCaseSensitive_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_getCaseLocale_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_getCaseLocale_56
_TEXT	SEGMENT
_c$ = -17						; size = 1
_result$ = -8						; size = 4
_locale$ = 8						; size = 4
_locCache$ = 12						; size = 4
_ucase_getCaseLocale_56 PROC				; COMDAT
; Line 566
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 570
	cmp	DWORD PTR _locCache$[ebp], 0
	je	SHORT $LN37@ucase_getC
	mov	eax, DWORD PTR _locCache$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN37@ucase_getC
; Line 571
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN38@ucase_getC
$LN37@ucase_getC:
; Line 574
	mov	DWORD PTR _result$[ebp], 1
; Line 585
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 586
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 116				; 00000074H
	je	SHORT $LN35@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 84					; 00000054H
	jne	SHORT $LN36@ucase_getC
$LN35@ucase_getC:
; Line 588
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 589
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 117				; 00000075H
	je	SHORT $LN33@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 85					; 00000055H
	jne	SHORT $LN34@ucase_getC
$LN33@ucase_getC:
; Line 590
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
$LN34@ucase_getC:
; Line 592
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 114				; 00000072H
	je	SHORT $LN31@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 82					; 00000052H
	jne	SHORT $LN32@ucase_getC
$LN31@ucase_getC:
; Line 593
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
; Line 594
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN29@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN29@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN32@ucase_getC
$LN29@ucase_getC:
; Line 595
	mov	DWORD PTR _result$[ebp], 2
$LN32@ucase_getC:
; Line 597
	jmp	$LN28@ucase_getC
$LN36@ucase_getC:
; Line 598
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 97					; 00000061H
	je	SHORT $LN26@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 65					; 00000041H
	jne	SHORT $LN27@ucase_getC
$LN26@ucase_getC:
; Line 600
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 601
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 122				; 0000007aH
	je	SHORT $LN24@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 90					; 0000005aH
	jne	SHORT $LN25@ucase_getC
$LN24@ucase_getC:
; Line 602
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 603
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 101				; 00000065H
	je	SHORT $LN22@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 69					; 00000045H
	jne	SHORT $LN23@ucase_getC
$LN22@ucase_getC:
; Line 604
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
$LN23@ucase_getC:
; Line 606
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN20@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN20@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN25@ucase_getC
$LN20@ucase_getC:
; Line 607
	mov	DWORD PTR _result$[ebp], 2
$LN25@ucase_getC:
; Line 609
	jmp	$LN28@ucase_getC
$LN27@ucase_getC:
; Line 610
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 108				; 0000006cH
	je	SHORT $LN17@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 76					; 0000004cH
	jne	SHORT $LN18@ucase_getC
$LN17@ucase_getC:
; Line 612
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 613
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 105				; 00000069H
	je	SHORT $LN15@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 73					; 00000049H
	jne	SHORT $LN16@ucase_getC
$LN15@ucase_getC:
; Line 614
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
$LN16@ucase_getC:
; Line 616
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 116				; 00000074H
	je	SHORT $LN13@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 84					; 00000054H
	jne	SHORT $LN14@ucase_getC
$LN13@ucase_getC:
; Line 617
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
; Line 618
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN11@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN11@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN14@ucase_getC
$LN11@ucase_getC:
; Line 619
	mov	DWORD PTR _result$[ebp], 3
$LN14@ucase_getC:
; Line 621
	jmp	$LN28@ucase_getC
$LN18@ucase_getC:
; Line 622
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 110				; 0000006eH
	je	SHORT $LN8@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 78					; 0000004eH
	jne	SHORT $LN28@ucase_getC
$LN8@ucase_getC:
; Line 624
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 625
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 108				; 0000006cH
	je	SHORT $LN6@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 76					; 0000004cH
	jne	SHORT $LN28@ucase_getC
$LN6@ucase_getC:
; Line 626
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	mov	edx, DWORD PTR _locale$[ebp]
	add	edx, 1
	mov	DWORD PTR _locale$[ebp], edx
; Line 627
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 100				; 00000064H
	je	SHORT $LN4@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 68					; 00000044H
	jne	SHORT $LN5@ucase_getC
$LN4@ucase_getC:
; Line 628
	mov	eax, DWORD PTR _locale$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
$LN5@ucase_getC:
; Line 630
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN2@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN2@ucase_getC
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN28@ucase_getC
$LN2@ucase_getC:
; Line 631
	mov	DWORD PTR _result$[ebp], 4
$LN28@ucase_getC:
; Line 636
	cmp	DWORD PTR _locCache$[ebp], 0
	je	SHORT $LN1@ucase_getC
; Line 637
	mov	eax, DWORD PTR _locCache$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ucase_getC:
; Line 639
	mov	eax, DWORD PTR _result$[ebp]
$LN38@ucase_getC:
; Line 640
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_getCaseLocale_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_toFullLower_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_toFullLower_56
_TEXT	SEGMENT
tv148 = -292						; size = 4
tv149 = -288						; size = 4
tv150 = -284						; size = 4
tv280 = -280						; size = 4
tv188 = -280						; size = 4
tv151 = -280						; size = 4
_loc$69858 = -80					; size = 4
_full$69856 = -68					; size = 4
_excWord$69855 = -56					; size = 2
_pe2$69854 = -44					; size = 4
_pe$69853 = -32						; size = 4
_props$ = -20						; size = 2
_result$ = -8						; size = 4
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_iter$ = 16						; size = 4
_context$ = 20						; size = 4
_pString$ = 24						; size = 4
_locale$ = 28						; size = 4
_locCache$ = 32						; size = 4
_ucase_toFullLower_56 PROC				; COMDAT
; Line 805
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 806
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 807
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN46@ucase_toFu
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN47@ucase_toFu
$LN46@ucase_toFu:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN44@ucase_toFu
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN45@ucase_toFu
$LN44@ucase_toFu:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN42@ucase_toFu
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN43@ucase_toFu
$LN42@ucase_toFu:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN40@ucase_toFu
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN41@ucase_toFu
$LN40@ucase_toFu:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN41@ucase_toFu:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN43@ucase_toFu:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN45@ucase_toFu:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN47@ucase_toFu:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 808
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN37@ucase_toFu
; Line 809
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 2
	jl	SHORT $LN36@ucase_toFu
; Line 810
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _result$[ebp], eax
$LN36@ucase_toFu:
; Line 812
	jmp	$LN35@ucase_toFu
$LN37@ucase_toFu:
; Line 813
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69853[ebp], eax
; Line 814
	mov	eax, DWORD PTR _pe$69853[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69855[ebp], cx
	mov	edx, DWORD PTR _pe$69853[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69853[ebp], edx
; Line 817
	mov	eax, DWORD PTR _pe$69853[ebp]
	mov	DWORD PTR _pe2$69854[ebp], eax
; Line 819
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 16384				; 00004000H
	je	$LN34@ucase_toFu
; Line 821
	mov	eax, DWORD PTR _locCache$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	call	_ucase_getCaseLocale_56
	add	esp, 8
	mov	DWORD PTR _loc$69858[ebp], eax
; Line 835
	cmp	DWORD PTR _loc$69858[ebp], 3
	jne	$LN33@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	je	SHORT $LN30@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 74			; 0000004aH
	je	SHORT $LN30@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 302			; 0000012eH
	jne	SHORT $LN31@ucase_toFu
$LN30@ucase_toFu:
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	?isFollowedByMoreAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ; isFollowedByMoreAbove
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN32@ucase_toFu
$LN31@ucase_toFu:
	cmp	DWORD PTR _c$[ebp], 204			; 000000ccH
	je	SHORT $LN32@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 205			; 000000cdH
	je	SHORT $LN32@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 296			; 00000128H
	jne	$LN33@ucase_toFu
$LN32@ucase_toFu:
; Line 852
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR tv188[ebp]
	sub	ecx, 73					; 00000049H
	mov	DWORD PTR tv188[ebp], ecx
	cmp	DWORD PTR tv188[ebp], 229		; 000000e5H
	ja	$LN20@ucase_toFu
	mov	edx, DWORD PTR tv188[ebp]
	movzx	eax, BYTE PTR $LN50@ucase_toFu[edx]
	jmp	DWORD PTR $LN51@ucase_toFu[eax*4]
$LN26@ucase_toFu:
; Line 854
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iDot
; Line 855
	mov	eax, 2
	jmp	$LN38@ucase_toFu
$LN25@ucase_toFu:
; Line 857
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _jDot
; Line 858
	mov	eax, 2
	jmp	$LN38@ucase_toFu
$LN24@ucase_toFu:
; Line 860
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iOgonekDot
; Line 861
	mov	eax, 2
	jmp	$LN38@ucase_toFu
$LN23@ucase_toFu:
; Line 863
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iDotGrave
; Line 864
	mov	eax, 3
	jmp	$LN38@ucase_toFu
$LN22@ucase_toFu:
; Line 866
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iDotAcute
; Line 867
	mov	eax, 3
	jmp	$LN38@ucase_toFu
$LN21@ucase_toFu:
; Line 869
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iDotTilde
; Line 870
	mov	eax, 3
	jmp	$LN38@ucase_toFu
$LN20@ucase_toFu:
; Line 872
	xor	eax, eax
	jmp	$LN38@ucase_toFu
; Line 875
	jmp	$LN19@ucase_toFu
$LN33@ucase_toFu:
	cmp	DWORD PTR _loc$69858[ebp], 2
	jne	SHORT $LN18@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 304			; 00000130H
	jne	SHORT $LN18@ucase_toFu
; Line 883
	mov	eax, 105				; 00000069H
	jmp	$LN38@ucase_toFu
	jmp	$LN19@ucase_toFu
$LN18@ucase_toFu:
; Line 884
	cmp	DWORD PTR _loc$69858[ebp], 2
	jne	SHORT $LN16@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 775			; 00000307H
	jne	SHORT $LN16@ucase_toFu
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	?isPrecededBy_I@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ; isPrecededBy_I
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN16@ucase_toFu
; Line 892
	xor	eax, eax
	jmp	$LN38@ucase_toFu
	jmp	$LN19@ucase_toFu
$LN16@ucase_toFu:
; Line 893
	cmp	DWORD PTR _loc$69858[ebp], 2
	jne	SHORT $LN14@ucase_toFu
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	jne	SHORT $LN14@ucase_toFu
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	?isFollowedByDotAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ; isFollowedByDotAbove
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN14@ucase_toFu
; Line 900
	mov	eax, 305				; 00000131H
	jmp	$LN38@ucase_toFu
	jmp	SHORT $LN19@ucase_toFu
$LN14@ucase_toFu:
; Line 901
	cmp	DWORD PTR _c$[ebp], 304			; 00000130H
	jne	SHORT $LN12@ucase_toFu
; Line 907
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iDot
; Line 908
	mov	eax, 2
	jmp	$LN38@ucase_toFu
; Line 909
	jmp	SHORT $LN19@ucase_toFu
$LN12@ucase_toFu:
; Line 912
	cmp	DWORD PTR _c$[ebp], 931			; 000003a3H
	jne	SHORT $LN19@ucase_toFu
	push	1
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	?isFollowedByCasedLetter@@YACPBUUCaseProps@@P6AHPAXC@Z1C@Z ; isFollowedByCasedLetter
	add	esp, 16					; 00000010H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN19@ucase_toFu
	push	-1
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	?isFollowedByCasedLetter@@YACPBUUCaseProps@@P6AHPAXC@Z1C@Z ; isFollowedByCasedLetter
	add	esp, 16					; 00000010H
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN19@ucase_toFu
; Line 919
	mov	eax, 962				; 000003c2H
	jmp	$LN38@ucase_toFu
$LN19@ucase_toFu:
; Line 922
	jmp	$LN8@ucase_toFu
$LN34@ucase_toFu:
; Line 923
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 128				; 00000080H
	je	$LN8@ucase_toFu
; Line 924
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN6@ucase_toFu
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$69853[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69853[ebp], eax
	mov	eax, DWORD PTR _pe$69853[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _full$69856[ebp], ecx
	jmp	SHORT $LN5@ucase_toFu
$LN6@ucase_toFu:
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$69853[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69853[ebp], eax
	mov	eax, DWORD PTR _pe$69853[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _full$69856[ebp], ecx
	mov	edx, DWORD PTR _pe$69853[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69853[ebp], edx
	mov	eax, DWORD PTR _full$69856[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69853[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _full$69856[ebp], eax
$LN5@ucase_toFu:
; Line 925
	mov	eax, DWORD PTR _full$69856[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _full$69856[ebp], eax
; Line 926
	je	SHORT $LN8@ucase_toFu
; Line 928
	mov	eax, DWORD PTR _pe$69853[ebp]
	add	eax, 2
	mov	ecx, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 931
	mov	eax, DWORD PTR _full$69856[ebp]
	jmp	$LN38@ucase_toFu
$LN8@ucase_toFu:
; Line 935
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 1
	je	SHORT $LN35@ucase_toFu
; Line 936
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@ucase_toFu
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 0
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe2$69854[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe2$69854[ebp], eax
	mov	eax, DWORD PTR _pe2$69854[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	jmp	SHORT $LN35@ucase_toFu
$LN2@ucase_toFu:
	movzx	eax, WORD PTR _excWord$69855[ebp]
	and	eax, 0
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe2$69854[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe2$69854[ebp], eax
	mov	eax, DWORD PTR _pe2$69854[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	mov	edx, DWORD PTR _pe2$69854[ebp]
	add	edx, 2
	mov	DWORD PTR _pe2$69854[ebp], edx
	mov	eax, DWORD PTR _result$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe2$69854[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _result$[ebp], eax
$LN35@ucase_toFu:
; Line 940
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _c$[ebp]
	jne	SHORT $LN48@ucase_toFu
	mov	ecx, DWORD PTR _result$[ebp]
	not	ecx
	mov	DWORD PTR tv280[ebp], ecx
	jmp	SHORT $LN49@ucase_toFu
$LN48@ucase_toFu:
	mov	edx, DWORD PTR _result$[ebp]
	mov	DWORD PTR tv280[ebp], edx
$LN49@ucase_toFu:
	mov	eax, DWORD PTR tv280[ebp]
$LN38@ucase_toFu:
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN51@ucase_toFu:
	DD	$LN26@ucase_toFu
	DD	$LN25@ucase_toFu
	DD	$LN23@ucase_toFu
	DD	$LN22@ucase_toFu
	DD	$LN21@ucase_toFu
	DD	$LN24@ucase_toFu
	DD	$LN20@ucase_toFu
$LN50@ucase_toFu:
	DB	0
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
_ucase_toFullLower_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isFollowedByCasedLetter@@YACPBUUCaseProps@@P6AHPAXC@Z1C@Z
_TEXT	SEGMENT
_type$69769 = -20					; size = 4
_c$ = -8						; size = 4
_csp$ = 8						; size = 4
_iter$ = 12						; size = 4
_context$ = 16						; size = 4
_dir$ = 20						; size = 1
?isFollowedByCasedLetter@@YACPBUUCaseProps@@P6AHPAXC@Z1C@Z PROC ; isFollowedByCasedLetter, COMDAT
; Line 651
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 654
	cmp	DWORD PTR _iter$[ebp], 0
	jne	SHORT $LN8@isFollowed
; Line 655
	xor	al, al
	jmp	SHORT $LN9@isFollowed
$LN8@isFollowed:
; Line 656
	jmp	SHORT $LN7@isFollowed
$LN6@isFollowed:
; Line 658
	mov	BYTE PTR _dir$[ebp], 0
$LN7@isFollowed:
	mov	esi, esp
	movzx	eax, BYTE PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _iter$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN5@isFollowed
; Line 659
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_getTypeOrIgnorable_56
	add	esp, 8
	mov	DWORD PTR _type$69769[ebp], eax
; Line 660
	mov	eax, DWORD PTR _type$69769[ebp]
	and	eax, 4
	je	SHORT $LN4@isFollowed
	jmp	SHORT $LN3@isFollowed
$LN4@isFollowed:
; Line 662
	cmp	DWORD PTR _type$69769[ebp], 0
	je	SHORT $LN2@isFollowed
; Line 663
	mov	al, 1
	jmp	SHORT $LN9@isFollowed
; Line 664
	jmp	SHORT $LN3@isFollowed
$LN2@isFollowed:
; Line 665
	xor	al, al
	jmp	SHORT $LN9@isFollowed
$LN3@isFollowed:
; Line 667
	jmp	SHORT $LN6@isFollowed
$LN5@isFollowed:
; Line 669
	xor	al, al
$LN9@isFollowed:
; Line 670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isFollowedByCasedLetter@@YACPBUUCaseProps@@P6AHPAXC@Z1C@Z ENDP ; isFollowedByCasedLetter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isPrecededBy_I@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z
_TEXT	SEGMENT
_dir$ = -29						; size = 1
_dotType$ = -20						; size = 4
_c$ = -8						; size = 4
_csp$ = 8						; size = 4
_iter$ = 12						; size = 4
_context$ = 16						; size = 4
?isPrecededBy_I@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z PROC	; isPrecededBy_I, COMDAT
; Line 731
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 736
	cmp	DWORD PTR _iter$[ebp], 0
	jne	SHORT $LN6@isPreceded
; Line 737
	xor	al, al
	jmp	SHORT $LN7@isPreceded
$LN6@isPreceded:
; Line 740
	mov	BYTE PTR _dir$[ebp], -1
	jmp	SHORT $LN5@isPreceded
$LN4@isPreceded:
	mov	BYTE PTR _dir$[ebp], 0
$LN5@isPreceded:
	mov	esi, esp
	movzx	eax, BYTE PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _iter$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN3@isPreceded
; Line 741
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	jne	SHORT $LN2@isPreceded
; Line 742
	mov	al, 1
	jmp	SHORT $LN7@isPreceded
$LN2@isPreceded:
; Line 744
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	?getDotType@@YAHPBUUCaseProps@@H@Z	; getDotType
	add	esp, 8
	mov	DWORD PTR _dotType$[ebp], eax
; Line 745
	cmp	DWORD PTR _dotType$[ebp], 96		; 00000060H
	je	SHORT $LN1@isPreceded
; Line 746
	xor	al, al
	jmp	SHORT $LN7@isPreceded
$LN1@isPreceded:
; Line 748
	jmp	SHORT $LN4@isPreceded
$LN3@isPreceded:
; Line 750
	xor	al, al
$LN7@isPreceded:
; Line 751
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrecededBy_I@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ENDP	; isPrecededBy_I
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isFollowedByMoreAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z
_TEXT	SEGMENT
_dir$ = -29						; size = 1
_dotType$ = -20						; size = 4
_c$ = -8						; size = 4
_csp$ = 8						; size = 4
_iter$ = 12						; size = 4
_context$ = 16						; size = 4
?isFollowedByMoreAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z PROC ; isFollowedByMoreAbove, COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 760
	cmp	DWORD PTR _iter$[ebp], 0
	jne	SHORT $LN7@isFollowed@2
; Line 761
	xor	al, al
	jmp	SHORT $LN8@isFollowed@2
$LN7@isFollowed@2:
; Line 764
	mov	BYTE PTR _dir$[ebp], 1
	jmp	SHORT $LN6@isFollowed@2
$LN5@isFollowed@2:
	mov	BYTE PTR _dir$[ebp], 0
$LN6@isFollowed@2:
	mov	esi, esp
	movzx	eax, BYTE PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _iter$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN4@isFollowed@2
; Line 765
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	?getDotType@@YAHPBUUCaseProps@@H@Z	; getDotType
	add	esp, 8
	mov	DWORD PTR _dotType$[ebp], eax
; Line 766
	cmp	DWORD PTR _dotType$[ebp], 64		; 00000040H
	jne	SHORT $LN3@isFollowed@2
; Line 767
	mov	al, 1
	jmp	SHORT $LN8@isFollowed@2
	jmp	SHORT $LN2@isFollowed@2
$LN3@isFollowed@2:
; Line 768
	cmp	DWORD PTR _dotType$[ebp], 96		; 00000060H
	je	SHORT $LN2@isFollowed@2
; Line 769
	xor	al, al
	jmp	SHORT $LN8@isFollowed@2
$LN2@isFollowed@2:
; Line 771
	jmp	SHORT $LN5@isFollowed@2
$LN4@isFollowed@2:
; Line 773
	xor	al, al
$LN8@isFollowed@2:
; Line 774
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isFollowedByMoreAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ENDP ; isFollowedByMoreAbove
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isFollowedByDotAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z
_TEXT	SEGMENT
_dir$ = -29						; size = 1
_dotType$ = -20						; size = 4
_c$ = -8						; size = 4
_csp$ = 8						; size = 4
_iter$ = 12						; size = 4
_context$ = 16						; size = 4
?isFollowedByDotAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z PROC ; isFollowedByDotAbove, COMDAT
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 783
	cmp	DWORD PTR _iter$[ebp], 0
	jne	SHORT $LN6@isFollowed@3
; Line 784
	xor	al, al
	jmp	SHORT $LN7@isFollowed@3
$LN6@isFollowed@3:
; Line 787
	mov	BYTE PTR _dir$[ebp], 1
	jmp	SHORT $LN5@isFollowed@3
$LN4@isFollowed@3:
	mov	BYTE PTR _dir$[ebp], 0
$LN5@isFollowed@3:
	mov	esi, esp
	movzx	eax, BYTE PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _iter$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN3@isFollowed@3
; Line 788
	cmp	DWORD PTR _c$[ebp], 775			; 00000307H
	jne	SHORT $LN2@isFollowed@3
; Line 789
	mov	al, 1
	jmp	SHORT $LN7@isFollowed@3
$LN2@isFollowed@3:
; Line 791
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	?getDotType@@YAHPBUUCaseProps@@H@Z	; getDotType
	add	esp, 8
	mov	DWORD PTR _dotType$[ebp], eax
; Line 792
	cmp	DWORD PTR _dotType$[ebp], 96		; 00000060H
	je	SHORT $LN1@isFollowed@3
; Line 793
	xor	al, al
	jmp	SHORT $LN7@isFollowed@3
$LN1@isFollowed@3:
; Line 795
	jmp	SHORT $LN4@isFollowed@3
$LN3@isFollowed@3:
; Line 797
	xor	al, al
$LN7@isFollowed@3:
; Line 798
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isFollowedByDotAbove@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ENDP ; isFollowedByDotAbove
_TEXT	ENDS
PUBLIC	_ucase_toFullUpper_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_toFullUpper_56
_TEXT	SEGMENT
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_iter$ = 16						; size = 4
_context$ = 20						; size = 4
_pString$ = 24						; size = 4
_locale$ = 28						; size = 4
_locCache$ = 32						; size = 4
_ucase_toFullUpper_56 PROC				; COMDAT
; Line 1041
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1042
	push	1
	mov	eax, DWORD PTR _locCache$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pString$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _csp$[ebp]
	push	eax
	call	?toUpperOrTitle@@YAHPBUUCaseProps@@HP6AHPAXC@Z1PAPB_WPBDPAHC@Z ; toUpperOrTitle
	add	esp, 32					; 00000020H
; Line 1043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_toFullUpper_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?toUpperOrTitle@@YAHPBUUCaseProps@@HP6AHPAXC@Z1PAPB_WPBDPAHC@Z
_TEXT	SEGMENT
tv148 = -304						; size = 4
tv149 = -300						; size = 4
tv150 = -296						; size = 4
tv265 = -292						; size = 4
tv151 = -292						; size = 4
_loc$69923 = -92					; size = 4
_idx$69921 = -80					; size = 4
_full$69920 = -68					; size = 4
_excWord$69919 = -56					; size = 2
_pe2$69918 = -44					; size = 4
_pe$69917 = -32						; size = 4
_props$ = -20						; size = 2
_result$ = -8						; size = 4
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_iter$ = 16						; size = 4
_context$ = 20						; size = 4
_pString$ = 24						; size = 4
_locale$ = 28						; size = 4
_locCache$ = 32						; size = 4
_upperNotTitle$ = 36					; size = 1
?toUpperOrTitle@@YAHPBUUCaseProps@@HP6AHPAXC@Z1PAPB_WPBDPAHC@Z PROC ; toUpperOrTitle, COMDAT
; Line 949
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 950
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 951
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN30@toUpperOrT
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN31@toUpperOrT
$LN30@toUpperOrT:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN28@toUpperOrT
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN29@toUpperOrT
$LN28@toUpperOrT:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN26@toUpperOrT
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN27@toUpperOrT
$LN26@toUpperOrT:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN24@toUpperOrT
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN25@toUpperOrT
$LN24@toUpperOrT:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN25@toUpperOrT:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN27@toUpperOrT:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN29@toUpperOrT:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN31@toUpperOrT:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 952
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN21@toUpperOrT
; Line 953
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN20@toUpperOrT
; Line 954
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _result$[ebp], eax
$LN20@toUpperOrT:
; Line 956
	jmp	$LN19@toUpperOrT
$LN21@toUpperOrT:
; Line 957
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69917[ebp], eax
; Line 958
	mov	eax, DWORD PTR _pe$69917[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69919[ebp], cx
	mov	edx, DWORD PTR _pe$69917[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69917[ebp], edx
; Line 961
	mov	eax, DWORD PTR _pe$69917[ebp]
	mov	DWORD PTR _pe2$69918[ebp], eax
; Line 963
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 16384				; 00004000H
	je	SHORT $LN18@toUpperOrT
; Line 965
	mov	eax, DWORD PTR _locCache$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	call	_ucase_getCaseLocale_56
	add	esp, 8
	mov	DWORD PTR _loc$69923[ebp], eax
; Line 967
	cmp	DWORD PTR _loc$69923[ebp], 2
	jne	SHORT $LN17@toUpperOrT
	cmp	DWORD PTR _c$[ebp], 105			; 00000069H
	jne	SHORT $LN17@toUpperOrT
; Line 979
	mov	eax, 304				; 00000130H
	jmp	$LN22@toUpperOrT
	jmp	SHORT $LN16@toUpperOrT
$LN17@toUpperOrT:
; Line 980
	cmp	DWORD PTR _loc$69923[ebp], 3
	jne	SHORT $LN16@toUpperOrT
	cmp	DWORD PTR _c$[ebp], 775			; 00000307H
	jne	SHORT $LN16@toUpperOrT
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	?isPrecededBySoftDotted@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ; isPrecededBySoftDotted
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN16@toUpperOrT
; Line 990
	xor	eax, eax
	jmp	$LN22@toUpperOrT
$LN16@toUpperOrT:
; Line 993
	jmp	$LN13@toUpperOrT
$LN18@toUpperOrT:
; Line 994
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 128				; 00000080H
	je	$LN13@toUpperOrT
; Line 995
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN11@toUpperOrT
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$69917[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69917[ebp], eax
	mov	eax, DWORD PTR _pe$69917[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _full$69920[ebp], ecx
	jmp	SHORT $LN10@toUpperOrT
$LN11@toUpperOrT:
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$69917[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$69917[ebp], eax
	mov	eax, DWORD PTR _pe$69917[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _full$69920[ebp], ecx
	mov	edx, DWORD PTR _pe$69917[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69917[ebp], edx
	mov	eax, DWORD PTR _full$69920[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69917[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _full$69920[ebp], eax
$LN10@toUpperOrT:
; Line 998
	mov	eax, DWORD PTR _pe$69917[ebp]
	add	eax, 2
	mov	DWORD PTR _pe$69917[ebp], eax
; Line 1001
	mov	eax, DWORD PTR _full$69920[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pe$69917[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69917[ebp], edx
; Line 1002
	mov	eax, DWORD PTR _full$69920[ebp]
	sar	eax, 4
	mov	DWORD PTR _full$69920[ebp], eax
; Line 1003
	mov	eax, DWORD PTR _full$69920[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pe$69917[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69917[ebp], edx
; Line 1004
	mov	eax, DWORD PTR _full$69920[ebp]
	sar	eax, 4
	mov	DWORD PTR _full$69920[ebp], eax
; Line 1006
	movsx	eax, BYTE PTR _upperNotTitle$[ebp]
	test	eax, eax
	je	SHORT $LN9@toUpperOrT
; Line 1007
	mov	eax, DWORD PTR _full$69920[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _full$69920[ebp], eax
; Line 1008
	jmp	SHORT $LN8@toUpperOrT
$LN9@toUpperOrT:
; Line 1010
	mov	eax, DWORD PTR _full$69920[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pe$69917[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69917[ebp], edx
; Line 1011
	mov	eax, DWORD PTR _full$69920[ebp]
	sar	eax, 4
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _full$69920[ebp], eax
$LN8@toUpperOrT:
; Line 1014
	cmp	DWORD PTR _full$69920[ebp], 0
	je	SHORT $LN13@toUpperOrT
; Line 1016
	mov	eax, DWORD PTR _pString$[ebp]
	mov	ecx, DWORD PTR _pe$69917[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1019
	mov	eax, DWORD PTR _full$69920[ebp]
	jmp	$LN22@toUpperOrT
$LN13@toUpperOrT:
; Line 1023
	movsx	eax, BYTE PTR _upperNotTitle$[ebp]
	test	eax, eax
	jne	SHORT $LN6@toUpperOrT
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 8
	je	SHORT $LN6@toUpperOrT
; Line 1024
	mov	DWORD PTR _idx$69921[ebp], 3
	jmp	SHORT $LN5@toUpperOrT
$LN6@toUpperOrT:
; Line 1025
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 4
	je	SHORT $LN4@toUpperOrT
; Line 1027
	mov	DWORD PTR _idx$69921[ebp], 2
; Line 1028
	jmp	SHORT $LN5@toUpperOrT
$LN4@toUpperOrT:
; Line 1029
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	jmp	$LN22@toUpperOrT
$LN5@toUpperOrT:
; Line 1031
	movzx	eax, WORD PTR _excWord$69919[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@toUpperOrT
	movzx	eax, WORD PTR _excWord$69919[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69921[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	mov	ecx, DWORD PTR _pe2$69918[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe2$69918[ebp], edx
	mov	eax, DWORD PTR _pe2$69918[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	jmp	SHORT $LN19@toUpperOrT
$LN2@toUpperOrT:
	movzx	eax, WORD PTR _excWord$69919[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69921[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	shl	eax, 1
	mov	ecx, DWORD PTR _pe2$69918[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe2$69918[ebp], edx
	mov	eax, DWORD PTR _pe2$69918[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	mov	edx, DWORD PTR _pe2$69918[ebp]
	add	edx, 2
	mov	DWORD PTR _pe2$69918[ebp], edx
	mov	eax, DWORD PTR _result$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe2$69918[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _result$[ebp], eax
$LN19@toUpperOrT:
; Line 1034
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _c$[ebp]
	jne	SHORT $LN32@toUpperOrT
	mov	ecx, DWORD PTR _result$[ebp]
	not	ecx
	mov	DWORD PTR tv265[ebp], ecx
	jmp	SHORT $LN33@toUpperOrT
$LN32@toUpperOrT:
	mov	edx, DWORD PTR _result$[ebp]
	mov	DWORD PTR tv265[ebp], edx
$LN33@toUpperOrT:
	mov	eax, DWORD PTR tv265[ebp]
$LN22@toUpperOrT:
; Line 1035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?toUpperOrTitle@@YAHPBUUCaseProps@@HP6AHPAXC@Z1PAPB_WPBDPAHC@Z ENDP ; toUpperOrTitle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isPrecededBySoftDotted@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z
_TEXT	SEGMENT
_dir$ = -29						; size = 1
_dotType$ = -20						; size = 4
_c$ = -8						; size = 4
_csp$ = 8						; size = 4
_iter$ = 12						; size = 4
_context$ = 16						; size = 4
?isPrecededBySoftDotted@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z PROC ; isPrecededBySoftDotted, COMDAT
; Line 674
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 679
	cmp	DWORD PTR _iter$[ebp], 0
	jne	SHORT $LN7@isPreceded@2
; Line 680
	xor	al, al
	jmp	SHORT $LN8@isPreceded@2
$LN7@isPreceded@2:
; Line 683
	mov	BYTE PTR _dir$[ebp], -1
	jmp	SHORT $LN6@isPreceded@2
$LN5@isPreceded@2:
	mov	BYTE PTR _dir$[ebp], 0
$LN6@isPreceded@2:
	mov	esi, esp
	movzx	eax, BYTE PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _iter$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN4@isPreceded@2
; Line 684
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	?getDotType@@YAHPBUUCaseProps@@H@Z	; getDotType
	add	esp, 8
	mov	DWORD PTR _dotType$[ebp], eax
; Line 685
	cmp	DWORD PTR _dotType$[ebp], 32		; 00000020H
	jne	SHORT $LN3@isPreceded@2
; Line 686
	mov	al, 1
	jmp	SHORT $LN8@isPreceded@2
	jmp	SHORT $LN2@isPreceded@2
$LN3@isPreceded@2:
; Line 687
	cmp	DWORD PTR _dotType$[ebp], 96		; 00000060H
	je	SHORT $LN2@isPreceded@2
; Line 688
	xor	al, al
	jmp	SHORT $LN8@isPreceded@2
$LN2@isPreceded@2:
; Line 690
	jmp	SHORT $LN5@isPreceded@2
$LN4@isPreceded@2:
; Line 692
	xor	al, al
$LN8@isPreceded@2:
; Line 693
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrecededBySoftDotted@@YACPBUUCaseProps@@P6AHPAXC@Z1@Z ENDP ; isPrecededBySoftDotted
_TEXT	ENDS
PUBLIC	_ucase_toFullTitle_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_toFullTitle_56
_TEXT	SEGMENT
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_iter$ = 16						; size = 4
_context$ = 20						; size = 4
_pString$ = 24						; size = 4
_locale$ = 28						; size = 4
_locCache$ = 32						; size = 4
_ucase_toFullTitle_56 PROC				; COMDAT
; Line 1049
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1050
	push	0
	mov	eax, DWORD PTR _locCache$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pString$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _csp$[ebp]
	push	eax
	call	?toUpperOrTitle@@YAHPBUUCaseProps@@HP6AHPAXC@Z1PAPB_WPBDPAHC@Z ; toUpperOrTitle
	add	esp, 32					; 00000020H
; Line 1051
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_toFullTitle_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_fold_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_fold_56
_TEXT	SEGMENT
tv148 = -256						; size = 4
tv149 = -252						; size = 4
tv150 = -248						; size = 4
tv151 = -244						; size = 4
_idx$69978 = -44					; size = 4
_excWord$69977 = -32					; size = 2
_pe$69976 = -20						; size = 4
_props$ = -8						; size = 2
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_options$ = 16						; size = 4
_ucase_fold_56 PROC					; COMDAT
; Line 1096
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1097
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN27@ucase_fold
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN28@ucase_fold
$LN27@ucase_fold:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN25@ucase_fold
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN26@ucase_fold
$LN25@ucase_fold:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN23@ucase_fold
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN24@ucase_fold
$LN23@ucase_fold:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN21@ucase_fold
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN22@ucase_fold
$LN21@ucase_fold:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN22@ucase_fold:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN24@ucase_fold:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN26@ucase_fold:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN28@ucase_fold:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 1098
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN18@ucase_fold
; Line 1099
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 2
	jl	SHORT $LN17@ucase_fold
; Line 1100
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$LN17@ucase_fold:
; Line 1102
	jmp	$LN16@ucase_fold
$LN18@ucase_fold:
; Line 1103
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$69976[ebp], eax
; Line 1104
	mov	eax, DWORD PTR _pe$69976[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$69977[ebp], cx
	mov	edx, DWORD PTR _pe$69976[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69976[ebp], edx
; Line 1106
	movzx	eax, WORD PTR _excWord$69977[ebp]
	and	eax, 32768				; 00008000H
	je	SHORT $LN15@ucase_fold
; Line 1108
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 255				; 000000ffH
	jne	SHORT $LN14@ucase_fold
; Line 1110
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	jne	SHORT $LN13@ucase_fold
; Line 1112
	mov	eax, 105				; 00000069H
	jmp	$LN19@ucase_fold
	jmp	SHORT $LN12@ucase_fold
$LN13@ucase_fold:
; Line 1113
	cmp	DWORD PTR _c$[ebp], 304			; 00000130H
	jne	SHORT $LN12@ucase_fold
; Line 1115
	mov	eax, DWORD PTR _c$[ebp]
	jmp	$LN19@ucase_fold
$LN12@ucase_fold:
; Line 1117
	jmp	SHORT $LN15@ucase_fold
$LN14@ucase_fold:
; Line 1119
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	jne	SHORT $LN9@ucase_fold
; Line 1121
	mov	eax, 305				; 00000131H
	jmp	$LN19@ucase_fold
	jmp	SHORT $LN15@ucase_fold
$LN9@ucase_fold:
; Line 1122
	cmp	DWORD PTR _c$[ebp], 304			; 00000130H
	jne	SHORT $LN15@ucase_fold
; Line 1124
	mov	eax, 105				; 00000069H
	jmp	$LN19@ucase_fold
$LN15@ucase_fold:
; Line 1128
	movzx	eax, WORD PTR _excWord$69977[ebp]
	and	eax, 2
	je	SHORT $LN6@ucase_fold
; Line 1129
	mov	DWORD PTR _idx$69978[ebp], 1
	jmp	SHORT $LN5@ucase_fold
$LN6@ucase_fold:
; Line 1130
	movzx	eax, WORD PTR _excWord$69977[ebp]
	and	eax, 1
	je	SHORT $LN4@ucase_fold
; Line 1131
	mov	DWORD PTR _idx$69978[ebp], 0
; Line 1132
	jmp	SHORT $LN5@ucase_fold
$LN4@ucase_fold:
; Line 1133
	mov	eax, DWORD PTR _c$[ebp]
	jmp	$LN19@ucase_fold
$LN5@ucase_fold:
; Line 1135
	movzx	eax, WORD PTR _excWord$69977[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@ucase_fold
	movzx	eax, WORD PTR _excWord$69977[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69978[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	mov	ecx, DWORD PTR _pe$69976[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69976[ebp], edx
	mov	eax, DWORD PTR _pe$69976[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	jmp	SHORT $LN16@ucase_fold
$LN2@ucase_fold:
	movzx	eax, WORD PTR _excWord$69977[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$69978[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	shl	eax, 1
	mov	ecx, DWORD PTR _pe$69976[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$69976[ebp], edx
	mov	eax, DWORD PTR _pe$69976[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _pe$69976[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$69976[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$69976[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _c$[ebp], eax
$LN16@ucase_fold:
; Line 1137
	mov	eax, DWORD PTR _c$[ebp]
$LN19@ucase_fold:
; Line 1138
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_fold_56 ENDP
_TEXT	ENDS
PUBLIC	_ucase_toFullFolding_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucase_toFullFolding_56
_TEXT	SEGMENT
tv148 = -292						; size = 4
tv149 = -288						; size = 4
tv150 = -284						; size = 4
tv245 = -280						; size = 4
tv151 = -280						; size = 4
_idx$70016 = -80					; size = 4
_full$70015 = -68					; size = 4
_excWord$70014 = -56					; size = 2
_pe2$70013 = -44					; size = 4
_pe$70012 = -32						; size = 4
_props$ = -20						; size = 2
_result$ = -8						; size = 4
_csp$ = 8						; size = 4
_c$ = 12						; size = 4
_pString$ = 16						; size = 4
_options$ = 20						; size = 4
_ucase_toFullFolding_56 PROC				; COMDAT
; Line 1159
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1160
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1161
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN32@ucase_toFu@2
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv151[ebp], edx
	jmp	$LN33@ucase_toFu@2
$LN32@ucase_toFu@2:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN30@ucase_toFu@2
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	$LN31@ucase_toFu@2
$LN30@ucase_toFu@2:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN28@ucase_toFu@2
	mov	edx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN29@ucase_toFu@2
$LN28@ucase_toFu@2:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jl	SHORT $LN26@ucase_toFu@2
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN27@ucase_toFu@2
$LN26@ucase_toFu@2:
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _csp$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv148[ebp], eax
$LN27@ucase_toFu@2:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN29@ucase_toFu@2:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN31@ucase_toFu@2:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], eax
$LN33@ucase_toFu@2:
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR tv151[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _props$[ebp], cx
; Line 1162
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN23@ucase_toFu@2
; Line 1163
	movzx	eax, WORD PTR _props$[ebp]
	and	eax, 3
	cmp	eax, 2
	jl	SHORT $LN22@ucase_toFu@2
; Line 1164
	movsx	eax, WORD PTR _props$[ebp]
	sar	eax, 7
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _result$[ebp], eax
$LN22@ucase_toFu@2:
; Line 1166
	jmp	$LN21@ucase_toFu@2
$LN23@ucase_toFu@2:
; Line 1167
	movzx	eax, WORD PTR _props$[ebp]
	sar	eax, 5
	mov	ecx, DWORD PTR _csp$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _pe$70012[ebp], eax
; Line 1168
	mov	eax, DWORD PTR _pe$70012[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _excWord$70014[ebp], cx
	mov	edx, DWORD PTR _pe$70012[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$70012[ebp], edx
; Line 1171
	mov	eax, DWORD PTR _pe$70012[ebp]
	mov	DWORD PTR _pe2$70013[ebp], eax
; Line 1173
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 32768				; 00008000H
	je	SHORT $LN20@ucase_toFu@2
; Line 1175
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 255				; 000000ffH
	jne	SHORT $LN19@ucase_toFu@2
; Line 1177
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	jne	SHORT $LN18@ucase_toFu@2
; Line 1179
	mov	eax, 105				; 00000069H
	jmp	$LN24@ucase_toFu@2
	jmp	SHORT $LN17@ucase_toFu@2
$LN18@ucase_toFu@2:
; Line 1180
	cmp	DWORD PTR _c$[ebp], 304			; 00000130H
	jne	SHORT $LN17@ucase_toFu@2
; Line 1182
	mov	eax, DWORD PTR _pString$[ebp]
	mov	DWORD PTR [eax], OFFSET _iDot
; Line 1183
	mov	eax, 2
	jmp	$LN24@ucase_toFu@2
$LN17@ucase_toFu@2:
; Line 1185
	jmp	SHORT $LN15@ucase_toFu@2
$LN19@ucase_toFu@2:
; Line 1187
	cmp	DWORD PTR _c$[ebp], 73			; 00000049H
	jne	SHORT $LN14@ucase_toFu@2
; Line 1189
	mov	eax, 305				; 00000131H
	jmp	$LN24@ucase_toFu@2
	jmp	SHORT $LN15@ucase_toFu@2
$LN14@ucase_toFu@2:
; Line 1190
	cmp	DWORD PTR _c$[ebp], 304			; 00000130H
	jne	SHORT $LN15@ucase_toFu@2
; Line 1192
	mov	eax, 105				; 00000069H
	jmp	$LN24@ucase_toFu@2
$LN15@ucase_toFu@2:
; Line 1194
	jmp	$LN11@ucase_toFu@2
$LN20@ucase_toFu@2:
; Line 1195
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 128				; 00000080H
	je	$LN11@ucase_toFu@2
; Line 1196
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN9@ucase_toFu@2
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	mov	edx, DWORD PTR _pe$70012[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$70012[ebp], eax
	mov	eax, DWORD PTR _pe$70012[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _full$70015[ebp], ecx
	jmp	SHORT $LN8@ucase_toFu@2
$LN9@ucase_toFu@2:
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 127				; 0000007fH
	movzx	ecx, BYTE PTR _flagsOffset[eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _pe$70012[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _pe$70012[ebp], eax
	mov	eax, DWORD PTR _pe$70012[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _full$70015[ebp], ecx
	mov	edx, DWORD PTR _pe$70012[ebp]
	add	edx, 2
	mov	DWORD PTR _pe$70012[ebp], edx
	mov	eax, DWORD PTR _full$70015[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe$70012[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _full$70015[ebp], eax
$LN8@ucase_toFu@2:
; Line 1199
	mov	eax, DWORD PTR _pe$70012[ebp]
	add	eax, 2
	mov	DWORD PTR _pe$70012[ebp], eax
; Line 1202
	mov	eax, DWORD PTR _full$70015[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pe$70012[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe$70012[ebp], edx
; Line 1203
	mov	eax, DWORD PTR _full$70015[ebp]
	sar	eax, 4
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _full$70015[ebp], eax
; Line 1205
	je	SHORT $LN11@ucase_toFu@2
; Line 1207
	mov	eax, DWORD PTR _pString$[ebp]
	mov	ecx, DWORD PTR _pe$70012[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1210
	mov	eax, DWORD PTR _full$70015[ebp]
	jmp	$LN24@ucase_toFu@2
$LN11@ucase_toFu@2:
; Line 1214
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 2
	je	SHORT $LN6@ucase_toFu@2
; Line 1215
	mov	DWORD PTR _idx$70016[ebp], 1
	jmp	SHORT $LN5@ucase_toFu@2
$LN6@ucase_toFu@2:
; Line 1216
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 1
	je	SHORT $LN4@ucase_toFu@2
; Line 1217
	mov	DWORD PTR _idx$70016[ebp], 0
; Line 1218
	jmp	SHORT $LN5@ucase_toFu@2
$LN4@ucase_toFu@2:
; Line 1219
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	jmp	$LN24@ucase_toFu@2
$LN5@ucase_toFu@2:
; Line 1221
	movzx	eax, WORD PTR _excWord$70014[ebp]
	and	eax, 256				; 00000100H
	jne	SHORT $LN2@ucase_toFu@2
	movzx	eax, WORD PTR _excWord$70014[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$70016[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	mov	ecx, DWORD PTR _pe2$70013[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe2$70013[ebp], edx
	mov	eax, DWORD PTR _pe2$70013[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	jmp	SHORT $LN21@ucase_toFu@2
$LN2@ucase_toFu@2:
	movzx	eax, WORD PTR _excWord$70014[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR _idx$70016[ebp]
	shl	edx, cl
	sub	edx, 1
	and	eax, edx
	movzx	eax, BYTE PTR _flagsOffset[eax]
	shl	eax, 1
	mov	ecx, DWORD PTR _pe2$70013[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pe2$70013[ebp], edx
	mov	eax, DWORD PTR _pe2$70013[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	mov	edx, DWORD PTR _pe2$70013[ebp]
	add	edx, 2
	mov	DWORD PTR _pe2$70013[ebp], edx
	mov	eax, DWORD PTR _result$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pe2$70013[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _result$[ebp], eax
$LN21@ucase_toFu@2:
; Line 1224
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _c$[ebp]
	jne	SHORT $LN34@ucase_toFu@2
	mov	ecx, DWORD PTR _result$[ebp]
	not	ecx
	mov	DWORD PTR tv245[ebp], ecx
	jmp	SHORT $LN35@ucase_toFu@2
$LN34@ucase_toFu@2:
	mov	edx, DWORD PTR _result$[ebp]
	mov	DWORD PTR tv245[ebp], edx
$LN35@ucase_toFu@2:
	mov	eax, DWORD PTR tv245[ebp]
$LN24@ucase_toFu@2:
; Line 1225
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucase_toFullFolding_56 ENDP
_TEXT	ENDS
PUBLIC	_u_isULowercase_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_isULowercase_56
_TEXT	SEGMENT
_c$ = 8							; size = 4
_u_isULowercase_56 PROC					; COMDAT
; Line 1234
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1235
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET _ucase_props_singleton
	call	_ucase_getType_56
	add	esp, 8
	cmp	eax, 1
	sete	al
; Line 1236
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_isULowercase_56 ENDP
_TEXT	ENDS
PUBLIC	_u_isUUppercase_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_isUUppercase_56
_TEXT	SEGMENT
_c$ = 8							; size = 4
_u_isUUppercase_56 PROC					; COMDAT
; Line 1239
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1240
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET _ucase_props_singleton
	call	_ucase_getType_56
	add	esp, 8
	cmp	eax, 2
	sete	al
; Line 1241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_isUUppercase_56 ENDP
_TEXT	ENDS
PUBLIC	_u_tolower_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_tolower_56
_TEXT	SEGMENT
_c$ = 8							; size = 4
_u_tolower_56 PROC					; COMDAT
; Line 1245
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1246
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET _ucase_props_singleton
	call	_ucase_tolower_56
	add	esp, 8
; Line 1247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_tolower_56 ENDP
_TEXT	ENDS
PUBLIC	_u_toupper_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_toupper_56
_TEXT	SEGMENT
_c$ = 8							; size = 4
_u_toupper_56 PROC					; COMDAT
; Line 1251
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1252
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET _ucase_props_singleton
	call	_ucase_toupper_56
	add	esp, 8
; Line 1253
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_toupper_56 ENDP
_TEXT	ENDS
PUBLIC	_u_totitle_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_totitle_56
_TEXT	SEGMENT
_c$ = 8							; size = 4
_u_totitle_56 PROC					; COMDAT
; Line 1257
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1258
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET _ucase_props_singleton
	call	_ucase_totitle_56
	add	esp, 8
; Line 1259
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_totitle_56 ENDP
_TEXT	ENDS
PUBLIC	_u_foldCase_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_foldCase_56
_TEXT	SEGMENT
_c$ = 8							; size = 4
_options$ = 12						; size = 4
_u_foldCase_56 PROC					; COMDAT
; Line 1263
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1264
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	push	OFFSET _ucase_props_singleton
	call	_ucase_fold_56
	add	esp, 12					; 0000000cH
; Line 1265
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_foldCase_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_ucase_hasBinaryProperty_56
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucase_hasBinaryProperty_56
_TEXT	SEGMENT
tv65 = -232						; size = 4
tv190 = -229						; size = 1
_csp$ = -32						; size = 4
_locCache$ = -20					; size = 4
_resultString$ = -8					; size = 4
_c$ = 8							; size = 4
_which$ = 12						; size = 4
_ucase_hasBinaryProperty_56 PROC			; COMDAT
; Line 1268
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1272
	mov	DWORD PTR _csp$[ebp], OFFSET _ucase_props_singleton
; Line 1273
	cmp	DWORD PTR _csp$[ebp], 0
	jne	SHORT $LN14@ucase_hasB
; Line 1274
	xor	eax, eax
	jmp	$LN15@ucase_hasB
$LN14@ucase_hasB:
; Line 1276
	mov	eax, DWORD PTR _which$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 22					; 00000016H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 33			; 00000021H
	ja	$LN1@ucase_hasB
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN19@ucase_hasB[edx]
	jmp	DWORD PTR $LN24@ucase_hasB[eax*4]
$LN11@ucase_hasB:
; Line 1278
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_getType_56
	add	esp, 8
	cmp	eax, 1
	sete	dl
	movsx	eax, dl
	jmp	$LN15@ucase_hasB
$LN10@ucase_hasB:
; Line 1280
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_getType_56
	add	esp, 8
	cmp	eax, 2
	sete	dl
	movsx	eax, dl
	jmp	$LN15@ucase_hasB
$LN9@ucase_hasB:
; Line 1282
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_isSoftDotted_56
	add	esp, 8
	movsx	eax, al
	jmp	$LN15@ucase_hasB
$LN8@ucase_hasB:
; Line 1284
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_isCaseSensitive_56
	add	esp, 8
	movsx	eax, al
	jmp	$LN15@ucase_hasB
$LN7@ucase_hasB:
; Line 1286
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_getType_56
	add	esp, 8
	test	eax, eax
	setne	dl
	movsx	eax, dl
	jmp	$LN15@ucase_hasB
$LN6@ucase_hasB:
; Line 1288
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_getTypeOrIgnorable_56
	add	esp, 8
	sar	eax, 2
	movsx	eax, al
	jmp	$LN15@ucase_hasB
$LN5@ucase_hasB:
; Line 1302
	mov	DWORD PTR _locCache$[ebp], 1
; Line 1303
	lea	eax, DWORD PTR _locCache$[ebp]
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _resultString$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _csp$[ebp]
	push	eax
	call	_ucase_toFullLower_56
	add	esp, 28					; 0000001cH
	test	eax, eax
	setge	cl
	movsx	eax, cl
	jmp	$LN15@ucase_hasB
$LN4@ucase_hasB:
; Line 1305
	mov	DWORD PTR _locCache$[ebp], 1
; Line 1306
	lea	eax, DWORD PTR _locCache$[ebp]
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _resultString$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _csp$[ebp]
	push	eax
	call	_ucase_toFullUpper_56
	add	esp, 28					; 0000001cH
	test	eax, eax
	setge	cl
	movsx	eax, cl
	jmp	$LN15@ucase_hasB
$LN3@ucase_hasB:
; Line 1308
	mov	DWORD PTR _locCache$[ebp], 1
; Line 1309
	lea	eax, DWORD PTR _locCache$[ebp]
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _resultString$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _csp$[ebp]
	push	eax
	call	_ucase_toFullTitle_56
	add	esp, 28					; 0000001cH
	test	eax, eax
	setge	cl
	movsx	eax, cl
	jmp	$LN15@ucase_hasB
$LN2@ucase_hasB:
; Line 1312
	mov	DWORD PTR _locCache$[ebp], 1
; Line 1316
	lea	eax, DWORD PTR _locCache$[ebp]
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _resultString$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _csp$[ebp]
	push	eax
	call	_ucase_toFullLower_56
	add	esp, 28					; 0000001cH
	test	eax, eax
	jge	SHORT $LN17@ucase_hasB
	lea	ecx, DWORD PTR _locCache$[ebp]
	push	ecx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _resultString$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _csp$[ebp]
	push	ecx
	call	_ucase_toFullUpper_56
	add	esp, 28					; 0000001cH
	test	eax, eax
	jge	SHORT $LN17@ucase_hasB
	lea	edx, DWORD PTR _locCache$[ebp]
	push	edx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _resultString$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _csp$[ebp]
	push	edx
	call	_ucase_toFullTitle_56
	add	esp, 28					; 0000001cH
	test	eax, eax
	jge	SHORT $LN17@ucase_hasB
	mov	BYTE PTR tv190[ebp], 0
	jmp	SHORT $LN18@ucase_hasB
$LN17@ucase_hasB:
	mov	BYTE PTR tv190[ebp], 1
$LN18@ucase_hasB:
	movsx	eax, BYTE PTR tv190[ebp]
	jmp	SHORT $LN15@ucase_hasB
$LN1@ucase_hasB:
; Line 1318
	xor	eax, eax
$LN15@ucase_hasB:
; Line 1320
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@ucase_hasB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@ucase_hasB:
	DD	2
	DD	$LN22@ucase_hasB
$LN22@ucase_hasB:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN20@ucase_hasB
	DD	-20					; ffffffecH
	DD	4
	DD	$LN21@ucase_hasB
$LN21@ucase_hasB:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	0
$LN20@ucase_hasB:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
	npad	2
$LN24@ucase_hasB:
	DD	$LN11@ucase_hasB
	DD	$LN9@ucase_hasB
	DD	$LN10@ucase_hasB
	DD	$LN8@ucase_hasB
	DD	$LN7@ucase_hasB
	DD	$LN6@ucase_hasB
	DD	$LN5@ucase_hasB
	DD	$LN4@ucase_hasB
	DD	$LN3@ucase_hasB
	DD	$LN2@ucase_hasB
	DD	$LN1@ucase_hasB
$LN19@ucase_hasB:
	DB	0
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	1
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	2
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	3
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	10					; 0000000aH
	DB	9
_ucase_hasBinaryProperty_56 ENDP
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
END

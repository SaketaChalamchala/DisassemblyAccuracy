; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\cmemory.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_gValidMemorySink DB 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_zeroMem DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??_C@_1CC@EAFADDBO@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FI@CJNEAOGH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??uprv_checkValidMemory@@9@9	; `uprv_checkValidMemory'::`2'::__LINE__Var
PUBLIC	_uprv_checkValidMemory
EXTRN	__imp___wassert:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_1CC@EAFADDBO@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
; File d:\mozilla\intl\icu\source\common\cmemory.c
CONST	SEGMENT
??_C@_1CC@EAFADDBO@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, '(', 00H
	DB	'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')'
	DB	00H, '0', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@CJNEAOGH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FI@CJNEAOGH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'c', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r'
	DB	00H, 'y', 00H, '.', 00H, 'c', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??uprv_checkValidMemory@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??uprv_checkValidMemory@@9@9 DD 02eH	; `uprv_checkValidMemory'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_checkValidMemory
_TEXT	SEGMENT
_i$ = -32						; size = 4
_c$ = -17						; size = 1
_s$ = -8						; size = 4
_p$ = 8							; size = 4
_n$ = 12						; size = 4
_uprv_checkValidMemory PROC				; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 54
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 55
	mov	al, BYTE PTR _gValidMemorySink
	mov	BYTE PTR _c$[ebp], al
; Line 57
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@uprv_check
	mov	eax, DWORD PTR ?__LINE__Var@?1??uprv_checkValidMemory@@9@9
	add	eax, 11					; 0000000bH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FI@CJNEAOGH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CC@EAFADDBO@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@uprv_check:
; Line 58
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@uprv_check
$LN2@uprv_check:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@uprv_check:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jae	SHORT $LN1@uprv_check
; Line 59
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	movsx	edx, BYTE PTR _c$[ebp]
	xor	edx, ecx
	mov	BYTE PTR _c$[ebp], dl
; Line 60
	jmp	SHORT $LN2@uprv_check
$LN1@uprv_check:
; Line 61
	mov	al, BYTE PTR _c$[ebp]
	mov	BYTE PTR _gValidMemorySink, al
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_checkValidMemory ENDP
_TEXT	ENDS
PUBLIC	_uprv_malloc_56
EXTRN	__imp__malloc:PROC
_BSS	SEGMENT
	ALIGN	4

_pContext DD	01H DUP (?)
_pAlloc	DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _uprv_malloc_56
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_malloc_56 PROC					; COMDAT
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	cmp	DWORD PTR _s$[ebp], 0
	jbe	SHORT $LN4@uprv_mallo
; Line 77
	cmp	DWORD PTR _pAlloc, 0
	je	SHORT $LN3@uprv_mallo
; Line 78
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext
	push	ecx
	call	DWORD PTR _pAlloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@uprv_mallo
; Line 79
	jmp	SHORT $LN2@uprv_mallo
$LN3@uprv_mallo:
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@uprv_mallo
$LN2@uprv_mallo:
; Line 82
	jmp	SHORT $LN5@uprv_mallo
$LN4@uprv_mallo:
; Line 83
	mov	eax, OFFSET _zeroMem
$LN5@uprv_mallo:
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_malloc_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_realloc_56
EXTRN	__imp__realloc:PROC
EXTRN	__imp__free:PROC
_BSS	SEGMENT
_pRealloc DD	01H DUP (?)
_pFree	DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _uprv_realloc_56
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_size$ = 12						; size = 4
_uprv_realloc_56 PROC					; COMDAT
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	cmp	DWORD PTR _buffer$[ebp], OFFSET _zeroMem
	jne	SHORT $LN8@uprv_reall
; Line 94
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	jmp	$LN9@uprv_reall
	jmp	$LN9@uprv_reall
$LN8@uprv_reall:
; Line 95
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN6@uprv_reall
; Line 96
	cmp	DWORD PTR _pFree, 0
	je	SHORT $LN5@uprv_reall
; Line 97
	mov	esi, esp
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext
	push	ecx
	call	DWORD PTR _pFree
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 98
	jmp	SHORT $LN4@uprv_reall
$LN5@uprv_reall:
; Line 99
	mov	esi, esp
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@uprv_reall:
; Line 101
	mov	eax, OFFSET _zeroMem
	jmp	SHORT $LN9@uprv_reall
; Line 102
	jmp	SHORT $LN9@uprv_reall
$LN6@uprv_reall:
; Line 103
	cmp	DWORD PTR _pRealloc, 0
	je	SHORT $LN2@uprv_reall
; Line 104
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext
	push	edx
	call	DWORD PTR _pRealloc
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN9@uprv_reall
; Line 105
	jmp	SHORT $LN9@uprv_reall
$LN2@uprv_reall:
; Line 106
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__realloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@uprv_reall:
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_realloc_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_free_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_free_56
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_uprv_free_56 PROC					; COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 117
	cmp	DWORD PTR _buffer$[ebp], OFFSET _zeroMem
	je	SHORT $LN4@uprv_free_
; Line 118
	cmp	DWORD PTR _pFree, 0
	je	SHORT $LN2@uprv_free_
; Line 119
	mov	esi, esp
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext
	push	ecx
	call	DWORD PTR _pFree
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	jmp	SHORT $LN4@uprv_free_
$LN2@uprv_free_:
; Line 121
	mov	esi, esp
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@uprv_free_:
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_free_56 ENDP
_TEXT	ENDS
PUBLIC	_uprv_calloc_56
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_calloc_56
_TEXT	SEGMENT
_mem$ = -8						; size = 4
_num$ = 8						; size = 4
_size$ = 12						; size = 4
_uprv_calloc_56 PROC					; COMDAT
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 128
	mov	DWORD PTR _mem$[ebp], 0
; Line 129
	mov	eax, DWORD PTR _size$[ebp]
	imul	eax, DWORD PTR _num$[ebp]
	mov	DWORD PTR _size$[ebp], eax
; Line 130
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _mem$[ebp], eax
; Line 131
	cmp	DWORD PTR _mem$[ebp], 0
	je	SHORT $LN1@uprv_callo
; Line 132
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN1@uprv_callo:
; Line 134
	mov	eax, DWORD PTR _mem$[ebp]
; Line 135
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_calloc_56 ENDP
_TEXT	ENDS
PUBLIC	_u_setMemoryFunctions_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_setMemoryFunctions_56
_TEXT	SEGMENT
_context$ = 8						; size = 4
_a$ = 12						; size = 4
_r$ = 16						; size = 4
_f$ = 20						; size = 4
_status$ = 24						; size = 4
_u_setMemoryFunctions_56 PROC				; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 140
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@u_setMemor
; Line 141
	jmp	SHORT $LN4@u_setMemor
$LN3@u_setMemor:
; Line 143
	cmp	DWORD PTR _a$[ebp], 0
	je	SHORT $LN1@u_setMemor
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN1@u_setMemor
	cmp	DWORD PTR _f$[ebp], 0
	jne	SHORT $LN2@u_setMemor
$LN1@u_setMemor:
; Line 144
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 145
	jmp	SHORT $LN4@u_setMemor
$LN2@u_setMemor:
; Line 147
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _pContext, eax
; Line 148
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _pAlloc, eax
; Line 149
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _pRealloc, eax
; Line 150
	mov	eax, DWORD PTR _f$[ebp]
	mov	DWORD PTR _pFree, eax
$LN4@u_setMemor:
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_setMemoryFunctions_56 ENDP
_TEXT	ENDS
PUBLIC	_cmemory_cleanup_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _cmemory_cleanup_56
_TEXT	SEGMENT
_cmemory_cleanup_56 PROC				; COMDAT
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 155
	mov	DWORD PTR _pContext, 0
; Line 156
	mov	DWORD PTR _pAlloc, 0
; Line 157
	mov	DWORD PTR _pRealloc, 0
; Line 158
	mov	DWORD PTR _pFree, 0
; Line 159
	mov	al, 1
; Line 160
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_cmemory_cleanup_56 ENDP
_TEXT	ENDS
END

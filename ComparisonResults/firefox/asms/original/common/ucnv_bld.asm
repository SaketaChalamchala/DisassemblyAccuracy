; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucnv_bld.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
EXTRN	__CompoundTextData_56:BYTE
EXTRN	__IMAPData_56:BYTE
EXTRN	__CESU8Data_56:BYTE
EXTRN	__UTF32Data_56:BYTE
EXTRN	__UTF16Data_56:BYTE
EXTRN	__Bocu1Data_56:BYTE
EXTRN	__UTF7Data_56:BYTE
EXTRN	__ASCIIData_56:BYTE
EXTRN	__ISCIIData_56:BYTE
EXTRN	__SCSUData_56:BYTE
EXTRN	__HZData_56:BYTE
EXTRN	__LMBCSData19_56:BYTE
EXTRN	__LMBCSData18_56:BYTE
EXTRN	__LMBCSData17_56:BYTE
EXTRN	__LMBCSData16_56:BYTE
EXTRN	__LMBCSData11_56:BYTE
EXTRN	__LMBCSData8_56:BYTE
EXTRN	__LMBCSData6_56:BYTE
EXTRN	__LMBCSData5_56:BYTE
EXTRN	__LMBCSData4_56:BYTE
EXTRN	__LMBCSData3_56:BYTE
EXTRN	__LMBCSData2_56:BYTE
EXTRN	__LMBCSData1_56:BYTE
EXTRN	__ISO2022Data_56:BYTE
EXTRN	__UTF32LEData_56:BYTE
EXTRN	__UTF32BEData_56:BYTE
EXTRN	__UTF16LEData_56:BYTE
EXTRN	__UTF16BEData_56:BYTE
EXTRN	__UTF8Data_56:BYTE
EXTRN	__Latin1Data_56:BYTE
EXTRN	__MBCSData_56:BYTE
_BSS	SEGMENT
_SHARED_DATA_HASHTABLE DD 01H DUP (?)
_cnvCacheMutex DB 020H DUP (?)
_gAvailableConverters DD 01H DUP (?)
_gAvailableConverterCount DW 01H DUP (?)
	ALIGN	4

_gAvailableConvertersInitOnce DQ 01H DUP (?)
_gDefaultConverterName DD 01H DUP (?)
_gDefaultAlgorithmicSharedData DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_converterData DD 00H
	DD	00H
	DD	FLAT:__MBCSData_56
	DD	FLAT:__Latin1Data_56
	DD	FLAT:__UTF8Data_56
	DD	FLAT:__UTF16BEData_56
	DD	FLAT:__UTF16LEData_56
	DD	FLAT:__UTF32BEData_56
	DD	FLAT:__UTF32LEData_56
	DD	00H
	DD	FLAT:__ISO2022Data_56
	DD	FLAT:__LMBCSData1_56
	DD	FLAT:__LMBCSData2_56
	DD	FLAT:__LMBCSData3_56
	DD	FLAT:__LMBCSData4_56
	DD	FLAT:__LMBCSData5_56
	DD	FLAT:__LMBCSData6_56
	DD	FLAT:__LMBCSData8_56
	DD	FLAT:__LMBCSData11_56
	DD	FLAT:__LMBCSData16_56
	DD	FLAT:__LMBCSData17_56
	DD	FLAT:__LMBCSData18_56
	DD	FLAT:__LMBCSData19_56
	DD	FLAT:__HZData_56
	DD	FLAT:__SCSUData_56
	DD	FLAT:__ISCIIData_56
	DD	FLAT:__ASCIIData_56
	DD	FLAT:__UTF7Data_56
	DD	FLAT:__Bocu1Data_56
	DD	FLAT:__UTF16Data_56
	DD	FLAT:__UTF32Data_56
	DD	FLAT:__CESU8Data_56
	DD	FLAT:__IMAPData_56
	DD	FLAT:__CompoundTextData_56
_DATA_TYPE DB	'cnv', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33520 = -32					; size = 4
_len$33519 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33519[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33520[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33519[ebp]
	cmp	ecx, DWORD PTR _textLength$33520[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33519[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T78704 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T78704[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T78704[ebp]
	or	eax, 1
	mov	DWORD PTR $T78704[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??_7StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`vftable'
PUBLIC	??0StringEnumeration@icu_56@@QAE@ABV01@@Z	; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??_R4StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`vector deleting destructor'
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringEnumeration@icu_56@@6B@ DD 00H		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringEnumeration@icu_56@@@8
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7StringEnumeration@icu_56@@6B@ DD FLAT:??_R4StringEnumeration@icu_56@@6B@ ; icu_56::StringEnumeration::`vftable'
	DD	FLAT:??_EStringEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0StringEnumeration@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringEnumeration::StringEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringEnumeration@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringEnumeration::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$34228 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::StringEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
	mov	DWORD PTR _$S1$34228[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$34228[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$34228[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$34228[ebp], 32		; 00000020H
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$34228[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$34228[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::StringEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`scalar deleting destructor'
EXTRN	??1StringEnumeration@icu_56@@UAE@XZ:PROC	; icu_56::StringEnumeration::~StringEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	108					; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z		; icu_56::Mutex::Mutex
PUBLIC	??_FMutex@icu_56@@QAEXXZ			; icu_56::Mutex::`default constructor closure'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_FMutex@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_FMutex@icu_56@@QAEXXZ PROC				; icu_56::Mutex::`default constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z	; icu_56::Mutex::Mutex
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_FMutex@icu_56@@QAEXXZ ENDP				; icu_56::Mutex::`default constructor closure'
_TEXT	ENDS
EXTRN	_umtx_lock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mutex$ = 8						; size = 4
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z PROC			; icu_56::Mutex::Mutex, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\mutex.h
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mutex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_umtx_lock_56
	add	esp, 4
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z ENDP			; icu_56::Mutex::Mutex
_TEXT	ENDS
PUBLIC	??1Mutex@icu_56@@QAE@XZ				; icu_56::Mutex::~Mutex
EXTRN	_umtx_unlock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Mutex@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Mutex@icu_56@@QAE@XZ PROC				; icu_56::Mutex::~Mutex, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_umtx_unlock_56
	add	esp, 4
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Mutex@icu_56@@QAE@XZ ENDP				; icu_56::Mutex::~Mutex
_TEXT	ENDS
PUBLIC	_ucnv_load_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_load_56
_TEXT	SEGMENT
_mySharedConverterData$ = -8				; size = 4
_pArgs$ = 8						; size = 4
_err$ = 12						; size = 4
_ucnv_load_56 PROC					; COMDAT
; File d:\mozilla\intl\icu\source\common\ucnv_bld.cpp
; Line 536
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 539
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN8@ucnv_load_
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@ucnv_load_
$LN8@ucnv_load_:
; Line 540
	xor	eax, eax
	jmp	$LN10@ucnv_load_
$LN9@ucnv_load_:
; Line 543
	mov	eax, DWORD PTR _pArgs$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@ucnv_load_
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN7@ucnv_load_
; Line 545
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?createConverterFromFile@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; createConverterFromFile
	add	esp, 8
	jmp	SHORT $LN10@ucnv_load_
$LN7@ucnv_load_:
; Line 548
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?ucnv_getSharedConverterData@@YAPAUUConverterSharedData@@PBD@Z ; ucnv_getSharedConverterData
	add	esp, 4
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 549
	cmp	DWORD PTR _mySharedConverterData$[ebp], 0
	jne	SHORT $LN6@ucnv_load_
; Line 552
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?createConverterFromFile@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; createConverterFromFile
	add	esp, 8
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 553
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN4@ucnv_load_
	cmp	DWORD PTR _mySharedConverterData$[ebp], 0
	jne	SHORT $LN5@ucnv_load_
$LN4@ucnv_load_:
; Line 555
	xor	eax, eax
	jmp	SHORT $LN10@ucnv_load_
	jmp	SHORT $LN3@ucnv_load_
$LN5@ucnv_load_:
; Line 557
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN3@ucnv_load_
; Line 560
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	push	eax
	call	?ucnv_shareConverterData@@YAXPAUUConverterSharedData@@@Z ; ucnv_shareConverterData
	add	esp, 4
$LN3@ucnv_load_:
; Line 563
	jmp	SHORT $LN1@ucnv_load_
$LN6@ucnv_load_:
; Line 567
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _mySharedConverterData$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN1@ucnv_load_:
; Line 570
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
$LN10@ucnv_load_:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_load_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	_udata_close_56:PROC
EXTRN	_udata_openChoice_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createConverterFromFile@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_sharedData$ = -20					; size = 4
_data$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_err$ = 12						; size = 4
?createConverterFromFile@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z PROC ; createConverterFromFile, COMDAT
; File d:\mozilla\intl\icu\source\common\ucnv_bld.cpp
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 340
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@createConv
; Line 342
	xor	eax, eax
	jmp	$LN4@createConv
$LN3@createConv:
; Line 347
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	push	OFFSET ?isCnvAcceptable@@YACPAXPBD1PBUUDataInfo@@@Z ; isCnvAcceptable
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	push	OFFSET _DATA_TYPE
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_udata_openChoice_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _data$[ebp], eax
; Line 348
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createConv
; Line 351
	xor	eax, eax
	jmp	SHORT $LN4@createConv
$LN2@createConv:
; Line 354
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	push	edx
	call	?ucnv_data_unFlattenClone@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAUUDataMemory@@PAW4UErrorCode@@@Z ; ucnv_data_unFlattenClone
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sharedData$[ebp], eax
; Line 355
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@createConv
; Line 357
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_udata_close_56
	add	esp, 4
; Line 359
	xor	eax, eax
	jmp	SHORT $LN4@createConv
$LN1@createConv:
; Line 370
	mov	eax, DWORD PTR _sharedData$[ebp]
$LN4@createConv:
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createConverterFromFile@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ENDP ; createConverterFromFile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isCnvAcceptable@@YACPAXPBD1PBUUDataInfo@@@Z
_TEXT	SEGMENT
tv95 = -193						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_pInfo$ = 20						; size = 4
?isCnvAcceptable@@YACPAXPBD1PBUUDataInfo@@@Z PROC	; isCnvAcceptable, COMDAT
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 275
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 20					; 00000014H
	jl	SHORT $LN3@isCnvAccep
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	test	eax, eax
	jne	SHORT $LN3@isCnvAccep
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+5]
	test	edx, edx
	jne	SHORT $LN3@isCnvAccep
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	cmp	ecx, 2
	jne	SHORT $LN3@isCnvAccep
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	cmp	eax, 99					; 00000063H
	jne	SHORT $LN3@isCnvAccep
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+9]
	cmp	edx, 110				; 0000006eH
	jne	SHORT $LN3@isCnvAccep
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 118				; 00000076H
	jne	SHORT $LN3@isCnvAccep
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+11]
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN3@isCnvAccep
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+12]
	cmp	edx, 6
	jne	SHORT $LN3@isCnvAccep
	mov	BYTE PTR tv95[ebp], 1
	jmp	SHORT $LN4@isCnvAccep
$LN3@isCnvAccep:
	mov	BYTE PTR tv95[ebp], 0
$LN4@isCnvAccep:
	mov	al, BYTE PTR tv95[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCnvAcceptable@@YACPAXPBD1PBUUDataInfo@@@Z ENDP	; isCnvAcceptable
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_udata_getMemory_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_data_unFlattenClone@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAUUDataMemory@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_type$ = -44						; size = 4
_data$ = -32						; size = 4
_source$ = -20						; size = 4
_raw$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pData$ = 12						; size = 4
_status$ = 16						; size = 4
?ucnv_data_unFlattenClone@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAUUDataMemory@@PAW4UErrorCode@@@Z PROC ; ucnv_data_unFlattenClone, COMDAT
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 285
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_udata_getMemory_56
	add	esp, 4
	mov	DWORD PTR _raw$[ebp], eax
; Line 286
	mov	eax, DWORD PTR _raw$[ebp]
	mov	DWORD PTR _source$[ebp], eax
; Line 288
	mov	eax, DWORD PTR _source$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	mov	DWORD PTR _type$[ebp], ecx
; Line 290
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@ucnv_data_
; Line 291
	xor	eax, eax
	jmp	$LN7@ucnv_data_
$LN6@ucnv_data_:
; Line 297
	movzx	eax, WORD PTR _type$[ebp]
	cmp	eax, 34					; 00000022H
	jge	SHORT $LN4@ucnv_data_
	mov	eax, DWORD PTR _type$[ebp]
	cmp	DWORD PTR _converterData[eax*4], 0
	je	SHORT $LN4@ucnv_data_
	mov	eax, DWORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _converterData[eax*4]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN4@ucnv_data_
	mov	eax, DWORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _converterData[eax*4]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN4@ucnv_data_
	mov	eax, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [eax], 100			; 00000064H
	je	SHORT $LN5@ucnv_data_
$LN4@ucnv_data_:
; Line 299
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 300
	xor	eax, eax
	jmp	$LN7@ucnv_data_
$LN5@ucnv_data_:
; Line 303
	push	228					; 000000e4H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _data$[ebp], eax
; Line 304
	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN3@ucnv_data_
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 306
	xor	eax, eax
	jmp	$LN7@ucnv_data_
$LN3@ucnv_data_:
; Line 310
	push	1
	mov	eax, DWORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _converterData[eax*4]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	push	228					; 000000e4H
	mov	edx, DWORD PTR _type$[ebp]
	mov	eax, DWORD PTR _converterData[edx*4]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 312
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 314
	mov	eax, DWORD PTR _data$[ebp]
	mov	BYTE PTR [eax+16], 0
; Line 317
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 319
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@ucnv_data_
; Line 320
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR _raw$[ebp]
	add	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pArgs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 321
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_data_
; Line 322
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 323
	xor	eax, eax
	jmp	SHORT $LN7@ucnv_data_
$LN2@ucnv_data_:
; Line 326
	mov	eax, DWORD PTR _data$[ebp]
$LN7@ucnv_data_:
; Line 327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_data_unFlattenClone@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAUUDataMemory@@PAW4UErrorCode@@@Z ENDP ; ucnv_data_unFlattenClone
_TEXT	ENDS
EXTRN	_uhash_put_56:PROC
EXTRN	_ucln_common_registerCleanup_56:PROC
EXTRN	_uhash_openSize_56:PROC
EXTRN	_uhash_hashChars_56:PROC
EXTRN	_uhash_compareChars_56:PROC
EXTRN	_ucnv_io_countKnownConverters_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_shareConverterData@@YAXPAUUConverterSharedData@@@Z
_TEXT	SEGMENT
_err$ = -8						; size = 4
_data$ = 8						; size = 4
?ucnv_shareConverterData@@YAXPAUUConverterSharedData@@@Z PROC ; ucnv_shareConverterData, COMDAT
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 431
	mov	DWORD PTR _err$[ebp], 0
; Line 435
	cmp	DWORD PTR _SHARED_DATA_HASHTABLE, 0
	jne	SHORT $LN2@ucnv_share
; Line 439
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _err$[ebp]
	push	ecx
	call	_ucnv_io_countKnownConverters_56
	add	esp, 4
	movzx	edx, ax
	shl	edx, 1
	push	edx
	push	0
	push	OFFSET _uhash_compareChars_56
	push	OFFSET _uhash_hashChars_56
	call	_uhash_openSize_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _SHARED_DATA_HASHTABLE, eax
; Line 440
	push	OFFSET ?ucnv_cleanup@@YACXZ		; ucnv_cleanup
	push	13					; 0000000dH
	call	_ucln_common_registerCleanup_56
	add	esp, 8
; Line 442
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ucnv_share
; Line 443
	jmp	SHORT $LN3@ucnv_share
$LN2@ucnv_share:
; Line 458
	mov	eax, DWORD PTR _data$[ebp]
	mov	BYTE PTR [eax+16], 1
; Line 464
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _SHARED_DATA_HASHTABLE
	push	ecx
	call	_uhash_put_56
	add	esp, 16					; 00000010H
$LN3@ucnv_share:
; Line 467
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ucnv_share
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@ucnv_share:
	DD	1
	DD	$LN6@ucnv_share
$LN6@ucnv_share:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ucnv_share
$LN5@ucnv_share:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
?ucnv_shareConverterData@@YAXPAUUConverterSharedData@@@Z ENDP ; ucnv_shareConverterData
_TEXT	ENDS
PUBLIC	_ucnv_flushCache_56
EXTRN	_uhash_close_56:PROC
EXTRN	_uhash_count_56:PROC
_BSS	SEGMENT
_gDefaultConverterContainsOption DB 01H DUP (?)
	ALIGN	4

_gDefaultConverterNameBuffer DB 03dH DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT ?ucnv_cleanup@@YACXZ
_TEXT	SEGMENT
?ucnv_cleanup@@YACXZ PROC				; ucnv_cleanup, COMDAT
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 243
	call	_ucnv_flushCache_56
; Line 244
	cmp	DWORD PTR _SHARED_DATA_HASHTABLE, 0
	je	SHORT $LN1@ucnv_clean
	mov	eax, DWORD PTR _SHARED_DATA_HASHTABLE
	push	eax
	call	_uhash_count_56
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@ucnv_clean
; Line 245
	mov	eax, DWORD PTR _SHARED_DATA_HASHTABLE
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 246
	mov	DWORD PTR _SHARED_DATA_HASHTABLE, 0
$LN1@ucnv_clean:
; Line 250
	call	?ucnv_flushAvailableConverterCache@@YAXXZ ; ucnv_flushAvailableConverterCache
; Line 253
	mov	DWORD PTR _gDefaultConverterName, 0
; Line 254
	mov	BYTE PTR _gDefaultConverterNameBuffer, 0
; Line 255
	mov	BYTE PTR _gDefaultConverterContainsOption, 0
; Line 256
	mov	DWORD PTR _gDefaultAlgorithmicSharedData, 0
; Line 259
	cmp	DWORD PTR _SHARED_DATA_HASHTABLE, 0
	sete	al
; Line 260
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_cleanup@@YACXZ ENDP				; ucnv_cleanup
_TEXT	ENDS
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_flushAvailableConverterCache@@YAXXZ
_TEXT	SEGMENT
?ucnv_flushAvailableConverterCache@@YAXXZ PROC		; ucnv_flushAvailableConverterCache, COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 230
	xor	eax, eax
	mov	WORD PTR _gAvailableConverterCount, ax
; Line 231
	cmp	DWORD PTR _gAvailableConverters, 0
	je	SHORT $LN1@ucnv_flush
; Line 232
	mov	eax, DWORD PTR _gAvailableConverters
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 233
	mov	DWORD PTR _gAvailableConverters, 0
$LN1@ucnv_flush:
; Line 235
	mov	ecx, OFFSET _gAvailableConvertersInitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 236
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_flushAvailableConverterCache@@YAXXZ ENDP		; ucnv_flushAvailableConverterCache
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
_TEXT	ENDS
EXTRN	_uhash_get_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_getSharedConverterData@@YAPAUUConverterSharedData@@PBD@Z
_TEXT	SEGMENT
_rc$71194 = -8						; size = 4
_name$ = 8						; size = 4
?ucnv_getSharedConverterData@@YAPAUUConverterSharedData@@PBD@Z PROC ; ucnv_getSharedConverterData, COMDAT
; File d:\mozilla\intl\icu\source\common\ucnv_bld.cpp
; Line 477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 479
	cmp	DWORD PTR _SHARED_DATA_HASHTABLE, 0
	jne	SHORT $LN2@ucnv_getSh
; Line 481
	xor	eax, eax
	jmp	SHORT $LN3@ucnv_getSh
; Line 483
	jmp	SHORT $LN3@ucnv_getSh
$LN2@ucnv_getSh:
; Line 487
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SHARED_DATA_HASHTABLE
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _rc$71194[ebp], eax
; Line 489
	mov	eax, DWORD PTR _rc$71194[ebp]
$LN3@ucnv_getSh:
; Line 491
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_getSharedConverterData@@YAPAUUConverterSharedData@@PBD@Z ENDP ; ucnv_getSharedConverterData
_TEXT	ENDS
PUBLIC	_ucnv_unload_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_unload_56
_TEXT	SEGMENT
_sharedData$ = 8					; size = 4
_ucnv_unload_56 PROC					; COMDAT
; Line 579
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 580
	cmp	DWORD PTR _sharedData$[ebp], 0
	je	SHORT $LN4@ucnv_unloa
; Line 581
	mov	eax, DWORD PTR _sharedData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jbe	SHORT $LN2@ucnv_unloa
; Line 582
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _sharedData$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@ucnv_unloa:
; Line 585
	mov	eax, DWORD PTR _sharedData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	ja	SHORT $LN4@ucnv_unloa
	mov	eax, DWORD PTR _sharedData$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN4@ucnv_unloa
; Line 586
	mov	eax, DWORD PTR _sharedData$[ebp]
	push	eax
	call	?ucnv_deleteSharedConverterData@@YACPAUUConverterSharedData@@@Z ; ucnv_deleteSharedConverterData
	add	esp, 4
$LN4@ucnv_unloa:
; Line 589
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_unload_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_deleteSharedConverterData@@YACPAUUConverterSharedData@@@Z
_TEXT	SEGMENT
_data$71202 = -8					; size = 4
_deadSharedData$ = 8					; size = 4
?ucnv_deleteSharedConverterData@@YACPAUUConverterSharedData@@@Z PROC ; ucnv_deleteSharedConverterData, COMDAT
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 510
	mov	eax, DWORD PTR _deadSharedData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jbe	SHORT $LN3@ucnv_delet
; Line 512
	xor	al, al
	jmp	SHORT $LN4@ucnv_delet
$LN3@ucnv_delet:
; Line 515
	mov	eax, DWORD PTR _deadSharedData$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN2@ucnv_delet
; Line 516
	mov	esi, esp
	mov	eax, DWORD PTR _deadSharedData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _deadSharedData$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ucnv_delet:
; Line 519
	mov	eax, DWORD PTR _deadSharedData$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@ucnv_delet
; Line 521
	mov	eax, DWORD PTR _deadSharedData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _data$71202[ebp], ecx
; Line 522
	mov	eax, DWORD PTR _data$71202[ebp]
	push	eax
	call	_udata_close_56
	add	esp, 4
$LN1@ucnv_delet:
; Line 525
	mov	eax, DWORD PTR _deadSharedData$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 528
	mov	al, 1
$LN4@ucnv_delet:
; Line 529
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_deleteSharedConverterData@@YACPAUUConverterSharedData@@@Z ENDP ; ucnv_deleteSharedConverterData
_TEXT	ENDS
PUBLIC	_ucnv_unloadSharedDataIfReady_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_unloadSharedDataIfReady_56
_TEXT	SEGMENT
_sharedData$ = 8					; size = 4
_ucnv_unloadSharedDataIfReady_56 PROC			; COMDAT
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 594
	cmp	DWORD PTR _sharedData$[ebp], 0
	je	SHORT $LN2@ucnv_unloa@2
	mov	eax, DWORD PTR _sharedData$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN2@ucnv_unloa@2
; Line 595
	push	OFFSET _cnvCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 596
	mov	eax, DWORD PTR _sharedData$[ebp]
	push	eax
	call	_ucnv_unload_56
	add	esp, 4
; Line 597
	push	OFFSET _cnvCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
$LN2@ucnv_unloa@2:
; Line 599
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_unloadSharedDataIfReady_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_incrementRefCount_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_incrementRefCount_56
_TEXT	SEGMENT
_sharedData$ = 8					; size = 4
_ucnv_incrementRefCount_56 PROC				; COMDAT
; Line 603
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 604
	cmp	DWORD PTR _sharedData$[ebp], 0
	je	SHORT $LN2@ucnv_incre
	mov	eax, DWORD PTR _sharedData$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN2@ucnv_incre
; Line 605
	push	OFFSET _cnvCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 606
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _sharedData$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 607
	push	OFFSET _cnvCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
$LN2@ucnv_incre:
; Line 609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_incrementRefCount_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_05EGJIMALK@UTF?98?$AA@			; `string'
PUBLIC	_ucnv_getDefaultName_56
PUBLIC	__$ArrayPad$
PUBLIC	_ucnv_loadSharedData_56
EXTRN	_ucnv_io_getConverterName_56:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_05EGJIMALK@UTF?98?$AA@
CONST	SEGMENT
??_C@_05EGJIMALK@UTF?98?$AA@ DB 'UTF-8', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucnv_loadSharedData_56
_TEXT	SEGMENT
tv154 = -524						; size = 4
tv135 = -524						; size = 4
tv156 = -520						; size = 4
tv137 = -520						; size = 4
tv155 = -516						; size = 4
tv136 = -516						; size = 4
_checkForAlgorithmic$ = -313				; size = 1
_mayContainOption$ = -301				; size = 1
_internalErrorCode$ = -292				; size = 4
_mySharedConverterData$ = -280				; size = 4
_stackArgs$ = -268					; size = 28
_stackPieces$ = -232					; size = 224
__$ArrayPad$ = -4					; size = 4
_converterName$ = 8					; size = 4
_pPieces$ = 12						; size = 4
_pArgs$ = 16						; size = 4
_err$ = 20						; size = 4
_ucnv_loadSharedData_56 PROC				; COMDAT
; Line 708
	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 711
	mov	DWORD PTR _mySharedConverterData$[ebp], 0
; Line 712
	mov	DWORD PTR _internalErrorCode$[ebp], 0
; Line 713
	mov	BYTE PTR _mayContainOption$[ebp], 1
; Line 714
	mov	BYTE PTR _checkForAlgorithmic$[ebp], 1
; Line 716
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN19@ucnv_loadS
; Line 717
	xor	eax, eax
	jmp	$LN20@ucnv_loadS
$LN19@ucnv_loadS:
; Line 720
	cmp	DWORD PTR _pPieces$[ebp], 0
	jne	SHORT $LN18@ucnv_loadS
; Line 721
	cmp	DWORD PTR _pArgs$[ebp], 0
	je	SHORT $LN17@ucnv_loadS
; Line 726
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 5
; Line 727
	xor	eax, eax
	jmp	$LN20@ucnv_loadS
$LN17@ucnv_loadS:
; Line 729
	lea	eax, DWORD PTR _stackPieces$[ebp]
	mov	DWORD PTR _pPieces$[ebp], eax
$LN18@ucnv_loadS:
; Line 731
	cmp	DWORD PTR _pArgs$[ebp], 0
	jne	SHORT $LN16@ucnv_loadS
; Line 732
	push	28					; 0000001cH
	push	0
	lea	eax, DWORD PTR _stackArgs$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 733
	mov	DWORD PTR _stackArgs$[ebp], 28		; 0000001cH
; Line 734
	lea	eax, DWORD PTR _stackArgs$[ebp]
	mov	DWORD PTR _pArgs$[ebp], eax
$LN16@ucnv_loadS:
; Line 737
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	BYTE PTR [eax], 0
; Line 738
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	BYTE PTR [eax+60], 0
; Line 739
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	DWORD PTR [eax+220], 0
; Line 741
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _converterName$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 742
	mov	eax, DWORD PTR _pPieces$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 743
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pPieces$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	mov	DWORD PTR [eax+12], edx
; Line 746
	cmp	DWORD PTR _converterName$[ebp], 0
	jne	SHORT $LN15@ucnv_loadS
; Line 752
	call	_ucnv_getDefaultName_56
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 753
	mov	eax, DWORD PTR _pArgs$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN14@ucnv_loadS
; Line 754
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 2
; Line 755
	xor	eax, eax
	jmp	$LN20@ucnv_loadS
$LN14@ucnv_loadS:
; Line 757
	mov	eax, DWORD PTR _gDefaultAlgorithmicSharedData
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 758
	mov	BYTE PTR _checkForAlgorithmic$[ebp], 0
; Line 759
	mov	al, BYTE PTR _gDefaultConverterContainsOption
	mov	BYTE PTR _mayContainOption$[ebp], al
	jmp	$LN13@ucnv_loadS
$LN15@ucnv_loadS:
; Line 763
	mov	eax, DWORD PTR _converterName$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 85					; 00000055H
	jne	SHORT $LN26@ucnv_loadS
	mov	edx, DWORD PTR _converterName$[ebp]
	movsx	eax, BYTE PTR [edx+1]
	cmp	eax, 84					; 00000054H
	jne	SHORT $LN22@ucnv_loadS
	mov	ecx, DWORD PTR _converterName$[ebp]
	movsx	edx, BYTE PTR [ecx+2]
	cmp	edx, 70					; 00000046H
	jne	SHORT $LN22@ucnv_loadS
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN25@ucnv_loadS
$LN22@ucnv_loadS:
	mov	DWORD PTR tv136[ebp], 0
$LN25@ucnv_loadS:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN27@ucnv_loadS
$LN26@ucnv_loadS:
	mov	ecx, DWORD PTR _converterName$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 117				; 00000075H
	jne	SHORT $LN23@ucnv_loadS
	mov	eax, DWORD PTR _converterName$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 116				; 00000074H
	jne	SHORT $LN23@ucnv_loadS
	mov	edx, DWORD PTR _converterName$[ebp]
	movsx	eax, BYTE PTR [edx+2]
	cmp	eax, 102				; 00000066H
	jne	SHORT $LN23@ucnv_loadS
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN24@ucnv_loadS
$LN23@ucnv_loadS:
	mov	DWORD PTR tv135[ebp], 0
$LN24@ucnv_loadS:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv137[ebp], ecx
$LN27@ucnv_loadS:
	cmp	DWORD PTR tv137[ebp], 0
	je	$LN12@ucnv_loadS
	mov	eax, DWORD PTR _converterName$[ebp]
	movsx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN32@ucnv_loadS
	mov	edx, DWORD PTR _converterName$[ebp]
	movsx	eax, BYTE PTR [edx+4]
	cmp	eax, 56					; 00000038H
	jne	SHORT $LN28@ucnv_loadS
	mov	ecx, DWORD PTR _converterName$[ebp]
	movsx	edx, BYTE PTR [ecx+5]
	test	edx, edx
	jne	SHORT $LN28@ucnv_loadS
	mov	DWORD PTR tv155[ebp], 1
	jmp	SHORT $LN31@ucnv_loadS
$LN28@ucnv_loadS:
	mov	DWORD PTR tv155[ebp], 0
$LN31@ucnv_loadS:
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN33@ucnv_loadS
$LN32@ucnv_loadS:
	mov	ecx, DWORD PTR _converterName$[ebp]
	movsx	edx, BYTE PTR [ecx+3]
	cmp	edx, 56					; 00000038H
	jne	SHORT $LN29@ucnv_loadS
	mov	eax, DWORD PTR _converterName$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN29@ucnv_loadS
	mov	DWORD PTR tv154[ebp], 1
	jmp	SHORT $LN30@ucnv_loadS
$LN29@ucnv_loadS:
	mov	DWORD PTR tv154[ebp], 0
$LN30@ucnv_loadS:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR tv156[ebp], edx
$LN33@ucnv_loadS:
	cmp	DWORD PTR tv156[ebp], 0
	je	SHORT $LN12@ucnv_loadS
; Line 765
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [eax+20], OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
; Line 766
	mov	eax, DWORD PTR _converterData+16
	jmp	$LN20@ucnv_loadS
; Line 768
	jmp	$LN13@ucnv_loadS
$LN12@ucnv_loadS:
; Line 770
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPieces$[ebp]
	push	edx
	mov	eax, DWORD PTR _converterName$[ebp]
	push	eax
	call	?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; parseConverterOptions
	add	esp, 16					; 00000010H
; Line 771
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@ucnv_loadS
; Line 773
	xor	eax, eax
	jmp	$LN20@ucnv_loadS
$LN10@ucnv_loadS:
; Line 777
	lea	eax, DWORD PTR _internalErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _mayContainOption$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_ucnv_io_getConverterName_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 778
	mov	eax, DWORD PTR _internalErrorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@ucnv_loadS
	mov	eax, DWORD PTR _pArgs$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN9@ucnv_loadS
$LN8@ucnv_loadS:
; Line 783
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pPieces$[ebp]
	mov	DWORD PTR [eax+20], ecx
	jmp	SHORT $LN13@ucnv_loadS
$LN9@ucnv_loadS:
; Line 784
	cmp	DWORD PTR _internalErrorCode$[ebp], -122 ; ffffff86H
	jne	SHORT $LN13@ucnv_loadS
; Line 785
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], -122			; ffffff86H
$LN13@ucnv_loadS:
; Line 790
	movsx	eax, BYTE PTR _mayContainOption$[ebp]
	test	eax, eax
	je	SHORT $LN5@ucnv_loadS
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _pPieces$[ebp]
	je	SHORT $LN5@ucnv_loadS
; Line 791
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPieces$[ebp]
	push	edx
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; parseConverterOptions
	add	esp, 16					; 00000010H
$LN5@ucnv_loadS:
; Line 795
	movsx	eax, BYTE PTR _checkForAlgorithmic$[ebp]
	test	eax, eax
	je	SHORT $LN4@ucnv_loadS
; Line 796
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?getAlgorithmicTypeFromName@@YAPBUUConverterSharedData@@PBD@Z ; getAlgorithmicTypeFromName
	add	esp, 4
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
$LN4@ucnv_loadS:
; Line 798
	cmp	DWORD PTR _mySharedConverterData$[ebp], 0
	jne	SHORT $LN3@ucnv_loadS
; Line 805
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [eax+4], 1
; Line 806
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 808
	push	OFFSET _cnvCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 809
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	_ucnv_load_56
	add	esp, 8
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 810
	push	OFFSET _cnvCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 811
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ucnv_loadS
	cmp	DWORD PTR _mySharedConverterData$[ebp], 0
	jne	SHORT $LN3@ucnv_loadS
$LN1@ucnv_loadS:
; Line 813
	xor	eax, eax
	jmp	SHORT $LN20@ucnv_loadS
$LN3@ucnv_loadS:
; Line 817
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
$LN20@ucnv_loadS:
; Line 818
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@ucnv_loadS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN39@ucnv_loadS:
	DD	4
	DD	$LN38@ucnv_loadS
$LN38@ucnv_loadS:
	DD	-232					; ffffff18H
	DD	224					; 000000e0H
	DD	$LN34@ucnv_loadS
	DD	-268					; fffffef4H
	DD	28					; 0000001cH
	DD	$LN35@ucnv_loadS
	DD	-292					; fffffedcH
	DD	4
	DD	$LN36@ucnv_loadS
	DD	-301					; fffffed3H
	DD	1
	DD	$LN37@ucnv_loadS
$LN37@ucnv_loadS:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	79					; 0000004fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN36@ucnv_loadS:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN35@ucnv_loadS:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN34@ucnv_loadS:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ucnv_loadSharedData_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_strcmp:PROC
EXTRN	_ucnv_io_stripASCIIForCompare_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlgorithmicTypeFromName@@YAPBUUConverterSharedData@@PBD@Z
_TEXT	SEGMENT
_strippedName$ = -128					; size = 60
_result$ = -60						; size = 4
_lastMid$ = -48						; size = 4
_limit$ = -36						; size = 4
_start$ = -24						; size = 4
_mid$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_realName$ = 8						; size = 4
?getAlgorithmicTypeFromName@@YAPBUUConverterSharedData@@PBD@Z PROC ; getAlgorithmicTypeFromName, COMDAT
; Line 377
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 384
	mov	eax, DWORD PTR _realName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strippedName$[ebp]
	push	ecx
	call	_ucnv_io_stripASCIIForCompare_56
	add	esp, 8
; Line 387
	mov	DWORD PTR _start$[ebp], 0
; Line 388
	mov	DWORD PTR _limit$[ebp], 34		; 00000022H
; Line 389
	mov	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 390
	mov	DWORD PTR _lastMid$[ebp], -1
$LN7@getAlgorit:
; Line 393
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _limit$[ebp]
	shr	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
; Line 394
	mov	eax, DWORD PTR _lastMid$[ebp]
	cmp	eax, DWORD PTR _mid$[ebp]
	jne	SHORT $LN5@getAlgorit
; Line 395
	jmp	SHORT $LN6@getAlgorit
$LN5@getAlgorit:
; Line 397
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _lastMid$[ebp], eax
; Line 398
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR _cnvNameType[eax*8]
	push	ecx
	lea	edx, DWORD PTR _strippedName$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 400
	cmp	DWORD PTR _result$[ebp], 0
	jge	SHORT $LN4@getAlgorit
; Line 401
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
	jmp	SHORT $LN3@getAlgorit
$LN4@getAlgorit:
; Line 402
	cmp	DWORD PTR _result$[ebp], 0
	jle	SHORT $LN2@getAlgorit
; Line 403
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 404
	jmp	SHORT $LN3@getAlgorit
$LN2@getAlgorit:
; Line 405
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR _cnvNameType[eax*8+4]
	mov	eax, DWORD PTR _converterData[ecx*4]
	jmp	SHORT $LN8@getAlgorit
$LN3@getAlgorit:
; Line 407
	jmp	SHORT $LN7@getAlgorit
$LN6@getAlgorit:
; Line 409
	xor	eax, eax
$LN8@getAlgorit:
; Line 410
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@getAlgorit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@getAlgorit:
	DD	1
	DD	$LN11@getAlgorit
$LN11@getAlgorit:
	DD	-128					; ffffff80H
	DD	60					; 0000003cH
	DD	$LN10@getAlgorit
$LN10@getAlgorit:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?getAlgorithmicTypeFromName@@YAPBUUConverterSharedData@@PBD@Z ENDP ; getAlgorithmicTypeFromName
_TEXT	ENDS
PUBLIC	??_C@_08JJCADGEK@swaplfnl?$AA@			; `string'
PUBLIC	??_C@_08CLMDBNEB@version?$DN?$AA@		; `string'
PUBLIC	??_C@_07BPFBIDKJ@locale?$DN?$AA@		; `string'
EXTRN	__imp__strncmp:PROC
;	COMDAT ??_C@_08JJCADGEK@swaplfnl?$AA@
CONST	SEGMENT
??_C@_08JJCADGEK@swaplfnl?$AA@ DB 'swaplfnl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CLMDBNEB@version?$DN?$AA@
CONST	SEGMENT
??_C@_08CLMDBNEB@version?$DN?$AA@ DB 'version=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BPFBIDKJ@locale?$DN?$AA@
CONST	SEGMENT
??_C@_07BPFBIDKJ@locale?$DN?$AA@ DB 'locale=', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv182 = -244						; size = 4
tv178 = -244						; size = 4
tv163 = -244						; size = 4
tv151 = -244						; size = 4
_dest$71251 = -44					; size = 4
_len$ = -32						; size = 4
_c$ = -17						; size = 1
_cnvName$ = -8						; size = 4
_inName$ = 8						; size = 4
_pPieces$ = 12						; size = 4
_pArgs$ = 16						; size = 4
_err$ = 20						; size = 4
?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z PROC ; parseConverterOptions, COMDAT
; Line 623
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 624
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	DWORD PTR _cnvName$[ebp], eax
; Line 626
	mov	DWORD PTR _len$[ebp], 0
; Line 628
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _inName$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 629
	mov	eax, DWORD PTR _pPieces$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 630
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pPieces$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	mov	DWORD PTR [eax+12], edx
$LN21@parseConve:
; Line 633
	mov	eax, DWORD PTR _inName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	test	edx, edx
	je	SHORT $LN20@parseConve
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN20@parseConve
; Line 634
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
	cmp	DWORD PTR _len$[ebp], 60		; 0000003cH
	jl	SHORT $LN19@parseConve
; Line 635
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 1
; Line 636
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	BYTE PTR [eax], 0
; Line 637
	jmp	$LN22@parseConve
$LN19@parseConve:
; Line 639
	mov	eax, DWORD PTR _cnvName$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _cnvName$[ebp]
	add	edx, 1
	mov	DWORD PTR _cnvName$[ebp], edx
; Line 640
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 1
	mov	DWORD PTR _inName$[ebp], eax
; Line 641
	jmp	SHORT $LN21@parseConve
$LN20@parseConve:
; Line 642
	mov	eax, DWORD PTR _cnvName$[ebp]
	mov	BYTE PTR [eax], 0
; Line 643
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pPieces$[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN18@parseConve:
; Line 646
	mov	eax, DWORD PTR _inName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	test	edx, edx
	je	$LN22@parseConve
; Line 647
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 44					; 0000002cH
	jne	SHORT $LN16@parseConve
; Line 648
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 1
	mov	DWORD PTR _inName$[ebp], eax
$LN16@parseConve:
; Line 652
	push	1
	mov	eax, DWORD PTR _inName$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_07BPFBIDKJ@locale?$DN?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	7
	push	OFFSET ??_C@_07BPFBIDKJ@locale?$DN?$AA@
	mov	ecx, DWORD PTR _inName$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN15@parseConve
; Line 654
	mov	eax, DWORD PTR _pPieces$[ebp]
	add	eax, 60					; 0000003cH
	mov	DWORD PTR _dest$71251[ebp], eax
; Line 657
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 7
	mov	DWORD PTR _inName$[ebp], eax
; Line 658
	mov	DWORD PTR _len$[ebp], 0
$LN14@parseConve:
; Line 659
	mov	eax, DWORD PTR _inName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	test	edx, edx
	je	SHORT $LN13@parseConve
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN13@parseConve
; Line 660
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 1
	mov	DWORD PTR _inName$[ebp], eax
; Line 662
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
	cmp	DWORD PTR _len$[ebp], 157		; 0000009dH
	jl	SHORT $LN12@parseConve
; Line 663
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 1
; Line 664
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	BYTE PTR [eax+60], 0
; Line 665
	jmp	$LN22@parseConve
$LN12@parseConve:
; Line 668
	mov	eax, DWORD PTR _dest$71251[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _dest$71251[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$71251[ebp], edx
; Line 669
	jmp	SHORT $LN14@parseConve
$LN13@parseConve:
; Line 670
	mov	eax, DWORD PTR _dest$71251[ebp]
	mov	BYTE PTR [eax], 0
	jmp	$LN11@parseConve
$LN15@parseConve:
; Line 671
	push	1
	mov	eax, DWORD PTR _inName$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_08CLMDBNEB@version?$DN?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	8
	push	OFFSET ??_C@_08CLMDBNEB@version?$DN?$AA@
	mov	ecx, DWORD PTR _inName$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN10@parseConve
; Line 673
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 8
	mov	DWORD PTR _inName$[ebp], eax
; Line 674
	mov	eax, DWORD PTR _inName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
; Line 675
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN9@parseConve
; Line 676
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	and	ecx, -16				; fffffff0H
	mov	DWORD PTR tv151[ebp], ecx
	mov	edx, DWORD PTR _pPieces$[ebp]
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR [edx+220], eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 677
	jmp	$LN22@parseConve
	jmp	SHORT $LN8@parseConve
$LN9@parseConve:
; Line 678
	movsx	eax, BYTE PTR _c$[ebp]
	sub	eax, 48					; 00000030H
	movzx	ecx, al
	cmp	ecx, 10					; 0000000aH
	jge	SHORT $LN8@parseConve
; Line 679
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	and	ecx, -16				; fffffff0H
	movsx	edx, BYTE PTR _c$[ebp]
	sub	edx, 48					; 00000030H
	or	ecx, edx
	mov	DWORD PTR tv163[ebp], ecx
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	ecx, DWORD PTR tv163[ebp]
	mov	DWORD PTR [eax+220], ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	mov	eax, DWORD PTR tv163[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 680
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 1
	mov	DWORD PTR _inName$[ebp], eax
$LN8@parseConve:
; Line 681
	jmp	$LN11@parseConve
$LN10@parseConve:
; Line 682
	push	1
	mov	eax, DWORD PTR _inName$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_08JJCADGEK@swaplfnl?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	8
	push	OFFSET ??_C@_08JJCADGEK@swaplfnl?$AA@
	mov	ecx, DWORD PTR _inName$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@parseConve
; Line 683
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 8
	mov	DWORD PTR _inName$[ebp], eax
; Line 684
	mov	eax, DWORD PTR _pPieces$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR tv178[ebp], ecx
	mov	edx, DWORD PTR _pPieces$[ebp]
	mov	eax, DWORD PTR tv178[ebp]
	mov	DWORD PTR [edx+220], eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR tv178[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 686
	jmp	SHORT $LN11@parseConve
$LN3@parseConve:
; Line 688
	mov	eax, DWORD PTR _inName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	mov	eax, DWORD PTR _inName$[ebp]
	add	eax, 1
	mov	DWORD PTR _inName$[ebp], eax
	test	edx, edx
	je	SHORT $LN24@parseConve
	mov	DWORD PTR tv182[ebp], 1
	jmp	SHORT $LN25@parseConve
$LN24@parseConve:
	mov	DWORD PTR tv182[ebp], 0
$LN25@parseConve:
	cmp	DWORD PTR tv182[ebp], 0
	je	SHORT $LN2@parseConve
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN2@parseConve
; Line 689
	jmp	SHORT $LN3@parseConve
$LN2@parseConve:
; Line 690
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN11@parseConve
; Line 691
	jmp	SHORT $LN22@parseConve
$LN11@parseConve:
; Line 694
	jmp	$LN18@parseConve
$LN22@parseConve:
; Line 695
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ENDP ; parseConverterOptions
_TEXT	ENDS
PUBLIC	_ucnv_createConverterFromSharedData_56
PUBLIC	__$ArrayPad$
PUBLIC	_ucnv_createConverter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_createConverter_56
_TEXT	SEGMENT
_mySharedConverterData$ = -280				; size = 4
_stackArgs$ = -268					; size = 28
_stackPieces$ = -232					; size = 224
__$ArrayPad$ = -4					; size = 4
_myUConverter$ = 8					; size = 4
_converterName$ = 12					; size = 4
_err$ = 16						; size = 4
_ucnv_createConverter_56 PROC				; COMDAT
; Line 822
	push	ebp
	mov	ebp, esp
	sub	esp, 476				; 000001dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-476]
	mov	ecx, 119				; 00000077H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 824
	mov	DWORD PTR _stackArgs$[ebp], 28		; 0000001cH
	mov	DWORD PTR _stackArgs$[ebp+4], 0
	mov	BYTE PTR _stackArgs$[ebp+8], 0
	mov	BYTE PTR _stackArgs$[ebp+9], 0
	xor	eax, eax
	mov	WORD PTR _stackArgs$[ebp+10], ax
	mov	DWORD PTR _stackArgs$[ebp+12], 0
	mov	DWORD PTR _stackArgs$[ebp+16], 0
	mov	DWORD PTR _stackArgs$[ebp+20], 0
	mov	DWORD PTR _stackArgs$[ebp+24], 0
; Line 829
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_creat
; Line 832
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	lea	edx, DWORD PTR _stackPieces$[ebp]
	push	edx
	mov	eax, DWORD PTR _converterName$[ebp]
	push	eax
	call	_ucnv_loadSharedData_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 837
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mySharedConverterData$[ebp]
	push	edx
	mov	eax, DWORD PTR _myUConverter$[ebp]
	push	eax
	call	_ucnv_createConverterFromSharedData_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _myUConverter$[ebp], eax
; Line 839
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_creat
; Line 841
	mov	eax, DWORD PTR _myUConverter$[ebp]
	jmp	SHORT $LN3@ucnv_creat
$LN2@ucnv_creat:
; Line 847
	xor	eax, eax
$LN3@ucnv_creat:
; Line 848
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ucnv_creat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 476				; 000001dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@ucnv_creat:
	DD	2
	DD	$LN7@ucnv_creat
$LN7@ucnv_creat:
	DD	-232					; ffffff18H
	DD	224					; 000000e0H
	DD	$LN5@ucnv_creat
	DD	-268					; fffffef4H
	DD	28					; 0000001cH
	DD	$LN6@ucnv_creat
$LN6@ucnv_creat:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN5@ucnv_creat:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ucnv_createConverter_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucnv_canCreateConverter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_canCreateConverter_56
_TEXT	SEGMENT
_mySharedConverterData$ = -548				; size = 4
_stackArgs$ = -536					; size = 28
_stackPieces$ = -500					; size = 224
_myUConverter$ = -268					; size = 260
__$ArrayPad$ = -4					; size = 4
_converterName$ = 8					; size = 4
_err$ = 12						; size = 4
_ucnv_canCreateConverter_56 PROC			; COMDAT
; File d:\mozilla\intl\icu\source\common\ucnv_bld.cpp
; Line 851
	push	ebp
	mov	ebp, esp
	sub	esp, 744				; 000002e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-744]
	mov	ecx, 186				; 000000baH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 854
	mov	DWORD PTR _stackArgs$[ebp], 28		; 0000001cH
	mov	DWORD PTR _stackArgs$[ebp+4], 0
	mov	BYTE PTR _stackArgs$[ebp+8], 0
	mov	BYTE PTR _stackArgs$[ebp+9], 0
	xor	eax, eax
	mov	WORD PTR _stackArgs$[ebp+10], ax
	mov	DWORD PTR _stackArgs$[ebp+12], 0
	mov	DWORD PTR _stackArgs$[ebp+16], 0
	mov	DWORD PTR _stackArgs$[ebp+20], 0
	mov	DWORD PTR _stackArgs$[ebp+24], 0
; Line 859
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucnv_canCr
; Line 862
	mov	BYTE PTR _stackArgs$[ebp+8], 1
; Line 863
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	lea	edx, DWORD PTR _stackPieces$[ebp]
	push	edx
	mov	eax, DWORD PTR _converterName$[ebp]
	push	eax
	call	_ucnv_loadSharedData_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 867
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mySharedConverterData$[ebp]
	push	edx
	lea	eax, DWORD PTR _myUConverter$[ebp]
	push	eax
	call	_ucnv_createConverterFromSharedData_56
	add	esp, 16					; 00000010H
; Line 868
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	push	eax
	call	_ucnv_unloadSharedDataIfReady_56
	add	esp, 4
$LN1@ucnv_canCr:
; Line 872
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
; Line 873
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ucnv_canCr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 744				; 000002e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@ucnv_canCr:
	DD	3
	DD	$LN7@ucnv_canCr
$LN7@ucnv_canCr:
	DD	-268					; fffffef4H
	DD	260					; 00000104H
	DD	$LN4@ucnv_canCr
	DD	-500					; fffffe0cH
	DD	224					; 000000e0H
	DD	$LN5@ucnv_canCr
	DD	-536					; fffffde8H
	DD	28					; 0000001cH
	DD	$LN6@ucnv_canCr
$LN6@ucnv_canCr:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN5@ucnv_canCr:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN4@ucnv_canCr:
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	85					; 00000055H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_ucnv_canCreateConverter_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_ucnv_createAlgorithmicConverter_56
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucnv_createAlgorithmicConverter_56
_TEXT	SEGMENT
_stackArgs$ = -56					; size = 28
_sharedData$ = -20					; size = 4
_cnv$ = -8						; size = 4
_myUConverter$ = 8					; size = 4
_type$ = 12						; size = 4
_locale$ = 16						; size = 4
_options$ = 20						; size = 4
_err$ = 24						; size = 4
_ucnv_createAlgorithmicConverter_56 PROC		; COMDAT
; Line 879
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 882
	mov	DWORD PTR _stackArgs$[ebp], 28		; 0000001cH
	mov	DWORD PTR _stackArgs$[ebp+4], 0
	mov	BYTE PTR _stackArgs$[ebp+8], 0
	mov	BYTE PTR _stackArgs$[ebp+9], 0
	xor	eax, eax
	mov	WORD PTR _stackArgs$[ebp+10], ax
	mov	DWORD PTR _stackArgs$[ebp+12], 0
	mov	DWORD PTR _stackArgs$[ebp+16], 0
	mov	DWORD PTR _stackArgs$[ebp+20], 0
	mov	DWORD PTR _stackArgs$[ebp+24], 0
; Line 887
	cmp	DWORD PTR _type$[ebp], 0
	jl	SHORT $LN3@ucnv_creat@2
	cmp	DWORD PTR _type$[ebp], 34		; 00000022H
	jl	SHORT $LN4@ucnv_creat@2
$LN3@ucnv_creat@2:
; Line 888
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 1
; Line 890
	xor	eax, eax
	jmp	SHORT $LN5@ucnv_creat@2
$LN4@ucnv_creat@2:
; Line 893
	mov	eax, DWORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _converterData[eax*4]
	mov	DWORD PTR _sharedData$[ebp], ecx
; Line 894
	cmp	DWORD PTR _sharedData$[ebp], 0
	je	SHORT $LN1@ucnv_creat@2
	mov	eax, DWORD PTR _sharedData$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN2@ucnv_creat@2
$LN1@ucnv_creat@2:
; Line 896
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 1
; Line 898
	xor	eax, eax
	jmp	SHORT $LN5@ucnv_creat@2
$LN2@ucnv_creat@2:
; Line 901
	mov	DWORD PTR _stackArgs$[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 902
	mov	eax, DWORD PTR _options$[ebp]
	mov	DWORD PTR _stackArgs$[ebp+12], eax
; Line 903
	mov	eax, DWORD PTR _locale$[ebp]
	mov	DWORD PTR _stackArgs$[ebp+24], eax
; Line 906
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sharedData$[ebp]
	push	edx
	mov	eax, DWORD PTR _myUConverter$[ebp]
	push	eax
	call	_ucnv_createConverterFromSharedData_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cnv$[ebp], eax
; Line 909
	mov	eax, DWORD PTR _cnv$[ebp]
$LN5@ucnv_creat@2:
; Line 910
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ucnv_creat@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@ucnv_creat@2:
	DD	1
	DD	$LN8@ucnv_creat@2
$LN8@ucnv_creat@2:
	DD	-56					; ffffffc8H
	DD	28					; 0000001cH
	DD	$LN7@ucnv_creat@2
$LN7@ucnv_creat@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
_ucnv_createAlgorithmicConverter_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucnv_createConverterFromPackage_56
EXTRN	_ucnv_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_createConverterFromPackage_56
_TEXT	SEGMENT
_stackArgs$ = -292					; size = 28
_stackPieces$ = -256					; size = 224
_mySharedConverterData$ = -24				; size = 4
_myUConverter$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_packageName$ = 8					; size = 4
_converterName$ = 12					; size = 4
_err$ = 16						; size = 4
_ucnv_createConverterFromPackage_56 PROC		; COMDAT
; Line 914
	push	ebp
	mov	ebp, esp
	sub	esp, 488				; 000001e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-488]
	mov	ecx, 122				; 0000007aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 918
	mov	DWORD PTR _stackArgs$[ebp], 28		; 0000001cH
	mov	DWORD PTR _stackArgs$[ebp+4], 0
	mov	BYTE PTR _stackArgs$[ebp+8], 0
	mov	BYTE PTR _stackArgs$[ebp+9], 0
	xor	eax, eax
	mov	WORD PTR _stackArgs$[ebp+10], ax
	mov	DWORD PTR _stackArgs$[ebp+12], 0
	mov	DWORD PTR _stackArgs$[ebp+16], 0
	mov	DWORD PTR _stackArgs$[ebp+20], 0
	mov	DWORD PTR _stackArgs$[ebp+24], 0
; Line 922
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ucnv_creat@3
; Line 924
	xor	eax, eax
	jmp	$LN5@ucnv_creat@3
$LN4@ucnv_creat@3:
; Line 930
	mov	BYTE PTR _stackPieces$[ebp], 0
; Line 931
	mov	BYTE PTR _stackPieces$[ebp+60], 0
; Line 932
	mov	DWORD PTR _stackPieces$[ebp+220], 0
; Line 933
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	lea	edx, DWORD PTR _stackPieces$[ebp]
	push	edx
	mov	eax, DWORD PTR _converterName$[ebp]
	push	eax
	call	?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; parseConverterOptions
	add	esp, 16					; 00000010H
; Line 934
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucnv_creat@3
; Line 937
	xor	eax, eax
	jmp	$LN5@ucnv_creat@3
$LN3@ucnv_creat@3:
; Line 939
	mov	DWORD PTR _stackArgs$[ebp+4], 1
; Line 940
	mov	eax, DWORD PTR _packageName$[ebp]
	mov	DWORD PTR _stackArgs$[ebp+16], eax
; Line 943
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	call	?createConverterFromFile@@YAPAUUConverterSharedData@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; createConverterFromFile
	add	esp, 8
	mov	DWORD PTR _mySharedConverterData$[ebp], eax
; Line 945
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_creat@3
; Line 947
	xor	eax, eax
	jmp	SHORT $LN5@ucnv_creat@3
$LN2@ucnv_creat@3:
; Line 951
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mySharedConverterData$[ebp]
	push	edx
	push	0
	call	_ucnv_createConverterFromSharedData_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _myUConverter$[ebp], eax
; Line 953
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucnv_creat@3
; Line 954
	mov	eax, DWORD PTR _myUConverter$[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 956
	xor	eax, eax
	jmp	SHORT $LN5@ucnv_creat@3
$LN1@ucnv_creat@3:
; Line 960
	mov	eax, DWORD PTR _myUConverter$[ebp]
$LN5@ucnv_creat@3:
; Line 961
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ucnv_creat@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 488				; 000001e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@ucnv_creat@3:
	DD	2
	DD	$LN9@ucnv_creat@3
$LN9@ucnv_creat@3:
	DD	-256					; ffffff00H
	DD	224					; 000000e0H
	DD	$LN7@ucnv_creat@3
	DD	-292					; fffffedcH
	DD	28					; 0000001cH
	DD	$LN8@ucnv_creat@3
$LN8@ucnv_creat@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN7@ucnv_creat@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ucnv_createConverterFromPackage_56 ENDP
_TEXT	ENDS
EXTRN	_UCNV_FROM_U_CALLBACK_SUBSTITUTE_56:PROC
EXTRN	_UCNV_TO_U_CALLBACK_SUBSTITUTE_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_createConverterFromSharedData_56
_TEXT	SEGMENT
_isCopyLocal$ = -5					; size = 1
_myUConverter$ = 8					; size = 4
_mySharedConverterData$ = 12				; size = 4
_pArgs$ = 16						; size = 4
_err$ = 20						; size = 4
_ucnv_createConverterFromSharedData_56 PROC		; COMDAT
; Line 969
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 972
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@ucnv_creat@4
; Line 973
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	push	eax
	call	_ucnv_unloadSharedDataIfReady_56
	add	esp, 4
; Line 974
	mov	eax, DWORD PTR _myUConverter$[ebp]
	jmp	$LN8@ucnv_creat@4
$LN7@ucnv_creat@4:
; Line 976
	cmp	DWORD PTR _myUConverter$[ebp], 0
	jne	SHORT $LN6@ucnv_creat@4
; Line 978
	push	260					; 00000104H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _myUConverter$[ebp], eax
; Line 979
	cmp	DWORD PTR _myUConverter$[ebp], 0
	jne	SHORT $LN5@ucnv_creat@4
; Line 981
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 7
; Line 982
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	push	eax
	call	_ucnv_unloadSharedDataIfReady_56
	add	esp, 4
; Line 983
	xor	eax, eax
	jmp	$LN8@ucnv_creat@4
$LN5@ucnv_creat@4:
; Line 985
	mov	BYTE PTR _isCopyLocal$[ebp], 0
; Line 986
	jmp	SHORT $LN4@ucnv_creat@4
$LN6@ucnv_creat@4:
; Line 987
	mov	BYTE PTR _isCopyLocal$[ebp], 1
$LN4@ucnv_creat@4:
; Line 991
	push	260					; 00000104H
	push	0
	mov	eax, DWORD PTR _myUConverter$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 992
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	cl, BYTE PTR _isCopyLocal$[ebp]
	mov	BYTE PTR [eax+33], cl
; Line 994
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	ecx, DWORD PTR _mySharedConverterData$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 995
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+28], edx
; Line 996
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	$LN3@ucnv_creat@4
; Line 997
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	DWORD PTR [eax+180], -1
; Line 998
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	DWORD PTR [eax+4], OFFSET _UCNV_TO_U_CALLBACK_SUBSTITUTE_56
; Line 999
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	DWORD PTR [eax], OFFSET _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56
; Line 1000
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	ecx, DWORD PTR _mySharedConverterData$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+44], edx
; Line 1001
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _myUConverter$[ebp]
	mov	al, BYTE PTR [ecx+71]
	mov	BYTE PTR [edx+60], al
; Line 1002
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _myUConverter$[ebp]
	mov	al, BYTE PTR [ecx+80]
	mov	BYTE PTR [edx+66], al
; Line 1003
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _myUConverter$[ebp]
	mov	al, BYTE PTR [ecx+76]
	mov	BYTE PTR [edx+61], al
; Line 1004
	mov	eax, DWORD PTR _myUConverter$[ebp]
	add	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _myUConverter$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 1005
	push	1
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 72					; 00000048H
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _myUConverter$[ebp]
	movsx	eax, BYTE PTR [edx+61]
	push	eax
	mov	ecx, DWORD PTR _mySharedConverterData$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 72					; 00000048H
	push	edx
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1006
	mov	eax, DWORD PTR _myUConverter$[ebp]
	mov	DWORD PTR [eax+256], 1
$LN3@ucnv_creat@4:
; Line 1009
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN2@ucnv_creat@4
; Line 1010
	mov	esi, esp
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _myUConverter$[ebp]
	push	edx
	mov	eax, DWORD PTR _mySharedConverterData$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1011
	mov	eax, DWORD PTR _err$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_creat@4
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN2@ucnv_creat@4
; Line 1013
	mov	eax, DWORD PTR _myUConverter$[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 1014
	xor	eax, eax
	jmp	SHORT $LN8@ucnv_creat@4
$LN2@ucnv_creat@4:
; Line 1018
	mov	eax, DWORD PTR _myUConverter$[ebp]
$LN8@ucnv_creat@4:
; Line 1019
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_createConverterFromSharedData_56 ENDP
_TEXT	ENDS
EXTRN	_uhash_removeElement_56:PROC
EXTRN	_uhash_nextElement_56:PROC
EXTRN	_u_flushDefaultConverter_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_flushCache_56
_TEXT	SEGMENT
_remaining$ = -68					; size = 4
_i$ = -56						; size = 4
_e$ = -44						; size = 4
_tableDeletedNum$ = -32					; size = 4
_pos$ = -20						; size = 4
_mySharedData$ = -8					; size = 4
_ucnv_flushCache_56 PROC				; COMDAT
; Line 1025
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1026
	mov	DWORD PTR _mySharedData$[ebp], 0
; Line 1028
	mov	DWORD PTR _tableDeletedNum$[ebp], 0
; Line 1036
	call	_u_flushDefaultConverter_56
; Line 1041
	cmp	DWORD PTR _SHARED_DATA_HASHTABLE, 0
	jne	SHORT $LN9@ucnv_flush@2
; Line 1043
	xor	eax, eax
	jmp	$LN10@ucnv_flush@2
$LN9@ucnv_flush@2:
; Line 1057
	push	OFFSET _cnvCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1064
	mov	DWORD PTR _i$[ebp], 0
$LN8@ucnv_flush@2:
; Line 1066
	mov	DWORD PTR _remaining$[ebp], 0
; Line 1067
	mov	DWORD PTR _pos$[ebp], -1
$LN5@ucnv_flush@2:
; Line 1068
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SHARED_DATA_HASHTABLE
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _e$[ebp], eax
	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN7@ucnv_flush@2
; Line 1070
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _mySharedData$[ebp], ecx
; Line 1072
	mov	eax, DWORD PTR _mySharedData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@ucnv_flush@2
; Line 1074
	mov	eax, DWORD PTR _tableDeletedNum$[ebp]
	add	eax, 1
	mov	DWORD PTR _tableDeletedNum$[ebp], eax
; Line 1078
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SHARED_DATA_HASHTABLE
	push	ecx
	call	_uhash_removeElement_56
	add	esp, 8
; Line 1079
	mov	eax, DWORD PTR _mySharedData$[ebp]
	mov	BYTE PTR [eax+16], 0
; Line 1080
	mov	eax, DWORD PTR _mySharedData$[ebp]
	push	eax
	call	?ucnv_deleteSharedConverterData@@YACPAUUConverterSharedData@@@Z ; ucnv_deleteSharedConverterData
	add	esp, 4
; Line 1081
	jmp	SHORT $LN2@ucnv_flush@2
$LN3@ucnv_flush@2:
; Line 1082
	mov	eax, DWORD PTR _remaining$[ebp]
	add	eax, 1
	mov	DWORD PTR _remaining$[ebp], eax
$LN2@ucnv_flush@2:
; Line 1084
	jmp	SHORT $LN5@ucnv_flush@2
$LN7@ucnv_flush@2:
; Line 1085
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR _i$[ebp], 1
	jne	SHORT $LN6@ucnv_flush@2
	cmp	DWORD PTR _remaining$[ebp], 0
	jg	$LN8@ucnv_flush@2
$LN6@ucnv_flush@2:
; Line 1086
	push	OFFSET _cnvCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 1091
	mov	eax, DWORD PTR _tableDeletedNum$[ebp]
$LN10@ucnv_flush@2:
; Line 1092
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@ucnv_flush@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@ucnv_flush@2:
	DD	1
	DD	$LN13@ucnv_flush@2
$LN13@ucnv_flush@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@ucnv_flush@2
$LN12@ucnv_flush@2:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_ucnv_flushCache_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_bld_countAvailableConverters_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_bld_countAvailableConverters_56
_TEXT	SEGMENT
_pErrorCode$ = 8					; size = 4
_ucnv_bld_countAvailableConverters_56 PROC		; COMDAT
; Line 1139
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1140
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	call	?haveAvailableConverterList@@YACPAW4UErrorCode@@@Z ; haveAvailableConverterList
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ucnv_bld_c
; Line 1141
	mov	ax, WORD PTR _gAvailableConverterCount
	jmp	SHORT $LN2@ucnv_bld_c
$LN1@ucnv_bld_c:
; Line 1143
	xor	eax, eax
$LN2@ucnv_bld_c:
; Line 1144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_bld_countAvailableConverters_56 ENDP
_TEXT	ENDS
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?haveAvailableConverterList@@YACPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_pErrorCode$ = 8					; size = 4
?haveAvailableConverterList@@YACPAW4UErrorCode@@@Z PROC	; haveAvailableConverterList, COMDAT
; Line 1133
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1134
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	OFFSET ?initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z ; initAvailableConvertersList
	push	OFFSET _gAvailableConvertersInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
	add	esp, 12					; 0000000cH
; Line 1135
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
; Line 1136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?haveAvailableConverterList@@YACPAW4UErrorCode@@@Z ENDP	; haveAvailableConverterList
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPostInit
EXTRN	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPreInit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_errCode$ = 16						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z PROC ; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO
; Line 259
	jmp	SHORT $LN5@umtx_initO
$LN4@umtx_initO:
; Line 261
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPreInit
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	call	DWORD PTR _fp$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 265
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit
	add	esp, 4
; Line 266
	jmp	SHORT $LN5@umtx_initO
$LN3@umtx_initO:
; Line 268
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO
; Line 269
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO:
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ENDP ; icu_56::umtx_initOnce
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
PUBLIC	??_C@_1DE@ICMHCJCM@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DM@FBIIHHCO@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FO@GJOCNACL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z@4JA@ad1021aa ; `initAvailableConvertersList'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	_uenum_close_56:PROC
EXTRN	_uenum_next_56:PROC
EXTRN	_uenum_count_56:PROC
EXTRN	_ucnv_openAllNames_56:PROC
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1DE@ICMHCJCM@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\common\ucnv_bld.cpp
CONST	SEGMENT
??_C@_1DE@ICMHCJCM@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'A', 00H, 'v', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FBIIHHCO@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@FBIIHHCO@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'A', 00H, 'v', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'C', 00H
	DB	'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJOCNACL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FO@GJOCNACL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'u', 00H, 'c', 00H, 'n', 00H, 'v', 00H, '_', 00H, 'b'
	DB	00H, 'l', 00H, 'd', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z@4JA@ad1021aa
_DATA	SEGMENT
?__LINE__Var@?1??initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z@4JA@ad1021aa DD 0448H ; `initAvailableConvertersList'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_converterName$71424 = -328				; size = 4
_idx$71420 = -316					; size = 4
_tempConverter$ = -304					; size = 260
_localStatus$ = -36					; size = 4
_allConverterCount$ = -24				; size = 4
_allConvEnum$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_errCode$ = 8						; size = 4
?initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z PROC ; initAvailableConvertersList, COMDAT
; Line 1096
	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1097
	movzx	eax, WORD PTR _gAvailableConverterCount
	test	eax, eax
	je	SHORT $LN9@initAvaila
	mov	ecx, DWORD PTR ?__LINE__Var@?1??initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z@4JA@ad1021aa
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FO@GJOCNACL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1DM@FBIIHHCO@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@initAvaila:
; Line 1098
	cmp	DWORD PTR _gAvailableConverters, 0
	je	SHORT $LN10@initAvaila
	mov	eax, DWORD PTR ?__LINE__Var@?1??initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z@4JA@ad1021aa
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FO@GJOCNACL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1DE@ICMHCJCM@?$AAg?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAr?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@initAvaila:
; Line 1100
	push	OFFSET ?ucnv_cleanup@@YACXZ		; ucnv_cleanup
	push	13					; 0000000dH
	call	_ucln_common_registerCleanup_56
	add	esp, 8
; Line 1101
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	call	_ucnv_openAllNames_56
	add	esp, 4
	mov	DWORD PTR _allConvEnum$[ebp], eax
; Line 1102
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _allConvEnum$[ebp]
	push	ecx
	call	_uenum_count_56
	add	esp, 8
	mov	DWORD PTR _allConverterCount$[ebp], eax
; Line 1103
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@initAvaila
; Line 1104
	jmp	$LN7@initAvaila
$LN6@initAvaila:
; Line 1108
	mov	eax, DWORD PTR _allConverterCount$[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _gAvailableConverters, eax
; Line 1109
	cmp	DWORD PTR _gAvailableConverters, 0
	jne	SHORT $LN5@initAvaila
; Line 1110
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1111
	jmp	$LN7@initAvaila
$LN5@initAvaila:
; Line 1115
	mov	DWORD PTR _localStatus$[ebp], 0
; Line 1117
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _tempConverter$[ebp]
	push	ecx
	call	_ucnv_createConverter_56
	add	esp, 12					; 0000000cH
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 1119
	xor	eax, eax
	mov	WORD PTR _gAvailableConverterCount, ax
; Line 1121
	mov	DWORD PTR _idx$71420[ebp], 0
	jmp	SHORT $LN4@initAvaila
$LN3@initAvaila:
	mov	eax, DWORD PTR _idx$71420[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$71420[ebp], eax
$LN4@initAvaila:
	mov	eax, DWORD PTR _idx$71420[ebp]
	cmp	eax, DWORD PTR _allConverterCount$[ebp]
	jge	SHORT $LN2@initAvaila
; Line 1122
	mov	DWORD PTR _localStatus$[ebp], 0
; Line 1123
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _allConvEnum$[ebp]
	push	ecx
	call	_uenum_next_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _converterName$71424[ebp], eax
; Line 1124
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _converterName$71424[ebp]
	push	ecx
	call	_ucnv_canCreateConverter_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initAvaila
; Line 1125
	movzx	eax, WORD PTR _gAvailableConverterCount
	mov	ecx, DWORD PTR _gAvailableConverters
	mov	edx, DWORD PTR _converterName$71424[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	ax, WORD PTR _gAvailableConverterCount
	add	ax, 1
	mov	WORD PTR _gAvailableConverterCount, ax
$LN1@initAvaila:
; Line 1127
	jmp	SHORT $LN3@initAvaila
$LN2@initAvaila:
; Line 1129
	mov	eax, DWORD PTR _allConvEnum$[ebp]
	push	eax
	call	_uenum_close_56
	add	esp, 4
$LN7@initAvaila:
; Line 1130
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@initAvaila
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@initAvaila:
	DD	2
	DD	$LN13@initAvaila
$LN13@initAvaila:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@initAvaila
	DD	-304					; fffffed0H
	DD	260					; 00000104H
	DD	$LN12@initAvaila
$LN12@initAvaila:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@initAvaila:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?initAvailableConvertersList@@YAXAAW4UErrorCode@@@Z ENDP ; initAvailableConvertersList
_TEXT	ENDS
PUBLIC	_ucnv_bld_getAvailableConverter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_bld_getAvailableConverter_56
_TEXT	SEGMENT
_n$ = 8							; size = 2
_pErrorCode$ = 12					; size = 4
_ucnv_bld_getAvailableConverter_56 PROC			; COMDAT
; Line 1147
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1148
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	call	?haveAvailableConverterList@@YACPAW4UErrorCode@@@Z ; haveAvailableConverterList
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ucnv_bld_g
; Line 1149
	movzx	eax, WORD PTR _n$[ebp]
	movzx	ecx, WORD PTR _gAvailableConverterCount
	cmp	eax, ecx
	jge	SHORT $LN1@ucnv_bld_g
; Line 1150
	movzx	eax, WORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _gAvailableConverters
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN3@ucnv_bld_g
$LN1@ucnv_bld_g:
; Line 1152
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
$LN2@ucnv_bld_g:
; Line 1154
	xor	eax, eax
$LN3@ucnv_bld_g:
; Line 1155
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_bld_getAvailableConverter_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_08DIBGJKBD@US?9ASCII?$AA@			; `string'
EXTRN	_strlen:PROC
EXTRN	_ucnv_getName_56:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	_uprv_getDefaultCodepage_56:PROC
;	COMDAT ??_C@_08DIBGJKBD@US?9ASCII?$AA@
CONST	SEGMENT
??_C@_08DIBGJKBD@US?9ASCII?$AA@ DB 'US-ASCII', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucnv_getDefaultName_56
_TEXT	SEGMENT
_cnv$71460 = -44					; size = 4
_errorCode$71459 = -32					; size = 4
_lock$71457 = -20					; size = 4
_name$ = -8						; size = 4
_ucnv_getDefaultName_56 PROC				; COMDAT
; Line 1221
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1233
	push	OFFSET _cnvCacheMutex
	lea	ecx, DWORD PTR _lock$71457[ebp]
	call	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z	; icu_56::Mutex::Mutex
; Line 1234
	mov	eax, DWORD PTR _gDefaultConverterName
	mov	DWORD PTR _name$[ebp], eax
; Line 1235
	lea	ecx, DWORD PTR _lock$71457[ebp]
	call	??1Mutex@icu_56@@QAE@XZ			; icu_56::Mutex::~Mutex
; Line 1236
	cmp	DWORD PTR _name$[ebp], 0
	jne	$LN5@ucnv_getDe
; Line 1237
	mov	DWORD PTR _errorCode$71459[ebp], 0
; Line 1238
	mov	DWORD PTR _cnv$71460[ebp], 0
; Line 1240
	call	_uprv_getDefaultCodepage_56
	mov	DWORD PTR _name$[ebp], eax
; Line 1243
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN4@ucnv_getDe
; Line 1244
	lea	eax, DWORD PTR _errorCode$71459[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _cnv$71460[ebp], eax
; Line 1245
	mov	eax, DWORD PTR _errorCode$71459[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ucnv_getDe
	cmp	DWORD PTR _cnv$71460[ebp], 0
	je	SHORT $LN4@ucnv_getDe
; Line 1246
	lea	eax, DWORD PTR _errorCode$71459[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$71460[ebp]
	push	ecx
	call	_ucnv_getName_56
	add	esp, 8
	mov	DWORD PTR _name$[ebp], eax
$LN4@ucnv_getDe:
; Line 1252
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN1@ucnv_getDe
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@ucnv_getDe
	mov	eax, DWORD PTR _errorCode$71459[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@ucnv_getDe
	cmp	DWORD PTR _cnv$71460[ebp], 0
	je	SHORT $LN1@ucnv_getDe
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 61					; 0000003dH
	jb	SHORT $LN2@ucnv_getDe
$LN1@ucnv_getDe:
; Line 1256
	mov	DWORD PTR _name$[ebp], OFFSET ??_C@_08DIBGJKBD@US?9ASCII?$AA@
$LN2@ucnv_getDe:
; Line 1265
	lea	eax, DWORD PTR _errorCode$71459[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	?internalSetName@@YAXPBDPAW4UErrorCode@@@Z ; internalSetName
	add	esp, 8
; Line 1268
	mov	eax, DWORD PTR _cnv$71460[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
$LN5@ucnv_getDe:
; Line 1271
	mov	eax, DWORD PTR _name$[ebp]
; Line 1273
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ucnv_getDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@ucnv_getDe:
	DD	2
	DD	$LN10@ucnv_getDe
$LN10@ucnv_getDe:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@ucnv_getDe
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@ucnv_getDe
$LN9@ucnv_getDe:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN8@ucnv_getDe:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_ucnv_getDefaultName_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetName@@YAXPBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_algorithmicSharedData$ = -304				; size = 4
_containsOption$ = -289					; size = 1
_length$ = -280						; size = 4
_stackArgs$ = -268					; size = 28
_stackPieces$ = -232					; size = 224
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_status$ = 12						; size = 4
?internalSetName@@YAXPBDPAW4UErrorCode@@@Z PROC		; internalSetName, COMDAT
; Line 1173
	push	ebp
	mov	ebp, esp
	sub	esp, 500				; 000001f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-500]
	mov	ecx, 125				; 0000007dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1175
	mov	DWORD PTR _stackArgs$[ebp], 28		; 0000001cH
	mov	DWORD PTR _stackArgs$[ebp+4], 0
	mov	BYTE PTR _stackArgs$[ebp+8], 0
	mov	BYTE PTR _stackArgs$[ebp+9], 0
	xor	eax, eax
	mov	WORD PTR _stackArgs$[ebp+10], ax
	mov	DWORD PTR _stackArgs$[ebp+12], 0
	mov	DWORD PTR _stackArgs$[ebp+16], 0
	mov	DWORD PTR _stackArgs$[ebp+20], 0
	mov	DWORD PTR _stackArgs$[ebp+24], 0
; Line 1176
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
; Line 1177
	mov	esi, esp
	push	44					; 0000002cH
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	setne	cl
	mov	BYTE PTR _containsOption$[ebp], cl
; Line 1180
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR _stackArgs$[ebp+20], eax
; Line 1181
	movsx	eax, BYTE PTR _containsOption$[ebp]
	test	eax, eax
	je	SHORT $LN2@internalSe
; Line 1182
	mov	BYTE PTR _stackPieces$[ebp], 0
; Line 1183
	mov	BYTE PTR _stackPieces$[ebp+60], 0
; Line 1184
	mov	DWORD PTR _stackPieces$[ebp+220], 0
; Line 1185
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stackArgs$[ebp]
	push	ecx
	lea	edx, DWORD PTR _stackPieces$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?parseConverterOptions@@YAXPBDPAUUConverterNamePieces@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ; parseConverterOptions
	add	esp, 16					; 00000010H
; Line 1186
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@internalSe
; Line 1187
	jmp	$LN3@internalSe
$LN2@internalSe:
; Line 1190
	mov	eax, DWORD PTR _stackArgs$[ebp+20]
	push	eax
	call	?getAlgorithmicTypeFromName@@YAPBUUConverterSharedData@@PBD@Z ; getAlgorithmicTypeFromName
	add	esp, 4
	mov	DWORD PTR _algorithmicSharedData$[ebp], eax
; Line 1192
	push	OFFSET _cnvCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1194
	mov	eax, DWORD PTR _algorithmicSharedData$[ebp]
	mov	DWORD PTR _gDefaultAlgorithmicSharedData, eax
; Line 1195
	mov	al, BYTE PTR _containsOption$[ebp]
	mov	BYTE PTR _gDefaultConverterContainsOption, al
; Line 1196
	push	1
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	push	OFFSET _gDefaultConverterNameBuffer
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1197
	mov	eax, DWORD PTR _length$[ebp]
	mov	BYTE PTR _gDefaultConverterNameBuffer[eax], 0
; Line 1204
	mov	DWORD PTR _gDefaultConverterName, OFFSET _gDefaultConverterNameBuffer
; Line 1206
	push	OFFSET ?ucnv_cleanup@@YACXZ		; ucnv_cleanup
	push	13					; 0000000dH
	call	_ucln_common_registerCleanup_56
	add	esp, 8
; Line 1208
	push	OFFSET _cnvCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
$LN3@internalSe:
; Line 1209
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@internalSe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 500				; 000001f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@internalSe:
	DD	2
	DD	$LN7@internalSe
$LN7@internalSe:
	DD	-232					; ffffff18H
	DD	224					; 000000e0H
	DD	$LN5@internalSe
	DD	-268					; fffffef4H
	DD	28					; 0000001cH
	DD	$LN6@internalSe
$LN6@internalSe:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN5@internalSe:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?internalSetName@@YAXPBDPAW4UErrorCode@@@Z ENDP		; internalSetName
_TEXT	ENDS
PUBLIC	_ucnv_setDefaultName_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_setDefaultName_56
_TEXT	SEGMENT
_name$71473 = -32					; size = 4
_cnv$71472 = -20					; size = 4
_errorCode$71471 = -8					; size = 4
_converterName$ = 8					; size = 4
_ucnv_setDefaultName_56 PROC				; COMDAT
; Line 1283
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1284
	cmp	DWORD PTR _converterName$[ebp], 0
	jne	SHORT $LN4@ucnv_setDe
; Line 1286
	mov	DWORD PTR _gDefaultConverterName, 0
; Line 1287
	jmp	$LN5@ucnv_setDe
$LN4@ucnv_setDe:
; Line 1288
	mov	DWORD PTR _errorCode$71471[ebp], 0
; Line 1289
	mov	DWORD PTR _cnv$71472[ebp], 0
; Line 1290
	mov	DWORD PTR _name$71473[ebp], 0
; Line 1293
	lea	eax, DWORD PTR _errorCode$71471[ebp]
	push	eax
	mov	ecx, DWORD PTR _converterName$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _cnv$71472[ebp], eax
; Line 1294
	mov	eax, DWORD PTR _errorCode$71471[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ucnv_setDe
	cmp	DWORD PTR _cnv$71472[ebp], 0
	je	SHORT $LN2@ucnv_setDe
; Line 1295
	lea	eax, DWORD PTR _errorCode$71471[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$71472[ebp]
	push	ecx
	call	_ucnv_getName_56
	add	esp, 8
	mov	DWORD PTR _name$71473[ebp], eax
$LN2@ucnv_setDe:
; Line 1298
	mov	eax, DWORD PTR _errorCode$71471[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ucnv_setDe
	cmp	DWORD PTR _name$71473[ebp], 0
	je	SHORT $LN1@ucnv_setDe
; Line 1299
	lea	eax, DWORD PTR _errorCode$71471[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$71473[ebp]
	push	ecx
	call	?internalSetName@@YAXPBDPAW4UErrorCode@@@Z ; internalSetName
	add	esp, 8
$LN1@ucnv_setDe:
; Line 1304
	mov	eax, DWORD PTR _cnv$71472[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 1307
	call	_u_flushDefaultConverter_56
$LN5@ucnv_setDe:
; Line 1309
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ucnv_setDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@ucnv_setDe:
	DD	1
	DD	$LN8@ucnv_setDe
$LN8@ucnv_setDe:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@ucnv_setDe
$LN7@ucnv_setDe:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_ucnv_setDefaultName_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DD@PLEDFGFP@ucnv_swap?$CI?$CJ?3?5unknown?5conversionT@ ; `string'
PUBLIC	??_C@_0GJ@MONCMHMM@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@ ; `string'
PUBLIC	??_C@_0DA@EAAGAFLB@ucnv_swap?$CI?$CJ?3?5unsupported?5MBCS?5ou@ ; `string'
PUBLIC	??_C@_0EE@EBBLHJMC@ucnv_swap?$CI?$CJ?3?5unsupported?5combina@ ; `string'
PUBLIC	??_C@_0DE@CAMEOAFG@ucnv_swap?$CI?$CJ?3?5unsupported?5_MBCSHe@ ; `string'
PUBLIC	??_C@_0FF@DHMHHJGB@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@ ; `string'
PUBLIC	??_C@_0CM@OCICIDKB@ucnv_swap?$CI?$CJ?3?5error?5swapping?5conv@ ; `string'
PUBLIC	??_C@_0EP@PBGBNMPH@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@ ; `string'
PUBLIC	??_C@_0HL@PPOLJHJA@ucnv_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ucnv_swap_56
EXTRN	_udata_readInt32_56:PROC
EXTRN	_udata_printError_56:PROC
EXTRN	_udata_swapDataHeader_56:PROC
;	COMDAT ??_C@_0DD@PLEDFGFP@ucnv_swap?$CI?$CJ?3?5unknown?5conversionT@
CONST	SEGMENT
??_C@_0DD@PLEDFGFP@ucnv_swap?$CI?$CJ?3?5unknown?5conversionT@ DB 'ucnv_sw'
	DB	'ap(): unknown conversionType=%d!=UCNV_MBCS', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@MONCMHMM@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
CONST	SEGMENT
??_C@_0GJ@MONCMHMM@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@ DB 'u'
	DB	'cnv_swap(): too few bytes (%d after headers) for an ICU MBCS '
	DB	'.cnv conversion table with extension data', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EAAGAFLB@ucnv_swap?$CI?$CJ?3?5unsupported?5MBCS?5ou@
CONST	SEGMENT
??_C@_0DA@EAAGAFLB@ucnv_swap?$CI?$CJ?3?5unsupported?5MBCS?5ou@ DB 'ucnv_s'
	DB	'wap(): unsupported MBCS output type 0x%x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@EBBLHJMC@ucnv_swap?$CI?$CJ?3?5unsupported?5combina@
CONST	SEGMENT
??_C@_0EE@EBBLHJMC@ucnv_swap?$CI?$CJ?3?5unsupported?5combina@ DB 'ucnv_sw'
	DB	'ap(): unsupported combination of makeconv --small with SBCS', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CAMEOAFG@ucnv_swap?$CI?$CJ?3?5unsupported?5_MBCSHe@
CONST	SEGMENT
??_C@_0DE@CAMEOAFG@ucnv_swap?$CI?$CJ?3?5unsupported?5_MBCSHe@ DB 'ucnv_sw'
	DB	'ap(): unsupported _MBCSHeader.version %d.%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@DHMHHJGB@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
CONST	SEGMENT
??_C@_0FF@DHMHHJGB@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@ DB 'u'
	DB	'cnv_swap(): too few bytes (%d after headers) for an ICU MBCS '
	DB	'.cnv conversion table', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OCICIDKB@ucnv_swap?$CI?$CJ?3?5error?5swapping?5conv@
CONST	SEGMENT
??_C@_0CM@OCICIDKB@ucnv_swap?$CI?$CJ?3?5error?5swapping?5conv@ DB 'ucnv_s'
	DB	'wap(): error swapping converter name', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@PBGBNMPH@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
CONST	SEGMENT
??_C@_0EP@PBGBNMPH@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@ DB 'u'
	DB	'cnv_swap(): too few bytes (%d after header) for an ICU .cnv c'
	DB	'onversion table', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HL@PPOLJHJA@ucnv_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@
CONST	SEGMENT
??_C@_0HL@PPOLJHJA@ucnv_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@ DB 'u'
	DB	'cnv_swap(): data format %02x.%02x.%02x.%02x (format version %'
	DB	'02x.%02x) is not recognized as an ICU .cnv conversion table', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucnv_swap_56
_TEXT	SEGMENT
tv460 = -500						; size = 4
tv458 = -500						; size = 4
tv323 = -500						; size = 4
_outBaseName$71568 = -300				; size = 4
_inBaseName$71566 = -288				; size = 4
_extOffset$ = -276					; size = 4
_inExtIndexes$ = -264					; size = 4
_mbcsIndexLength$ = -252				; size = 4
_maxFastUChar$ = -240					; size = 4
_outputType$ = -225					; size = 1
_noFromU$ = -213					; size = 1
_mbcsHeaderLength$ = -204				; size = 4
_mbcsHeader$ = -192					; size = 40
_outMBCSHeader$ = -144					; size = 4
_inMBCSHeader$ = -132					; size = 4
_outStaticData$ = -120					; size = 4
_inStaticData$ = -108					; size = 4
_size$ = -96						; size = 4
_staticDataSize$ = -84					; size = 4
_count$ = -72						; size = 4
_offset$ = -60						; size = 4
_outBytes$ = -48					; size = 4
_inBytes$ = -36						; size = 4
_headerSize$ = -24					; size = 4
_pInfo$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ds$ = 8						; size = 4
_inData$ = 12						; size = 4
_length$ = 16						; size = 4
_outData$ = 20						; size = 4
_pErrorCode$ = 24					; size = 4
_ucnv_swap_56 PROC					; COMDAT
; Line 1321
	push	ebp
	mov	ebp, esp
	sub	esp, 500				; 000001f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-500]
	mov	ecx, 125				; 0000007dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1338
	mov	BYTE PTR _noFromU$[ebp], 0
; Line 1348
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _inData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_swapDataHeader_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _headerSize$[ebp], eax
; Line 1349
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN44@ucnv_swap_
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN45@ucnv_swap_
$LN44@ucnv_swap_:
; Line 1350
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN45@ucnv_swap_:
; Line 1354
	mov	eax, DWORD PTR _inData$[ebp]
	add	eax, 4
	mov	DWORD PTR _pInfo$[ebp], eax
; Line 1362
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 99					; 00000063H
	jne	SHORT $LN42@ucnv_swap_
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	cmp	ecx, 110				; 0000006eH
	jne	SHORT $LN42@ucnv_swap_
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 118				; 00000076H
	jne	SHORT $LN42@ucnv_swap_
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+11]
	cmp	ecx, 116				; 00000074H
	jne	SHORT $LN42@ucnv_swap_
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	cmp	ecx, 6
	jne	SHORT $LN42@ucnv_swap_
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	cmp	ecx, 2
	jge	SHORT $LN43@ucnv_swap_
$LN42@ucnv_swap_:
; Line 1366
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+11]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+9]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+8]
	push	edx
	push	OFFSET ??_C@_0HL@PPOLJHJA@ucnv_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_printError_56
	add	esp, 32					; 00000020H
; Line 1367
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 1368
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN43@ucnv_swap_:
; Line 1371
	mov	eax, DWORD PTR _inData$[ebp]
	add	eax, DWORD PTR _headerSize$[ebp]
	mov	DWORD PTR _inBytes$[ebp], eax
; Line 1372
	mov	eax, DWORD PTR _outData$[ebp]
	add	eax, DWORD PTR _headerSize$[ebp]
	mov	DWORD PTR _outBytes$[ebp], eax
; Line 1375
	mov	eax, DWORD PTR _inBytes$[ebp]
	mov	DWORD PTR _inStaticData$[ebp], eax
; Line 1376
	mov	eax, DWORD PTR _outBytes$[ebp]
	mov	DWORD PTR _outStaticData$[ebp], eax
; Line 1378
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN41@ucnv_swap_
; Line 1379
	mov	esi, esp
	mov	eax, DWORD PTR _inStaticData$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _staticDataSize$[ebp], eax
; Line 1380
	jmp	SHORT $LN40@ucnv_swap_
$LN41@ucnv_swap_:
; Line 1381
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _headerSize$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 1384
	cmp	DWORD PTR _length$[ebp], 100		; 00000064H
	jl	SHORT $LN38@ucnv_swap_
	mov	esi, esp
	mov	eax, DWORD PTR _inStaticData$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _staticDataSize$[ebp], eax
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR _staticDataSize$[ebp]
	jae	SHORT $LN40@ucnv_swap_
$LN38@ucnv_swap_:
; Line 1386
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	OFFSET ??_C@_0EP@PBGBNMPH@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 1387
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1388
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN40@ucnv_swap_:
; Line 1392
	cmp	DWORD PTR _length$[ebp], 0
	jl	$LN37@ucnv_swap_
; Line 1394
	mov	eax, DWORD PTR _inStaticData$[ebp]
	cmp	eax, DWORD PTR _outStaticData$[ebp]
	je	SHORT $LN36@ucnv_swap_
; Line 1395
	push	1
	mov	eax, DWORD PTR _inStaticData$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _staticDataSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inStaticData$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStaticData$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN36@ucnv_swap_:
; Line 1399
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outStaticData$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _inStaticData$[ebp]
	push	edx
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1401
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outStaticData$[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	push	4
	mov	edx, DWORD PTR _inStaticData$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1404
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outStaticData$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _inStaticData$[ebp]
	add	edx, 4
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _inStaticData$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1405
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN37@ucnv_swap_
; Line 1406
	push	OFFSET ??_C@_0CM@OCICIDKB@ucnv_swap?$CI?$CJ?3?5error?5swapping?5conv@
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_printError_56
	add	esp, 8
; Line 1407
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN37@ucnv_swap_:
; Line 1411
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _staticDataSize$[ebp]
	mov	DWORD PTR _inBytes$[ebp], eax
; Line 1412
	mov	eax, DWORD PTR _outBytes$[ebp]
	add	eax, DWORD PTR _staticDataSize$[ebp]
	mov	DWORD PTR _outBytes$[ebp], eax
; Line 1413
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN34@ucnv_swap_
; Line 1414
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _staticDataSize$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN34@ucnv_swap_:
; Line 1418
	mov	eax, DWORD PTR _inStaticData$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, 2
	jne	$LN33@ucnv_swap_
; Line 1420
	mov	eax, DWORD PTR _inBytes$[ebp]
	mov	DWORD PTR _inMBCSHeader$[ebp], eax
; Line 1421
	mov	eax, DWORD PTR _outBytes$[ebp]
	mov	DWORD PTR _outMBCSHeader$[ebp], eax
; Line 1423
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN32@ucnv_swap_
	cmp	DWORD PTR _length$[ebp], 40		; 00000028H
	jge	SHORT $LN32@ucnv_swap_
; Line 1425
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	OFFSET ??_C@_0FF@DHMHHJGB@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 1426
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1427
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN32@ucnv_swap_:
; Line 1429
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 4
	jne	SHORT $LN31@ucnv_swap_
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 1
	jl	SHORT $LN31@ucnv_swap_
; Line 1430
	mov	DWORD PTR _mbcsHeaderLength$[ebp], 8
; Line 1431
	jmp	$LN30@ucnv_swap_
$LN31@ucnv_swap_:
; Line 1434
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 5
	jne	SHORT $LN29@ucnv_swap_
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 3
	jl	SHORT $LN29@ucnv_swap_
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+32], eax
	mov	ecx, DWORD PTR _mbcsHeader$[ebp+32]
	and	ecx, 65408				; 0000ff80H
	jne	SHORT $LN29@ucnv_swap_
; Line 1435
	mov	eax, DWORD PTR _mbcsHeader$[ebp+32]
	and	eax, 63					; 0000003fH
	mov	DWORD PTR _mbcsHeaderLength$[ebp], eax
; Line 1436
	mov	eax, DWORD PTR _mbcsHeader$[ebp+32]
	and	eax, 64					; 00000040H
	setne	cl
	mov	BYTE PTR _noFromU$[ebp], cl
; Line 1437
	jmp	SHORT $LN30@ucnv_swap_
$LN29@ucnv_swap_:
; Line 1439
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	edx, DWORD PTR _inMBCSHeader$[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	push	OFFSET ??_C@_0DE@CAMEOAFG@ucnv_swap?$CI?$CJ?3?5unsupported?5_MBCSHe@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 16					; 00000010H
; Line 1440
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 1441
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN30@ucnv_swap_:
; Line 1444
	push	1
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	mov	ecx, DWORD PTR _inMBCSHeader$[ebp]
	push	ecx
	lea	edx, DWORD PTR _mbcsHeader$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1445
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+4], eax
; Line 1446
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+8], eax
; Line 1447
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+12], eax
; Line 1448
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+16], eax
; Line 1449
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+20], eax
; Line 1450
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+24], eax
; Line 1451
	mov	esi, esp
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbcsHeader$[ebp+28], eax
; Line 1454
	mov	eax, DWORD PTR _mbcsHeader$[ebp+24]
	shr	eax, 8
	mov	DWORD PTR _extOffset$[ebp], eax
; Line 1455
	mov	al, BYTE PTR _mbcsHeader$[ebp+24]
	mov	BYTE PTR _outputType$[ebp], al
; Line 1456
	movsx	eax, BYTE PTR _noFromU$[ebp]
	test	eax, eax
	je	SHORT $LN27@ucnv_swap_
	movzx	eax, BYTE PTR _outputType$[ebp]
	test	eax, eax
	jne	SHORT $LN27@ucnv_swap_
; Line 1457
	push	OFFSET ??_C@_0EE@EBBLHJMC@ucnv_swap?$CI?$CJ?3?5unsupported?5combina@
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_printError_56
	add	esp, 8
; Line 1458
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 1459
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN27@ucnv_swap_:
; Line 1463
	movzx	eax, BYTE PTR _outputType$[ebp]
	mov	DWORD PTR tv323[ebp], eax
	cmp	DWORD PTR tv323[ebp], 14		; 0000000eH
	ja	SHORT $LN23@ucnv_swap_
	mov	ecx, DWORD PTR tv323[ebp]
	movzx	edx, BYTE PTR $LN50@ucnv_swap_[ecx]
	jmp	DWORD PTR $LN55@ucnv_swap_[edx*4]
$LN24@ucnv_swap_:
; Line 1473
	jmp	SHORT $LN25@ucnv_swap_
$LN23@ucnv_swap_:
; Line 1476
	movzx	eax, BYTE PTR _outputType$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@EAAGAFLB@ucnv_swap?$CI?$CJ?3?5unsupported?5MBCS?5ou@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 1477
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 1478
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN25@ucnv_swap_:
; Line 1489
	mov	DWORD PTR _maxFastUChar$[ebp], 0
; Line 1490
	mov	DWORD PTR _mbcsIndexLength$[ebp], 0
; Line 1493
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 14					; 0000000eH
	je	SHORT $LN22@ucnv_swap_
	movzx	eax, BYTE PTR _outputType$[ebp]
	test	eax, eax
	je	SHORT $LN22@ucnv_swap_
	movzx	eax, BYTE PTR _mbcsHeader$[ebp+1]
	cmp	eax, 3
	jl	SHORT $LN22@ucnv_swap_
	movzx	eax, BYTE PTR _mbcsHeader$[ebp+2]
	mov	DWORD PTR _maxFastUChar$[ebp], eax
	cmp	DWORD PTR _maxFastUChar$[ebp], 0
	je	SHORT $LN22@ucnv_swap_
; Line 1494
	mov	eax, DWORD PTR _maxFastUChar$[ebp]
	shl	eax, 8
	or	eax, 255				; 000000ffH
	mov	DWORD PTR _maxFastUChar$[ebp], eax
; Line 1495
	mov	eax, DWORD PTR _maxFastUChar$[ebp]
	add	eax, 1
	sar	eax, 6
	shl	eax, 1
	mov	DWORD PTR _mbcsIndexLength$[ebp], eax
$LN22@ucnv_swap_:
; Line 1498
	cmp	DWORD PTR _extOffset$[ebp], 0
	jne	SHORT $LN21@ucnv_swap_
; Line 1499
	mov	eax, DWORD PTR _mbcsHeader$[ebp+20]
	add	eax, DWORD PTR _mbcsIndexLength$[ebp]
	mov	DWORD PTR _size$[ebp], eax
; Line 1500
	movsx	eax, BYTE PTR _noFromU$[ebp]
	test	eax, eax
	jne	SHORT $LN20@ucnv_swap_
; Line 1501
	mov	eax, DWORD PTR _size$[ebp]
	add	eax, DWORD PTR _mbcsHeader$[ebp+28]
	mov	DWORD PTR _size$[ebp], eax
$LN20@ucnv_swap_:
; Line 1505
	mov	DWORD PTR _inExtIndexes$[ebp], 0
; Line 1506
	jmp	SHORT $LN19@ucnv_swap_
$LN21@ucnv_swap_:
; Line 1508
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN18@ucnv_swap_
	mov	eax, DWORD PTR _extOffset$[ebp]
	add	eax, 128				; 00000080H
	cmp	DWORD PTR _length$[ebp], eax
	jge	SHORT $LN18@ucnv_swap_
; Line 1510
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	OFFSET ??_C@_0GJ@MONCMHMM@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 1511
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1512
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN18@ucnv_swap_:
; Line 1515
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _extOffset$[ebp]
	mov	DWORD PTR _inExtIndexes$[ebp], eax
; Line 1516
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	add	eax, DWORD PTR _extOffset$[ebp]
	mov	DWORD PTR _size$[ebp], eax
$LN19@ucnv_swap_:
; Line 1519
	cmp	DWORD PTR _length$[ebp], 0
	jl	$LN17@ucnv_swap_
; Line 1520
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jge	SHORT $LN16@ucnv_swap_
; Line 1522
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	OFFSET ??_C@_0FF@DHMHHJGB@ucnv_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 1523
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1524
	xor	eax, eax
	jmp	$LN46@ucnv_swap_
$LN16@ucnv_swap_:
; Line 1528
	mov	eax, DWORD PTR _inBytes$[ebp]
	cmp	eax, DWORD PTR _outBytes$[ebp]
	je	SHORT $LN15@ucnv_swap_
; Line 1529
	push	1
	mov	eax, DWORD PTR _inBytes$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inBytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _outBytes$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN15@ucnv_swap_:
; Line 1533
	mov	eax, DWORD PTR _mbcsHeaderLength$[ebp]
	shl	eax, 2
	mov	DWORD PTR _count$[ebp], eax
; Line 1535
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outMBCSHeader$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, 4
	push	edx
	mov	eax, DWORD PTR _inMBCSHeader$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1537
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 14					; 0000000eH
	jne	SHORT $LN14@ucnv_swap_
; Line 1544
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _inBaseName$71566[ebp], eax
; Line 1545
	mov	eax, DWORD PTR _outBytes$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _outBaseName$71568[ebp], eax
; Line 1547
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBaseName$71568[ebp]
	push	ecx
	mov	edx, DWORD PTR _inBaseName$71566[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _inBaseName$71566[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1548
	jmp	$LN13@ucnv_swap_
$LN14@ucnv_swap_:
; Line 1552
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1553
	mov	eax, DWORD PTR _mbcsHeader$[ebp+4]
	shl	eax, 10					; 0000000aH
	mov	DWORD PTR _count$[ebp], eax
; Line 1555
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1558
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1559
	mov	eax, DWORD PTR _mbcsHeader$[ebp+8]
	shl	eax, 3
	mov	DWORD PTR _count$[ebp], eax
; Line 1561
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1564
	mov	eax, DWORD PTR _mbcsHeader$[ebp+12]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1565
	mov	eax, DWORD PTR _mbcsHeader$[ebp+16]
	sub	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _count$[ebp], eax
; Line 1567
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1570
	mov	eax, DWORD PTR _mbcsHeader$[ebp+16]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1572
	movzx	eax, BYTE PTR _outputType$[ebp]
	test	eax, eax
	jne	SHORT $LN12@ucnv_swap_
; Line 1574
	mov	eax, DWORD PTR _mbcsHeader$[ebp+20]
	sub	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR _mbcsHeader$[ebp+28]
	mov	DWORD PTR _count$[ebp], eax
; Line 1576
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1577
	jmp	$LN13@ucnv_swap_
$LN12@ucnv_swap_:
; Line 1581
	mov	eax, DWORD PTR _inStaticData$[ebp]
	movzx	ecx, BYTE PTR [eax+79]
	and	ecx, 1
	je	SHORT $LN10@ucnv_swap_
; Line 1582
	mov	DWORD PTR _count$[ebp], 2176		; 00000880H
; Line 1583
	jmp	SHORT $LN9@ucnv_swap_
$LN10@ucnv_swap_:
; Line 1584
	mov	DWORD PTR _count$[ebp], 128		; 00000080H
$LN9@ucnv_swap_:
; Line 1587
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1590
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1591
	mov	eax, DWORD PTR _mbcsHeader$[ebp+20]
	sub	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _count$[ebp], eax
; Line 1593
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1596
	mov	eax, DWORD PTR _mbcsHeader$[ebp+20]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1597
	movsx	eax, BYTE PTR _noFromU$[ebp]
	test	eax, eax
	je	SHORT $LN48@ucnv_swap_
	mov	DWORD PTR tv458[ebp], 0
	jmp	SHORT $LN49@ucnv_swap_
$LN48@ucnv_swap_:
	mov	ecx, DWORD PTR _mbcsHeader$[ebp+28]
	mov	DWORD PTR tv458[ebp], ecx
$LN49@ucnv_swap_:
	mov	edx, DWORD PTR tv458[ebp]
	mov	DWORD PTR _count$[ebp], edx
; Line 1598
	movzx	eax, BYTE PTR _outputType$[ebp]
	mov	DWORD PTR tv460[ebp], eax
	mov	ecx, DWORD PTR tv460[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv460[ebp], ecx
	cmp	DWORD PTR tv460[ebp], 11		; 0000000bH
	ja	SHORT $LN7@ucnv_swap_
	mov	edx, DWORD PTR tv460[ebp]
	movzx	eax, BYTE PTR $LN51@ucnv_swap_[edx]
	jmp	DWORD PTR $LN56@ucnv_swap_[eax*4]
$LN6@ucnv_swap_:
; Line 1603
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1604
	jmp	SHORT $LN7@ucnv_swap_
$LN5@ucnv_swap_:
; Line 1607
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@ucnv_swap_:
; Line 1614
	cmp	DWORD PTR _mbcsIndexLength$[ebp], 0
	je	SHORT $LN13@ucnv_swap_
; Line 1615
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 1616
	mov	eax, DWORD PTR _mbcsIndexLength$[ebp]
	mov	DWORD PTR _count$[ebp], eax
; Line 1618
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@ucnv_swap_:
; Line 1623
	cmp	DWORD PTR _extOffset$[ebp], 0
	je	$LN17@ucnv_swap_
; Line 1625
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _extOffset$[ebp]
	mov	DWORD PTR _inBytes$[ebp], eax
; Line 1626
	mov	eax, DWORD PTR _outBytes$[ebp]
	add	eax, DWORD PTR _extOffset$[ebp]
	mov	DWORD PTR _outBytes$[ebp], eax
; Line 1629
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1630
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1631
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1634
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1635
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1636
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1639
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1640
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1641
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1644
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1646
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1651
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1652
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1653
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1656
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1657
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1658
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1661
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _offset$[ebp], eax
; Line 1662
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1663
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1666
	mov	eax, DWORD PTR _inExtIndexes$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	DWORD PTR _length$[ebp], eax
; Line 1667
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@ucnv_swap_:
; Line 1670
	jmp	SHORT $LN1@ucnv_swap_
$LN33@ucnv_swap_:
; Line 1672
	mov	eax, DWORD PTR _inStaticData$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	push	ecx
	push	OFFSET ??_C@_0DD@PLEDFGFP@ucnv_swap?$CI?$CJ?3?5unknown?5conversionT@
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 1673
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 1674
	xor	eax, eax
	jmp	SHORT $LN46@ucnv_swap_
$LN1@ucnv_swap_:
; Line 1677
	mov	eax, DWORD PTR _headerSize$[ebp]
	add	eax, DWORD PTR _staticDataSize$[ebp]
	add	eax, DWORD PTR _size$[ebp]
$LN46@ucnv_swap_:
; Line 1678
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN54@ucnv_swap_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 500				; 000001f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN54@ucnv_swap_:
	DD	1
	DD	$LN53@ucnv_swap_
$LN53@ucnv_swap_:
	DD	-192					; ffffff40H
	DD	40					; 00000028H
	DD	$LN52@ucnv_swap_
$LN52@ucnv_swap_:
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
	npad	1
$LN55@ucnv_swap_:
	DD	$LN24@ucnv_swap_
	DD	$LN23@ucnv_swap_
$LN50@ucnv_swap_:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	0
	npad	1
$LN56@ucnv_swap_:
	DD	$LN6@ucnv_swap_
	DD	$LN5@ucnv_swap_
	DD	$LN7@ucnv_swap_
$LN51@ucnv_swap_:
	DB	0
	DB	2
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	0
_ucnv_swap_56 ENDP
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@EGNPDDBI@x11compoundtext?$AA@		; `string'
PUBLIC	??_C@_04LHHHFLPP@utf8?$AA@			; `string'
PUBLIC	??_C@_04DAOPEHDA@utf7?$AA@			; `string'
PUBLIC	??_C@_0BE@FKEPAEMC@utf32platformendian?$AA@	; `string'
PUBLIC	??_C@_0BE@GALJLJAN@utf32oppositeendian?$AA@	; `string'
PUBLIC	??_C@_07FNADPIMH@utf32le?$AA@			; `string'
PUBLIC	??_C@_07FHJNNFMN@utf32be?$AA@			; `string'
PUBLIC	??_C@_05MMJACDEG@utf32?$AA@			; `string'
PUBLIC	??_C@_0BE@FKECNIIC@utf16platformendian?$AA@	; `string'
PUBLIC	??_C@_0BE@GALEGFEN@utf16oppositeendian?$AA@	; `string'
PUBLIC	??_C@_07KIKBDMPA@utf16le?$AA@			; `string'
PUBLIC	??_C@_07KCDPBBPK@utf16be?$AA@			; `string'
PUBLIC	??_C@_05KLHIDCCM@utf16?$AA@			; `string'
PUBLIC	??_C@_07EJNELJI@usascii?$AA@			; `string'
PUBLIC	??_C@_04KKMDJBKK@scsu?$AA@			; `string'
PUBLIC	??_C@_06BBKGAMKG@lmbcs8?$AA@			; `string'
PUBLIC	??_C@_06IPCFCBCI@lmbcs6?$AA@			; `string'
PUBLIC	??_C@_06KEAIHCOL@lmbcs5?$AA@			; `string'
PUBLIC	??_C@_06LNBDEDKK@lmbcs4?$AA@			; `string'
PUBLIC	??_C@_06PCFCNFGN@lmbcs3?$AA@			; `string'
PUBLIC	??_C@_06OLEJOECM@lmbcs2?$AA@			; `string'
PUBLIC	??_C@_07DOPBBGOE@lmbcs19?$AA@			; `string'
PUBLIC	??_C@_07CHOKCHKF@lmbcs18?$AA@			; `string'
PUBLIC	??_C@_07KAHCDLGK@lmbcs17?$AA@			; `string'
PUBLIC	??_C@_07LJGJAKCL@lmbcs16?$AA@			; `string'
PUBLIC	??_C@_07PGCIJMOM@lmbcs11?$AA@			; `string'
PUBLIC	??_C@_06MAGELHOP@lmbcs1?$AA@			; `string'
PUBLIC	??_C@_08OFHNNBGI@iso88591?$AA@			; `string'
PUBLIC	??_C@_07JAAOJKPH@iso2022?$AA@			; `string'
PUBLIC	??_C@_05FBOOCHN@iscii?$AA@			; `string'
PUBLIC	??_C@_0BA@KHDGOBGO@imapmailboxname?$AA@		; `string'
PUBLIC	??_C@_02JDKKCNAJ@hz?$AA@			; `string'
PUBLIC	??_C@_05KNKAMCKH@cesu8?$AA@			; `string'
PUBLIC	??_C@_05KNJHOFHF@bocu1?$AA@			; `string'
;	COMDAT ??_C@_0BA@EGNPDDBI@x11compoundtext?$AA@
; File d:\mozilla\intl\icu\source\common\ucnv_bld.cpp
CONST	SEGMENT
??_C@_0BA@EGNPDDBI@x11compoundtext?$AA@ DB 'x11compoundtext', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LHHHFLPP@utf8?$AA@
CONST	SEGMENT
??_C@_04LHHHFLPP@utf8?$AA@ DB 'utf8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DAOPEHDA@utf7?$AA@
CONST	SEGMENT
??_C@_04DAOPEHDA@utf7?$AA@ DB 'utf7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKEPAEMC@utf32platformendian?$AA@
CONST	SEGMENT
??_C@_0BE@FKEPAEMC@utf32platformendian?$AA@ DB 'utf32platformendian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GALJLJAN@utf32oppositeendian?$AA@
CONST	SEGMENT
??_C@_0BE@GALJLJAN@utf32oppositeendian?$AA@ DB 'utf32oppositeendian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNADPIMH@utf32le?$AA@
CONST	SEGMENT
??_C@_07FNADPIMH@utf32le?$AA@ DB 'utf32le', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FHJNNFMN@utf32be?$AA@
CONST	SEGMENT
??_C@_07FHJNNFMN@utf32be?$AA@ DB 'utf32be', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MMJACDEG@utf32?$AA@
CONST	SEGMENT
??_C@_05MMJACDEG@utf32?$AA@ DB 'utf32', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKECNIIC@utf16platformendian?$AA@
CONST	SEGMENT
??_C@_0BE@FKECNIIC@utf16platformendian?$AA@ DB 'utf16platformendian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GALEGFEN@utf16oppositeendian?$AA@
CONST	SEGMENT
??_C@_0BE@GALEGFEN@utf16oppositeendian?$AA@ DB 'utf16oppositeendian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KIKBDMPA@utf16le?$AA@
CONST	SEGMENT
??_C@_07KIKBDMPA@utf16le?$AA@ DB 'utf16le', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KCDPBBPK@utf16be?$AA@
CONST	SEGMENT
??_C@_07KCDPBBPK@utf16be?$AA@ DB 'utf16be', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KLHIDCCM@utf16?$AA@
CONST	SEGMENT
??_C@_05KLHIDCCM@utf16?$AA@ DB 'utf16', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EJNELJI@usascii?$AA@
CONST	SEGMENT
??_C@_07EJNELJI@usascii?$AA@ DB 'usascii', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KKMDJBKK@scsu?$AA@
CONST	SEGMENT
??_C@_04KKMDJBKK@scsu?$AA@ DB 'scsu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BBKGAMKG@lmbcs8?$AA@
CONST	SEGMENT
??_C@_06BBKGAMKG@lmbcs8?$AA@ DB 'lmbcs8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IPCFCBCI@lmbcs6?$AA@
CONST	SEGMENT
??_C@_06IPCFCBCI@lmbcs6?$AA@ DB 'lmbcs6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KEAIHCOL@lmbcs5?$AA@
CONST	SEGMENT
??_C@_06KEAIHCOL@lmbcs5?$AA@ DB 'lmbcs5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNBDEDKK@lmbcs4?$AA@
CONST	SEGMENT
??_C@_06LNBDEDKK@lmbcs4?$AA@ DB 'lmbcs4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PCFCNFGN@lmbcs3?$AA@
CONST	SEGMENT
??_C@_06PCFCNFGN@lmbcs3?$AA@ DB 'lmbcs3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OLEJOECM@lmbcs2?$AA@
CONST	SEGMENT
??_C@_06OLEJOECM@lmbcs2?$AA@ DB 'lmbcs2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DOPBBGOE@lmbcs19?$AA@
CONST	SEGMENT
??_C@_07DOPBBGOE@lmbcs19?$AA@ DB 'lmbcs19', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CHOKCHKF@lmbcs18?$AA@
CONST	SEGMENT
??_C@_07CHOKCHKF@lmbcs18?$AA@ DB 'lmbcs18', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KAHCDLGK@lmbcs17?$AA@
CONST	SEGMENT
??_C@_07KAHCDLGK@lmbcs17?$AA@ DB 'lmbcs17', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LJGJAKCL@lmbcs16?$AA@
CONST	SEGMENT
??_C@_07LJGJAKCL@lmbcs16?$AA@ DB 'lmbcs16', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PGCIJMOM@lmbcs11?$AA@
CONST	SEGMENT
??_C@_07PGCIJMOM@lmbcs11?$AA@ DB 'lmbcs11', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MAGELHOP@lmbcs1?$AA@
CONST	SEGMENT
??_C@_06MAGELHOP@lmbcs1?$AA@ DB 'lmbcs1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFHNNBGI@iso88591?$AA@
CONST	SEGMENT
??_C@_08OFHNNBGI@iso88591?$AA@ DB 'iso88591', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JAAOJKPH@iso2022?$AA@
CONST	SEGMENT
??_C@_07JAAOJKPH@iso2022?$AA@ DB 'iso2022', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FBOOCHN@iscii?$AA@
CONST	SEGMENT
??_C@_05FBOOCHN@iscii?$AA@ DB 'iscii', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KHDGOBGO@imapmailboxname?$AA@
CONST	SEGMENT
??_C@_0BA@KHDGOBGO@imapmailboxname?$AA@ DB 'imapmailboxname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDKKCNAJ@hz?$AA@
CONST	SEGMENT
??_C@_02JDKKCNAJ@hz?$AA@ DB 'hz', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05KNKAMCKH@cesu8?$AA@
CONST	SEGMENT
??_C@_05KNKAMCKH@cesu8?$AA@ DB 'cesu8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KNJHOFHF@bocu1?$AA@
CONST	SEGMENT
??_C@_05KNJHOFHF@bocu1?$AA@ DB 'bocu1', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??__EcnvNameType@@YAXXZ
text$yc	SEGMENT
??__EcnvNameType@@YAXXZ PROC				; `dynamic initializer for 'cnvNameType'', COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 127
	mov	DWORD PTR _cnvNameType, OFFSET ??_C@_05KNJHOFHF@bocu1?$AA@
	mov	DWORD PTR _cnvNameType+4, 28		; 0000001cH
; Line 128
	mov	DWORD PTR _cnvNameType+8, OFFSET ??_C@_05KNKAMCKH@cesu8?$AA@
	mov	DWORD PTR _cnvNameType+12, 31		; 0000001fH
; Line 131
	mov	DWORD PTR _cnvNameType+16, OFFSET ??_C@_02JDKKCNAJ@hz?$AA@
	mov	DWORD PTR _cnvNameType+20, 23		; 00000017H
; Line 134
	mov	DWORD PTR _cnvNameType+24, OFFSET ??_C@_0BA@KHDGOBGO@imapmailboxname?$AA@
	mov	DWORD PTR _cnvNameType+28, 32		; 00000020H
; Line 137
	mov	DWORD PTR _cnvNameType+32, OFFSET ??_C@_05FBOOCHN@iscii?$AA@
	mov	DWORD PTR _cnvNameType+36, 25		; 00000019H
; Line 140
	mov	DWORD PTR _cnvNameType+40, OFFSET ??_C@_07JAAOJKPH@iso2022?$AA@
	mov	DWORD PTR _cnvNameType+44, 10		; 0000000aH
; Line 142
	mov	DWORD PTR _cnvNameType+48, OFFSET ??_C@_08OFHNNBGI@iso88591?$AA@
	mov	DWORD PTR _cnvNameType+52, 3
; Line 144
	mov	DWORD PTR _cnvNameType+56, OFFSET ??_C@_06MAGELHOP@lmbcs1?$AA@
	mov	DWORD PTR _cnvNameType+60, 11		; 0000000bH
; Line 145
	mov	DWORD PTR _cnvNameType+64, OFFSET ??_C@_07PGCIJMOM@lmbcs11?$AA@
	mov	DWORD PTR _cnvNameType+68, 18		; 00000012H
; Line 146
	mov	DWORD PTR _cnvNameType+72, OFFSET ??_C@_07LJGJAKCL@lmbcs16?$AA@
	mov	DWORD PTR _cnvNameType+76, 19		; 00000013H
; Line 147
	mov	DWORD PTR _cnvNameType+80, OFFSET ??_C@_07KAHCDLGK@lmbcs17?$AA@
	mov	DWORD PTR _cnvNameType+84, 20		; 00000014H
; Line 148
	mov	DWORD PTR _cnvNameType+88, OFFSET ??_C@_07CHOKCHKF@lmbcs18?$AA@
	mov	DWORD PTR _cnvNameType+92, 21		; 00000015H
; Line 149
	mov	DWORD PTR _cnvNameType+96, OFFSET ??_C@_07DOPBBGOE@lmbcs19?$AA@
	mov	DWORD PTR _cnvNameType+100, 22		; 00000016H
; Line 150
	mov	DWORD PTR _cnvNameType+104, OFFSET ??_C@_06OLEJOECM@lmbcs2?$AA@
	mov	DWORD PTR _cnvNameType+108, 12		; 0000000cH
; Line 151
	mov	DWORD PTR _cnvNameType+112, OFFSET ??_C@_06PCFCNFGN@lmbcs3?$AA@
	mov	DWORD PTR _cnvNameType+116, 13		; 0000000dH
; Line 152
	mov	DWORD PTR _cnvNameType+120, OFFSET ??_C@_06LNBDEDKK@lmbcs4?$AA@
	mov	DWORD PTR _cnvNameType+124, 14		; 0000000eH
; Line 153
	mov	DWORD PTR _cnvNameType+128, OFFSET ??_C@_06KEAIHCOL@lmbcs5?$AA@
	mov	DWORD PTR _cnvNameType+132, 15		; 0000000fH
; Line 154
	mov	DWORD PTR _cnvNameType+136, OFFSET ??_C@_06IPCFCBCI@lmbcs6?$AA@
	mov	DWORD PTR _cnvNameType+140, 16		; 00000010H
; Line 155
	mov	DWORD PTR _cnvNameType+144, OFFSET ??_C@_06BBKGAMKG@lmbcs8?$AA@
	mov	DWORD PTR _cnvNameType+148, 17		; 00000011H
; Line 158
	mov	DWORD PTR _cnvNameType+152, OFFSET ??_C@_04KKMDJBKK@scsu?$AA@
	mov	DWORD PTR _cnvNameType+156, 24		; 00000018H
; Line 160
	mov	DWORD PTR _cnvNameType+160, OFFSET ??_C@_07EJNELJI@usascii?$AA@
	mov	DWORD PTR _cnvNameType+164, 26		; 0000001aH
; Line 161
	mov	DWORD PTR _cnvNameType+168, OFFSET ??_C@_05KLHIDCCM@utf16?$AA@
	mov	DWORD PTR _cnvNameType+172, 29		; 0000001dH
; Line 162
	mov	DWORD PTR _cnvNameType+176, OFFSET ??_C@_07KCDPBBPK@utf16be?$AA@
	mov	DWORD PTR _cnvNameType+180, 5
; Line 163
	mov	DWORD PTR _cnvNameType+184, OFFSET ??_C@_07KIKBDMPA@utf16le?$AA@
	mov	DWORD PTR _cnvNameType+188, 6
; Line 168
	mov	DWORD PTR _cnvNameType+192, OFFSET ??_C@_0BE@GALEGFEN@utf16oppositeendian?$AA@
	mov	DWORD PTR _cnvNameType+196, 5
; Line 169
	mov	DWORD PTR _cnvNameType+200, OFFSET ??_C@_0BE@FKECNIIC@utf16platformendian?$AA@
	mov	DWORD PTR _cnvNameType+204, 6
; Line 172
	mov	DWORD PTR _cnvNameType+208, OFFSET ??_C@_05MMJACDEG@utf32?$AA@
	mov	DWORD PTR _cnvNameType+212, 30		; 0000001eH
; Line 173
	mov	DWORD PTR _cnvNameType+216, OFFSET ??_C@_07FHJNNFMN@utf32be?$AA@
	mov	DWORD PTR _cnvNameType+220, 7
; Line 174
	mov	DWORD PTR _cnvNameType+224, OFFSET ??_C@_07FNADPIMH@utf32le?$AA@
	mov	DWORD PTR _cnvNameType+228, 8
; Line 179
	mov	DWORD PTR _cnvNameType+232, OFFSET ??_C@_0BE@GALJLJAN@utf32oppositeendian?$AA@
	mov	DWORD PTR _cnvNameType+236, 7
; Line 180
	mov	DWORD PTR _cnvNameType+240, OFFSET ??_C@_0BE@FKEPAEMC@utf32platformendian?$AA@
	mov	DWORD PTR _cnvNameType+244, 8
; Line 184
	mov	DWORD PTR _cnvNameType+248, OFFSET ??_C@_04DAOPEHDA@utf7?$AA@
	mov	DWORD PTR _cnvNameType+252, 27		; 0000001bH
; Line 186
	mov	DWORD PTR _cnvNameType+256, OFFSET ??_C@_04LHHHFLPP@utf8?$AA@
	mov	DWORD PTR _cnvNameType+260, 4
; Line 188
	mov	DWORD PTR _cnvNameType+264, OFFSET ??_C@_0BA@EGNPDDBI@x11compoundtext?$AA@
	mov	DWORD PTR _cnvNameType+268, 33		; 00000021H
; Line 190
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EcnvNameType@@YAXXZ ENDP				; `dynamic initializer for 'cnvNameType''
text$yc	ENDS
_BSS	SEGMENT
	ALIGN	8

_cnvNameType DQ	022H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_cnvNameType$initializer$ DD FLAT:??__EcnvNameType@@YAXXZ
CRT$XCU	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucnvmbcs.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_ucnv_MBCSFromUnicodeWithOffsets_56
PUBLIC	_ucnv_MBCSToUnicodeWithOffsets_56
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	__MBCSData_56
CONST	SEGMENT
__SBCSUTF8Impl DD 02H
	DD	FLAT:?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z
	DD	FLAT:?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z
	DD	00H
	DD	00H
	DD	FLAT:_ucnv_MBCSToUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSToUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSFromUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSFromUnicodeWithOffsets_56
	DD	FLAT:?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z
	DD	FLAT:?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z
	DD	00H
	DD	FLAT:?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z
	DD	00H
	DD	FLAT:?ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
__DBCSUTF8Impl DD 02H
	DD	FLAT:?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z
	DD	FLAT:?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z
	DD	00H
	DD	00H
	DD	FLAT:_ucnv_MBCSToUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSToUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSFromUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSFromUnicodeWithOffsets_56
	DD	FLAT:?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z
	DD	FLAT:?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z
	DD	00H
	DD	FLAT:?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z
	DD	00H
	DD	FLAT:?ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
__MBCSImpl DD	02H
	DD	FLAT:?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z
	DD	FLAT:?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z
	DD	00H
	DD	00H
	DD	FLAT:_ucnv_MBCSToUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSToUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSFromUnicodeWithOffsets_56
	DD	FLAT:_ucnv_MBCSFromUnicodeWithOffsets_56
	DD	FLAT:?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z
	DD	FLAT:?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z
	DD	FLAT:?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z
	DD	00H
	DD	FLAT:?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z
	DD	00H
	DD	00H
__MBCSData_56 DD 0e4H
	DD	01H
	DD	00H
	DD	00H
	DB	00H
	DB	01H
	ORG $+2
	DD	FLAT:__MBCSImpl
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	ORG $+126
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	00H
	ORG $+2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_utf8_minLegal DD 00H
	DD	00H
	DD	080H
	DD	0800H
	DD	010000H
_gb18030Ranges DD 010000H
	DD	010ffffH
	DD	01ca0faH
	DD	02ca0f9H
	DD	09fa6H
	DD	0d7ffH
	DD	01a0915H
	DD	01a416eH
	DD	0452H
	DD	01e3eH
	DD	019c1e6H
	DD	019dbd2H
	DD	01e40H
	DD	0200fH
	DD	019dbd4H
	DD	019dda3H
	DD	0e865H
	DD	0f92bH
	DD	01a41c0H
	DD	01a5286H
	DD	02643H
	DD	02e80H
	DD	019e2b5H
	DD	019eaf2H
	DD	0fa2aH
	DD	0fe2fH
	DD	01a5370H
	DD	01a5775H
	DD	03ce1H
	DD	04055H
	DD	019f81cH
	DD	019fb90H
	DD	0361bH
	DD	03917H
	DD	019f15fH
	DD	019f45bH
	DD	049b8H
	DD	04c76H
	DD	01a04dbH
	DD	01a0799H
	DD	04160H
	DD	04336H
	DD	019fc99H
	DD	019fe6fH
	DD	0478eH
	DD	04946H
	DD	01a02bcH
	DD	01a0474H
	DD	044d7H
	DD	0464bH
	DD	01a000bH
	DD	01a017fH
	DD	0ffe6H
	DD	0ffffH
	DD	01a5894H
	DD	01a58adH
_utf8_offsets DD 00H
	DD	00H
	DD	03080H
	DD	0e2080H
	DD	03c82080H
	ORG $+8
?nul@?HB@??ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z@4_WB DW 00H ; `ucnv_SBCSFromUTF8'::`113'::nul
	ORG $+2
?nul@?HE@??ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z@4_WB DW 00H ; `ucnv_DBCSFromUTF8'::`116'::nul
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33362 = -32					; size = 4
_len$33361 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33361[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33362[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33361[ebp]
	cmp	ecx, DWORD PTR _textLength$33362[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33361[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T79628 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T79628[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T79628[ebp]
	or	eax, 1
	mov	DWORD PTR $T79628[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??_7StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`vftable'
PUBLIC	??0StringEnumeration@icu_56@@QAE@ABV01@@Z	; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??_R4StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`vector deleting destructor'
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringEnumeration@icu_56@@6B@ DD 00H		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringEnumeration@icu_56@@@8
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7StringEnumeration@icu_56@@6B@ DD FLAT:??_R4StringEnumeration@icu_56@@6B@ ; icu_56::StringEnumeration::`vftable'
	DD	FLAT:??_EStringEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0StringEnumeration@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringEnumeration::StringEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringEnumeration@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringEnumeration::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$34070 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::StringEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
	mov	DWORD PTR _$S1$34070[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$34070[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$34070[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$34070[ebp], 32		; 00000020H
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$34070[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$34070[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::StringEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`scalar deleting destructor'
EXTRN	??1StringEnumeration@icu_56@@UAE@XZ:PROC	; icu_56::StringEnumeration::~StringEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	108					; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	_ucnv_MBCSGetFilteredUnicodeSetForUnicode_56
EXTRN	_ucnv_extGetUnicodeSet_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSGetFilteredUnicodeSetForUnicode_56
_TEXT	SEGMENT
tv190 = -412						; size = 4
tv181 = -412						; size = 4
tv149 = -412						; size = 4
tv134 = -412						; size = 4
_b$70563 = -209						; size = 1
_useFallback$70532 = -197				; size = 1
_value$70531 = -188					; size = 4
_st3Multiplier$70530 = -176				; size = 4
_bytes$70529 = -164					; size = 4
_stage3$70528 = -152					; size = 4
_stage2$70527 = -140					; size = 4
_minValue$70508 = -128					; size = 2
_results$70507 = -116					; size = 4
_stage3$70506 = -104					; size = 4
_stage2$70505 = -92					; size = 4
_c$ = -80						; size = 4
_st2$ = -68						; size = 2
_maxStage1$ = -56					; size = 2
_st1$ = -44						; size = 2
_st3$ = -32						; size = 4
_table$ = -20						; size = 4
_mbcsTable$ = -8					; size = 4
_sharedData$ = 8					; size = 4
_sa$ = 12						; size = 4
_which$ = 16						; size = 4
_filter$ = 20						; size = 4
_pErrorCode$ = 24					; size = 4
_ucnv_MBCSGetFilteredUnicodeSetForUnicode_56 PROC	; COMDAT
; File d:\mozilla\intl\icu\source\common\ucnvmbcs.cpp
; Line 853
	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 863
	mov	eax, DWORD PTR _sharedData$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR _mbcsTable$[ebp], eax
; Line 864
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _table$[ebp], ecx
; Line 865
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+173]
	and	ecx, 1
	je	SHORT $LN83@ucnv_MBCSG
; Line 866
	mov	eax, 1088				; 00000440H
	mov	WORD PTR _maxStage1$[ebp], ax
; Line 867
	jmp	SHORT $LN82@ucnv_MBCSG
$LN83@ucnv_MBCSG:
; Line 868
	mov	eax, 64					; 00000040H
	mov	WORD PTR _maxStage1$[ebp], ax
$LN82@ucnv_MBCSG:
; Line 871
	mov	DWORD PTR _c$[ebp], 0
; Line 873
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	test	ecx, ecx
	jne	$LN81@ucnv_MBCSG
; Line 877
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _results$70507[ebp], ecx
; Line 884
	cmp	DWORD PTR _which$[ebp], 0
	jne	SHORT $LN80@ucnv_MBCSG
; Line 886
	mov	eax, 3840				; 00000f00H
	mov	WORD PTR _minValue$70508[ebp], ax
; Line 887
	jmp	SHORT $LN79@ucnv_MBCSG
$LN80@ucnv_MBCSG:
; Line 889
	mov	eax, 2048				; 00000800H
	mov	WORD PTR _minValue$70508[ebp], ax
$LN79@ucnv_MBCSG:
; Line 892
	xor	eax, eax
	mov	WORD PTR _st1$[ebp], ax
	jmp	SHORT $LN78@ucnv_MBCSG
$LN77@ucnv_MBCSG:
	mov	ax, WORD PTR _st1$[ebp]
	add	ax, 1
	mov	WORD PTR _st1$[ebp], ax
$LN78@ucnv_MBCSG:
	movzx	eax, WORD PTR _st1$[ebp]
	movzx	ecx, WORD PTR _maxStage1$[ebp]
	cmp	eax, ecx
	jge	$LN76@ucnv_MBCSG
; Line 893
	movzx	eax, WORD PTR _st1$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _st2$[ebp], dx
; Line 894
	movzx	eax, WORD PTR _st2$[ebp]
	movzx	ecx, WORD PTR _maxStage1$[ebp]
	cmp	eax, ecx
	jle	$LN75@ucnv_MBCSG
; Line 895
	movzx	eax, WORD PTR _st2$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _stage2$70505[ebp], edx
; Line 896
	xor	eax, eax
	mov	WORD PTR _st2$[ebp], ax
	jmp	SHORT $LN74@ucnv_MBCSG
$LN73@ucnv_MBCSG:
	mov	ax, WORD PTR _st2$[ebp]
	add	ax, 1
	mov	WORD PTR _st2$[ebp], ax
$LN74@ucnv_MBCSG:
	movzx	eax, WORD PTR _st2$[ebp]
	cmp	eax, 64					; 00000040H
	jge	$LN72@ucnv_MBCSG
; Line 897
	movzx	eax, WORD PTR _st2$[ebp]
	mov	ecx, DWORD PTR _stage2$70505[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _st3$[ebp], edx
	cmp	DWORD PTR _st3$[ebp], 0
	je	SHORT $LN71@ucnv_MBCSG
; Line 899
	mov	eax, DWORD PTR _st3$[ebp]
	mov	ecx, DWORD PTR _results$70507[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _stage3$70506[ebp], edx
$LN70@ucnv_MBCSG:
; Line 902
	movzx	eax, WORD PTR _minValue$70508[ebp]
	mov	ecx, DWORD PTR _stage3$70506[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	ecx, DWORD PTR _stage3$70506[ebp]
	add	ecx, 2
	mov	DWORD PTR _stage3$70506[ebp], ecx
	cmp	edx, eax
	jl	SHORT $LN86@ucnv_MBCSG
	mov	DWORD PTR tv134[ebp], 1
	jmp	SHORT $LN87@ucnv_MBCSG
$LN86@ucnv_MBCSG:
	mov	DWORD PTR tv134[ebp], 0
$LN87@ucnv_MBCSG:
	cmp	DWORD PTR tv134[ebp], 0
	je	SHORT $LN69@ucnv_MBCSG
; Line 903
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN69@ucnv_MBCSG:
; Line 905
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	SHORT $LN70@ucnv_MBCSG
; Line 906
	jmp	SHORT $LN66@ucnv_MBCSG
$LN71@ucnv_MBCSG:
; Line 907
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _c$[ebp], eax
$LN66@ucnv_MBCSG:
; Line 909
	jmp	$LN73@ucnv_MBCSG
$LN72@ucnv_MBCSG:
	jmp	SHORT $LN65@ucnv_MBCSG
$LN75@ucnv_MBCSG:
; Line 911
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _c$[ebp], eax
$LN65@ucnv_MBCSG:
; Line 913
	jmp	$LN77@ucnv_MBCSG
$LN76@ucnv_MBCSG:
	jmp	$LN64@ucnv_MBCSG
$LN81@ucnv_MBCSG:
; Line 921
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _bytes$70529[ebp], ecx
; Line 923
	cmp	DWORD PTR _which$[ebp], 1
	sete	al
	mov	BYTE PTR _useFallback$70532[ebp], al
; Line 925
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	cl, BYTE PTR [eax+172]
	mov	BYTE PTR tv149[ebp], cl
	cmp	BYTE PTR tv149[ebp], 2
	je	SHORT $LN61@ucnv_MBCSG
	cmp	BYTE PTR tv149[ebp], 3
	je	SHORT $LN60@ucnv_MBCSG
	cmp	BYTE PTR tv149[ebp], 9
	je	SHORT $LN61@ucnv_MBCSG
	jmp	SHORT $LN59@ucnv_MBCSG
$LN61@ucnv_MBCSG:
; Line 928
	mov	DWORD PTR _st3Multiplier$70530[ebp], 3
; Line 929
	jmp	SHORT $LN62@ucnv_MBCSG
$LN60@ucnv_MBCSG:
; Line 931
	mov	DWORD PTR _st3Multiplier$70530[ebp], 4
; Line 932
	jmp	SHORT $LN62@ucnv_MBCSG
$LN59@ucnv_MBCSG:
; Line 934
	mov	DWORD PTR _st3Multiplier$70530[ebp], 2
$LN62@ucnv_MBCSG:
; Line 938
	xor	eax, eax
	mov	WORD PTR _st1$[ebp], ax
	jmp	SHORT $LN58@ucnv_MBCSG
$LN57@ucnv_MBCSG:
	mov	ax, WORD PTR _st1$[ebp]
	add	ax, 1
	mov	WORD PTR _st1$[ebp], ax
$LN58@ucnv_MBCSG:
	movzx	eax, WORD PTR _st1$[ebp]
	movzx	ecx, WORD PTR _maxStage1$[ebp]
	cmp	eax, ecx
	jge	$LN64@ucnv_MBCSG
; Line 939
	movzx	eax, WORD PTR _st1$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _st2$[ebp], dx
; Line 940
	movzx	eax, WORD PTR _st2$[ebp]
	movzx	ecx, WORD PTR _maxStage1$[ebp]
	sar	ecx, 1
	cmp	eax, ecx
	jle	$LN55@ucnv_MBCSG
; Line 941
	movzx	eax, WORD PTR _st2$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _stage2$70527[ebp], edx
; Line 942
	xor	eax, eax
	mov	WORD PTR _st2$[ebp], ax
	jmp	SHORT $LN54@ucnv_MBCSG
$LN53@ucnv_MBCSG:
	mov	ax, WORD PTR _st2$[ebp]
	add	ax, 1
	mov	WORD PTR _st2$[ebp], ax
$LN54@ucnv_MBCSG:
	movzx	eax, WORD PTR _st2$[ebp]
	cmp	eax, 64					; 00000040H
	jge	$LN52@ucnv_MBCSG
; Line 943
	movzx	eax, WORD PTR _st2$[ebp]
	mov	ecx, DWORD PTR _stage2$70527[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _st3$[ebp], edx
	cmp	DWORD PTR _st3$[ebp], 0
	je	$LN51@ucnv_MBCSG
; Line 945
	mov	eax, DWORD PTR _st3Multiplier$70530[ebp]
	shl	eax, 4
	movzx	ecx, WORD PTR _st3$[ebp]
	imul	eax, ecx
	add	eax, DWORD PTR _bytes$70529[ebp]
	mov	DWORD PTR _stage3$70528[ebp], eax
; Line 948
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _st3$[ebp], eax
; Line 955
	mov	eax, DWORD PTR _filter$[ebp]
	mov	DWORD PTR tv181[ebp], eax
	cmp	DWORD PTR tv181[ebp], 5
	ja	$LN3@ucnv_MBCSG
	mov	ecx, DWORD PTR tv181[ebp]
	jmp	DWORD PTR $LN88@ucnv_MBCSG[ecx*4]
$LN47@ucnv_MBCSG:
; Line 958
	mov	eax, DWORD PTR _st3$[ebp]
	and	eax, 1
	je	SHORT $LN44@ucnv_MBCSG
; Line 959
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 960
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, DWORD PTR _st3Multiplier$70530[ebp]
	mov	DWORD PTR _stage3$70528[ebp], eax
	jmp	$LN43@ucnv_MBCSG
$LN44@ucnv_MBCSG:
; Line 961
	movsx	eax, BYTE PTR _useFallback$70532[ebp]
	test	eax, eax
	je	$LN43@ucnv_MBCSG
; Line 962
	mov	BYTE PTR _b$70563[ebp], 0
; Line 963
	mov	eax, DWORD PTR _st3Multiplier$70530[ebp]
	mov	DWORD PTR tv190[ebp], eax
	cmp	DWORD PTR tv190[ebp], 2
	je	SHORT $LN37@ucnv_MBCSG
	cmp	DWORD PTR tv190[ebp], 3
	je	SHORT $LN38@ucnv_MBCSG
	cmp	DWORD PTR tv190[ebp], 4
	je	SHORT $LN39@ucnv_MBCSG
	jmp	$LN40@ucnv_MBCSG
$LN39@ucnv_MBCSG:
; Line 965
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, BYTE PTR [eax]
	movzx	edx, BYTE PTR _b$70563[ebp]
	or	edx, ecx
	mov	BYTE PTR _b$70563[ebp], dl
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 1
	mov	DWORD PTR _stage3$70528[ebp], eax
$LN38@ucnv_MBCSG:
; Line 967
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, BYTE PTR [eax]
	movzx	edx, BYTE PTR _b$70563[ebp]
	or	edx, ecx
	mov	BYTE PTR _b$70563[ebp], dl
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 1
	mov	DWORD PTR _stage3$70528[ebp], eax
$LN37@ucnv_MBCSG:
; Line 969
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stage3$70528[ebp]
	movzx	eax, BYTE PTR [edx+1]
	or	ecx, eax
	movzx	edx, BYTE PTR _b$70563[ebp]
	or	edx, ecx
	mov	BYTE PTR _b$70563[ebp], dl
; Line 970
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 2
	mov	DWORD PTR _stage3$70528[ebp], eax
$LN40@ucnv_MBCSG:
; Line 974
	movzx	eax, BYTE PTR _b$70563[ebp]
	test	eax, eax
	je	SHORT $LN43@ucnv_MBCSG
; Line 975
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN43@ucnv_MBCSG:
; Line 978
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 1
	mov	DWORD PTR _st3$[ebp], eax
; Line 979
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	$LN47@ucnv_MBCSG
; Line 980
	jmp	$LN49@ucnv_MBCSG
$LN33@ucnv_MBCSG:
; Line 984
	mov	eax, DWORD PTR _st3$[ebp]
	and	eax, 1
	jne	SHORT $LN29@ucnv_MBCSG
	movsx	eax, BYTE PTR _useFallback$70532[ebp]
	test	eax, eax
	je	SHORT $LN30@ucnv_MBCSG
$LN29@ucnv_MBCSG:
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 256				; 00000100H
	jl	SHORT $LN30@ucnv_MBCSG
; Line 985
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@ucnv_MBCSG:
; Line 987
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 1
	mov	DWORD PTR _st3$[ebp], eax
; Line 988
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 2
	mov	DWORD PTR _stage3$70528[ebp], eax
; Line 989
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	SHORT $LN33@ucnv_MBCSG
; Line 990
	jmp	$LN49@ucnv_MBCSG
$LN27@ucnv_MBCSG:
; Line 994
	mov	eax, DWORD PTR _st3$[ebp]
	and	eax, 1
	jne	SHORT $LN23@ucnv_MBCSG
	movsx	eax, BYTE PTR _useFallback$70532[ebp]
	test	eax, eax
	je	SHORT $LN24@ucnv_MBCSG
$LN23@ucnv_MBCSG:
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _value$70531[ebp], ecx
	cmp	DWORD PTR _value$70531[ebp], 129	; 00000081H
	je	SHORT $LN22@ucnv_MBCSG
	cmp	DWORD PTR _value$70531[ebp], 130	; 00000082H
	jne	SHORT $LN24@ucnv_MBCSG
$LN22@ucnv_MBCSG:
; Line 995
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@ucnv_MBCSG:
; Line 997
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 1
	mov	DWORD PTR _st3$[ebp], eax
; Line 998
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 3
	mov	DWORD PTR _stage3$70528[ebp], eax
; Line 999
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	SHORT $LN27@ucnv_MBCSG
; Line 1000
	jmp	$LN49@ucnv_MBCSG
$LN20@ucnv_MBCSG:
; Line 1004
	mov	eax, DWORD PTR _st3$[ebp]
	and	eax, 1
	jne	SHORT $LN16@ucnv_MBCSG
	movsx	eax, BYTE PTR _useFallback$70532[ebp]
	test	eax, eax
	je	SHORT $LN17@ucnv_MBCSG
$LN16@ucnv_MBCSG:
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _value$70531[ebp], ecx
	cmp	DWORD PTR _value$70531[ebp], 33088	; 00008140H
	jb	SHORT $LN17@ucnv_MBCSG
	cmp	DWORD PTR _value$70531[ebp], 61436	; 0000effcH
	ja	SHORT $LN17@ucnv_MBCSG
; Line 1005
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@ucnv_MBCSG:
; Line 1007
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 1
	mov	DWORD PTR _st3$[ebp], eax
; Line 1008
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 2
	mov	DWORD PTR _stage3$70528[ebp], eax
; Line 1009
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	SHORT $LN20@ucnv_MBCSG
; Line 1010
	jmp	$LN49@ucnv_MBCSG
$LN14@ucnv_MBCSG:
; Line 1017
	mov	eax, DWORD PTR _st3$[ebp]
	and	eax, 1
	jne	SHORT $LN10@ucnv_MBCSG
	movsx	eax, BYTE PTR _useFallback$70532[ebp]
	test	eax, eax
	je	SHORT $LN11@ucnv_MBCSG
$LN10@ucnv_MBCSG:
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _value$70531[ebp], ecx
	mov	edx, DWORD PTR _value$70531[ebp]
	sub	edx, 41377				; 0000a1a1H
	movzx	eax, dx
	cmp	eax, 23901				; 00005d5dH
	jg	SHORT $LN11@ucnv_MBCSG
	mov	eax, DWORD PTR _value$70531[ebp]
	sub	eax, 161				; 000000a1H
	movzx	ecx, al
	cmp	ecx, 93					; 0000005dH
	jg	SHORT $LN11@ucnv_MBCSG
; Line 1018
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@ucnv_MBCSG:
; Line 1020
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 1
	mov	DWORD PTR _st3$[ebp], eax
; Line 1021
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 2
	mov	DWORD PTR _stage3$70528[ebp], eax
; Line 1022
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	$LN14@ucnv_MBCSG
; Line 1023
	jmp	$LN49@ucnv_MBCSG
$LN8@ucnv_MBCSG:
; Line 1030
	mov	eax, DWORD PTR _st3$[ebp]
	and	eax, 1
	jne	SHORT $LN4@ucnv_MBCSG
	movsx	eax, BYTE PTR _useFallback$70532[ebp]
	test	eax, eax
	je	SHORT $LN5@ucnv_MBCSG
$LN4@ucnv_MBCSG:
	mov	eax, DWORD PTR _stage3$70528[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _value$70531[ebp], ecx
	mov	edx, DWORD PTR _value$70531[ebp]
	sub	edx, 41377				; 0000a1a1H
	movzx	eax, dx
	cmp	eax, 23645				; 00005c5dH
	jg	SHORT $LN5@ucnv_MBCSG
	mov	eax, DWORD PTR _value$70531[ebp]
	sub	eax, 161				; 000000a1H
	movzx	ecx, al
	cmp	ecx, 93					; 0000005dH
	jg	SHORT $LN5@ucnv_MBCSG
; Line 1031
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sa$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@ucnv_MBCSG:
; Line 1033
	mov	eax, DWORD PTR _st3$[ebp]
	shr	eax, 1
	mov	DWORD PTR _st3$[ebp], eax
; Line 1034
	mov	eax, DWORD PTR _stage3$70528[ebp]
	add	eax, 2
	mov	DWORD PTR _stage3$70528[ebp], eax
; Line 1035
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	jne	$LN8@ucnv_MBCSG
; Line 1036
	jmp	SHORT $LN49@ucnv_MBCSG
$LN3@ucnv_MBCSG:
; Line 1038
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 5
; Line 1039
	jmp	SHORT $LN84@ucnv_MBCSG
$LN49@ucnv_MBCSG:
; Line 1041
	jmp	SHORT $LN2@ucnv_MBCSG
$LN51@ucnv_MBCSG:
; Line 1042
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _c$[ebp], eax
$LN2@ucnv_MBCSG:
; Line 1044
	jmp	$LN53@ucnv_MBCSG
$LN52@ucnv_MBCSG:
	jmp	SHORT $LN1@ucnv_MBCSG
$LN55@ucnv_MBCSG:
; Line 1046
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _c$[ebp], eax
$LN1@ucnv_MBCSG:
; Line 1048
	jmp	$LN57@ucnv_MBCSG
$LN64@ucnv_MBCSG:
; Line 1051
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _which$[ebp]
	push	edx
	mov	eax, DWORD PTR _sa$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sharedData$[ebp]
	push	ecx
	call	_ucnv_extGetUnicodeSet_56
	add	esp, 20					; 00000014H
$LN84@ucnv_MBCSG:
; Line 1052
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN88@ucnv_MBCSG:
	DD	$LN47@ucnv_MBCSG
	DD	$LN33@ucnv_MBCSG
	DD	$LN27@ucnv_MBCSG
	DD	$LN20@ucnv_MBCSG
	DD	$LN14@ucnv_MBCSG
	DD	$LN8@ucnv_MBCSG
_ucnv_MBCSGetFilteredUnicodeSetForUnicode_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_MBCSGetUnicodeSetForUnicode_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSGetUnicodeSetForUnicode_56
_TEXT	SEGMENT
_sharedData$ = 8					; size = 4
_sa$ = 12						; size = 4
_which$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
_ucnv_MBCSGetUnicodeSetForUnicode_56 PROC		; COMDAT
; Line 1058
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1064
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sharedData$[ebp]
	movzx	edx, BYTE PTR [ecx+200]
	xor	eax, eax
	cmp	edx, 219				; 000000dbH
	sete	al
	push	eax
	mov	ecx, DWORD PTR _which$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	push	edx
	mov	eax, DWORD PTR _sharedData$[ebp]
	push	eax
	call	_ucnv_MBCSGetFilteredUnicodeSetForUnicode_56
	add	esp, 20					; 00000014H
; Line 1065
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_MBCSGetUnicodeSetForUnicode_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_cnv$ = 8						; size = 4
_sa$ = 12						; size = 4
_which$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSGetUnicodeSet, COMDAT
; Line 1071
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1072
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 32768				; 00008000H
	je	SHORT $LN2@ucnv_MBCSG@2
; Line 1073
	mov	esi, esp
	push	55295					; 0000d7ffH
	push	0
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1074
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	57344					; 0000e000H
	mov	eax, DWORD PTR _sa$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1075
	jmp	SHORT $LN3@ucnv_MBCSG@2
$LN2@ucnv_MBCSG@2:
; Line 1076
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _which$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sa$[ebp]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_ucnv_MBCSGetUnicodeSetForUnicode_56
	add	esp, 16					; 00000010H
$LN3@ucnv_MBCSG@2:
; Line 1078
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSGetUnicodeSet
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_udata_getInfo_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_ucnv_unload_56:PROC
EXTRN	_ucnv_load_56:PROC
EXTRN	_strcmp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv376 = -480						; size = 4
tv349 = -480						; size = 4
tv288 = -480						; size = 4
_stage2Length$70956 = -280				; size = 4
_stage1Length$70955 = -268				; size = 4
_i$70946 = -256						; size = 4
_asciiRoundtrips$70945 = -244				; size = 4
_i$70938 = -232						; size = 4
_count$70900 = -220					; size = 4
_i$70899 = -208						; size = 4
_state$70898 = -196					; size = 4
_newStateTable$70897 = -184				; size = 4
_entry$70889 = -172					; size = 4
_baseName$70875 = -160					; size = 4
_extIndexes$70874 = -148				; size = 4
_baseSharedData$70873 = -136				; size = 4
_args$70870 = -124					; size = 28
_noFromU$ = -85						; size = 1
_headerLength$ = -76					; size = 4
_offset$ = -64						; size = 4
_header$ = -52						; size = 4
_mbcsTable$ = -40					; size = 4
_info$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_sharedData$ = 8					; size = 4
_pArgs$ = 12						; size = 4
_raw$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z PROC ; ucnv_MBCSLoad, COMDAT
; Line 1551
	push	ebp
	mov	ebp, esp
	sub	esp, 480				; 000001e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-480]
	mov	ecx, 120				; 00000078H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1553
	mov	eax, DWORD PTR _sharedData$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR _mbcsTable$[ebp], eax
; Line 1554
	mov	eax, DWORD PTR _raw$[ebp]
	mov	DWORD PTR _header$[ebp], eax
; Line 1557
	mov	BYTE PTR _noFromU$[ebp], 0
; Line 1559
	mov	eax, DWORD PTR _header$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 4
	jne	SHORT $LN54@ucnv_MBCSL
; Line 1560
	mov	DWORD PTR _headerLength$[ebp], 8
; Line 1561
	jmp	SHORT $LN53@ucnv_MBCSL
$LN54@ucnv_MBCSL:
; Line 1562
	mov	eax, DWORD PTR _header$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 5
	jne	SHORT $LN52@ucnv_MBCSL
	mov	eax, DWORD PTR _header$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 3
	jl	SHORT $LN52@ucnv_MBCSL
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 65408				; 0000ff80H
	jne	SHORT $LN52@ucnv_MBCSL
; Line 1563
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 63					; 0000003fH
	mov	DWORD PTR _headerLength$[ebp], ecx
; Line 1564
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 64					; 00000040H
	setne	dl
	mov	BYTE PTR _noFromU$[ebp], dl
; Line 1565
	jmp	SHORT $LN53@ucnv_MBCSL
$LN52@ucnv_MBCSL:
; Line 1566
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 1567
	jmp	$LN55@ucnv_MBCSL
$LN53@ucnv_MBCSL:
; Line 1570
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _header$[ebp]
	mov	dl, BYTE PTR [ecx+24]
	mov	BYTE PTR [eax+172], dl
; Line 1571
	movsx	eax, BYTE PTR _noFromU$[ebp]
	test	eax, eax
	je	SHORT $LN50@ucnv_MBCSL
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	test	ecx, ecx
	jne	SHORT $LN50@ucnv_MBCSL
; Line 1572
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 1573
	jmp	$LN55@ucnv_MBCSL
$LN50@ucnv_MBCSL:
; Line 1577
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 8
	mov	DWORD PTR _offset$[ebp], ecx
; Line 1578
	cmp	DWORD PTR _offset$[ebp], 0
	je	SHORT $LN49@ucnv_MBCSL
; Line 1579
	mov	eax, DWORD PTR _raw$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [ecx+196], eax
$LN49@ucnv_MBCSL:
; Line 1582
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	cmp	ecx, 14					; 0000000eH
	jne	$LN48@ucnv_MBCSL
; Line 1583
	mov	DWORD PTR _args$70870[ebp], 28		; 0000001cH
	mov	DWORD PTR _args$70870[ebp+4], 0
	mov	BYTE PTR _args$70870[ebp+8], 0
	mov	BYTE PTR _args$70870[ebp+9], 0
	xor	eax, eax
	mov	WORD PTR _args$70870[ebp+10], ax
	mov	DWORD PTR _args$70870[ebp+12], 0
	mov	DWORD PTR _args$70870[ebp+16], 0
	mov	DWORD PTR _args$70870[ebp+20], 0
	mov	DWORD PTR _args$70870[ebp+24], 0
; Line 1589
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	DWORD PTR _extIndexes$70874[ebp], ecx
	cmp	DWORD PTR _extIndexes$70874[ebp], 0
	jne	SHORT $LN47@ucnv_MBCSL
; Line 1591
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 1592
	jmp	$LN55@ucnv_MBCSL
$LN47@ucnv_MBCSL:
; Line 1595
	mov	eax, DWORD PTR _pArgs$[ebp]
	cmp	DWORD PTR [eax+4], 1
	je	SHORT $LN46@ucnv_MBCSL
; Line 1597
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 14			; 0000000eH
; Line 1598
	jmp	$LN55@ucnv_MBCSL
$LN46@ucnv_MBCSL:
; Line 1602
	mov	eax, DWORD PTR _headerLength$[ebp]
	mov	ecx, DWORD PTR _header$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _baseName$70875[ebp], edx
; Line 1603
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _baseName$70875[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN45@ucnv_MBCSL
; Line 1605
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 1606
	jmp	$LN55@ucnv_MBCSL
$LN45@ucnv_MBCSL:
; Line 1610
	mov	DWORD PTR _args$70870[ebp], 28		; 0000001cH
; Line 1611
	mov	DWORD PTR _args$70870[ebp+4], 2
; Line 1612
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	cl, BYTE PTR [eax+8]
	mov	BYTE PTR _args$70870[ebp+8], cl
; Line 1613
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	cx, WORD PTR [eax+10]
	mov	WORD PTR _args$70870[ebp+10], cx
; Line 1614
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _args$70870[ebp+12], ecx
; Line 1615
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _args$70870[ebp+16], ecx
; Line 1616
	mov	eax, DWORD PTR _baseName$70875[ebp]
	mov	DWORD PTR _args$70870[ebp+20], eax
; Line 1617
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _args$70870[ebp]
	push	ecx
	call	_ucnv_load_56
	add	esp, 8
	mov	DWORD PTR _baseSharedData$70873[ebp], eax
; Line 1618
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@ucnv_MBCSL
; Line 1619
	jmp	$LN55@ucnv_MBCSL
$LN44@ucnv_MBCSL:
; Line 1623
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+69]
	cmp	edx, 2
	jne	SHORT $LN42@ucnv_MBCSL
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	cmp	DWORD PTR [eax+220], 0
	je	SHORT $LN43@ucnv_MBCSL
$LN42@ucnv_MBCSL:
; Line 1624
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	push	eax
	call	_ucnv_unload_56
	add	esp, 4
; Line 1625
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 1626
	jmp	$LN55@ucnv_MBCSL
$LN43@ucnv_MBCSL:
; Line 1628
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN41@ucnv_MBCSL
; Line 1635
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	push	eax
	call	_ucnv_unload_56
	add	esp, 4
; Line 1636
	jmp	$LN55@ucnv_MBCSL
$LN41@ucnv_MBCSL:
; Line 1640
	push	1
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _baseSharedData$70873[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1643
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _baseSharedData$70873[ebp]
	mov	DWORD PTR [eax+192], ecx
; Line 1644
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _extIndexes$70874[ebp]
	mov	DWORD PTR [eax+196], ecx
; Line 1653
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1654
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+164], 0
; Line 1655
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+188], 0
; Line 1661
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+184], 0
; Line 1670
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+69]
	cmp	edx, 1
	je	SHORT $LN39@ucnv_MBCSL
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+69]
	cmp	edx, 2
	jne	$LN40@ucnv_MBCSL
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+70]
	cmp	edx, 2
	jl	$LN40@ucnv_MBCSL
$LN39@ucnv_MBCSL:
; Line 1671
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	movzx	ecx, BYTE PTR [eax+200]
	cmp	ecx, 12					; 0000000cH
	jne	SHORT $LN38@ucnv_MBCSL
; Line 1676
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _entry$70889[ebp], edx
; Line 1680
	cmp	DWORD PTR _entry$70889[ebp], 0
	jge	SHORT $LN37@ucnv_MBCSL
	mov	eax, DWORD PTR _entry$70889[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 8
	jne	SHORT $LN37@ucnv_MBCSL
	mov	eax, DWORD PTR _entry$70889[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	je	SHORT $LN37@ucnv_MBCSL
; Line 1681
	mov	eax, DWORD PTR _entry$70889[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [ecx+1], al
; Line 1683
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [eax+172], 219			; 000000dbH
$LN37@ucnv_MBCSL:
; Line 1685
	jmp	$LN40@ucnv_MBCSL
$LN38@ucnv_MBCSL:
; Line 1690
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+69]
	cmp	edx, 2
	jne	$LN40@ucnv_MBCSL
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+70]
	cmp	edx, 1
	jne	$LN40@ucnv_MBCSL
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+71]
	cmp	edx, 2
	jne	$LN40@ucnv_MBCSL
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 127				; 0000007fH
	jg	$LN40@ucnv_MBCSL
; Line 1697
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _count$70900[ebp], ecx
; Line 1698
	mov	eax, DWORD PTR _count$70900[ebp]
	add	eax, 1
	shl	eax, 10					; 0000000aH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newStateTable$70897[ebp], eax
; Line 1699
	cmp	DWORD PTR _newStateTable$70897[ebp], 0
	jne	SHORT $LN34@ucnv_MBCSL
; Line 1700
	mov	eax, DWORD PTR _baseSharedData$70873[ebp]
	push	eax
	call	_ucnv_unload_56
	add	esp, 4
; Line 1701
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1702
	jmp	$LN55@ucnv_MBCSL
$LN34@ucnv_MBCSL:
; Line 1705
	push	1
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _count$70900[ebp]
	shl	edx, 10					; 0000000aH
	push	edx
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _newStateTable$70897[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1708
	mov	eax, DWORD PTR _newStateTable$70897[ebp]
	mov	DWORD PTR _state$70898[ebp], eax
; Line 1709
	mov	DWORD PTR _i$70899[ebp], 0
	jmp	SHORT $LN33@ucnv_MBCSL
$LN32@ucnv_MBCSL:
	mov	eax, DWORD PTR _i$70899[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70899[ebp], eax
$LN33@ucnv_MBCSL:
	cmp	DWORD PTR _i$70899[ebp], 256		; 00000100H
	jge	SHORT $LN31@ucnv_MBCSL
; Line 1710
	mov	eax, DWORD PTR _i$70899[ebp]
	mov	ecx, DWORD PTR _state$70898[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jge	SHORT $LN30@ucnv_MBCSL
; Line 1711
	mov	eax, DWORD PTR _count$70900[ebp]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _i$70899[ebp]
	mov	edx, DWORD PTR _state$70898[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN30@ucnv_MBCSL:
; Line 1713
	jmp	SHORT $LN32@ucnv_MBCSL
$LN31@ucnv_MBCSL:
; Line 1716
	mov	eax, DWORD PTR _count$70900[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _newStateTable$70897[ebp]
	mov	DWORD PTR _state$70898[ebp], eax
; Line 1717
	mov	DWORD PTR _i$70899[ebp], 0
	jmp	SHORT $LN29@ucnv_MBCSL
$LN28@ucnv_MBCSL:
	mov	eax, DWORD PTR _i$70899[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70899[ebp], eax
$LN29@ucnv_MBCSL:
	cmp	DWORD PTR _i$70899[ebp], 256		; 00000100H
	jge	SHORT $LN27@ucnv_MBCSL
; Line 1718
	mov	eax, DWORD PTR _i$70899[ebp]
	mov	ecx, DWORD PTR _state$70898[ebp]
	mov	DWORD PTR [ecx+eax*4], -2140143616	; 80700000H
; Line 1719
	jmp	SHORT $LN28@ucnv_MBCSL
$LN27@ucnv_MBCSL:
; Line 1720
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _newStateTable$70897[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1721
	mov	eax, DWORD PTR _count$70900[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [ecx], al
; Line 1722
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [eax+2], 1
; Line 1724
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [eax+172], 219			; 000000dbH
$LN40@ucnv_MBCSL:
; Line 1735
	jmp	$LN26@ucnv_MBCSL
$LN48@ucnv_MBCSL:
; Line 1738
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	mov	DWORD PTR tv288[ebp], ecx
	cmp	DWORD PTR tv288[ebp], 12		; 0000000cH
	ja	SHORT $LN22@ucnv_MBCSL
	mov	edx, DWORD PTR tv288[ebp]
	movzx	eax, BYTE PTR $LN61@ucnv_MBCSL[edx]
	jmp	DWORD PTR $LN66@ucnv_MBCSL[eax*4]
$LN23@ucnv_MBCSL:
; Line 1747
	jmp	SHORT $LN24@ucnv_MBCSL
$LN22@ucnv_MBCSL:
; Line 1749
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 1750
	jmp	$LN55@ucnv_MBCSL
$LN24@ucnv_MBCSL:
; Line 1752
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN21@ucnv_MBCSL
; Line 1759
	jmp	$LN55@ucnv_MBCSL
$LN21@ucnv_MBCSL:
; Line 1762
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _header$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax], dl
; Line 1763
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _header$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
; Line 1764
	mov	eax, DWORD PTR _headerLength$[ebp]
	mov	ecx, DWORD PTR _raw$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1765
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 1766
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR _raw$[ebp]
	add	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 1768
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR _raw$[ebp]
	add	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 1769
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR _raw$[ebp]
	add	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [edx+160], ecx
; Line 1770
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _header$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+168], edx
; Line 1776
	mov	eax, 20					; 00000014H
	mov	WORD PTR _info$[ebp], ax
; Line 1777
	lea	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sharedData$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_udata_getInfo_56
	add	esp, 8
; Line 1778
	movzx	eax, BYTE PTR _info$[ebp+12]
	cmp	eax, 6
	jg	SHORT $LN19@ucnv_MBCSL
	movzx	eax, BYTE PTR _info$[ebp+12]
	cmp	eax, 6
	jne	SHORT $LN20@ucnv_MBCSL
	movzx	eax, BYTE PTR _info$[ebp+13]
	cmp	eax, 1
	jl	SHORT $LN20@ucnv_MBCSL
$LN19@ucnv_MBCSL:
; Line 1780
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, BYTE PTR [ecx+79]
	and	edx, 3
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [eax+173], dl
; Line 1781
	jmp	SHORT $LN18@ucnv_MBCSL
$LN20@ucnv_MBCSL:
; Line 1783
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [eax+173], 3
$LN18@ucnv_MBCSL:
; Line 1800
	mov	eax, DWORD PTR _header$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 3
	jl	$LN17@ucnv_MBCSL
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+173]
	and	ecx, 2
	jne	$LN17@ucnv_MBCSL
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN57@ucnv_MBCSL
	mov	edx, DWORD PTR _header$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	xor	ecx, ecx
	cmp	eax, 15					; 0000000fH
	setge	cl
	mov	DWORD PTR tv349[ebp], ecx
	jmp	SHORT $LN58@ucnv_MBCSL
$LN57@ucnv_MBCSL:
	mov	edx, DWORD PTR _header$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	xor	ecx, ecx
	cmp	eax, 215				; 000000d7H
	setge	cl
	mov	DWORD PTR tv349[ebp], ecx
$LN58@ucnv_MBCSL:
	cmp	DWORD PTR tv349[ebp], 0
	je	$LN17@ucnv_MBCSL
; Line 1801
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	BYTE PTR [eax+174], 1
; Line 1803
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN16@ucnv_MBCSL
; Line 1810
	mov	DWORD PTR _i$70938[ebp], 0
	jmp	SHORT $LN15@ucnv_MBCSL
$LN14@ucnv_MBCSL:
	mov	eax, DWORD PTR _i$70938[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70938[ebp], eax
$LN15@ucnv_MBCSL:
	cmp	DWORD PTR _i$70938[ebp], 64		; 00000040H
	jge	SHORT $LN13@ucnv_MBCSL
; Line 1811
	mov	eax, DWORD PTR _i$70938[ebp]
	sar	eax, 4
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _i$70938[ebp]
	shl	ecx, 2
	and	ecx, 60					; 0000003cH
	add	eax, ecx
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	mov	edx, DWORD PTR _i$70938[ebp]
	mov	esi, DWORD PTR _mbcsTable$[ebp]
	mov	ax, WORD PTR [ecx+eax*2]
	mov	WORD PTR [esi+edx*2+32], ax
; Line 1812
	jmp	SHORT $LN14@ucnv_MBCSL
$LN13@ucnv_MBCSL:
; Line 1814
	mov	eax, 4095				; 00000fffH
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	WORD PTR [ecx+176], ax
	jmp	SHORT $LN17@ucnv_MBCSL
$LN16@ucnv_MBCSL:
; Line 1823
	movsx	eax, BYTE PTR _noFromU$[ebp]
	test	eax, eax
	je	SHORT $LN59@ucnv_MBCSL
	mov	DWORD PTR tv376[ebp], 0
	jmp	SHORT $LN60@ucnv_MBCSL
$LN59@ucnv_MBCSL:
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	DWORD PTR tv376[ebp], edx
$LN60@ucnv_MBCSL:
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	add	ecx, DWORD PTR tv376[ebp]
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [edx+28], ecx
; Line 1824
	mov	eax, DWORD PTR _header$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	WORD PTR [edx+176], cx
$LN17@ucnv_MBCSL:
; Line 1830
	mov	DWORD PTR _asciiRoundtrips$70945[ebp], -1
; Line 1833
	mov	DWORD PTR _i$70946[ebp], 0
	jmp	SHORT $LN11@ucnv_MBCSL
$LN10@ucnv_MBCSL:
	mov	eax, DWORD PTR _i$70946[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70946[ebp], eax
$LN11@ucnv_MBCSL:
	cmp	DWORD PTR _i$70946[ebp], 128		; 00000080H
	jge	SHORT $LN9@ucnv_MBCSL
; Line 1834
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _i$70946[ebp]
	or	edx, -2147483648			; 80000000H
	mov	eax, DWORD PTR _i$70946[ebp]
	cmp	DWORD PTR [ecx+eax*4], edx
	je	SHORT $LN8@ucnv_MBCSL
; Line 1835
	mov	ecx, DWORD PTR _i$70946[ebp]
	sar	ecx, 2
	mov	eax, 1
	shl	eax, cl
	not	eax
	and	eax, DWORD PTR _asciiRoundtrips$70945[ebp]
	mov	DWORD PTR _asciiRoundtrips$70945[ebp], eax
$LN8@ucnv_MBCSL:
; Line 1837
	jmp	SHORT $LN10@ucnv_MBCSL
$LN9@ucnv_MBCSL:
; Line 1838
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _asciiRoundtrips$70945[ebp]
	mov	DWORD PTR [eax+180], ecx
; Line 1841
	movsx	eax, BYTE PTR _noFromU$[ebp]
	test	eax, eax
	je	SHORT $LN26@ucnv_MBCSL
; Line 1844
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+173]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 1024				; 00000400H
	add	ecx, 64					; 00000040H
	mov	DWORD PTR _stage1Length$70955[ebp], ecx
; Line 1847
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR _header$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	shr	edx, 2
	mov	eax, DWORD PTR _stage1Length$70955[ebp]
	shr	eax, 1
	sub	edx, eax
	mov	DWORD PTR _stage2Length$70956[ebp], edx
; Line 1848
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _header$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _stage2Length$70956[ebp]
	push	eax
	mov	ecx, DWORD PTR _stage1Length$70955[ebp]
	push	ecx
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	push	edx
	call	?reconstituteData@@YAXPAUUConverterMBCSTable@@IIIPAW4UErrorCode@@@Z ; reconstituteData
	add	esp, 20					; 00000014H
$LN26@ucnv_MBCSL:
; Line 1853
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movsx	ecx, BYTE PTR [eax+174]
	test	ecx, ecx
	je	SHORT $LN6@ucnv_MBCSL
; Line 1854
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN5@ucnv_MBCSL
; Line 1855
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	DWORD PTR [eax+20], OFFSET __SBCSUTF8Impl
; Line 1856
	jmp	SHORT $LN6@ucnv_MBCSL
$LN5@ucnv_MBCSL:
; Line 1857
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	cmp	ecx, 1
	jne	SHORT $LN6@ucnv_MBCSL
; Line 1858
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	DWORD PTR [eax+20], OFFSET __DBCSUTF8Impl
$LN6@ucnv_MBCSL:
; Line 1863
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	cmp	ecx, 219				; 000000dbH
	je	SHORT $LN1@ucnv_MBCSL
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	cmp	ecx, 12					; 0000000cH
	jne	SHORT $LN55@ucnv_MBCSL
$LN1@ucnv_MBCSL:
; Line 1868
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+180], 0
$LN55@ucnv_MBCSL:
; Line 1870
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN65@ucnv_MBCSL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 480				; 000001e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN65@ucnv_MBCSL:
	DD	2
	DD	$LN64@ucnv_MBCSL
$LN64@ucnv_MBCSL:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN62@ucnv_MBCSL
	DD	-124					; ffffff84H
	DD	28					; 0000001cH
	DD	$LN63@ucnv_MBCSL
$LN63@ucnv_MBCSL:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN62@ucnv_MBCSL:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
	npad	2
$LN66@ucnv_MBCSL:
	DD	$LN23@ucnv_MBCSL
	DD	$LN22@ucnv_MBCSL
$LN61@ucnv_MBCSL:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z ENDP ; ucnv_MBCSLoad
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reconstituteData@@YAXPAUUConverterMBCSTable@@IIIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$70835 = -104						; size = 4
_st3$70834 = -92					; size = 4
_st2$70833 = -80					; size = 4
_st1$70832 = -68					; size = 4
_stageUTF8Index$70831 = -56				; size = 4
_stageUTF8Length$70829 = -44				; size = 4
_dataLength$ = -32					; size = 4
_stage2$ = -20						; size = 4
_stage1$ = -8						; size = 4
_mbcsTable$ = 8						; size = 4
_stage1Length$ = 12					; size = 4
_stage2Length$ = 16					; size = 4
_fullStage2Length$ = 20					; size = 4
_pErrorCode$ = 24					; size = 4
?reconstituteData@@YAXPAUUConverterMBCSTable@@IIIPAW4UErrorCode@@@Z PROC ; reconstituteData, COMDAT
; File d:\mozilla\intl\icu\source\common\ucnvmbcs.cpp
; Line 1480
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1483
	mov	eax, DWORD PTR _fullStage2Length$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR _stage1Length$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	add	edx, DWORD PTR [eax+168]
	mov	DWORD PTR _dataLength$[ebp], edx
; Line 1484
	mov	eax, DWORD PTR _dataLength$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 1485
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+184], 0
	jne	SHORT $LN11@reconstitu
; Line 1486
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1487
	jmp	$LN12@reconstitu
$LN11@reconstitu:
; Line 1489
	mov	eax, DWORD PTR _dataLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1492
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	mov	DWORD PTR _stage1$[ebp], ecx
; Line 1493
	push	1
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _stage1Length$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _stage1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1495
	mov	eax, DWORD PTR _stage1Length$[ebp]
	mov	ecx, DWORD PTR _stage1$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _stage2$[ebp], edx
; Line 1498
	push	1
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _stage1Length$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _stage2Length$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _stage1Length$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	eax, DWORD PTR _fullStage2Length$[ebp]
	sub	eax, DWORD PTR _stage2Length$[ebp]
	mov	ecx, DWORD PTR _stage2$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1500
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _stage1$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1501
	mov	eax, DWORD PTR _fullStage2Length$[ebp]
	mov	ecx, DWORD PTR _stage2$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	DWORD PTR [eax+160], edx
; Line 1504
	mov	eax, DWORD PTR _stage1$[ebp]
	mov	DWORD PTR _stage2$[ebp], eax
; Line 1508
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, WORD PTR [eax+176]
	add	ecx, 1
	sar	ecx, 6
	mov	DWORD PTR _stageUTF8Length$70829[ebp], ecx
; Line 1509
	mov	DWORD PTR _stageUTF8Index$70831[ebp], 0
; Line 1512
	mov	DWORD PTR _st1$70832[ebp], 0
	jmp	SHORT $LN10@reconstitu
$LN9@reconstitu:
	mov	eax, DWORD PTR _st1$70832[ebp]
	add	eax, 1
	mov	DWORD PTR _st1$70832[ebp], eax
$LN10@reconstitu:
	mov	eax, DWORD PTR _stageUTF8Index$70831[ebp]
	cmp	eax, DWORD PTR _stageUTF8Length$70829[ebp]
	jge	$LN8@reconstitu
; Line 1513
	mov	eax, DWORD PTR _st1$70832[ebp]
	mov	ecx, DWORD PTR _stage1$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _st2$70833[ebp], edx
; Line 1514
	mov	eax, DWORD PTR _stage1Length$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR _st2$70833[ebp], eax
	je	$LN7@reconstitu
; Line 1516
	mov	DWORD PTR _i$70835[ebp], 0
	jmp	SHORT $LN6@reconstitu
$LN5@reconstitu:
	mov	eax, DWORD PTR _i$70835[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70835[ebp], eax
$LN6@reconstitu:
	cmp	DWORD PTR _i$70835[ebp], 16		; 00000010H
	jge	$LN4@reconstitu
; Line 1517
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _stageUTF8Index$70831[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _st3$70834[ebp], eax
	mov	ecx, DWORD PTR _stageUTF8Index$70831[ebp]
	add	ecx, 1
	mov	DWORD PTR _stageUTF8Index$70831[ebp], ecx
; Line 1518
	cmp	DWORD PTR _st3$70834[ebp], 0
	je	SHORT $LN3@reconstitu
; Line 1520
	mov	eax, DWORD PTR _st3$70834[ebp]
	sar	eax, 4
	mov	DWORD PTR _st3$70834[ebp], eax
; Line 1525
	mov	eax, DWORD PTR _st2$70833[ebp]
	mov	ecx, DWORD PTR _stage2$[ebp]
	mov	edx, DWORD PTR _st3$70834[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _st2$70833[ebp]
	add	eax, 1
	mov	DWORD PTR _st2$70833[ebp], eax
	mov	ecx, DWORD PTR _st3$70834[ebp]
	add	ecx, 1
	mov	DWORD PTR _st3$70834[ebp], ecx
; Line 1526
	mov	eax, DWORD PTR _st2$70833[ebp]
	mov	ecx, DWORD PTR _stage2$[ebp]
	mov	edx, DWORD PTR _st3$70834[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _st2$70833[ebp]
	add	eax, 1
	mov	DWORD PTR _st2$70833[ebp], eax
	mov	ecx, DWORD PTR _st3$70834[ebp]
	add	ecx, 1
	mov	DWORD PTR _st3$70834[ebp], ecx
; Line 1527
	mov	eax, DWORD PTR _st2$70833[ebp]
	mov	ecx, DWORD PTR _stage2$[ebp]
	mov	edx, DWORD PTR _st3$70834[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _st2$70833[ebp]
	add	eax, 1
	mov	DWORD PTR _st2$70833[ebp], eax
	mov	ecx, DWORD PTR _st3$70834[ebp]
	add	ecx, 1
	mov	DWORD PTR _st3$70834[ebp], ecx
; Line 1528
	mov	eax, DWORD PTR _st2$70833[ebp]
	mov	ecx, DWORD PTR _stage2$[ebp]
	mov	edx, DWORD PTR _st3$70834[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _st2$70833[ebp]
	add	eax, 1
	mov	DWORD PTR _st2$70833[ebp], eax
; Line 1529
	jmp	SHORT $LN2@reconstitu
$LN3@reconstitu:
; Line 1531
	mov	eax, DWORD PTR _st2$70833[ebp]
	add	eax, 4
	mov	DWORD PTR _st2$70833[ebp], eax
$LN2@reconstitu:
; Line 1533
	jmp	$LN5@reconstitu
$LN4@reconstitu:
	jmp	SHORT $LN1@reconstitu
$LN7@reconstitu:
; Line 1536
	mov	eax, DWORD PTR _stageUTF8Index$70831[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _stageUTF8Index$70831[ebp], eax
$LN1@reconstitu:
; Line 1538
	jmp	$LN9@reconstitu
$LN8@reconstitu:
; Line 1542
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	push	ecx
	push	OFFSET ?writeStage3Roundtrip@@YACPBXIQAH@Z ; writeStage3Roundtrip
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	push	edx
	call	?ucnv_MBCSEnumToUnicode@@YAXPAUUConverterMBCSTable@@P6ACPBXIQAH@Z1PAW4UErrorCode@@@Z ; ucnv_MBCSEnumToUnicode
	add	esp, 16					; 00000010H
$LN12@reconstitu:
; Line 1543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reconstituteData@@YAXPAUUConverterMBCSTable@@IIIPAW4UErrorCode@@@Z ENDP ; reconstituteData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_MBCSEnumToUnicode@@YAXPAUUConverterMBCSTable@@P6ACPBXIQAH@Z1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_state$ = -148						; size = 4
_stateProps$ = -136					; size = 128
__$ArrayPad$ = -4					; size = 4
_mbcsTable$ = 8						; size = 4
_callback$ = 12						; size = 4
_context$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
?ucnv_MBCSEnumToUnicode@@YAXPAUUConverterMBCSTable@@P6ACPBXIQAH@Z1PAW4UErrorCode@@@Z PROC ; ucnv_MBCSEnumToUnicode, COMDAT
; Line 807
	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 829
	push	128					; 00000080H
	push	-1
	lea	eax, DWORD PTR _stateProps$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 832
	push	0
	lea	eax, DWORD PTR _stateProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?getStateProp@@YACPAY0BAA@$$CBHQACH@Z	; getStateProp
	add	esp, 12					; 0000000cH
; Line 834
	mov	DWORD PTR _state$[ebp], 0
	jmp	SHORT $LN4@ucnv_MBCSE
$LN3@ucnv_MBCSE:
	mov	eax, DWORD PTR _state$[ebp]
	add	eax, 1
	mov	DWORD PTR _state$[ebp], eax
$LN4@ucnv_MBCSE:
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	DWORD PTR _state$[ebp], ecx
	jge	SHORT $LN5@ucnv_MBCSE
; Line 838
	mov	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR _stateProps$[ebp+eax]
	cmp	ecx, 64					; 00000040H
	jl	SHORT $LN1@ucnv_MBCSE
; Line 843
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stateProps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	push	edx
	call	?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z ; enumToU
	add	esp, 32					; 00000020H
$LN1@ucnv_MBCSE:
; Line 845
	jmp	SHORT $LN3@ucnv_MBCSE
$LN5@ucnv_MBCSE:
; Line 846
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ucnv_MBCSE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@ucnv_MBCSE:
	DD	1
	DD	$LN8@ucnv_MBCSE
$LN8@ucnv_MBCSE:
	DD	-136					; ffffff78H
	DD	128					; 00000080H
	DD	$LN7@ucnv_MBCSE
$LN7@ucnv_MBCSE:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
?ucnv_MBCSEnumToUnicode@@YAXPAUUConverterMBCSTable@@P6ACPBXIQAH@Z1PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSEnumToUnicode
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_finalOffset$70419 = -268				; size = 4
_finalOffset$70413 = -256				; size = 4
_action$70406 = -244					; size = 4
_c$70405 = -232						; size = 4
_nextState$70399 = -220					; size = 4
_entry$70397 = -208					; size = 4
_limit$ = -196						; size = 4
_b$ = -184						; size = 4
_anyCodePoints$ = -172					; size = 4
_unicodeCodeUnits$ = -160				; size = 4
_row$ = -148						; size = 4
_codePoints$ = -136					; size = 128
__$ArrayPad$ = -4					; size = 4
_mbcsTable$ = 8						; size = 4
_stateProps$ = 12					; size = 4
_state$ = 16						; size = 4
_offset$ = 20						; size = 4
_value$ = 24						; size = 4
_callback$ = 28						; size = 4
_context$ = 32						; size = 4
_pErrorCode$ = 36					; size = 4
?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z PROC ; enumToU, COMDAT
; Line 635
	push	ebp
	mov	ebp, esp
	sub	esp, 464				; 000001d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-464]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 642
	mov	eax, DWORD PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _row$[ebp], eax
; Line 643
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _unicodeCodeUnits$[ebp], ecx
; Line 645
	mov	eax, DWORD PTR _value$[ebp]
	shl	eax, 8
	mov	DWORD PTR _value$[ebp], eax
; Line 646
	mov	DWORD PTR _anyCodePoints$[ebp], -1
; Line 648
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 56					; 00000038H
	shl	ecx, 2
	mov	DWORD PTR _b$[ebp], ecx
; Line 649
	cmp	DWORD PTR _b$[ebp], 0
	jne	SHORT $LN26@enumToU
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 64					; 00000040H
	jl	SHORT $LN26@enumToU
; Line 651
	mov	DWORD PTR _codePoints$[ebp], -1
; Line 652
	mov	DWORD PTR _b$[ebp], 1
$LN26@enumToU:
; Line 654
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 7
	add	ecx, 1
	shl	ecx, 5
	mov	DWORD PTR _limit$[ebp], ecx
$LN25@enumToU:
; Line 655
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	$LN24@enumToU
; Line 656
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$70397[ebp], edx
; Line 657
	cmp	DWORD PTR _entry$70397[ebp], 0
	jl	$LN23@enumToU
; Line 658
	mov	eax, DWORD PTR _entry$70397[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _nextState$70399[ebp], eax
; Line 659
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$70399[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jl	SHORT $LN22@enumToU
; Line 666
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entry$70397[ebp]
	and	ecx, 16777215				; 00ffffffH
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nextState$70399[ebp]
	push	edx
	mov	eax, DWORD PTR _stateProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	push	ecx
	call	?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z ; enumToU
	add	esp, 32					; 00000020H
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN22@enumToU
; Line 667
	xor	al, al
	jmp	$LN27@enumToU
$LN22@enumToU:
; Line 670
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, 31					; 0000001fH
	mov	DWORD PTR _codePoints$[ebp+eax*4], -1
; Line 671
	jmp	$LN20@enumToU
$LN23@enumToU:
; Line 679
	mov	eax, DWORD PTR _entry$70397[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _action$70406[ebp], eax
; Line 680
	jne	SHORT $LN19@enumToU
; Line 682
	movzx	eax, WORD PTR _entry$70397[ebp]
	mov	DWORD PTR _c$70405[ebp], eax
	jmp	$LN18@enumToU
$LN19@enumToU:
; Line 683
	cmp	DWORD PTR _action$70406[ebp], 4
	jne	SHORT $LN17@enumToU
; Line 684
	movzx	eax, WORD PTR _entry$70397[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _finalOffset$70413[ebp], eax
; Line 685
	mov	eax, DWORD PTR _finalOffset$70413[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$70405[ebp], edx
; Line 686
	cmp	DWORD PTR _c$70405[ebp], 65534		; 0000fffeH
	jge	SHORT $LN16@enumToU
; Line 688
	jmp	SHORT $LN15@enumToU
$LN16@enumToU:
; Line 689
	mov	DWORD PTR _c$70405[ebp], -1
$LN15@enumToU:
; Line 690
	jmp	$LN18@enumToU
$LN17@enumToU:
; Line 691
	cmp	DWORD PTR _action$70406[ebp], 5
	jne	$LN13@enumToU
; Line 692
	movzx	eax, WORD PTR _entry$70397[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _finalOffset$70419[ebp], eax
; Line 693
	mov	eax, DWORD PTR _finalOffset$70419[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$70405[ebp], edx
	mov	eax, DWORD PTR _finalOffset$70419[ebp]
	add	eax, 1
	mov	DWORD PTR _finalOffset$70419[ebp], eax
; Line 694
	cmp	DWORD PTR _c$70405[ebp], 55296		; 0000d800H
	jge	SHORT $LN12@enumToU
	jmp	SHORT $LN11@enumToU
$LN12@enumToU:
; Line 696
	cmp	DWORD PTR _c$70405[ebp], 56319		; 0000dbffH
	jg	SHORT $LN10@enumToU
; Line 698
	mov	eax, DWORD PTR _c$70405[ebp]
	and	eax, 1023				; 000003ffH
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _finalOffset$70419[ebp]
	mov	edx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx+9216]
	mov	DWORD PTR _c$70405[ebp], edx
	jmp	SHORT $LN11@enumToU
$LN10@enumToU:
; Line 699
	cmp	DWORD PTR _c$70405[ebp], 57344		; 0000e000H
	jne	SHORT $LN8@enumToU
; Line 701
	mov	eax, DWORD PTR _finalOffset$70419[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$70405[ebp], edx
; Line 702
	jmp	SHORT $LN11@enumToU
$LN8@enumToU:
; Line 703
	mov	DWORD PTR _c$70405[ebp], -1
$LN11@enumToU:
; Line 704
	jmp	SHORT $LN18@enumToU
$LN13@enumToU:
; Line 705
	cmp	DWORD PTR _action$70406[ebp], 1
	jne	SHORT $LN5@enumToU
; Line 707
	mov	eax, DWORD PTR _entry$70397[ebp]
	and	eax, 1048575				; 000fffffH
	add	eax, 65536				; 00010000H
	mov	DWORD PTR _c$70405[ebp], eax
; Line 708
	jmp	SHORT $LN18@enumToU
$LN5@enumToU:
; Line 709
	mov	DWORD PTR _c$70405[ebp], -1
$LN18@enumToU:
; Line 712
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, 31					; 0000001fH
	mov	ecx, DWORD PTR _c$70405[ebp]
	mov	DWORD PTR _codePoints$[ebp+eax*4], ecx
; Line 713
	mov	eax, DWORD PTR _anyCodePoints$[ebp]
	and	eax, DWORD PTR _c$70405[ebp]
	mov	DWORD PTR _anyCodePoints$[ebp], eax
$LN20@enumToU:
; Line 715
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, 1
	mov	DWORD PTR _b$[ebp], eax
	mov	ecx, DWORD PTR _b$[ebp]
	and	ecx, 31					; 0000001fH
	jne	SHORT $LN3@enumToU
; Line 716
	cmp	DWORD PTR _anyCodePoints$[ebp], 0
	jl	SHORT $LN3@enumToU
; Line 717
	mov	esi, esp
	lea	eax, DWORD PTR _codePoints$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	sub	ecx, 32					; 00000020H
	or	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	call	DWORD PTR _callback$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@enumToU
; Line 718
	xor	al, al
	jmp	SHORT $LN27@enumToU
$LN1@enumToU:
; Line 720
	mov	DWORD PTR _anyCodePoints$[ebp], -1
$LN3@enumToU:
; Line 723
	jmp	$LN25@enumToU
$LN24@enumToU:
; Line 724
	mov	al, 1
$LN27@enumToU:
; Line 725
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@enumToU
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 464				; 000001d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN31@enumToU:
	DD	1
	DD	$LN30@enumToU
$LN30@enumToU:
	DD	-136					; ffffff78H
	DD	128					; 00000080H
	DD	$LN29@enumToU
$LN29@enumToU:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z ENDP ; enumToU
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getStateProp@@YACPAY0BAA@$$CBHQACH@Z
_TEXT	SEGMENT
_nextState$ = -56					; size = 4
_entry$ = -44						; size = 4
_max$ = -32						; size = 4
_min$ = -20						; size = 4
_row$ = -8						; size = 4
_stateTable$ = 8					; size = 4
_stateProps$ = 12					; size = 4
_state$ = 16						; size = 4
?getStateProp@@YACPAY0BAA@$$CBHQACH@Z PROC		; getStateProp, COMDAT
; Line 733
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 737
	mov	eax, DWORD PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	DWORD PTR _row$[ebp], eax
; Line 738
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	mov	BYTE PTR [eax], 0
; Line 741
	mov	DWORD PTR _min$[ebp], 0
	jmp	SHORT $LN22@getStatePr
$LN21@getStatePr:
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, 1
	mov	DWORD PTR _min$[ebp], eax
$LN22@getStatePr:
; Line 742
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$[ebp], edx
; Line 743
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	DWORD PTR _nextState$[ebp], eax
; Line 744
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, -1
	jne	SHORT $LN19@getStatePr
; Line 745
	mov	eax, DWORD PTR _nextState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stateProps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stateTable$[ebp]
	push	edx
	call	?getStateProp@@YACPAY0BAA@$$CBHQACH@Z	; getStateProp
	add	esp, 12					; 0000000cH
$LN19@getStatePr:
; Line 747
	cmp	DWORD PTR _entry$[ebp], 0
	jl	SHORT $LN18@getStatePr
; Line 748
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jl	SHORT $LN17@getStatePr
; Line 749
	jmp	SHORT $LN20@getStatePr
$LN17@getStatePr:
; Line 750
	jmp	SHORT $LN16@getStatePr
$LN18@getStatePr:
; Line 751
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 6
	jae	SHORT $LN16@getStatePr
; Line 752
	jmp	SHORT $LN20@getStatePr
$LN16@getStatePr:
; Line 754
	cmp	DWORD PTR _min$[ebp], 255		; 000000ffH
	jne	SHORT $LN14@getStatePr
; Line 755
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	mov	BYTE PTR [eax], -64			; ffffffc0H
; Line 756
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR [eax]
	jmp	$LN23@getStatePr
$LN14@getStatePr:
; Line 758
	jmp	$LN21@getStatePr
$LN20@getStatePr:
; Line 759
	mov	eax, DWORD PTR _min$[ebp]
	sar	eax, 5
	shl	eax, 3
	movsx	ecx, al
	mov	edx, DWORD PTR _stateProps$[ebp]
	add	edx, DWORD PTR _state$[ebp]
	movsx	eax, BYTE PTR [edx]
	or	eax, ecx
	mov	ecx, DWORD PTR _stateProps$[ebp]
	add	ecx, DWORD PTR _state$[ebp]
	mov	BYTE PTR [ecx], al
; Line 762
	mov	DWORD PTR _max$[ebp], 255		; 000000ffH
	jmp	SHORT $LN13@getStatePr
$LN12@getStatePr:
	mov	eax, DWORD PTR _max$[ebp]
	sub	eax, 1
	mov	DWORD PTR _max$[ebp], eax
$LN13@getStatePr:
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jge	SHORT $LN11@getStatePr
; Line 763
	mov	eax, DWORD PTR _max$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$[ebp], edx
; Line 764
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	DWORD PTR _nextState$[ebp], eax
; Line 765
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, -1
	jne	SHORT $LN10@getStatePr
; Line 766
	mov	eax, DWORD PTR _nextState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stateProps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stateTable$[ebp]
	push	edx
	call	?getStateProp@@YACPAY0BAA@$$CBHQACH@Z	; getStateProp
	add	esp, 12					; 0000000cH
$LN10@getStatePr:
; Line 768
	cmp	DWORD PTR _entry$[ebp], 0
	jl	SHORT $LN9@getStatePr
; Line 769
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jl	SHORT $LN8@getStatePr
; Line 770
	jmp	SHORT $LN11@getStatePr
$LN8@getStatePr:
; Line 771
	jmp	SHORT $LN7@getStatePr
$LN9@getStatePr:
; Line 772
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 6
	jae	SHORT $LN7@getStatePr
; Line 773
	jmp	SHORT $LN11@getStatePr
$LN7@getStatePr:
; Line 775
	jmp	SHORT $LN12@getStatePr
$LN11@getStatePr:
; Line 776
	mov	eax, DWORD PTR _max$[ebp]
	sar	eax, 5
	movsx	ecx, al
	mov	edx, DWORD PTR _stateProps$[ebp]
	add	edx, DWORD PTR _state$[ebp]
	movsx	eax, BYTE PTR [edx]
	or	eax, ecx
	mov	ecx, DWORD PTR _stateProps$[ebp]
	add	ecx, DWORD PTR _state$[ebp]
	mov	BYTE PTR [ecx], al
$LN5@getStatePr:
; Line 779
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jg	$LN4@getStatePr
; Line 780
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$[ebp], edx
; Line 781
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	DWORD PTR _nextState$[ebp], eax
; Line 782
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, -1
	jne	SHORT $LN3@getStatePr
; Line 783
	mov	eax, DWORD PTR _nextState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stateProps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stateTable$[ebp]
	push	edx
	call	?getStateProp@@YACPAY0BAA@$$CBHQACH@Z	; getStateProp
	add	esp, 12					; 0000000cH
$LN3@getStatePr:
; Line 785
	cmp	DWORD PTR _entry$[ebp], 0
	jge	SHORT $LN2@getStatePr
; Line 786
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _nextState$[ebp]
	movsx	ecx, BYTE PTR [eax]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _stateProps$[ebp]
	add	edx, DWORD PTR _nextState$[ebp]
	mov	BYTE PTR [edx], cl
; Line 787
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 3
	ja	SHORT $LN2@getStatePr
; Line 788
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _stateProps$[ebp]
	add	edx, DWORD PTR _state$[ebp]
	mov	BYTE PTR [edx], cl
$LN2@getStatePr:
; Line 791
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, 1
	mov	DWORD PTR _min$[ebp], eax
; Line 792
	jmp	$LN5@getStatePr
$LN4@getStatePr:
; Line 793
	mov	eax, DWORD PTR _stateProps$[ebp]
	add	eax, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR [eax]
$LN23@getStatePr:
; Line 794
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStateProp@@YACPAY0BAA@$$CBHQACH@Z ENDP		; getStateProp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?writeStage3Roundtrip@@YACPBXIQAH@Z
_TEXT	SEGMENT
tv135 = -292						; size = 4
tv68 = -292						; size = 4
_st3$ = -92						; size = 4
_i$ = -80						; size = 4
_c$ = -68						; size = 4
_p$ = -56						; size = 4
_bytes$ = -44						; size = 4
_stage2$ = -32						; size = 4
_table$ = -20						; size = 4
_mbcsTable$ = -8					; size = 4
_context$ = 8						; size = 4
_value$ = 12						; size = 4
_codePoints$ = 16					; size = 4
?writeStage3Roundtrip@@YACPBXIQAH@Z PROC		; writeStage3Roundtrip, COMDAT
; Line 1400
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1401
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _mbcsTable$[ebp], eax
; Line 1408
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _table$[ebp], ecx
; Line 1409
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 1412
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	cl, BYTE PTR [eax+172]
	mov	BYTE PTR tv68[ebp], cl
	cmp	BYTE PTR tv68[ebp], 8
	je	SHORT $LN20@writeStage
	cmp	BYTE PTR tv68[ebp], 9
	je	SHORT $LN15@writeStage
	jmp	SHORT $LN21@writeStage
$LN20@writeStage:
; Line 1414
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN19@writeStage
	jmp	SHORT $LN18@writeStage
$LN19@writeStage:
; Line 1417
	cmp	DWORD PTR _value$[ebp], 9371647		; 008effffH
	ja	SHORT $LN17@writeStage
; Line 1419
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 32767				; 00007fffH
	mov	DWORD PTR _value$[ebp], eax
; Line 1420
	jmp	SHORT $LN18@writeStage
$LN17@writeStage:
; Line 1422
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 65407				; 0000ff7fH
	mov	DWORD PTR _value$[ebp], eax
$LN18@writeStage:
; Line 1424
	jmp	SHORT $LN21@writeStage
$LN15@writeStage:
; Line 1426
	cmp	DWORD PTR _value$[ebp], 16777215	; 00ffffffH
	ja	SHORT $LN14@writeStage
	jmp	SHORT $LN21@writeStage
$LN14@writeStage:
; Line 1429
	cmp	DWORD PTR _value$[ebp], -1895825409	; 8effffffH
	ja	SHORT $LN12@writeStage
; Line 1431
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 8388607				; 007fffffH
	mov	DWORD PTR _value$[ebp], eax
; Line 1432
	jmp	SHORT $LN21@writeStage
$LN12@writeStage:
; Line 1434
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 16744447				; 00ff7fffH
	mov	DWORD PTR _value$[ebp], eax
$LN21@writeStage:
; Line 1441
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@writeStage
$LN8@writeStage:
	mov	eax, DWORD PTR _value$[ebp]
	add	eax, 1
	mov	DWORD PTR _value$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@writeStage:
	cmp	DWORD PTR _i$[ebp], 31			; 0000001fH
	jg	$LN7@writeStage
; Line 1442
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _codePoints$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _c$[ebp], edx
; Line 1443
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN6@writeStage
; Line 1444
	jmp	SHORT $LN8@writeStage
$LN6@writeStage:
; Line 1448
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 4
	and	edx, 63					; 0000003fH
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _stage2$[ebp], eax
; Line 1449
	mov	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 1450
	mov	eax, DWORD PTR _stage2$[ebp]
	movzx	ecx, WORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 15					; 0000000fH
	add	ecx, edx
	mov	DWORD PTR _st3$[ebp], ecx
; Line 1453
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	cl, BYTE PTR [eax+172]
	mov	BYTE PTR tv135[ebp], cl
	cmp	BYTE PTR tv135[ebp], 2
	je	SHORT $LN3@writeStage
	cmp	BYTE PTR tv135[ebp], 3
	je	SHORT $LN2@writeStage
	cmp	BYTE PTR tv135[ebp], 9
	je	SHORT $LN3@writeStage
	jmp	SHORT $LN1@writeStage
$LN3@writeStage:
; Line 1456
	mov	eax, DWORD PTR _st3$[ebp]
	imul	eax, 3
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 1457
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [ecx], al
; Line 1458
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [ecx+1], al
; Line 1459
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax+2], cl
; Line 1460
	jmp	SHORT $LN4@writeStage
$LN2@writeStage:
; Line 1462
	mov	eax, DWORD PTR _st3$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 1463
	jmp	SHORT $LN4@writeStage
$LN1@writeStage:
; Line 1466
	mov	eax, DWORD PTR _st3$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR _value$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
$LN4@writeStage:
; Line 1471
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	ecx, 16					; 00000010H
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR _stage2$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _stage2$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1472
	jmp	$LN8@writeStage
$LN7@writeStage:
; Line 1473
	mov	al, 1
; Line 1474
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?writeStage3Roundtrip@@YACPBXIQAH@Z ENDP		; writeStage3Roundtrip
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z
_TEXT	SEGMENT
_mbcsTable$ = -8					; size = 4
_sharedData$ = 8					; size = 4
?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z PROC	; ucnv_MBCSUnload, COMDAT
; Line 1873
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1874
	mov	eax, DWORD PTR _sharedData$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR _mbcsTable$[ebp], eax
; Line 1876
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN4@ucnv_MBCSU
; Line 1877
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN4@ucnv_MBCSU:
; Line 1879
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	je	SHORT $LN3@ucnv_MBCSU
; Line 1880
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN3@ucnv_MBCSU:
; Line 1882
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+192], 0
	je	SHORT $LN2@ucnv_MBCSU
; Line 1883
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	call	_ucnv_unload_56
	add	esp, 4
$LN2@ucnv_MBCSU:
; Line 1885
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN5@ucnv_MBCSU
; Line 1886
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN5@ucnv_MBCSU:
; Line 1888
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z ENDP	; ucnv_MBCSUnload
_TEXT	ENDS
PUBLIC	??_C@_04PMJCJNOC@jips?$AA@			; `string'
PUBLIC	??_C@_04DAKIHPJK@JIPS?$AA@			; `string'
PUBLIC	??_C@_03PHJLPCGO@jef?$AA@			; `string'
PUBLIC	??_C@_03PKGADPBC@JEF?$AA@			; `string'
PUBLIC	??_C@_04JINDJDBF@keis?$AA@			; `string'
PUBLIC	??_C@_04FEOJHBGN@KEIS?$AA@			; `string'
PUBLIC	??_C@_07DNCGDNOG@GB18030?$AA@			; `string'
PUBLIC	??_C@_07LONGGCM@gb18030?$AA@			; `string'
PUBLIC	??_C@_05BJAKOMII@18030?$AA@			; `string'
EXTRN	__imp__strstr:PROC
EXTRN	_umtx_unlock_56:PROC
EXTRN	_umtx_lock_56:PROC
;	COMDAT ??_C@_04PMJCJNOC@jips?$AA@
CONST	SEGMENT
??_C@_04PMJCJNOC@jips?$AA@ DB 'jips', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DAKIHPJK@JIPS?$AA@
CONST	SEGMENT
??_C@_04DAKIHPJK@JIPS?$AA@ DB 'JIPS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PHJLPCGO@jef?$AA@
CONST	SEGMENT
??_C@_03PHJLPCGO@jef?$AA@ DB 'jef', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PKGADPBC@JEF?$AA@
CONST	SEGMENT
??_C@_03PKGADPBC@JEF?$AA@ DB 'JEF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JINDJDBF@keis?$AA@
CONST	SEGMENT
??_C@_04JINDJDBF@keis?$AA@ DB 'keis', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FEOJHBGN@KEIS?$AA@
CONST	SEGMENT
??_C@_04FEOJHBGN@KEIS?$AA@ DB 'KEIS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNCGDNOG@GB18030?$AA@
CONST	SEGMENT
??_C@_07DNCGDNOG@GB18030?$AA@ DB 'GB18030', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LONGGCM@gb18030?$AA@
CONST	SEGMENT
??_C@_07LONGGCM@gb18030?$AA@ DB 'gb18030', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BJAKOMII@18030?$AA@
CONST	SEGMENT
??_C@_05BJAKOMII@18030?$AA@ DB '18030', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv131 = -256						; size = 4
tv75 = -256						; size = 4
_isCached$70984 = -53					; size = 1
_maxBytesPerUChar$ = -41				; size = 1
_outputType$ = -29					; size = 1
_extIndexes$ = -20					; size = 4
_mbcsTable$ = -8					; size = 4
_cnv$ = 8						; size = 4
_pArgs$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSOpen, COMDAT
; Line 1893
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1899
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN22@ucnv_MBCSO
; Line 1900
	jmp	$LN23@ucnv_MBCSO
$LN22@ucnv_MBCSO:
; Line 1903
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR _mbcsTable$[ebp], ecx
; Line 1904
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	cl, BYTE PTR [eax+172]
	mov	BYTE PTR _outputType$[ebp], cl
; Line 1906
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 219				; 000000dbH
	jne	SHORT $LN21@ucnv_MBCSO
; Line 1908
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -17				; ffffffefH
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [ecx+28], edx
$LN21@ucnv_MBCSO:
; Line 1911
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 16					; 00000010H
	je	$LN20@ucnv_MBCSO
; Line 1915
	push	0
	call	_umtx_lock_56
	add	esp, 4
; Line 1916
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+12], 0
	setne	cl
	mov	BYTE PTR _isCached$70984[ebp], cl
; Line 1917
	push	0
	call	_umtx_unlock_56
	add	esp, 4
; Line 1919
	movsx	eax, BYTE PTR _isCached$70984[ebp]
	test	eax, eax
	jne	SHORT $LN20@ucnv_MBCSO
; Line 1920
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	?_EBCDICSwapLFNL@@YACPAUUConverterSharedData@@PAW4UErrorCode@@@Z ; _EBCDICSwapLFNL
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN20@ucnv_MBCSO
; Line 1921
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@ucnv_MBCSO
; Line 1922
	jmp	$LN23@ucnv_MBCSO
$LN17@ucnv_MBCSO:
; Line 1926
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -17				; ffffffefH
	mov	DWORD PTR tv131[ebp], ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR [ecx+28], edx
$LN20@ucnv_MBCSO:
; Line 1931
	mov	esi, esp
	push	OFFSET ??_C@_05BJAKOMII@18030?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN16@ucnv_MBCSO
; Line 1932
	mov	esi, esp
	push	OFFSET ??_C@_07LONGGCM@gb18030?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN14@ucnv_MBCSO
	mov	esi, esp
	push	OFFSET ??_C@_07DNCGDNOG@GB18030?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN15@ucnv_MBCSO
$LN14@ucnv_MBCSO:
; Line 1934
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	or	ecx, 32768				; 00008000H
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [edx+28], ecx
$LN15@ucnv_MBCSO:
; Line 1935
	jmp	$LN13@ucnv_MBCSO
$LN16@ucnv_MBCSO:
; Line 1936
	mov	esi, esp
	push	OFFSET ??_C@_04FEOJHBGN@KEIS?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN11@ucnv_MBCSO
	mov	esi, esp
	push	OFFSET ??_C@_04JINDJDBF@keis?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN12@ucnv_MBCSO
$LN11@ucnv_MBCSO:
; Line 1938
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	or	ecx, 4096				; 00001000H
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [edx+28], ecx
	jmp	$LN13@ucnv_MBCSO
$LN12@ucnv_MBCSO:
; Line 1939
	mov	esi, esp
	push	OFFSET ??_C@_03PKGADPBC@JEF?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@ucnv_MBCSO
	mov	esi, esp
	push	OFFSET ??_C@_03PHJLPCGO@jef?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@ucnv_MBCSO
$LN8@ucnv_MBCSO:
; Line 1941
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [edx+28], ecx
	jmp	SHORT $LN13@ucnv_MBCSO
$LN9@ucnv_MBCSO:
; Line 1942
	mov	esi, esp
	push	OFFSET ??_C@_04DAKIHPJK@JIPS?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@ucnv_MBCSO
	mov	esi, esp
	push	OFFSET ??_C@_04PMJCJNOC@jips?$AA@
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@ucnv_MBCSO
$LN5@ucnv_MBCSO:
; Line 1944
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	or	ecx, 16384				; 00004000H
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [edx+28], ecx
$LN13@ucnv_MBCSO:
; Line 1948
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 12					; 0000000cH
	jne	SHORT $LN4@ucnv_MBCSO
; Line 1949
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+60], 3
$LN4@ucnv_MBCSO:
; Line 1952
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	DWORD PTR _extIndexes$[ebp], ecx
; Line 1953
	cmp	DWORD PTR _extIndexes$[ebp], 0
	je	SHORT $LN23@ucnv_MBCSO
; Line 1954
	mov	eax, DWORD PTR _extIndexes$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	and	ecx, 255				; 000000ffH
	mov	BYTE PTR _maxBytesPerUChar$[ebp], cl
; Line 1955
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 12					; 0000000cH
	jne	SHORT $LN2@ucnv_MBCSO
; Line 1956
	mov	al, BYTE PTR _maxBytesPerUChar$[ebp]
	add	al, 1
	mov	BYTE PTR _maxBytesPerUChar$[ebp], al
$LN2@ucnv_MBCSO:
; Line 1959
	movsx	eax, BYTE PTR _maxBytesPerUChar$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	movsx	edx, BYTE PTR [ecx+60]
	cmp	eax, edx
	jle	SHORT $LN23@ucnv_MBCSO
; Line 1960
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _maxBytesPerUChar$[ebp]
	mov	BYTE PTR [eax+60], cl
$LN23@ucnv_MBCSO:
; Line 1979
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSOpen
_TEXT	ENDS
PUBLIC	??_C@_09MJMCKJMM@?0swaplfnl?$AA@		; `string'
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
;	COMDAT ??_C@_09MJMCKJMM@?0swaplfnl?$AA@
CONST	SEGMENT
??_C@_09MJMCKJMM@?0swaplfnl?$AA@ DB ',swaplfnl', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_EBCDICSwapLFNL@@YACPAUUConverterSharedData@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_sizeofFromUBytes$ = -128				; size = 4
_size$ = -116						; size = 4
_stage2Entry$ = -104					; size = 4
_name$ = -92						; size = 4
_p$ = -80						; size = 4
_newResults$ = -68					; size = 4
_newStateTable$ = -56					; size = 4
_bytes$ = -44						; size = 4
_results$ = -32						; size = 4
_table$ = -20						; size = 4
_mbcsTable$ = -8					; size = 4
_sharedData$ = 8					; size = 4
_pErrorCode$ = 12					; size = 4
?_EBCDICSwapLFNL@@YACPAUUConverterSharedData@@PAW4UErrorCode@@@Z PROC ; _EBCDICSwapLFNL, COMDAT
; Line 1251
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1265
	mov	eax, DWORD PTR _sharedData$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR _mbcsTable$[ebp], eax
; Line 1267
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _table$[ebp], ecx
; Line 1268
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 1269
	mov	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _results$[ebp], eax
; Line 1281
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	test	ecx, ecx
	je	SHORT $LN16@EBCDICSwap
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	cmp	ecx, 12					; 0000000cH
	jne	SHORT $LN17@EBCDICSwap
$LN16@EBCDICSwap:
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+148], -2147483638	; 8000000aH
	jne	SHORT $LN17@EBCDICSwap
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+84], -2147483515		; 80000085H
	je	SHORT $LN18@EBCDICSwap
$LN17@EBCDICSwap:
; Line 1282
	xor	al, al
	jmp	$LN19@EBCDICSwap
$LN18@EBCDICSwap:
; Line 1285
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	test	ecx, ecx
	jne	SHORT $LN15@EBCDICSwap
; Line 1289
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _results$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+20]
	cmp	edx, 3877				; 00000f25H
	jne	SHORT $LN13@EBCDICSwap
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+16]
	mov	ecx, DWORD PTR _results$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+10]
	cmp	edx, 3861				; 00000f15H
	je	SHORT $LN14@EBCDICSwap
$LN13@EBCDICSwap:
; Line 1290
	xor	al, al
	jmp	$LN19@EBCDICSwap
$LN14@EBCDICSwap:
; Line 1292
	jmp	SHORT $LN12@EBCDICSwap
$LN15@EBCDICSwap:
; Line 1293
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _stage2Entry$[ebp], eax
; Line 1297
	mov	eax, DWORD PTR _stage2Entry$[ebp]
	and	eax, 67108864				; 04000000H
	neg	eax
	sbb	eax, eax
	neg	eax
	je	SHORT $LN10@EBCDICSwap
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+20]
	cmp	edx, 37					; 00000025H
	je	SHORT $LN11@EBCDICSwap
$LN10@EBCDICSwap:
; Line 1298
	xor	al, al
	jmp	$LN19@EBCDICSwap
$LN11@EBCDICSwap:
; Line 1301
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+32]
	mov	DWORD PTR _stage2Entry$[ebp], eax
; Line 1305
	mov	eax, DWORD PTR _stage2Entry$[ebp]
	and	eax, 2097152				; 00200000H
	neg	eax
	sbb	eax, eax
	neg	eax
	je	SHORT $LN8@EBCDICSwap
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+10]
	cmp	edx, 21					; 00000015H
	je	SHORT $LN12@EBCDICSwap
$LN8@EBCDICSwap:
; Line 1306
	xor	al, al
	jmp	$LN19@EBCDICSwap
$LN12@EBCDICSwap:
; Line 1310
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jbe	SHORT $LN7@EBCDICSwap
; Line 1315
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _sizeofFromUBytes$[ebp], ecx
; Line 1316
	jmp	SHORT $LN6@EBCDICSwap
$LN7@EBCDICSwap:
; Line 1329
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1330
	xor	al, al
	jmp	$LN19@EBCDICSwap
$LN6@EBCDICSwap:
; Line 1343
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _sizeofFromUBytes$[ebp]
	lea	eax, DWORD PTR [ecx+edx+80]
	mov	DWORD PTR _size$[ebp], eax
; Line 1344
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 1345
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN5@EBCDICSwap
; Line 1346
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1347
	xor	al, al
	jmp	$LN19@EBCDICSwap
$LN5@EBCDICSwap:
; Line 1351
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _newStateTable$[ebp], eax
; Line 1352
	push	1
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _mbcsTable$[ebp]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 10					; 0000000aH
	push	eax
	mov	ecx, DWORD PTR _mbcsTable$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _newStateTable$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1354
	mov	eax, DWORD PTR _newStateTable$[ebp]
	mov	DWORD PTR [eax+148], -2147483515	; 80000085H
; Line 1355
	mov	eax, DWORD PTR _newStateTable$[ebp]
	mov	DWORD PTR [eax+84], -2147483638		; 8000000aH
; Line 1358
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 10					; 0000000aH
	add	ecx, DWORD PTR _newStateTable$[ebp]
	mov	DWORD PTR _newResults$[ebp], ecx
; Line 1359
	push	1
	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _sizeofFromUBytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _newResults$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1362
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	test	ecx, ecx
	jne	SHORT $LN4@EBCDICSwap
; Line 1363
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	ecx, 3861				; 00000f15H
	mov	edx, DWORD PTR _newResults$[ebp]
	mov	WORD PTR [edx+eax*2+20], cx
; Line 1364
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+16]
	mov	ecx, 3877				; 00000f25H
	mov	edx, DWORD PTR _newResults$[ebp]
	mov	WORD PTR [edx+eax*2+10], cx
; Line 1365
	jmp	SHORT $LN3@EBCDICSwap
$LN4@EBCDICSwap:
; Line 1366
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _stage2Entry$[ebp], eax
; Line 1367
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, 21					; 00000015H
	mov	edx, DWORD PTR _newResults$[ebp]
	mov	WORD PTR [edx+eax*2+20], cx
; Line 1369
	mov	eax, DWORD PTR _table$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+32]
	mov	DWORD PTR _stage2Entry$[ebp], eax
; Line 1370
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, 37					; 00000025H
	mov	edx, DWORD PTR _newResults$[ebp]
	mov	WORD PTR [edx+eax*2+10], cx
$LN3@EBCDICSwap:
; Line 1374
	mov	eax, DWORD PTR _newResults$[ebp]
	add	eax, DWORD PTR _sizeofFromUBytes$[ebp]
	mov	DWORD PTR _name$[ebp], eax
; Line 1375
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 1376
	push	OFFSET ??_C@_09MJMCKJMM@?0swaplfnl?$AA@
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1379
	push	0
	call	_umtx_lock_56
	add	esp, 4
; Line 1380
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@EBCDICSwap
; Line 1381
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _newStateTable$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1382
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _newResults$[ebp]
	mov	DWORD PTR [eax+164], ecx
; Line 1383
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [eax+188], ecx
; Line 1385
	mov	DWORD PTR _newStateTable$[ebp], 0
$LN2@EBCDICSwap:
; Line 1387
	push	0
	call	_umtx_unlock_56
	add	esp, 4
; Line 1390
	cmp	DWORD PTR _newStateTable$[ebp], 0
	je	SHORT $LN1@EBCDICSwap
; Line 1391
	mov	eax, DWORD PTR _newStateTable$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@EBCDICSwap:
; Line 1393
	mov	al, 1
$LN19@EBCDICSwap:
; Line 1394
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_EBCDICSwapLFNL@@YACPAUUConverterSharedData@@PAW4UErrorCode@@@Z ENDP ; _EBCDICSwapLFNL
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z
_TEXT	SEGMENT
_cnv$ = 8						; size = 4
?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z PROC		; ucnv_MBCSGetName, COMDAT
; Line 1982
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1983
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN2@ucnv_MBCSG@3
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	DWORD PTR [ecx+216], 0
	je	SHORT $LN2@ucnv_MBCSG@3
; Line 1984
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR [ecx+216]
	jmp	SHORT $LN3@ucnv_MBCSG@3
; Line 1985
	jmp	SHORT $LN3@ucnv_MBCSG@3
$LN2@ucnv_MBCSG@3:
; Line 1986
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR [ecx+12]
	add	eax, 4
$LN3@ucnv_MBCSG@3:
; Line 1988
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z ENDP		; ucnv_MBCSGetName
_TEXT	ENDS
EXTRN	_ucnv_extContinueMatchToU_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSToUnicodeWithOffsets_56
_TEXT	SEGMENT
tv358 = -448						; size = 4
tv331 = -448						; size = 4
_bytesFromThisBuffer$71407 = -248			; size = 4
_backOutDistance$71406 = -233				; size = 1
_i$71401 = -221						; size = 1
_isDBCSOnly$71399 = -209				; size = 1
_action$ = -197						; size = 1
_c$ = -188						; size = 2
_entry$ = -176						; size = 4
_nextSourceIndex$ = -164				; size = 4
_sourceIndex$ = -152					; size = 4
_bytes$ = -140						; size = 4
_byteIndex$ = -125					; size = 1
_state$ = -113						; size = 1
_offset$ = -104						; size = 4
_unicodeCodeUnits$ = -92				; size = 4
_stateTable$ = -80					; size = 4
_offsets$ = -68						; size = 4
_targetLimit$ = -56					; size = 4
_target$ = -44						; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_ucnv_MBCSToUnicodeWithOffsets_56 PROC			; COMDAT
; Line 2455
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2477
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 2479
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+254]
	test	ecx, ecx
	jle	SHORT $LN99@ucnv_MBCST
; Line 2484
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	push	edx
	call	_ucnv_extContinueMatchToU_56
	add	esp, 16					; 00000010H
; Line 2486
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN97@ucnv_MBCST
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+254]
	test	ecx, ecx
	jge	SHORT $LN99@ucnv_MBCST
$LN97@ucnv_MBCST:
; Line 2487
	jmp	$LN100@ucnv_MBCST
$LN99@ucnv_MBCST:
; Line 2491
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+28]
	cmp	edx, 1
	jne	SHORT $LN96@ucnv_MBCST
; Line 2492
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+201]
	and	edx, 1
	jne	SHORT $LN95@ucnv_MBCST
; Line 2493
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?ucnv_MBCSSingleToBMPWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ; ucnv_MBCSSingleToBMPWithOffsets
	add	esp, 8
; Line 2494
	jmp	SHORT $LN94@ucnv_MBCST
$LN95@ucnv_MBCST:
; Line 2495
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?ucnv_MBCSSingleToUnicodeWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ; ucnv_MBCSSingleToUnicodeWithOffsets
	add	esp, 8
$LN94@ucnv_MBCST:
; Line 2497
	jmp	$LN100@ucnv_MBCST
$LN96@ucnv_MBCST:
; Line 2501
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 2502
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 2503
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 2504
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _targetLimit$[ebp], ecx
; Line 2505
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 2507
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN93@ucnv_MBCST
; Line 2508
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _stateTable$[ebp], edx
; Line 2509
	jmp	SHORT $LN92@ucnv_MBCST
$LN93@ucnv_MBCST:
; Line 2510
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _stateTable$[ebp], edx
$LN92@ucnv_MBCST:
; Line 2512
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _unicodeCodeUnits$[ebp], edx
; Line 2515
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _offset$[ebp], ecx
; Line 2516
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR [eax+36]
	mov	BYTE PTR _byteIndex$[ebp], cl
; Line 2517
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 37					; 00000025H
	mov	DWORD PTR _bytes$[ebp], eax
; Line 2524
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR [eax+48]
	mov	BYTE PTR _state$[ebp], cl
	movzx	edx, BYTE PTR _state$[ebp]
	test	edx, edx
	jne	SHORT $LN91@ucnv_MBCST
; Line 2525
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	dl, BYTE PTR [ecx+29]
	mov	BYTE PTR _state$[ebp], dl
$LN91@ucnv_MBCST:
; Line 2529
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	neg	eax
	sbb	eax, eax
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2530
	mov	DWORD PTR _nextSourceIndex$[ebp], 0
$LN90@ucnv_MBCST:
; Line 2533
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN89@ucnv_MBCST
; Line 2542
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jb	SHORT $LN88@ucnv_MBCST
; Line 2544
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 2545
	jmp	$LN89@ucnv_MBCST
$LN88@ucnv_MBCST:
; Line 2548
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	test	eax, eax
	jne	$LN87@ucnv_MBCST
; Line 2550
	cmp	DWORD PTR _offsets$[ebp], 0
	jne	$LN74@ucnv_MBCST
$LN85@ucnv_MBCST:
; Line 2552
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
; Line 2553
	cmp	DWORD PTR _entry$[ebp], 0
	jl	$LN82@ucnv_MBCST
; Line 2554
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _state$[ebp], al
; Line 2555
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _offset$[ebp], eax
; Line 2557
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 2562
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN81@ucnv_MBCST
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
	cmp	DWORD PTR _entry$[ebp], 0
	jge	SHORT $LN81@ucnv_MBCST
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 4
	jne	SHORT $LN81@ucnv_MBCST
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$[ebp], dx
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65534				; 0000fffeH
	jge	SHORT $LN81@ucnv_MBCST
; Line 2563
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 2564
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2565
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 2566
	mov	DWORD PTR _offset$[ebp], 0
; Line 2567
	jmp	SHORT $LN80@ucnv_MBCST
$LN81@ucnv_MBCST:
; Line 2569
	mov	eax, DWORD PTR _bytes$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [ecx-1]
	mov	BYTE PTR [eax], dl
; Line 2570
	mov	BYTE PTR _byteIndex$[ebp], 1
; Line 2571
	jmp	SHORT $LN83@ucnv_MBCST
$LN80@ucnv_MBCST:
; Line 2573
	jmp	SHORT $LN84@ucnv_MBCST
$LN82@ucnv_MBCST:
; Line 2574
	cmp	DWORD PTR _entry$[ebp], -2146435072	; 80100000H
	jge	SHORT $LN78@ucnv_MBCST
; Line 2576
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 2577
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2578
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 2579
	jmp	SHORT $LN84@ucnv_MBCST
$LN78@ucnv_MBCST:
; Line 2581
	jmp	SHORT $LN83@ucnv_MBCST
$LN84@ucnv_MBCST:
; Line 2584
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN83@ucnv_MBCST
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jb	$LN85@ucnv_MBCST
$LN83@ucnv_MBCST:
; Line 2585
	jmp	$LN75@ucnv_MBCST
$LN74@ucnv_MBCST:
; Line 2587
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
; Line 2588
	cmp	DWORD PTR _entry$[ebp], 0
	jl	$LN71@ucnv_MBCST
; Line 2589
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _state$[ebp], al
; Line 2590
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _offset$[ebp], eax
; Line 2592
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 2597
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN70@ucnv_MBCST
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
	cmp	DWORD PTR _entry$[ebp], 0
	jge	$LN70@ucnv_MBCST
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 4
	jne	$LN70@ucnv_MBCST
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$[ebp], dx
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65534				; 0000fffeH
	jge	SHORT $LN70@ucnv_MBCST
; Line 2598
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 2599
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2600
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN69@ucnv_MBCST
; Line 2601
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
; Line 2602
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 2
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
	mov	ecx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], ecx
$LN69@ucnv_MBCST:
; Line 2604
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 2605
	mov	DWORD PTR _offset$[ebp], 0
; Line 2606
	jmp	SHORT $LN68@ucnv_MBCST
$LN70@ucnv_MBCST:
; Line 2608
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 2609
	mov	eax, DWORD PTR _bytes$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [ecx-1]
	mov	BYTE PTR [eax], dl
; Line 2610
	mov	BYTE PTR _byteIndex$[ebp], 1
; Line 2611
	jmp	$LN75@ucnv_MBCST
$LN68@ucnv_MBCST:
; Line 2613
	jmp	SHORT $LN73@ucnv_MBCST
$LN71@ucnv_MBCST:
; Line 2614
	cmp	DWORD PTR _entry$[ebp], -2146435072	; 80100000H
	jge	SHORT $LN66@ucnv_MBCST
; Line 2616
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 2617
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2618
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN65@ucnv_MBCST
; Line 2619
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
; Line 2620
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
	mov	ecx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], ecx
$LN65@ucnv_MBCST:
; Line 2622
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 2623
	jmp	SHORT $LN73@ucnv_MBCST
$LN66@ucnv_MBCST:
; Line 2625
	jmp	SHORT $LN75@ucnv_MBCST
$LN73@ucnv_MBCST:
; Line 2628
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN75@ucnv_MBCST
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jb	$LN74@ucnv_MBCST
$LN75@ucnv_MBCST:
; Line 2635
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jb	SHORT $LN62@ucnv_MBCST
; Line 2636
	jmp	$LN89@ucnv_MBCST
$LN62@ucnv_MBCST:
; Line 2638
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jb	SHORT $LN61@ucnv_MBCST
; Line 2640
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 2641
	jmp	$LN89@ucnv_MBCST
$LN61@ucnv_MBCST:
; Line 2644
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 2645
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax], dl
	mov	al, BYTE PTR _byteIndex$[ebp]
	add	al, 1
	mov	BYTE PTR _byteIndex$[ebp], al
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 2646
	jmp	SHORT $LN60@ucnv_MBCST
$LN87@ucnv_MBCST:
; Line 2647
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 2648
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax], dl
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], ecx
	mov	dl, BYTE PTR _byteIndex$[ebp]
	add	dl, 1
	mov	BYTE PTR _byteIndex$[ebp], dl
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
$LN60@ucnv_MBCST:
; Line 2651
	cmp	DWORD PTR _entry$[ebp], 0
	jl	SHORT $LN59@ucnv_MBCST
; Line 2652
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _state$[ebp], al
; Line 2653
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 16777215				; 00ffffffH
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 2654
	jmp	$LN90@ucnv_MBCST
$LN59@ucnv_MBCST:
; Line 2658
	movzx	eax, BYTE PTR _state$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 2661
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 2667
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$[ebp], al
; Line 2668
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 4
	jne	$LN58@ucnv_MBCST
; Line 2669
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 2670
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$[ebp], dx
; Line 2671
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65534				; 0000fffeH
	jge	SHORT $LN57@ucnv_MBCST
; Line 2673
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2674
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN56@ucnv_MBCST
; Line 2675
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN56@ucnv_MBCST:
; Line 2677
	mov	BYTE PTR _byteIndex$[ebp], 0
	jmp	SHORT $LN55@ucnv_MBCST
$LN57@ucnv_MBCST:
; Line 2678
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65534				; 0000fffeH
	jne	SHORT $LN54@ucnv_MBCST
; Line 2679
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN53@ucnv_MBCST
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 28					; 0000001cH
	push	edx
	call	?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z ; ucnv_MBCSGetFallback
	add	esp, 8
	mov	DWORD PTR _entry$[ebp], eax
	cmp	DWORD PTR _entry$[ebp], 65534		; 0000fffeH
	je	SHORT $LN53@ucnv_MBCST
; Line 2681
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2682
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN52@ucnv_MBCST
; Line 2683
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN52@ucnv_MBCST:
; Line 2685
	mov	BYTE PTR _byteIndex$[ebp], 0
$LN53@ucnv_MBCST:
; Line 2687
	jmp	SHORT $LN55@ucnv_MBCST
$LN54@ucnv_MBCST:
; Line 2689
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
$LN55@ucnv_MBCST:
; Line 2690
	jmp	$LN50@ucnv_MBCST
$LN58@ucnv_MBCST:
; Line 2691
	movzx	eax, BYTE PTR _action$[ebp]
	test	eax, eax
	jne	SHORT $LN49@ucnv_MBCST
; Line 2693
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2694
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN48@ucnv_MBCST
; Line 2695
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN48@ucnv_MBCST:
; Line 2697
	mov	BYTE PTR _byteIndex$[ebp], 0
	jmp	$LN50@ucnv_MBCST
$LN49@ucnv_MBCST:
; Line 2698
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 5
	jne	$LN46@ucnv_MBCST
; Line 2699
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 2700
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$[ebp], dx
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 1
	mov	DWORD PTR _offset$[ebp], eax
; Line 2701
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN45@ucnv_MBCST
; Line 2703
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2704
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN44@ucnv_MBCST
; Line 2705
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN44@ucnv_MBCST:
; Line 2707
	mov	BYTE PTR _byteIndex$[ebp], 0
	jmp	$LN43@ucnv_MBCST
$LN45@ucnv_MBCST:
; Line 2708
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN102@ucnv_MBCST
	movzx	ecx, WORD PTR _c$[ebp]
	xor	edx, edx
	cmp	ecx, 57343				; 0000dfffH
	setle	dl
	mov	DWORD PTR tv331[ebp], edx
	jmp	SHORT $LN103@ucnv_MBCST
$LN102@ucnv_MBCST:
	movzx	eax, WORD PTR _c$[ebp]
	xor	ecx, ecx
	cmp	eax, 56319				; 0000dbffH
	setle	cl
	mov	DWORD PTR tv331[ebp], ecx
$LN103@ucnv_MBCST:
	cmp	DWORD PTR tv331[ebp], 0
	je	$LN42@ucnv_MBCST
; Line 2710
	movzx	eax, WORD PTR _c$[ebp]
	and	eax, 56319				; 0000dbffH
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2711
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN41@ucnv_MBCST
; Line 2712
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN41@ucnv_MBCST:
; Line 2714
	mov	BYTE PTR _byteIndex$[ebp], 0
; Line 2715
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN40@ucnv_MBCST
; Line 2716
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	cx, WORD PTR [edx+ecx*2]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2717
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN39@ucnv_MBCST
; Line 2718
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN39@ucnv_MBCST:
; Line 2720
	jmp	SHORT $LN38@ucnv_MBCST
$LN40@ucnv_MBCST:
; Line 2722
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	cx, WORD PTR [edx+ecx*2]
	mov	WORD PTR [eax+116], cx
; Line 2723
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+65], 1
; Line 2724
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 2726
	mov	DWORD PTR _offset$[ebp], 0
; Line 2727
	jmp	$LN89@ucnv_MBCST
$LN38@ucnv_MBCST:
; Line 2728
	jmp	$LN43@ucnv_MBCST
$LN42@ucnv_MBCST:
; Line 2729
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN104@ucnv_MBCST
	movzx	ecx, WORD PTR _c$[ebp]
	and	ecx, 65534				; 0000fffeH
	xor	edx, edx
	cmp	ecx, 57344				; 0000e000H
	sete	dl
	mov	DWORD PTR tv358[ebp], edx
	jmp	SHORT $LN105@ucnv_MBCST
$LN104@ucnv_MBCST:
	movzx	eax, WORD PTR _c$[ebp]
	xor	ecx, ecx
	cmp	eax, 57344				; 0000e000H
	sete	cl
	mov	DWORD PTR tv358[ebp], ecx
$LN105@ucnv_MBCST:
	cmp	DWORD PTR tv358[ebp], 0
	je	SHORT $LN36@ucnv_MBCST
; Line 2731
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _unicodeCodeUnits$[ebp]
	mov	cx, WORD PTR [edx+ecx*2]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2732
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN35@ucnv_MBCST
; Line 2733
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN35@ucnv_MBCST:
; Line 2735
	mov	BYTE PTR _byteIndex$[ebp], 0
	jmp	SHORT $LN43@ucnv_MBCST
$LN36@ucnv_MBCST:
; Line 2736
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $LN43@ucnv_MBCST
; Line 2738
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
$LN43@ucnv_MBCST:
; Line 2740
	jmp	$LN50@ucnv_MBCST
$LN46@ucnv_MBCST:
; Line 2742
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 1
	je	SHORT $LN30@ucnv_MBCST
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 3
	jne	$LN31@ucnv_MBCST
	mov	eax, 1
	test	eax, eax
	je	$LN31@ucnv_MBCST
$LN30@ucnv_MBCST:
; Line 2743
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1048575				; 000fffffH
	mov	DWORD PTR _entry$[ebp], eax
; Line 2745
	mov	eax, DWORD PTR _entry$[ebp]
	sar	eax, 10					; 0000000aH
	movzx	ecx, ax
	or	ecx, 55296				; 0000d800H
	mov	edx, DWORD PTR _target$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, 2
	mov	DWORD PTR _target$[ebp], eax
; Line 2746
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN29@ucnv_MBCST
; Line 2747
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN29@ucnv_MBCST:
; Line 2749
	mov	BYTE PTR _byteIndex$[ebp], 0
; Line 2750
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1023				; 000003ffH
	movzx	ecx, ax
	or	ecx, 56320				; 0000dc00H
	mov	WORD PTR _c$[ebp], cx
; Line 2751
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN28@ucnv_MBCST
; Line 2752
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2753
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN27@ucnv_MBCST
; Line 2754
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN27@ucnv_MBCST:
; Line 2756
	jmp	SHORT $LN26@ucnv_MBCST
$LN28@ucnv_MBCST:
; Line 2758
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax+116], cx
; Line 2759
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+65], 1
; Line 2760
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 2762
	mov	DWORD PTR _offset$[ebp], 0
; Line 2763
	jmp	$LN89@ucnv_MBCST
$LN26@ucnv_MBCST:
; Line 2764
	jmp	$LN50@ucnv_MBCST
$LN31@ucnv_MBCST:
; Line 2765
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 8
	jne	SHORT $LN24@ucnv_MBCST
; Line 2773
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+29]
	test	edx, edx
	jne	SHORT $LN23@ucnv_MBCST
; Line 2774
	mov	BYTE PTR _byteIndex$[ebp], 0
; Line 2775
	jmp	SHORT $LN22@ucnv_MBCST
$LN23@ucnv_MBCST:
; Line 2777
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR [eax+48]
	mov	BYTE PTR _state$[ebp], cl
; Line 2780
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
$LN22@ucnv_MBCST:
; Line 2781
	jmp	SHORT $LN50@ucnv_MBCST
$LN24@ucnv_MBCST:
; Line 2782
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 2
	jne	SHORT $LN20@ucnv_MBCST
; Line 2783
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN19@ucnv_MBCST
; Line 2785
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2786
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN18@ucnv_MBCST
; Line 2787
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN18@ucnv_MBCST:
; Line 2789
	mov	BYTE PTR _byteIndex$[ebp], 0
$LN19@ucnv_MBCST:
; Line 2790
	jmp	SHORT $LN50@ucnv_MBCST
$LN20@ucnv_MBCST:
; Line 2791
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 6
	jne	SHORT $LN16@ucnv_MBCST
	jmp	SHORT $LN50@ucnv_MBCST
$LN16@ucnv_MBCST:
; Line 2793
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 7
	jne	SHORT $LN14@ucnv_MBCST
; Line 2795
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 2796
	jmp	SHORT $LN50@ucnv_MBCST
$LN14@ucnv_MBCST:
; Line 2798
	mov	BYTE PTR _byteIndex$[ebp], 0
$LN50@ucnv_MBCST:
; Line 2802
	mov	DWORD PTR _offset$[ebp], 0
; Line 2804
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	test	eax, eax
	jne	SHORT $LN12@ucnv_MBCST
; Line 2805
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
	jmp	$LN11@ucnv_MBCST
$LN12@ucnv_MBCST:
; Line 2806
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN10@ucnv_MBCST
; Line 2808
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	cmp	eax, 1
	jle	$LN9@ucnv_MBCST
; Line 2815
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+29]
	test	edx, edx
	setne	al
	mov	BYTE PTR _isDBCSOnly$71399[ebp], al
; Line 2817
	mov	BYTE PTR _i$71401[ebp], 1
; Line 2818
	jmp	SHORT $LN8@ucnv_MBCST
$LN7@ucnv_MBCST:
; Line 2819
	mov	al, BYTE PTR _i$71401[ebp]
	add	al, 1
	mov	BYTE PTR _i$71401[ebp], al
$LN8@ucnv_MBCST:
	movsx	eax, BYTE PTR _i$71401[ebp]
	movsx	ecx, BYTE PTR _byteIndex$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN6@ucnv_MBCST
	movsx	eax, BYTE PTR _i$71401[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	push	edx
	movzx	eax, BYTE PTR _isDBCSOnly$71399[ebp]
	push	eax
	movzx	ecx, BYTE PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stateTable$[ebp]
	push	edx
	call	?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z	; isSingleOrLead
	add	esp, 16					; 00000010H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN6@ucnv_MBCST
	jmp	SHORT $LN7@ucnv_MBCST
$LN6@ucnv_MBCST:
; Line 2820
	movsx	eax, BYTE PTR _i$71401[ebp]
	movsx	ecx, BYTE PTR _byteIndex$[ebp]
	cmp	eax, ecx
	jge	$LN9@ucnv_MBCST
; Line 2822
	movsx	eax, BYTE PTR _byteIndex$[ebp]
	movsx	ecx, BYTE PTR _i$71401[ebp]
	sub	eax, ecx
	mov	BYTE PTR _backOutDistance$71406[ebp], al
; Line 2823
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _bytesFromThisBuffer$71407[ebp], ecx
; Line 2824
	mov	al, BYTE PTR _i$71401[ebp]
	mov	BYTE PTR _byteIndex$[ebp], al
; Line 2825
	movsx	eax, BYTE PTR _backOutDistance$71406[ebp]
	cmp	eax, DWORD PTR _bytesFromThisBuffer$71407[ebp]
	jg	SHORT $LN4@ucnv_MBCST
; Line 2826
	movsx	eax, BYTE PTR _backOutDistance$71406[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _source$[ebp], ecx
; Line 2827
	jmp	SHORT $LN9@ucnv_MBCST
$LN4@ucnv_MBCST:
; Line 2829
	movsx	eax, BYTE PTR _backOutDistance$71406[ebp]
	mov	ecx, DWORD PTR _bytesFromThisBuffer$71407[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [edx+254], cl
; Line 2831
	push	1
	movsx	eax, BYTE PTR _i$71401[ebp]
	add	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _cnv$[ebp]
	movsx	edx, BYTE PTR [ecx+254]
	neg	edx
	push	edx
	movsx	eax, BYTE PTR _i$71401[ebp]
	add	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	add	ecx, 222				; 000000deH
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2832
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
$LN9@ucnv_MBCST:
; Line 2836
	jmp	$LN89@ucnv_MBCST
; Line 2837
	jmp	$LN11@ucnv_MBCST
$LN10@ucnv_MBCST:
; Line 2839
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2845
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _targetLimit$[ebp]
	push	edx
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	movzx	eax, BYTE PTR _byteIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z ; _extToU
	add	esp, 44					; 0000002cH
	mov	BYTE PTR _byteIndex$[ebp], al
; Line 2846
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _nextSourceIndex$[ebp], ecx
	mov	edx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], edx
; Line 2848
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@ucnv_MBCST
; Line 2850
	jmp	SHORT $LN89@ucnv_MBCST
$LN11@ucnv_MBCST:
; Line 2853
	jmp	$LN90@ucnv_MBCST
$LN89@ucnv_MBCST:
; Line 2856
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 2857
	movzx	eax, BYTE PTR _state$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 2858
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _byteIndex$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 2861
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2862
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 2863
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN100@ucnv_MBCST:
; Line 2864
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN111@ucnv_MBCST
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN111@ucnv_MBCST:
	DD	3
	DD	$LN110@ucnv_MBCST
$LN110@ucnv_MBCST:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN107@ucnv_MBCST
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN108@ucnv_MBCST
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN109@ucnv_MBCST
$LN109@ucnv_MBCST:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN108@ucnv_MBCST:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN107@ucnv_MBCST:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_ucnv_MBCSToUnicodeWithOffsets_56 ENDP
_TEXT	ENDS
EXTRN	_ucnv_toUWriteCodePoint_56:PROC
EXTRN	_ucnv_extInitialMatchToU_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$70685 = -44						; size = 4
_linear$70684 = -32					; size = 4
_range$70683 = -20					; size = 4
_cx$ = -8						; size = 4
_cnv$ = 8						; size = 4
_sharedData$ = 12					; size = 4
_length$ = 16						; size = 1
_source$ = 20						; size = 4
_sourceLimit$ = 24					; size = 4
_target$ = 28						; size = 4
_targetLimit$ = 32					; size = 4
_offsets$ = 36						; size = 4
_sourceIndex$ = 40					; size = 4
_flush$ = 44						; size = 1
_pErrorCode$ = 48					; size = 4
?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z PROC ; _extToU, COMDAT
; Line 1171
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1182
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	DWORD PTR _cx$[ebp], ecx
	cmp	DWORD PTR _cx$[ebp], 0
	je	SHORT $LN6@extToU
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _flush$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _offsets$[ebp]
	push	eax
	mov	ecx, DWORD PTR _targetLimit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	movsx	edx, BYTE PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _cx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	_ucnv_extInitialMatchToU_56
	add	esp, 44					; 0000002cH
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@extToU
; Line 1183
	xor	al, al
	jmp	$LN7@extToU
$LN6@extToU:
; Line 1187
	movsx	eax, BYTE PTR _length$[ebp]
	cmp	eax, 4
	jne	$LN5@extToU
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 32768				; 00008000H
	je	$LN5@extToU
; Line 1192
	mov	eax, DWORD PTR _cnv$[ebp]
	movzx	ecx, BYTE PTR [eax+37]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _cnv$[ebp]
	movzx	eax, BYTE PTR [edx+38]
	add	ecx, eax
	imul	ecx, 126				; 0000007eH
	mov	edx, DWORD PTR _cnv$[ebp]
	movzx	eax, BYTE PTR [edx+39]
	add	ecx, eax
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _cnv$[ebp]
	movzx	eax, BYTE PTR [edx+40]
	add	ecx, eax
	mov	DWORD PTR _linear$70684[ebp], ecx
; Line 1193
	mov	DWORD PTR _range$70683[ebp], OFFSET _gb18030Ranges
; Line 1194
	mov	DWORD PTR _i$70685[ebp], 0
	jmp	SHORT $LN4@extToU
$LN3@extToU:
	mov	eax, DWORD PTR _range$70683[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _range$70683[ebp], eax
	mov	ecx, DWORD PTR _i$70685[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$70685[ebp], ecx
$LN4@extToU:
	cmp	DWORD PTR _i$70685[ebp], 14		; 0000000eH
	jge	SHORT $LN5@extToU
; Line 1195
	mov	eax, DWORD PTR _range$70683[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _linear$70684[ebp]
	ja	SHORT $LN1@extToU
	mov	eax, DWORD PTR _range$70683[ebp]
	mov	ecx, DWORD PTR _linear$70684[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	ja	SHORT $LN1@extToU
; Line 1197
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1200
	mov	eax, DWORD PTR _range$70683[ebp]
	mov	ecx, DWORD PTR _linear$70684[ebp]
	sub	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _range$70683[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR _linear$70684[ebp], ecx
; Line 1203
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	push	edx
	mov	eax, DWORD PTR _targetLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _linear$70684[ebp]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	_ucnv_toUWriteCodePoint_56
	add	esp, 28					; 0000001cH
; Line 1205
	xor	al, al
	jmp	SHORT $LN7@extToU
$LN1@extToU:
; Line 1207
	jmp	SHORT $LN3@extToU
$LN5@extToU:
; Line 1211
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 10			; 0000000aH
; Line 1212
	mov	al, BYTE PTR _length$[ebp]
$LN7@extToU:
; Line 1213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z ENDP ; _extToU
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z
_TEXT	SEGMENT
_limit$ = -44						; size = 4
_start$ = -32						; size = 4
_i$ = -20						; size = 4
_toUFallbacks$ = -8					; size = 4
_mbcsTable$ = 8						; size = 4
_offset$ = 12						; size = 4
?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z PROC ; ucnv_MBCSGetFallback, COMDAT
; Line 1993
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1997
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _limit$[ebp], ecx
; Line 1998
	cmp	DWORD PTR _limit$[ebp], 0
	jbe	SHORT $LN6@ucnv_MBCSG@4
; Line 2000
	mov	eax, DWORD PTR _mbcsTable$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _toUFallbacks$[ebp], ecx
; Line 2001
	mov	DWORD PTR _start$[ebp], 0
$LN5@ucnv_MBCSG@4:
; Line 2002
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _start$[ebp], eax
	jae	SHORT $LN4@ucnv_MBCSG@4
; Line 2003
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _limit$[ebp]
	shr	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 2004
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _toUFallbacks$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8]
	jae	SHORT $LN3@ucnv_MBCSG@4
; Line 2005
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
; Line 2006
	jmp	SHORT $LN2@ucnv_MBCSG@4
$LN3@ucnv_MBCSG@4:
; Line 2007
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN2@ucnv_MBCSG@4:
; Line 2009
	jmp	SHORT $LN5@ucnv_MBCSG@4
$LN4@ucnv_MBCSG@4:
; Line 2012
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _toUFallbacks$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8]
	jne	SHORT $LN6@ucnv_MBCSG@4
; Line 2013
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _toUFallbacks$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	jmp	SHORT $LN7@ucnv_MBCSG@4
$LN6@ucnv_MBCSG@4:
; Line 2017
	mov	eax, 65534				; 0000fffeH
$LN7@ucnv_MBCSG@4:
; Line 2018
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z ENDP ; ucnv_MBCSGetFallback
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSSingleToUnicodeWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_action$ = -125						; size = 1
_c$ = -116						; size = 2
_entry$ = -104						; size = 4
_sourceIndex$ = -92					; size = 4
_stateTable$ = -80					; size = 4
_offsets$ = -68						; size = 4
_targetLimit$ = -56					; size = 4
_target$ = -44						; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSSingleToUnicodeWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSSingleToUnicodeWithOffsets, COMDAT
; Line 2023
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2039
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 2040
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 2041
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 2042
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 2043
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _targetLimit$[ebp], ecx
; Line 2044
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 2046
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN25@ucnv_MBCSS
; Line 2047
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _stateTable$[ebp], edx
; Line 2048
	jmp	SHORT $LN24@ucnv_MBCSS
$LN25@ucnv_MBCSS:
; Line 2049
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _stateTable$[ebp], edx
$LN24@ucnv_MBCSS:
; Line 2053
	mov	DWORD PTR _sourceIndex$[ebp], 0
$LN23@ucnv_MBCSS:
; Line 2056
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN22@ucnv_MBCSS
; Line 2065
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jb	SHORT $LN21@ucnv_MBCSS
; Line 2067
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 2068
	jmp	$LN22@ucnv_MBCSS
$LN21@ucnv_MBCSS:
; Line 2071
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 2075
	cmp	DWORD PTR _entry$[ebp], -2146435072	; 80100000H
	jge	SHORT $LN20@ucnv_MBCSS
; Line 2077
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2078
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN19@ucnv_MBCSS
; Line 2079
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN19@ucnv_MBCSS:
; Line 2083
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2084
	jmp	SHORT $LN23@ucnv_MBCSS
$LN20@ucnv_MBCSS:
; Line 2091
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$[ebp], al
; Line 2094
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 1
	je	SHORT $LN17@ucnv_MBCSS
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 3
	jne	$LN18@ucnv_MBCSS
	mov	eax, 1
	test	eax, eax
	je	$LN18@ucnv_MBCSS
$LN17@ucnv_MBCSS:
; Line 2095
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1048575				; 000fffffH
	mov	DWORD PTR _entry$[ebp], eax
; Line 2097
	mov	eax, DWORD PTR _entry$[ebp]
	sar	eax, 10					; 0000000aH
	movzx	ecx, ax
	or	ecx, 55296				; 0000d800H
	mov	edx, DWORD PTR _target$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, 2
	mov	DWORD PTR _target$[ebp], eax
; Line 2098
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN16@ucnv_MBCSS
; Line 2099
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN16@ucnv_MBCSS:
; Line 2101
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1023				; 000003ffH
	movzx	ecx, ax
	or	ecx, 56320				; 0000dc00H
	mov	WORD PTR _c$[ebp], cx
; Line 2102
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN15@ucnv_MBCSS
; Line 2103
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2104
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN14@ucnv_MBCSS
; Line 2105
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN14@ucnv_MBCSS:
; Line 2107
	jmp	SHORT $LN13@ucnv_MBCSS
$LN15@ucnv_MBCSS:
; Line 2109
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax+116], cx
; Line 2110
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+65], 1
; Line 2111
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 2112
	jmp	$LN22@ucnv_MBCSS
$LN13@ucnv_MBCSS:
; Line 2115
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2116
	jmp	$LN23@ucnv_MBCSS
	jmp	SHORT $LN12@ucnv_MBCSS
$LN18@ucnv_MBCSS:
; Line 2117
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 2
	jne	SHORT $LN11@ucnv_MBCSS
; Line 2118
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@ucnv_MBCSS
; Line 2120
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2121
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN9@ucnv_MBCSS
; Line 2122
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN9@ucnv_MBCSS:
; Line 2125
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2126
	jmp	$LN23@ucnv_MBCSS
$LN10@ucnv_MBCSS:
; Line 2127
	jmp	SHORT $LN12@ucnv_MBCSS
$LN11@ucnv_MBCSS:
; Line 2128
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 6
	jne	SHORT $LN7@ucnv_MBCSS
	jmp	SHORT $LN12@ucnv_MBCSS
$LN7@ucnv_MBCSS:
; Line 2130
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 7
	jne	SHORT $LN5@ucnv_MBCSS
; Line 2132
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 2133
	jmp	SHORT $LN12@ucnv_MBCSS
$LN5@ucnv_MBCSS:
; Line 2135
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2136
	jmp	$LN23@ucnv_MBCSS
$LN12@ucnv_MBCSS:
; Line 2139
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucnv_MBCSS
; Line 2141
	jmp	$LN22@ucnv_MBCSS
; Line 2142
	jmp	SHORT $LN2@ucnv_MBCSS
$LN3@ucnv_MBCSS:
; Line 2144
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2145
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [ecx-1]
	mov	BYTE PTR [eax+37], dl
; Line 2151
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _targetLimit$[ebp]
	push	edx
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	push	edx
	call	?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z ; _extToU
	add	esp, 44					; 0000002cH
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [ecx+36], al
; Line 2152
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _sourceIndex$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2154
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_MBCSS
; Line 2156
	jmp	SHORT $LN22@ucnv_MBCSS
$LN2@ucnv_MBCSS:
; Line 2159
	jmp	$LN23@ucnv_MBCSS
$LN22@ucnv_MBCSS:
; Line 2162
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2163
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 2164
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2165
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@ucnv_MBCSS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@ucnv_MBCSS:
	DD	3
	DD	$LN35@ucnv_MBCSS
$LN35@ucnv_MBCSS:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN32@ucnv_MBCSS
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN33@ucnv_MBCSS
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN34@ucnv_MBCSS
$LN34@ucnv_MBCSS:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN33@ucnv_MBCSS:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN32@ucnv_MBCSS:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?ucnv_MBCSSingleToUnicodeWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSSingleToUnicodeWithOffsets
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSSingleToBMPWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_count$71196 = -200					; size = 4
_count$71182 = -188					; size = 4
_oredEntries$71121 = -176				; size = 4
_loops$71120 = -164					; size = 4
_count$71119 = -152					; size = 4
_action$ = -137						; size = 1
_entry$ = -128						; size = 4
_sourceIndex$ = -116					; size = 4
_stateTable$ = -104					; size = 4
_offsets$ = -92						; size = 4
_length$ = -80						; size = 4
_targetCapacity$ = -68					; size = 4
_target$ = -56						; size = 4
_lastSource$ = -44					; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSSingleToBMPWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSSingleToBMPWithOffsets, COMDAT
; Line 2175
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2190
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 2191
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 2192
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 2193
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 2194
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	sar	edx, 1
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 2195
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 2197
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN32@ucnv_MBCSS@2
; Line 2198
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _stateTable$[ebp], edx
; Line 2199
	jmp	SHORT $LN31@ucnv_MBCSS@2
$LN32@ucnv_MBCSS@2:
; Line 2200
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _stateTable$[ebp], edx
$LN31@ucnv_MBCSS@2:
; Line 2204
	mov	DWORD PTR _sourceIndex$[ebp], 0
; Line 2205
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
; Line 2211
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 2212
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _targetCapacity$[ebp]
	jge	SHORT $unrolled$71117
; Line 2213
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], eax
$unrolled$71117:
; Line 2220
	cmp	DWORD PTR _targetCapacity$[ebp], 16	; 00000010H
	jl	$LN21@ucnv_MBCSS@2
; Line 2223
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sar	eax, 4
	mov	DWORD PTR _count$71119[ebp], eax
	mov	ecx, DWORD PTR _count$71119[ebp]
	mov	DWORD PTR _loops$71120[ebp], ecx
$LN28@ucnv_MBCSS@2:
; Line 2225
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2226
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2227
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2228
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2229
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2230
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2231
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2232
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2233
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2234
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2235
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2236
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2237
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2238
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2239
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2240
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2241
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2242
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2243
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2244
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2245
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2246
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2247
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2248
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2249
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2250
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2251
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2252
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2253
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2254
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2255
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _oredEntries$71121[ebp]
	or	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR _oredEntries$71121[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 2256
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2259
	cmp	DWORD PTR _oredEntries$71121[ebp], -2146435072 ; 80100000H
	jl	SHORT $LN27@ucnv_MBCSS@2
; Line 2261
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, 16					; 00000010H
	mov	DWORD PTR _source$[ebp], eax
; Line 2262
	mov	eax, DWORD PTR _target$[ebp]
	sub	eax, 32					; 00000020H
	mov	DWORD PTR _target$[ebp], eax
; Line 2263
	jmp	SHORT $LN26@ucnv_MBCSS@2
$LN27@ucnv_MBCSS@2:
; Line 2265
	mov	eax, DWORD PTR _count$71119[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71119[ebp], eax
	cmp	DWORD PTR _count$71119[ebp], 0
	jg	$LN28@ucnv_MBCSS@2
$LN26@ucnv_MBCSS@2:
; Line 2266
	mov	eax, DWORD PTR _loops$71120[ebp]
	sub	eax, DWORD PTR _count$71119[ebp]
	mov	DWORD PTR _count$71119[ebp], eax
; Line 2267
	mov	eax, DWORD PTR _count$71119[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _targetCapacity$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 2269
	cmp	DWORD PTR _offsets$[ebp], 0
	je	$LN21@ucnv_MBCSS@2
; Line 2270
	mov	eax, DWORD PTR _count$71119[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _lastSource$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
$LN23@ucnv_MBCSS@2:
; Line 2271
	cmp	DWORD PTR _count$71119[ebp], 0
	jle	$LN21@ucnv_MBCSS@2
; Line 2272
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2273
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2274
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2275
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2276
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2277
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2278
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2279
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2280
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2281
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2282
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2283
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2284
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2285
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2286
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2287
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2288
	mov	eax, DWORD PTR _count$71119[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71119[ebp], eax
; Line 2289
	jmp	$LN23@ucnv_MBCSS@2
$LN21@ucnv_MBCSS@2:
; Line 2295
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN20@ucnv_MBCSS@2
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN20@ucnv_MBCSS@2
; Line 2296
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 2300
	cmp	DWORD PTR _entry$[ebp], -2146435072	; 80100000H
	jge	SHORT $LN19@ucnv_MBCSS@2
; Line 2302
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2303
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 2304
	jmp	SHORT $LN21@ucnv_MBCSS@2
$LN19@ucnv_MBCSS@2:
; Line 2311
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$[ebp], al
; Line 2312
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 2
	jne	SHORT $LN18@ucnv_MBCSS@2
; Line 2313
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN17@ucnv_MBCSS@2
; Line 2315
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _entry$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
; Line 2316
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 2317
	jmp	$LN21@ucnv_MBCSS@2
$LN17@ucnv_MBCSS@2:
; Line 2318
	jmp	SHORT $LN16@ucnv_MBCSS@2
$LN18@ucnv_MBCSS@2:
; Line 2319
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 6
	jne	SHORT $LN15@ucnv_MBCSS@2
	jmp	SHORT $LN16@ucnv_MBCSS@2
$LN15@ucnv_MBCSS@2:
; Line 2321
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 7
	jne	SHORT $LN13@ucnv_MBCSS@2
; Line 2323
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 2324
	jmp	SHORT $LN16@ucnv_MBCSS@2
$LN13@ucnv_MBCSS@2:
; Line 2326
	jmp	$LN21@ucnv_MBCSS@2
$LN16@ucnv_MBCSS@2:
; Line 2330
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN11@ucnv_MBCSS@2
; Line 2331
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	mov	DWORD PTR _count$71182[ebp], eax
$LN10@ucnv_MBCSS@2:
; Line 2334
	mov	eax, DWORD PTR _count$71182[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71182[ebp], eax
	cmp	DWORD PTR _count$71182[ebp], 0
	jle	SHORT $LN11@ucnv_MBCSS@2
; Line 2335
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2336
	jmp	SHORT $LN10@ucnv_MBCSS@2
$LN11@ucnv_MBCSS@2:
; Line 2340
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@ucnv_MBCSS@2
; Line 2342
	jmp	$LN20@ucnv_MBCSS@2
; Line 2343
	jmp	$LN7@ucnv_MBCSS@2
$LN8@ucnv_MBCSS@2:
; Line 2345
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
; Line 2346
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [ecx-1]
	mov	BYTE PTR [eax+37], dl
; Line 2352
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceLimit$[ebp]
	push	edx
	lea	eax, DWORD PTR _source$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z ; _extToU
	add	esp, 44					; 0000002cH
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [ecx+36], al
; Line 2353
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _sourceIndex$[ebp], edx
; Line 2355
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@ucnv_MBCSS@2
; Line 2357
	jmp	SHORT $LN20@ucnv_MBCSS@2
$LN6@ucnv_MBCSS@2:
; Line 2361
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	sar	ecx, 1
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 2362
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 2363
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _targetCapacity$[ebp]
	jge	SHORT $LN7@ucnv_MBCSS@2
; Line 2364
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], eax
$LN7@ucnv_MBCSS@2:
; Line 2370
	jmp	$unrolled$71117
; Line 2372
	jmp	$LN21@ucnv_MBCSS@2
$LN20@ucnv_MBCSS@2:
; Line 2374
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ucnv_MBCSS@2
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN4@ucnv_MBCSS@2
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jb	SHORT $LN4@ucnv_MBCSS@2
; Line 2376
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN4@ucnv_MBCSS@2:
; Line 2380
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN3@ucnv_MBCSS@2
; Line 2381
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	mov	DWORD PTR _count$71196[ebp], eax
$LN2@ucnv_MBCSS@2:
; Line 2382
	cmp	DWORD PTR _count$71196[ebp], 0
	jbe	SHORT $LN3@ucnv_MBCSS@2
; Line 2383
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 2384
	mov	eax, DWORD PTR _count$71196[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71196[ebp], eax
; Line 2385
	jmp	SHORT $LN2@ucnv_MBCSS@2
$LN3@ucnv_MBCSS@2:
; Line 2389
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2390
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 2391
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2392
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@ucnv_MBCSS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN41@ucnv_MBCSS@2:
	DD	3
	DD	$LN40@ucnv_MBCSS@2
$LN40@ucnv_MBCSS@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN37@ucnv_MBCSS@2
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN38@ucnv_MBCSS@2
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN39@ucnv_MBCSS@2
$LN39@ucnv_MBCSS@2:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN38@ucnv_MBCSS@2:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN37@ucnv_MBCSS@2:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?ucnv_MBCSSingleToBMPWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSSingleToBMPWithOffsets
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z
_TEXT	SEGMENT
_action$71235 = -29					; size = 1
_entry$ = -20						; size = 4
_row$ = -8						; size = 4
_stateTable$ = 8					; size = 4
_state$ = 12						; size = 1
_isDBCSOnly$ = 16					; size = 1
_b$ = 20						; size = 1
?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z PROC		; isSingleOrLead, COMDAT
; File d:\mozilla\intl\icu\source\common\ucnvmbcs.cpp
; Line 2438
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2439
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	DWORD PTR _row$[ebp], eax
; Line 2440
	movzx	eax, BYTE PTR _b$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$[ebp], edx
; Line 2441
	cmp	DWORD PTR _entry$[ebp], 0
	jl	SHORT $LN4@isSingleOr
; Line 2442
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _stateTable$[ebp]
	push	ecx
	call	?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z ; hasValidTrailBytes
	add	esp, 8
	jmp	SHORT $LN5@isSingleOr
; Line 2443
	jmp	SHORT $LN5@isSingleOr
$LN4@isSingleOr:
; Line 2444
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$71235[ebp], al
; Line 2445
	movzx	eax, BYTE PTR _action$71235[ebp]
	cmp	eax, 8
	jne	SHORT $LN2@isSingleOr
	movsx	eax, BYTE PTR _isDBCSOnly$[ebp]
	test	eax, eax
	je	SHORT $LN2@isSingleOr
; Line 2446
	xor	al, al
	jmp	SHORT $LN5@isSingleOr
; Line 2447
	jmp	SHORT $LN5@isSingleOr
$LN2@isSingleOr:
; Line 2448
	movzx	eax, BYTE PTR _action$71235[ebp]
	cmp	eax, 7
	setne	al
$LN5@isSingleOr:
; Line 2451
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z ENDP		; isSingleOrLead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z
_TEXT	SEGMENT
_entry$ = -32						; size = 4
_b$ = -20						; size = 4
_row$ = -8						; size = 4
_stateTable$ = 8					; size = 4
_state$ = 12						; size = 1
?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z PROC		; hasValidTrailBytes, COMDAT
; Line 2395
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2396
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	DWORD PTR _row$[ebp], eax
; Line 2399
	mov	eax, DWORD PTR _row$[ebp]
	mov	ecx, DWORD PTR [eax+644]
	mov	DWORD PTR _entry$[ebp], ecx
; Line 2402
	cmp	DWORD PTR _entry$[ebp], 0
	jge	SHORT $LN10@hasValidTr
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 7
	je	SHORT $LN10@hasValidTr
; Line 2403
	mov	al, 1
	jmp	$LN11@hasValidTr
$LN10@hasValidTr:
; Line 2405
	mov	eax, DWORD PTR _row$[ebp]
	mov	ecx, DWORD PTR [eax+260]
	mov	DWORD PTR _entry$[ebp], ecx
; Line 2408
	cmp	DWORD PTR _entry$[ebp], 0
	jge	SHORT $LN9@hasValidTr
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 7
	je	SHORT $LN9@hasValidTr
; Line 2409
	mov	al, 1
	jmp	$LN11@hasValidTr
$LN9@hasValidTr:
; Line 2412
	mov	DWORD PTR _b$[ebp], 0
	jmp	SHORT $LN8@hasValidTr
$LN7@hasValidTr:
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, 1
	mov	DWORD PTR _b$[ebp], eax
$LN8@hasValidTr:
	cmp	DWORD PTR _b$[ebp], 255			; 000000ffH
	jg	SHORT $LN6@hasValidTr
; Line 2413
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$[ebp], edx
; Line 2416
	cmp	DWORD PTR _entry$[ebp], 0
	jge	SHORT $LN5@hasValidTr
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 7
	je	SHORT $LN5@hasValidTr
; Line 2417
	mov	al, 1
	jmp	SHORT $LN11@hasValidTr
$LN5@hasValidTr:
; Line 2419
	jmp	SHORT $LN7@hasValidTr
$LN6@hasValidTr:
; Line 2421
	mov	DWORD PTR _b$[ebp], 0
	jmp	SHORT $LN4@hasValidTr
$LN3@hasValidTr:
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, 1
	mov	DWORD PTR _b$[ebp], eax
$LN4@hasValidTr:
	cmp	DWORD PTR _b$[ebp], 255			; 000000ffH
	jg	SHORT $LN2@hasValidTr
; Line 2422
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _entry$[ebp], edx
; Line 2425
	cmp	DWORD PTR _entry$[ebp], 0
	jl	SHORT $LN1@hasValidTr
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _stateTable$[ebp]
	push	ecx
	call	?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z ; hasValidTrailBytes
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@hasValidTr
; Line 2426
	mov	al, 1
	jmp	SHORT $LN11@hasValidTr
$LN1@hasValidTr:
; Line 2428
	jmp	SHORT $LN3@hasValidTr
$LN2@hasValidTr:
; Line 2429
	xor	al, al
$LN11@hasValidTr:
; Line 2430
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z ENDP		; hasValidTrailBytes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv225 = -376						; size = 4
tv210 = -376						; size = 4
_i$71559 = -173						; size = 1
_bytes$71556 = -164					; size = 4
_isDBCSOnly$71554 = -149				; size = 1
_bytes$71547 = -140					; size = 4
_action$ = -125						; size = 1
_c$ = -116						; size = 4
_entry$ = -104						; size = 4
_state$ = -89						; size = 1
_offset$ = -80						; size = 4
_unicodeCodeUnits$ = -68				; size = 4
_stateTable$ = -56					; size = 4
_lastSource$ = -44					; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSGetNextUChar, COMDAT
; Line 2957
	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2972
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 2974
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+254]
	test	ecx, ecx
	jle	SHORT $LN58@ucnv_MBCSG@5
; Line 2976
	mov	eax, -9					; fffffff7H
	jmp	$LN59@ucnv_MBCSG@5
$LN58@ucnv_MBCSG@5:
; Line 2979
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+201]
	and	edx, 2
	je	SHORT $LN57@ucnv_MBCSG@5
; Line 2985
	mov	eax, -9					; fffffff7H
	jmp	$LN59@ucnv_MBCSG@5
	jmp	SHORT $LN56@ucnv_MBCSG@5
$LN57@ucnv_MBCSG@5:
; Line 2986
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+28]
	cmp	edx, 1
	jne	SHORT $LN56@ucnv_MBCSG@5
; Line 2987
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?ucnv_MBCSSingleGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ; ucnv_MBCSSingleGetNextUChar
	add	esp, 8
	jmp	$LN59@ucnv_MBCSG@5
$LN56@ucnv_MBCSG@5:
; Line 2991
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _lastSource$[ebp], ecx
	mov	edx, DWORD PTR _lastSource$[ebp]
	mov	DWORD PTR _source$[ebp], edx
; Line 2992
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 2994
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN54@ucnv_MBCSG@5
; Line 2995
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _stateTable$[ebp], edx
; Line 2996
	jmp	SHORT $LN53@ucnv_MBCSG@5
$LN54@ucnv_MBCSG@5:
; Line 2997
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _stateTable$[ebp], edx
$LN53@ucnv_MBCSG@5:
; Line 2999
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _unicodeCodeUnits$[ebp], edx
; Line 3002
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _offset$[ebp], ecx
; Line 3009
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR [eax+48]
	mov	BYTE PTR _state$[ebp], cl
	movzx	edx, BYTE PTR _state$[ebp]
	test	edx, edx
	jne	SHORT $LN52@ucnv_MBCSG@5
; Line 3010
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	dl, BYTE PTR [ecx+29]
	mov	BYTE PTR _state$[ebp], dl
$LN52@ucnv_MBCSG@5:
; Line 3014
	mov	DWORD PTR _c$[ebp], -1
$LN51@ucnv_MBCSG@5:
; Line 3015
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN50@ucnv_MBCSG@5
; Line 3016
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 3017
	cmp	DWORD PTR _entry$[ebp], 0
	jl	$LN49@ucnv_MBCSG@5
; Line 3018
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _state$[ebp], al
; Line 3019
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 16777215				; 00ffffffH
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 3026
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN48@ucnv_MBCSG@5
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
	cmp	DWORD PTR _entry$[ebp], 0
	jge	SHORT $LN48@ucnv_MBCSG@5
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	cmp	eax, 4
	jne	SHORT $LN48@ucnv_MBCSG@5
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	jge	SHORT $LN48@ucnv_MBCSG@5
; Line 3027
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 3028
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 3030
	jmp	$LN50@ucnv_MBCSG@5
$LN48@ucnv_MBCSG@5:
; Line 3032
	jmp	$LN47@ucnv_MBCSG@5
$LN49@ucnv_MBCSG@5:
; Line 3034
	movzx	eax, BYTE PTR _state$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 3037
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 127				; 0000007fH
	mov	BYTE PTR _state$[ebp], al
; Line 3043
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$[ebp], al
; Line 3044
	movzx	eax, BYTE PTR _action$[ebp]
	test	eax, eax
	jne	SHORT $LN46@ucnv_MBCSG@5
; Line 3046
	movzx	eax, WORD PTR _entry$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 3047
	jmp	$LN50@ucnv_MBCSG@5
	jmp	$LN45@ucnv_MBCSG@5
$LN46@ucnv_MBCSG@5:
; Line 3048
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 4
	jne	SHORT $LN44@ucnv_MBCSG@5
; Line 3049
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 3050
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
; Line 3051
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	jge	SHORT $LN43@ucnv_MBCSG@5
; Line 3053
	jmp	$LN50@ucnv_MBCSG@5
	jmp	SHORT $LN42@ucnv_MBCSG@5
$LN43@ucnv_MBCSG@5:
; Line 3054
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	jne	SHORT $LN41@ucnv_MBCSG@5
; Line 3055
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN40@ucnv_MBCSG@5
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 28					; 0000001cH
	push	edx
	call	?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z ; ucnv_MBCSGetFallback
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	je	SHORT $LN40@ucnv_MBCSG@5
; Line 3056
	jmp	$LN50@ucnv_MBCSG@5
$LN40@ucnv_MBCSG@5:
; Line 3058
	jmp	SHORT $LN42@ucnv_MBCSG@5
$LN41@ucnv_MBCSG@5:
; Line 3060
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
$LN42@ucnv_MBCSG@5:
; Line 3061
	jmp	$LN45@ucnv_MBCSG@5
$LN44@ucnv_MBCSG@5:
; Line 3062
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 5
	jne	$LN37@ucnv_MBCSG@5
; Line 3063
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 3064
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 1
	mov	DWORD PTR _offset$[ebp], eax
; Line 3065
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jge	SHORT $LN36@ucnv_MBCSG@5
; Line 3067
	jmp	$LN50@ucnv_MBCSG@5
	jmp	$LN35@ucnv_MBCSG@5
$LN36@ucnv_MBCSG@5:
; Line 3068
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN61@ucnv_MBCSG@5
	xor	ecx, ecx
	cmp	DWORD PTR _c$[ebp], 57343		; 0000dfffH
	setle	cl
	mov	DWORD PTR tv210[ebp], ecx
	jmp	SHORT $LN62@ucnv_MBCSG@5
$LN61@ucnv_MBCSG@5:
	xor	edx, edx
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setle	dl
	mov	DWORD PTR tv210[ebp], edx
$LN62@ucnv_MBCSG@5:
	cmp	DWORD PTR tv210[ebp], 0
	je	SHORT $LN34@ucnv_MBCSG@5
; Line 3070
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx+9216]
	mov	DWORD PTR _c$[ebp], edx
; Line 3071
	jmp	$LN50@ucnv_MBCSG@5
	jmp	SHORT $LN35@ucnv_MBCSG@5
$LN34@ucnv_MBCSG@5:
; Line 3072
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN63@ucnv_MBCSG@5
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 65534				; 0000fffeH
	xor	edx, edx
	cmp	ecx, 57344				; 0000e000H
	sete	dl
	mov	DWORD PTR tv225[ebp], edx
	jmp	SHORT $LN64@ucnv_MBCSG@5
$LN63@ucnv_MBCSG@5:
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 57344		; 0000e000H
	sete	al
	mov	DWORD PTR tv225[ebp], eax
$LN64@ucnv_MBCSG@5:
	cmp	DWORD PTR tv225[ebp], 0
	je	SHORT $LN32@ucnv_MBCSG@5
; Line 3074
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
; Line 3075
	jmp	$LN50@ucnv_MBCSG@5
	jmp	SHORT $LN35@ucnv_MBCSG@5
$LN32@ucnv_MBCSG@5:
; Line 3076
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN35@ucnv_MBCSG@5
; Line 3078
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
$LN35@ucnv_MBCSG@5:
; Line 3080
	jmp	$LN45@ucnv_MBCSG@5
$LN37@ucnv_MBCSG@5:
; Line 3082
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 1
	je	SHORT $LN27@ucnv_MBCSG@5
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 3
	jne	SHORT $LN28@ucnv_MBCSG@5
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN28@ucnv_MBCSG@5
$LN27@ucnv_MBCSG@5:
; Line 3084
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1048575				; 000fffffH
	add	eax, 65536				; 00010000H
	mov	DWORD PTR _c$[ebp], eax
; Line 3085
	jmp	$LN50@ucnv_MBCSG@5
	jmp	SHORT $LN45@ucnv_MBCSG@5
$LN28@ucnv_MBCSG@5:
; Line 3086
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 8
	jne	SHORT $LN25@ucnv_MBCSG@5
; Line 3094
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+29]
	test	edx, edx
	je	SHORT $LN24@ucnv_MBCSG@5
; Line 3096
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR [eax+48]
	mov	BYTE PTR _state$[ebp], cl
; Line 3099
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
$LN24@ucnv_MBCSG@5:
; Line 3100
	jmp	SHORT $LN45@ucnv_MBCSG@5
$LN25@ucnv_MBCSG@5:
; Line 3101
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 2
	jne	SHORT $LN22@ucnv_MBCSG@5
; Line 3102
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN21@ucnv_MBCSG@5
; Line 3104
	movzx	eax, WORD PTR _entry$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 3105
	jmp	SHORT $LN50@ucnv_MBCSG@5
$LN21@ucnv_MBCSG@5:
; Line 3106
	jmp	SHORT $LN45@ucnv_MBCSG@5
$LN22@ucnv_MBCSG@5:
; Line 3107
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 6
	jne	SHORT $LN19@ucnv_MBCSG@5
	jmp	SHORT $LN45@ucnv_MBCSG@5
$LN19@ucnv_MBCSG@5:
; Line 3109
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 7
	jne	SHORT $LN17@ucnv_MBCSG@5
; Line 3111
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3112
	jmp	SHORT $LN45@ucnv_MBCSG@5
$LN17@ucnv_MBCSG@5:
; Line 3114
	mov	DWORD PTR _offset$[ebp], 0
; Line 3115
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
; Line 3116
	jmp	$LN51@ucnv_MBCSG@5
$LN45@ucnv_MBCSG@5:
; Line 3120
	mov	DWORD PTR _offset$[ebp], 0
; Line 3122
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@ucnv_MBCSG@5
; Line 3124
	jmp	SHORT $LN50@ucnv_MBCSG@5
; Line 3125
	jmp	SHORT $LN47@ucnv_MBCSG@5
$LN15@ucnv_MBCSG@5:
; Line 3127
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 3128
	movzx	eax, BYTE PTR _state$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 3129
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _lastSource$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3130
	mov	eax, -9					; fffffff7H
	jmp	$LN59@ucnv_MBCSG@5
$LN47@ucnv_MBCSG@5:
; Line 3133
	jmp	$LN51@ucnv_MBCSG@5
$LN50@ucnv_MBCSG@5:
; Line 3135
	cmp	DWORD PTR _c$[ebp], 0
	jge	$LN13@ucnv_MBCSG@5
; Line 3136
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@ucnv_MBCSG@5
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jne	SHORT $LN12@ucnv_MBCSG@5
	mov	eax, DWORD PTR _lastSource$[ebp]
	cmp	eax, DWORD PTR _source$[ebp]
	jae	SHORT $LN12@ucnv_MBCSG@5
; Line 3138
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 37					; 00000025H
	mov	DWORD PTR _bytes$71547[ebp], eax
; Line 3139
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [ecx+36], al
$LN11@ucnv_MBCSG@5:
; Line 3141
	mov	eax, DWORD PTR _bytes$71547[ebp]
	mov	ecx, DWORD PTR _lastSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _bytes$71547[ebp]
	add	eax, 1
	mov	DWORD PTR _bytes$71547[ebp], eax
	mov	ecx, DWORD PTR _lastSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _lastSource$[ebp], ecx
; Line 3142
	mov	eax, DWORD PTR _lastSource$[ebp]
	cmp	eax, DWORD PTR _source$[ebp]
	jb	SHORT $LN11@ucnv_MBCSG@5
; Line 3143
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 11			; 0000000bH
	jmp	$LN8@ucnv_MBCSG@5
$LN12@ucnv_MBCSG@5:
; Line 3144
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN7@ucnv_MBCSG@5
; Line 3152
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+29]
	test	edx, edx
	setne	al
	mov	BYTE PTR _isDBCSOnly$71554[ebp], al
; Line 3153
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 37					; 00000025H
	mov	DWORD PTR _bytes$71556[ebp], eax
; Line 3154
	mov	eax, DWORD PTR _bytes$71556[ebp]
	mov	ecx, DWORD PTR _lastSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _bytes$71556[ebp]
	add	eax, 1
	mov	DWORD PTR _bytes$71556[ebp], eax
	mov	ecx, DWORD PTR _lastSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _lastSource$[ebp], ecx
; Line 3155
	mov	eax, DWORD PTR _lastSource$[ebp]
	cmp	eax, DWORD PTR _source$[ebp]
	jne	SHORT $LN6@ucnv_MBCSG@5
; Line 3156
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+36], 1
; Line 3157
	jmp	SHORT $LN5@ucnv_MBCSG@5
$LN6@ucnv_MBCSG@5:
; Line 3159
	mov	BYTE PTR _i$71559[ebp], 1
; Line 3160
	jmp	SHORT $LN4@ucnv_MBCSG@5
$LN3@ucnv_MBCSG@5:
; Line 3162
	mov	al, BYTE PTR _i$71559[ebp]
	add	al, 1
	mov	BYTE PTR _i$71559[ebp], al
$LN4@ucnv_MBCSG@5:
	mov	eax, DWORD PTR _lastSource$[ebp]
	cmp	eax, DWORD PTR _source$[ebp]
	jae	SHORT $LN2@ucnv_MBCSG@5
	mov	eax, DWORD PTR _lastSource$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	movzx	edx, BYTE PTR _isDBCSOnly$71554[ebp]
	push	edx
	movzx	eax, BYTE PTR _state$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stateTable$[ebp]
	push	ecx
	call	?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z	; isSingleOrLead
	add	esp, 16					; 00000010H
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@ucnv_MBCSG@5
; Line 3163
	mov	eax, DWORD PTR _bytes$71556[ebp]
	mov	ecx, DWORD PTR _lastSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _bytes$71556[ebp]
	add	eax, 1
	mov	DWORD PTR _bytes$71556[ebp], eax
	mov	ecx, DWORD PTR _lastSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _lastSource$[ebp], ecx
; Line 3164
	jmp	SHORT $LN3@ucnv_MBCSG@5
$LN2@ucnv_MBCSG@5:
; Line 3165
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _i$71559[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 3166
	mov	eax, DWORD PTR _lastSource$[ebp]
	mov	DWORD PTR _source$[ebp], eax
$LN5@ucnv_MBCSG@5:
; Line 3168
	jmp	SHORT $LN8@ucnv_MBCSG@5
$LN7@ucnv_MBCSG@5:
; Line 3170
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
$LN8@ucnv_MBCSG@5:
; Line 3172
	mov	DWORD PTR _c$[ebp], 65535		; 0000ffffH
$LN13@ucnv_MBCSG@5:
; Line 3176
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 3177
	movzx	eax, BYTE PTR _state$[ebp]
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 3180
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3181
	mov	eax, DWORD PTR _c$[ebp]
$LN59@ucnv_MBCSG@5:
; Line 3182
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSGetNextUChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSSingleGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_action$ = -65						; size = 1
_entry$ = -56						; size = 4
_sourceLimit$ = -44					; size = 4
_source$ = -32						; size = 4
_stateTable$ = -20					; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSSingleGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSSingleGetNextUChar, COMDAT
; Line 2872
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2881
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 2882
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 2883
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 2884
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN17@ucnv_MBCSS@3
; Line 2885
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _stateTable$[ebp], edx
; Line 2886
	jmp	SHORT $LN15@ucnv_MBCSS@3
$LN17@ucnv_MBCSS@3:
; Line 2887
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _stateTable$[ebp], edx
$LN15@ucnv_MBCSS@3:
; Line 2891
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN14@ucnv_MBCSS@3
; Line 2892
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _stateTable$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 2896
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2898
	cmp	DWORD PTR _entry$[ebp], -2146435072	; 80100000H
	jge	SHORT $LN13@ucnv_MBCSS@3
; Line 2900
	movzx	eax, WORD PTR _entry$[ebp]
	jmp	$LN18@ucnv_MBCSS@3
$LN13@ucnv_MBCSS@3:
; Line 2907
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$[ebp], al
; Line 2910
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 1
	je	SHORT $LN11@ucnv_MBCSS@3
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 3
	jne	SHORT $LN12@ucnv_MBCSS@3
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN12@ucnv_MBCSS@3
$LN11@ucnv_MBCSS@3:
; Line 2912
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1048575				; 000fffffH
	add	eax, 65536				; 00010000H
	jmp	SHORT $LN18@ucnv_MBCSS@3
	jmp	SHORT $LN10@ucnv_MBCSS@3
$LN12@ucnv_MBCSS@3:
; Line 2913
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 2
	jne	SHORT $LN9@ucnv_MBCSS@3
; Line 2914
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN8@ucnv_MBCSS@3
; Line 2916
	movzx	eax, WORD PTR _entry$[ebp]
	jmp	SHORT $LN18@ucnv_MBCSS@3
$LN8@ucnv_MBCSS@3:
; Line 2917
	jmp	SHORT $LN10@ucnv_MBCSS@3
$LN9@ucnv_MBCSS@3:
; Line 2918
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 6
	jne	SHORT $LN6@ucnv_MBCSS@3
	jmp	SHORT $LN10@ucnv_MBCSS@3
$LN6@ucnv_MBCSS@3:
; Line 2920
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 7
	jne	SHORT $LN4@ucnv_MBCSS@3
; Line 2922
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 2923
	jmp	SHORT $LN10@ucnv_MBCSS@3
$LN4@ucnv_MBCSS@3:
; Line 2925
	jmp	$LN15@ucnv_MBCSS@3
$LN10@ucnv_MBCSS@3:
; Line 2928
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucnv_MBCSS@3
; Line 2930
	jmp	SHORT $LN14@ucnv_MBCSS@3
; Line 2931
	jmp	SHORT $LN1@ucnv_MBCSS@3
$LN2@ucnv_MBCSS@3:
; Line 2933
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 2934
	mov	eax, -9					; fffffff7H
	jmp	SHORT $LN18@ucnv_MBCSS@3
$LN1@ucnv_MBCSS@3:
; Line 2936
	jmp	$LN15@ucnv_MBCSS@3
$LN14@ucnv_MBCSS@3:
; Line 2939
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 8
; Line 2940
	mov	eax, 65535				; 0000ffffH
$LN18@ucnv_MBCSS@3:
; Line 2941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSSingleGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSSingleGetNextUChar
_TEXT	ENDS
PUBLIC	_ucnv_MBCSSimpleGetNextUChar_56
EXTRN	_ucnv_extSimpleMatchToU_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSSimpleGetNextUChar_56
_TEXT	SEGMENT
tv165 = -304						; size = 4
tv150 = -304						; size = 4
_cx$71626 = -104					; size = 4
_entry$ = -92						; size = 4
_i$ = -80						; size = 4
_c$ = -68						; size = 4
_action$ = -53						; size = 1
_state$ = -41						; size = 1
_offset$ = -32						; size = 4
_unicodeCodeUnits$ = -20				; size = 4
_stateTable$ = -8					; size = 4
_sharedData$ = 8					; size = 4
_source$ = 12						; size = 4
_length$ = 16						; size = 4
_useFallback$ = 20					; size = 1
_ucnv_MBCSSimpleGetNextUChar_56 PROC			; COMDAT
; Line 3255
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3265
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN35@ucnv_MBCSS@4
; Line 3267
	mov	eax, 65535				; 0000ffffH
	jmp	$LN36@ucnv_MBCSS@4
$LN35@ucnv_MBCSS@4:
; Line 3288
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _stateTable$[ebp], ecx
; Line 3289
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _unicodeCodeUnits$[ebp], ecx
; Line 3292
	mov	DWORD PTR _offset$[ebp], 0
; Line 3293
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	cl, BYTE PTR [eax+29]
	mov	BYTE PTR _state$[ebp], cl
; Line 3296
	mov	DWORD PTR _i$[ebp], 0
$LN34@ucnv_MBCSS@4:
; Line 3297
	movzx	eax, BYTE PTR _state$[ebp]
	shl	eax, 10					; 0000000aH
	add	eax, DWORD PTR _stateTable$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _entry$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 3298
	cmp	DWORD PTR _entry$[ebp], 0
	jl	SHORT $LN32@ucnv_MBCSS@4
; Line 3299
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _state$[ebp], al
; Line 3300
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 16777215				; 00ffffffH
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 3302
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jne	SHORT $LN31@ucnv_MBCSS@4
; Line 3303
	mov	eax, 65535				; 0000ffffH
	jmp	$LN36@ucnv_MBCSS@4
$LN31@ucnv_MBCSS@4:
; Line 3305
	jmp	$LN30@ucnv_MBCSS@4
$LN32@ucnv_MBCSS@4:
; Line 3310
	mov	eax, DWORD PTR _entry$[ebp]
	shr	eax, 20					; 00000014H
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _action$[ebp], al
; Line 3311
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 4
	jne	SHORT $LN29@ucnv_MBCSS@4
; Line 3312
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 3313
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
; Line 3314
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	je	SHORT $LN28@ucnv_MBCSS@4
	jmp	SHORT $LN27@ucnv_MBCSS@4
$LN28@ucnv_MBCSS@4:
; Line 3316
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN27@ucnv_MBCSS@4
; Line 3317
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sharedData$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	call	?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z ; ucnv_MBCSGetFallback
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
$LN27@ucnv_MBCSS@4:
; Line 3320
	jmp	$LN33@ucnv_MBCSS@4
	jmp	$LN25@ucnv_MBCSS@4
$LN29@ucnv_MBCSS@4:
; Line 3321
	movzx	eax, BYTE PTR _action$[ebp]
	test	eax, eax
	jne	SHORT $LN24@ucnv_MBCSS@4
; Line 3323
	movzx	eax, WORD PTR _entry$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 3324
	jmp	$LN33@ucnv_MBCSS@4
	jmp	$LN25@ucnv_MBCSS@4
$LN24@ucnv_MBCSS@4:
; Line 3325
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 5
	jne	$LN22@ucnv_MBCSS@4
; Line 3326
	movzx	eax, WORD PTR _entry$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 3327
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 1
	mov	DWORD PTR _offset$[ebp], eax
; Line 3328
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jge	SHORT $LN21@ucnv_MBCSS@4
	jmp	$LN20@ucnv_MBCSS@4
$LN21@ucnv_MBCSS@4:
; Line 3330
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN38@ucnv_MBCSS@4
	xor	ecx, ecx
	cmp	DWORD PTR _c$[ebp], 57343		; 0000dfffH
	setle	cl
	mov	DWORD PTR tv150[ebp], ecx
	jmp	SHORT $LN39@ucnv_MBCSS@4
$LN38@ucnv_MBCSS@4:
	xor	edx, edx
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setle	dl
	mov	DWORD PTR tv150[ebp], edx
$LN39@ucnv_MBCSS@4:
	cmp	DWORD PTR tv150[ebp], 0
	je	SHORT $LN19@ucnv_MBCSS@4
; Line 3332
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx+9216]
	mov	DWORD PTR _c$[ebp], edx
	jmp	SHORT $LN20@ucnv_MBCSS@4
$LN19@ucnv_MBCSS@4:
; Line 3333
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN40@ucnv_MBCSS@4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 65534				; 0000fffeH
	xor	edx, edx
	cmp	ecx, 57344				; 0000e000H
	sete	dl
	mov	DWORD PTR tv165[ebp], edx
	jmp	SHORT $LN41@ucnv_MBCSS@4
$LN40@ucnv_MBCSS@4:
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 57344		; 0000e000H
	sete	al
	mov	DWORD PTR tv165[ebp], eax
$LN41@ucnv_MBCSS@4:
	cmp	DWORD PTR tv165[ebp], 0
	je	SHORT $LN17@ucnv_MBCSS@4
; Line 3335
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _unicodeCodeUnits$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	jmp	SHORT $LN20@ucnv_MBCSS@4
$LN17@ucnv_MBCSS@4:
; Line 3336
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN15@ucnv_MBCSS@4
; Line 3337
	mov	eax, 65535				; 0000ffffH
	jmp	$LN36@ucnv_MBCSS@4
; Line 3338
	jmp	SHORT $LN20@ucnv_MBCSS@4
$LN15@ucnv_MBCSS@4:
; Line 3339
	mov	DWORD PTR _c$[ebp], 65534		; 0000fffeH
$LN20@ucnv_MBCSS@4:
; Line 3341
	jmp	$LN33@ucnv_MBCSS@4
	jmp	SHORT $LN25@ucnv_MBCSS@4
$LN22@ucnv_MBCSS@4:
; Line 3342
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 1
	jne	SHORT $LN12@ucnv_MBCSS@4
; Line 3344
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1048575				; 000fffffH
	add	eax, 65536				; 00010000H
	mov	DWORD PTR _c$[ebp], eax
; Line 3345
	jmp	SHORT $LN33@ucnv_MBCSS@4
	jmp	SHORT $LN25@ucnv_MBCSS@4
$LN12@ucnv_MBCSS@4:
; Line 3346
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 2
	jne	SHORT $LN10@ucnv_MBCSS@4
; Line 3347
	xor	eax, eax
	je	SHORT $LN9@ucnv_MBCSS@4
; Line 3348
	mov	DWORD PTR _c$[ebp], 65534		; 0000fffeH
; Line 3349
	jmp	SHORT $LN33@ucnv_MBCSS@4
$LN9@ucnv_MBCSS@4:
; Line 3352
	movzx	eax, WORD PTR _entry$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 3353
	jmp	SHORT $LN33@ucnv_MBCSS@4
	jmp	SHORT $LN25@ucnv_MBCSS@4
$LN10@ucnv_MBCSS@4:
; Line 3354
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 3
	jne	SHORT $LN7@ucnv_MBCSS@4
; Line 3355
	xor	eax, eax
	je	SHORT $LN6@ucnv_MBCSS@4
; Line 3356
	mov	DWORD PTR _c$[ebp], 65534		; 0000fffeH
; Line 3357
	jmp	SHORT $LN33@ucnv_MBCSS@4
$LN6@ucnv_MBCSS@4:
; Line 3360
	mov	eax, DWORD PTR _entry$[ebp]
	and	eax, 1048575				; 000fffffH
	add	eax, 65536				; 00010000H
	mov	DWORD PTR _c$[ebp], eax
; Line 3361
	jmp	SHORT $LN33@ucnv_MBCSS@4
	jmp	SHORT $LN25@ucnv_MBCSS@4
$LN7@ucnv_MBCSS@4:
; Line 3362
	movzx	eax, BYTE PTR _action$[ebp]
	cmp	eax, 6
	jne	SHORT $LN25@ucnv_MBCSS@4
; Line 3363
	mov	DWORD PTR _c$[ebp], 65534		; 0000fffeH
; Line 3364
	jmp	SHORT $LN33@ucnv_MBCSS@4
$LN25@ucnv_MBCSS@4:
; Line 3371
	mov	eax, 65535				; 0000ffffH
	jmp	SHORT $LN36@ucnv_MBCSS@4
$LN30@ucnv_MBCSS@4:
; Line 3373
	jmp	$LN34@ucnv_MBCSS@4
$LN33@ucnv_MBCSS@4:
; Line 3375
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	je	SHORT $LN3@ucnv_MBCSS@4
; Line 3377
	mov	eax, 65535				; 0000ffffH
	jmp	SHORT $LN36@ucnv_MBCSS@4
$LN3@ucnv_MBCSS@4:
; Line 3380
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	jne	SHORT $LN2@ucnv_MBCSS@4
; Line 3382
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	DWORD PTR _cx$71626[ebp], ecx
; Line 3383
	cmp	DWORD PTR _cx$71626[ebp], 0
	je	SHORT $LN2@ucnv_MBCSS@4
; Line 3384
	movzx	eax, BYTE PTR _useFallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _cx$71626[ebp]
	push	eax
	call	_ucnv_extSimpleMatchToU_56
	add	esp, 16					; 00000010H
	jmp	SHORT $LN36@ucnv_MBCSS@4
$LN2@ucnv_MBCSS@4:
; Line 3388
	mov	eax, DWORD PTR _c$[ebp]
$LN36@ucnv_MBCSS@4:
; Line 3389
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_MBCSSimpleGetNextUChar_56 ENDP
_TEXT	ENDS
EXTRN	_ucnv_extContinueMatchFromU_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSFromUnicodeWithOffsets_56
_TEXT	SEGMENT
tv605 = -520						; size = 4
tv592 = -520						; size = 4
tv572 = -520						; size = 4
tv559 = -520						; size = 4
tv385 = -520						; size = 4
tv209 = -520						; size = 4
_charErrorBuffer$72128 = -320				; size = 4
_trail$71991 = -308					; size = 2
_unicodeMask$ = -293					; size = 1
_prevLength$ = -284					; size = 4
_length$ = -272						; size = 4
_soLength$ = -257					; size = 1
_siLength$ = -245					; size = 1
_soBytes$ = -236					; size = 2
_siBytes$ = -224					; size = 2
_value$ = -212						; size = 4
_asciiRoundtrips$ = -200				; size = 4
_stage2Entry$ = -188					; size = 4
_nextSourceIndex$ = -176				; size = 4
_sourceIndex$ = -164					; size = 4
_prevSourceIndex$ = -152				; size = 4
_c$ = -140						; size = 4
_outputType$ = -125					; size = 1
_bytes$ = -116						; size = 4
_p$ = -104						; size = 4
_mbcsIndex$ = -92					; size = 4
_table$ = -80						; size = 4
_offsets$ = -68						; size = 4
_targetCapacity$ = -56					; size = 4
_target$ = -44						; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_ucnv_MBCSFromUnicodeWithOffsets_56 PROC		; COMDAT
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4081
	mov	BYTE PTR _siBytes$[ebp], 0
	mov	BYTE PTR _siBytes$[ebp+1], 0
; Line 4082
	mov	BYTE PTR _soBytes$[ebp], 0
	mov	BYTE PTR _soBytes$[ebp+1], 0
; Line 4084
	mov	DWORD PTR _length$[ebp], 0
; Line 4087
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 4089
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+180], 0
	jl	SHORT $LN204@ucnv_MBCSF
; Line 4094
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	push	edx
	call	_ucnv_extContinueMatchFromU_56
	add	esp, 16					; 00000010H
; Line 4096
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN202@ucnv_MBCSF
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+253]
	test	ecx, ecx
	jge	SHORT $LN204@ucnv_MBCSF
$LN202@ucnv_MBCSF:
; Line 4097
	jmp	$LN205@ucnv_MBCSF
$LN204@ucnv_MBCSF:
; Line 4102
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	dl, BYTE PTR [ecx+200]
	mov	BYTE PTR _outputType$[ebp], dl
; Line 4103
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	dl, BYTE PTR [ecx+201]
	mov	BYTE PTR _unicodeMask$[ebp], dl
; Line 4104
	movzx	eax, BYTE PTR _outputType$[ebp]
	test	eax, eax
	jne	SHORT $LN201@ucnv_MBCSF
	movzx	eax, BYTE PTR _unicodeMask$[ebp]
	and	eax, 2
	jne	SHORT $LN201@ucnv_MBCSF
; Line 4105
	movzx	eax, BYTE PTR _unicodeMask$[ebp]
	and	eax, 1
	jne	SHORT $LN200@ucnv_MBCSF
; Line 4106
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?ucnv_MBCSSingleFromBMPWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z ; ucnv_MBCSSingleFromBMPWithOffsets
	add	esp, 8
; Line 4107
	jmp	SHORT $LN199@ucnv_MBCSF
$LN200@ucnv_MBCSF:
; Line 4108
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?ucnv_MBCSSingleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z ; ucnv_MBCSSingleFromUnicodeWithOffsets
	add	esp, 8
$LN199@ucnv_MBCSF:
; Line 4110
	jmp	$LN205@ucnv_MBCSF
	jmp	SHORT $LN198@ucnv_MBCSF
$LN201@ucnv_MBCSF:
; Line 4111
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 1
	jne	SHORT $LN198@ucnv_MBCSF
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movsx	edx, BYTE PTR [ecx+202]
	test	edx, edx
	je	SHORT $LN198@ucnv_MBCSF
; Line 4112
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	?ucnv_MBCSDoubleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z ; ucnv_MBCSDoubleFromUnicodeWithOffsets
	add	esp, 8
; Line 4113
	jmp	$LN205@ucnv_MBCSF
$LN198@ucnv_MBCSF:
; Line 4117
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 4118
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 4119
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 4120
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 4121
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 4123
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _table$[ebp], edx
; Line 4124
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movsx	edx, BYTE PTR [ecx+202]
	test	edx, edx
	je	SHORT $LN196@ucnv_MBCSF
; Line 4125
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _mbcsIndex$[ebp], edx
; Line 4126
	jmp	SHORT $LN195@ucnv_MBCSF
$LN196@ucnv_MBCSF:
; Line 4127
	mov	DWORD PTR _mbcsIndex$[ebp], 0
$LN195@ucnv_MBCSF:
; Line 4129
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN194@ucnv_MBCSF
; Line 4130
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _bytes$[ebp], edx
; Line 4131
	jmp	SHORT $LN193@ucnv_MBCSF
$LN194@ucnv_MBCSF:
; Line 4132
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _bytes$[ebp], edx
$LN193@ucnv_MBCSF:
; Line 4134
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _asciiRoundtrips$[ebp], edx
; Line 4137
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _c$[ebp], ecx
; Line 4139
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 12					; 0000000cH
	jne	SHORT $LN192@ucnv_MBCSF
; Line 4140
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR _prevLength$[ebp], ecx
; Line 4141
	cmp	DWORD PTR _prevLength$[ebp], 0
	jne	SHORT $LN191@ucnv_MBCSF
; Line 4143
	mov	DWORD PTR _prevLength$[ebp], 1
$LN191@ucnv_MBCSF:
; Line 4145
	jmp	SHORT $LN190@ucnv_MBCSF
$LN192@ucnv_MBCSF:
; Line 4147
	mov	DWORD PTR _prevLength$[ebp], 0
$LN190@ucnv_MBCSF:
; Line 4151
	mov	DWORD PTR _prevSourceIndex$[ebp], -1
; Line 4152
	mov	eax, DWORD PTR _c$[ebp]
	neg	eax
	sbb	eax, eax
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 4153
	mov	DWORD PTR _nextSourceIndex$[ebp], 0
; Line 4156
	lea	eax, DWORD PTR _siBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	push	0
	call	?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z	; getSISOBytes
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _siLength$[ebp], al
; Line 4157
	lea	eax, DWORD PTR _soBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	push	1
	call	?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z	; getSISOBytes
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _soLength$[ebp], al
; Line 4173
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN187@ucnv_MBCSF
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN187@ucnv_MBCSF
; Line 4174
	jmp	$getTrail$71890
	jmp	$getTrail$71890
$LN187@ucnv_MBCSF:
; Line 4177
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN186@ucnv_MBCSF
; Line 4186
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN185@ucnv_MBCSF
; Line 4192
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 2
	mov	DWORD PTR _source$[ebp], edx
; Line 4193
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 4194
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jg	SHORT $LN184@ucnv_MBCSF
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 2
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _asciiRoundtrips$[ebp]
	je	SHORT $LN184@ucnv_MBCSF
; Line 4195
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4196
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN183@ucnv_MBCSF
; Line 4197
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
; Line 4198
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR _prevSourceIndex$[ebp], eax
; Line 4199
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
$LN183@ucnv_MBCSF:
; Line 4201
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 4202
	mov	DWORD PTR _c$[ebp], 0
; Line 4203
	jmp	$LN187@ucnv_MBCSF
$LN184@ucnv_MBCSF:
; Line 4210
	cmp	DWORD PTR _c$[ebp], 55295		; 0000d7ffH
	jg	$LN182@ucnv_MBCSF
	cmp	DWORD PTR _mbcsIndex$[ebp], 0
	je	$LN182@ucnv_MBCSF
; Line 4211
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 6
	mov	ecx, DWORD PTR _mbcsIndex$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 4215
	movzx	eax, BYTE PTR _outputType$[ebp]
	mov	DWORD PTR tv209[ebp], eax
	mov	ecx, DWORD PTR tv209[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv209[ebp], ecx
	cmp	DWORD PTR tv209[ebp], 218		; 000000daH
	ja	$LN113@ucnv_MBCSF
	mov	edx, DWORD PTR tv209[ebp]
	movzx	eax, BYTE PTR $LN207@ucnv_MBCSF[edx]
	jmp	DWORD PTR $LN216@ucnv_MBCSF[eax*4]
$LN179@ucnv_MBCSF:
; Line 4217
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 4218
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN178@ucnv_MBCSF
; Line 4219
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN177@ucnv_MBCSF
; Line 4220
	jmp	$unassigned$71908
	jmp	$unassigned$71908
; Line 4221
	jmp	SHORT $LN175@ucnv_MBCSF
$LN177@ucnv_MBCSF:
; Line 4222
	mov	DWORD PTR _length$[ebp], 1
$LN175@ucnv_MBCSF:
; Line 4224
	jmp	SHORT $LN174@ucnv_MBCSF
$LN178@ucnv_MBCSF:
; Line 4225
	mov	DWORD PTR _length$[ebp], 2
$LN174@ucnv_MBCSF:
; Line 4227
	jmp	$LN180@ucnv_MBCSF
$LN173@ucnv_MBCSF:
; Line 4239
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _prevLength$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 4240
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 4241
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	$LN172@ucnv_MBCSF
; Line 4242
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN171@ucnv_MBCSF
; Line 4243
	jmp	$unassigned$71908
	jmp	$unassigned$71908
	jmp	$LN169@ucnv_MBCSF
$LN171@ucnv_MBCSF:
; Line 4244
	cmp	DWORD PTR _prevLength$[ebp], 1
	jg	SHORT $LN168@ucnv_MBCSF
; Line 4245
	mov	DWORD PTR _length$[ebp], 1
; Line 4246
	jmp	SHORT $LN169@ucnv_MBCSF
$LN168@ucnv_MBCSF:
; Line 4248
	movzx	eax, BYTE PTR _siLength$[ebp]
	cmp	eax, 1
	jne	SHORT $LN166@ucnv_MBCSF
; Line 4249
	movzx	eax, BYTE PTR _siBytes$[ebp]
	shl	eax, 8
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4250
	mov	DWORD PTR _length$[ebp], 2
	jmp	SHORT $LN165@ucnv_MBCSF
$LN166@ucnv_MBCSF:
; Line 4251
	movzx	eax, BYTE PTR _siLength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN165@ucnv_MBCSF
; Line 4252
	movzx	eax, BYTE PTR _siBytes$[ebp+1]
	shl	eax, 8
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4253
	movzx	eax, BYTE PTR _siBytes$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4254
	mov	DWORD PTR _length$[ebp], 3
$LN165@ucnv_MBCSF:
; Line 4256
	mov	DWORD PTR _prevLength$[ebp], 1
$LN169@ucnv_MBCSF:
; Line 4258
	jmp	$LN163@ucnv_MBCSF
$LN172@ucnv_MBCSF:
; Line 4259
	cmp	DWORD PTR _prevLength$[ebp], 2
	jne	SHORT $LN162@ucnv_MBCSF
; Line 4260
	mov	DWORD PTR _length$[ebp], 2
; Line 4261
	jmp	SHORT $LN163@ucnv_MBCSF
$LN162@ucnv_MBCSF:
; Line 4263
	movzx	eax, BYTE PTR _soLength$[ebp]
	cmp	eax, 1
	jne	SHORT $LN160@ucnv_MBCSF
; Line 4264
	movzx	eax, BYTE PTR _soBytes$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4265
	mov	DWORD PTR _length$[ebp], 3
	jmp	SHORT $LN159@ucnv_MBCSF
$LN160@ucnv_MBCSF:
; Line 4266
	movzx	eax, BYTE PTR _soLength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN159@ucnv_MBCSF
; Line 4267
	movzx	eax, BYTE PTR _soBytes$[ebp+1]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4268
	movzx	eax, BYTE PTR _soBytes$[ebp]
	shl	eax, 24					; 00000018H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4269
	mov	DWORD PTR _length$[ebp], 4
$LN159@ucnv_MBCSF:
; Line 4271
	mov	DWORD PTR _prevLength$[ebp], 2
$LN163@ucnv_MBCSF:
; Line 4274
	jmp	$LN180@ucnv_MBCSF
$LN157@ucnv_MBCSF:
; Line 4277
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 4278
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN156@ucnv_MBCSF
; Line 4280
	jmp	$unassigned$71908
	jmp	$unassigned$71908
; Line 4281
	jmp	SHORT $LN154@ucnv_MBCSF
$LN156@ucnv_MBCSF:
; Line 4282
	mov	DWORD PTR _length$[ebp], 2
$LN154@ucnv_MBCSF:
; Line 4284
	jmp	$LN180@ucnv_MBCSF
$LN153@ucnv_MBCSF:
; Line 4286
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	imul	eax, 3
	add	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 4287
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	or	ecx, eax
	mov	DWORD PTR _value$[ebp], ecx
; Line 4288
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN152@ucnv_MBCSF
; Line 4289
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN151@ucnv_MBCSF
; Line 4290
	jmp	$unassigned$71908
	jmp	$unassigned$71908
; Line 4291
	jmp	SHORT $LN149@ucnv_MBCSF
$LN151@ucnv_MBCSF:
; Line 4292
	mov	DWORD PTR _length$[ebp], 1
$LN149@ucnv_MBCSF:
; Line 4293
	jmp	SHORT $LN148@ucnv_MBCSF
$LN152@ucnv_MBCSF:
; Line 4294
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN147@ucnv_MBCSF
; Line 4295
	mov	DWORD PTR _length$[ebp], 2
; Line 4296
	jmp	SHORT $LN148@ucnv_MBCSF
$LN147@ucnv_MBCSF:
; Line 4297
	mov	DWORD PTR _length$[ebp], 3
$LN148@ucnv_MBCSF:
; Line 4299
	jmp	$LN180@ucnv_MBCSF
$LN145@ucnv_MBCSF:
; Line 4301
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _value$[ebp], edx
; Line 4302
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN144@ucnv_MBCSF
; Line 4303
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN143@ucnv_MBCSF
; Line 4304
	jmp	$unassigned$71908
	jmp	$unassigned$71908
; Line 4305
	jmp	SHORT $LN141@ucnv_MBCSF
$LN143@ucnv_MBCSF:
; Line 4306
	mov	DWORD PTR _length$[ebp], 1
$LN141@ucnv_MBCSF:
; Line 4307
	jmp	SHORT $LN140@ucnv_MBCSF
$LN144@ucnv_MBCSF:
; Line 4308
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN139@ucnv_MBCSF
; Line 4309
	mov	DWORD PTR _length$[ebp], 2
	jmp	SHORT $LN140@ucnv_MBCSF
$LN139@ucnv_MBCSF:
; Line 4310
	cmp	DWORD PTR _value$[ebp], 16777215	; 00ffffffH
	ja	SHORT $LN137@ucnv_MBCSF
; Line 4311
	mov	DWORD PTR _length$[ebp], 3
; Line 4312
	jmp	SHORT $LN140@ucnv_MBCSF
$LN137@ucnv_MBCSF:
; Line 4313
	mov	DWORD PTR _length$[ebp], 4
$LN140@ucnv_MBCSF:
; Line 4315
	jmp	$LN180@ucnv_MBCSF
$LN135@ucnv_MBCSF:
; Line 4317
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 4319
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN134@ucnv_MBCSF
; Line 4320
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN133@ucnv_MBCSF
; Line 4321
	jmp	$unassigned$71908
	jmp	$unassigned$71908
; Line 4322
	jmp	SHORT $LN131@ucnv_MBCSF
$LN133@ucnv_MBCSF:
; Line 4323
	mov	DWORD PTR _length$[ebp], 1
$LN131@ucnv_MBCSF:
; Line 4324
	jmp	SHORT $LN130@ucnv_MBCSF
$LN134@ucnv_MBCSF:
; Line 4325
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 32768				; 00008000H
	jne	SHORT $LN129@ucnv_MBCSF
; Line 4326
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, 9338880				; 008e8000H
	mov	DWORD PTR _value$[ebp], eax
; Line 4327
	mov	DWORD PTR _length$[ebp], 3
	jmp	SHORT $LN130@ucnv_MBCSF
$LN129@ucnv_MBCSF:
; Line 4328
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 128				; 00000080H
	jne	SHORT $LN127@ucnv_MBCSF
; Line 4329
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, 9371776				; 008f0080H
	mov	DWORD PTR _value$[ebp], eax
; Line 4330
	mov	DWORD PTR _length$[ebp], 3
; Line 4331
	jmp	SHORT $LN130@ucnv_MBCSF
$LN127@ucnv_MBCSF:
; Line 4332
	mov	DWORD PTR _length$[ebp], 2
$LN130@ucnv_MBCSF:
; Line 4334
	jmp	$LN180@ucnv_MBCSF
$LN125@ucnv_MBCSF:
; Line 4336
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	eax, DWORD PTR _value$[ebp]
	imul	eax, 3
	add	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 4337
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	or	ecx, eax
	mov	DWORD PTR _value$[ebp], ecx
; Line 4339
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN124@ucnv_MBCSF
; Line 4340
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN123@ucnv_MBCSF
; Line 4341
	jmp	$unassigned$71908
	jmp	$unassigned$71908
; Line 4342
	jmp	SHORT $LN121@ucnv_MBCSF
$LN123@ucnv_MBCSF:
; Line 4343
	mov	DWORD PTR _length$[ebp], 1
$LN121@ucnv_MBCSF:
; Line 4344
	jmp	SHORT $LN120@ucnv_MBCSF
$LN124@ucnv_MBCSF:
; Line 4345
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN119@ucnv_MBCSF
; Line 4346
	mov	DWORD PTR _length$[ebp], 2
	jmp	SHORT $LN120@ucnv_MBCSF
$LN119@ucnv_MBCSF:
; Line 4347
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 8388608				; 00800000H
	jne	SHORT $LN117@ucnv_MBCSF
; Line 4348
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, -1904214016			; 8e800000H
	mov	DWORD PTR _value$[ebp], eax
; Line 4349
	mov	DWORD PTR _length$[ebp], 4
	jmp	SHORT $LN120@ucnv_MBCSF
$LN117@ucnv_MBCSF:
; Line 4350
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 32768				; 00008000H
	jne	SHORT $LN115@ucnv_MBCSF
; Line 4351
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, -1895792640			; 8f008000H
	mov	DWORD PTR _value$[ebp], eax
; Line 4352
	mov	DWORD PTR _length$[ebp], 4
; Line 4353
	jmp	SHORT $LN120@ucnv_MBCSF
$LN115@ucnv_MBCSF:
; Line 4354
	mov	DWORD PTR _length$[ebp], 3
$LN120@ucnv_MBCSF:
; Line 4356
	jmp	SHORT $LN180@ucnv_MBCSF
$LN113@ucnv_MBCSF:
; Line 4366
	mov	DWORD PTR _value$[ebp], 0
; Line 4367
	mov	DWORD PTR _length$[ebp], 0
$LN180@ucnv_MBCSF:
; Line 4371
	jmp	$LN112@ucnv_MBCSF
$LN182@ucnv_MBCSF:
; Line 4377
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	jne	$LN111@ucnv_MBCSF
	movzx	eax, BYTE PTR _unicodeMask$[ebp]
	and	eax, 2
	jne	$LN111@ucnv_MBCSF
; Line 4378
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1024				; 00000400H
	jne	$LN110@ucnv_MBCSF
$getTrail$71890:
; Line 4380
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN109@ucnv_MBCSF
; Line 4382
	mov	eax, DWORD PTR _source$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _trail$71991[ebp], cx
; Line 4383
	movzx	eax, WORD PTR _trail$71991[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN108@ucnv_MBCSF
; Line 4384
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 4385
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 4386
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _trail$71991[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 4387
	movzx	eax, BYTE PTR _unicodeMask$[ebp]
	and	eax, 1
	jne	SHORT $LN107@ucnv_MBCSF
; Line 4389
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _prevLength$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 4391
	jmp	$unassigned$71908
	jmp	$unassigned$71908
$LN107@ucnv_MBCSF:
; Line 4395
	jmp	SHORT $LN105@ucnv_MBCSF
$LN108@ucnv_MBCSF:
; Line 4398
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 4399
	jmp	$LN186@ucnv_MBCSF
$LN105@ucnv_MBCSF:
; Line 4401
	jmp	SHORT $LN104@ucnv_MBCSF
$LN109@ucnv_MBCSF:
; Line 4403
	jmp	$LN186@ucnv_MBCSF
$LN104@ucnv_MBCSF:
; Line 4405
	jmp	SHORT $LN111@ucnv_MBCSF
$LN110@ucnv_MBCSF:
; Line 4408
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 4409
	jmp	$LN186@ucnv_MBCSF
$LN111@ucnv_MBCSF:
; Line 4447
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _stage2Entry$[ebp], edx
; Line 4450
	movzx	eax, BYTE PTR _outputType$[ebp]
	mov	DWORD PTR tv385[ebp], eax
	mov	ecx, DWORD PTR tv385[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv385[ebp], ecx
	cmp	DWORD PTR tv385[ebp], 218		; 000000daH
	ja	$LN51@ucnv_MBCSF
	mov	edx, DWORD PTR tv385[ebp]
	movzx	eax, BYTE PTR $LN208@ucnv_MBCSF[edx]
	jmp	DWORD PTR $LN217@ucnv_MBCSF[eax*4]
$LN100@ucnv_MBCSF:
; Line 4452
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	DWORD PTR _value$[ebp], eax
; Line 4453
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN99@ucnv_MBCSF
; Line 4454
	mov	DWORD PTR _length$[ebp], 1
; Line 4455
	jmp	SHORT $LN98@ucnv_MBCSF
$LN99@ucnv_MBCSF:
; Line 4456
	mov	DWORD PTR _length$[ebp], 2
$LN98@ucnv_MBCSF:
; Line 4458
	jmp	$LN101@ucnv_MBCSF
$LN97@ucnv_MBCSF:
; Line 4470
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _prevLength$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 4471
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	DWORD PTR _value$[ebp], eax
; Line 4472
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	$LN96@ucnv_MBCSF
; Line 4473
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN95@ucnv_MBCSF
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	ecx, 16					; 00000010H
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _stage2Entry$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	jne	SHORT $LN95@ucnv_MBCSF
; Line 4475
	mov	DWORD PTR _length$[ebp], 0
	jmp	$LN94@ucnv_MBCSF
$LN95@ucnv_MBCSF:
; Line 4476
	cmp	DWORD PTR _prevLength$[ebp], 1
	jg	SHORT $LN93@ucnv_MBCSF
; Line 4477
	mov	DWORD PTR _length$[ebp], 1
; Line 4478
	jmp	SHORT $LN94@ucnv_MBCSF
$LN93@ucnv_MBCSF:
; Line 4480
	movzx	eax, BYTE PTR _siLength$[ebp]
	cmp	eax, 1
	jne	SHORT $LN91@ucnv_MBCSF
; Line 4481
	movzx	eax, BYTE PTR _siBytes$[ebp]
	shl	eax, 8
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4482
	mov	DWORD PTR _length$[ebp], 2
	jmp	SHORT $LN90@ucnv_MBCSF
$LN91@ucnv_MBCSF:
; Line 4483
	movzx	eax, BYTE PTR _siLength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN90@ucnv_MBCSF
; Line 4484
	movzx	eax, BYTE PTR _siBytes$[ebp+1]
	shl	eax, 8
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4485
	movzx	eax, BYTE PTR _siBytes$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4486
	mov	DWORD PTR _length$[ebp], 3
$LN90@ucnv_MBCSF:
; Line 4488
	mov	DWORD PTR _prevLength$[ebp], 1
$LN94@ucnv_MBCSF:
; Line 4490
	jmp	$LN88@ucnv_MBCSF
$LN96@ucnv_MBCSF:
; Line 4491
	cmp	DWORD PTR _prevLength$[ebp], 2
	jne	SHORT $LN87@ucnv_MBCSF
; Line 4492
	mov	DWORD PTR _length$[ebp], 2
; Line 4493
	jmp	SHORT $LN88@ucnv_MBCSF
$LN87@ucnv_MBCSF:
; Line 4495
	movzx	eax, BYTE PTR _soLength$[ebp]
	cmp	eax, 1
	jne	SHORT $LN85@ucnv_MBCSF
; Line 4496
	movzx	eax, BYTE PTR _soBytes$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4497
	mov	DWORD PTR _length$[ebp], 3
	jmp	SHORT $LN84@ucnv_MBCSF
$LN85@ucnv_MBCSF:
; Line 4498
	movzx	eax, BYTE PTR _soLength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN84@ucnv_MBCSF
; Line 4499
	movzx	eax, BYTE PTR _soBytes$[ebp+1]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4500
	movzx	eax, BYTE PTR _soBytes$[ebp]
	shl	eax, 24					; 00000018H
	or	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4501
	mov	DWORD PTR _length$[ebp], 4
$LN84@ucnv_MBCSF:
; Line 4503
	mov	DWORD PTR _prevLength$[ebp], 2
$LN88@ucnv_MBCSF:
; Line 4506
	jmp	$LN101@ucnv_MBCSF
$LN82@ucnv_MBCSF:
; Line 4509
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	DWORD PTR _value$[ebp], eax
; Line 4510
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN81@ucnv_MBCSF
; Line 4512
	mov	DWORD PTR _stage2Entry$[ebp], 0
	mov	eax, DWORD PTR _stage2Entry$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4513
	mov	DWORD PTR _length$[ebp], 0
; Line 4514
	jmp	SHORT $LN80@ucnv_MBCSF
$LN81@ucnv_MBCSF:
; Line 4515
	mov	DWORD PTR _length$[ebp], 2
$LN80@ucnv_MBCSF:
; Line 4517
	jmp	$LN101@ucnv_MBCSF
$LN79@ucnv_MBCSF:
; Line 4519
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	imul	eax, 3
	add	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 4520
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	or	ecx, eax
	mov	DWORD PTR _value$[ebp], ecx
; Line 4521
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN78@ucnv_MBCSF
; Line 4522
	mov	DWORD PTR _length$[ebp], 1
	jmp	SHORT $LN77@ucnv_MBCSF
$LN78@ucnv_MBCSF:
; Line 4523
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN76@ucnv_MBCSF
; Line 4524
	mov	DWORD PTR _length$[ebp], 2
; Line 4525
	jmp	SHORT $LN77@ucnv_MBCSF
$LN76@ucnv_MBCSF:
; Line 4526
	mov	DWORD PTR _length$[ebp], 3
$LN77@ucnv_MBCSF:
; Line 4528
	jmp	$LN101@ucnv_MBCSF
$LN74@ucnv_MBCSF:
; Line 4530
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _value$[ebp], eax
; Line 4531
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN73@ucnv_MBCSF
; Line 4532
	mov	DWORD PTR _length$[ebp], 1
	jmp	SHORT $LN72@ucnv_MBCSF
$LN73@ucnv_MBCSF:
; Line 4533
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN71@ucnv_MBCSF
; Line 4534
	mov	DWORD PTR _length$[ebp], 2
	jmp	SHORT $LN72@ucnv_MBCSF
$LN71@ucnv_MBCSF:
; Line 4535
	cmp	DWORD PTR _value$[ebp], 16777215	; 00ffffffH
	ja	SHORT $LN69@ucnv_MBCSF
; Line 4536
	mov	DWORD PTR _length$[ebp], 3
; Line 4537
	jmp	SHORT $LN72@ucnv_MBCSF
$LN69@ucnv_MBCSF:
; Line 4538
	mov	DWORD PTR _length$[ebp], 4
$LN72@ucnv_MBCSF:
; Line 4540
	jmp	$LN101@ucnv_MBCSF
$LN67@ucnv_MBCSF:
; Line 4542
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	DWORD PTR _value$[ebp], eax
; Line 4544
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN66@ucnv_MBCSF
; Line 4545
	mov	DWORD PTR _length$[ebp], 1
	jmp	SHORT $LN65@ucnv_MBCSF
$LN66@ucnv_MBCSF:
; Line 4546
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 32768				; 00008000H
	jne	SHORT $LN64@ucnv_MBCSF
; Line 4547
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, 9338880				; 008e8000H
	mov	DWORD PTR _value$[ebp], eax
; Line 4548
	mov	DWORD PTR _length$[ebp], 3
	jmp	SHORT $LN65@ucnv_MBCSF
$LN64@ucnv_MBCSF:
; Line 4549
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 128				; 00000080H
	jne	SHORT $LN62@ucnv_MBCSF
; Line 4550
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, 9371776				; 008f0080H
	mov	DWORD PTR _value$[ebp], eax
; Line 4551
	mov	DWORD PTR _length$[ebp], 3
; Line 4552
	jmp	SHORT $LN65@ucnv_MBCSF
$LN62@ucnv_MBCSF:
; Line 4553
	mov	DWORD PTR _length$[ebp], 2
$LN65@ucnv_MBCSF:
; Line 4555
	jmp	$LN101@ucnv_MBCSF
$LN60@ucnv_MBCSF:
; Line 4557
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	imul	eax, 3
	add	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 4558
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	or	ecx, eax
	mov	DWORD PTR _value$[ebp], ecx
; Line 4560
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN59@ucnv_MBCSF
; Line 4561
	mov	DWORD PTR _length$[ebp], 1
	jmp	SHORT $LN58@ucnv_MBCSF
$LN59@ucnv_MBCSF:
; Line 4562
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN57@ucnv_MBCSF
; Line 4563
	mov	DWORD PTR _length$[ebp], 2
	jmp	SHORT $LN58@ucnv_MBCSF
$LN57@ucnv_MBCSF:
; Line 4564
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 8388608				; 00800000H
	jne	SHORT $LN55@ucnv_MBCSF
; Line 4565
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, -1904214016			; 8e800000H
	mov	DWORD PTR _value$[ebp], eax
; Line 4566
	mov	DWORD PTR _length$[ebp], 4
	jmp	SHORT $LN58@ucnv_MBCSF
$LN55@ucnv_MBCSF:
; Line 4567
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 32768				; 00008000H
	jne	SHORT $LN53@ucnv_MBCSF
; Line 4568
	mov	eax, DWORD PTR _value$[ebp]
	or	eax, -1895792640			; 8f008000H
	mov	DWORD PTR _value$[ebp], eax
; Line 4569
	mov	DWORD PTR _length$[ebp], 4
; Line 4570
	jmp	SHORT $LN58@ucnv_MBCSF
$LN53@ucnv_MBCSF:
; Line 4571
	mov	DWORD PTR _length$[ebp], 3
$LN58@ucnv_MBCSF:
; Line 4573
	jmp	SHORT $LN101@ucnv_MBCSF
$LN51@ucnv_MBCSF:
; Line 4583
	mov	DWORD PTR _stage2Entry$[ebp], 0
	mov	eax, DWORD PTR _stage2Entry$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 4584
	mov	DWORD PTR _length$[ebp], 0
$LN101@ucnv_MBCSF:
; Line 4591
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	ecx, 16					; 00000010H
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _stage2Entry$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	jne	$LN112@ucnv_MBCSF
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+35]
	test	ecx, ecx
	jne	SHORT $LN48@ucnv_MBCSF
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 57344				; 0000e000H
	cmp	eax, 6400				; 00001900H
	jb	SHORT $LN48@ucnv_MBCSF
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 983040				; 000f0000H
	cmp	eax, 131072				; 00020000H
	jae	SHORT $unassigned$71908
$LN48@ucnv_MBCSF:
	cmp	DWORD PTR _value$[ebp], 0
	jne	$LN112@ucnv_MBCSF
$unassigned$71908:
; Line 4600
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 4606
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, DWORD PTR _targetCapacity$[ebp]
	push	edx
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ; _extFromU
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _c$[ebp], eax
; Line 4607
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	sar	ecx, 1
	add	ecx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _nextSourceIndex$[ebp], ecx
; Line 4608
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR _prevLength$[ebp], ecx
; Line 4610
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN46@ucnv_MBCSF
; Line 4612
	jmp	$LN186@ucnv_MBCSF
; Line 4613
	jmp	SHORT $LN112@ucnv_MBCSF
$LN46@ucnv_MBCSF:
; Line 4617
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 4620
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN44@ucnv_MBCSF
; Line 4621
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR _prevSourceIndex$[ebp], eax
; Line 4622
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
$LN44@ucnv_MBCSF:
; Line 4624
	jmp	$LN187@ucnv_MBCSF
$LN112@ucnv_MBCSF:
; Line 4631
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _targetCapacity$[ebp]
	jg	$LN43@ucnv_MBCSF
; Line 4632
	cmp	DWORD PTR _offsets$[ebp], 0
	jne	$LN42@ucnv_MBCSF
; Line 4633
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv559[ebp], eax
	mov	ecx, DWORD PTR tv559[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv559[ebp], ecx
	cmp	DWORD PTR tv559[ebp], 3
	ja	SHORT $LN40@ucnv_MBCSF
	mov	edx, DWORD PTR tv559[ebp]
	jmp	DWORD PTR $LN218@ucnv_MBCSF[edx*4]
$LN39@ucnv_MBCSF:
; Line 4636
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
$LN38@ucnv_MBCSF:
; Line 4638
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
$LN37@ucnv_MBCSF:
; Line 4640
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
$LN36@ucnv_MBCSF:
; Line 4642
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
$LN40@ucnv_MBCSF:
; Line 4647
	jmp	$LN34@ucnv_MBCSF
$LN42@ucnv_MBCSF:
; Line 4648
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv572[ebp], eax
	mov	ecx, DWORD PTR tv572[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv572[ebp], ecx
	cmp	DWORD PTR tv572[ebp], 3
	ja	$LN34@ucnv_MBCSF
	mov	edx, DWORD PTR tv572[ebp]
	jmp	DWORD PTR $LN219@ucnv_MBCSF[edx*4]
$LN31@ucnv_MBCSF:
; Line 4651
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4652
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN30@ucnv_MBCSF:
; Line 4654
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4655
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN29@ucnv_MBCSF:
; Line 4657
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4658
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN28@ucnv_MBCSF:
; Line 4660
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4661
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN34@ucnv_MBCSF:
; Line 4667
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 4668
	jmp	$LN26@ucnv_MBCSF
$LN43@ucnv_MBCSF:
; Line 4678
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _targetCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 4679
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 76					; 0000004cH
	mov	DWORD PTR _charErrorBuffer$72128[ebp], eax
; Line 4680
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv592[ebp], eax
	cmp	DWORD PTR tv592[ebp], 1
	je	SHORT $LN21@ucnv_MBCSF
	cmp	DWORD PTR tv592[ebp], 2
	je	SHORT $LN22@ucnv_MBCSF
	cmp	DWORD PTR tv592[ebp], 3
	je	SHORT $LN23@ucnv_MBCSF
	jmp	SHORT $LN24@ucnv_MBCSF
$LN23@ucnv_MBCSF:
; Line 4683
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _charErrorBuffer$72128[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _charErrorBuffer$72128[ebp]
	add	edx, 1
	mov	DWORD PTR _charErrorBuffer$72128[ebp], edx
$LN22@ucnv_MBCSF:
; Line 4685
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _charErrorBuffer$72128[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _charErrorBuffer$72128[ebp]
	add	edx, 1
	mov	DWORD PTR _charErrorBuffer$72128[ebp], edx
$LN21@ucnv_MBCSF:
; Line 4687
	mov	eax, DWORD PTR _charErrorBuffer$72128[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
$LN24@ucnv_MBCSF:
; Line 4692
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _length$[ebp]
	mov	BYTE PTR [eax+63], cl
; Line 4695
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 3
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, cl
	mov	DWORD PTR _value$[ebp], eax
; Line 4696
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	mov	DWORD PTR tv605[ebp], eax
	cmp	DWORD PTR tv605[ebp], 1
	je	SHORT $LN13@ucnv_MBCSF
	cmp	DWORD PTR tv605[ebp], 2
	je	SHORT $LN15@ucnv_MBCSF
	cmp	DWORD PTR tv605[ebp], 3
	je	SHORT $LN17@ucnv_MBCSF
	jmp	$LN18@ucnv_MBCSF
$LN17@ucnv_MBCSF:
; Line 4699
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4700
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN15@ucnv_MBCSF
; Line 4701
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN15@ucnv_MBCSF:
; Line 4704
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4705
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN13@ucnv_MBCSF
; Line 4706
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN13@ucnv_MBCSF:
; Line 4709
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4710
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN18@ucnv_MBCSF
; Line 4711
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN18@ucnv_MBCSF:
; Line 4719
	mov	DWORD PTR _targetCapacity$[ebp], 0
; Line 4720
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 4721
	mov	DWORD PTR _c$[ebp], 0
; Line 4722
	jmp	SHORT $LN186@ucnv_MBCSF
$LN26@ucnv_MBCSF:
; Line 4726
	mov	DWORD PTR _c$[ebp], 0
; Line 4727
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN10@ucnv_MBCSF
; Line 4728
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR _prevSourceIndex$[ebp], eax
; Line 4729
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
$LN10@ucnv_MBCSF:
; Line 4731
	jmp	$LN187@ucnv_MBCSF
; Line 4732
	jmp	SHORT $LN9@ucnv_MBCSF
$LN185@ucnv_MBCSF:
; Line 4734
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 4735
	jmp	SHORT $LN186@ucnv_MBCSF
$LN9@ucnv_MBCSF:
; Line 4737
	jmp	$LN187@ucnv_MBCSF
$LN186@ucnv_MBCSF:
; Line 4752
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN8@ucnv_MBCSF
	movzx	eax, BYTE PTR _outputType$[ebp]
	cmp	eax, 12					; 0000000cH
	jne	$LN8@ucnv_MBCSF
	cmp	DWORD PTR _prevLength$[ebp], 2
	jne	$LN8@ucnv_MBCSF
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	je	$LN8@ucnv_MBCSF
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jb	$LN8@ucnv_MBCSF
	cmp	DWORD PTR _c$[ebp], 0
	jne	$LN8@ucnv_MBCSF
; Line 4754
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN7@ucnv_MBCSF
; Line 4755
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _siBytes$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 4756
	movzx	eax, BYTE PTR _siLength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN6@ucnv_MBCSF
; Line 4757
	cmp	DWORD PTR _targetCapacity$[ebp], 2
	jge	SHORT $LN5@ucnv_MBCSF
; Line 4758
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _siBytes$[ebp+1]
	mov	BYTE PTR [eax+76], cl
; Line 4759
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+63], 1
; Line 4760
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 4761
	jmp	SHORT $LN6@ucnv_MBCSF
$LN5@ucnv_MBCSF:
; Line 4762
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _siBytes$[ebp+1]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
$LN6@ucnv_MBCSF:
; Line 4765
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN3@ucnv_MBCSF
; Line 4767
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _prevSourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN3@ucnv_MBCSF:
; Line 4769
	jmp	SHORT $LN2@ucnv_MBCSF
$LN7@ucnv_MBCSF:
; Line 4771
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _siBytes$[ebp]
	mov	BYTE PTR [eax+76], cl
; Line 4772
	movzx	eax, BYTE PTR _siLength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN1@ucnv_MBCSF
; Line 4773
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _siBytes$[ebp+1]
	mov	BYTE PTR [eax+77], cl
$LN1@ucnv_MBCSF:
; Line 4775
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _siLength$[ebp]
	mov	BYTE PTR [eax+63], cl
; Line 4776
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN2@ucnv_MBCSF:
; Line 4778
	mov	DWORD PTR _prevLength$[ebp], 1
$LN8@ucnv_MBCSF:
; Line 4782
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 4783
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _prevLength$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 4786
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 4787
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4788
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN205@ucnv_MBCSF:
; Line 4789
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN215@ucnv_MBCSF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN215@ucnv_MBCSF:
	DD	5
	DD	$LN214@ucnv_MBCSF
$LN214@ucnv_MBCSF:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN209@ucnv_MBCSF
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN210@ucnv_MBCSF
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN211@ucnv_MBCSF
	DD	-224					; ffffff20H
	DD	2
	DD	$LN212@ucnv_MBCSF
	DD	-236					; ffffff14H
	DD	2
	DD	$LN213@ucnv_MBCSF
$LN213@ucnv_MBCSF:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN212@ucnv_MBCSF:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN211@ucnv_MBCSF:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN210@ucnv_MBCSF:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN209@ucnv_MBCSF:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
	npad	2
$LN216@ucnv_MBCSF:
	DD	$LN179@ucnv_MBCSF
	DD	$LN153@ucnv_MBCSF
	DD	$LN145@ucnv_MBCSF
	DD	$LN135@ucnv_MBCSF
	DD	$LN125@ucnv_MBCSF
	DD	$LN173@ucnv_MBCSF
	DD	$LN157@ucnv_MBCSF
	DD	$LN113@ucnv_MBCSF
$LN207@ucnv_MBCSF:
	DB	0
	DB	1
	DB	2
	DB	7
	DB	7
	DB	7
	DB	7
	DB	3
	DB	4
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
	npad	1
$LN217@ucnv_MBCSF:
	DD	$LN100@ucnv_MBCSF
	DD	$LN79@ucnv_MBCSF
	DD	$LN74@ucnv_MBCSF
	DD	$LN67@ucnv_MBCSF
	DD	$LN60@ucnv_MBCSF
	DD	$LN97@ucnv_MBCSF
	DD	$LN82@ucnv_MBCSF
	DD	$LN51@ucnv_MBCSF
$LN208@ucnv_MBCSF:
	DB	0
	DB	1
	DB	2
	DB	7
	DB	7
	DB	7
	DB	7
	DB	3
	DB	4
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
	npad	1
$LN218@ucnv_MBCSF:
	DD	$LN36@ucnv_MBCSF
	DD	$LN37@ucnv_MBCSF
	DD	$LN38@ucnv_MBCSF
	DD	$LN39@ucnv_MBCSF
$LN219@ucnv_MBCSF:
	DD	$LN28@ucnv_MBCSF
	DD	$LN29@ucnv_MBCSF
	DD	$LN30@ucnv_MBCSF
	DD	$LN31@ucnv_MBCSF
_ucnv_MBCSFromUnicodeWithOffsets_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z
_TEXT	SEGMENT
tv64 = -208						; size = 4
_SISOLength$ = -8					; size = 4
_option$ = 8						; size = 4
_cnvOption$ = 12					; size = 4
_value$ = 16						; size = 4
?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z PROC		; getSISOBytes, COMDAT
; Line 581
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 582
	mov	DWORD PTR _SISOLength$[ebp], 0
; Line 584
	mov	eax, DWORD PTR _option$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN15@getSISOByt
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN8@getSISOByt
	jmp	$LN16@getSISOByt
$LN15@getSISOByt:
; Line 586
	mov	eax, DWORD PTR _cnvOption$[ebp]
	and	eax, 4096				; 00001000H
	je	SHORT $LN14@getSISOByt
; Line 587
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 10			; 0000000aH
; Line 588
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax+1], 65			; 00000041H
; Line 589
	mov	DWORD PTR _SISOLength$[ebp], 2
	jmp	SHORT $LN13@getSISOByt
$LN14@getSISOByt:
; Line 590
	mov	eax, DWORD PTR _cnvOption$[ebp]
	and	eax, 8192				; 00002000H
	je	SHORT $LN12@getSISOByt
; Line 591
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 41			; 00000029H
; Line 592
	mov	DWORD PTR _SISOLength$[ebp], 1
	jmp	SHORT $LN13@getSISOByt
$LN12@getSISOByt:
; Line 593
	mov	eax, DWORD PTR _cnvOption$[ebp]
	and	eax, 16384				; 00004000H
	je	SHORT $LN10@getSISOByt
; Line 594
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 26			; 0000001aH
; Line 595
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax+1], 113			; 00000071H
; Line 596
	mov	DWORD PTR _SISOLength$[ebp], 2
; Line 597
	jmp	SHORT $LN13@getSISOByt
$LN10@getSISOByt:
; Line 598
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 15			; 0000000fH
; Line 599
	mov	DWORD PTR _SISOLength$[ebp], 1
$LN13@getSISOByt:
; Line 601
	jmp	SHORT $LN16@getSISOByt
$LN8@getSISOByt:
; Line 603
	mov	eax, DWORD PTR _cnvOption$[ebp]
	and	eax, 4096				; 00001000H
	je	SHORT $LN7@getSISOByt
; Line 604
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 10			; 0000000aH
; Line 605
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax+1], 66			; 00000042H
; Line 606
	mov	DWORD PTR _SISOLength$[ebp], 2
	jmp	SHORT $LN16@getSISOByt
$LN7@getSISOByt:
; Line 607
	mov	eax, DWORD PTR _cnvOption$[ebp]
	and	eax, 8192				; 00002000H
	je	SHORT $LN5@getSISOByt
; Line 608
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 40			; 00000028H
; Line 609
	mov	DWORD PTR _SISOLength$[ebp], 1
	jmp	SHORT $LN16@getSISOByt
$LN5@getSISOByt:
; Line 610
	mov	eax, DWORD PTR _cnvOption$[ebp]
	and	eax, 16384				; 00004000H
	je	SHORT $LN3@getSISOByt
; Line 611
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 26			; 0000001aH
; Line 612
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax+1], 112			; 00000070H
; Line 613
	mov	DWORD PTR _SISOLength$[ebp], 2
; Line 614
	jmp	SHORT $LN16@getSISOByt
$LN3@getSISOByt:
; Line 615
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 14			; 0000000eH
; Line 616
	mov	DWORD PTR _SISOLength$[ebp], 1
$LN16@getSISOByt:
; Line 624
	mov	eax, DWORD PTR _SISOLength$[ebp]
; Line 625
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z ENDP		; getSISOBytes
_TEXT	ENDS
EXTRN	_ucnv_fromUWriteBytes_56:PROC
EXTRN	_ucnv_extInitialMatchFromU_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_bytes$70657 = -56					; size = 4
_linear$70656 = -44					; size = 4
_i$70648 = -32						; size = 4
_range$70647 = -20					; size = 4
_cx$ = -8						; size = 4
_cnv$ = 8						; size = 4
_sharedData$ = 12					; size = 4
_cp$ = 16						; size = 4
_source$ = 20						; size = 4
_sourceLimit$ = 24					; size = 4
_target$ = 28						; size = 4
_targetLimit$ = 32					; size = 4
_offsets$ = 36						; size = 4
_sourceIndex$ = 40					; size = 4
_flush$ = 44						; size = 1
_pErrorCode$ = 48					; size = 4
?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z PROC ; _extFromU, COMDAT
; Line 1104
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1107
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+67], 0
; Line 1117
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	DWORD PTR _cx$[ebp], ecx
	cmp	DWORD PTR _cx$[ebp], 0
	je	SHORT $LN6@extFromU
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _flush$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _offsets$[ebp]
	push	eax
	mov	ecx, DWORD PTR _targetLimit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cp$[ebp]
	push	edx
	mov	eax, DWORD PTR _cx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	_ucnv_extInitialMatchFromU_56
	add	esp, 44					; 0000002cH
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@extFromU
; Line 1118
	xor	eax, eax
	jmp	$LN7@extFromU
$LN6@extFromU:
; Line 1122
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 32768				; 00008000H
	je	$LN5@extFromU
; Line 1126
	mov	DWORD PTR _range$70647[ebp], OFFSET _gb18030Ranges
; Line 1127
	mov	DWORD PTR _i$70648[ebp], 0
	jmp	SHORT $LN4@extFromU
$LN3@extFromU:
	mov	eax, DWORD PTR _range$70647[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _range$70647[ebp], eax
	mov	ecx, DWORD PTR _i$70648[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$70648[ebp], ecx
$LN4@extFromU:
	cmp	DWORD PTR _i$70648[ebp], 14		; 0000000eH
	jge	$LN5@extFromU
; Line 1128
	mov	eax, DWORD PTR _range$70647[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _cp$[ebp]
	ja	$LN1@extFromU
	mov	eax, DWORD PTR _range$70647[ebp]
	mov	ecx, DWORD PTR _cp$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	ja	$LN1@extFromU
; Line 1134
	mov	eax, DWORD PTR _range$70647[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1687218				; 0019beb2H
	mov	DWORD PTR _linear$70656[ebp], ecx
; Line 1137
	mov	eax, DWORD PTR _range$70647[ebp]
	mov	ecx, DWORD PTR _cp$[ebp]
	sub	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _linear$70656[ebp]
	mov	DWORD PTR _linear$70656[ebp], ecx
; Line 1140
	mov	eax, DWORD PTR _linear$70656[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	add	edx, 48					; 00000030H
	mov	BYTE PTR _bytes$70657[ebp+3], dl
	mov	eax, DWORD PTR _linear$70656[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	mov	DWORD PTR _linear$70656[ebp], eax
; Line 1141
	mov	eax, DWORD PTR _linear$70656[ebp]
	xor	edx, edx
	mov	ecx, 126				; 0000007eH
	div	ecx
	add	edx, 129				; 00000081H
	mov	BYTE PTR _bytes$70657[ebp+2], dl
	mov	eax, DWORD PTR _linear$70656[ebp]
	xor	edx, edx
	mov	ecx, 126				; 0000007eH
	div	ecx
	mov	DWORD PTR _linear$70656[ebp], eax
; Line 1142
	mov	eax, DWORD PTR _linear$70656[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	add	edx, 48					; 00000030H
	mov	BYTE PTR _bytes$70657[ebp+1], dl
	mov	eax, DWORD PTR _linear$70656[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	mov	DWORD PTR _linear$70656[ebp], eax
; Line 1143
	mov	eax, DWORD PTR _linear$70656[ebp]
	add	eax, 129				; 00000081H
	mov	BYTE PTR _bytes$70657[ebp], al
; Line 1148
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	push	edx
	mov	eax, DWORD PTR _targetLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _bytes$70657[ebp]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	_ucnv_fromUWriteBytes_56
	add	esp, 32					; 00000020H
; Line 1149
	xor	eax, eax
	jmp	SHORT $LN7@extFromU
$LN1@extFromU:
; Line 1151
	jmp	$LN3@extFromU
$LN5@extFromU:
; Line 1155
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 10			; 0000000aH
; Line 1156
	mov	eax, DWORD PTR _cp$[ebp]
$LN7@extFromU:
; Line 1157
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@extFromU
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@extFromU:
	DD	1
	DD	$LN10@extFromU
$LN10@extFromU:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN9@extFromU
$LN9@extFromU:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ENDP ; _extFromU
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSDoubleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_trail$71671 = -200					; size = 2
_unicodeMask$ = -185					; size = 1
_value$ = -176						; size = 4
_asciiRoundtrips$ = -164				; size = 4
_stage2Entry$ = -152					; size = 4
_nextSourceIndex$ = -140				; size = 4
_sourceIndex$ = -128					; size = 4
_c$ = -116						; size = 4
_bytes$ = -104						; size = 4
_mbcsIndex$ = -92					; size = 4
_table$ = -80						; size = 4
_offsets$ = -68						; size = 4
_targetCapacity$ = -56					; size = 4
_target$ = -44						; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSDoubleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSDoubleFromUnicodeWithOffsets, COMDAT
; Line 3396
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3417
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 3418
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	dl, BYTE PTR [ecx+201]
	mov	BYTE PTR _unicodeMask$[ebp], dl
; Line 3421
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 3422
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 3423
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 3424
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 3425
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 3427
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _table$[ebp], edx
; Line 3428
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _mbcsIndex$[ebp], edx
; Line 3429
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN36@ucnv_MBCSD
; Line 3430
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _bytes$[ebp], edx
; Line 3431
	jmp	SHORT $LN35@ucnv_MBCSD
$LN36@ucnv_MBCSD:
; Line 3432
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _bytes$[ebp], edx
$LN35@ucnv_MBCSD:
; Line 3434
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _asciiRoundtrips$[ebp], edx
; Line 3437
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _c$[ebp], ecx
; Line 3440
	mov	eax, DWORD PTR _c$[ebp]
	neg	eax
	sbb	eax, eax
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3441
	mov	DWORD PTR _nextSourceIndex$[ebp], 0
; Line 3444
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN32@ucnv_MBCSD
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN32@ucnv_MBCSD
; Line 3445
	jmp	$getTrail$71653
	jmp	$getTrail$71653
$LN32@ucnv_MBCSD:
; Line 3448
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN31@ucnv_MBCSD
; Line 3457
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN30@ucnv_MBCSD
; Line 3463
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 2
	mov	DWORD PTR _source$[ebp], edx
; Line 3464
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 3465
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jg	SHORT $LN29@ucnv_MBCSD
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 2
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _asciiRoundtrips$[ebp]
	je	SHORT $LN29@ucnv_MBCSD
; Line 3466
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3467
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN28@ucnv_MBCSD
; Line 3468
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
; Line 3469
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
$LN28@ucnv_MBCSD:
; Line 3471
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 3472
	mov	DWORD PTR _c$[ebp], 0
; Line 3473
	jmp	$LN32@ucnv_MBCSD
$LN29@ucnv_MBCSD:
; Line 3480
	cmp	DWORD PTR _c$[ebp], 55295		; 0000d7ffH
	jg	SHORT $LN27@ucnv_MBCSD
; Line 3481
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 6
	mov	ecx, DWORD PTR _mbcsIndex$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _bytes$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 3483
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN26@ucnv_MBCSD
; Line 3484
	jmp	$unassigned$71665
	jmp	$unassigned$71665
$LN26@ucnv_MBCSD:
; Line 3487
	jmp	$LN24@ucnv_MBCSD
$LN27@ucnv_MBCSD:
; Line 3493
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	jne	$LN23@ucnv_MBCSD
	movzx	eax, BYTE PTR _unicodeMask$[ebp]
	and	eax, 2
	jne	$LN23@ucnv_MBCSD
; Line 3494
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1024				; 00000400H
	jne	$LN22@ucnv_MBCSD
$getTrail$71653:
; Line 3496
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN21@ucnv_MBCSD
; Line 3498
	mov	eax, DWORD PTR _source$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _trail$71671[ebp], cx
; Line 3499
	movzx	eax, WORD PTR _trail$71671[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN20@ucnv_MBCSD
; Line 3500
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 3501
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 3502
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _trail$71671[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 3503
	movzx	eax, BYTE PTR _unicodeMask$[ebp]
	and	eax, 1
	jne	SHORT $LN19@ucnv_MBCSD
; Line 3506
	jmp	$unassigned$71665
	jmp	$unassigned$71665
$LN19@ucnv_MBCSD:
; Line 3510
	jmp	SHORT $LN17@ucnv_MBCSD
$LN20@ucnv_MBCSD:
; Line 3513
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3514
	jmp	$LN31@ucnv_MBCSD
$LN17@ucnv_MBCSD:
; Line 3516
	jmp	SHORT $LN16@ucnv_MBCSD
$LN21@ucnv_MBCSD:
; Line 3518
	jmp	$LN31@ucnv_MBCSD
$LN16@ucnv_MBCSD:
; Line 3520
	jmp	SHORT $LN23@ucnv_MBCSD
$LN22@ucnv_MBCSD:
; Line 3523
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3524
	jmp	$LN31@ucnv_MBCSD
$LN23@ucnv_MBCSD:
; Line 3529
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _stage2Entry$[ebp], edx
; Line 3533
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	DWORD PTR _value$[ebp], eax
; Line 3538
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	ecx, 16					; 00000010H
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _stage2Entry$[ebp]
	jne	$LN24@ucnv_MBCSD
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+35]
	test	ecx, ecx
	jne	SHORT $LN12@ucnv_MBCSD
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 57344				; 0000e000H
	cmp	eax, 6400				; 00001900H
	jb	SHORT $LN12@ucnv_MBCSD
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 983040				; 000f0000H
	cmp	eax, 131072				; 00020000H
	jae	SHORT $unassigned$71665
$LN12@ucnv_MBCSD:
	cmp	DWORD PTR _value$[ebp], 0
	jne	$LN24@ucnv_MBCSD
$unassigned$71665:
; Line 3547
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3553
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, DWORD PTR _targetCapacity$[ebp]
	push	edx
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ; _extFromU
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _c$[ebp], eax
; Line 3554
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	sar	ecx, 1
	add	ecx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _nextSourceIndex$[ebp], ecx
; Line 3556
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@ucnv_MBCSD
; Line 3558
	jmp	$LN31@ucnv_MBCSD
; Line 3559
	jmp	SHORT $LN24@ucnv_MBCSD
$LN10@ucnv_MBCSD:
; Line 3563
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 3566
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3567
	jmp	$LN32@ucnv_MBCSD
$LN24@ucnv_MBCSD:
; Line 3574
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN8@ucnv_MBCSD
; Line 3576
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3577
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN7@ucnv_MBCSD
; Line 3578
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN7@ucnv_MBCSD:
; Line 3580
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 3581
	jmp	$LN6@ucnv_MBCSD
$LN8@ucnv_MBCSD:
; Line 3582
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3583
	cmp	DWORD PTR _targetCapacity$[ebp], 2
	jl	SHORT $LN5@ucnv_MBCSD
; Line 3584
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3585
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN4@ucnv_MBCSD
; Line 3586
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
; Line 3587
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN4@ucnv_MBCSD:
; Line 3589
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 2
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 3590
	jmp	SHORT $LN6@ucnv_MBCSD
$LN5@ucnv_MBCSD:
; Line 3591
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN2@ucnv_MBCSD
; Line 3592
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN2@ucnv_MBCSD:
; Line 3594
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax+76], cl
; Line 3595
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+63], 1
; Line 3598
	mov	DWORD PTR _targetCapacity$[ebp], 0
; Line 3599
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 3600
	mov	DWORD PTR _c$[ebp], 0
; Line 3601
	jmp	SHORT $LN31@ucnv_MBCSD
$LN6@ucnv_MBCSD:
; Line 3606
	mov	DWORD PTR _c$[ebp], 0
; Line 3607
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3608
	jmp	$LN32@ucnv_MBCSD
; Line 3609
	jmp	SHORT $LN1@ucnv_MBCSD
$LN30@ucnv_MBCSD:
; Line 3611
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 3612
	jmp	SHORT $LN31@ucnv_MBCSD
$LN1@ucnv_MBCSD:
; Line 3614
	jmp	$LN32@ucnv_MBCSD
$LN31@ucnv_MBCSD:
; Line 3617
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 3620
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3621
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 3622
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 3623
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@ucnv_MBCSD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN43@ucnv_MBCSD:
	DD	3
	DD	$LN42@ucnv_MBCSD
$LN42@ucnv_MBCSD:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN39@ucnv_MBCSD
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN40@ucnv_MBCSD
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN41@ucnv_MBCSD
$LN41@ucnv_MBCSD:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN40@ucnv_MBCSD:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN39@ucnv_MBCSD:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?ucnv_MBCSDoubleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSDoubleFromUnicodeWithOffsets
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSSingleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_trail$71746 = -176					; size = 2
_hasSupplementary$ = -161				; size = 1
_minValue$ = -152					; size = 2
_value$ = -140						; size = 2
_nextSourceIndex$ = -128				; size = 4
_sourceIndex$ = -116					; size = 4
_c$ = -104						; size = 4
_results$ = -92						; size = 4
_table$ = -80						; size = 4
_offsets$ = -68						; size = 4
_targetCapacity$ = -56					; size = 4
_target$ = -44						; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSSingleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSSingleFromUnicodeWithOffsets, COMDAT
; Line 3628
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3646
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 3647
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 3648
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 3649
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 3650
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 3651
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 3653
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _table$[ebp], edx
; Line 3654
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN24@ucnv_MBCSS@5
; Line 3655
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _results$[ebp], edx
; Line 3656
	jmp	SHORT $LN23@ucnv_MBCSS@5
$LN24@ucnv_MBCSS@5:
; Line 3657
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _results$[ebp], edx
$LN23@ucnv_MBCSS@5:
; Line 3660
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+35]
	test	ecx, ecx
	je	SHORT $LN22@ucnv_MBCSS@5
; Line 3662
	mov	eax, 2048				; 00000800H
	mov	WORD PTR _minValue$[ebp], ax
; Line 3663
	jmp	SHORT $LN21@ucnv_MBCSS@5
$LN22@ucnv_MBCSS@5:
; Line 3665
	mov	eax, 3072				; 00000c00H
	mov	WORD PTR _minValue$[ebp], ax
$LN21@ucnv_MBCSS@5:
; Line 3667
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+201]
	and	edx, 1
	mov	BYTE PTR _hasSupplementary$[ebp], dl
; Line 3670
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _c$[ebp], ecx
; Line 3673
	mov	eax, DWORD PTR _c$[ebp]
	neg	eax
	sbb	eax, eax
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3674
	mov	DWORD PTR _nextSourceIndex$[ebp], 0
; Line 3677
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN18@ucnv_MBCSS@5
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN18@ucnv_MBCSS@5
; Line 3678
	jmp	SHORT $getTrail$71737
	jmp	SHORT $getTrail$71737
$LN18@ucnv_MBCSS@5:
; Line 3681
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN17@ucnv_MBCSS@5
; Line 3690
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN16@ucnv_MBCSS@5
; Line 3696
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 2
	mov	DWORD PTR _source$[ebp], edx
; Line 3697
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 3698
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	jne	$LN15@ucnv_MBCSS@5
; Line 3699
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1024				; 00000400H
	jne	SHORT $LN14@ucnv_MBCSS@5
$getTrail$71737:
; Line 3701
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN13@ucnv_MBCSS@5
; Line 3703
	mov	eax, DWORD PTR _source$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _trail$71746[ebp], cx
; Line 3704
	movzx	eax, WORD PTR _trail$71746[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN12@ucnv_MBCSS@5
; Line 3705
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 3706
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nextSourceIndex$[ebp], eax
; Line 3707
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _trail$71746[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 3708
	movsx	eax, BYTE PTR _hasSupplementary$[ebp]
	test	eax, eax
	jne	SHORT $LN11@ucnv_MBCSS@5
; Line 3711
	jmp	$unassigned$71751
	jmp	$unassigned$71751
$LN11@ucnv_MBCSS@5:
; Line 3715
	jmp	SHORT $LN9@ucnv_MBCSS@5
$LN12@ucnv_MBCSS@5:
; Line 3718
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3719
	jmp	$LN17@ucnv_MBCSS@5
$LN9@ucnv_MBCSS@5:
; Line 3721
	jmp	SHORT $LN8@ucnv_MBCSS@5
$LN13@ucnv_MBCSS@5:
; Line 3723
	jmp	$LN17@ucnv_MBCSS@5
$LN8@ucnv_MBCSS@5:
; Line 3725
	jmp	SHORT $LN15@ucnv_MBCSS@5
$LN14@ucnv_MBCSS@5:
; Line 3728
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3729
	jmp	$LN17@ucnv_MBCSS@5
$LN15@ucnv_MBCSS@5:
; Line 3734
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 15					; 0000000fH
	add	edx, eax
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 3737
	movzx	eax, WORD PTR _value$[ebp]
	movzx	ecx, WORD PTR _minValue$[ebp]
	cmp	eax, ecx
	jl	SHORT $unassigned$71751
; Line 3741
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3742
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN5@ucnv_MBCSS@5
; Line 3743
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
$LN5@ucnv_MBCSS@5:
; Line 3745
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 3748
	mov	DWORD PTR _c$[ebp], 0
; Line 3749
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3750
	jmp	$LN4@ucnv_MBCSS@5
$unassigned$71751:
; Line 3753
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3759
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, DWORD PTR _targetCapacity$[ebp]
	push	edx
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ; _extFromU
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _c$[ebp], eax
; Line 3760
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	sar	ecx, 1
	add	ecx, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _nextSourceIndex$[ebp], ecx
; Line 3762
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucnv_MBCSS@5
; Line 3764
	jmp	SHORT $LN17@ucnv_MBCSS@5
; Line 3765
	jmp	SHORT $LN4@ucnv_MBCSS@5
$LN3@ucnv_MBCSS@5:
; Line 3769
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 3772
	mov	eax, DWORD PTR _nextSourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
$LN4@ucnv_MBCSS@5:
; Line 3775
	jmp	SHORT $LN1@ucnv_MBCSS@5
$LN16@ucnv_MBCSS@5:
; Line 3777
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 3778
	jmp	SHORT $LN17@ucnv_MBCSS@5
$LN1@ucnv_MBCSS@5:
; Line 3780
	jmp	$LN18@ucnv_MBCSS@5
$LN17@ucnv_MBCSS@5:
; Line 3783
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 3786
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 3787
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 3788
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 3789
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@ucnv_MBCSS@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN31@ucnv_MBCSS@5:
	DD	3
	DD	$LN30@ucnv_MBCSS@5
$LN30@ucnv_MBCSS@5:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN27@ucnv_MBCSS@5
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN28@ucnv_MBCSS@5
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN29@ucnv_MBCSS@5
$LN29@ucnv_MBCSS@5:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN28@ucnv_MBCSS@5:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN27@ucnv_MBCSS@5:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?ucnv_MBCSSingleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSSingleFromUnicodeWithOffsets
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSSingleFromBMPWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_count$71837 = -212					; size = 4
_count$71821 = -200					; size = 4
_trail$71811 = -188					; size = 2
_minValue$ = -176					; size = 2
_value$ = -164						; size = 2
_asciiRoundtrips$ = -152				; size = 4
_sourceIndex$ = -140					; size = 4
_c$ = -128						; size = 4
_results$ = -116					; size = 4
_table$ = -104						; size = 4
_offsets$ = -92						; size = 4
_length$ = -80						; size = 4
_targetCapacity$ = -68					; size = 4
_target$ = -56						; size = 4
_lastSource$ = -44					; size = 4
_sourceLimit$ = -32					; size = 4
_source$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
?ucnv_MBCSSingleFromBMPWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_MBCSSingleFromBMPWithOffsets, COMDAT
; Line 3804
	push	ebp
	mov	ebp, esp
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3822
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 3823
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 3824
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 3825
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _pArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 3827
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _offsets$[ebp], ecx
; Line 3829
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _table$[ebp], edx
; Line 3830
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN32@ucnv_MBCSS@6
; Line 3831
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _results$[ebp], edx
; Line 3832
	jmp	SHORT $LN31@ucnv_MBCSS@6
$LN32@ucnv_MBCSS@6:
; Line 3833
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _results$[ebp], edx
$LN31@ucnv_MBCSS@6:
; Line 3835
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _asciiRoundtrips$[ebp], edx
; Line 3837
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+35]
	test	ecx, ecx
	je	SHORT $LN30@ucnv_MBCSS@6
; Line 3839
	mov	eax, 2048				; 00000800H
	mov	WORD PTR _minValue$[ebp], ax
; Line 3840
	jmp	SHORT $LN29@ucnv_MBCSS@6
$LN30@ucnv_MBCSS@6:
; Line 3842
	mov	eax, 3072				; 00000c00H
	mov	WORD PTR _minValue$[ebp], ax
$LN29@ucnv_MBCSS@6:
; Line 3846
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _c$[ebp], ecx
; Line 3849
	mov	eax, DWORD PTR _c$[ebp]
	neg	eax
	sbb	eax, eax
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3850
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
; Line 3856
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	sar	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 3857
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _targetCapacity$[ebp]
	jge	SHORT $LN28@ucnv_MBCSS@6
; Line 3858
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], eax
$LN28@ucnv_MBCSS@6:
; Line 3862
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN25@ucnv_MBCSS@6
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN25@ucnv_MBCSS@6
; Line 3863
	jmp	$getTrail$71797
	jmp	$getTrail$71797
$LN25@ucnv_MBCSS@6:
; Line 3915
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN24@ucnv_MBCSS@6
; Line 3921
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 2
	mov	DWORD PTR _source$[ebp], edx
; Line 3928
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jg	SHORT $LN23@ucnv_MBCSS@6
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 2
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _asciiRoundtrips$[ebp]
	je	SHORT $LN23@ucnv_MBCSS@6
; Line 3929
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3930
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 3931
	mov	DWORD PTR _c$[ebp], 0
; Line 3932
	jmp	SHORT $LN25@ucnv_MBCSS@6
$LN23@ucnv_MBCSS@6:
; Line 3934
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 15					; 0000000fH
	add	edx, eax
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 3936
	movzx	eax, WORD PTR _value$[ebp]
	movzx	ecx, WORD PTR _minValue$[ebp]
	cmp	eax, ecx
	jl	SHORT $LN22@ucnv_MBCSS@6
; Line 3940
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 3941
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 3944
	mov	DWORD PTR _c$[ebp], 0
; Line 3945
	jmp	$LN25@ucnv_MBCSS@6
	jmp	$LN21@ucnv_MBCSS@6
$LN22@ucnv_MBCSS@6:
; Line 3946
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	je	SHORT $LN20@ucnv_MBCSS@6
	jmp	$LN21@ucnv_MBCSS@6
$LN20@ucnv_MBCSS@6:
; Line 3948
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1024				; 00000400H
	jne	SHORT $LN18@ucnv_MBCSS@6
$getTrail$71797:
; Line 3950
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN17@ucnv_MBCSS@6
; Line 3952
	mov	eax, DWORD PTR _source$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _trail$71811[ebp], cx
; Line 3953
	movzx	eax, WORD PTR _trail$71811[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN16@ucnv_MBCSS@6
; Line 3954
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 3955
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _trail$71811[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 3958
	jmp	SHORT $LN15@ucnv_MBCSS@6
$LN16@ucnv_MBCSS@6:
; Line 3961
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3962
	jmp	$LN24@ucnv_MBCSS@6
$LN15@ucnv_MBCSS@6:
; Line 3964
	jmp	SHORT $LN14@ucnv_MBCSS@6
$LN17@ucnv_MBCSS@6:
; Line 3966
	mov	eax, DWORD PTR _pArgs$[ebp]
	movsx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	je	SHORT $LN13@ucnv_MBCSS@6
; Line 3967
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 11			; 0000000bH
$LN13@ucnv_MBCSS@6:
; Line 3969
	jmp	$LN24@ucnv_MBCSS@6
$LN14@ucnv_MBCSS@6:
; Line 3971
	jmp	SHORT $LN21@ucnv_MBCSS@6
$LN18@ucnv_MBCSS@6:
; Line 3974
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 3975
	jmp	$LN24@ucnv_MBCSS@6
$LN21@ucnv_MBCSS@6:
; Line 3981
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _length$[ebp], ecx
; Line 3984
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN11@ucnv_MBCSS@6
; Line 3985
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	sar	eax, 1
	mov	DWORD PTR _count$71821[ebp], eax
; Line 3988
	mov	eax, DWORD PTR _count$71821[ebp]
	sub	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _count$71821[ebp], eax
$LN10@ucnv_MBCSS@6:
; Line 3990
	cmp	DWORD PTR _count$71821[ebp], 0
	jle	SHORT $LN11@ucnv_MBCSS@6
; Line 3991
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 3992
	mov	eax, DWORD PTR _count$71821[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71821[ebp], eax
; Line 3993
	jmp	SHORT $LN10@ucnv_MBCSS@6
$LN11@ucnv_MBCSS@6:
; Line 3998
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
; Line 4004
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pArgs$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceLimit$[ebp]
	push	edx
	lea	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ; _extFromU
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _c$[ebp], eax
; Line 4005
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	sar	eax, 1
	add	eax, DWORD PTR _length$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 4006
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _lastSource$[ebp], eax
; Line 4008
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@ucnv_MBCSS@6
; Line 4010
	jmp	SHORT $LN24@ucnv_MBCSS@6
; Line 4011
	jmp	SHORT $LN7@ucnv_MBCSS@6
$LN8@ucnv_MBCSS@6:
; Line 4015
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 4016
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	sar	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 4017
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _targetCapacity$[ebp]
	jge	SHORT $LN7@ucnv_MBCSS@6
; Line 4018
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], eax
$LN7@ucnv_MBCSS@6:
; Line 4026
	jmp	$LN25@ucnv_MBCSS@6
$LN24@ucnv_MBCSS@6:
; Line 4028
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ucnv_MBCSS@6
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN5@ucnv_MBCSS@6
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jb	SHORT $LN5@ucnv_MBCSS@6
; Line 4030
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN5@ucnv_MBCSS@6:
; Line 4034
	cmp	DWORD PTR _offsets$[ebp], 0
	je	SHORT $LN4@ucnv_MBCSS@6
; Line 4035
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _lastSource$[ebp]
	sar	eax, 1
	mov	DWORD PTR _count$71837[ebp], eax
; Line 4036
	je	SHORT $LN2@ucnv_MBCSS@6
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 11			; 0000000bH
	jne	SHORT $LN2@ucnv_MBCSS@6
; Line 4042
	mov	eax, DWORD PTR _count$71837[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71837[ebp], eax
$LN2@ucnv_MBCSS@6:
; Line 4044
	cmp	DWORD PTR _count$71837[ebp], 0
	jbe	SHORT $LN4@ucnv_MBCSS@6
; Line 4045
	mov	eax, DWORD PTR _offsets$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _offsets$[ebp]
	add	edx, 4
	mov	DWORD PTR _offsets$[ebp], edx
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 4046
	mov	eax, DWORD PTR _count$71837[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$71837[ebp], eax
; Line 4047
	jmp	SHORT $LN2@ucnv_MBCSS@6
$LN4@ucnv_MBCSS@6:
; Line 4051
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 4054
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 4055
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4056
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR _offsets$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4057
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@ucnv_MBCSS@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN40@ucnv_MBCSS@6:
	DD	3
	DD	$LN39@ucnv_MBCSS@6
$LN39@ucnv_MBCSS@6:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN36@ucnv_MBCSS@6
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN37@ucnv_MBCSS@6
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN38@ucnv_MBCSS@6
$LN38@ucnv_MBCSS@6:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN37@ucnv_MBCSS@6:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN36@ucnv_MBCSS@6:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?ucnv_MBCSSingleFromBMPWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_MBCSSingleFromBMPWithOffsets
_TEXT	ENDS
PUBLIC	_ucnv_MBCSFromUChar32_56
EXTRN	_ucnv_extSimpleMatchFromU_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSFromUChar32_56
_TEXT	SEGMENT
tv182 = -256						; size = 4
tv146 = -256						; size = 4
tv131 = -256						; size = 4
_length$ = -56						; size = 4
_value$ = -44						; size = 4
_stage2Entry$ = -32					; size = 4
_table$ = -20						; size = 4
_cx$ = -8						; size = 4
_sharedData$ = 8					; size = 4
_c$ = 12						; size = 4
_pValue$ = 16						; size = 4
_useFallback$ = 20					; size = 1
_ucnv_MBCSFromUChar32_56 PROC				; COMDAT
; Line 4811
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4823
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jle	SHORT $LN15@ucnv_MBCSF@2
	mov	eax, DWORD PTR _sharedData$[ebp]
	movzx	ecx, BYTE PTR [eax+201]
	and	ecx, 1
	je	$LN16@ucnv_MBCSF@2
$LN15@ucnv_MBCSF@2:
; Line 4824
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR _table$[ebp], ecx
; Line 4827
	mov	eax, DWORD PTR _sharedData$[ebp]
	movzx	ecx, BYTE PTR [eax+200]
	test	ecx, ecx
	jne	$LN14@ucnv_MBCSF@2
; Line 4828
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 15					; 0000000fH
	add	edx, eax
	mov	ecx, DWORD PTR _sharedData$[ebp]
	mov	eax, DWORD PTR [ecx+188]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _value$[ebp], ecx
; Line 4830
	movsx	eax, BYTE PTR _useFallback$[ebp]
	test	eax, eax
	je	SHORT $LN19@ucnv_MBCSF@2
	cmp	DWORD PTR _value$[ebp], 2048		; 00000800H
	sbb	ecx, ecx
	add	ecx, 1
	mov	DWORD PTR tv131[ebp], ecx
	jmp	SHORT $LN20@ucnv_MBCSF@2
$LN19@ucnv_MBCSF@2:
	cmp	DWORD PTR _value$[ebp], 3072		; 00000c00H
	sbb	edx, edx
	add	edx, 1
	mov	DWORD PTR tv131[ebp], edx
$LN20@ucnv_MBCSF@2:
	cmp	DWORD PTR tv131[ebp], 0
	je	SHORT $LN13@ucnv_MBCSF@2
; Line 4831
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _pValue$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 4832
	mov	eax, 1
	jmp	$LN17@ucnv_MBCSF@2
$LN13@ucnv_MBCSF@2:
; Line 4834
	jmp	$LN16@ucnv_MBCSF@2
$LN14@ucnv_MBCSF@2:
; Line 4835
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _stage2Entry$[ebp], edx
; Line 4838
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	cl, BYTE PTR [eax+200]
	mov	BYTE PTR tv146[ebp], cl
	cmp	BYTE PTR tv146[ebp], 1
	je	SHORT $LN9@ucnv_MBCSF@2
	jmp	SHORT $LN6@ucnv_MBCSF@2
$LN9@ucnv_MBCSF@2:
; Line 4840
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	edx, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [edx+188]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 4841
	cmp	DWORD PTR _value$[ebp], 255		; 000000ffH
	ja	SHORT $LN8@ucnv_MBCSF@2
; Line 4842
	mov	DWORD PTR _length$[ebp], 1
; Line 4843
	jmp	SHORT $LN7@ucnv_MBCSF@2
$LN8@ucnv_MBCSF@2:
; Line 4844
	mov	DWORD PTR _length$[ebp], 2
$LN7@ucnv_MBCSF@2:
; Line 4846
	jmp	SHORT $LN10@ucnv_MBCSF@2
$LN6@ucnv_MBCSF@2:
; Line 4919
	or	eax, -1
	jmp	$LN17@ucnv_MBCSF@2
$LN10@ucnv_MBCSF@2:
; Line 4925
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	ecx, 16					; 00000010H
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _stage2Entry$[ebp]
	jne	SHORT $LN4@ucnv_MBCSF@2
	movsx	eax, BYTE PTR _useFallback$[ebp]
	test	eax, eax
	jne	SHORT $LN3@ucnv_MBCSF@2
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 57344				; 0000e000H
	cmp	eax, 6400				; 00001900H
	jb	SHORT $LN3@ucnv_MBCSF@2
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 983040				; 000f0000H
	cmp	eax, 131072				; 00020000H
	jae	SHORT $LN16@ucnv_MBCSF@2
$LN3@ucnv_MBCSF@2:
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN16@ucnv_MBCSF@2
$LN4@ucnv_MBCSF@2:
; Line 4932
	mov	eax, DWORD PTR _pValue$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 4933
	mov	eax, DWORD PTR _length$[ebp]
	jmp	SHORT $LN17@ucnv_MBCSF@2
$LN16@ucnv_MBCSF@2:
; Line 4938
	mov	eax, DWORD PTR _sharedData$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	DWORD PTR _cx$[ebp], ecx
; Line 4939
	cmp	DWORD PTR _cx$[ebp], 0
	je	SHORT $LN1@ucnv_MBCSF@2
; Line 4940
	movzx	eax, BYTE PTR _useFallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _cx$[ebp]
	push	eax
	call	_ucnv_extSimpleMatchFromU_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _length$[ebp], eax
; Line 4941
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN21@ucnv_MBCSF@2
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv182[ebp], eax
	jmp	SHORT $LN22@ucnv_MBCSF@2
$LN21@ucnv_MBCSF@2:
	mov	ecx, DWORD PTR _length$[ebp]
	neg	ecx
	mov	DWORD PTR tv182[ebp], ecx
$LN22@ucnv_MBCSF@2:
	mov	eax, DWORD PTR tv182[ebp]
	jmp	SHORT $LN17@ucnv_MBCSF@2
$LN1@ucnv_MBCSF@2:
; Line 4945
	xor	eax, eax
$LN17@ucnv_MBCSF@2:
; Line 4946
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_MBCSFromUChar32_56 ENDP
_TEXT	ENDS
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv439 = -488						; size = 4
tv272 = -488						; size = 4
tv167 = -488						; size = 4
tv440 = -484						; size = 4
tv273 = -484						; size = 4
tv168 = -484						; size = 4
$T79901 = -473						; size = 1
_noSource$72334 = -272					; size = 4
_length$72252 = -260					; size = 4
_i$72251 = -248						; size = 4
_hasSupplementary$ = -233				; size = 1
_minValue$ = -224					; size = 2
_value$ = -212						; size = 2
_asciiRoundtrips$ = -200				; size = 4
_t2$ = -185						; size = 1
_t1$ = -173						; size = 1
_b$ = -161						; size = 1
_c$ = -152						; size = 4
_toULimit$ = -137					; size = 1
_toULength$ = -125					; size = 1
_oldToULength$ = -113					; size = 1
_results$ = -104					; size = 4
_sbcsIndex$ = -92					; size = 4
_table$ = -80						; size = 4
_targetCapacity$ = -68					; size = 4
_target$ = -56						; size = 4
_sourceLimit$ = -44					; size = 4
_source$ = -32						; size = 4
_cnv$ = -20						; size = 4
_utf8$ = -8						; size = 4
_pFromUArgs$ = 8					; size = 4
_pToUArgs$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
?ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_SBCSFromUTF8, COMDAT
; Line 5001
	push	ebp
	mov	ebp, esp
	sub	esp, 488				; 000001e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-488]
	mov	ecx, 122				; 0000007aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T79901[ebp], 0
; Line 5020
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _utf8$[ebp], ecx
; Line 5021
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 5022
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 5023
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 5024
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 5025
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _pFromUArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 5027
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _table$[ebp], edx
; Line 5028
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 60					; 0000003cH
	mov	DWORD PTR _sbcsIndex$[ebp], ecx
; Line 5029
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN61@ucnv_SBCSF@2
; Line 5030
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _results$[ebp], edx
; Line 5031
	jmp	SHORT $LN60@ucnv_SBCSF@2
$LN61@ucnv_SBCSF@2:
; Line 5032
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _results$[ebp], edx
$LN60@ucnv_SBCSF@2:
; Line 5034
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _asciiRoundtrips$[ebp], edx
; Line 5036
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+35]
	test	ecx, ecx
	je	SHORT $LN59@ucnv_SBCSF@2
; Line 5038
	mov	eax, 2048				; 00000800H
	mov	WORD PTR _minValue$[ebp], ax
; Line 5039
	jmp	SHORT $LN58@ucnv_SBCSF@2
$LN59@ucnv_SBCSF@2:
; Line 5041
	mov	eax, 3072				; 00000c00H
	mov	WORD PTR _minValue$[ebp], ax
$LN58@ucnv_SBCSF@2:
; Line 5043
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+201]
	and	edx, 1
	mov	BYTE PTR _hasSupplementary$[ebp], dl
; Line 5046
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _c$[ebp], ecx
; Line 5047
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN57@ucnv_SBCSF@2
; Line 5048
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR [eax+36]
	mov	BYTE PTR _oldToULength$[ebp], cl
	mov	dl, BYTE PTR _oldToULength$[ebp]
	mov	BYTE PTR _toULength$[ebp], dl
; Line 5049
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR [eax+48]
	mov	BYTE PTR _toULimit$[ebp], cl
; Line 5050
	jmp	SHORT $LN56@ucnv_SBCSF@2
$LN57@ucnv_SBCSF@2:
; Line 5051
	mov	BYTE PTR _toULimit$[ebp], 0
	mov	al, BYTE PTR _toULimit$[ebp]
	mov	BYTE PTR _oldToULength$[ebp], al
	mov	cl, BYTE PTR _oldToULength$[ebp]
	mov	BYTE PTR _toULength$[ebp], cl
$LN56@ucnv_SBCSF@2:
; Line 5065
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	movsx	edx, BYTE PTR _oldToULength$[ebp]
	sub	ecx, edx
	sub	eax, ecx
	mov	DWORD PTR _length$72252[ebp], eax
; Line 5066
	mov	DWORD PTR _i$72251[ebp], 0
$LN55@ucnv_SBCSF@2:
	cmp	DWORD PTR _i$72251[ebp], 3
	jge	$LN54@ucnv_SBCSF@2
	mov	eax, DWORD PTR _i$72251[ebp]
	cmp	eax, DWORD PTR _length$72252[ebp]
	jge	$LN54@ucnv_SBCSF@2
; Line 5067
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _i$72251[ebp]
	mov	cl, BYTE PTR [eax-1]
	mov	BYTE PTR _b$[ebp], cl
; Line 5068
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 192				; 000000c0H
	cmp	eax, 128				; 00000080H
	jne	SHORT $LN53@ucnv_SBCSF@2
; Line 5069
	mov	eax, DWORD PTR _i$72251[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72251[ebp], eax
; Line 5070
	jmp	$LN52@ucnv_SBCSF@2
$LN53@ucnv_SBCSF@2:
; Line 5071
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 240				; 000000f0H
	jge	SHORT $LN66@ucnv_SBCSF@2
	movzx	ecx, BYTE PTR _b$[ebp]
	xor	edx, edx
	cmp	ecx, 192				; 000000c0H
	setge	dl
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 224				; 000000e0H
	setge	cl
	add	edx, ecx
	mov	DWORD PTR tv168[ebp], edx
	jmp	SHORT $LN67@ucnv_SBCSF@2
$LN66@ucnv_SBCSF@2:
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 254				; 000000feH
	jge	SHORT $LN64@ucnv_SBCSF@2
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 248				; 000000f8H
	setge	cl
	movzx	edx, BYTE PTR _b$[ebp]
	xor	eax, eax
	cmp	edx, 252				; 000000fcH
	setge	al
	lea	ecx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR tv167[ebp], ecx
	jmp	SHORT $LN65@ucnv_SBCSF@2
$LN64@ucnv_SBCSF@2:
	mov	DWORD PTR tv167[ebp], 0
$LN65@ucnv_SBCSF@2:
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv168[ebp], edx
$LN67@ucnv_SBCSF@2:
	mov	eax, DWORD PTR _i$72251[ebp]
	cmp	eax, DWORD PTR tv168[ebp]
	jge	SHORT $LN51@ucnv_SBCSF@2
; Line 5073
	mov	eax, DWORD PTR _i$72251[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _sourceLimit$[ebp], ecx
$LN51@ucnv_SBCSF@2:
; Line 5075
	jmp	SHORT $LN54@ucnv_SBCSF@2
$LN52@ucnv_SBCSF@2:
; Line 5077
	jmp	$LN55@ucnv_SBCSF@2
$LN54@ucnv_SBCSF@2:
; Line 5080
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN48@ucnv_SBCSF@2
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN48@ucnv_SBCSF@2
; Line 5081
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 5082
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	BYTE PTR [eax+36], 0
; Line 5083
	jmp	$moreBytes$72267
	jmp	$moreBytes$72267
$LN48@ucnv_SBCSF@2:
; Line 5106
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN47@ucnv_SBCSF@2
; Line 5107
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN46@ucnv_SBCSF@2
; Line 5108
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 5109
	movsx	eax, BYTE PTR _b$[ebp]
	test	eax, eax
	jl	SHORT $LN45@ucnv_SBCSF@2
; Line 5111
	movzx	ecx, BYTE PTR _b$[ebp]
	sar	ecx, 2
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _asciiRoundtrips$[ebp]
	je	SHORT $LN44@ucnv_SBCSF@2
; Line 5112
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5113
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5114
	jmp	SHORT $LN48@ucnv_SBCSF@2
; Line 5115
	jmp	SHORT $LN43@ucnv_SBCSF@2
$LN44@ucnv_SBCSF@2:
; Line 5116
	movzx	eax, BYTE PTR _b$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 5117
	mov	eax, DWORD PTR _sbcsIndex$[ebp]
	movzx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _c$[ebp]
	mov	BYTE PTR $T79901[ebp], 1
	mov	edx, DWORD PTR _results$[ebp]
	mov	ax, WORD PTR [edx+ecx*2]
	mov	WORD PTR _value$[ebp], ax
$LN43@ucnv_SBCSF@2:
; Line 5119
	jmp	$LN42@ucnv_SBCSF@2
$LN45@ucnv_SBCSF@2:
; Line 5120
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 224				; 000000e0H
	jge	$LN41@ucnv_SBCSF@2
; Line 5124
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 194				; 000000c2H
	jl	$LN40@ucnv_SBCSF@2
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR _t1$[ebp], cl
	movzx	edx, BYTE PTR _t1$[ebp]
	cmp	edx, 63					; 0000003fH
	jg	$LN40@ucnv_SBCSF@2
; Line 5125
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 31					; 0000001fH
	mov	DWORD PTR _c$[ebp], eax
; Line 5126
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 5127
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _sbcsIndex$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	movzx	eax, BYTE PTR _t1$[ebp]
	add	edx, eax
	mov	BYTE PTR $T79901[ebp], 1
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 5128
	movzx	eax, WORD PTR _value$[ebp]
	movzx	ecx, WORD PTR _minValue$[ebp]
	cmp	eax, ecx
	jl	SHORT $LN39@ucnv_SBCSF@2
; Line 5129
	cmp	BYTE PTR $T79901[ebp], 0
	jne	SHORT $LN78@ucnv_SBCSF@2
	push	OFFSET $LN79@ucnv_SBCSF@2
	call	__RTC_UninitUse
	add	esp, 4
$LN78@ucnv_SBCSF@2:
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5130
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5131
	jmp	$LN48@ucnv_SBCSF@2
; Line 5132
	jmp	SHORT $LN38@ucnv_SBCSF@2
$LN39@ucnv_SBCSF@2:
; Line 5133
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _t1$[ebp]
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
$LN38@ucnv_SBCSF@2:
; Line 5135
	jmp	SHORT $LN37@ucnv_SBCSF@2
$LN40@ucnv_SBCSF@2:
; Line 5136
	mov	DWORD PTR _c$[ebp], -1
$LN37@ucnv_SBCSF@2:
; Line 5137
	jmp	$LN36@ucnv_SBCSF@2
$LN41@ucnv_SBCSF@2:
; Line 5138
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 224				; 000000e0H
	jne	$LN35@ucnv_SBCSF@2
; Line 5142
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR _t1$[ebp], cl
	movzx	edx, BYTE PTR _t1$[ebp]
	cmp	edx, 63					; 0000003fH
	jg	$LN34@ucnv_SBCSF@2
	movzx	eax, BYTE PTR _t1$[ebp]
	cmp	eax, 32					; 00000020H
	jl	$LN34@ucnv_SBCSF@2
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR _t2$[ebp], cl
	movzx	edx, BYTE PTR _t2$[ebp]
	cmp	edx, 63					; 0000003fH
	jg	$LN34@ucnv_SBCSF@2
; Line 5143
	movzx	eax, BYTE PTR _t1$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 5144
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 5145
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _sbcsIndex$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	movzx	eax, BYTE PTR _t2$[ebp]
	add	edx, eax
	mov	BYTE PTR $T79901[ebp], 1
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 5146
	movzx	eax, WORD PTR _value$[ebp]
	movzx	ecx, WORD PTR _minValue$[ebp]
	cmp	eax, ecx
	jl	SHORT $LN33@ucnv_SBCSF@2
; Line 5147
	cmp	BYTE PTR $T79901[ebp], 0
	jne	SHORT $LN80@ucnv_SBCSF@2
	push	OFFSET $LN79@ucnv_SBCSF@2
	call	__RTC_UninitUse
	add	esp, 4
$LN80@ucnv_SBCSF@2:
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5148
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5149
	jmp	$LN48@ucnv_SBCSF@2
; Line 5150
	jmp	SHORT $LN32@ucnv_SBCSF@2
$LN33@ucnv_SBCSF@2:
; Line 5151
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _t2$[ebp]
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
$LN32@ucnv_SBCSF@2:
; Line 5153
	jmp	SHORT $LN31@ucnv_SBCSF@2
$LN34@ucnv_SBCSF@2:
; Line 5154
	mov	DWORD PTR _c$[ebp], -1
$LN31@ucnv_SBCSF@2:
; Line 5156
	jmp	SHORT $LN36@ucnv_SBCSF@2
$LN35@ucnv_SBCSF@2:
; Line 5157
	mov	DWORD PTR _c$[ebp], -1
$LN36@ucnv_SBCSF@2:
; Line 5160
	cmp	DWORD PTR _c$[ebp], 0
	jge	$LN42@ucnv_SBCSF@2
; Line 5162
	mov	BYTE PTR _oldToULength$[ebp], 0
; Line 5163
	mov	BYTE PTR _toULength$[ebp], 1
; Line 5164
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 240				; 000000f0H
	jge	SHORT $LN70@ucnv_SBCSF@2
	movzx	ecx, BYTE PTR _b$[ebp]
	xor	edx, edx
	cmp	ecx, 192				; 000000c0H
	setge	dl
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 224				; 000000e0H
	setge	cl
	add	edx, ecx
	mov	DWORD PTR tv273[ebp], edx
	jmp	SHORT $LN71@ucnv_SBCSF@2
$LN70@ucnv_SBCSF@2:
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 254				; 000000feH
	jge	SHORT $LN68@ucnv_SBCSF@2
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 248				; 000000f8H
	setge	cl
	movzx	edx, BYTE PTR _b$[ebp]
	xor	eax, eax
	cmp	edx, 252				; 000000fcH
	setge	al
	lea	ecx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR tv272[ebp], ecx
	jmp	SHORT $LN69@ucnv_SBCSF@2
$LN68@ucnv_SBCSF@2:
	mov	DWORD PTR tv272[ebp], 0
$LN69@ucnv_SBCSF@2:
	mov	edx, DWORD PTR tv272[ebp]
	mov	DWORD PTR tv273[ebp], edx
$LN71@ucnv_SBCSF@2:
	mov	eax, DWORD PTR tv273[ebp]
	add	eax, 1
	mov	BYTE PTR _toULimit$[ebp], al
; Line 5165
	movzx	eax, BYTE PTR _b$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$moreBytes$72267:
; Line 5167
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	cmp	eax, ecx
	jge	$LN27@ucnv_SBCSF@2
; Line 5175
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN26@ucnv_SBCSF@2
; Line 5176
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
; Line 5177
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 192				; 000000c0H
	cmp	eax, 128				; 00000080H
	jne	SHORT $LN25@ucnv_SBCSF@2
; Line 5178
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 5179
	mov	al, BYTE PTR _toULength$[ebp]
	add	al, 1
	mov	BYTE PTR _toULength$[ebp], al
; Line 5180
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _b$[ebp]
	add	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5181
	jmp	SHORT $LN24@ucnv_SBCSF@2
$LN25@ucnv_SBCSF@2:
; Line 5182
	jmp	$LN27@ucnv_SBCSF@2
$LN24@ucnv_SBCSF@2:
; Line 5184
	jmp	SHORT $LN23@ucnv_SBCSF@2
$LN26@ucnv_SBCSF@2:
; Line 5186
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _oldToULength$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _source$[ebp]
	sub	edx, eax
	mov	DWORD PTR _source$[ebp], edx
$LN22@ucnv_SBCSF@2:
; Line 5187
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	movsx	ecx, BYTE PTR _toULength$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN21@ucnv_SBCSF@2
; Line 5188
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax+37], dl
	mov	al, BYTE PTR _oldToULength$[ebp]
	add	al, 1
	mov	BYTE PTR _oldToULength$[ebp], al
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 5189
	jmp	SHORT $LN22@ucnv_SBCSF@2
$LN21@ucnv_SBCSF@2:
; Line 5190
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 5191
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _toULength$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 5192
	movsx	eax, BYTE PTR _toULimit$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 5193
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 5194
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 5195
	jmp	$LN62@ucnv_SBCSF@2
$LN23@ucnv_SBCSF@2:
; Line 5197
	jmp	$moreBytes$72267
$LN27@ucnv_SBCSF@2:
; Line 5203
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	cmp	eax, ecx
	jne	$LN20@ucnv_SBCSF@2
	movsx	eax, BYTE PTR _toULength$[ebp]
	cmp	eax, 3
	je	SHORT $LN19@ucnv_SBCSF@2
	movsx	eax, BYTE PTR _toULength$[ebp]
	cmp	eax, 2
	jne	$LN20@ucnv_SBCSF@2
$LN19@ucnv_SBCSF@2:
	movsx	eax, BYTE PTR _toULength$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	sub	ecx, DWORD PTR _utf8_offsets[eax*4]
	mov	DWORD PTR _c$[ebp], ecx
	movsx	edx, BYTE PTR _toULength$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR _utf8_minLegal[edx*4]
	jl	SHORT $LN20@ucnv_SBCSF@2
	cmp	DWORD PTR _c$[ebp], 55295		; 0000d7ffH
	jle	SHORT $LN18@ucnv_SBCSF@2
	cmp	DWORD PTR _c$[ebp], 57344		; 0000e000H
	jl	SHORT $LN20@ucnv_SBCSF@2
$LN18@ucnv_SBCSF@2:
; Line 5204
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 15					; 0000000fH
	add	edx, eax
	mov	BYTE PTR $T79901[ebp], 1
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 5205
	jmp	$LN42@ucnv_SBCSF@2
$LN20@ucnv_SBCSF@2:
; Line 5208
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	cmp	eax, ecx
	jne	$LN16@ucnv_SBCSF@2
	movsx	eax, BYTE PTR _toULength$[ebp]
	cmp	eax, 4
	jne	$LN16@ucnv_SBCSF@2
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, DWORD PTR _utf8_offsets+16
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 65536		; 00010000H
	jl	SHORT $LN16@ucnv_SBCSF@2
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jg	SHORT $LN16@ucnv_SBCSF@2
; Line 5210
	movsx	eax, BYTE PTR _hasSupplementary$[ebp]
	test	eax, eax
	jne	SHORT $LN15@ucnv_SBCSF@2
; Line 5212
	mov	BYTE PTR $T79901[ebp], 1
	xor	eax, eax
	mov	WORD PTR _value$[ebp], ax
; Line 5213
	jmp	SHORT $LN14@ucnv_SBCSF@2
$LN15@ucnv_SBCSF@2:
; Line 5214
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 15					; 0000000fH
	add	edx, eax
	mov	BYTE PTR $T79901[ebp], 1
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
$LN14@ucnv_SBCSF@2:
; Line 5216
	jmp	SHORT $LN42@ucnv_SBCSF@2
$LN16@ucnv_SBCSF@2:
; Line 5218
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _oldToULength$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _source$[ebp]
	sub	edx, eax
	mov	DWORD PTR _source$[ebp], edx
$LN12@ucnv_SBCSF@2:
; Line 5219
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	movsx	ecx, BYTE PTR _toULength$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN11@ucnv_SBCSF@2
; Line 5220
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax+37], dl
	mov	al, BYTE PTR _oldToULength$[ebp]
	add	al, 1
	mov	BYTE PTR _oldToULength$[ebp], al
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 5221
	jmp	SHORT $LN12@ucnv_SBCSF@2
$LN11@ucnv_SBCSF@2:
; Line 5222
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _toULength$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 5223
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 5224
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 5225
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 5226
	jmp	$LN62@ucnv_SBCSF@2
$LN42@ucnv_SBCSF@2:
; Line 5231
	movzx	eax, WORD PTR _value$[ebp]
	movzx	ecx, WORD PTR _minValue$[ebp]
	cmp	eax, ecx
	jl	SHORT $LN10@ucnv_SBCSF@2
; Line 5233
	cmp	BYTE PTR $T79901[ebp], 0
	jne	SHORT $LN81@ucnv_SBCSF@2
	push	OFFSET $LN79@ucnv_SBCSF@2
	call	__RTC_UninitUse
	add	esp, 4
$LN81@ucnv_SBCSF@2:
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5234
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5235
	jmp	$LN9@ucnv_SBCSF@2
$LN10@ucnv_SBCSF@2:
; Line 5244
	mov	DWORD PTR _noSource$72334[ebp], OFFSET ?nul@?HB@??ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z@4_WB
; Line 5250
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromUArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	push	-1
	push	0
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _targetCapacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _noSource$72334[ebp]
	push	edx
	lea	eax, DWORD PTR _noSource$72334[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ; _extFromU
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _c$[ebp], eax
; Line 5252
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@ucnv_SBCSF@2
; Line 5254
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 5255
	jmp	SHORT $LN47@ucnv_SBCSF@2
	jmp	SHORT $LN9@ucnv_SBCSF@2
$LN8@ucnv_SBCSF@2:
; Line 5256
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+180], 0
	jl	SHORT $LN6@ucnv_SBCSF@2
; Line 5263
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
; Line 5264
	jmp	SHORT $LN47@ucnv_SBCSF@2
; Line 5265
	jmp	SHORT $LN9@ucnv_SBCSF@2
$LN6@ucnv_SBCSF@2:
; Line 5269
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], ecx
$LN9@ucnv_SBCSF@2:
; Line 5272
	jmp	SHORT $LN4@ucnv_SBCSF@2
$LN46@ucnv_SBCSF@2:
; Line 5274
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 5275
	jmp	SHORT $LN47@ucnv_SBCSF@2
$LN4@ucnv_SBCSF@2:
; Line 5277
	jmp	$LN48@ucnv_SBCSF@2
$LN47@ucnv_SBCSF@2:
; Line 5286
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN3@ucnv_SBCSF@2
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+180], 0
	jge	$LN3@ucnv_SBCSF@2
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	cmp	edx, DWORD PTR _sourceLimit$[ebp]
	jae	$LN3@ucnv_SBCSF@2
; Line 5287
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
	mov	edx, DWORD PTR _utf8$[ebp]
	mov	al, BYTE PTR _b$[ebp]
	mov	BYTE PTR [edx+37], al
	movzx	ecx, BYTE PTR _b$[ebp]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 5288
	mov	BYTE PTR _toULength$[ebp], 1
; Line 5289
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 240				; 000000f0H
	jge	SHORT $LN74@ucnv_SBCSF@2
	movzx	ecx, BYTE PTR _b$[ebp]
	xor	edx, edx
	cmp	ecx, 192				; 000000c0H
	setge	dl
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 224				; 000000e0H
	setge	cl
	add	edx, ecx
	mov	DWORD PTR tv440[ebp], edx
	jmp	SHORT $LN75@ucnv_SBCSF@2
$LN74@ucnv_SBCSF@2:
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 254				; 000000feH
	jge	SHORT $LN72@ucnv_SBCSF@2
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 248				; 000000f8H
	setge	cl
	movzx	edx, BYTE PTR _b$[ebp]
	xor	eax, eax
	cmp	edx, 252				; 000000fcH
	setge	al
	lea	ecx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR tv439[ebp], ecx
	jmp	SHORT $LN73@ucnv_SBCSF@2
$LN72@ucnv_SBCSF@2:
	mov	DWORD PTR tv439[ebp], 0
$LN73@ucnv_SBCSF@2:
	mov	edx, DWORD PTR tv439[ebp]
	mov	DWORD PTR tv440[ebp], edx
$LN75@ucnv_SBCSF@2:
	mov	eax, DWORD PTR tv440[ebp]
	add	eax, 1
	mov	BYTE PTR _toULimit$[ebp], al
$LN2@ucnv_SBCSF@2:
; Line 5290
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN1@ucnv_SBCSF@2
; Line 5291
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
	movsx	edx, BYTE PTR _toULength$[ebp]
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+edx+37], cl
	mov	dl, BYTE PTR _toULength$[ebp]
	add	dl, 1
	mov	BYTE PTR _toULength$[ebp], dl
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 5292
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _b$[ebp]
	add	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5293
	jmp	SHORT $LN2@ucnv_SBCSF@2
$LN1@ucnv_SBCSF@2:
; Line 5294
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 5295
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _toULength$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 5296
	movsx	eax, BYTE PTR _toULimit$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	DWORD PTR [ecx+48], eax
$LN3@ucnv_SBCSF@2:
; Line 5300
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 5301
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN62@ucnv_SBCSF@2:
; Line 5302
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN85@ucnv_SBCSF@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 488				; 000001e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN85@ucnv_SBCSF@2:
	DD	2
	DD	$LN84@ucnv_SBCSF@2
$LN84@ucnv_SBCSF@2:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN82@ucnv_SBCSF@2
	DD	-272					; fffffef0H
	DD	4
	DD	$LN83@ucnv_SBCSF@2
$LN83@ucnv_SBCSF@2:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	83					; 00000053H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN82@ucnv_SBCSF@2:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN79@ucnv_SBCSF@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_SBCSFromUTF8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv460 = -488						; size = 4
tv274 = -488						; size = 4
tv164 = -488						; size = 4
tv461 = -484						; size = 4
tv275 = -484						; size = 4
tv165 = -484						; size = 4
$T79925 = -473						; size = 1
_noSource$72496 = -272					; size = 4
_length$72394 = -260					; size = 4
_i$72393 = -248						; size = 4
_hasSupplementary$ = -233				; size = 1
_value$ = -224						; size = 2
_asciiRoundtrips$ = -212				; size = 4
_stage2Entry$ = -200					; size = 4
_t2$ = -185						; size = 1
_t1$ = -173						; size = 1
_b$ = -161						; size = 1
_c$ = -152						; size = 4
_toULimit$ = -137					; size = 1
_toULength$ = -125					; size = 1
_oldToULength$ = -113					; size = 1
_results$ = -104					; size = 4
_mbcsIndex$ = -92					; size = 4
_table$ = -80						; size = 4
_targetCapacity$ = -68					; size = 4
_target$ = -56						; size = 4
_sourceLimit$ = -44					; size = 4
_source$ = -32						; size = 4
_cnv$ = -20						; size = 4
_utf8$ = -8						; size = 4
_pFromUArgs$ = 8					; size = 4
_pToUArgs$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
?ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z PROC ; ucnv_DBCSFromUTF8, COMDAT
; Line 5307
	push	ebp
	mov	ebp, esp
	sub	esp, 488				; 000001e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-488]
	mov	ecx, 122				; 0000007aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T79925[ebp], 0
; Line 5327
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _utf8$[ebp], ecx
; Line 5328
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 5329
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _source$[ebp], ecx
; Line 5330
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
; Line 5331
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _target$[ebp], ecx
; Line 5332
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _pFromUArgs$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _targetCapacity$[ebp], edx
; Line 5334
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _table$[ebp], edx
; Line 5335
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _mbcsIndex$[ebp], edx
; Line 5336
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 16					; 00000010H
	je	SHORT $LN70@ucnv_DBCSF
; Line 5337
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _results$[ebp], edx
; Line 5338
	jmp	SHORT $LN69@ucnv_DBCSF
$LN70@ucnv_DBCSF:
; Line 5339
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _results$[ebp], edx
$LN69@ucnv_DBCSF:
; Line 5341
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _asciiRoundtrips$[ebp], edx
; Line 5343
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+201]
	and	edx, 1
	mov	BYTE PTR _hasSupplementary$[ebp], dl
; Line 5346
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _c$[ebp], ecx
; Line 5347
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN68@ucnv_DBCSF
; Line 5348
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR [eax+36]
	mov	BYTE PTR _oldToULength$[ebp], cl
	mov	dl, BYTE PTR _oldToULength$[ebp]
	mov	BYTE PTR _toULength$[ebp], dl
; Line 5349
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR [eax+48]
	mov	BYTE PTR _toULimit$[ebp], cl
; Line 5350
	jmp	SHORT $LN67@ucnv_DBCSF
$LN68@ucnv_DBCSF:
; Line 5351
	mov	BYTE PTR _toULimit$[ebp], 0
	mov	al, BYTE PTR _toULimit$[ebp]
	mov	BYTE PTR _oldToULength$[ebp], al
	mov	cl, BYTE PTR _oldToULength$[ebp]
	mov	BYTE PTR _toULength$[ebp], cl
$LN67@ucnv_DBCSF:
; Line 5365
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	movsx	edx, BYTE PTR _oldToULength$[ebp]
	sub	ecx, edx
	sub	eax, ecx
	mov	DWORD PTR _length$72394[ebp], eax
; Line 5366
	mov	DWORD PTR _i$72393[ebp], 0
$LN66@ucnv_DBCSF:
	cmp	DWORD PTR _i$72393[ebp], 3
	jge	$LN65@ucnv_DBCSF
	mov	eax, DWORD PTR _i$72393[ebp]
	cmp	eax, DWORD PTR _length$72394[ebp]
	jge	$LN65@ucnv_DBCSF
; Line 5367
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _i$72393[ebp]
	mov	cl, BYTE PTR [eax-1]
	mov	BYTE PTR _b$[ebp], cl
; Line 5368
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 192				; 000000c0H
	cmp	eax, 128				; 00000080H
	jne	SHORT $LN64@ucnv_DBCSF
; Line 5369
	mov	eax, DWORD PTR _i$72393[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72393[ebp], eax
; Line 5370
	jmp	$LN63@ucnv_DBCSF
$LN64@ucnv_DBCSF:
; Line 5371
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 240				; 000000f0H
	jge	SHORT $LN75@ucnv_DBCSF
	movzx	ecx, BYTE PTR _b$[ebp]
	xor	edx, edx
	cmp	ecx, 192				; 000000c0H
	setge	dl
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 224				; 000000e0H
	setge	cl
	add	edx, ecx
	mov	DWORD PTR tv165[ebp], edx
	jmp	SHORT $LN76@ucnv_DBCSF
$LN75@ucnv_DBCSF:
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 254				; 000000feH
	jge	SHORT $LN73@ucnv_DBCSF
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 248				; 000000f8H
	setge	cl
	movzx	edx, BYTE PTR _b$[ebp]
	xor	eax, eax
	cmp	edx, 252				; 000000fcH
	setge	al
	lea	ecx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR tv164[ebp], ecx
	jmp	SHORT $LN74@ucnv_DBCSF
$LN73@ucnv_DBCSF:
	mov	DWORD PTR tv164[ebp], 0
$LN74@ucnv_DBCSF:
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR tv165[ebp], edx
$LN76@ucnv_DBCSF:
	mov	eax, DWORD PTR _i$72393[ebp]
	cmp	eax, DWORD PTR tv165[ebp]
	jge	SHORT $LN62@ucnv_DBCSF
; Line 5373
	mov	eax, DWORD PTR _i$72393[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _sourceLimit$[ebp], ecx
$LN62@ucnv_DBCSF:
; Line 5375
	jmp	SHORT $LN65@ucnv_DBCSF
$LN63@ucnv_DBCSF:
; Line 5377
	jmp	$LN66@ucnv_DBCSF
$LN65@ucnv_DBCSF:
; Line 5380
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN59@ucnv_DBCSF
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	SHORT $LN59@ucnv_DBCSF
; Line 5381
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 5382
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	BYTE PTR [eax+36], 0
; Line 5383
	jmp	$moreBytes$72409
	jmp	$moreBytes$72409
$LN59@ucnv_DBCSF:
; Line 5388
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	$LN58@ucnv_DBCSF
; Line 5389
	cmp	DWORD PTR _targetCapacity$[ebp], 0
	jle	$LN57@ucnv_DBCSF
; Line 5390
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 5391
	movsx	eax, BYTE PTR _b$[ebp]
	test	eax, eax
	jl	$LN56@ucnv_DBCSF
; Line 5393
	movzx	ecx, BYTE PTR _b$[ebp]
	sar	ecx, 2
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _asciiRoundtrips$[ebp]
	je	SHORT $LN55@ucnv_DBCSF
; Line 5394
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5395
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5396
	jmp	SHORT $LN59@ucnv_DBCSF
; Line 5397
	jmp	SHORT $LN54@ucnv_DBCSF
$LN55@ucnv_DBCSF:
; Line 5398
	mov	eax, DWORD PTR _mbcsIndex$[ebp]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, BYTE PTR _b$[ebp]
	add	ecx, edx
	mov	BYTE PTR $T79925[ebp], 1
	mov	eax, DWORD PTR _results$[ebp]
	mov	cx, WORD PTR [eax+ecx*2]
	mov	WORD PTR _value$[ebp], cx
; Line 5399
	movzx	eax, WORD PTR _value$[ebp]
	test	eax, eax
	jne	SHORT $LN54@ucnv_DBCSF
; Line 5400
	movzx	eax, BYTE PTR _b$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 5401
	jmp	$unassigned$72420
	jmp	$unassigned$72420
$LN54@ucnv_DBCSF:
; Line 5404
	jmp	$LN51@ucnv_DBCSF
$LN56@ucnv_DBCSF:
; Line 5405
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 224				; 000000e0H
	jle	$LN50@ucnv_DBCSF
; Line 5410
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR _t1$[ebp], cl
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 237				; 000000edH
	jge	SHORT $LN47@ucnv_DBCSF
	movzx	eax, BYTE PTR _t1$[ebp]
	cmp	eax, 63					; 0000003fH
	jle	SHORT $LN48@ucnv_DBCSF
$LN47@ucnv_DBCSF:
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 237				; 000000edH
	jne	$LN49@ucnv_DBCSF
	movzx	eax, BYTE PTR _t1$[ebp]
	cmp	eax, 31					; 0000001fH
	jg	$LN49@ucnv_DBCSF
$LN48@ucnv_DBCSF:
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR _t2$[ebp], cl
	movzx	edx, BYTE PTR _t2$[ebp]
	cmp	edx, 63					; 0000003fH
	jg	SHORT $LN49@ucnv_DBCSF
; Line 5411
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 15					; 0000000fH
	shl	eax, 6
	movzx	ecx, BYTE PTR _t1$[ebp]
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5412
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 2
	mov	DWORD PTR _source$[ebp], eax
; Line 5413
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _mbcsIndex$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	movzx	eax, BYTE PTR _t2$[ebp]
	add	edx, eax
	mov	BYTE PTR $T79925[ebp], 1
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 5414
	movzx	eax, WORD PTR _value$[ebp]
	test	eax, eax
	jne	SHORT $LN46@ucnv_DBCSF
; Line 5415
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _t2$[ebp]
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5416
	jmp	$unassigned$72420
	jmp	$unassigned$72420
$LN46@ucnv_DBCSF:
; Line 5418
	jmp	SHORT $LN44@ucnv_DBCSF
$LN49@ucnv_DBCSF:
; Line 5419
	mov	DWORD PTR _c$[ebp], -1
$LN44@ucnv_DBCSF:
; Line 5420
	jmp	$LN43@ucnv_DBCSF
$LN50@ucnv_DBCSF:
; Line 5421
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 224				; 000000e0H
	jge	$LN42@ucnv_DBCSF
; Line 5425
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 194				; 000000c2H
	jl	$LN41@ucnv_DBCSF
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR _t1$[ebp], cl
	movzx	edx, BYTE PTR _t1$[ebp]
	cmp	edx, 63					; 0000003fH
	jg	SHORT $LN41@ucnv_DBCSF
; Line 5426
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 31					; 0000001fH
	mov	DWORD PTR _c$[ebp], eax
; Line 5427
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 5428
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _mbcsIndex$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	movzx	eax, BYTE PTR _t1$[ebp]
	add	edx, eax
	mov	BYTE PTR $T79925[ebp], 1
	mov	ecx, DWORD PTR _results$[ebp]
	mov	dx, WORD PTR [ecx+edx*2]
	mov	WORD PTR _value$[ebp], dx
; Line 5429
	movzx	eax, WORD PTR _value$[ebp]
	test	eax, eax
	jne	SHORT $LN40@ucnv_DBCSF
; Line 5430
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _t1$[ebp]
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5431
	jmp	$unassigned$72420
	jmp	$unassigned$72420
$LN40@ucnv_DBCSF:
; Line 5433
	jmp	SHORT $LN38@ucnv_DBCSF
$LN41@ucnv_DBCSF:
; Line 5434
	mov	DWORD PTR _c$[ebp], -1
$LN38@ucnv_DBCSF:
; Line 5436
	jmp	SHORT $LN43@ucnv_DBCSF
$LN42@ucnv_DBCSF:
; Line 5437
	mov	DWORD PTR _c$[ebp], -1
$LN43@ucnv_DBCSF:
; Line 5440
	cmp	DWORD PTR _c$[ebp], 0
	jge	$LN51@ucnv_DBCSF
; Line 5442
	mov	BYTE PTR _oldToULength$[ebp], 0
; Line 5443
	mov	BYTE PTR _toULength$[ebp], 1
; Line 5444
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 240				; 000000f0H
	jge	SHORT $LN79@ucnv_DBCSF
	movzx	ecx, BYTE PTR _b$[ebp]
	xor	edx, edx
	cmp	ecx, 192				; 000000c0H
	setge	dl
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 224				; 000000e0H
	setge	cl
	add	edx, ecx
	mov	DWORD PTR tv275[ebp], edx
	jmp	SHORT $LN80@ucnv_DBCSF
$LN79@ucnv_DBCSF:
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 254				; 000000feH
	jge	SHORT $LN77@ucnv_DBCSF
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 248				; 000000f8H
	setge	cl
	movzx	edx, BYTE PTR _b$[ebp]
	xor	eax, eax
	cmp	edx, 252				; 000000fcH
	setge	al
	lea	ecx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR tv274[ebp], ecx
	jmp	SHORT $LN78@ucnv_DBCSF
$LN77@ucnv_DBCSF:
	mov	DWORD PTR tv274[ebp], 0
$LN78@ucnv_DBCSF:
	mov	edx, DWORD PTR tv274[ebp]
	mov	DWORD PTR tv275[ebp], edx
$LN80@ucnv_DBCSF:
	mov	eax, DWORD PTR tv275[ebp]
	add	eax, 1
	mov	BYTE PTR _toULimit$[ebp], al
; Line 5445
	movzx	eax, BYTE PTR _b$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$moreBytes$72409:
; Line 5447
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	cmp	eax, ecx
	jge	$LN34@ucnv_DBCSF
; Line 5455
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN33@ucnv_DBCSF
; Line 5456
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
; Line 5457
	movzx	eax, BYTE PTR _b$[ebp]
	and	eax, 192				; 000000c0H
	cmp	eax, 128				; 00000080H
	jne	SHORT $LN32@ucnv_DBCSF
; Line 5458
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 5459
	mov	al, BYTE PTR _toULength$[ebp]
	add	al, 1
	mov	BYTE PTR _toULength$[ebp], al
; Line 5460
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _b$[ebp]
	add	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5461
	jmp	SHORT $LN31@ucnv_DBCSF
$LN32@ucnv_DBCSF:
; Line 5462
	jmp	$LN34@ucnv_DBCSF
$LN31@ucnv_DBCSF:
; Line 5464
	jmp	SHORT $LN30@ucnv_DBCSF
$LN33@ucnv_DBCSF:
; Line 5466
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _oldToULength$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _source$[ebp]
	sub	edx, eax
	mov	DWORD PTR _source$[ebp], edx
$LN29@ucnv_DBCSF:
; Line 5467
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	movsx	ecx, BYTE PTR _toULength$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN28@ucnv_DBCSF
; Line 5468
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax+37], dl
	mov	al, BYTE PTR _oldToULength$[ebp]
	add	al, 1
	mov	BYTE PTR _oldToULength$[ebp], al
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 5469
	jmp	SHORT $LN29@ucnv_DBCSF
$LN28@ucnv_DBCSF:
; Line 5470
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 5471
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _toULength$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 5472
	movsx	eax, BYTE PTR _toULimit$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 5473
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 5474
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 5475
	jmp	$LN71@ucnv_DBCSF
$LN30@ucnv_DBCSF:
; Line 5477
	jmp	$moreBytes$72409
$LN34@ucnv_DBCSF:
; Line 5483
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	cmp	eax, ecx
	jne	$LN27@ucnv_DBCSF
	movsx	eax, BYTE PTR _toULength$[ebp]
	cmp	eax, 3
	je	SHORT $LN26@ucnv_DBCSF
	movsx	eax, BYTE PTR _toULength$[ebp]
	cmp	eax, 2
	jne	SHORT $LN27@ucnv_DBCSF
$LN26@ucnv_DBCSF:
	movsx	eax, BYTE PTR _toULength$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	sub	ecx, DWORD PTR _utf8_offsets[eax*4]
	mov	DWORD PTR _c$[ebp], ecx
	movsx	edx, BYTE PTR _toULength$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR _utf8_minLegal[edx*4]
	jl	SHORT $LN27@ucnv_DBCSF
	cmp	DWORD PTR _c$[ebp], 55295		; 0000d7ffH
	jle	SHORT $LN25@ucnv_DBCSF
	cmp	DWORD PTR _c$[ebp], 57344		; 0000e000H
	jl	SHORT $LN27@ucnv_DBCSF
$LN25@ucnv_DBCSF:
; Line 5484
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _stage2Entry$[ebp], edx
; Line 5485
	jmp	$LN24@ucnv_DBCSF
$LN27@ucnv_DBCSF:
; Line 5488
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _toULimit$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN23@ucnv_DBCSF
	movsx	eax, BYTE PTR _toULength$[ebp]
	cmp	eax, 4
	jne	SHORT $LN23@ucnv_DBCSF
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, DWORD PTR _utf8_offsets+16
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 65536		; 00010000H
	jl	SHORT $LN23@ucnv_DBCSF
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jg	SHORT $LN23@ucnv_DBCSF
; Line 5490
	movsx	eax, BYTE PTR _hasSupplementary$[ebp]
	test	eax, eax
	jne	SHORT $LN22@ucnv_DBCSF
; Line 5492
	mov	DWORD PTR _stage2Entry$[ebp], 0
; Line 5493
	jmp	SHORT $LN21@ucnv_DBCSF
$LN22@ucnv_DBCSF:
; Line 5494
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _table$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 4
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR _table$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _stage2Entry$[ebp], edx
$LN21@ucnv_DBCSF:
; Line 5496
	jmp	SHORT $LN24@ucnv_DBCSF
$LN23@ucnv_DBCSF:
; Line 5498
	movsx	eax, BYTE PTR _toULength$[ebp]
	movsx	ecx, BYTE PTR _oldToULength$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _source$[ebp]
	sub	edx, eax
	mov	DWORD PTR _source$[ebp], edx
$LN19@ucnv_DBCSF:
; Line 5499
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	movsx	ecx, BYTE PTR _toULength$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN18@ucnv_DBCSF
; Line 5500
	movsx	eax, BYTE PTR _oldToULength$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax+37], dl
	mov	al, BYTE PTR _oldToULength$[ebp]
	add	al, 1
	mov	BYTE PTR _oldToULength$[ebp], al
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 1
	mov	DWORD PTR _source$[ebp], ecx
; Line 5501
	jmp	SHORT $LN19@ucnv_DBCSF
$LN18@ucnv_DBCSF:
; Line 5502
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _toULength$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 5503
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 5504
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 5505
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 5506
	jmp	$LN71@ucnv_DBCSF
$LN24@ucnv_DBCSF:
; Line 5511
	movzx	eax, WORD PTR _stage2Entry$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	BYTE PTR $T79925[ebp], 1
	mov	edx, DWORD PTR _results$[ebp]
	mov	ax, WORD PTR [edx+eax*2]
	mov	WORD PTR _value$[ebp], ax
; Line 5516
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 15					; 0000000fH
	add	ecx, 16					; 00000010H
	mov	eax, 1
	shl	eax, cl
	and	eax, DWORD PTR _stage2Entry$[ebp]
	jne	SHORT $LN51@ucnv_DBCSF
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+35]
	test	ecx, ecx
	jne	SHORT $LN15@ucnv_DBCSF
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 57344				; 0000e000H
	cmp	eax, 6400				; 00001900H
	jb	SHORT $LN15@ucnv_DBCSF
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 983040				; 000f0000H
	cmp	eax, 131072				; 00020000H
	jae	SHORT $LN16@ucnv_DBCSF
$LN15@ucnv_DBCSF:
	movzx	eax, WORD PTR _value$[ebp]
	test	eax, eax
	jne	SHORT $LN51@ucnv_DBCSF
$LN16@ucnv_DBCSF:
; Line 5517
	jmp	$unassigned$72420
	jmp	$unassigned$72420
$LN51@ucnv_DBCSF:
; Line 5524
	movzx	eax, WORD PTR _value$[ebp]
	cmp	eax, 255				; 000000ffH
	jg	SHORT $LN12@ucnv_DBCSF
; Line 5526
	cmp	BYTE PTR $T79925[ebp], 0
	jne	SHORT $LN85@ucnv_DBCSF
	push	OFFSET $LN86@ucnv_DBCSF
	call	__RTC_UninitUse
	add	esp, 4
$LN85@ucnv_DBCSF:
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5527
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5528
	jmp	$LN11@ucnv_DBCSF
$LN12@ucnv_DBCSF:
; Line 5529
	movzx	eax, WORD PTR _value$[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _target$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5530
	cmp	DWORD PTR _targetCapacity$[ebp], 2
	jl	SHORT $LN10@ucnv_DBCSF
; Line 5531
	cmp	BYTE PTR $T79925[ebp], 0
	jne	SHORT $LN87@ucnv_DBCSF
	push	OFFSET $LN86@ucnv_DBCSF
	call	__RTC_UninitUse
	add	esp, 4
$LN87@ucnv_DBCSF:
	mov	eax, DWORD PTR _target$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 1
	mov	DWORD PTR _target$[ebp], edx
; Line 5532
	mov	eax, DWORD PTR _targetCapacity$[ebp]
	sub	eax, 2
	mov	DWORD PTR _targetCapacity$[ebp], eax
; Line 5533
	jmp	SHORT $LN11@ucnv_DBCSF
$LN10@ucnv_DBCSF:
; Line 5534
	cmp	BYTE PTR $T79925[ebp], 0
	jne	SHORT $LN88@ucnv_DBCSF
	push	OFFSET $LN86@ucnv_DBCSF
	call	__RTC_UninitUse
	add	esp, 4
$LN88@ucnv_DBCSF:
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax+76], cl
; Line 5535
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+63], 1
; Line 5538
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 5539
	jmp	$LN58@ucnv_DBCSF
$LN11@ucnv_DBCSF:
; Line 5542
	jmp	$LN59@ucnv_DBCSF
$unassigned$72420:
; Line 5553
	mov	DWORD PTR _noSource$72496[ebp], OFFSET ?nul@?HE@??ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z@4_WB
; Line 5559
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromUArgs$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	push	edx
	push	-1
	push	0
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _targetCapacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _noSource$72496[ebp]
	push	edx
	lea	eax, DWORD PTR _noSource$72496[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z ; _extFromU
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _c$[ebp], eax
; Line 5561
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@ucnv_DBCSF
; Line 5563
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 5564
	jmp	SHORT $LN58@ucnv_DBCSF
	jmp	SHORT $LN7@ucnv_DBCSF
$LN8@ucnv_DBCSF:
; Line 5565
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+180], 0
	jl	SHORT $LN6@ucnv_DBCSF
; Line 5572
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
; Line 5573
	jmp	SHORT $LN58@ucnv_DBCSF
; Line 5574
	jmp	SHORT $LN7@ucnv_DBCSF
$LN6@ucnv_DBCSF:
; Line 5578
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR _targetCapacity$[ebp], ecx
; Line 5579
	jmp	$LN59@ucnv_DBCSF
$LN7@ucnv_DBCSF:
; Line 5582
	jmp	SHORT $LN4@ucnv_DBCSF
$LN57@ucnv_DBCSF:
; Line 5584
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 5585
	jmp	SHORT $LN58@ucnv_DBCSF
$LN4@ucnv_DBCSF:
; Line 5587
	jmp	$LN59@ucnv_DBCSF
$LN58@ucnv_DBCSF:
; Line 5596
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN3@ucnv_DBCSF
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+180], 0
	jge	$LN3@ucnv_DBCSF
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _sourceLimit$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	cmp	edx, DWORD PTR _sourceLimit$[ebp]
	jae	$LN3@ucnv_DBCSF
; Line 5597
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
	mov	edx, DWORD PTR _utf8$[ebp]
	mov	al, BYTE PTR _b$[ebp]
	mov	BYTE PTR [edx+37], al
	movzx	ecx, BYTE PTR _b$[ebp]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 1
	mov	DWORD PTR _source$[ebp], edx
; Line 5598
	mov	BYTE PTR _toULength$[ebp], 1
; Line 5599
	movzx	eax, BYTE PTR _b$[ebp]
	cmp	eax, 240				; 000000f0H
	jge	SHORT $LN83@ucnv_DBCSF
	movzx	ecx, BYTE PTR _b$[ebp]
	xor	edx, edx
	cmp	ecx, 192				; 000000c0H
	setge	dl
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 224				; 000000e0H
	setge	cl
	add	edx, ecx
	mov	DWORD PTR tv461[ebp], edx
	jmp	SHORT $LN84@ucnv_DBCSF
$LN83@ucnv_DBCSF:
	movzx	edx, BYTE PTR _b$[ebp]
	cmp	edx, 254				; 000000feH
	jge	SHORT $LN81@ucnv_DBCSF
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, 248				; 000000f8H
	setge	cl
	movzx	edx, BYTE PTR _b$[ebp]
	xor	eax, eax
	cmp	edx, 252				; 000000fcH
	setge	al
	lea	ecx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR tv460[ebp], ecx
	jmp	SHORT $LN82@ucnv_DBCSF
$LN81@ucnv_DBCSF:
	mov	DWORD PTR tv460[ebp], 0
$LN82@ucnv_DBCSF:
	mov	edx, DWORD PTR tv460[ebp]
	mov	DWORD PTR tv461[ebp], edx
$LN84@ucnv_DBCSF:
	mov	eax, DWORD PTR tv461[ebp]
	add	eax, 1
	mov	BYTE PTR _toULimit$[ebp], al
$LN2@ucnv_DBCSF:
; Line 5600
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _sourceLimit$[ebp]
	jae	SHORT $LN1@ucnv_DBCSF
; Line 5601
	mov	eax, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
	movsx	edx, BYTE PTR _toULength$[ebp]
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+edx+37], cl
	mov	dl, BYTE PTR _toULength$[ebp]
	add	dl, 1
	mov	BYTE PTR _toULength$[ebp], dl
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 1
	mov	DWORD PTR _source$[ebp], eax
; Line 5602
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _b$[ebp]
	add	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 5603
	jmp	SHORT $LN2@ucnv_DBCSF
$LN1@ucnv_DBCSF:
; Line 5604
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 5605
	mov	eax, DWORD PTR _utf8$[ebp]
	mov	cl, BYTE PTR _toULength$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 5606
	movsx	eax, BYTE PTR _toULimit$[ebp]
	mov	ecx, DWORD PTR _utf8$[ebp]
	mov	DWORD PTR [ecx+48], eax
$LN3@ucnv_DBCSF:
; Line 5610
	mov	eax, DWORD PTR _pToUArgs$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 5611
	mov	eax, DWORD PTR _pFromUArgs$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN71@ucnv_DBCSF:
; Line 5612
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN92@ucnv_DBCSF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 488				; 000001e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN92@ucnv_DBCSF:
	DD	2
	DD	$LN91@ucnv_DBCSF
$LN91@ucnv_DBCSF:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN89@ucnv_DBCSF
	DD	-272					; fffffef0H
	DD	4
	DD	$LN90@ucnv_DBCSF
$LN90@ucnv_DBCSF:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	83					; 00000053H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN89@ucnv_DBCSF:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN86@ucnv_DBCSF:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z ENDP ; ucnv_DBCSFromUTF8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_state0$ = -8						; size = 4
_cnv$ = 8						; size = 4
_starters$ = 12						; size = 4
___formal$ = 16						; size = 4
?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z PROC ; ucnv_MBCSGetStarters, COMDAT
; Line 5619
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5623
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _cnv$[ebp]
	mov	eax, DWORD PTR [edx+24]
	movzx	edx, BYTE PTR [eax+29]
	shl	edx, 10					; 0000000aH
	add	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _state0$[ebp], edx
; Line 5624
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ucnv_MBCSG@6
$LN2@ucnv_MBCSG@6:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ucnv_MBCSG@6:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN4@ucnv_MBCSG@6
; Line 5626
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _state0$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	setge	dl
	mov	eax, DWORD PTR _starters$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], dl
; Line 5627
	jmp	SHORT $LN2@ucnv_MBCSG@6
$LN4@ucnv_MBCSG@6:
; Line 5628
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z ENDP ; ucnv_MBCSGetStarters
_TEXT	ENDS
PUBLIC	_ucnv_MBCSIsLeadByte_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSIsLeadByte_56
_TEXT	SEGMENT
_sharedData$ = 8					; size = 4
_byte$ = 12						; size = 1
_ucnv_MBCSIsLeadByte_56 PROC				; COMDAT
; Line 5635
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5636
	movzx	eax, BYTE PTR _byte$[ebp]
	mov	ecx, DWORD PTR _sharedData$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx+eax*4], 0
	setge	al
; Line 5637
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_MBCSIsLeadByte_56 ENDP
_TEXT	ENDS
EXTRN	_ucnv_cbFromUWriteBytes_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -256						; size = 4
tv79 = -256						; size = 4
_length$ = -56						; size = 4
_buffer$ = -44						; size = 4
_subchar$ = -32						; size = 4
_p$ = -20						; size = 4
_cnv$ = -8						; size = 4
_pArgs$ = 8						; size = 4
_offsetIndex$ = 12					; size = 4
_pErrorCode$ = 16					; size = 4
?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z PROC ; ucnv_MBCSWriteSub, COMDAT
; Line 5642
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5643
	mov	eax, DWORD PTR _pArgs$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cnv$[ebp], ecx
; Line 5653
	mov	eax, DWORD PTR _cnv$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	test	ecx, ecx
	je	SHORT $LN10@ucnv_MBCSW
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	DWORD PTR [ecx+224], 0
	je	SHORT $LN13@ucnv_MBCSW
	mov	edx, DWORD PTR _cnv$[ebp]
	movsx	eax, BYTE PTR [edx+67]
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN14@ucnv_MBCSW
$LN13@ucnv_MBCSW:
	mov	ecx, DWORD PTR _cnv$[ebp]
	movzx	edx, WORD PTR [ecx+112]
	xor	eax, eax
	cmp	edx, 255				; 000000ffH
	setle	al
	mov	DWORD PTR tv79[ebp], eax
$LN14@ucnv_MBCSW:
	cmp	DWORD PTR tv79[ebp], 0
	je	SHORT $LN10@ucnv_MBCSW
; Line 5655
	mov	eax, DWORD PTR _cnv$[ebp]
	add	eax, 66					; 00000042H
	mov	DWORD PTR _subchar$[ebp], eax
; Line 5656
	mov	DWORD PTR _length$[ebp], 1
; Line 5657
	jmp	SHORT $LN9@ucnv_MBCSW
$LN10@ucnv_MBCSW:
; Line 5659
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _subchar$[ebp], ecx
; Line 5660
	mov	eax, DWORD PTR _cnv$[ebp]
	movsx	ecx, BYTE PTR [eax+61]
	mov	DWORD PTR _length$[ebp], ecx
$LN9@ucnv_MBCSW:
; Line 5664
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	BYTE PTR [eax+67], 0
; Line 5666
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+200]
	cmp	edx, 12					; 0000000cH
	jne	$LN8@ucnv_MBCSW
; Line 5667
	lea	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 5670
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv91[ebp], eax
	cmp	DWORD PTR tv91[ebp], 1
	je	SHORT $LN5@ucnv_MBCSW
	cmp	DWORD PTR tv91[ebp], 2
	je	SHORT $LN3@ucnv_MBCSW
	jmp	$LN1@ucnv_MBCSW
$LN5@ucnv_MBCSW:
; Line 5672
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+52], 2
	jne	SHORT $LN4@ucnv_MBCSW
; Line 5674
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [eax+52], 1
; Line 5675
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 15			; 0000000fH
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
$LN4@ucnv_MBCSW:
; Line 5677
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _subchar$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 5678
	jmp	SHORT $LN6@ucnv_MBCSW
$LN3@ucnv_MBCSW:
; Line 5680
	mov	eax, DWORD PTR _cnv$[ebp]
	cmp	DWORD PTR [eax+52], 1
	ja	SHORT $LN2@ucnv_MBCSW
; Line 5682
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	DWORD PTR [eax+52], 2
; Line 5683
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 14			; 0000000eH
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
$LN2@ucnv_MBCSW:
; Line 5685
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _subchar$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 5686
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _subchar$[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 5687
	jmp	SHORT $LN6@ucnv_MBCSW
$LN1@ucnv_MBCSW:
; Line 5689
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 5690
	jmp	SHORT $LN11@ucnv_MBCSW
$LN6@ucnv_MBCSW:
; Line 5692
	lea	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _subchar$[ebp], eax
; Line 5693
	mov	eax, DWORD PTR _p$[ebp]
	lea	ecx, DWORD PTR _buffer$[ebp]
	sub	eax, ecx
	mov	DWORD PTR _length$[ebp], eax
$LN8@ucnv_MBCSW:
; Line 5696
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _subchar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pArgs$[ebp]
	push	ecx
	call	_ucnv_cbFromUWriteBytes_56
	add	esp, 20					; 00000014H
$LN11@ucnv_MBCSW:
; Line 5697
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@ucnv_MBCSW
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@ucnv_MBCSW:
	DD	1
	DD	$LN16@ucnv_MBCSW
$LN16@ucnv_MBCSW:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN15@ucnv_MBCSW
$LN15@ucnv_MBCSW:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z ENDP ; ucnv_MBCSWriteSub
_TEXT	ENDS
PUBLIC	_ucnv_MBCSGetType_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_MBCSGetType_56
_TEXT	SEGMENT
_converter$ = 8						; size = 4
_ucnv_MBCSGetType_56 PROC				; COMDAT
; Line 5700
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5702
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+28]
	cmp	edx, 1
	jne	SHORT $LN5@ucnv_MBCSG@7
; Line 5703
	xor	eax, eax
	jmp	SHORT $LN6@ucnv_MBCSG@7
	jmp	SHORT $LN4@ucnv_MBCSG@7
$LN5@ucnv_MBCSG@7:
; Line 5704
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	movzx	edx, BYTE PTR [ecx+200]
	and	edx, 255				; 000000ffH
	cmp	edx, 12					; 0000000cH
	jne	SHORT $LN3@ucnv_MBCSG@7
; Line 5705
	mov	eax, 9
	jmp	SHORT $LN6@ucnv_MBCSG@7
	jmp	SHORT $LN4@ucnv_MBCSG@7
$LN3@ucnv_MBCSG@7:
; Line 5706
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx+70]
	cmp	eax, 2
	jne	SHORT $LN4@ucnv_MBCSG@7
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx+71]
	cmp	eax, 2
	jne	SHORT $LN4@ucnv_MBCSG@7
; Line 5707
	mov	eax, 1
	jmp	SHORT $LN6@ucnv_MBCSG@7
$LN4@ucnv_MBCSG@7:
; Line 5709
	mov	eax, 2
$LN6@ucnv_MBCSG@7:
; Line 5710
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_MBCSGetType_56 ENDP
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\uniset.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::UnicodeSet::getStaticClassID'::`2'::classID
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ParsePosition@icu_56@@6B@			; icu_56::ParsePosition::`vftable'
PUBLIC	??0ParsePosition@icu_56@@QAE@XZ			; icu_56::ParsePosition::ParsePosition
PUBLIC	??_R4ParsePosition@icu_56@@6B@			; icu_56::ParsePosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParsePosition@icu_56@@@8		; icu_56::ParsePosition `RTTI Type Descriptor'
PUBLIC	??_R3ParsePosition@icu_56@@8			; icu_56::ParsePosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParsePosition@icu_56@@8			; icu_56::ParsePosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParsePosition@icu_56@@8		; icu_56::ParsePosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EParsePosition@icu_56@@UAEPAXI@Z		; icu_56::ParsePosition::`vector deleting destructor'
EXTRN	?getDynamicClassID@ParsePosition@icu_56@@UBEPAXXZ:PROC ; icu_56::ParsePosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@ParsePosition@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\parsepos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ParsePosition@icu_56@@8 DD FLAT:??_R0?AVParsePosition@icu_56@@@8 ; icu_56::ParsePosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParsePosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ParsePosition@icu_56@@8
rdata$r	SEGMENT
??_R2ParsePosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ParsePosition@icu_56@@8 ; icu_56::ParsePosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ParsePosition@icu_56@@8
rdata$r	SEGMENT
??_R3ParsePosition@icu_56@@8 DD 00H			; icu_56::ParsePosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ParsePosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParsePosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVParsePosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ParsePosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParsePosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParsePosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4ParsePosition@icu_56@@6B@ DD 00H			; icu_56::ParsePosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParsePosition@icu_56@@@8
	DD	FLAT:??_R3ParsePosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ParsePosition@icu_56@@6B@
CONST	SEGMENT
??_7ParsePosition@icu_56@@6B@ DD FLAT:??_R4ParsePosition@icu_56@@6B@ ; icu_56::ParsePosition::`vftable'
	DD	FLAT:??_EParsePosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@ParsePosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ParsePosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ParsePosition@icu_56@@QAE@XZ PROC			; icu_56::ParsePosition::ParsePosition, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParsePosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ParsePosition@icu_56@@QAE@XZ ENDP			; icu_56::ParsePosition::ParsePosition
_TEXT	ENDS
PUBLIC	??0ParsePosition@icu_56@@QAE@H@Z		; icu_56::ParsePosition::ParsePosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ParsePosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newIndex$ = 8						; size = 4
??0ParsePosition@icu_56@@QAE@H@Z PROC			; icu_56::ParsePosition::ParsePosition, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParsePosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newIndex$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParsePosition@icu_56@@QAE@H@Z ENDP			; icu_56::ParsePosition::ParsePosition
_TEXT	ENDS
PUBLIC	??0ParsePosition@icu_56@@QAE@ABV01@@Z		; icu_56::ParsePosition::ParsePosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ParsePosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0ParsePosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::ParsePosition::ParsePosition, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParsePosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParsePosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::ParsePosition::ParsePosition
_TEXT	ENDS
PUBLIC	??_GParsePosition@icu_56@@UAEPAXI@Z		; icu_56::ParsePosition::`scalar deleting destructor'
EXTRN	??1ParsePosition@icu_56@@UAE@XZ:PROC		; icu_56::ParsePosition::~ParsePosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GParsePosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GParsePosition@icu_56@@UAEPAXI@Z PROC		; icu_56::ParsePosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GParsePosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::ParsePosition::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EParsePosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EParsePosition@icu_56@@UAEPAXI@Z PROC		; icu_56::ParsePosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1ParsePosition@icu_56@@UAE@XZ	; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EParsePosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::ParsePosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::ParsePosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::ParsePosition::operator=, COMDAT
; _this$ = ecx
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::ParsePosition::operator=
_TEXT	ENDS
PUBLIC	??8ParsePosition@icu_56@@QBECABV01@@Z		; icu_56::ParsePosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8ParsePosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8ParsePosition@icu_56@@QBECABV01@@Z PROC		; icu_56::ParsePosition::operator==, COMDAT
; _this$ = ecx
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN2@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN3@operator
$LN2@operator:
; Line 194
	xor	al, al
	jmp	SHORT $LN4@operator
; Line 195
	jmp	SHORT $LN4@operator
$LN3@operator:
; Line 196
	mov	al, 1
$LN4@operator:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8ParsePosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::ParsePosition::operator==
_TEXT	ENDS
PUBLIC	??9ParsePosition@icu_56@@QBECABV01@@Z		; icu_56::ParsePosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9ParsePosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9ParsePosition@icu_56@@QBECABV01@@Z PROC		; icu_56::ParsePosition::operator!=, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8ParsePosition@icu_56@@QBECABV01@@Z	; icu_56::ParsePosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9ParsePosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::ParsePosition::operator!=
_TEXT	ENDS
PUBLIC	?getIndex@ParsePosition@icu_56@@QBEHXZ		; icu_56::ParsePosition::getIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIndex@ParsePosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIndex@ParsePosition@icu_56@@QBEHXZ PROC		; icu_56::ParsePosition::getIndex, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIndex@ParsePosition@icu_56@@QBEHXZ ENDP		; icu_56::ParsePosition::getIndex
_TEXT	ENDS
PUBLIC	?setIndex@ParsePosition@icu_56@@QAEXH@Z		; icu_56::ParsePosition::setIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setIndex@ParsePosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?setIndex@ParsePosition@icu_56@@QAEXH@Z PROC		; icu_56::ParsePosition::setIndex, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 215
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setIndex@ParsePosition@icu_56@@QAEXH@Z ENDP		; icu_56::ParsePosition::setIndex
_TEXT	ENDS
PUBLIC	?getErrorIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getErrorIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getErrorIndex@ParsePosition@icu_56@@QBEHXZ PROC	; icu_56::ParsePosition::getErrorIndex, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getErrorIndex@ParsePosition@icu_56@@QBEHXZ ENDP	; icu_56::ParsePosition::getErrorIndex
_TEXT	ENDS
PUBLIC	?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z	; icu_56::ParsePosition::setErrorIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z PROC	; icu_56::ParsePosition::setErrorIndex, COMDAT
; _this$ = ecx
; Line 225
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 227
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z ENDP	; icu_56::ParsePosition::setErrorIndex
_TEXT	ENDS
PUBLIC	??_7SymbolTable@icu_56@@6B@			; icu_56::SymbolTable::`vftable'
PUBLIC	??0SymbolTable@icu_56@@QAE@XZ			; icu_56::SymbolTable::SymbolTable
PUBLIC	??_R4SymbolTable@icu_56@@6B@			; icu_56::SymbolTable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSymbolTable@icu_56@@@8			; icu_56::SymbolTable `RTTI Type Descriptor'
PUBLIC	??_R3SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SymbolTable@icu_56@@8		; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESymbolTable@icu_56@@UAEPAXI@Z		; icu_56::SymbolTable::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SymbolTable@icu_56@@8 DD FLAT:??_R0?AVSymbolTable@icu_56@@@8 ; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R2SymbolTable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SymbolTable@icu_56@@8 ; icu_56::SymbolTable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R3SymbolTable@icu_56@@8 DD 00H			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSymbolTable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSymbolTable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SymbolTable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSymbolTable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SymbolTable@icu_56@@6B@
rdata$r	SEGMENT
??_R4SymbolTable@icu_56@@6B@ DD 00H			; icu_56::SymbolTable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSymbolTable@icu_56@@@8
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SymbolTable@icu_56@@6B@
CONST	SEGMENT
??_7SymbolTable@icu_56@@6B@ DD FLAT:??_R4SymbolTable@icu_56@@6B@ ; icu_56::SymbolTable::`vftable'
	DD	FLAT:??_ESymbolTable@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0SymbolTable@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SymbolTable@icu_56@@QAE@XZ PROC			; icu_56::SymbolTable::SymbolTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0SymbolTable@icu_56@@QAE@XZ ENDP			; icu_56::SymbolTable::SymbolTable
_TEXT	ENDS
PUBLIC	??0SymbolTable@icu_56@@QAE@ABV01@@Z		; icu_56::SymbolTable::SymbolTable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SymbolTable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0SymbolTable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::SymbolTable::SymbolTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0SymbolTable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::SymbolTable::SymbolTable
_TEXT	ENDS
PUBLIC	??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::SymbolTable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::SymbolTable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::SymbolTable::operator=
_TEXT	ENDS
PUBLIC	??1SymbolTable@icu_56@@UAE@XZ			; icu_56::SymbolTable::~SymbolTable
PUBLIC	??_GSymbolTable@icu_56@@UAEPAXI@Z		; icu_56::SymbolTable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSymbolTable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSymbolTable@icu_56@@UAEPAXI@Z PROC			; icu_56::SymbolTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SymbolTable@icu_56@@UAE@XZ		; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSymbolTable@icu_56@@UAEPAXI@Z ENDP			; icu_56::SymbolTable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ESymbolTable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESymbolTable@icu_56@@UAEPAXI@Z PROC			; icu_56::SymbolTable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1SymbolTable@icu_56@@UAE@XZ	; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SymbolTable@icu_56@@UAE@XZ		; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESymbolTable@icu_56@@UAEPAXI@Z ENDP			; icu_56::SymbolTable::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
PUBLIC	??_7UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`vftable'
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@XZ		; icu_56::UnicodeFunctor::UnicodeFunctor
PUBLIC	??_R4UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFunctor::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFunctor@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeFunctor@icu_56@@6B@ DD 00H			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFunctor@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeFunctor@icu_56@@6B@ DD FLAT:??_R4UnicodeFunctor@icu_56@@6B@ ; icu_56::UnicodeFunctor::`vftable'
	DD	FLAT:??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFunctor@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFunctor::UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFunctor::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeFunctor::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeFunctor::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`scalar deleting destructor'
EXTRN	??1UnicodeFunctor@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFunctor::~UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`vftable'
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@XZ		; icu_56::UnicodeMatcher::UnicodeMatcher
PUBLIC	??_R4UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeMatcher@icu_56@@6B@ DD 00H			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeMatcher@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeMatcher@icu_56@@6B@ DD FLAT:??_R4UnicodeMatcher@icu_56@@6B@ ; icu_56::UnicodeMatcher::`vftable'
	DD	FLAT:??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@XZ PROC			; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeMatcher@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeMatcher::UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`scalar deleting destructor'
EXTRN	??1UnicodeMatcher@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeMatcher::~UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??0UnicodeFilter@icu_56@@QAE@XZ			; icu_56::UnicodeFilter::UnicodeFilter
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_EUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`vector deleting destructor'
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeFilter@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeFilter::matches
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFilter@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFilter@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFilter::UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UnicodeFil
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@UnicodeFil
$LN3@UnicodeFil:
	mov	DWORD PTR tv90[ebp], 0
$LN4@UnicodeFil:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFilter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeFilter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@operator@2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	DWORD PTR tv84[ebp], 0
$LN4@operator@2:
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeFilter::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`scalar deleting destructor'
EXTRN	??1UnicodeFilter@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFilter::~UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1UnicodeFilter@icu_56@@UAE@XZ	; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33522 = -32					; size = 4
_len$33521 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator@3
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator@3
; Line 3858
	jmp	SHORT $LN3@operator@3
$LN2@operator@3:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33521[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33522[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator@3
	mov	ecx, DWORD PTR _len$33521[ebp]
	cmp	ecx, DWORD PTR _textLength$33522[ebp]
	jne	SHORT $LN5@operator@3
	mov	edx, DWORD PTR _len$33521[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator@3
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator@3
$LN5@operator@3:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator@3:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator@3:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T45460 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T45460[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T45460[ebp]
	or	eax, 1
	mov	DWORD PTR $T45460[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??1UnicodeSet@icu_56@@UAE@XZ			; icu_56::UnicodeSet::~UnicodeSet
PUBLIC	??_GUnicodeSet@icu_56@@UAEPAXI@Z		; icu_56::UnicodeSet::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeSet@icu_56@@UAEPAXI@Z		; icu_56::UnicodeSet::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@10
	push	OFFSET ??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@10
$LN3@vector@10:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@10:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9UnicodeSet@icu_56@@QBECABV01@@Z		; icu_56::UnicodeSet::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeSet@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_o$ = 8							; size = 4
??9UnicodeSet@icu_56@@QBECABV01@@Z PROC			; icu_56::UnicodeSet::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\uniset.h
; Line 1651
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1652
	mov	esi, esp
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeSet@icu_56@@QBECABV01@@Z ENDP			; icu_56::UnicodeSet::operator!=
_TEXT	ENDS
PUBLIC	?isFrozen@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isFrozen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFrozen@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
?isFrozen@UnicodeSet@icu_56@@QBECXZ PROC		; icu_56::UnicodeSet::isFrozen, COMDAT
; _this$ = ecx
; Line 1655
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@isFrozen
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jne	SHORT $LN3@isFrozen
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN4@isFrozen
$LN3@isFrozen:
	mov	BYTE PTR tv68[ebp], 1
$LN4@isFrozen:
	mov	al, BYTE PTR tv68[ebp]
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFrozen@UnicodeSet@icu_56@@QBECXZ ENDP		; icu_56::UnicodeSet::isFrozen
_TEXT	ENDS
PUBLIC	?containsNone@UnicodeSet@icu_56@@QBECHH@Z	; icu_56::UnicodeSet::containsNone
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECHH@Z	; icu_56::UnicodeSet::containsSome
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?containsSome@UnicodeSet@icu_56@@QBECHH@Z PROC		; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1660
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECHH@Z ; icu_56::UnicodeSet::containsNone
	movsx	edx, al
	test	edx, edx
	sete	al
; Line 1661
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?containsSome@UnicodeSet@icu_56@@QBECHH@Z ENDP		; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z	; icu_56::UnicodeSet::containsNone
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z	; icu_56::UnicodeSet::containsSome
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1664
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsNone
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsSome
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1667
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1668
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1669
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeSet@icu_56@@QBECXZ PROC			; icu_56::UnicodeSet::isBogus, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1672
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+48]
	and	eax, 1
; Line 1673
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeSet@icu_56@@QBECXZ ENDP			; icu_56::UnicodeSet::isBogus
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1675
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1676
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1677
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1679
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1680
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1681
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1683
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1684
	mov	eax, DWORD PTR _this$[ebp]
; Line 1685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1688
	mov	eax, DWORD PTR _this$[ebp]
; Line 1689
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
PUBLIC	?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::span, COMDAT
; _this$ = ecx
; Line 1691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1692
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1693
	cmp	DWORD PTR _start$[ebp], 0
	jge	SHORT $LN3@span
; Line 1694
	mov	DWORD PTR _start$[ebp], 0
	jmp	SHORT $LN2@span
$LN3@span:
; Line 1695
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@span
; Line 1696
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN2@span:
; Line 1698
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	edx, DWORD PTR _start$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	add	eax, DWORD PTR _start$[ebp]
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::span
_TEXT	ENDS
PUBLIC	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
PUBLIC	?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_limit$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBack, COMDAT
; _this$ = ecx
; Line 1701
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1702
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1703
	cmp	DWORD PTR _limit$[ebp], 0
	jge	SHORT $LN3@spanBack
; Line 1704
	mov	DWORD PTR _limit$[ebp], 0
	jmp	SHORT $LN2@spanBack
$LN3@spanBack:
; Line 1705
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@spanBack
; Line 1706
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN2@spanBack:
; Line 1708
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
; Line 1709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBack
_TEXT	ENDS
PUBLIC	??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PatternProps::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PatternProps::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PatternProps::operator=
_TEXT	ENDS
PUBLIC	??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::ICU_Utility::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::ICU_Utility::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::ICU_Utility::operator=
_TEXT	ENDS
PUBLIC	?size@UVector@icu_56@@QBEHXZ			; icu_56::UVector::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@UVector@icu_56@@QBEHXZ PROC			; icu_56::UVector::size, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvector.h
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 353
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UVector@icu_56@@QBEHXZ ENDP			; icu_56::UVector::size
_TEXT	ENDS
PUBLIC	?isEmpty@UVector@icu_56@@QBECXZ			; icu_56::UVector::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UVector@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UVector@icu_56@@QBECXZ PROC			; icu_56::UVector::isEmpty, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UVector@icu_56@@QBECXZ ENDP			; icu_56::UVector::isEmpty
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECPAX@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHPAXH@Z:PROC	; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECPAX@Z PROC		; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHPAXH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECPAX@Z ENDP		; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECH@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHHH@Z:PROC		; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECH@Z PROC			; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 364
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHHH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECH@Z ENDP			; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?firstElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::firstElement
EXTRN	?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC	; icu_56::UVector::elementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?firstElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?firstElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::firstElement, COMDAT
; _this$ = ecx
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?firstElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::firstElement
_TEXT	ENDS
PUBLIC	?lastElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::lastElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::lastElement, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::lastElement
_TEXT	ENDS
PUBLIC	?lastElementi@UVector@icu_56@@QBEHXZ		; icu_56::UVector::lastElementi
EXTRN	?elementAti@UVector@icu_56@@QBEHH@Z:PROC	; icu_56::UVector::elementAti
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElementi@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElementi@UVector@icu_56@@QBEHXZ PROC		; icu_56::UVector::lastElementi, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
; Line 377
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElementi@UVector@icu_56@@QBEHXZ ENDP		; icu_56::UVector::lastElementi
_TEXT	ENDS
PUBLIC	??AUVector@icu_56@@QBEPAXH@Z			; icu_56::UVector::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUVector@icu_56@@QBEPAXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AUVector@icu_56@@QBEPAXH@Z PROC			; icu_56::UVector::operator[], COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUVector@icu_56@@QBEPAXH@Z ENDP			; icu_56::UVector::operator[]
_TEXT	ENDS
PUBLIC	??9UVector@icu_56@@QAECABV01@@Z			; icu_56::UVector::operator!=
EXTRN	??8UVector@icu_56@@QAECABV01@@Z:PROC		; icu_56::UVector::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UVector@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9UVector@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector::operator!=, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 384
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UVector@icu_56@@QAECABV01@@Z		; icu_56::UVector::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UVector@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector::operator!=
_TEXT	ENDS
PUBLIC	?empty@UStack@icu_56@@QBECXZ			; icu_56::UStack::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@UStack@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@UStack@icu_56@@QBECXZ PROC			; icu_56::UStack::empty, COMDAT
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@UStack@icu_56@@QBECXZ ENDP			; icu_56::UStack::empty
_TEXT	ENDS
PUBLIC	?peek@UStack@icu_56@@QBEPAXXZ			; icu_56::UStack::peek
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peek@UStack@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peek@UStack@icu_56@@QBEPAXXZ PROC			; icu_56::UStack::peek, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElement@UVector@icu_56@@QBEPAXXZ	; icu_56::UVector::lastElement
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peek@UStack@icu_56@@QBEPAXXZ ENDP			; icu_56::UStack::peek
_TEXT	ENDS
PUBLIC	?peeki@UStack@icu_56@@QBEHXZ			; icu_56::UStack::peeki
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peeki@UStack@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peeki@UStack@icu_56@@QBEHXZ PROC			; icu_56::UStack::peeki, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElementi@UVector@icu_56@@QBEHXZ	; icu_56::UVector::lastElementi
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peeki@UStack@icu_56@@QBEHXZ ENDP			; icu_56::UStack::peeki
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 403
	mov	eax, DWORD PTR _obj$[ebp]
; Line 404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z	; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 408
	mov	eax, DWORD PTR _i$[ebp]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
PUBLIC	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z	; icu_56::MaybeStackArray<char,40>::operator[]
PUBLIC	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
PUBLIC	??0CharString@icu_56@@QAE@XZ			; icu_56::CharString::CharString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\charstr.h
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0
__ehfuncinfo$??0CharString@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CharString@icu_56@@QAE@XZ PROC			; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@XZ ENDP			; icu_56::CharString::CharString
PUBLIC	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
PUBLIC	??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ; icu_56::CharString::CharString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 43
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 44
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 45
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::CharString
PUBLIC	?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::CharString::append
PUBLIC	??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ; icu_56::CharString::CharString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z PROC	; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 47
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 48
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ENDP	; icu_56::CharString::CharString
PUBLIC	??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::CharString
EXTRN	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC ; icu_56::CharString::append
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_sLength$ = 12						; size = 4
_errorCode$ = 16					; size = 4
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z PROC	; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 51
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 52
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 53
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z ENDP	; icu_56::CharString::CharString
PUBLIC	??1CharString@icu_56@@QAE@XZ			; icu_56::CharString::~CharString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CharString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharString@icu_56@@QAE@XZ PROC			; icu_56::CharString::~CharString, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharString@icu_56@@QAE@XZ ENDP			; icu_56::CharString::~CharString
_TEXT	ENDS
PUBLIC	?isEmpty@CharString@icu_56@@QBECXZ		; icu_56::CharString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@CharString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@CharString@icu_56@@QBECXZ PROC			; icu_56::CharString::isEmpty, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@CharString@icu_56@@QBECXZ ENDP			; icu_56::CharString::isEmpty
_TEXT	ENDS
PUBLIC	?length@CharString@icu_56@@QBEHXZ		; icu_56::CharString::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@CharString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@CharString@icu_56@@QBEHXZ PROC			; icu_56::CharString::length, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@CharString@icu_56@@QBEHXZ ENDP			; icu_56::CharString::length
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z	; icu_56::MaybeStackArray<char,40>::operator[]
PUBLIC	??ACharString@icu_56@@QBEDH@Z			; icu_56::CharString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??ACharString@icu_56@@QBEDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??ACharString@icu_56@@QBEDH@Z PROC			; icu_56::CharString::operator[], COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	al, BYTE PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??ACharString@icu_56@@QBEDH@Z ENDP			; icu_56::CharString::operator[]
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
PUBLIC	?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ; icu_56::CharString::toStringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ PROC ; icu_56::CharString::toStringPiece, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ENDP ; icu_56::CharString::toStringPiece
_TEXT	ENDS
PUBLIC	?data@CharString@icu_56@@QBEPBDXZ		; icu_56::CharString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@CharString@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CharString@icu_56@@QBEPBDXZ PROC			; icu_56::CharString::data, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CharString@icu_56@@QBEPBDXZ ENDP			; icu_56::CharString::data
_TEXT	ENDS
PUBLIC	?data@CharString@icu_56@@QAEPADXZ		; icu_56::CharString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@CharString@icu_56@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CharString@icu_56@@QAEPADXZ PROC			; icu_56::CharString::data, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CharString@icu_56@@QAEPADXZ ENDP			; icu_56::CharString::data
_TEXT	ENDS
PUBLIC	?clear@CharString@icu_56@@QAEAAV12@XZ		; icu_56::CharString::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@CharString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@CharString@icu_56@@QAEAAV12@XZ PROC		; icu_56::CharString::clear, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@CharString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::CharString::clear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::append, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@StringPiece@icu_56@@QBEHXZ	; icu_56::StringPiece::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?data@StringPiece@icu_56@@QBEPBDXZ	; icu_56::StringPiece::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::append, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@CharString@icu_56@@QBEHXZ	; icu_56::CharString::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?data@CharString@icu_56@@QBEPBDXZ	; icu_56::CharString::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1SymbolTable@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SymbolTable@icu_56@@UAE@XZ PROC			; icu_56::SymbolTable::~SymbolTable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uniset.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1SymbolTable@icu_56@@UAE@XZ ENDP			; icu_56::SymbolTable::~SymbolTable
_TEXT	ENDS
PUBLIC	?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ	; icu_56::UnicodeSet::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ PROC	; icu_56::UnicodeSet::getStaticClassID, COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ ENDP	; icu_56::UnicodeSet::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ	; icu_56::UnicodeSet::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ PROC	; icu_56::UnicodeSet::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ ; icu_56::UnicodeSet::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ ENDP	; icu_56::UnicodeSet::getDynamicClassID
_TEXT	ENDS
PUBLIC	?setToBogus@UnicodeSet@icu_56@@QAEXXZ		; icu_56::UnicodeSet::setToBogus
PUBLIC	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
PUBLIC	??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`vftable'
PUBLIC	??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`vftable'
PUBLIC	??0UnicodeSet@icu_56@@QAE@XZ			; icu_56::UnicodeSet::UnicodeSet
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ ; icu_56::UnicodeSet::clone
PUBLIC	?contains@UnicodeSet@icu_56@@UBECH@Z		; icu_56::UnicodeSet::contains
PUBLIC	??8UnicodeSet@icu_56@@UBECABV01@@Z		; icu_56::UnicodeSet::operator==
PUBLIC	?hashCode@UnicodeSet@icu_56@@UBEHXZ		; icu_56::UnicodeSet::hashCode
PUBLIC	?size@UnicodeSet@icu_56@@UBEHXZ			; icu_56::UnicodeSet::size
PUBLIC	?isEmpty@UnicodeSet@icu_56@@UBECXZ		; icu_56::UnicodeSet::isEmpty
PUBLIC	?contains@UnicodeSet@icu_56@@UBECHH@Z		; icu_56::UnicodeSet::contains
PUBLIC	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z	; icu_56::UnicodeSet::containsAll
PUBLIC	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z		; icu_56::UnicodeSet::add
PUBLIC	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z	; icu_56::UnicodeSet::addAll
PUBLIC	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z	; icu_56::UnicodeSet::retainAll
PUBLIC	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::complementAll
PUBLIC	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z	; icu_56::UnicodeSet::removeAll
PUBLIC	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z	; icu_56::UnicodeSet::retain
PUBLIC	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z	; icu_56::UnicodeSet::remove
PUBLIC	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z	; icu_56::UnicodeSet::complement
PUBLIC	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ	; icu_56::UnicodeSet::complement
PUBLIC	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ		; icu_56::UnicodeSet::clear
PUBLIC	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::removeAllStrings
PUBLIC	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ	; icu_56::UnicodeSet::getRangeCount
PUBLIC	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z	; icu_56::UnicodeSet::getRangeStart
PUBLIC	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z		; icu_56::UnicodeSet::getRangeEnd
PUBLIC	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ		; icu_56::UnicodeSet::compact
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
PUBLIC	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z ; icu_56::UnicodeSet::matches
PUBLIC	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::toPattern
PUBLIC	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z	; icu_56::UnicodeSet::matchesIndexValue
PUBLIC	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z	; icu_56::UnicodeSet::addMatchSetTo
EXTRN	_uprv_malloc_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UnicodeSet@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@QAE@XZ$0
__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UnicodeSet@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UnicodeSet@icu_56@@QAE@XZ
_TEXT	SEGMENT
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0UnicodeSet@icu_56@@QAE@XZ PROC			; icu_56::UnicodeSet::UnicodeSet, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UnicodeSet@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFilter@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 17			; 00000011H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 150
	mov	DWORD PTR _status$[ebp], 0
; Line 151
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
; Line 152
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@UnicodeSet
; Line 153
	jmp	SHORT $LN4@UnicodeSet
$LN3@UnicodeSet:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@UnicodeSet
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], 1114112		; 00110000H
; Line 158
	jmp	SHORT $LN4@UnicodeSet
$LN2@UnicodeSet:
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
$LN4@UnicodeSet:
; Line 163
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@UnicodeSet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@UnicodeSet:
	DD	1
	DD	$LN9@UnicodeSet
$LN9@UnicodeSet:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@UnicodeSet
$LN7@UnicodeSet:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__ehhandler$??0UnicodeSet@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UnicodeSet@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UnicodeSet@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeSet::UnicodeSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0UnicodeSet@icu_56@@QAE@HH@Z			; icu_56::UnicodeSet::UnicodeSet
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\uniset.cpp
xdata$x	SEGMENT
__unwindtable$??0UnicodeSet@icu_56@@QAE@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@QAE@HH@Z$0
__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UnicodeSet@icu_56@@QAE@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UnicodeSet@icu_56@@QAE@HH@Z
_TEXT	SEGMENT
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 4
_end$ = 12						; size = 4
??0UnicodeSet@icu_56@@QAE@HH@Z PROC			; icu_56::UnicodeSet::UnicodeSet, COMDAT
; _this$ = ecx
; Line 176
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UnicodeSet@icu_56@@QAE@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFilter@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 17			; 00000011H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 177
	mov	DWORD PTR _status$[ebp], 0
; Line 178
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
; Line 179
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@UnicodeSet@2
; Line 180
	jmp	SHORT $LN4@UnicodeSet@2
$LN3@UnicodeSet@2:
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@UnicodeSet@2
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], 1114112		; 00110000H
; Line 185
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::complement
; Line 186
	jmp	SHORT $LN4@UnicodeSet@2
$LN2@UnicodeSet@2:
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
$LN4@UnicodeSet@2:
; Line 191
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@UnicodeSet@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN10@UnicodeSet@2:
	DD	1
	DD	$LN9@UnicodeSet@2
$LN9@UnicodeSet@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@UnicodeSet@2
$LN7@UnicodeSet@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@HH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__ehhandler$??0UnicodeSet@icu_56@@QAE@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UnicodeSet@icu_56@@QAE@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UnicodeSet@icu_56@@QAE@HH@Z ENDP			; icu_56::UnicodeSet::UnicodeSet
PUBLIC	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UnicodeSet::operator=
PUBLIC	??0UnicodeSet@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeSet::UnicodeSet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UnicodeSet@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UnicodeSet@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv131 = -232						; size = 4
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_o$ = 8							; size = 4
??0UnicodeSet@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UnicodeSet::UnicodeSet, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _o$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@UnicodeSet@3
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN7@UnicodeSet@3
$LN6@UnicodeSet@3:
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv131[ebp], ecx
$LN7@UnicodeSet@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 204
	mov	DWORD PTR _status$[ebp], 0
; Line 205
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
; Line 206
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@UnicodeSet@3
; Line 207
	jmp	SHORT $LN4@UnicodeSet@3
$LN3@UnicodeSet@3:
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@UnicodeSet@3
; Line 211
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 212
	jmp	SHORT $LN4@UnicodeSet@3
$LN2@UnicodeSet@3:
; Line 213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
$LN4@UnicodeSet@3:
; Line 217
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@UnicodeSet@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@UnicodeSet@3:
	DD	1
	DD	$LN11@UnicodeSet@3
$LN11@UnicodeSet@3:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@UnicodeSet@3
$LN9@UnicodeSet@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__ehhandler$??0UnicodeSet@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UnicodeSet@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UnicodeSet::UnicodeSet
PUBLIC	?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::setPattern
PUBLIC	__$ArrayPad$
PUBLIC	??0UnicodeSet@icu_56@@AAE@ABV01@C@Z		; icu_56::UnicodeSet::UnicodeSet
EXTRN	??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::assign
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$1
__ehfuncinfo$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UnicodeSet@icu_56@@AAE@ABV01@C@Z
_TEXT	SEGMENT
tv186 = -312						; size = 4
tv69 = -308						; size = 4
$T37032 = -300						; size = 64
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_o$ = 8							; size = 4
___formal$ = 12						; size = 1
??0UnicodeSet@icu_56@@AAE@ABV01@C@Z PROC		; icu_56::UnicodeSet::UnicodeSet, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 228
	mov	DWORD PTR _status$[ebp], 0
; Line 229
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
; Line 230
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@UnicodeSet@4
; Line 231
	jmp	$LN7@UnicodeSet@4
$LN6@UnicodeSet@4:
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN5@UnicodeSet@4
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 237
	push	1
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN4@UnicodeSet@4
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN4@UnicodeSet@4
; Line 239
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z ; icu_56::cloneUnicodeString
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z ; icu_56::UVector::assign
; Line 240
	jmp	SHORT $LN3@UnicodeSet@4
$LN4@UnicodeSet@4:
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 242
	jmp	SHORT $LN7@UnicodeSet@4
$LN3@UnicodeSet@4:
; Line 244
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@UnicodeSet@4
; Line 245
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	lea	ecx, DWORD PTR $T37032[ebp]
	call	??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv186[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::setPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T37032[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN2@UnicodeSet@4:
; Line 247
	jmp	SHORT $LN7@UnicodeSet@4
$LN5@UnicodeSet@4:
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
$LN7@UnicodeSet@4:
; Line 252
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@UnicodeSet@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN14@UnicodeSet@4:
	DD	1
	DD	$LN13@UnicodeSet@4
$LN13@UnicodeSet@4:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@UnicodeSet@4
$LN11@UnicodeSet@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$1:
	lea	ecx, DWORD PTR $T37032[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UnicodeSet@icu_56@@AAE@ABV01@C@Z ENDP		; icu_56::UnicodeSet::UnicodeSet
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	??2UMemory@icu_56@@SAPAXI@Z:PROC		; icu_56::UMemory::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z$0
__ehfuncinfo$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z
_TEXT	SEGMENT
tv72 = -232						; size = 4
$T45725 = -224						; size = 4
$T45726 = -212						; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z PROC	; icu_56::cloneUnicodeString, COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 129
	push	64					; 00000040H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45726[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45726[ebp], 0
	je	SHORT $LN3@cloneUnico
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T45726[ebp]
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@cloneUnico
$LN3@cloneUnico:
	mov	DWORD PTR tv72[ebp], 0
$LN4@cloneUnico:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T45725[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _dst$[ebp]
	mov	ecx, DWORD PTR $T45725[ebp]
	mov	DWORD PTR [eax], ecx
; Line 130
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z$0:
	mov	eax, DWORD PTR $T45726[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z ENDP	; icu_56::cloneUnicodeString
PUBLIC	?releasePattern@UnicodeSet@icu_56@@AAEXXZ	; icu_56::UnicodeSet::releasePattern
PUBLIC	??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z	; icu_56::UnicodeSetStringSpan::`scalar deleting destructor'
EXTRN	_uprv_free_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1UnicodeSet@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1UnicodeSet@icu_56@@UAE@XZ$0
__ehfuncinfo$??1UnicodeSet@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1UnicodeSet@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1UnicodeSet@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv142 = -292						; size = 4
tv136 = -292						; size = 4
tv88 = -292						; size = 4
$T45738 = -284						; size = 4
$T45739 = -272						; size = 4
$T45742 = -260						; size = 4
$T45743 = -248						; size = 4
$T45746 = -236						; size = 4
$T45747 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1UnicodeSet@icu_56@@UAE@XZ PROC			; icu_56::UnicodeSet::~UnicodeSet, COMDAT
; _this$ = ecx
; Line 257
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1UnicodeSet@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T45739[ebp], ecx
	mov	edx, DWORD PTR $T45739[ebp]
	mov	DWORD PTR $T45738[ebp], edx
	cmp	DWORD PTR $T45738[ebp], 0
	je	SHORT $LN4@UnicodeSet@5
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45738[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45738[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@UnicodeSet@5
$LN4@UnicodeSet@5:
	mov	DWORD PTR tv88[ebp], 0
$LN5@UnicodeSet@5:
; Line 261
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@UnicodeSet@5
; Line 262
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@UnicodeSet@5:
; Line 264
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T45743[ebp], ecx
	mov	edx, DWORD PTR $T45743[ebp]
	mov	DWORD PTR $T45742[ebp], edx
	cmp	DWORD PTR $T45742[ebp], 0
	je	SHORT $LN6@UnicodeSet@5
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45742[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45742[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN7@UnicodeSet@5
$LN6@UnicodeSet@5:
	mov	DWORD PTR tv136[ebp], 0
$LN7@UnicodeSet@5:
; Line 265
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T45747[ebp], ecx
	mov	edx, DWORD PTR $T45747[ebp]
	mov	DWORD PTR $T45746[ebp], edx
	cmp	DWORD PTR $T45746[ebp], 0
	je	SHORT $LN8@UnicodeSet@5
	push	1
	mov	ecx, DWORD PTR $T45746[ebp]
	call	??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $LN9@UnicodeSet@5
$LN8@UnicodeSet@5:
	mov	DWORD PTR tv142[ebp], 0
$LN9@UnicodeSet@5:
; Line 266
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 267
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1UnicodeSet@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__ehhandler$??1UnicodeSet@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1UnicodeSet@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1UnicodeSet@icu_56@@UAE@XZ ENDP			; icu_56::UnicodeSet::~UnicodeSet
EXTRN	??1UnicodeSetStringSpan@icu_56@@QAE@XZ:PROC	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z PROC		; icu_56::UnicodeSetStringSpan::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z ENDP		; icu_56::UnicodeSetStringSpan::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureCapacity
PUBLIC	__$ArrayPad$
EXTRN	??0UnicodeSetStringSpan@icu_56@@QAE@ABV01@ABVUVector@1@@Z:PROC ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
EXTRN	??0BMPSet@icu_56@@QAE@ABV01@PBHH@Z:PROC		; icu_56::BMPSet::BMPSet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$2
__ehfuncinfo$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv191 = -360						; size = 4
tv194 = -356						; size = 4
tv172 = -356						; size = 4
tv143 = -356						; size = 4
$T37075 = -348						; size = 64
$T45762 = -276						; size = 4
$T45763 = -264						; size = 4
$T45766 = -252						; size = 4
$T45767 = -240						; size = 4
_ec$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_o$ = 8							; size = 4
??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeSet::operator=, COMDAT
; _this$ = ecx
; Line 272
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 273
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _o$[ebp]
	jne	SHORT $LN13@operator@4
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN14@operator@4
$LN13@operator@4:
; Line 276
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator@4
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN14@operator@4
$LN12@operator@4:
; Line 279
	mov	ecx, DWORD PTR _o$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@operator@4
; Line 280
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN14@operator@4
$LN11@operator@4:
; Line 283
	mov	DWORD PTR _ec$[ebp], 0
; Line 284
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureCapacity
; Line 285
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@operator@4
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN14@operator@4
$LN10@operator@4:
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 289
	push	1
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 290
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN9@operator@4
; Line 291
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 292
	jmp	$LN8@operator@4
$LN9@operator@4:
; Line 293
	push	788					; 00000314H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45763[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45763[ebp], 0
	je	SHORT $LN16@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR $T45763[ebp]
	call	??0BMPSet@icu_56@@QAE@ABV01@PBHH@Z	; icu_56::BMPSet::BMPSet
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN17@operator@4
$LN16@operator@4:
	mov	DWORD PTR tv143[ebp], 0
$LN17@operator@4:
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T45762[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T45762[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN8@operator@4
; Line 295
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 296
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN14@operator@4
$LN8@operator@4:
; Line 299
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN6@operator@4
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN6@operator@4
; Line 300
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	OFFSET ?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z ; icu_56::cloneUnicodeString
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z ; icu_56::UVector::assign
; Line 301
	jmp	SHORT $LN5@operator@4
$LN6@operator@4:
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 303
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN14@operator@4
$LN5@operator@4:
; Line 305
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN4@operator@4
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 307
	jmp	$LN3@operator@4
$LN4@operator@4:
; Line 308
	push	216					; 000000d8H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45767[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T45767[ebp], 0
	je	SHORT $LN18@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR $T45767[ebp]
	call	??0UnicodeSetStringSpan@icu_56@@QAE@ABV01@ABVUVector@1@@Z ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN19@operator@4
$LN18@operator@4:
	mov	DWORD PTR tv172[ebp], 0
$LN19@operator@4:
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR $T45766[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T45766[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 309
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN3@operator@4
; Line 310
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN14@operator@4
$LN3@operator@4:
; Line 314
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 315
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN1@operator@4
; Line 316
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	lea	ecx, DWORD PTR $T37075[ebp]
	call	??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv191[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv191[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::setPattern
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T37075[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN1@operator@4:
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
$LN14@operator@4:
; Line 319
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@operator@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN26@operator@4:
	DD	1
	DD	$LN25@operator@4
$LN25@operator@4:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN23@operator@4
$LN23@operator@4:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	eax, DWORD PTR $T45763[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$1:
	mov	eax, DWORD PTR $T45767[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$2:
	lea	ecx, DWORD PTR $T37075[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeSet::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0
__ehfuncinfo$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T45784 = -236						; size = 4
$T45785 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ PROC ; icu_56::UnicodeSet::clone, COMDAT
; _this$ = ecx
; Line 326
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45785[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45785[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45785[ebp]
	call	??0UnicodeSet@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T45784[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T45784[ebp]
; Line 328
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0:
	mov	eax, DWORD PTR $T45785[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ ENDP ; icu_56::UnicodeSet::clone
PUBLIC	?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ ; icu_56::UnicodeSet::cloneAsThawed
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ$0
__ehfuncinfo$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T45797 = -236						; size = 4
$T45798 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ PROC ; icu_56::UnicodeSet::cloneAsThawed, COMDAT
; _this$ = ecx
; Line 330
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 331
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45798[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45798[ebp], 0
	je	SHORT $LN3@cloneAsTha
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45798[ebp]
	call	??0UnicodeSet@icu_56@@AAE@ABV01@C@Z	; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@cloneAsTha
$LN3@cloneAsTha:
	mov	DWORD PTR tv76[ebp], 0
$LN4@cloneAsTha:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T45797[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T45797[ebp]
; Line 332
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ$0:
	mov	eax, DWORD PTR $T45798[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ ENDP ; icu_56::UnicodeSet::cloneAsThawed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeSet@icu_56@@UBECABV01@@Z
_TEXT	SEGMENT
_i$37095 = -20						; size = 4
_this$ = -8						; size = 4
_o$ = 8							; size = 4
??8UnicodeSet@icu_56@@UBECABV01@@Z PROC			; icu_56::UnicodeSet::operator==, COMDAT
; _this$ = ecx
; Line 344
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 345
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN6@operator@5
	xor	al, al
	jmp	SHORT $LN7@operator@5
$LN6@operator@5:
; Line 346
	mov	DWORD PTR _i$37095[ebp], 0
	jmp	SHORT $LN5@operator@5
$LN4@operator@5:
	mov	eax, DWORD PTR _i$37095[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37095[ebp], eax
$LN5@operator@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37095[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN3@operator@5
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _i$37095[ebp]
	mov	esi, DWORD PTR _i$37095[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	cmp	ecx, DWORD PTR [eax+esi*4]
	je	SHORT $LN2@operator@5
	xor	al, al
	jmp	SHORT $LN7@operator@5
$LN2@operator@5:
; Line 348
	jmp	SHORT $LN4@operator@5
$LN3@operator@5:
; Line 349
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	??9UVector@icu_56@@QAECABV01@@Z		; icu_56::UVector::operator!=
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator@5
	xor	al, al
	jmp	SHORT $LN7@operator@5
$LN1@operator@5:
; Line 350
	mov	al, 1
$LN7@operator@5:
; Line 351
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeSet@icu_56@@UBECABV01@@Z ENDP			; icu_56::UnicodeSet::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?hashCode@UnicodeSet@icu_56@@UBEHXZ
_TEXT	SEGMENT
_i$37106 = -32						; size = 4
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?hashCode@UnicodeSet@icu_56@@UBEHXZ PROC		; icu_56::UnicodeSet::hashCode, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _result$[ebp], ecx
; Line 361
	mov	DWORD PTR _i$37106[ebp], 0
	jmp	SHORT $LN3@hashCode
$LN2@hashCode:
	mov	eax, DWORD PTR _i$37106[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37106[ebp], eax
$LN3@hashCode:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37106[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN1@hashCode
; Line 362
	mov	eax, DWORD PTR _result$[ebp]
	imul	eax, 1000003				; 000f4243H
	mov	DWORD PTR _result$[ebp], eax
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$37106[ebp]
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _result$[ebp], eax
; Line 364
	jmp	SHORT $LN2@hashCode
$LN1@hashCode:
; Line 365
	mov	eax, DWORD PTR _result$[ebp]
; Line 366
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeSet@icu_56@@UBEHXZ ENDP		; icu_56::UnicodeSet::hashCode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@UnicodeSet@icu_56@@UBEHXZ
_TEXT	SEGMENT
_i$37116 = -44						; size = 4
_count$ = -32						; size = 4
_n$ = -20						; size = 4
_this$ = -8						; size = 4
?size@UnicodeSet@icu_56@@UBEHXZ PROC			; icu_56::UnicodeSet::size, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	DWORD PTR _n$[ebp], 0
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 382
	mov	DWORD PTR _i$37116[ebp], 0
	jmp	SHORT $LN3@size
$LN2@size:
	mov	eax, DWORD PTR _i$37116[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37116[ebp], eax
$LN3@size:
	mov	eax, DWORD PTR _i$37116[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN1@size
; Line 383
	mov	esi, esp
	mov	eax, DWORD PTR _i$37116[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _i$37116[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, DWORD PTR _n$[ebp]
	lea	ecx, DWORD PTR [eax+esi+1]
	mov	DWORD PTR _n$[ebp], ecx
; Line 384
	jmp	SHORT $LN2@size
$LN1@size:
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	add	eax, DWORD PTR _n$[ebp]
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UnicodeSet@icu_56@@UBEHXZ ENDP			; icu_56::UnicodeSet::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isEmpty@UnicodeSet@icu_56@@UBECXZ
_TEXT	SEGMENT
tv70 = -205						; size = 1
_this$ = -8						; size = 4
?isEmpty@UnicodeSet@icu_56@@UBECXZ PROC			; icu_56::UnicodeSet::isEmpty, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 1
	jne	SHORT $LN3@isEmpty
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	test	eax, eax
	jne	SHORT $LN3@isEmpty
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN4@isEmpty
$LN3@isEmpty:
	mov	BYTE PTR tv70[ebp], 0
$LN4@isEmpty:
	mov	al, BYTE PTR tv70[ebp]
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeSet@icu_56@@UBECXZ ENDP			; icu_56::UnicodeSet::isEmpty
_TEXT	ENDS
PUBLIC	?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z	; icu_56::UnicodeSet::findCodePoint
PUBLIC	?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z	; icu_56::UnicodeSetStringSpan::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UnicodeSet@icu_56@@UBECH@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?contains@UnicodeSet@icu_56@@UBECH@Z PROC		; icu_56::UnicodeSet::contains, COMDAT
; _this$ = ecx
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@contains
; Line 411
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@contains
$LN3@contains:
; Line 413
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN2@contains
; Line 414
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+44]
	call	?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z ; icu_56::UnicodeSetStringSpan::contains
	jmp	SHORT $LN4@contains
$LN2@contains:
; Line 416
	cmp	DWORD PTR _c$[ebp], 1114112		; 00110000H
	jl	SHORT $LN1@contains
; Line 417
	xor	al, al
	jmp	SHORT $LN4@contains
$LN1@contains:
; Line 419
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z ; icu_56::UnicodeSet::findCodePoint
	mov	DWORD PTR _i$[ebp], eax
; Line 420
	mov	eax, DWORD PTR _i$[ebp]
	and	eax, 1
$LN4@contains:
; Line 421
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UnicodeSet@icu_56@@UBECH@Z ENDP		; icu_56::UnicodeSet::contains
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z PROC	; icu_56::UnicodeSetStringSpan::contains, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unisetspan.h
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z ENDP	; icu_56::UnicodeSetStringSpan::contains
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z
_TEXT	SEGMENT
_i$37145 = -44						; size = 4
_hi$ = -32						; size = 4
_lo$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z PROC		; icu_56::UnicodeSet::findCodePoint, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uniset.cpp
; Line 432
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN9@findCodePo
; Line 446
	xor	eax, eax
	jmp	SHORT $LN10@findCodePo
$LN9@findCodePo:
; Line 449
	mov	DWORD PTR _lo$[ebp], 0
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR _hi$[ebp], ecx
; Line 451
	mov	eax, DWORD PTR _lo$[ebp]
	cmp	eax, DWORD PTR _hi$[ebp]
	jge	SHORT $LN7@findCodePo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _hi$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jl	SHORT $LN6@findCodePo
$LN7@findCodePo:
; Line 452
	mov	eax, DWORD PTR _hi$[ebp]
	jmp	SHORT $LN10@findCodePo
$LN6@findCodePo:
; Line 456
	mov	eax, DWORD PTR _lo$[ebp]
	add	eax, DWORD PTR _hi$[ebp]
	sar	eax, 1
	mov	DWORD PTR _i$37145[ebp], eax
; Line 457
	mov	eax, DWORD PTR _i$37145[ebp]
	cmp	eax, DWORD PTR _lo$[ebp]
	jne	SHORT $LN4@findCodePo
; Line 458
	jmp	SHORT $LN5@findCodePo
	jmp	SHORT $LN3@findCodePo
$LN4@findCodePo:
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$37145[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4]
	jge	SHORT $LN2@findCodePo
; Line 460
	mov	eax, DWORD PTR _i$37145[ebp]
	mov	DWORD PTR _hi$[ebp], eax
; Line 461
	jmp	SHORT $LN3@findCodePo
$LN2@findCodePo:
; Line 462
	mov	eax, DWORD PTR _i$37145[ebp]
	mov	DWORD PTR _lo$[ebp], eax
$LN3@findCodePo:
; Line 464
	jmp	SHORT $LN6@findCodePo
$LN5@findCodePo:
; Line 465
	mov	eax, DWORD PTR _hi$[ebp]
$LN10@findCodePo:
; Line 466
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z ENDP		; icu_56::UnicodeSet::findCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?contains@UnicodeSet@icu_56@@UBECHH@Z
_TEXT	SEGMENT
tv73 = -217						; size = 1
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?contains@UnicodeSet@icu_56@@UBECHH@Z PROC		; icu_56::UnicodeSet::contains, COMDAT
; _this$ = ecx
; Line 475
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 480
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z ; icu_56::UnicodeSet::findCodePoint
	mov	DWORD PTR _i$[ebp], eax
; Line 481
	mov	eax, DWORD PTR _i$[ebp]
	and	eax, 1
	je	SHORT $LN3@contains@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	cmp	ecx, DWORD PTR [edx+eax*4]
	jge	SHORT $LN3@contains@2
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@contains@2
$LN3@contains@2:
	mov	BYTE PTR tv73[ebp], 0
$LN4@contains@2:
	mov	al, BYTE PTR tv73[ebp]
; Line 482
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?contains@UnicodeSet@icu_56@@UBECHH@Z ENDP		; icu_56::UnicodeSet::contains
_TEXT	ENDS
PUBLIC	?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::getSingleCP
PUBLIC	?contains@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_cp$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?contains@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::contains, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 491
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	test	eax, eax
	jne	SHORT $LN3@contains@3
	xor	al, al
	jmp	SHORT $LN4@contains@3
$LN3@contains@3:
; Line 492
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::getSingleCP
	add	esp, 4
	mov	DWORD PTR _cp$[ebp], eax
; Line 493
	cmp	DWORD PTR _cp$[ebp], 0
	jge	SHORT $LN2@contains@3
; Line 494
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?contains@UVector@icu_56@@QBECPAX@Z	; icu_56::UVector::contains
	jmp	SHORT $LN4@contains@3
; Line 495
	jmp	SHORT $LN4@contains@3
$LN2@contains@3:
; Line 496
	mov	esi, esp
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@contains@3:
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::contains
_TEXT	ENDS
EXTRN	?containsAll@UVector@icu_56@@QBECABV12@@Z:PROC	; icu_56::UVector::containsAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
_TEXT	SEGMENT
_i$37171 = -32						; size = 4
_n$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z PROC	; icu_56::UnicodeSet::containsAll, COMDAT
; _this$ = ecx
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 510
	mov	eax, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _n$[ebp], eax
; Line 511
	mov	DWORD PTR _i$37171[ebp], 0
	jmp	SHORT $LN5@containsAl
$LN4@containsAl:
	mov	eax, DWORD PTR _i$37171[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37171[ebp], eax
$LN5@containsAl:
	mov	eax, DWORD PTR _i$37171[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN3@containsAl
; Line 512
	mov	esi, esp
	mov	eax, DWORD PTR _i$37171[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _i$37171[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@containsAl
; Line 513
	xor	al, al
	jmp	SHORT $LN6@containsAl
$LN2@containsAl:
; Line 515
	jmp	SHORT $LN4@containsAl
$LN3@containsAl:
; Line 516
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?containsAll@UVector@icu_56@@QBECABV12@@Z ; icu_56::UVector::containsAll
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@containsAl
	xor	al, al
	jmp	SHORT $LN6@containsAl
$LN1@containsAl:
; Line 517
	mov	al, 1
$LN6@containsAl:
; Line 518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsAll
_TEXT	ENDS
PUBLIC	?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsAll, COMDAT
; _this$ = ecx
; Line 526
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 528
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	mov	esi, eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	sete	al
; Line 529
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?containsNone@UnicodeSet@icu_56@@QBECHH@Z
_TEXT	SEGMENT
tv73 = -217						; size = 1
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?containsNone@UnicodeSet@icu_56@@QBECHH@Z PROC		; icu_56::UnicodeSet::containsNone, COMDAT
; _this$ = ecx
; Line 538
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 543
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z ; icu_56::UnicodeSet::findCodePoint
	mov	DWORD PTR _i$[ebp], eax
; Line 544
	mov	eax, DWORD PTR _i$[ebp]
	and	eax, 1
	jne	SHORT $LN3@containsNo
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	cmp	ecx, DWORD PTR [edx+eax*4]
	jge	SHORT $LN3@containsNo
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@containsNo
$LN3@containsNo:
	mov	BYTE PTR tv73[ebp], 0
$LN4@containsNo:
	mov	al, BYTE PTR tv73[ebp]
; Line 545
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?containsNone@UnicodeSet@icu_56@@QBECHH@Z ENDP		; icu_56::UnicodeSet::containsNone
_TEXT	ENDS
EXTRN	?containsNone@UVector@icu_56@@QBECABV12@@Z:PROC	; icu_56::UVector::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_i$37193 = -32						; size = 4
_n$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeSet::containsNone, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 557
	mov	eax, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _n$[ebp], eax
; Line 558
	mov	DWORD PTR _i$37193[ebp], 0
	jmp	SHORT $LN5@containsNo@2
$LN4@containsNo@2:
	mov	eax, DWORD PTR _i$37193[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37193[ebp], eax
$LN5@containsNo@2:
	mov	eax, DWORD PTR _i$37193[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN3@containsNo@2
; Line 559
	mov	esi, esp
	mov	eax, DWORD PTR _i$37193[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _i$37193[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECHH@Z ; icu_56::UnicodeSet::containsNone
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@containsNo@2
; Line 560
	xor	al, al
	jmp	SHORT $LN6@containsNo@2
$LN2@containsNo@2:
; Line 562
	jmp	SHORT $LN4@containsNo@2
$LN3@containsNo@2:
; Line 563
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?containsNone@UVector@icu_56@@QBECABV12@@Z ; icu_56::UVector::containsNone
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@containsNo@2
	xor	al, al
	jmp	SHORT $LN6@containsNo@2
$LN1@containsNo@2:
; Line 564
	mov	al, 1
$LN6@containsNo@2:
; Line 565
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsNone, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 575
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	mov	esi, eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	sete	al
; Line 576
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsNone
_TEXT	ENDS
EXTRN	?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC	; icu_56::UnicodeString::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
_TEXT	SEGMENT
_c$37226 = -80						; size = 4
_s$37224 = -68						; size = 4
_high$37214 = -56					; size = 4
_low$37213 = -44					; size = 4
_rangeCount$ = -32					; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_v$ = 8							; size = 1
?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z PROC	; icu_56::UnicodeSet::matchesIndexValue, COMDAT
; _this$ = ecx
; Line 583
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-4]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rangeCount$[ebp], eax
; Line 594
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@matchesInd
$LN12@matchesInd:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@matchesInd:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _rangeCount$[ebp]
	jge	$LN11@matchesInd
; Line 595
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _low$37213[ebp], eax
; Line 596
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _high$37214[ebp], eax
; Line 597
	mov	eax, DWORD PTR _low$37213[ebp]
	and	eax, -256				; ffffff00H
	mov	ecx, DWORD PTR _high$37214[ebp]
	and	ecx, -256				; ffffff00H
	cmp	eax, ecx
	jne	SHORT $LN10@matchesInd
; Line 598
	mov	eax, DWORD PTR _low$37213[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR _v$[ebp]
	cmp	eax, ecx
	jg	SHORT $LN9@matchesInd
	movzx	eax, BYTE PTR _v$[ebp]
	mov	ecx, DWORD PTR _high$37214[ebp]
	and	ecx, 255				; 000000ffH
	cmp	eax, ecx
	jg	SHORT $LN9@matchesInd
; Line 599
	mov	al, 1
	jmp	$LN14@matchesInd
$LN9@matchesInd:
; Line 600
	jmp	SHORT $LN8@matchesInd
$LN10@matchesInd:
; Line 601
	mov	eax, DWORD PTR _low$37213[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR _v$[ebp]
	cmp	eax, ecx
	jle	SHORT $LN6@matchesInd
	movzx	eax, BYTE PTR _v$[ebp]
	mov	ecx, DWORD PTR _high$37214[ebp]
	and	ecx, 255				; 000000ffH
	cmp	eax, ecx
	jg	SHORT $LN8@matchesInd
$LN6@matchesInd:
; Line 602
	mov	al, 1
	jmp	SHORT $LN14@matchesInd
$LN8@matchesInd:
; Line 604
	jmp	$LN12@matchesInd
$LN11@matchesInd:
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	test	eax, eax
	je	SHORT $LN5@matchesInd
; Line 606
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@matchesInd
$LN3@matchesInd:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@matchesInd:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN5@matchesInd
; Line 607
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	mov	DWORD PTR _s$37224[ebp], eax
; Line 613
	push	0
	mov	ecx, DWORD PTR _s$37224[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	DWORD PTR _c$37226[ebp], eax
; Line 614
	mov	eax, DWORD PTR _c$37226[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR _v$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@matchesInd
; Line 615
	mov	al, 1
	jmp	SHORT $LN14@matchesInd
$LN1@matchesInd:
; Line 617
	jmp	SHORT $LN3@matchesInd
$LN5@matchesInd:
; Line 619
	xor	al, al
$LN14@matchesInd:
; Line 620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z ENDP	; icu_56::UnicodeSet::matchesIndexValue
_TEXT	ENDS
PUBLIC	?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::matchRest
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
_TEXT	SEGMENT
tv175 = -304						; size = 4
tv162 = -304						; size = 4
tv141 = -304						; size = 4
_maxLen$37255 = -104					; size = 4
_matchLen$37253 = -92					; size = 4
_c$37250 = -80						; size = 2
_trial$37248 = -68					; size = 4
_highWaterLength$37244 = -56				; size = 4
_firstChar$37243 = -44					; size = 2
_forward$37242 = -29					; size = 1
_i$37241 = -20						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_offset$ = 12						; size = 4
_limit$ = 16						; size = 4
_incremental$ = 20					; size = 1
?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z PROC ; icu_56::UnicodeSet::matches, COMDAT
; _this$ = ecx
; Line 629
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 630
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _limit$[ebp]
	jne	SHORT $LN16@matches
; Line 634
	mov	esi, esp
	push	65535					; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-4]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@matches
; Line 635
	movsx	eax, BYTE PTR _incremental$[ebp]
	neg	eax
	sbb	eax, eax
	add	eax, 2
	jmp	$LN17@matches
; Line 636
	jmp	SHORT $LN14@matches
$LN15@matches:
; Line 637
	xor	eax, eax
	jmp	$LN17@matches
$LN14@matches:
; Line 639
	jmp	$LN17@matches
$LN16@matches:
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	test	eax, eax
	je	$LN12@matches
; Line 650
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _limit$[ebp]
	setl	dl
	mov	BYTE PTR _forward$37242[ebp], dl
; Line 655
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?charAt@Replaceable@icu_56@@QBE_WH@Z	; icu_56::Replaceable::charAt
	mov	WORD PTR _firstChar$37243[ebp], ax
; Line 659
	mov	DWORD PTR _highWaterLength$37244[ebp], 0
; Line 661
	mov	DWORD PTR _i$37241[ebp], 0
	jmp	SHORT $LN11@matches
$LN10@matches:
	mov	eax, DWORD PTR _i$37241[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37241[ebp], eax
$LN11@matches:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$37241[ebp], eax
	jge	$LN9@matches
; Line 662
	mov	eax, DWORD PTR _i$37241[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	mov	DWORD PTR _trial$37248[ebp], eax
; Line 669
	movsx	eax, BYTE PTR _forward$37242[ebp]
	test	eax, eax
	je	SHORT $LN19@matches
	mov	DWORD PTR tv141[ebp], 0
	jmp	SHORT $LN20@matches
$LN19@matches:
	mov	ecx, DWORD PTR _trial$37248[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, 1
	mov	DWORD PTR tv141[ebp], eax
$LN20@matches:
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	mov	ecx, DWORD PTR _trial$37248[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$37250[ebp], ax
; Line 673
	movsx	eax, BYTE PTR _forward$37242[ebp]
	test	eax, eax
	je	SHORT $LN8@matches
	movzx	eax, WORD PTR _c$37250[ebp]
	movzx	ecx, WORD PTR _firstChar$37243[ebp]
	cmp	eax, ecx
	jle	SHORT $LN8@matches
	jmp	$LN9@matches
$LN8@matches:
; Line 674
	movzx	eax, WORD PTR _c$37250[ebp]
	movzx	ecx, WORD PTR _firstChar$37243[ebp]
	cmp	eax, ecx
	je	SHORT $LN7@matches
	jmp	$LN10@matches
$LN7@matches:
; Line 676
	mov	eax, DWORD PTR _trial$37248[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _offset$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::matchRest
	add	esp, 16					; 00000010H
	mov	DWORD PTR _matchLen$37253[ebp], eax
; Line 678
	movsx	eax, BYTE PTR _incremental$[ebp]
	test	eax, eax
	je	SHORT $LN6@matches
; Line 679
	movsx	eax, BYTE PTR _forward$37242[ebp]
	test	eax, eax
	je	SHORT $LN21@matches
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv162[ebp], edx
	jmp	SHORT $LN22@matches
$LN21@matches:
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _limit$[ebp]
	mov	DWORD PTR tv162[ebp], ecx
$LN22@matches:
	mov	edx, DWORD PTR tv162[ebp]
	mov	DWORD PTR _maxLen$37255[ebp], edx
; Line 680
	mov	eax, DWORD PTR _matchLen$37253[ebp]
	cmp	eax, DWORD PTR _maxLen$37255[ebp]
	jne	SHORT $LN6@matches
; Line 682
	mov	eax, 1
	jmp	$LN17@matches
$LN6@matches:
; Line 686
	mov	ecx, DWORD PTR _trial$37248[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _matchLen$37253[ebp], eax
	jne	SHORT $LN4@matches
; Line 688
	mov	eax, DWORD PTR _matchLen$37253[ebp]
	cmp	eax, DWORD PTR _highWaterLength$37244[ebp]
	jle	SHORT $LN3@matches
; Line 689
	mov	eax, DWORD PTR _matchLen$37253[ebp]
	mov	DWORD PTR _highWaterLength$37244[ebp], eax
$LN3@matches:
; Line 693
	movsx	eax, BYTE PTR _forward$37242[ebp]
	test	eax, eax
	je	SHORT $LN2@matches
	mov	eax, DWORD PTR _matchLen$37253[ebp]
	cmp	eax, DWORD PTR _highWaterLength$37244[ebp]
	jge	SHORT $LN2@matches
; Line 694
	jmp	SHORT $LN9@matches
$LN2@matches:
; Line 696
	jmp	$LN10@matches
$LN4@matches:
; Line 698
	jmp	$LN10@matches
$LN9@matches:
; Line 702
	cmp	DWORD PTR _highWaterLength$37244[ebp], 0
	je	SHORT $LN12@matches
; Line 703
	movsx	eax, BYTE PTR _forward$37242[ebp]
	test	eax, eax
	je	SHORT $LN23@matches
	mov	ecx, DWORD PTR _highWaterLength$37244[ebp]
	mov	DWORD PTR tv175[ebp], ecx
	jmp	SHORT $LN24@matches
$LN23@matches:
	mov	edx, DWORD PTR _highWaterLength$37244[ebp]
	neg	edx
	mov	DWORD PTR tv175[ebp], edx
$LN24@matches:
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR tv175[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 704
	mov	eax, 2
	jmp	SHORT $LN17@matches
$LN12@matches:
; Line 707
	movzx	eax, BYTE PTR _incremental$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z ; icu_56::UnicodeFilter::matches
$LN17@matches:
; Line 709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z ENDP ; icu_56::UnicodeSet::matches
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_slen$ = -32						; size = 4
_maxLen$ = -20						; size = 4
_i$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
_s$ = 20						; size = 4
?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::matchRest, COMDAT
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 737
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _slen$[ebp], eax
; Line 738
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN12@matchRest
; Line 739
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _maxLen$[ebp], eax
; Line 740
	mov	eax, DWORD PTR _maxLen$[ebp]
	cmp	eax, DWORD PTR _slen$[ebp]
	jle	SHORT $LN11@matchRest
	mov	eax, DWORD PTR _slen$[ebp]
	mov	DWORD PTR _maxLen$[ebp], eax
$LN11@matchRest:
; Line 741
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN10@matchRest
$LN9@matchRest:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@matchRest:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _maxLen$[ebp]
	jge	SHORT $LN8@matchRest
; Line 742
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?charAt@Replaceable@icu_56@@QBE_WH@Z	; icu_56::Replaceable::charAt
	movzx	esi, ax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	edx, ax
	cmp	esi, edx
	je	SHORT $LN7@matchRest
	xor	eax, eax
	jmp	SHORT $LN13@matchRest
$LN7@matchRest:
; Line 743
	jmp	SHORT $LN9@matchRest
$LN8@matchRest:
	jmp	SHORT $LN6@matchRest
$LN12@matchRest:
; Line 745
	mov	eax, DWORD PTR _start$[ebp]
	sub	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR _maxLen$[ebp], eax
; Line 746
	mov	eax, DWORD PTR _maxLen$[ebp]
	cmp	eax, DWORD PTR _slen$[ebp]
	jle	SHORT $LN5@matchRest
	mov	eax, DWORD PTR _slen$[ebp]
	mov	DWORD PTR _maxLen$[ebp], eax
$LN5@matchRest:
; Line 747
	mov	eax, DWORD PTR _slen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _slen$[ebp], eax
; Line 748
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@matchRest
$LN3@matchRest:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@matchRest:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _maxLen$[ebp]
	jge	SHORT $LN6@matchRest
; Line 749
	mov	eax, DWORD PTR _start$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?charAt@Replaceable@icu_56@@QBE_WH@Z	; icu_56::Replaceable::charAt
	movzx	esi, ax
	mov	ecx, DWORD PTR _slen$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	edx, ax
	cmp	esi, edx
	je	SHORT $LN1@matchRest
	xor	eax, eax
	jmp	SHORT $LN13@matchRest
$LN1@matchRest:
; Line 750
	jmp	SHORT $LN3@matchRest
$LN6@matchRest:
; Line 752
	mov	eax, DWORD PTR _maxLen$[ebp]
$LN13@matchRest:
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::matchRest
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toUnionTo$ = 8						; size = 4
?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z PROC	; icu_56::UnicodeSet::addMatchSetTo, COMDAT
; _this$ = ecx
; Line 758
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 759
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _toUnionTo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _toUnionTo$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 760
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z ENDP	; icu_56::UnicodeSet::addMatchSetTo
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeSet@icu_56@@QBEHH@Z		; icu_56::UnicodeSet::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeSet@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_limit$37299 = -56					; size = 4
_start$37297 = -44					; size = 4
_n$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeSet@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeSet::indexOf, COMDAT
; _this$ = ecx
; Line 769
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 770
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN5@indexOf@2
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jle	SHORT $LN6@indexOf@2
$LN5@indexOf@2:
; Line 771
	or	eax, -1
	jmp	SHORT $LN7@indexOf@2
$LN6@indexOf@2:
; Line 773
	mov	DWORD PTR _i$[ebp], 0
; Line 774
	mov	DWORD PTR _n$[ebp], 0
$LN4@indexOf@2:
; Line 776
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _start$37297[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR _start$37297[ebp]
	jge	SHORT $LN2@indexOf@2
; Line 778
	or	eax, -1
	jmp	SHORT $LN7@indexOf@2
$LN2@indexOf@2:
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _limit$37299[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 781
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR _limit$37299[ebp]
	jge	SHORT $LN1@indexOf@2
; Line 782
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	sub	eax, DWORD PTR _start$37297[ebp]
	jmp	SHORT $LN7@indexOf@2
$LN1@indexOf@2:
; Line 784
	mov	eax, DWORD PTR _limit$37299[ebp]
	sub	eax, DWORD PTR _start$37297[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR _n$[ebp], eax
; Line 785
	jmp	SHORT $LN4@indexOf@2
$LN7@indexOf@2:
; Line 786
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeSet@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeSet::indexOf
_TEXT	ENDS
PUBLIC	?charAt@UnicodeSet@icu_56@@QBEHH@Z		; icu_56::UnicodeSet::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeSet@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_count$37312 = -56					; size = 4
_start$37311 = -44					; size = 4
_i$37307 = -32						; size = 4
_len2$37306 = -20					; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?charAt@UnicodeSet@icu_56@@QBEHH@Z PROC			; icu_56::UnicodeSet::charAt, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 797
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN4@charAt
; Line 801
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -2					; fffffffeH
	mov	DWORD PTR _len2$37306[ebp], ecx
; Line 802
	mov	DWORD PTR _i$37307[ebp], 0
$LN3@charAt:
	mov	eax, DWORD PTR _i$37307[ebp]
	cmp	eax, DWORD PTR _len2$37306[ebp]
	jge	SHORT $LN4@charAt
; Line 803
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$37307[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _start$37311[ebp], eax
	mov	ecx, DWORD PTR _i$37307[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$37307[ebp], ecx
; Line 804
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$37307[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	sub	eax, DWORD PTR _start$37311[ebp]
	mov	DWORD PTR _count$37312[ebp], eax
	mov	ecx, DWORD PTR _i$37307[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$37307[ebp], ecx
; Line 805
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _count$37312[ebp]
	jge	SHORT $LN1@charAt
; Line 806
	mov	eax, DWORD PTR _start$37311[ebp]
	add	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN5@charAt
$LN1@charAt:
; Line 808
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, DWORD PTR _count$37312[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 809
	jmp	SHORT $LN3@charAt
$LN4@charAt:
; Line 811
	or	eax, -1
$LN5@charAt:
; Line 812
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeSet@icu_56@@QBEHH@Z ENDP			; icu_56::UnicodeSet::charAt
_TEXT	ENDS
PUBLIC	?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z		; icu_56::UnicodeSet::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z PROC		; icu_56::UnicodeSet::set, COMDAT
; _this$ = ecx
; Line 822
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 823
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 824
	mov	esi, esp
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 825
	mov	eax, DWORD PTR _this$[ebp]
; Line 826
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z ENDP		; icu_56::UnicodeSet::set
_TEXT	ENDS
PUBLIC	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z		; icu_56::UnicodeSet::add
PUBLIC	?add@UnicodeSet@icu_56@@AAEXPBHHC@Z		; icu_56::UnicodeSet::add
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
_TEXT	SEGMENT
_range$37327 = -32					; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z PROC		; icu_56::UnicodeSet::add, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	cmp	esi, eax
	jge	SHORT $LN3@add
; Line 841
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _range$37327[ebp], eax
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	DWORD PTR _range$37327[ebp+4], eax
	mov	DWORD PTR _range$37327[ebp+8], 1114112	; 00110000H
; Line 842
	push	0
	push	2
	lea	eax, DWORD PTR _range$37327[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::add
	jmp	SHORT $LN2@add
$LN3@add:
; Line 843
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jne	SHORT $LN2@add
; Line 844
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
$LN2@add:
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
; Line 847
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@add
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN8@add:
	DD	1
	DD	$LN7@add
$LN7@add:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@add
$LN6@add:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z ENDP		; icu_56::UnicodeSet::add
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?pinCodePoint@icu_56@@YAHAAH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?pinCodePoint@icu_56@@YAHAAH@Z PROC			; icu_56::pinCodePoint, COMDAT
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 73
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinCodePoi
; Line 74
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@pinCodePoi
$LN3@pinCodePoi:
; Line 75
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 1114111		; 0010ffffH
	jle	SHORT $LN2@pinCodePoi
; Line 76
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax], 1114111		; 0010ffffH
$LN2@pinCodePoi:
; Line 78
	mov	eax, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 79
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pinCodePoint@icu_56@@YAHAAH@Z ENDP			; icu_56::pinCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_srclimit$37355 = -116					; size = 4
_dst$37354 = -104					; size = 4
_src$37353 = -92					; size = 4
_status$37351 = -80					; size = 4
_srclimit$37344 = -68					; size = 4
_src$37343 = -56					; size = 4
_dst$37342 = -44					; size = 4
_status$37339 = -32					; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?add@UnicodeSet@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeSet::add, COMDAT
; _this$ = ecx
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z ; icu_56::UnicodeSet::findCodePoint
	mov	DWORD PTR _i$[ebp], eax
; Line 882
	mov	eax, DWORD PTR _i$[ebp]
	and	eax, 1
	jne	SHORT $LN13@add@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@add@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN14@add@2
$LN13@add@2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN15@add@2
$LN14@add@2:
; Line 905
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	sub	eax, 1
	cmp	DWORD PTR _c$[ebp], eax
	jne	$LN12@add@2
; Line 907
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 909
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jne	SHORT $LN11@add@2
; Line 910
	mov	DWORD PTR _status$37339[ebp], 0
; Line 911
	lea	eax, DWORD PTR _status$37339[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureCapacity
; Line 912
	mov	eax, DWORD PTR _status$37339[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@add@2
; Line 913
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN15@add@2
$LN10@add@2:
; Line 915
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+ecx*4], 1114112		; 00110000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN11@add@2:
; Line 917
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN9@add@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jne	SHORT $LN9@add@2
; Line 927
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4-4]
	mov	DWORD PTR _dst$37342[ebp], eax
; Line 928
	mov	eax, DWORD PTR _dst$37342[ebp]
	add	eax, 8
	mov	DWORD PTR _src$37343[ebp], eax
; Line 929
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _srclimit$37344[ebp], ecx
$LN8@add@2:
; Line 930
	mov	eax, DWORD PTR _src$37343[ebp]
	cmp	eax, DWORD PTR _srclimit$37344[ebp]
	jae	SHORT $LN7@add@2
	mov	eax, DWORD PTR _dst$37342[ebp]
	mov	ecx, DWORD PTR _src$37343[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _dst$37342[ebp]
	add	eax, 4
	mov	DWORD PTR _dst$37342[ebp], eax
	mov	ecx, DWORD PTR _src$37343[ebp]
	add	ecx, 4
	mov	DWORD PTR _src$37343[ebp], ecx
	jmp	SHORT $LN8@add@2
$LN7@add@2:
; Line 932
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN9@add@2:
; Line 934
	jmp	$LN6@add@2
$LN12@add@2:
; Line 936
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN5@add@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jne	SHORT $LN5@add@2
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4-4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4-4], eax
; Line 942
	jmp	$LN6@add@2
$LN5@add@2:
; Line 955
	mov	DWORD PTR _status$37351[ebp], 0
; Line 956
	lea	eax, DWORD PTR _status$37351[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 2
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureCapacity
; Line 957
	mov	eax, DWORD PTR _status$37351[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@add@2
; Line 958
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN15@add@2
$LN3@add@2:
; Line 964
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _src$37353[ebp], ecx
; Line 965
	mov	eax, DWORD PTR _src$37353[ebp]
	add	eax, 8
	mov	DWORD PTR _dst$37354[ebp], eax
; Line 966
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _srclimit$37355[ebp], eax
$LN2@add@2:
; Line 967
	mov	eax, DWORD PTR _src$37353[ebp]
	cmp	eax, DWORD PTR _srclimit$37355[ebp]
	jbe	SHORT $LN1@add@2
	mov	eax, DWORD PTR _src$37353[ebp]
	sub	eax, 4
	mov	DWORD PTR _src$37353[ebp], eax
	mov	ecx, DWORD PTR _dst$37354[ebp]
	sub	ecx, 4
	mov	DWORD PTR _dst$37354[ebp], ecx
	mov	edx, DWORD PTR _dst$37354[ebp]
	mov	eax, DWORD PTR _src$37353[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@add@2
$LN1@add@2:
; Line 969
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 970
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4+4], eax
; Line 971
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@add@2:
; Line 987
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 988
	mov	eax, DWORD PTR _this$[ebp]
$LN15@add@2:
; Line 989
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@add@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN20@add@2:
	DD	2
	DD	$LN19@add@2
$LN19@add@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN17@add@2
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN18@add@2
$LN18@add@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN17@add@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?add@UnicodeSet@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeSet::add
_TEXT	ENDS
PUBLIC	?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::_add
PUBLIC	?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_cp$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::add, COMDAT
; _this$ = ecx
; Line 1000
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1001
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	test	eax, eax
	je	SHORT $LN4@add@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@add@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@add@3
$LN4@add@3:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN6@add@3
$LN5@add@3:
; Line 1002
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::getSingleCP
	add	esp, 4
	mov	DWORD PTR _cp$[ebp], eax
; Line 1003
	cmp	DWORD PTR _cp$[ebp], 0
	jge	SHORT $LN3@add@3
; Line 1004
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?contains@UVector@icu_56@@QBECPAX@Z	; icu_56::UVector::contains
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@add@3
; Line 1005
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::_add
; Line 1006
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
$LN2@add@3:
; Line 1008
	jmp	SHORT $LN1@add@3
$LN3@add@3:
; Line 1009
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
$LN1@add@3:
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
$LN6@add@3:
; Line 1012
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::add
_TEXT	ENDS
EXTRN	?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::sortedInsert
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z$0
__ehfuncinfo$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv134 = -292						; size = 4
tv80 = -292						; size = 4
$T45880 = -284						; size = 4
$T45881 = -272						; size = 4
$T45884 = -260						; size = 4
$T45885 = -248						; size = 4
_ec$ = -44						; size = 4
_t$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z PROC	; icu_56::UnicodeSet::_add, COMDAT
; _this$ = ecx
; Line 1019
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1020
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN3@add@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@add@4
$LN3@add@4:
; Line 1021
	jmp	$LN5@add@4
$LN4@add@4:
; Line 1023
	push	64					; 00000040H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45881[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45881[ebp], 0
	je	SHORT $LN7@add@4
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45881[ebp]
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN8@add@4
$LN7@add@4:
	mov	DWORD PTR tv80[ebp], 0
$LN8@add@4:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T45880[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T45880[ebp]
	mov	DWORD PTR _t$[ebp], edx
; Line 1024
	cmp	DWORD PTR _t$[ebp], 0
	jne	SHORT $LN2@add@4
; Line 1025
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1026
	jmp	$LN5@add@4
$LN2@add@4:
; Line 1028
	mov	DWORD PTR _ec$[ebp], 0
; Line 1029
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	OFFSET ?compareUnicodeString@icu_56@@YACTUElement@@0@Z ; icu_56::compareUnicodeString
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sortedInsert
; Line 1030
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@add@4
; Line 1031
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1032
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T45885[ebp], eax
	mov	ecx, DWORD PTR $T45885[ebp]
	mov	DWORD PTR $T45884[ebp], ecx
	cmp	DWORD PTR $T45884[ebp], 0
	je	SHORT $LN9@add@4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45884[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45884[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN5@add@4
$LN9@add@4:
	mov	DWORD PTR tv134[ebp], 0
$LN5@add@4:
; Line 1034
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@add@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@add@4:
	DD	1
	DD	$LN14@add@4
$LN14@add@4:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN12@add@4
$LN12@add@4:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z$0:
	mov	eax, DWORD PTR $T45881[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ENDP	; icu_56::UnicodeSet::_add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareUnicodeString@icu_56@@YACTUElement@@0@Z
_TEXT	SEGMENT
_b$ = -20						; size = 4
_a$ = -8						; size = 4
_t1$ = 8						; size = 4
_t2$ = 12						; size = 4
?compareUnicodeString@icu_56@@YACTUElement@@0@Z PROC	; icu_56::compareUnicodeString, COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	eax, DWORD PTR _t1$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 134
	mov	eax, DWORD PTR _t2$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 135
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compare
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareUnicodeString@icu_56@@YACTUElement@@0@Z ENDP	; icu_56::compareUnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_cp$ = -8						; size = 4
_s$ = 8							; size = 4
?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::getSingleCP, COMDAT
; Line 1041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1045
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	eax, 2
	jle	SHORT $LN3@getSingleC
	or	eax, -1
	jmp	SHORT $LN4@getSingleC
$LN3@getSingleC:
; Line 1046
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	eax, 1
	jne	SHORT $LN2@getSingleC
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	eax, ax
	jmp	SHORT $LN4@getSingleC
$LN2@getSingleC:
; Line 1049
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	DWORD PTR _cp$[ebp], eax
; Line 1050
	cmp	DWORD PTR _cp$[ebp], 65535		; 0000ffffH
	jle	SHORT $LN1@getSingleC
; Line 1051
	mov	eax, DWORD PTR _cp$[ebp]
	jmp	SHORT $LN4@getSingleC
$LN1@getSingleC:
; Line 1053
	or	eax, -1
$LN4@getSingleC:
; Line 1054
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::getSingleCP
_TEXT	ENDS
PUBLIC	?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::addAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_i$37399 = -32						; size = 4
_cp$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::addAll, COMDAT
; _this$ = ecx
; Line 1062
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1064
	mov	DWORD PTR _i$37399[ebp], 0
	jmp	SHORT $LN3@addAll
$LN2@addAll:
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _cp$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$37399[ebp]
	mov	DWORD PTR _i$37399[ebp], ecx
$LN3@addAll:
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _i$37399[ebp], eax
	jge	SHORT $LN1@addAll
; Line 1065
	mov	eax, DWORD PTR _i$37399[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	DWORD PTR _cp$[ebp], eax
; Line 1066
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 1067
	jmp	SHORT $LN2@addAll
$LN1@addAll:
; Line 1068
	mov	eax, DWORD PTR _this$[ebp]
; Line 1069
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::addAll
_TEXT	ENDS
PUBLIC	?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::retainAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
$T45906 = -284						; size = 4
_set$ = -80						; size = 52
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::retainAll, COMDAT
; _this$ = ecx
; Line 1077
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1078
	lea	ecx, DWORD PTR _set$[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1079
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _set$[ebp]
	call	?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::addAll
; Line 1080
	mov	esi, esp
	lea	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1081
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T45906[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _set$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR $T45906[ebp]
; Line 1082
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@retainAll
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@retainAll:
	DD	1
	DD	$LN6@retainAll
$LN6@retainAll:
	DD	-80					; ffffffb0H
	DD	52					; 00000034H
	DD	$LN4@retainAll
$LN4@retainAll:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0:
	lea	ecx, DWORD PTR _set$[ebp]
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::retainAll
PUBLIC	?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::complementAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
$T45919 = -284						; size = 4
_set$ = -80						; size = 52
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::complementAll, COMDAT
; _this$ = ecx
; Line 1090
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1091
	lea	ecx, DWORD PTR _set$[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1092
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _set$[ebp]
	call	?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::addAll
; Line 1093
	mov	esi, esp
	lea	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1094
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T45919[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _set$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR $T45919[ebp]
; Line 1095
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@complement
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@complement:
	DD	1
	DD	$LN6@complement
$LN6@complement:
	DD	-80					; ffffffb0H
	DD	52					; 00000034H
	DD	$LN4@complement
$LN4@complement:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0:
	lea	ecx, DWORD PTR _set$[ebp]
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::complementAll
PUBLIC	?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::removeAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
$T45932 = -284						; size = 4
_set$ = -80						; size = 52
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::removeAll, COMDAT
; _this$ = ecx
; Line 1103
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1104
	lea	ecx, DWORD PTR _set$[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1105
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _set$[ebp]
	call	?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::addAll
; Line 1106
	mov	esi, esp
	lea	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T45932[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _set$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR $T45932[ebp]
; Line 1108
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@removeAll
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@removeAll:
	DD	1
	DD	$LN6@removeAll
$LN6@removeAll:
	DD	-80					; ffffffb0H
	DD	52					; 00000034H
	DD	$LN4@removeAll
$LN4@removeAll:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0:
	lea	ecx, DWORD PTR _set$[ebp]
	jmp	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
__ehhandler$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::removeAll
EXTRN	?removeAllElements@UVector@icu_56@@QAEXXZ:PROC	; icu_56::UVector::removeAllElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ PROC	; icu_56::UnicodeSet::removeAllStrings, COMDAT
; _this$ = ecx
; Line 1110
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?removeAllElements@UVector@icu_56@@QAEXXZ ; icu_56::UVector::removeAllElements
; Line 1112
	mov	eax, DWORD PTR _this$[ebp]
; Line 1113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ ENDP	; icu_56::UnicodeSet::removeAllStrings
_TEXT	ENDS
PUBLIC	?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::createFrom
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv71 = -244						; size = 4
$T45947 = -236						; size = 4
$T45948 = -224						; size = 4
_set$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::createFrom, COMDAT
; Line 1122
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1123
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45948[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45948[ebp], 0
	je	SHORT $LN4@createFrom
	mov	ecx, DWORD PTR $T45948[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@createFrom
$LN4@createFrom:
	mov	DWORD PTR tv71[ebp], 0
$LN5@createFrom:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T45947[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T45947[ebp]
	mov	DWORD PTR _set$[ebp], ecx
; Line 1124
	cmp	DWORD PTR _set$[ebp], 0
	je	SHORT $LN1@createFrom
; Line 1125
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::add
$LN1@createFrom:
; Line 1127
	mov	eax, DWORD PTR _set$[ebp]
; Line 1128
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0:
	mov	eax, DWORD PTR $T45948[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::createFrom
PUBLIC	?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::createFromAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv71 = -244						; size = 4
$T45960 = -236						; size = 4
$T45961 = -224						; size = 4
_set$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::createFromAll, COMDAT
; Line 1136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1137
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T45961[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45961[ebp], 0
	je	SHORT $LN4@createFrom@2
	mov	ecx, DWORD PTR $T45961[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@createFrom@2
$LN4@createFrom@2:
	mov	DWORD PTR tv71[ebp], 0
$LN5@createFrom@2:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T45960[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T45960[ebp]
	mov	DWORD PTR _set$[ebp], ecx
; Line 1138
	cmp	DWORD PTR _set$[ebp], 0
	je	SHORT $LN1@createFrom@2
; Line 1139
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	call	?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::addAll
$LN1@createFrom@2:
; Line 1141
	mov	eax, DWORD PTR _set$[ebp]
; Line 1142
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0:
	mov	eax, DWORD PTR $T45961[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::createFromAll
PUBLIC	?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z		; icu_56::UnicodeSet::retain
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
_TEXT	SEGMENT
_range$37449 = -32					; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z PROC		; icu_56::UnicodeSet::retain, COMDAT
; _this$ = ecx
; Line 1154
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1155
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	cmp	esi, eax
	jg	SHORT $LN2@retain
; Line 1156
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _range$37449[ebp], eax
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	DWORD PTR _range$37449[ebp+4], eax
	mov	DWORD PTR _range$37449[ebp+8], 1114112	; 00110000H
; Line 1157
	push	0
	push	2
	lea	eax, DWORD PTR _range$37449[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::retain
; Line 1158
	jmp	SHORT $LN1@retain
$LN2@retain:
; Line 1159
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@retain:
; Line 1161
	mov	eax, DWORD PTR _this$[ebp]
; Line 1162
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@retain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@retain:
	DD	1
	DD	$LN6@retain
$LN6@retain:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@retain
$LN5@retain:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z ENDP		; icu_56::UnicodeSet::retain
_TEXT	ENDS
PUBLIC	?retain@UnicodeSet@icu_56@@QAEAAV12@H@Z		; icu_56::UnicodeSet::retain
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retain@UnicodeSet@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?retain@UnicodeSet@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeSet::retain, COMDAT
; _this$ = ecx
; Line 1164
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1165
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?retain@UnicodeSet@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeSet::retain
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
_TEXT	SEGMENT
_range$37461 = -32					; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z PROC		; icu_56::UnicodeSet::remove, COMDAT
; _this$ = ecx
; Line 1179
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1180
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	cmp	esi, eax
	jg	SHORT $LN1@remove@3
; Line 1181
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _range$37461[ebp], eax
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	DWORD PTR _range$37461[ebp+4], eax
	mov	DWORD PTR _range$37461[ebp+8], 1114112	; 00110000H
; Line 1182
	push	2
	push	2
	lea	eax, DWORD PTR _range$37461[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::retain
$LN1@remove@3:
; Line 1184
	mov	eax, DWORD PTR _this$[ebp]
; Line 1185
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@remove@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN6@remove@3:
	DD	1
	DD	$LN5@remove@3
$LN5@remove@3:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN4@remove@3
$LN4@remove@3:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z ENDP		; icu_56::UnicodeSet::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z		; icu_56::UnicodeSet::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeSet::remove, COMDAT
; _this$ = ecx
; Line 1192
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1193
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1194
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeSet::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::remove
EXTRN	?removeElement@UVector@icu_56@@QAECPAX@Z:PROC	; icu_56::UVector::removeElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_cp$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?remove@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::remove, COMDAT
; _this$ = ecx
; Line 1203
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1204
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	test	eax, eax
	je	SHORT $LN3@remove@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN3@remove@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@remove@4
$LN3@remove@4:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN5@remove@4
$LN4@remove@4:
; Line 1205
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::getSingleCP
	add	esp, 4
	mov	DWORD PTR _cp$[ebp], eax
; Line 1206
	cmp	DWORD PTR _cp$[ebp], 0
	jge	SHORT $LN2@remove@4
; Line 1207
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?removeElement@UVector@icu_56@@QAECPAX@Z ; icu_56::UVector::removeElement
; Line 1208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 1209
	jmp	SHORT $LN1@remove@4
$LN2@remove@4:
; Line 1210
	mov	esi, esp
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@remove@4:
; Line 1212
	mov	eax, DWORD PTR _this$[ebp]
$LN5@remove@4:
; Line 1213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::remove
_TEXT	ENDS
PUBLIC	?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::exclusiveOr
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
_TEXT	SEGMENT
_range$37486 = -32					; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z PROC	; icu_56::UnicodeSet::complement, COMDAT
; _this$ = ecx
; Line 1226
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1227
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@complement@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@complement@2
$LN2@complement@2:
; Line 1228
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN4@complement@2
$LN3@complement@2:
; Line 1230
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	call	?pinCodePoint@icu_56@@YAHAAH@Z		; icu_56::pinCodePoint
	add	esp, 4
	cmp	esi, eax
	jg	SHORT $LN1@complement@2
; Line 1231
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _range$37486[ebp], eax
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	DWORD PTR _range$37486[ebp+4], eax
	mov	DWORD PTR _range$37486[ebp+8], 1114112	; 00110000H
; Line 1232
	push	0
	push	2
	lea	eax, DWORD PTR _range$37486[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z ; icu_56::UnicodeSet::exclusiveOr
$LN1@complement@2:
; Line 1234
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 1235
	mov	eax, DWORD PTR _this$[ebp]
$LN4@complement@2:
; Line 1236
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@complement@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@complement@2:
	DD	1
	DD	$LN7@complement@2
$LN7@complement@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@complement@2
$LN6@complement@2:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z ENDP	; icu_56::UnicodeSet::complement
_TEXT	ENDS
PUBLIC	?complement@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::complement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?complement@UnicodeSet@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?complement@UnicodeSet@icu_56@@QAEAAV12@H@Z PROC	; icu_56::UnicodeSet::complement, COMDAT
; _this$ = ecx
; Line 1238
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1239
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1240
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?complement@UnicodeSet@icu_56@@QAEAAV12@H@Z ENDP	; icu_56::UnicodeSet::complement
_TEXT	ENDS
PUBLIC	?swapBuffers@UnicodeSet@icu_56@@AAEXXZ		; icu_56::UnicodeSet::swapBuffers
PUBLIC	?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureBufferCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
?complement@UnicodeSet@icu_56@@UAEAAV12@XZ PROC		; icu_56::UnicodeSet::complement, COMDAT
; _this$ = ecx
; Line 1246
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1247
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@complement@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@complement@3
$LN5@complement@3:
; Line 1248
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN7@complement@3
$LN6@complement@3:
; Line 1250
	mov	DWORD PTR _status$[ebp], 0
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN4@complement@3
; Line 1252
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureBufferCapacity
; Line 1253
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@complement@3
; Line 1254
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN7@complement@3
$LN3@complement@3:
; Line 1256
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 4
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax*4-4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1257
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1258
	jmp	SHORT $LN2@complement@3
$LN4@complement@3:
; Line 1259
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureBufferCapacity
; Line 1260
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@complement@3
; Line 1261
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN7@complement@3
$LN1@complement@3:
; Line 1263
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 4
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1264
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [ecx], 0
; Line 1265
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@complement@3:
; Line 1267
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swapBuffers@UnicodeSet@icu_56@@AAEXXZ	; icu_56::UnicodeSet::swapBuffers
; Line 1268
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 1269
	mov	eax, DWORD PTR _this$[ebp]
$LN7@complement@3:
; Line 1270
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@complement@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@complement@3:
	DD	1
	DD	$LN10@complement@3
$LN10@complement@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@complement@3
$LN9@complement@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?complement@UnicodeSet@icu_56@@UAEAAV12@XZ ENDP		; icu_56::UnicodeSet::complement
_TEXT	ENDS
PUBLIC	?complement@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::complement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?complement@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_cp$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?complement@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::complement, COMDAT
; _this$ = ecx
; Line 1280
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1281
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	test	eax, eax
	je	SHORT $LN5@complement@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@complement@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@complement@4
$LN5@complement@4:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN7@complement@4
$LN6@complement@4:
; Line 1282
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::UnicodeSet::getSingleCP
	add	esp, 4
	mov	DWORD PTR _cp$[ebp], eax
; Line 1283
	cmp	DWORD PTR _cp$[ebp], 0
	jge	SHORT $LN4@complement@4
; Line 1284
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?contains@UVector@icu_56@@QBECPAX@Z	; icu_56::UVector::contains
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@complement@4
; Line 1285
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?removeElement@UVector@icu_56@@QAECPAX@Z ; icu_56::UVector::removeElement
; Line 1286
	jmp	SHORT $LN2@complement@4
$LN3@complement@4:
; Line 1287
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::_add
$LN2@complement@4:
; Line 1289
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 1290
	jmp	SHORT $LN1@complement@4
$LN4@complement@4:
; Line 1291
	mov	esi, esp
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@complement@4:
; Line 1293
	mov	eax, DWORD PTR _this$[ebp]
$LN7@complement@4:
; Line 1294
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?complement@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::complement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_s$37529 = -32						; size = 4
_i$37525 = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeSet::addAll, COMDAT
; _this$ = ecx
; Line 1306
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1307
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jle	SHORT $LN6@addAll@2
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN6@addAll@2
; Line 1308
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::add
$LN6@addAll@2:
; Line 1312
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN5@addAll@2
; Line 1313
	mov	DWORD PTR _i$37525[ebp], 0
	jmp	SHORT $LN4@addAll@2
$LN3@addAll@2:
	mov	eax, DWORD PTR _i$37525[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37525[ebp], eax
$LN4@addAll@2:
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$37525[ebp], eax
	jge	SHORT $LN5@addAll@2
; Line 1314
	mov	eax, DWORD PTR _i$37525[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	mov	DWORD PTR _s$37529[ebp], eax
; Line 1315
	mov	eax, DWORD PTR _s$37529[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?contains@UVector@icu_56@@QBECPAX@Z	; icu_56::UVector::contains
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@addAll@2
; Line 1316
	mov	eax, DWORD PTR _s$37529[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::_add
$LN1@addAll@2:
; Line 1318
	jmp	SHORT $LN3@addAll@2
$LN5@addAll@2:
; Line 1320
	mov	eax, DWORD PTR _this$[ebp]
; Line 1321
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeSet::addAll
_TEXT	ENDS
EXTRN	?retainAll@UVector@icu_56@@QAECABV12@@Z:PROC	; icu_56::UVector::retainAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeSet::retainAll, COMDAT
; _this$ = ecx
; Line 1332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1333
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@retainAll@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@retainAll@2
$LN1@retainAll@2:
; Line 1334
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@retainAll@2
$LN2@retainAll@2:
; Line 1336
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::retain
; Line 1337
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?retainAll@UVector@icu_56@@QAECABV12@@Z	; icu_56::UVector::retainAll
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@retainAll@2:
; Line 1339
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeSet::retainAll
_TEXT	ENDS
EXTRN	?removeAll@UVector@icu_56@@QAECABV12@@Z:PROC	; icu_56::UVector::removeAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeSet::removeAll, COMDAT
; _this$ = ecx
; Line 1350
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1351
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@removeAll@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@removeAll@2
$LN1@removeAll@2:
; Line 1352
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@removeAll@2
$LN2@removeAll@2:
; Line 1354
	push	2
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z	; icu_56::UnicodeSet::retain
; Line 1355
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?removeAll@UVector@icu_56@@QAECABV12@@Z	; icu_56::UVector::removeAll
; Line 1356
	mov	eax, DWORD PTR _this$[ebp]
$LN3@removeAll@2:
; Line 1357
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeSet::removeAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_e$37555 = -32						; size = 4
_i$37551 = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z PROC ; icu_56::UnicodeSet::complementAll, COMDAT
; _this$ = ecx
; Line 1367
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1368
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@complement@5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@complement@5
$LN5@complement@5:
; Line 1369
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN7@complement@5
$LN6@complement@5:
; Line 1371
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z ; icu_56::UnicodeSet::exclusiveOr
; Line 1373
	mov	DWORD PTR _i$37551[ebp], 0
	jmp	SHORT $LN4@complement@5
$LN3@complement@5:
	mov	eax, DWORD PTR _i$37551[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37551[ebp], eax
$LN4@complement@5:
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$37551[ebp], eax
	jge	SHORT $LN2@complement@5
; Line 1374
	mov	eax, DWORD PTR _i$37551[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	mov	DWORD PTR _e$37555[ebp], eax
; Line 1375
	mov	eax, DWORD PTR _e$37555[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?removeElement@UVector@icu_56@@QAECPAX@Z ; icu_56::UVector::removeElement
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@complement@5
; Line 1376
	mov	eax, DWORD PTR _e$37555[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::_add
$LN1@complement@5:
; Line 1378
	jmp	SHORT $LN3@complement@5
$LN2@complement@5:
; Line 1379
	mov	eax, DWORD PTR _this$[ebp]
$LN7@complement@5:
; Line 1380
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ENDP ; icu_56::UnicodeSet::complementAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@UnicodeSet@icu_56@@UAEAAV12@XZ PROC		; icu_56::UnicodeSet::clear, COMDAT
; _this$ = ecx
; Line 1386
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1387
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@clear
; Line 1388
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN5@clear
$LN4@clear:
; Line 1390
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@clear
; Line 1391
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], 1114112		; 00110000H
$LN3@clear:
; Line 1393
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1
; Line 1394
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 1395
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@clear
; Line 1396
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?removeAllElements@UVector@icu_56@@QAEXXZ ; icu_56::UVector::removeAllElements
$LN2@clear:
; Line 1398
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@clear
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@clear
; Line 1400
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
$LN1@clear:
; Line 1402
	mov	eax, DWORD PTR _this$[ebp]
$LN5@clear:
; Line 1403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@UnicodeSet@icu_56@@UAEAAV12@XZ ENDP		; icu_56::UnicodeSet::clear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRangeCount@UnicodeSet@icu_56@@UBEHXZ PROC		; icu_56::UnicodeSet::getRangeCount, COMDAT
; _this$ = ecx
; Line 1411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1412
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	cdq
	sub	eax, edx
	sar	eax, 1
; Line 1413
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRangeCount@UnicodeSet@icu_56@@UBEHXZ ENDP		; icu_56::UnicodeSet::getRangeCount
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z PROC		; icu_56::UnicodeSet::getRangeStart, COMDAT
; _this$ = ecx
; Line 1421
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1422
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+eax*4]
; Line 1423
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z ENDP		; icu_56::UnicodeSet::getRangeStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z PROC		; icu_56::UnicodeSet::getRangeEnd, COMDAT
; _this$ = ecx
; Line 1431
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1432
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+eax*4+4]
	sub	eax, 1
; Line 1433
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z ENDP		; icu_56::UnicodeSet::getRangeEnd
_TEXT	ENDS
PUBLIC	?getStringCount@UnicodeSet@icu_56@@ABEHXZ	; icu_56::UnicodeSet::getStringCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStringCount@UnicodeSet@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getStringCount@UnicodeSet@icu_56@@ABEHXZ PROC		; icu_56::UnicodeSet::getStringCount, COMDAT
; _this$ = ecx
; Line 1435
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1436
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
; Line 1437
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStringCount@UnicodeSet@icu_56@@ABEHXZ ENDP		; icu_56::UnicodeSet::getStringCount
_TEXT	ENDS
PUBLIC	?getString@UnicodeSet@icu_56@@ABEPBVUnicodeString@2@H@Z ; icu_56::UnicodeSet::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@UnicodeSet@icu_56@@ABEPBVUnicodeString@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getString@UnicodeSet@icu_56@@ABEPBVUnicodeString@2@H@Z PROC ; icu_56::UnicodeSet::getString, COMDAT
; _this$ = ecx
; Line 1439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1440
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 1441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@UnicodeSet@icu_56@@ABEPBVUnicodeString@2@H@Z ENDP ; icu_56::UnicodeSet::getString
_TEXT	ENDS
EXTRN	_uprv_realloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
_TEXT	SEGMENT
_temp$37593 = -32					; size = 4
_newCapacity$37592 = -20				; size = 4
_this$ = -8						; size = 4
?compact@UnicodeSet@icu_56@@UAEAAV12@XZ PROC		; icu_56::UnicodeSet::compact, COMDAT
; _this$ = ecx
; Line 1447
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1448
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@compact
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@compact
$LN4@compact:
; Line 1449
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN6@compact
$LN5@compact:
; Line 1452
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN3@compact
; Line 1453
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 1454
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
$LN3@compact:
; Line 1456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jge	SHORT $LN2@compact
; Line 1459
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 0
	sete	cl
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR _newCapacity$37592[ebp], ecx
; Line 1460
	mov	eax, DWORD PTR _newCapacity$37592[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _temp$37593[ebp], eax
; Line 1461
	cmp	DWORD PTR _temp$37593[ebp], 0
	je	SHORT $LN2@compact
; Line 1462
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$37593[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 1463
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$37592[ebp]
	mov	DWORD PTR [eax+12], ecx
$LN2@compact:
; Line 1468
	mov	eax, DWORD PTR _this$[ebp]
$LN6@compact:
; Line 1469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compact@UnicodeSet@icu_56@@UAEAAV12@XZ ENDP		; icu_56::UnicodeSet::compact
_TEXT	ENDS
PUBLIC	??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv150 = -254						; size = 2
_i$ = -56						; size = 4
_bmpLength$ = -44					; size = 4
_headerSize$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_dataLen$ = 12						; size = 4
_serialization$ = 16					; size = 4
_ec$ = 20						; size = 4
??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::UnicodeSet, COMDAT
; _this$ = ecx
; Line 1481
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFilter@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 17			; 00000011H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 1483
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@UnicodeSet@6
; Line 1484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1485
	jmp	$LN13@UnicodeSet@6
$LN12@UnicodeSet@6:
; Line 1490
	cmp	DWORD PTR _serialization$[ebp], 0
	jne	SHORT $LN10@UnicodeSet@6
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN10@UnicodeSet@6
	cmp	DWORD PTR _dataLen$[ebp], 1
	jge	SHORT $LN11@UnicodeSet@6
$LN10@UnicodeSet@6:
; Line 1491
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1493
	jmp	$LN13@UnicodeSet@6
$LN11@UnicodeSet@6:
; Line 1496
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
; Line 1497
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@UnicodeSet@6
; Line 1498
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1499
	jmp	$LN13@UnicodeSet@6
$LN9@UnicodeSet@6:
; Line 1503
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 32768				; 00008000H
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _headerSize$[ebp], ecx
; Line 1504
	cmp	DWORD PTR _headerSize$[ebp], 1
	jne	SHORT $LN15@UnicodeSet@6
	mov	eax, DWORD PTR _data$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv150[ebp], cx
	jmp	SHORT $LN16@UnicodeSet@6
$LN15@UnicodeSet@6:
	mov	edx, DWORD PTR _data$[ebp]
	mov	ax, WORD PTR [edx+2]
	mov	WORD PTR tv150[ebp], ax
$LN16@UnicodeSet@6:
	movzx	ecx, WORD PTR tv150[ebp]
	mov	DWORD PTR _bmpLength$[ebp], ecx
; Line 1506
	mov	eax, DWORD PTR _data$[ebp]
	movzx	eax, WORD PTR [eax]
	and	eax, 32767				; 00007fffH
	sub	eax, DWORD PTR _bmpLength$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _bmpLength$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1510
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 1512
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@UnicodeSet@6
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@UnicodeSet@6
$LN7@UnicodeSet@6:
; Line 1513
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1514
	jmp	$LN13@UnicodeSet@6
$LN8@UnicodeSet@6:
; Line 1518
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@UnicodeSet@6
$LN5@UnicodeSet@6:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@UnicodeSet@6:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _bmpLength$[ebp]
	jge	SHORT $LN4@UnicodeSet@6
; Line 1519
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _headerSize$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 1523
	jmp	SHORT $LN5@UnicodeSet@6
$LN4@UnicodeSet@6:
; Line 1525
	mov	eax, DWORD PTR _bmpLength$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN3@UnicodeSet@6
$LN2@UnicodeSet@6:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@UnicodeSet@6:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN1@UnicodeSet@6
; Line 1527
	mov	eax, DWORD PTR _headerSize$[ebp]
	add	eax, DWORD PTR _bmpLength$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, DWORD PTR _bmpLength$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _headerSize$[ebp]
	add	edx, DWORD PTR _bmpLength$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _bmpLength$[ebp]
	lea	edx, DWORD PTR [edx+eax*2]
	mov	eax, DWORD PTR _data$[ebp]
	movzx	edx, WORD PTR [eax+edx*2+2]
	add	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 1531
	jmp	SHORT $LN2@UnicodeSet@6
$LN1@UnicodeSet@6:
; Line 1533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+ecx*4], 1114112		; 00110000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN13@UnicodeSet@6:
; Line 1534
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__ehhandler$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::UnicodeSet
PUBLIC	?serialize@UnicodeSet@icu_56@@QBEHPAGHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::serialize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?serialize@UnicodeSet@icu_56@@QBEHPAGHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$37648 = -68						; size = 4
_p$37647 = -56						; size = 4
_destLength$ = -44					; size = 4
_length$ = -32						; size = 4
_bmpLength$ = -20					; size = 4
_this$ = -8						; size = 4
_dest$ = 8						; size = 4
_destCapacity$ = 12					; size = 4
_ec$ = 16						; size = 4
?serialize@UnicodeSet@icu_56@@QBEHPAGHAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::serialize, COMDAT
; _this$ = ecx
; Line 1537
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1540
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN23@serialize
; Line 1541
	xor	eax, eax
	jmp	$LN24@serialize
$LN23@serialize:
; Line 1544
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jl	SHORT $LN21@serialize
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jle	SHORT $LN22@serialize
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN22@serialize
$LN21@serialize:
; Line 1545
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1546
	xor	eax, eax
	jmp	$LN24@serialize
$LN22@serialize:
; Line 1550
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR _length$[ebp], ecx
; Line 1552
	jne	SHORT $LN20@serialize
; Line 1554
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jle	SHORT $LN19@serialize
; Line 1555
	xor	eax, eax
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [ecx], ax
; Line 1556
	jmp	SHORT $LN18@serialize
$LN19@serialize:
; Line 1557
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN18@serialize:
; Line 1559
	mov	eax, 1
	jmp	$LN24@serialize
$LN20@serialize:
; Line 1563
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _length$[ebp]
	cmp	DWORD PTR [ecx+edx*4-4], 65535		; 0000ffffH
	jg	SHORT $LN17@serialize
; Line 1565
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _bmpLength$[ebp], eax
	jmp	SHORT $LN16@serialize
$LN17@serialize:
; Line 1566
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 65536			; 00010000H
	jl	SHORT $LN15@serialize
; Line 1568
	mov	DWORD PTR _bmpLength$[ebp], 0
; Line 1569
	mov	eax, DWORD PTR _length$[ebp]
	shl	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 1570
	jmp	SHORT $LN16@serialize
$LN15@serialize:
; Line 1572
	mov	DWORD PTR _bmpLength$[ebp], 0
	jmp	SHORT $LN13@serialize
$LN12@serialize:
	mov	eax, DWORD PTR _bmpLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _bmpLength$[ebp], eax
$LN13@serialize:
	mov	eax, DWORD PTR _bmpLength$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN11@serialize
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _bmpLength$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 65535		; 0000ffffH
	jg	SHORT $LN11@serialize
	jmp	SHORT $LN12@serialize
$LN11@serialize:
; Line 1573
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _bmpLength$[ebp]
	mov	ecx, DWORD PTR _bmpLength$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _length$[ebp], edx
$LN16@serialize:
; Line 1579
	cmp	DWORD PTR _length$[ebp], 32767		; 00007fffH
	jle	SHORT $LN10@serialize
; Line 1581
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1582
	xor	eax, eax
	jmp	$LN24@serialize
$LN10@serialize:
; Line 1591
	mov	eax, DWORD PTR _length$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _bmpLength$[ebp]
	setg	cl
	add	ecx, 1
	add	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR _destLength$[ebp], ecx
; Line 1592
	mov	eax, DWORD PTR _destLength$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jg	$LN9@serialize
; Line 1599
	mov	eax, DWORD PTR _dest$[ebp]
	mov	cx, WORD PTR _length$[ebp]
	mov	WORD PTR [eax], cx
; Line 1600
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _bmpLength$[ebp]
	jle	SHORT $LN8@serialize
; Line 1601
	mov	eax, DWORD PTR _dest$[ebp]
	movzx	ecx, WORD PTR [eax]
	or	ecx, 32768				; 00008000H
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx], cx
; Line 1602
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	dx, WORD PTR _bmpLength$[ebp]
	mov	WORD PTR [ecx], dx
$LN8@serialize:
; Line 1604
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
; Line 1607
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _p$37647[ebp], ecx
; Line 1608
	mov	DWORD PTR _i$37648[ebp], 0
	jmp	SHORT $LN7@serialize
$LN6@serialize:
	mov	eax, DWORD PTR _i$37648[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37648[ebp], eax
$LN7@serialize:
	mov	eax, DWORD PTR _i$37648[ebp]
	cmp	eax, DWORD PTR _bmpLength$[ebp]
	jge	SHORT $LN5@serialize
; Line 1612
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _p$37647[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
	mov	ecx, DWORD PTR _p$37647[ebp]
	add	ecx, 4
	mov	DWORD PTR _p$37647[ebp], ecx
; Line 1613
	jmp	SHORT $LN6@serialize
$LN5@serialize:
; Line 1616
	jmp	SHORT $LN4@serialize
$LN3@serialize:
	mov	eax, DWORD PTR _i$37648[ebp]
	add	eax, 2
	mov	DWORD PTR _i$37648[ebp], eax
$LN4@serialize:
	mov	eax, DWORD PTR _i$37648[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN2@serialize
; Line 1620
	mov	eax, DWORD PTR _p$37647[ebp]
	mov	ecx, DWORD PTR [eax]
	sar	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
; Line 1621
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _p$37647[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
	mov	ecx, DWORD PTR _p$37647[ebp]
	add	ecx, 4
	mov	DWORD PTR _p$37647[ebp], ecx
; Line 1622
	jmp	SHORT $LN3@serialize
$LN2@serialize:
	jmp	SHORT $LN1@serialize
$LN9@serialize:
; Line 1624
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN1@serialize:
; Line 1626
	mov	eax, DWORD PTR _destLength$[ebp]
$LN24@serialize:
; Line 1627
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?serialize@UnicodeSet@icu_56@@QBEHPAGHAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::serialize
_TEXT	ENDS
EXTRN	??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::UVector
EXTRN	_uprv_deleteUObject_56:PROC
EXTRN	_uhash_compareUnicodeString_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z$0
__ehfuncinfo$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv129 = -268						; size = 4
tv80 = -268						; size = 4
$T46041 = -260						; size = 4
$T46042 = -248						; size = 4
$T46045 = -236						; size = 4
$T46046 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::allocateStrings, COMDAT
; _this$ = ecx
; Line 1636
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1637
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@allocateSt
; Line 1638
	xor	al, al
	jmp	$LN4@allocateSt
$LN3@allocateSt:
; Line 1641
	push	24					; 00000018H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T46042[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46042[ebp], 0
	je	SHORT $LN6@allocateSt
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR $T46042[ebp]
	call	??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z ; icu_56::UVector::UVector
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN7@allocateSt
$LN6@allocateSt:
	mov	DWORD PTR tv80[ebp], 0
$LN7@allocateSt:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T46041[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T46041[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 1642
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN2@allocateSt
; Line 1643
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1644
	xor	al, al
	jmp	SHORT $LN4@allocateSt
$LN2@allocateSt:
; Line 1646
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@allocateSt
; Line 1647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T46046[ebp], ecx
	mov	edx, DWORD PTR $T46046[ebp]
	mov	DWORD PTR $T46045[ebp], edx
	cmp	DWORD PTR $T46045[ebp], 0
	je	SHORT $LN8@allocateSt
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T46045[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T46045[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN9@allocateSt
$LN8@allocateSt:
	mov	DWORD PTR tv129[ebp], 0
$LN9@allocateSt:
; Line 1648
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 1649
	xor	al, al
	jmp	SHORT $LN4@allocateSt
$LN1@allocateSt:
; Line 1651
	mov	al, 1
$LN4@allocateSt:
; Line 1652
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T46042[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::allocateStrings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$ = -20						; size = 4
_this$ = -8						; size = 4
_newLen$ = 8						; size = 4
_ec$ = 12						; size = 4
?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::ensureCapacity, COMDAT
; _this$ = ecx
; Line 1654
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1655
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jg	SHORT $LN2@ensureCapa
; Line 1656
	jmp	SHORT $LN3@ensureCapa
$LN2@ensureCapa:
; Line 1657
	mov	eax, DWORD PTR _newLen$[ebp]
	lea	ecx, DWORD PTR [eax*4+64]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _temp$[ebp], eax
; Line 1658
	cmp	DWORD PTR _temp$[ebp], 0
	jne	SHORT $LN1@ensureCapa
; Line 1659
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1660
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1661
	jmp	SHORT $LN3@ensureCapa
$LN1@ensureCapa:
; Line 1663
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 1664
	mov	eax, DWORD PTR _newLen$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN3@ensureCapa:
; Line 1666
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::ensureCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$ = -20						; size = 4
_this$ = -8						; size = 4
_newLen$ = 8						; size = 4
_ec$ = 12						; size = 4
?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::ensureBufferCapacity, COMDAT
; _this$ = ecx
; Line 1668
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1669
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN2@ensureBuff
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN2@ensureBuff
; Line 1670
	jmp	SHORT $LN3@ensureBuff
$LN2@ensureBuff:
; Line 1671
	mov	eax, DWORD PTR _newLen$[ebp]
	lea	ecx, DWORD PTR [eax*4+64]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _temp$[ebp], eax
; Line 1672
	cmp	DWORD PTR _temp$[ebp], 0
	jne	SHORT $LN1@ensureBuff
; Line 1673
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1674
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 1675
	jmp	SHORT $LN3@ensureBuff
$LN1@ensureBuff:
; Line 1677
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1678
	mov	eax, DWORD PTR _newLen$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN3@ensureBuff:
; Line 1680
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::ensureBufferCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?swapBuffers@UnicodeSet@icu_56@@AAEXXZ
_TEXT	SEGMENT
_c$ = -32						; size = 4
_temp$ = -20						; size = 4
_this$ = -8						; size = 4
?swapBuffers@UnicodeSet@icu_56@@AAEXXZ PROC		; icu_56::UnicodeSet::swapBuffers, COMDAT
; _this$ = ecx
; Line 1685
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1687
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 1688
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+16], edx
; Line 1689
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1691
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _c$[ebp], ecx
; Line 1692
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+12], edx
; Line 1693
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 1694
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?swapBuffers@UnicodeSet@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeSet::swapBuffers
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setToBogus@UnicodeSet@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToBogus@UnicodeSet@icu_56@@QAEXXZ PROC		; icu_56::UnicodeSet::setToBogus, COMDAT
; _this$ = ecx
; Line 1696
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1697
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1698
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToBogus@UnicodeSet@icu_56@@QAEXXZ ENDP		; icu_56::UnicodeSet::setToBogus
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z
_TEXT	SEGMENT
_b$ = -80						; size = 4
_a$ = -68						; size = 4
_k$ = -56						; size = 4
_j$ = -44						; size = 4
_i$ = -32						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_otherLen$ = 12						; size = 4
_polarity$ = 16						; size = 1
?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z PROC	; icu_56::UnicodeSet::exclusiveOr, COMDAT
; _this$ = ecx
; Line 1712
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1713
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN14@exclusiveO
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@exclusiveO
$LN14@exclusiveO:
; Line 1714
	jmp	$LN16@exclusiveO
$LN15@exclusiveO:
; Line 1716
	mov	DWORD PTR _status$[ebp], 0
; Line 1717
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, DWORD PTR _otherLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureBufferCapacity
; Line 1718
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@exclusiveO
; Line 1719
	jmp	$LN16@exclusiveO
$LN13@exclusiveO:
; Line 1722
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
	mov	DWORD PTR _k$[ebp], 0
; Line 1723
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1725
	movsx	eax, BYTE PTR _polarity$[ebp]
	cmp	eax, 1
	je	SHORT $LN11@exclusiveO
	movsx	eax, BYTE PTR _polarity$[ebp]
	cmp	eax, 2
	jne	SHORT $LN12@exclusiveO
$LN11@exclusiveO:
; Line 1726
	mov	DWORD PTR _b$[ebp], 0
; Line 1727
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN10@exclusiveO
; Line 1728
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1729
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
$LN10@exclusiveO:
; Line 1731
	jmp	SHORT $LN8@exclusiveO
$LN12@exclusiveO:
; Line 1732
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN8@exclusiveO:
; Line 1737
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN6@exclusiveO
; Line 1738
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1739
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	$LN5@exclusiveO
$LN6@exclusiveO:
; Line 1740
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN4@exclusiveO
; Line 1741
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1742
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN5@exclusiveO
$LN4@exclusiveO:
; Line 1743
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	je	SHORT $LN2@exclusiveO
; Line 1745
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1746
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1747
	jmp	SHORT $LN5@exclusiveO
$LN2@exclusiveO:
; Line 1748
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [ecx+edx*4], 1114112		; 00110000H
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
; Line 1749
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1750
	jmp	SHORT $LN7@exclusiveO
$LN5@exclusiveO:
; Line 1752
	jmp	$LN8@exclusiveO
$LN7@exclusiveO:
; Line 1753
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swapBuffers@UnicodeSet@icu_56@@AAEXXZ	; icu_56::UnicodeSet::swapBuffers
; Line 1754
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
$LN16@exclusiveO:
; Line 1755
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@exclusiveO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN20@exclusiveO:
	DD	1
	DD	$LN19@exclusiveO
$LN19@exclusiveO:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN18@exclusiveO
$LN18@exclusiveO:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z ENDP	; icu_56::UnicodeSet::exclusiveOr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?add@UnicodeSet@icu_56@@AAEXPBHHC@Z
_TEXT	SEGMENT
tv90 = -280						; size = 4
_b$ = -80						; size = 4
_a$ = -68						; size = 4
_k$ = -56						; size = 4
_j$ = -44						; size = 4
_i$ = -32						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_otherLen$ = 12						; size = 4
_polarity$ = 16						; size = 1
?add@UnicodeSet@icu_56@@AAEXPBHHC@Z PROC		; icu_56::UnicodeSet::add, COMDAT
; _this$ = ecx
; Line 1762
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1763
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN40@add@5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN40@add@5
	cmp	DWORD PTR _other$[ebp], 0
	jne	SHORT $LN41@add@5
$LN40@add@5:
; Line 1764
	jmp	$LN42@add@5
$LN41@add@5:
; Line 1766
	mov	DWORD PTR _status$[ebp], 0
; Line 1767
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, DWORD PTR _otherLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureBufferCapacity
; Line 1768
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@add@5
; Line 1769
	jmp	$LN42@add@5
$LN39@add@5:
; Line 1772
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
	mov	DWORD PTR _k$[ebp], 0
; Line 1773
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1774
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN38@add@5:
; Line 1778
	movsx	eax, BYTE PTR _polarity$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	cmp	DWORD PTR tv90[ebp], 3
	ja	$LN35@add@5
	mov	ecx, DWORD PTR tv90[ebp]
	jmp	DWORD PTR $LN47@add@5[ecx*4]
$LN34@add@5:
; Line 1780
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	$LN33@add@5
; Line 1782
	cmp	DWORD PTR _k$[ebp], 0
	jle	SHORT $LN32@add@5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jg	SHORT $LN32@add@5
; Line 1784
	mov	eax, DWORD PTR _k$[ebp]
	sub	eax, 1
	mov	DWORD PTR _k$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	?max@icu_56@@YAHHH@Z			; icu_56::max
	add	esp, 8
	mov	DWORD PTR _a$[ebp], eax
; Line 1785
	jmp	SHORT $LN31@add@5
$LN32@add@5:
; Line 1787
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1788
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
$LN31@add@5:
; Line 1790
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1791
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
	jmp	$LN30@add@5
$LN33@add@5:
; Line 1792
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	$LN29@add@5
; Line 1793
	cmp	DWORD PTR _k$[ebp], 0
	jle	SHORT $LN28@add@5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jg	SHORT $LN28@add@5
; Line 1794
	mov	eax, DWORD PTR _k$[ebp]
	sub	eax, 1
	mov	DWORD PTR _k$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	?max@icu_56@@YAHHH@Z			; icu_56::max
	add	esp, 8
	mov	DWORD PTR _b$[ebp], eax
; Line 1795
	jmp	SHORT $LN27@add@5
$LN28@add@5:
; Line 1796
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1797
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
$LN27@add@5:
; Line 1799
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1800
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
; Line 1801
	jmp	$LN30@add@5
$LN29@add@5:
; Line 1802
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN25@add@5
	jmp	$loop_end$37768
	jmp	$loop_end$37768
$LN25@add@5:
; Line 1805
	cmp	DWORD PTR _k$[ebp], 0
	jle	SHORT $LN23@add@5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jg	SHORT $LN23@add@5
; Line 1806
	mov	eax, DWORD PTR _k$[ebp]
	sub	eax, 1
	mov	DWORD PTR _k$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	?max@icu_56@@YAHHH@Z			; icu_56::max
	add	esp, 8
	mov	DWORD PTR _a$[ebp], eax
; Line 1807
	jmp	SHORT $LN22@add@5
$LN23@add@5:
; Line 1809
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1810
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
$LN22@add@5:
; Line 1812
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1813
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1814
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1815
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN30@add@5:
; Line 1817
	jmp	$LN35@add@5
$LN21@add@5:
; Line 1819
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jg	SHORT $LN20@add@5
; Line 1820
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN19@add@5
	jmp	$loop_end$37768
	jmp	$loop_end$37768
$LN19@add@5:
; Line 1821
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1822
	jmp	SHORT $LN17@add@5
$LN20@add@5:
; Line 1823
	cmp	DWORD PTR _b$[ebp], 1114112		; 00110000H
	jne	SHORT $LN16@add@5
	jmp	$loop_end$37768
	jmp	$loop_end$37768
$LN16@add@5:
; Line 1824
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
$LN17@add@5:
; Line 1826
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1827
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1828
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1829
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
; Line 1830
	jmp	$LN35@add@5
$LN14@add@5:
; Line 1832
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN13@add@5
; Line 1833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
	jmp	SHORT $LN12@add@5
$LN13@add@5:
; Line 1834
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN11@add@5
; Line 1835
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1836
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
; Line 1837
	jmp	SHORT $LN12@add@5
$LN11@add@5:
; Line 1838
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN9@add@5
	jmp	$loop_end$37768
	jmp	$loop_end$37768
$LN9@add@5:
; Line 1839
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1840
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1841
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1842
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN12@add@5:
; Line 1844
	jmp	$LN35@add@5
$LN7@add@5:
; Line 1846
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN6@add@5
; Line 1847
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1848
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1849
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
	jmp	SHORT $LN35@add@5
$LN6@add@5:
; Line 1850
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN4@add@5
; Line 1851
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1852
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1853
	jmp	SHORT $LN35@add@5
$LN4@add@5:
; Line 1854
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN2@add@5
	jmp	SHORT $loop_end$37768
	jmp	SHORT $loop_end$37768
$LN2@add@5:
; Line 1855
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1856
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1857
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1858
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN35@add@5:
; Line 1862
	jmp	$LN38@add@5
$loop_end$37768:
; Line 1864
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [ecx+edx*4], 1114112		; 00110000H
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
; Line 1865
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1866
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swapBuffers@UnicodeSet@icu_56@@AAEXXZ	; icu_56::UnicodeSet::swapBuffers
; Line 1867
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
$LN42@add@5:
; Line 1868
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@add@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN46@add@5:
	DD	1
	DD	$LN45@add@5
$LN45@add@5:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN44@add@5
$LN44@add@5:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
	npad	1
$LN47@add@5:
	DD	$LN34@add@5
	DD	$LN14@add@5
	DD	$LN7@add@5
	DD	$LN21@add@5
?add@UnicodeSet@icu_56@@AAEXPBHHC@Z ENDP		; icu_56::UnicodeSet::add
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?max@icu_56@@YAHHH@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?max@icu_56@@YAHHH@Z PROC				; icu_56::max, COMDAT
; Line 1705
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1706
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jle	SHORT $LN3@max
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@max
$LN3@max:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@max:
	mov	eax, DWORD PTR tv65[ebp]
; Line 1707
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max@icu_56@@YAHHH@Z ENDP				; icu_56::max
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z
_TEXT	SEGMENT
tv89 = -280						; size = 4
_b$ = -80						; size = 4
_a$ = -68						; size = 4
_k$ = -56						; size = 4
_j$ = -44						; size = 4
_i$ = -32						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_otherLen$ = 12						; size = 4
_polarity$ = 16						; size = 1
?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z PROC		; icu_56::UnicodeSet::retain, COMDAT
; _this$ = ecx
; Line 1875
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1876
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN34@retain@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN35@retain@2
$LN34@retain@2:
; Line 1877
	jmp	$LN36@retain@2
$LN35@retain@2:
; Line 1879
	mov	DWORD PTR _status$[ebp], 0
; Line 1880
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, DWORD PTR _otherLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureBufferCapacity
; Line 1881
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN33@retain@2
; Line 1882
	jmp	$LN36@retain@2
$LN33@retain@2:
; Line 1885
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
	mov	DWORD PTR _k$[ebp], 0
; Line 1886
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1887
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN32@retain@2:
; Line 1891
	movsx	eax, BYTE PTR _polarity$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	cmp	DWORD PTR tv89[ebp], 3
	ja	$LN29@retain@2
	mov	ecx, DWORD PTR tv89[ebp]
	jmp	DWORD PTR $LN41@retain@2[ecx*4]
$LN28@retain@2:
; Line 1893
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN27@retain@2
; Line 1894
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1895
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
	jmp	$LN26@retain@2
$LN27@retain@2:
; Line 1896
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN25@retain@2
; Line 1897
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1898
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
; Line 1899
	jmp	SHORT $LN26@retain@2
$LN25@retain@2:
; Line 1900
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN23@retain@2
	jmp	$loop_end$37821
	jmp	$loop_end$37821
$LN23@retain@2:
; Line 1901
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1902
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1903
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1904
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1905
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN26@retain@2:
; Line 1907
	jmp	$LN29@retain@2
$LN21@retain@2:
; Line 1909
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN20@retain@2
; Line 1910
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1911
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1912
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
	jmp	$LN19@retain@2
$LN20@retain@2:
; Line 1913
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN18@retain@2
; Line 1914
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1915
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1916
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
; Line 1917
	jmp	SHORT $LN19@retain@2
$LN18@retain@2:
; Line 1918
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN16@retain@2
	jmp	$loop_end$37821
	jmp	$loop_end$37821
$LN16@retain@2:
; Line 1919
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1920
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1921
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1922
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1923
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN19@retain@2:
; Line 1925
	jmp	$LN29@retain@2
$LN14@retain@2:
; Line 1927
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN13@retain@2
; Line 1928
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1929
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
	jmp	$LN12@retain@2
$LN13@retain@2:
; Line 1930
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN11@retain@2
; Line 1931
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1932
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1933
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
; Line 1934
	jmp	SHORT $LN12@retain@2
$LN11@retain@2:
; Line 1935
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN9@retain@2
	jmp	$loop_end$37821
	jmp	$loop_end$37821
$LN9@retain@2:
; Line 1936
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1937
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1938
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1939
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN12@retain@2:
; Line 1941
	jmp	$LN29@retain@2
$LN7@retain@2:
; Line 1943
	mov	eax, DWORD PTR _b$[ebp]
	cmp	eax, DWORD PTR _a$[ebp]
	jge	SHORT $LN6@retain@2
; Line 1944
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1945
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
	jmp	$LN29@retain@2
$LN6@retain@2:
; Line 1946
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN4@retain@2
; Line 1947
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 1948
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1949
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1950
	jmp	SHORT $LN29@retain@2
$LN4@retain@2:
; Line 1951
	cmp	DWORD PTR _a$[ebp], 1114112		; 00110000H
	jne	SHORT $LN2@retain@2
	jmp	SHORT $loop_end$37821
	jmp	SHORT $loop_end$37821
$LN2@retain@2:
; Line 1952
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 1953
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 1
	mov	BYTE PTR _polarity$[ebp], al
; Line 1954
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 1955
	movsx	eax, BYTE PTR _polarity$[ebp]
	xor	eax, 2
	mov	BYTE PTR _polarity$[ebp], al
$LN29@retain@2:
; Line 1959
	jmp	$LN32@retain@2
$loop_end$37821:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [ecx+edx*4], 1114112		; 00110000H
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
; Line 1962
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1963
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swapBuffers@UnicodeSet@icu_56@@AAEXXZ	; icu_56::UnicodeSet::swapBuffers
; Line 1964
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
$LN36@retain@2:
; Line 1965
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@retain@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN40@retain@2:
	DD	1
	DD	$LN39@retain@2
$LN39@retain@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN38@retain@2
$LN38@retain@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
	npad	1
$LN41@retain@2:
	DD	$LN28@retain@2
	DD	$LN14@retain@2
	DD	$LN7@retain@2
	DD	$LN21@retain@2
?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z ENDP		; icu_56::UnicodeSet::retain
_TEXT	ENDS
PUBLIC	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
PUBLIC	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z ; icu_56::UnicodeSet::_appendToPat
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z
_TEXT	SEGMENT
_i$37850 = -20						; size = 4
_cp$ = -8						; size = 4
_buf$ = 8						; size = 4
_s$ = 12						; size = 4
_escapeUnprintable$ = 16				; size = 1
?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z PROC ; icu_56::UnicodeSet::_appendToPat, COMDAT
; Line 1972
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1974
	mov	DWORD PTR _i$37850[ebp], 0
	jmp	SHORT $LN3@appendToPa
$LN2@appendToPa:
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _cp$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$37850[ebp]
	mov	DWORD PTR _i$37850[ebp], ecx
$LN3@appendToPa:
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _i$37850[ebp], eax
	jge	SHORT $LN4@appendToPa
; Line 1975
	mov	eax, DWORD PTR _i$37850[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?char32At@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::char32At
	mov	DWORD PTR _cp$[ebp], eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cp$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 1976
	jmp	SHORT $LN2@appendToPa
$LN4@appendToPa:
; Line 1977
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z ENDP ; icu_56::UnicodeSet::_appendToPat
_TEXT	ENDS
EXTRN	?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC	; icu_56::PatternProps::isWhiteSpace
EXTRN	?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z:PROC ; icu_56::ICU_Utility::escapeUnprintable
EXTRN	?isUnprintable@ICU_Utility@icu_56@@SACH@Z:PROC	; icu_56::ICU_Utility::isUnprintable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z
_TEXT	SEGMENT
tv75 = -196						; size = 4
_buf$ = 8						; size = 4
_c$ = 12						; size = 4
_escapeUnprintable$ = 16				; size = 1
?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z PROC ; icu_56::UnicodeSet::_appendToPat, COMDAT
; Line 1984
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1985
	movsx	eax, BYTE PTR _escapeUnprintable$[ebp]
	test	eax, eax
	je	SHORT $LN7@appendToPa@2
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?isUnprintable@ICU_Utility@icu_56@@SACH@Z ; icu_56::ICU_Utility::isUnprintable
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@appendToPa@2
; Line 1988
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z ; icu_56::ICU_Utility::escapeUnprintable
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@appendToPa@2
; Line 1989
	jmp	SHORT $LN8@appendToPa@2
$LN7@appendToPa@2:
; Line 1993
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	sub	ecx, 36					; 00000024H
	mov	DWORD PTR tv75[ebp], ecx
	cmp	DWORD PTR tv75[ebp], 89			; 00000059H
	ja	SHORT $LN2@appendToPa@2
	mov	edx, DWORD PTR tv75[ebp]
	movzx	eax, BYTE PTR $LN10@appendToPa@2[edx]
	jmp	DWORD PTR $LN11@appendToPa@2[eax*4]
$LN3@appendToPa@2:
; Line 2004
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _buf$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 2005
	jmp	SHORT $LN4@appendToPa@2
$LN2@appendToPa@2:
; Line 2008
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?isWhiteSpace@PatternProps@icu_56@@SACH@Z ; icu_56::PatternProps::isWhiteSpace
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@appendToPa@2
; Line 2009
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _buf$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
$LN4@appendToPa@2:
; Line 2013
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
$LN8@appendToPa@2:
; Line 2014
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@appendToPa@2:
	DD	$LN3@appendToPa@2
	DD	$LN2@appendToPa@2
$LN10@appendToPa@2:
	DB	0
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	0
?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ENDP ; icu_56::UnicodeSet::_appendToPat
_TEXT	ENDS
PUBLIC	?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::_generatePattern
PUBLIC	?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::_toPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
___c2$37893 = -56					; size = 2
_c$37891 = -44						; size = 4
_backslashCount$37887 = -32				; size = 4
_i$37886 = -20						; size = 4
_this$ = -8						; size = 4
_result$ = 8						; size = 4
_escapeUnprintable$ = 12				; size = 1
?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::UnicodeSet::_toPattern, COMDAT
; _this$ = ecx
; Line 2023
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2024
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	$LN10@toPattern
; Line 2026
	mov	DWORD PTR _backslashCount$37887[ebp], 0
; Line 2027
	mov	DWORD PTR _i$37886[ebp], 0
$LN9@toPattern:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37886[ebp]
	cmp	ecx, DWORD PTR [eax+32]
	jge	$LN8@toPattern
; Line 2029
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _i$37886[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _c$37891[ebp], eax
	mov	ecx, DWORD PTR _i$37886[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$37886[ebp], ecx
	mov	eax, DWORD PTR _c$37891[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN7@toPattern
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37886[ebp]
	cmp	ecx, DWORD PTR [eax+32]
	je	SHORT $LN7@toPattern
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _i$37886[ebp]
	mov	ax, WORD PTR [ecx+edx*2]
	mov	WORD PTR ___c2$37893[ebp], ax
	movzx	ecx, WORD PTR ___c2$37893[ebp]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 56320				; 0000dc00H
	jne	SHORT $LN7@toPattern
	mov	eax, DWORD PTR _i$37886[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37886[ebp], eax
	mov	eax, DWORD PTR _c$37891[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$37893[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$37891[ebp], edx
$LN7@toPattern:
; Line 2030
	movsx	eax, BYTE PTR _escapeUnprintable$[ebp]
	test	eax, eax
	je	SHORT $LN5@toPattern
	mov	eax, DWORD PTR _c$37891[ebp]
	push	eax
	call	?isUnprintable@ICU_Utility@icu_56@@SACH@Z ; icu_56::ICU_Utility::isUnprintable
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@toPattern
; Line 2035
	mov	eax, DWORD PTR _backslashCount$37887[ebp]
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN13@toPattern
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN13@toPattern:
	cmp	eax, 1
	jne	SHORT $LN4@toPattern
; Line 2036
	mov	ecx, DWORD PTR _result$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
$LN4@toPattern:
; Line 2038
	mov	eax, DWORD PTR _c$37891[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z ; icu_56::ICU_Utility::escapeUnprintable
	add	esp, 8
; Line 2039
	mov	DWORD PTR _backslashCount$37887[ebp], 0
; Line 2040
	jmp	SHORT $LN3@toPattern
$LN5@toPattern:
; Line 2041
	mov	eax, DWORD PTR _c$37891[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 2042
	cmp	DWORD PTR _c$37891[ebp], 92		; 0000005cH
	jne	SHORT $LN2@toPattern
; Line 2043
	mov	eax, DWORD PTR _backslashCount$37887[ebp]
	add	eax, 1
	mov	DWORD PTR _backslashCount$37887[ebp], eax
; Line 2044
	jmp	SHORT $LN3@toPattern
$LN2@toPattern:
; Line 2045
	mov	DWORD PTR _backslashCount$37887[ebp], 0
$LN3@toPattern:
; Line 2048
	jmp	$LN9@toPattern
$LN8@toPattern:
; Line 2049
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN11@toPattern
$LN10@toPattern:
; Line 2052
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::_generatePattern
$LN11@toPattern:
; Line 2053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::UnicodeSet::_toPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
_escapeUnprintable$ = 12				; size = 1
?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::UnicodeSet::toPattern, COMDAT
; _this$ = ecx
; Line 2062
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2063
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 2064
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::_toPattern
; Line 2065
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::UnicodeSet::toPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
_i$37936 = -104						; size = 4
_end$37932 = -92					; size = 4
_start$37931 = -80					; size = 4
_i$37927 = -68						; size = 4
_end$37922 = -56					; size = 4
_start$37921 = -44					; size = 4
_i$37917 = -32						; size = 4
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_result$ = 8						; size = 4
_escapeUnprintable$ = 12				; size = 1
?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::UnicodeSet::_generatePattern, COMDAT
; _this$ = ecx
; Line 2074
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2075
	push	91					; 0000005bH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 2087
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 2094
	cmp	DWORD PTR _count$[ebp], 1
	jle	$LN15@generatePa
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN15@generatePa
	mov	eax, DWORD PTR _count$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1114111				; 0010ffffH
	jne	$LN15@generatePa
; Line 2097
	push	94					; 0000005eH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 2099
	mov	DWORD PTR _i$37917[ebp], 1
	jmp	SHORT $LN14@generatePa
$LN13@generatePa:
	mov	eax, DWORD PTR _i$37917[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37917[ebp], eax
$LN14@generatePa:
	mov	eax, DWORD PTR _i$37917[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN12@generatePa
; Line 2100
	mov	eax, DWORD PTR _i$37917[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _start$37921[ebp], eax
; Line 2101
	mov	esi, esp
	mov	eax, DWORD PTR _i$37917[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _end$37922[ebp], eax
; Line 2102
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$37921[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 2103
	mov	eax, DWORD PTR _start$37921[ebp]
	cmp	eax, DWORD PTR _end$37922[ebp]
	je	SHORT $LN11@generatePa
; Line 2104
	mov	eax, DWORD PTR _start$37921[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _end$37922[ebp]
	je	SHORT $LN10@generatePa
; Line 2105
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
$LN10@generatePa:
; Line 2107
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _end$37922[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
$LN11@generatePa:
; Line 2109
	jmp	$LN13@generatePa
$LN12@generatePa:
; Line 2113
	jmp	$LN9@generatePa
$LN15@generatePa:
; Line 2114
	mov	DWORD PTR _i$37927[ebp], 0
	jmp	SHORT $LN8@generatePa
$LN7@generatePa:
	mov	eax, DWORD PTR _i$37927[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37927[ebp], eax
$LN8@generatePa:
	mov	eax, DWORD PTR _i$37927[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN9@generatePa
; Line 2115
	mov	esi, esp
	mov	eax, DWORD PTR _i$37927[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$37931[ebp], eax
; Line 2116
	mov	esi, esp
	mov	eax, DWORD PTR _i$37927[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$37932[ebp], eax
; Line 2117
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$37931[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 2118
	mov	eax, DWORD PTR _start$37931[ebp]
	cmp	eax, DWORD PTR _end$37932[ebp]
	je	SHORT $LN5@generatePa
; Line 2119
	mov	eax, DWORD PTR _start$37931[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _end$37932[ebp]
	je	SHORT $LN4@generatePa
; Line 2120
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
$LN4@generatePa:
; Line 2122
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _end$37932[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
$LN5@generatePa:
; Line 2124
	jmp	$LN7@generatePa
$LN9@generatePa:
; Line 2127
	mov	DWORD PTR _i$37936[ebp], 0
	jmp	SHORT $LN3@generatePa
$LN2@generatePa:
	mov	eax, DWORD PTR _i$37936[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37936[ebp], eax
$LN3@generatePa:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _i$37936[ebp], eax
	jge	SHORT $LN1@generatePa
; Line 2128
	push	123					; 0000007bH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 2131
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$37936[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	push	eax
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 2132
	push	125					; 0000007dH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 2133
	jmp	SHORT $LN2@generatePa
$LN1@generatePa:
; Line 2134
	push	93					; 0000005dH
	mov	ecx, DWORD PTR _result$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 2135
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::UnicodeSet::_generatePattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?releasePattern@UnicodeSet@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releasePattern@UnicodeSet@icu_56@@AAEXXZ PROC		; icu_56::UnicodeSet::releasePattern, COMDAT
; _this$ = ecx
; Line 2140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2141
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@releasePat
; Line 2142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 2143
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 2144
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
$LN2@releasePat:
; Line 2146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releasePattern@UnicodeSet@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeSet::releasePattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_newPatLen$ = -20					; size = 4
_this$ = -8						; size = 4
_newPat$ = 8						; size = 4
?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::setPattern, COMDAT
; _this$ = ecx
; Line 2151
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2152
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releasePattern@UnicodeSet@icu_56@@AAEXXZ ; icu_56::UnicodeSet::releasePattern
; Line 2153
	mov	ecx, DWORD PTR _newPat$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _newPatLen$[ebp], eax
; Line 2154
	mov	eax, DWORD PTR _newPatLen$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 2155
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@setPattern
; Line 2156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newPatLen$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 2157
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	push	0
	mov	ecx, DWORD PTR _newPat$[ebp]
	call	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Line 2158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	xor	edx, edx
	mov	WORD PTR [eax+ecx*2], dx
$LN2@setPattern:
; Line 2162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::setPattern
_TEXT	ENDS
PUBLIC	?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF16
PUBLIC	?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ ; icu_56::UnicodeSet::freeze
EXTRN	??0BMPSet@icu_56@@QAE@PBHH@Z:PROC		; icu_56::BMPSet::BMPSet
EXTRN	??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z:PROC ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$1
__ehfuncinfo$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
_TEXT	SEGMENT
tv178 = -292						; size = 4
tv162 = -292						; size = 4
tv150 = -292						; size = 4
$T46104 = -284						; size = 4
$T46105 = -272						; size = 4
$T46108 = -260						; size = 4
$T46109 = -248						; size = 4
$T46112 = -236						; size = 4
$T46113 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ PROC ; icu_56::UnicodeSet::freeze, COMDAT
; _this$ = ecx
; Line 2164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2165
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	jne	$LN8@freeze
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	jne	$LN8@freeze
; Line 2171
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN7@freeze
; Line 2172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 2173
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
$LN7@freeze:
; Line 2175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], ecx
	jle	SHORT $LN6@freeze
; Line 2178
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 0
	sete	cl
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 2179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 2180
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN6@freeze
; Line 2181
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
; Line 2182
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN9@freeze
$LN6@freeze:
; Line 2187
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN4@freeze
; Line 2188
	push	216					; 000000d8H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T46105[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46105[ebp], 0
	je	SHORT $LN11@freeze
	push	63					; 0000003fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T46105[ebp]
	call	??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN12@freeze
$LN11@freeze:
	mov	DWORD PTR tv150[ebp], 0
$LN12@freeze:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T46104[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46104[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 2189
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN4@freeze
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	call	?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF16
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@freeze
; Line 2195
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T46109[ebp], ecx
	mov	edx, DWORD PTR $T46109[ebp]
	mov	DWORD PTR $T46108[ebp], edx
	cmp	DWORD PTR $T46108[ebp], 0
	je	SHORT $LN13@freeze
	push	1
	mov	ecx, DWORD PTR $T46108[ebp]
	call	??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN14@freeze
$LN13@freeze:
	mov	DWORD PTR tv162[ebp], 0
$LN14@freeze:
; Line 2196
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
$LN4@freeze:
; Line 2199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN8@freeze
; Line 2201
	push	788					; 00000314H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T46113[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T46113[ebp], 0
	je	SHORT $LN15@freeze
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR $T46113[ebp]
	call	??0BMPSet@icu_56@@QAE@PBHH@Z		; icu_56::BMPSet::BMPSet
	mov	DWORD PTR tv178[ebp], eax
	jmp	SHORT $LN16@freeze
$LN15@freeze:
	mov	DWORD PTR tv178[ebp], 0
$LN16@freeze:
	mov	ecx, DWORD PTR tv178[ebp]
	mov	DWORD PTR $T46112[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T46112[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 2202
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN8@freeze
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToBogus@UnicodeSet@icu_56@@QAEXXZ	; icu_56::UnicodeSet::setToBogus
$LN8@freeze:
; Line 2207
	mov	eax, DWORD PTR _this$[ebp]
$LN9@freeze:
; Line 2208
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$0:
	mov	eax, DWORD PTR $T46105[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$1:
	mov	eax, DWORD PTR $T46113[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ ENDP ; icu_56::UnicodeSet::freeze
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ PROC ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF16, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unisetspan.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	setne	al
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ ENDP ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF16
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?span@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSetStringSpan::span
EXTRN	?span@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z:PROC ; icu_56::BMPSet::span
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\uniset.cpp
xdata$x	SEGMENT
__unwindtable$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0
__ehfuncinfo$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
_TEXT	SEGMENT
$T46129 = -512						; size = 4
___c2$38004 = -308					; size = 2
_prev$ = -296						; size = 4
_start$ = -284						; size = 4
_c$ = -272						; size = 4
_strSpan$37993 = -260					; size = 216
_which$37992 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_length$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::span, COMDAT
; _this$ = ecx
; Line 2210
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2211
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN14@span@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN14@span@2
; Line 2212
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?span@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z ; icu_56::BMPSet::span
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
	jmp	$LN15@span@2
$LN14@span@2:
; Line 2214
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN13@span@2
; Line 2215
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
$LN13@span@2:
; Line 2217
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN12@span@2
; Line 2218
	xor	eax, eax
	jmp	$LN15@span@2
$LN12@span@2:
; Line 2220
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN11@span@2
; Line 2221
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	call	?span@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::span
	jmp	$LN15@span@2
	jmp	$LN10@span@2
$LN11@span@2:
; Line 2222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN10@span@2
; Line 2225
	xor	eax, eax
	cmp	DWORD PTR _spanCondition$[ebp], 0
	setne	al
	add	eax, 41					; 00000029H
	mov	DWORD PTR _which$37992[ebp], eax
; Line 2226
	mov	eax, DWORD PTR _which$37992[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSpan$37993[ebp]
	call	??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2227
	lea	ecx, DWORD PTR _strSpan$37993[ebp]
	call	?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF16
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@span@2
; Line 2228
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSpan$37993[ebp]
	call	?span@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::span
	mov	DWORD PTR $T46129[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$37993[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
	mov	eax, DWORD PTR $T46129[ebp]
	jmp	$LN15@span@2
$LN8@span@2:
; Line 2230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$37993[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
$LN10@span@2:
; Line 2232
	cmp	DWORD PTR _spanCondition$[ebp], 0
	je	SHORT $LN7@span@2
; Line 2233
	mov	DWORD PTR _spanCondition$[ebp], 1
$LN7@span@2:
; Line 2237
	mov	DWORD PTR _start$[ebp], 0
	mov	DWORD PTR _prev$[ebp], 0
$LN6@span@2:
; Line 2239
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN3@span@2
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	je	SHORT $LN3@span@2
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$38004[ebp], dx
	movzx	eax, WORD PTR ___c2$38004[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN3@span@2
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$38004[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN3@span@2:
; Line 2240
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	cmp	DWORD PTR _spanCondition$[ebp], ecx
	je	SHORT $LN5@span@2
; Line 2241
	jmp	SHORT $LN4@span@2
$LN5@span@2:
; Line 2243
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
	mov	ecx, DWORD PTR _prev$[ebp]
	cmp	ecx, DWORD PTR _length$[ebp]
	jl	$LN6@span@2
$LN4@span@2:
; Line 2244
	mov	eax, DWORD PTR _prev$[ebp]
$LN15@span@2:
; Line 2245
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@span@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN21@span@2:
	DD	1
	DD	$LN20@span@2
$LN20@span@2:
	DD	-260					; fffffefcH
	DD	216					; 000000d8H
	DD	$LN18@span@2
$LN18@span@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0:
	lea	ecx, DWORD PTR _strSpan$37993[ebp]
	jmp	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
__ehhandler$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::span
PUBLIC	__$ArrayPad$
EXTRN	?spanBack@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSetStringSpan::spanBack
EXTRN	?spanBack@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z:PROC ; icu_56::BMPSet::spanBack
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0
__ehfuncinfo$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
_TEXT	SEGMENT
$T46143 = -500						; size = 4
___c2$38033 = -296					; size = 2
_prev$ = -284						; size = 4
_c$ = -272						; size = 4
_strSpan$38023 = -260					; size = 216
_which$38022 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_length$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBack, COMDAT
; _this$ = ecx
; Line 2247
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2248
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN14@spanBack@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN14@spanBack@2
; Line 2249
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?spanBack@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z ; icu_56::BMPSet::spanBack
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
	jmp	$LN15@spanBack@2
$LN14@spanBack@2:
; Line 2251
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN13@spanBack@2
; Line 2252
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
$LN13@spanBack@2:
; Line 2254
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN12@spanBack@2
; Line 2255
	xor	eax, eax
	jmp	$LN15@spanBack@2
$LN12@spanBack@2:
; Line 2257
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN11@spanBack@2
; Line 2258
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	call	?spanBack@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::spanBack
	jmp	$LN15@spanBack@2
	jmp	$LN10@spanBack@2
$LN11@spanBack@2:
; Line 2259
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN10@spanBack@2
; Line 2262
	xor	eax, eax
	cmp	DWORD PTR _spanCondition$[ebp], 0
	setne	al
	add	eax, 25					; 00000019H
	mov	DWORD PTR _which$38022[ebp], eax
; Line 2263
	mov	eax, DWORD PTR _which$38022[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSpan$38023[ebp]
	call	??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2264
	lea	ecx, DWORD PTR _strSpan$38023[ebp]
	call	?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF16
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@spanBack@2
; Line 2265
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSpan$38023[ebp]
	call	?spanBack@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::spanBack
	mov	DWORD PTR $T46143[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$38023[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
	mov	eax, DWORD PTR $T46143[ebp]
	jmp	$LN15@spanBack@2
$LN8@spanBack@2:
; Line 2267
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$38023[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
$LN10@spanBack@2:
; Line 2269
	cmp	DWORD PTR _spanCondition$[ebp], 0
	je	SHORT $LN7@spanBack@2
; Line 2270
	mov	DWORD PTR _spanCondition$[ebp], 1
$LN7@spanBack@2:
; Line 2274
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
$LN6@spanBack@2:
; Line 2276
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN3@spanBack@2
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN3@spanBack@2
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2-2]
	mov	WORD PTR ___c2$38033[ebp], dx
	movzx	eax, WORD PTR ___c2$38033[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN3@spanBack@2
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	movzx	eax, WORD PTR ___c2$38033[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN3@spanBack@2:
; Line 2277
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	cmp	DWORD PTR _spanCondition$[ebp], ecx
	je	SHORT $LN5@spanBack@2
; Line 2278
	jmp	SHORT $LN4@spanBack@2
$LN5@spanBack@2:
; Line 2280
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
	cmp	DWORD PTR _prev$[ebp], 0
	jg	$LN6@spanBack@2
$LN4@spanBack@2:
; Line 2281
	mov	eax, DWORD PTR _prev$[ebp]
$LN15@spanBack@2:
; Line 2282
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@spanBack@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN21@spanBack@2:
	DD	1
	DD	$LN20@spanBack@2
$LN20@spanBack@2:
	DD	-260					; fffffefcH
	DD	216					; 000000d8H
	DD	$LN18@spanBack@2
$LN18@spanBack@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0:
	lea	ecx, DWORD PTR _strSpan$38023[ebp]
	jmp	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
__ehhandler$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBack
PUBLIC	?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF8
PUBLIC	__$ArrayPad$
PUBLIC	?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanUTF8
EXTRN	_utf8_nextCharSafeBody_56:PROC
EXTRN	?spanUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSetStringSpan::spanUTF8
EXTRN	_strlen:PROC
EXTRN	?spanUTF8@BMPSet@icu_56@@QBEPBEPBEHW4USetSpanCondition@@@Z:PROC ; icu_56::BMPSet::spanUTF8
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0
__ehfuncinfo$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
_TEXT	SEGMENT
$T46157 = -536						; size = 4
___t2$38070 = -329					; size = 1
___t1$38069 = -317					; size = 1
_prev$ = -308						; size = 4
_start$ = -296						; size = 4
_c$ = -284						; size = 4
_strSpan$38056 = -272					; size = 216
_which$38055 = -48					; size = 4
_s0$38045 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_length$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanUTF8, COMDAT
; _this$ = ecx
; Line 2284
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2285
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN18@spanUTF8
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN18@spanUTF8
; Line 2286
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s0$38045[ebp], eax
; Line 2287
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s0$38045[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?spanUTF8@BMPSet@icu_56@@QBEPBEPBEHW4USetSpanCondition@@@Z ; icu_56::BMPSet::spanUTF8
	sub	eax, DWORD PTR _s0$38045[ebp]
	jmp	$LN19@spanUTF8
$LN18@spanUTF8:
; Line 2289
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN17@spanUTF8
; Line 2290
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
$LN17@spanUTF8:
; Line 2292
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN16@spanUTF8
; Line 2293
	xor	eax, eax
	jmp	$LN19@spanUTF8
$LN16@spanUTF8:
; Line 2295
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN15@spanUTF8
; Line 2296
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	call	?spanUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::spanUTF8
	jmp	$LN19@spanUTF8
	jmp	$LN14@spanUTF8
$LN15@spanUTF8:
; Line 2297
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN14@spanUTF8
; Line 2300
	xor	eax, eax
	cmp	DWORD PTR _spanCondition$[ebp], 0
	setne	al
	add	eax, 37					; 00000025H
	mov	DWORD PTR _which$38055[ebp], eax
; Line 2301
	mov	eax, DWORD PTR _which$38055[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSpan$38056[ebp]
	call	??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2302
	lea	ecx, DWORD PTR _strSpan$38056[ebp]
	call	?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@spanUTF8
; Line 2303
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSpan$38056[ebp]
	call	?spanUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::spanUTF8
	mov	DWORD PTR $T46157[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$38056[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
	mov	eax, DWORD PTR $T46157[ebp]
	jmp	$LN19@spanUTF8
$LN12@spanUTF8:
; Line 2305
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$38056[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
$LN14@spanUTF8:
; Line 2307
	cmp	DWORD PTR _spanCondition$[ebp], 0
	je	SHORT $LN11@spanUTF8
; Line 2308
	mov	DWORD PTR _spanCondition$[ebp], 1
$LN11@spanUTF8:
; Line 2312
	mov	DWORD PTR _start$[ebp], 0
	mov	DWORD PTR _prev$[ebp], 0
$LN10@spanUTF8:
; Line 2314
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _start$[ebp]
	add	edx, 1
	mov	DWORD PTR _start$[ebp], edx
	cmp	DWORD PTR _c$[ebp], 128			; 00000080H
	jl	$LN7@spanUTF8
	cmp	DWORD PTR _c$[ebp], 224			; 000000e0H
	jle	$LN6@spanUTF8
	cmp	DWORD PTR _c$[ebp], 236			; 000000ecH
	jg	$LN6@spanUTF8
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _length$[ebp]
	jl	SHORT $LN5@spanUTF8
	cmp	DWORD PTR _length$[ebp], 0
	jge	$LN6@spanUTF8
$LN5@spanUTF8:
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR ___t1$38069[ebp], cl
	movzx	edx, BYTE PTR ___t1$38069[ebp]
	cmp	edx, 63					; 0000003fH
	jg	SHORT $LN6@spanUTF8
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR ___t2$38070[ebp], cl
	movzx	edx, BYTE PTR ___t2$38070[ebp]
	cmp	edx, 63					; 0000003fH
	jg	SHORT $LN6@spanUTF8
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 12					; 0000000cH
	movzx	ecx, BYTE PTR ___t1$38069[ebp]
	shl	ecx, 6
	or	eax, ecx
	movzx	edx, BYTE PTR ___t2$38070[ebp]
	or	eax, edx
	movzx	eax, ax
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 2
	mov	DWORD PTR _start$[ebp], eax
	jmp	$LN7@spanUTF8
$LN6@spanUTF8:
	cmp	DWORD PTR _c$[ebp], 224			; 000000e0H
	jge	SHORT $LN3@spanUTF8
	cmp	DWORD PTR _c$[ebp], 194			; 000000c2H
	jl	SHORT $LN3@spanUTF8
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	je	SHORT $LN3@spanUTF8
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	sub	ecx, 128				; 00000080H
	mov	BYTE PTR ___t1$38069[ebp], cl
	movzx	edx, BYTE PTR ___t1$38069[ebp]
	cmp	edx, 63					; 0000003fH
	jg	SHORT $LN3@spanUTF8
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	shl	eax, 6
	movzx	ecx, BYTE PTR ___t1$38069[ebp]
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
	jmp	SHORT $LN7@spanUTF8
$LN3@spanUTF8:
	push	-3					; fffffffdH
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_utf8_nextCharSafeBody_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _c$[ebp], eax
$LN7@spanUTF8:
; Line 2315
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	cmp	DWORD PTR _spanCondition$[ebp], ecx
	je	SHORT $LN9@spanUTF8
; Line 2316
	jmp	SHORT $LN8@spanUTF8
$LN9@spanUTF8:
; Line 2318
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
	mov	ecx, DWORD PTR _prev$[ebp]
	cmp	ecx, DWORD PTR _length$[ebp]
	jl	$LN10@spanUTF8
$LN8@spanUTF8:
; Line 2319
	mov	eax, DWORD PTR _prev$[ebp]
$LN19@spanUTF8:
; Line 2320
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@spanUTF8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN26@spanUTF8:
	DD	2
	DD	$LN25@spanUTF8
$LN25@spanUTF8:
	DD	-272					; fffffef0H
	DD	216					; 000000d8H
	DD	$LN22@spanUTF8
	DD	-296					; fffffed8H
	DD	4
	DD	$LN23@spanUTF8
$LN23@spanUTF8:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN22@spanUTF8:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0:
	lea	ecx, DWORD PTR _strSpan$38056[ebp]
	jmp	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
__ehhandler$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanUTF8
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ PROC ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF8, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unisetspan.h
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	setne	al
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ ENDP ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF8
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBackUTF8
EXTRN	_utf8_prevCharSafeBody_56:PROC
EXTRN	?spanBackUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSetStringSpan::spanBackUTF8
EXTRN	?spanBackUTF8@BMPSet@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z:PROC ; icu_56::BMPSet::spanBackUTF8
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\uniset.cpp
xdata$x	SEGMENT
__unwindtable$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0
__ehfuncinfo$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
_TEXT	SEGMENT
$T46174 = -500						; size = 4
_prev$ = -296						; size = 4
_c$ = -284						; size = 4
_strSpan$38099 = -272					; size = 216
_which$38098 = -48					; size = 4
_s0$38089 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_length$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBackUTF8, COMDAT
; _this$ = ecx
; Line 2322
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2323
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN13@spanBackUT
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN13@spanBackUT
; Line 2324
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s0$38089[ebp], eax
; Line 2325
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s0$38089[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?spanBackUTF8@BMPSet@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z ; icu_56::BMPSet::spanBackUTF8
	jmp	$LN14@spanBackUT
$LN13@spanBackUT:
; Line 2327
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN12@spanBackUT
; Line 2328
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
$LN12@spanBackUT:
; Line 2330
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN11@spanBackUT
; Line 2331
	xor	eax, eax
	jmp	$LN14@spanBackUT
$LN11@spanBackUT:
; Line 2333
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN10@spanBackUT
; Line 2334
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	call	?spanBackUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::spanBackUTF8
	jmp	$LN14@spanBackUT
	jmp	$LN9@spanBackUT
$LN10@spanBackUT:
; Line 2335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN9@spanBackUT
; Line 2338
	xor	eax, eax
	cmp	DWORD PTR _spanCondition$[ebp], 0
	setne	al
	add	eax, 21					; 00000015H
	mov	DWORD PTR _which$38098[ebp], eax
; Line 2339
	mov	eax, DWORD PTR _which$38098[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSpan$38099[ebp]
	call	??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z ; icu_56::UnicodeSetStringSpan::UnicodeSetStringSpan
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2340
	lea	ecx, DWORD PTR _strSpan$38099[ebp]
	call	?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ ; icu_56::UnicodeSetStringSpan::needsStringSpanUTF8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN7@spanBackUT
; Line 2341
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSpan$38099[ebp]
	call	?spanBackUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z ; icu_56::UnicodeSetStringSpan::spanBackUTF8
	mov	DWORD PTR $T46174[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$38099[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
	mov	eax, DWORD PTR $T46174[ebp]
	jmp	$LN14@spanBackUT
$LN7@spanBackUT:
; Line 2343
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSpan$38099[ebp]
	call	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
$LN9@spanBackUT:
; Line 2345
	cmp	DWORD PTR _spanCondition$[ebp], 0
	je	SHORT $LN6@spanBackUT
; Line 2346
	mov	DWORD PTR _spanCondition$[ebp], 1
$LN6@spanBackUT:
; Line 2350
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
$LN5@spanBackUT:
; Line 2352
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR _length$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _c$[ebp], edx
	cmp	DWORD PTR _c$[ebp], 128			; 00000080H
	jl	SHORT $LN2@spanBackUT
	push	-3					; fffffffdH
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	lea	ecx, DWORD PTR _length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_utf8_prevCharSafeBody_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _c$[ebp], eax
$LN2@spanBackUT:
; Line 2353
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	cmp	DWORD PTR _spanCondition$[ebp], ecx
	je	SHORT $LN4@spanBackUT
; Line 2354
	jmp	SHORT $LN3@spanBackUT
$LN4@spanBackUT:
; Line 2356
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
	cmp	DWORD PTR _prev$[ebp], 0
	jg	SHORT $LN5@spanBackUT
$LN3@spanBackUT:
; Line 2357
	mov	eax, DWORD PTR _prev$[ebp]
$LN14@spanBackUT:
; Line 2358
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@spanBackUT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN20@spanBackUT:
	DD	1
	DD	$LN19@spanBackUT
$LN19@spanBackUT:
	DD	-272					; fffffef0H
	DD	216					; 000000d8H
	DD	$LN17@spanBackUT
$LN17@spanBackUT:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0:
	lea	ecx, DWORD PTR _strSpan$38099[ebp]
	jmp	??1UnicodeSetStringSpan@icu_56@@QAE@XZ	; icu_56::UnicodeSetStringSpan::~UnicodeSetStringSpan
__ehhandler$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBackUTF8
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackArray<char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackArray<char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z PROC	; icu_56::MaybeStackArray<char,40>::operator[], COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z PROC	; icu_56::MaybeStackArray<char,40>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z ; icu_56::MaybeStackArray<char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherArray$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z PROC ; icu_56::MaybeStackArray<char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 353
	cmp	DWORD PTR _otherArray$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 354
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherArray$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 357
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z ENDP ; icu_56::MaybeStackArray<char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<char,40>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<char,40>::releaseArray
_TEXT	ENDS
PUBLIC	??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator==, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator=, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z ; icu_56::MaybeStackArray<char,40>::resize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z
_TEXT	SEGMENT
_p$42219 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z PROC ; icu_56::MaybeStackArray<char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$42219[ebp], eax
; Line 421
	cmp	DWORD PTR _p$42219[ebp], 0
	je	SHORT $LN5@resize
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$42219[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$42219[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize:
; Line 436
	mov	eax, DWORD PTR _p$42219[ebp]
	jmp	SHORT $LN7@resize
; Line 437
	jmp	SHORT $LN7@resize
$LN6@resize:
; Line 438
	xor	eax, eax
$LN7@resize:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z ENDP ; icu_56::MaybeStackArray<char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z ; icu_56::MaybeStackArray<char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z PROC ; icu_56::MaybeStackArray<char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 447
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN4@orphanOrCl
; Line 448
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
; Line 449
	jmp	SHORT $LN5@orphanOrCl
$LN4@orphanOrCl:
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN2@orphanOrCl
; Line 451
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN2@orphanOrCl:
; Line 453
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 457
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 458
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 460
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 462
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 464
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 466
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 467
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z ENDP ; icu_56::MaybeStackArray<char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z PROC		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeFilter@icu_56@@UAEPAXI@Z
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z ENDP		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
END

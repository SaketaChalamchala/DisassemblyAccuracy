; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucnv_set.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_ucnv_getUnicodeSet_56
EXTRN	_uset_clear_56:PROC
EXTRN	_uset_removeRange_56:PROC
EXTRN	_uset_remove_56:PROC
EXTRN	_uset_addString_56:PROC
EXTRN	_uset_addRange_56:PROC
EXTRN	_uset_add_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\ucnv_set.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ucnv_getUnicodeSet_56
_TEXT	SEGMENT
_sa$7683 = -28						; size = 24
_cnv$ = 8						; size = 4
_setFillIn$ = 12					; size = 4
_whichSet$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
_ucnv_getUnicodeSet_56 PROC				; COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 35
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN4@ucnv_getUn
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN5@ucnv_getUn
$LN4@ucnv_getUn:
; Line 36
	jmp	$LN6@ucnv_getUn
$LN5@ucnv_getUn:
; Line 38
	cmp	DWORD PTR _cnv$[ebp], 0
	je	SHORT $LN2@ucnv_getUn
	cmp	DWORD PTR _setFillIn$[ebp], 0
	je	SHORT $LN2@ucnv_getUn
	cmp	DWORD PTR _whichSet$[ebp], 0
	jl	SHORT $LN2@ucnv_getUn
	cmp	DWORD PTR _whichSet$[ebp], 2
	jl	SHORT $LN3@ucnv_getUn
$LN2@ucnv_getUn:
; Line 39
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 40
	jmp	$LN6@ucnv_getUn
$LN3@ucnv_getUn:
; Line 44
	mov	eax, DWORD PTR _cnv$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [edx+60], 0
	jne	SHORT $LN1@ucnv_getUn
; Line 45
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 46
	jmp	SHORT $LN6@ucnv_getUn
$LN1@ucnv_getUn:
; Line 51
	mov	DWORD PTR _sa$7683[ebp], 0
; Line 52
	mov	DWORD PTR _sa$7683[ebp+4], OFFSET _uset_add_56
; Line 53
	mov	DWORD PTR _sa$7683[ebp+8], OFFSET _uset_addRange_56
; Line 54
	mov	DWORD PTR _sa$7683[ebp+12], OFFSET _uset_addString_56
; Line 55
	mov	DWORD PTR _sa$7683[ebp+16], OFFSET _uset_remove_56
; Line 57
	mov	DWORD PTR _sa$7683[ebp+20], OFFSET _uset_removeRange_56
; Line 58
	mov	eax, DWORD PTR _setFillIn$[ebp]
	mov	DWORD PTR _sa$7683[ebp], eax
; Line 61
	mov	eax, DWORD PTR _setFillIn$[ebp]
	push	eax
	call	_uset_clear_56
	add	esp, 4
; Line 64
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _whichSet$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sa$7683[ebp]
	push	edx
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [eax+60]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@ucnv_getUn:
; Line 66
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ucnv_getUn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@ucnv_getUn:
	DD	1
	DD	$LN9@ucnv_getUn
$LN9@ucnv_getUn:
	DD	-28					; ffffffe4H
	DD	24					; 00000018H
	DD	$LN8@ucnv_getUn
$LN8@ucnv_getUn:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	0
_ucnv_getUnicodeSet_56 ENDP
_TEXT	ENDS
END

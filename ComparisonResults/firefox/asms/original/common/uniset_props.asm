; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\uniset_props.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?kMaxBranchLinearSubNodeLength@BytesTrie@icu_56@@0HB ; icu_56::BytesTrie::kMaxBranchLinearSubNodeLength
PUBLIC	?kMinLinearMatch@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kMinLinearMatch
PUBLIC	?kMaxLinearMatchLength@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMaxLinearMatchLength
PUBLIC	?kMinValueLead@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kMinValueLead
PUBLIC	?kValueIsFinal@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kValueIsFinal
PUBLIC	?kMinOneByteValueLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMinOneByteValueLead
PUBLIC	?kMaxOneByteValue@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kMaxOneByteValue
PUBLIC	?kMinTwoByteValueLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMinTwoByteValueLead
PUBLIC	?kMaxTwoByteValue@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kMaxTwoByteValue
PUBLIC	?kMinThreeByteValueLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMinThreeByteValueLead
PUBLIC	?kFourByteValueLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kFourByteValueLead
PUBLIC	?kMaxThreeByteValue@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMaxThreeByteValue
PUBLIC	?kFiveByteValueLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kFiveByteValueLead
PUBLIC	?kMaxOneByteDelta@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kMaxOneByteDelta
PUBLIC	?kMinTwoByteDeltaLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMinTwoByteDeltaLead
PUBLIC	?kMinThreeByteDeltaLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMinThreeByteDeltaLead
PUBLIC	?kFourByteDeltaLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kFourByteDeltaLead
PUBLIC	?kFiveByteDeltaLead@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kFiveByteDeltaLead
PUBLIC	?kMaxTwoByteDelta@BytesTrie@icu_56@@0HB		; icu_56::BytesTrie::kMaxTwoByteDelta
PUBLIC	?kMaxThreeByteDelta@BytesTrie@icu_56@@0HB	; icu_56::BytesTrie::kMaxThreeByteDelta
_BSS	SEGMENT
_uni32InitOnce DQ 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_POSIX_CLOSE DW	03aH
	DW	05dH
	DW	00H
	ORG $+2
_HYPHEN_RIGHT_BRACE DW 02dH
	DW	05dH
	DW	00H
	ORG $+2
_ANY	DB	'ANY', 00H
_ASCII	DB	'ASCII', 00H
	ORG $+2
_ASSIGNED DB	'Assigned', 00H
	ORG $+3
?none@?1??versionFilter@icu_56@@YACHPAX@Z@4QBEB DB 00H	; `icu_56::versionFilter'::`2'::none
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ?kMaxThreeByteDelta@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxThreeByteDelta@BytesTrie@icu_56@@0HB DD 0dffffH	; icu_56::BytesTrie::kMaxThreeByteDelta
CONST	ENDS
;	COMDAT ?kMaxTwoByteDelta@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxTwoByteDelta@BytesTrie@icu_56@@0HB DD 02fffH	; icu_56::BytesTrie::kMaxTwoByteDelta
CONST	ENDS
;	COMDAT ?kFiveByteDeltaLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kFiveByteDeltaLead@BytesTrie@icu_56@@0HB DD 0ffH	; icu_56::BytesTrie::kFiveByteDeltaLead
CONST	ENDS
;	COMDAT ?kFourByteDeltaLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kFourByteDeltaLead@BytesTrie@icu_56@@0HB DD 0feH	; icu_56::BytesTrie::kFourByteDeltaLead
CONST	ENDS
;	COMDAT ?kMinThreeByteDeltaLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinThreeByteDeltaLead@BytesTrie@icu_56@@0HB DD 0f0H	; icu_56::BytesTrie::kMinThreeByteDeltaLead
CONST	ENDS
;	COMDAT ?kMinTwoByteDeltaLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinTwoByteDeltaLead@BytesTrie@icu_56@@0HB DD 0c0H	; icu_56::BytesTrie::kMinTwoByteDeltaLead
CONST	ENDS
;	COMDAT ?kMaxOneByteDelta@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxOneByteDelta@BytesTrie@icu_56@@0HB DD 0bfH		; icu_56::BytesTrie::kMaxOneByteDelta
CONST	ENDS
;	COMDAT ?kFiveByteValueLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kFiveByteValueLead@BytesTrie@icu_56@@0HB DD 07fH	; icu_56::BytesTrie::kFiveByteValueLead
CONST	ENDS
;	COMDAT ?kMaxThreeByteValue@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxThreeByteValue@BytesTrie@icu_56@@0HB DD 011ffffH	; icu_56::BytesTrie::kMaxThreeByteValue
CONST	ENDS
;	COMDAT ?kFourByteValueLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kFourByteValueLead@BytesTrie@icu_56@@0HB DD 07eH	; icu_56::BytesTrie::kFourByteValueLead
CONST	ENDS
;	COMDAT ?kMinThreeByteValueLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinThreeByteValueLead@BytesTrie@icu_56@@0HB DD 06cH	; icu_56::BytesTrie::kMinThreeByteValueLead
CONST	ENDS
;	COMDAT ?kMaxTwoByteValue@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxTwoByteValue@BytesTrie@icu_56@@0HB DD 01affH	; icu_56::BytesTrie::kMaxTwoByteValue
CONST	ENDS
;	COMDAT ?kMinTwoByteValueLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinTwoByteValueLead@BytesTrie@icu_56@@0HB DD 051H	; icu_56::BytesTrie::kMinTwoByteValueLead
CONST	ENDS
;	COMDAT ?kMaxOneByteValue@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxOneByteValue@BytesTrie@icu_56@@0HB DD 040H		; icu_56::BytesTrie::kMaxOneByteValue
CONST	ENDS
;	COMDAT ?kMinOneByteValueLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinOneByteValueLead@BytesTrie@icu_56@@0HB DD 010H	; icu_56::BytesTrie::kMinOneByteValueLead
CONST	ENDS
;	COMDAT ?kValueIsFinal@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kValueIsFinal@BytesTrie@icu_56@@0HB DD 01H		; icu_56::BytesTrie::kValueIsFinal
CONST	ENDS
;	COMDAT ?kMinValueLead@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinValueLead@BytesTrie@icu_56@@0HB DD 020H		; icu_56::BytesTrie::kMinValueLead
CONST	ENDS
;	COMDAT ?kMaxLinearMatchLength@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxLinearMatchLength@BytesTrie@icu_56@@0HB DD 010H	; icu_56::BytesTrie::kMaxLinearMatchLength
CONST	ENDS
;	COMDAT ?kMinLinearMatch@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMinLinearMatch@BytesTrie@icu_56@@0HB DD 010H		; icu_56::BytesTrie::kMinLinearMatch
CONST	ENDS
;	COMDAT ?kMaxBranchLinearSubNodeLength@BytesTrie@icu_56@@0HB
CONST	SEGMENT
?kMaxBranchLinearSubNodeLength@BytesTrie@icu_56@@0HB DD 05H ; icu_56::BytesTrie::kMaxBranchLinearSubNodeLength
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`vftable'
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@XZ		; icu_56::UnicodeFunctor::UnicodeFunctor
PUBLIC	??_R4UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFunctor::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFunctor@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeFunctor@icu_56@@6B@ DD 00H			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFunctor@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeFunctor@icu_56@@6B@ DD FLAT:??_R4UnicodeFunctor@icu_56@@6B@ ; icu_56::UnicodeFunctor::`vftable'
	DD	FLAT:??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFunctor@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFunctor::UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFunctor::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeFunctor::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeFunctor::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`scalar deleting destructor'
EXTRN	??1UnicodeFunctor@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFunctor::~UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`vftable'
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@XZ		; icu_56::UnicodeMatcher::UnicodeMatcher
PUBLIC	??_R4UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeMatcher@icu_56@@6B@ DD 00H			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeMatcher@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeMatcher@icu_56@@6B@ DD FLAT:??_R4UnicodeMatcher@icu_56@@6B@ ; icu_56::UnicodeMatcher::`vftable'
	DD	FLAT:??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@XZ PROC			; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeMatcher@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeMatcher::UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`scalar deleting destructor'
EXTRN	??1UnicodeMatcher@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeMatcher::~UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??0UnicodeFilter@icu_56@@QAE@XZ			; icu_56::UnicodeFilter::UnicodeFilter
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_EUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`vector deleting destructor'
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeFilter@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeFilter::matches
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFilter@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFilter@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFilter::UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UnicodeFil
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@UnicodeFil
$LN3@UnicodeFil:
	mov	DWORD PTR tv90[ebp], 0
$LN4@UnicodeFil:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFilter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeFilter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@operator
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv84[ebp], 0
$LN4@operator:
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeFilter::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`scalar deleting destructor'
EXTRN	??1UnicodeFilter@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFilter::~UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeFilter@icu_56@@UAE@XZ	; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33395 = -32					; size = 4
_len$33394 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator@2
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator@2
; Line 3858
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33394[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33395[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator@2
	mov	ecx, DWORD PTR _len$33394[ebp]
	cmp	ecx, DWORD PTR _textLength$33395[ebp]
	jne	SHORT $LN5@operator@2
	mov	edx, DWORD PTR _len$33394[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator@2
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator@2
$LN5@operator@2:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator@2:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator@2:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T82521 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T82521[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T82521[ebp]
	or	eax, 1
	mov	DWORD PTR $T82521[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??_GUnicodeSet@icu_56@@UAEPAXI@Z		; icu_56::UnicodeSet::`scalar deleting destructor'
EXTRN	??1UnicodeSet@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeSet::~UnicodeSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeSet@icu_56@@UAEPAXI@Z		; icu_56::UnicodeSet::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeSet@icu_56@@UAE@XZ		; icu_56::UnicodeSet::~UnicodeSet
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9UnicodeSet@icu_56@@QBECABV01@@Z		; icu_56::UnicodeSet::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeSet@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_o$ = 8							; size = 4
??9UnicodeSet@icu_56@@QBECABV01@@Z PROC			; icu_56::UnicodeSet::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\uniset.h
; Line 1651
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1652
	mov	esi, esp
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeSet@icu_56@@QBECABV01@@Z ENDP			; icu_56::UnicodeSet::operator!=
_TEXT	ENDS
PUBLIC	?isFrozen@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isFrozen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFrozen@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
?isFrozen@UnicodeSet@icu_56@@QBECXZ PROC		; icu_56::UnicodeSet::isFrozen, COMDAT
; _this$ = ecx
; Line 1655
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@isFrozen
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jne	SHORT $LN3@isFrozen
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN4@isFrozen
$LN3@isFrozen:
	mov	BYTE PTR tv68[ebp], 1
$LN4@isFrozen:
	mov	al, BYTE PTR tv68[ebp]
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFrozen@UnicodeSet@icu_56@@QBECXZ ENDP		; icu_56::UnicodeSet::isFrozen
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECHH@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECHH@Z:PROC	; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?containsSome@UnicodeSet@icu_56@@QBECHH@Z PROC		; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1660
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECHH@Z ; icu_56::UnicodeSet::containsNone
	movsx	edx, al
	test	edx, edx
	sete	al
; Line 1661
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?containsSome@UnicodeSet@icu_56@@QBECHH@Z ENDP		; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1664
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1667
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1668
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1669
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeSet@icu_56@@QBECXZ PROC			; icu_56::UnicodeSet::isBogus, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1672
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+48]
	and	eax, 1
; Line 1673
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeSet@icu_56@@QBECXZ ENDP			; icu_56::UnicodeSet::isBogus
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1675
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1676
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1677
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1679
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1680
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1681
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1683
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1684
	mov	eax, DWORD PTR _this$[ebp]
; Line 1685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1688
	mov	eax, DWORD PTR _this$[ebp]
; Line 1689
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
EXTRN	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::span
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::span, COMDAT
; _this$ = ecx
; Line 1691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1692
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1693
	cmp	DWORD PTR _start$[ebp], 0
	jge	SHORT $LN3@span
; Line 1694
	mov	DWORD PTR _start$[ebp], 0
	jmp	SHORT $LN2@span
$LN3@span:
; Line 1695
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@span
; Line 1696
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN2@span:
; Line 1698
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	edx, DWORD PTR _start$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	add	eax, DWORD PTR _start$[ebp]
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::span
_TEXT	ENDS
PUBLIC	?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
EXTRN	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::spanBack
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_limit$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBack, COMDAT
; _this$ = ecx
; Line 1701
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1702
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1703
	cmp	DWORD PTR _limit$[ebp], 0
	jge	SHORT $LN3@spanBack
; Line 1704
	mov	DWORD PTR _limit$[ebp], 0
	jmp	SHORT $LN2@spanBack
$LN3@spanBack:
; Line 1705
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@spanBack
; Line 1706
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN2@spanBack:
; Line 1708
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
; Line 1709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBack
_TEXT	ENDS
PUBLIC	??_7ParsePosition@icu_56@@6B@			; icu_56::ParsePosition::`vftable'
PUBLIC	??0ParsePosition@icu_56@@QAE@XZ			; icu_56::ParsePosition::ParsePosition
PUBLIC	??_R4ParsePosition@icu_56@@6B@			; icu_56::ParsePosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParsePosition@icu_56@@@8		; icu_56::ParsePosition `RTTI Type Descriptor'
PUBLIC	??_R3ParsePosition@icu_56@@8			; icu_56::ParsePosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParsePosition@icu_56@@8			; icu_56::ParsePosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParsePosition@icu_56@@8		; icu_56::ParsePosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EParsePosition@icu_56@@UAEPAXI@Z		; icu_56::ParsePosition::`vector deleting destructor'
EXTRN	?getDynamicClassID@ParsePosition@icu_56@@UBEPAXXZ:PROC ; icu_56::ParsePosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@ParsePosition@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\parsepos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ParsePosition@icu_56@@8 DD FLAT:??_R0?AVParsePosition@icu_56@@@8 ; icu_56::ParsePosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParsePosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ParsePosition@icu_56@@8
rdata$r	SEGMENT
??_R2ParsePosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ParsePosition@icu_56@@8 ; icu_56::ParsePosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ParsePosition@icu_56@@8
rdata$r	SEGMENT
??_R3ParsePosition@icu_56@@8 DD 00H			; icu_56::ParsePosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ParsePosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParsePosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVParsePosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ParsePosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParsePosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParsePosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4ParsePosition@icu_56@@6B@ DD 00H			; icu_56::ParsePosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParsePosition@icu_56@@@8
	DD	FLAT:??_R3ParsePosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ParsePosition@icu_56@@6B@
CONST	SEGMENT
??_7ParsePosition@icu_56@@6B@ DD FLAT:??_R4ParsePosition@icu_56@@6B@ ; icu_56::ParsePosition::`vftable'
	DD	FLAT:??_EParsePosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@ParsePosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ParsePosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ParsePosition@icu_56@@QAE@XZ PROC			; icu_56::ParsePosition::ParsePosition, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParsePosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ParsePosition@icu_56@@QAE@XZ ENDP			; icu_56::ParsePosition::ParsePosition
_TEXT	ENDS
PUBLIC	??0ParsePosition@icu_56@@QAE@H@Z		; icu_56::ParsePosition::ParsePosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ParsePosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newIndex$ = 8						; size = 4
??0ParsePosition@icu_56@@QAE@H@Z PROC			; icu_56::ParsePosition::ParsePosition, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParsePosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newIndex$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParsePosition@icu_56@@QAE@H@Z ENDP			; icu_56::ParsePosition::ParsePosition
_TEXT	ENDS
PUBLIC	??0ParsePosition@icu_56@@QAE@ABV01@@Z		; icu_56::ParsePosition::ParsePosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ParsePosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0ParsePosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::ParsePosition::ParsePosition, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParsePosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParsePosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::ParsePosition::ParsePosition
_TEXT	ENDS
PUBLIC	??_GParsePosition@icu_56@@UAEPAXI@Z		; icu_56::ParsePosition::`scalar deleting destructor'
EXTRN	??1ParsePosition@icu_56@@UAE@XZ:PROC		; icu_56::ParsePosition::~ParsePosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GParsePosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GParsePosition@icu_56@@UAEPAXI@Z PROC		; icu_56::ParsePosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GParsePosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::ParsePosition::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EParsePosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EParsePosition@icu_56@@UAEPAXI@Z PROC		; icu_56::ParsePosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1ParsePosition@icu_56@@UAE@XZ	; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EParsePosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::ParsePosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::ParsePosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::ParsePosition::operator=, COMDAT
; _this$ = ecx
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::ParsePosition::operator=
_TEXT	ENDS
PUBLIC	??8ParsePosition@icu_56@@QBECABV01@@Z		; icu_56::ParsePosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8ParsePosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8ParsePosition@icu_56@@QBECABV01@@Z PROC		; icu_56::ParsePosition::operator==, COMDAT
; _this$ = ecx
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN2@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN3@operator@3
$LN2@operator@3:
; Line 194
	xor	al, al
	jmp	SHORT $LN4@operator@3
; Line 195
	jmp	SHORT $LN4@operator@3
$LN3@operator@3:
; Line 196
	mov	al, 1
$LN4@operator@3:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8ParsePosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::ParsePosition::operator==
_TEXT	ENDS
PUBLIC	??9ParsePosition@icu_56@@QBECABV01@@Z		; icu_56::ParsePosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9ParsePosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9ParsePosition@icu_56@@QBECABV01@@Z PROC		; icu_56::ParsePosition::operator!=, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8ParsePosition@icu_56@@QBECABV01@@Z	; icu_56::ParsePosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9ParsePosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::ParsePosition::operator!=
_TEXT	ENDS
PUBLIC	?getIndex@ParsePosition@icu_56@@QBEHXZ		; icu_56::ParsePosition::getIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIndex@ParsePosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIndex@ParsePosition@icu_56@@QBEHXZ PROC		; icu_56::ParsePosition::getIndex, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIndex@ParsePosition@icu_56@@QBEHXZ ENDP		; icu_56::ParsePosition::getIndex
_TEXT	ENDS
PUBLIC	?setIndex@ParsePosition@icu_56@@QAEXH@Z		; icu_56::ParsePosition::setIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setIndex@ParsePosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?setIndex@ParsePosition@icu_56@@QAEXH@Z PROC		; icu_56::ParsePosition::setIndex, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 215
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setIndex@ParsePosition@icu_56@@QAEXH@Z ENDP		; icu_56::ParsePosition::setIndex
_TEXT	ENDS
PUBLIC	?getErrorIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getErrorIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getErrorIndex@ParsePosition@icu_56@@QBEHXZ PROC	; icu_56::ParsePosition::getErrorIndex, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getErrorIndex@ParsePosition@icu_56@@QBEHXZ ENDP	; icu_56::ParsePosition::getErrorIndex
_TEXT	ENDS
PUBLIC	?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z	; icu_56::ParsePosition::setErrorIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z PROC	; icu_56::ParsePosition::setErrorIndex, COMDAT
; _this$ = ecx
; Line 225
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 227
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z ENDP	; icu_56::ParsePosition::setErrorIndex
_TEXT	ENDS
PUBLIC	??_7SymbolTable@icu_56@@6B@			; icu_56::SymbolTable::`vftable'
PUBLIC	??0SymbolTable@icu_56@@QAE@XZ			; icu_56::SymbolTable::SymbolTable
PUBLIC	??_R4SymbolTable@icu_56@@6B@			; icu_56::SymbolTable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSymbolTable@icu_56@@@8			; icu_56::SymbolTable `RTTI Type Descriptor'
PUBLIC	??_R3SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SymbolTable@icu_56@@8		; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESymbolTable@icu_56@@UAEPAXI@Z		; icu_56::SymbolTable::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SymbolTable@icu_56@@8 DD FLAT:??_R0?AVSymbolTable@icu_56@@@8 ; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R2SymbolTable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SymbolTable@icu_56@@8 ; icu_56::SymbolTable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R3SymbolTable@icu_56@@8 DD 00H			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSymbolTable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSymbolTable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SymbolTable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSymbolTable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SymbolTable@icu_56@@6B@
rdata$r	SEGMENT
??_R4SymbolTable@icu_56@@6B@ DD 00H			; icu_56::SymbolTable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSymbolTable@icu_56@@@8
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SymbolTable@icu_56@@6B@
CONST	SEGMENT
??_7SymbolTable@icu_56@@6B@ DD FLAT:??_R4SymbolTable@icu_56@@6B@ ; icu_56::SymbolTable::`vftable'
	DD	FLAT:??_ESymbolTable@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0SymbolTable@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SymbolTable@icu_56@@QAE@XZ PROC			; icu_56::SymbolTable::SymbolTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0SymbolTable@icu_56@@QAE@XZ ENDP			; icu_56::SymbolTable::SymbolTable
_TEXT	ENDS
PUBLIC	??0SymbolTable@icu_56@@QAE@ABV01@@Z		; icu_56::SymbolTable::SymbolTable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SymbolTable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0SymbolTable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::SymbolTable::SymbolTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0SymbolTable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::SymbolTable::SymbolTable
_TEXT	ENDS
PUBLIC	??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::SymbolTable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::SymbolTable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::SymbolTable::operator=
_TEXT	ENDS
PUBLIC	??_GSymbolTable@icu_56@@UAEPAXI@Z		; icu_56::SymbolTable::`scalar deleting destructor'
EXTRN	??1SymbolTable@icu_56@@UAE@XZ:PROC		; icu_56::SymbolTable::~SymbolTable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSymbolTable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSymbolTable@icu_56@@UAEPAXI@Z PROC			; icu_56::SymbolTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SymbolTable@icu_56@@UAE@XZ		; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSymbolTable@icu_56@@UAEPAXI@Z ENDP			; icu_56::SymbolTable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESymbolTable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESymbolTable@icu_56@@UAEPAXI@Z PROC			; icu_56::SymbolTable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@10
	push	OFFSET ??1SymbolTable@icu_56@@UAE@XZ	; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@10
$LN3@vector@10:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SymbolTable@icu_56@@UAE@XZ		; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@10:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESymbolTable@icu_56@@UAEPAXI@Z ENDP			; icu_56::SymbolTable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`vftable'
PUBLIC	??0StringEnumeration@icu_56@@QAE@ABV01@@Z	; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??_R4StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`vector deleting destructor'
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringEnumeration@icu_56@@6B@ DD 00H		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringEnumeration@icu_56@@@8
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7StringEnumeration@icu_56@@6B@ DD FLAT:??_R4StringEnumeration@icu_56@@6B@ ; icu_56::StringEnumeration::`vftable'
	DD	FLAT:??_EStringEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0StringEnumeration@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringEnumeration::StringEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringEnumeration@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringEnumeration::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$36078 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::StringEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
	mov	DWORD PTR _$S1$36078[ebp], 0
	jmp	SHORT $LN3@operator@4
$LN2@operator@4:
	mov	eax, DWORD PTR _$S1$36078[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$36078[ebp], eax
$LN3@operator@4:
	cmp	DWORD PTR _$S1$36078[ebp], 32		; 00000020H
	jae	SHORT $LN1@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$36078[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$36078[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
	jmp	SHORT $LN2@operator@4
$LN1@operator@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::StringEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`scalar deleting destructor'
EXTRN	??1StringEnumeration@icu_56@@UAE@XZ:PROC	; icu_56::StringEnumeration::~StringEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@11
	push	OFFSET ??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	108					; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@11
$LN3@vector@11:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@11:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9Locale@icu_56@@QBECABV01@@Z			; icu_56::Locale::operator!=
EXTRN	??8Locale@icu_56@@QBECABV01@@Z:PROC		; icu_56::Locale::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Locale@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Locale@icu_56@@QBECABV01@@Z PROC			; icu_56::Locale::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\locid.h
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 772
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Locale@icu_56@@QBECABV01@@Z		; icu_56::Locale::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 773
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Locale@icu_56@@QBECABV01@@Z ENDP			; icu_56::Locale::operator!=
_TEXT	ENDS
PUBLIC	?getCountry@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getCountry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCountry@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCountry@Locale@icu_56@@QBEPBDXZ PROC		; icu_56::Locale::getCountry, COMDAT
; _this$ = ecx
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 778
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 22					; 00000016H
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCountry@Locale@icu_56@@QBEPBDXZ ENDP		; icu_56::Locale::getCountry
_TEXT	ENDS
PUBLIC	?getLanguage@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getLanguage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLanguage@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLanguage@Locale@icu_56@@QBEPBDXZ PROC		; icu_56::Locale::getLanguage, COMDAT
; _this$ = ecx
; Line 783
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLanguage@Locale@icu_56@@QBEPBDXZ ENDP		; icu_56::Locale::getLanguage
_TEXT	ENDS
PUBLIC	?getScript@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getScript
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getScript@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getScript@Locale@icu_56@@QBEPBDXZ PROC			; icu_56::Locale::getScript, COMDAT
; _this$ = ecx
; Line 789
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 790
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getScript@Locale@icu_56@@QBEPBDXZ ENDP			; icu_56::Locale::getScript
_TEXT	ENDS
PUBLIC	?getVariant@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getVariant
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getVariant@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getVariant@Locale@icu_56@@QBEPBDXZ PROC		; icu_56::Locale::getVariant, COMDAT
; _this$ = ecx
; Line 795
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 796
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
; Line 797
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getVariant@Locale@icu_56@@QBEPBDXZ ENDP		; icu_56::Locale::getVariant
_TEXT	ENDS
PUBLIC	?getName@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@Locale@icu_56@@QBEPBDXZ PROC			; icu_56::Locale::getName, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
; Line 803
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@Locale@icu_56@@QBEPBDXZ ENDP			; icu_56::Locale::getName
_TEXT	ENDS
PUBLIC	?isBogus@Locale@icu_56@@QBECXZ			; icu_56::Locale::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@Locale@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@Locale@icu_56@@QBECXZ PROC			; icu_56::Locale::isBogus, COMDAT
; _this$ = ecx
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+200]
; Line 808
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@Locale@icu_56@@QBECXZ ENDP			; icu_56::Locale::isBogus
_TEXT	ENDS
PUBLIC	??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::ForwardCharacterIterator::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z PROC ; icu_56::ForwardCharacterIterator::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\chariter.h
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z ENDP ; icu_56::ForwardCharacterIterator::operator=
_TEXT	ENDS
PUBLIC	??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z ; icu_56::ForwardCharacterIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::ForwardCharacterIterator::operator!=, COMDAT
; _this$ = ecx
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 688
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 689
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::ForwardCharacterIterator::operator!=
_TEXT	ENDS
PUBLIC	?setToStart@CharacterIterator@icu_56@@QAEHXZ	; icu_56::CharacterIterator::setToStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToStart@CharacterIterator@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToStart@CharacterIterator@icu_56@@QAEHXZ PROC	; icu_56::CharacterIterator::setToStart, COMDAT
; _this$ = ecx
; Line 692
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 693
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 694
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToStart@CharacterIterator@icu_56@@QAEHXZ ENDP	; icu_56::CharacterIterator::setToStart
_TEXT	ENDS
PUBLIC	?setToEnd@CharacterIterator@icu_56@@QAEHXZ	; icu_56::CharacterIterator::setToEnd
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEnd@CharacterIterator@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEnd@CharacterIterator@icu_56@@QAEHXZ PROC		; icu_56::CharacterIterator::setToEnd, COMDAT
; _this$ = ecx
; Line 697
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 698
	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEnd@CharacterIterator@icu_56@@QAEHXZ ENDP		; icu_56::CharacterIterator::setToEnd
_TEXT	ENDS
PUBLIC	?startIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::startIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?startIndex@CharacterIterator@icu_56@@QBEHXZ PROC	; icu_56::CharacterIterator::startIndex, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 703
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 704
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?startIndex@CharacterIterator@icu_56@@QBEHXZ ENDP	; icu_56::CharacterIterator::startIndex
_TEXT	ENDS
PUBLIC	?endIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::endIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?endIndex@CharacterIterator@icu_56@@QBEHXZ PROC		; icu_56::CharacterIterator::endIndex, COMDAT
; _this$ = ecx
; Line 707
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 708
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 709
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?endIndex@CharacterIterator@icu_56@@QBEHXZ ENDP		; icu_56::CharacterIterator::endIndex
_TEXT	ENDS
PUBLIC	?getIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::getIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIndex@CharacterIterator@icu_56@@QBEHXZ PROC		; icu_56::CharacterIterator::getIndex, COMDAT
; _this$ = ecx
; Line 712
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 713
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 714
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIndex@CharacterIterator@icu_56@@QBEHXZ ENDP		; icu_56::CharacterIterator::getIndex
_TEXT	ENDS
PUBLIC	?getLength@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::getLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLength@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLength@CharacterIterator@icu_56@@QBEHXZ PROC	; icu_56::CharacterIterator::getLength, COMDAT
; _this$ = ecx
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 718
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 719
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLength@CharacterIterator@icu_56@@QBEHXZ ENDP	; icu_56::CharacterIterator::getLength
_TEXT	ENDS
PUBLIC	??9BreakIterator@icu_56@@QBECABV01@@Z		; icu_56::BreakIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9BreakIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9BreakIterator@icu_56@@QBECABV01@@Z PROC		; icu_56::BreakIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\brkiter.h
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9BreakIterator@icu_56@@QBECABV01@@Z ENDP		; icu_56::BreakIterator::operator!=
_TEXT	ENDS
PUBLIC	??_7BreakIterator@icu_56@@6B@			; icu_56::BreakIterator::`vftable'
PUBLIC	??0BreakIterator@icu_56@@IAE@ABV01@@Z		; icu_56::BreakIterator::BreakIterator
PUBLIC	??_R4BreakIterator@icu_56@@6B@			; icu_56::BreakIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBreakIterator@icu_56@@@8		; icu_56::BreakIterator `RTTI Type Descriptor'
PUBLIC	??_R3BreakIterator@icu_56@@8			; icu_56::BreakIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BreakIterator@icu_56@@8			; icu_56::BreakIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BreakIterator@icu_56@@8		; icu_56::BreakIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EBreakIterator@icu_56@@UAEPAXI@Z		; icu_56::BreakIterator::`vector deleting destructor'
EXTRN	?getRuleStatus@BreakIterator@icu_56@@UBEHXZ:PROC ; icu_56::BreakIterator::getRuleStatus
EXTRN	?getRuleStatusVec@BreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z:PROC ; icu_56::BreakIterator::getRuleStatusVec
;	COMDAT ??_R1A@?0A@EA@BreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BreakIterator@icu_56@@8 DD FLAT:??_R0?AVBreakIterator@icu_56@@@8 ; icu_56::BreakIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R2BreakIterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BreakIterator@icu_56@@8 ; icu_56::BreakIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R3BreakIterator@icu_56@@8 DD 00H			; icu_56::BreakIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2BreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBreakIterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBreakIterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BreakIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBreakIterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4BreakIterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4BreakIterator@icu_56@@6B@ DD 00H			; icu_56::BreakIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBreakIterator@icu_56@@@8
	DD	FLAT:??_R3BreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7BreakIterator@icu_56@@6B@
CONST	SEGMENT
??_7BreakIterator@icu_56@@6B@ DD FLAT:??_R4BreakIterator@icu_56@@6B@ ; icu_56::BreakIterator::`vftable'
	DD	FLAT:??_EBreakIterator@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getRuleStatus@BreakIterator@icu_56@@UBEHXZ
	DD	FLAT:?getRuleStatusVec@BreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0BreakIterator@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0BreakIterator@icu_56@@IAE@ABV01@@Z PROC		; icu_56::BreakIterator::BreakIterator, COMDAT
; _this$ = ecx
; Line 625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BreakIterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0BreakIterator@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::BreakIterator::BreakIterator
_TEXT	ENDS
PUBLIC	??_GBreakIterator@icu_56@@UAEPAXI@Z		; icu_56::BreakIterator::`scalar deleting destructor'
EXTRN	??1BreakIterator@icu_56@@UAE@XZ:PROC		; icu_56::BreakIterator::~BreakIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBreakIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GBreakIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::BreakIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBreakIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::BreakIterator::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EBreakIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EBreakIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::BreakIterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@12
	push	OFFSET ??1BreakIterator@icu_56@@UAE@XZ	; icu_56::BreakIterator::~BreakIterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	320					; 00000140H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@12
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@12:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@12
$LN3@vector@12:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@12
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@12:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@12:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EBreakIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::BreakIterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isBufferClone@BreakIterator@icu_56@@QAECXZ	; icu_56::BreakIterator::isBufferClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferClone@BreakIterator@icu_56@@QAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBufferClone@BreakIterator@icu_56@@QAECXZ PROC	; icu_56::BreakIterator::isBufferClone, COMDAT
; _this$ = ecx
; Line 644
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 645
	xor	al, al
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferClone@BreakIterator@icu_56@@QAECXZ ENDP	; icu_56::BreakIterator::isBufferClone
_TEXT	ENDS
PUBLIC	??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::ICU_Utility::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::ICU_Utility::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::ICU_Utility::operator=
_TEXT	ENDS
PUBLIC	?size@UVector@icu_56@@QBEHXZ			; icu_56::UVector::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@UVector@icu_56@@QBEHXZ PROC			; icu_56::UVector::size, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvector.h
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 353
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UVector@icu_56@@QBEHXZ ENDP			; icu_56::UVector::size
_TEXT	ENDS
PUBLIC	?isEmpty@UVector@icu_56@@QBECXZ			; icu_56::UVector::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UVector@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UVector@icu_56@@QBECXZ PROC			; icu_56::UVector::isEmpty, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UVector@icu_56@@QBECXZ ENDP			; icu_56::UVector::isEmpty
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECPAX@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHPAXH@Z:PROC	; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECPAX@Z PROC		; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHPAXH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECPAX@Z ENDP		; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECH@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHHH@Z:PROC		; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECH@Z PROC			; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 364
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHHH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECH@Z ENDP			; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?firstElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::firstElement
EXTRN	?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC	; icu_56::UVector::elementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?firstElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?firstElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::firstElement, COMDAT
; _this$ = ecx
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?firstElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::firstElement
_TEXT	ENDS
PUBLIC	?lastElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::lastElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::lastElement, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::lastElement
_TEXT	ENDS
PUBLIC	?lastElementi@UVector@icu_56@@QBEHXZ		; icu_56::UVector::lastElementi
EXTRN	?elementAti@UVector@icu_56@@QBEHH@Z:PROC	; icu_56::UVector::elementAti
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElementi@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElementi@UVector@icu_56@@QBEHXZ PROC		; icu_56::UVector::lastElementi, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
; Line 377
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElementi@UVector@icu_56@@QBEHXZ ENDP		; icu_56::UVector::lastElementi
_TEXT	ENDS
PUBLIC	??AUVector@icu_56@@QBEPAXH@Z			; icu_56::UVector::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUVector@icu_56@@QBEPAXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AUVector@icu_56@@QBEPAXH@Z PROC			; icu_56::UVector::operator[], COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUVector@icu_56@@QBEPAXH@Z ENDP			; icu_56::UVector::operator[]
_TEXT	ENDS
PUBLIC	??9UVector@icu_56@@QAECABV01@@Z			; icu_56::UVector::operator!=
EXTRN	??8UVector@icu_56@@QAECABV01@@Z:PROC		; icu_56::UVector::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UVector@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9UVector@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector::operator!=, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 384
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UVector@icu_56@@QAECABV01@@Z		; icu_56::UVector::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UVector@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector::operator!=
_TEXT	ENDS
PUBLIC	?empty@UStack@icu_56@@QBECXZ			; icu_56::UStack::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@UStack@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@UStack@icu_56@@QBECXZ PROC			; icu_56::UStack::empty, COMDAT
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@UStack@icu_56@@QBECXZ ENDP			; icu_56::UStack::empty
_TEXT	ENDS
PUBLIC	?peek@UStack@icu_56@@QBEPAXXZ			; icu_56::UStack::peek
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peek@UStack@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peek@UStack@icu_56@@QBEPAXXZ PROC			; icu_56::UStack::peek, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElement@UVector@icu_56@@QBEPAXXZ	; icu_56::UVector::lastElement
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peek@UStack@icu_56@@QBEPAXXZ ENDP			; icu_56::UStack::peek
_TEXT	ENDS
PUBLIC	?peeki@UStack@icu_56@@QBEHXZ			; icu_56::UStack::peeki
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peeki@UStack@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peeki@UStack@icu_56@@QBEHXZ PROC			; icu_56::UStack::peeki, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElementi@UVector@icu_56@@QBEHXZ	; icu_56::UVector::lastElementi
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peeki@UStack@icu_56@@QBEHXZ ENDP			; icu_56::UStack::peeki
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 403
	mov	eax, DWORD PTR _obj$[ebp]
; Line 404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z	; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 408
	mov	eax, DWORD PTR _i$[ebp]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	??0BytesTrie@icu_56@@QAE@PBX@Z			; icu_56::BytesTrie::BytesTrie
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0BytesTrie@icu_56@@QAE@PBX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_trieBytes$ = 8						; size = 4
??0BytesTrie@icu_56@@QAE@PBX@Z PROC			; icu_56::BytesTrie::BytesTrie, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\bytestrie.h
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trieBytes$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0BytesTrie@icu_56@@QAE@PBX@Z ENDP			; icu_56::BytesTrie::BytesTrie
_TEXT	ENDS
PUBLIC	??0BytesTrie@icu_56@@QAE@ABV01@@Z		; icu_56::BytesTrie::BytesTrie
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0BytesTrie@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0BytesTrie@icu_56@@QAE@ABV01@@Z PROC			; icu_56::BytesTrie::BytesTrie, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0BytesTrie@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::BytesTrie::BytesTrie
_TEXT	ENDS
PUBLIC	?reset@BytesTrie@icu_56@@QAEAAV12@XZ		; icu_56::BytesTrie::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@BytesTrie@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@BytesTrie@icu_56@@QAEAAV12@XZ PROC		; icu_56::BytesTrie::reset, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@BytesTrie@icu_56@@QAEAAV12@XZ ENDP		; icu_56::BytesTrie::reset
_TEXT	ENDS
PUBLIC	?saveState@BytesTrie@icu_56@@QBEABV12@AAVState@12@@Z ; icu_56::BytesTrie::saveState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?saveState@BytesTrie@icu_56@@QBEABV12@AAVState@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
?saveState@BytesTrie@icu_56@@QBEABV12@AAVState@12@@Z PROC ; icu_56::BytesTrie::saveState, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 124
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
; Line 125
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?saveState@BytesTrie@icu_56@@QBEABV12@AAVState@12@@Z ENDP ; icu_56::BytesTrie::saveState
_TEXT	ENDS
PUBLIC	?resetToState@BytesTrie@icu_56@@QAEAAV12@ABVState@12@@Z ; icu_56::BytesTrie::resetToState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resetToState@BytesTrie@icu_56@@QAEAAV12@ABVState@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
?resetToState@BytesTrie@icu_56@@QAEAAV12@ABVState@12@@Z PROC ; icu_56::BytesTrie::resetToState, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN1@resetToSta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@resetToSta
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
$LN1@resetToSta:
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?resetToState@BytesTrie@icu_56@@QAEAAV12@ABVState@12@@Z ENDP ; icu_56::BytesTrie::resetToState
_TEXT	ENDS
PUBLIC	?first@BytesTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z ; icu_56::BytesTrie::first
EXTRN	?nextImpl@BytesTrie@icu_56@@AAE?AW4UStringTrieResult@@PBEH@Z:PROC ; icu_56::BytesTrie::nextImpl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?first@BytesTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_inByte$ = 8						; size = 4
?first@BytesTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z PROC ; icu_56::BytesTrie::first, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
; Line 165
	cmp	DWORD PTR _inByte$[ebp], 0
	jge	SHORT $LN1@first
; Line 166
	mov	eax, DWORD PTR _inByte$[ebp]
	add	eax, 256				; 00000100H
	mov	DWORD PTR _inByte$[ebp], eax
$LN1@first:
; Line 168
	mov	eax, DWORD PTR _inByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextImpl@BytesTrie@icu_56@@AAE?AW4UStringTrieResult@@PBEH@Z ; icu_56::BytesTrie::nextImpl
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?first@BytesTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z ENDP ; icu_56::BytesTrie::first
_TEXT	ENDS
PUBLIC	?getValue@BytesTrie@icu_56@@QBEHXZ		; icu_56::BytesTrie::getValue
EXTRN	?readValue@BytesTrie@icu_56@@CAHPBEH@Z:PROC	; icu_56::BytesTrie::readValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getValue@BytesTrie@icu_56@@QBEHXZ
_TEXT	SEGMENT
_leadByte$ = -32					; size = 4
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
?getValue@BytesTrie@icu_56@@QBEHXZ PROC			; icu_56::BytesTrie::getValue, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _pos$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _leadByte$[ebp], ecx
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	mov	DWORD PTR _pos$[ebp], edx
; Line 210
	mov	eax, DWORD PTR _leadByte$[ebp]
	sar	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	call	?readValue@BytesTrie@icu_56@@CAHPBEH@Z	; icu_56::BytesTrie::readValue
	add	esp, 8
; Line 211
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getValue@BytesTrie@icu_56@@QBEHXZ ENDP			; icu_56::BytesTrie::getValue
_TEXT	ENDS
PUBLIC	?hasUniqueValue@BytesTrie@icu_56@@QBECAAH@Z	; icu_56::BytesTrie::hasUniqueValue
EXTRN	?findUniqueValue@BytesTrie@icu_56@@CACPBECAAH@Z:PROC ; icu_56::BytesTrie::findUniqueValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasUniqueValue@BytesTrie@icu_56@@QBECAAH@Z
_TEXT	SEGMENT
tv75 = -217						; size = 1
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
_uniqueValue$ = 8					; size = 4
?hasUniqueValue@BytesTrie@icu_56@@QBECAAH@Z PROC	; icu_56::BytesTrie::hasUniqueValue, COMDAT
; _this$ = ecx
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 225
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN3@hasUniqueV
	mov	eax, DWORD PTR _uniqueValue$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _pos$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	push	ecx
	call	?findUniqueValue@BytesTrie@icu_56@@CACPBECAAH@Z ; icu_56::BytesTrie::findUniqueValue
	add	esp, 12					; 0000000cH
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@hasUniqueV
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@hasUniqueV
$LN3@hasUniqueV:
	mov	BYTE PTR tv75[ebp], 0
$LN4@hasUniqueV:
	mov	al, BYTE PTR tv75[ebp]
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasUniqueValue@BytesTrie@icu_56@@QBECAAH@Z ENDP	; icu_56::BytesTrie::hasUniqueValue
_TEXT	ENDS
PUBLIC	?getString@Iterator@BytesTrie@icu_56@@QBEABVStringPiece@3@XZ ; icu_56::BytesTrie::Iterator::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Iterator@BytesTrie@icu_56@@QBEABVStringPiece@3@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Iterator@BytesTrie@icu_56@@QBEABVStringPiece@3@XZ PROC ; icu_56::BytesTrie::Iterator::getString, COMDAT
; _this$ = ecx
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Iterator@BytesTrie@icu_56@@QBEABVStringPiece@3@XZ ENDP ; icu_56::BytesTrie::Iterator::getString
_TEXT	ENDS
PUBLIC	?getValue@Iterator@BytesTrie@icu_56@@QBEHXZ	; icu_56::BytesTrie::Iterator::getValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getValue@Iterator@BytesTrie@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getValue@Iterator@BytesTrie@icu_56@@QBEHXZ PROC	; icu_56::BytesTrie::Iterator::getValue, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getValue@Iterator@BytesTrie@icu_56@@QBEHXZ ENDP	; icu_56::BytesTrie::Iterator::getValue
_TEXT	ENDS
PUBLIC	??0BytesTrie@icu_56@@AAE@PAXPBX@Z		; icu_56::BytesTrie::BytesTrie
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0BytesTrie@icu_56@@AAE@PAXPBX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_adoptBytes$ = 8					; size = 4
_trieBytes$ = 12					; size = 4
??0BytesTrie@icu_56@@AAE@PAXPBX@Z PROC			; icu_56::BytesTrie::BytesTrie, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptBytes$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trieBytes$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0BytesTrie@icu_56@@AAE@PAXPBX@Z ENDP			; icu_56::BytesTrie::BytesTrie
_TEXT	ENDS
PUBLIC	?stop@BytesTrie@icu_56@@AAEXXZ			; icu_56::BytesTrie::stop
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stop@BytesTrie@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?stop@BytesTrie@icu_56@@AAEXXZ PROC			; icu_56::BytesTrie::stop, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?stop@BytesTrie@icu_56@@AAEXXZ ENDP			; icu_56::BytesTrie::stop
_TEXT	ENDS
PUBLIC	?skipValue@BytesTrie@icu_56@@CAPBEPBEH@Z	; icu_56::BytesTrie::skipValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipValue@BytesTrie@icu_56@@CAPBEPBEH@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 4
_leadByte$ = 12						; size = 4
?skipValue@BytesTrie@icu_56@@CAPBEPBEH@Z PROC		; icu_56::BytesTrie::skipValue, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 368
	cmp	DWORD PTR _leadByte$[ebp], 162		; 000000a2H
	jl	SHORT $LN5@skipValue
; Line 369
	cmp	DWORD PTR _leadByte$[ebp], 216		; 000000d8H
	jge	SHORT $LN4@skipValue
; Line 370
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN5@skipValue
$LN4@skipValue:
; Line 371
	cmp	DWORD PTR _leadByte$[ebp], 252		; 000000fcH
	jge	SHORT $LN2@skipValue
; Line 372
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax
; Line 373
	jmp	SHORT $LN5@skipValue
$LN2@skipValue:
; Line 374
	mov	eax, DWORD PTR _leadByte$[ebp]
	sar	eax, 1
	and	eax, 1
	mov	ecx, DWORD PTR _pos$[ebp]
	lea	edx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR _pos$[ebp], edx
$LN5@skipValue:
; Line 377
	mov	eax, DWORD PTR _pos$[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?skipValue@BytesTrie@icu_56@@CAPBEPBEH@Z ENDP		; icu_56::BytesTrie::skipValue
_TEXT	ENDS
PUBLIC	?skipValue@BytesTrie@icu_56@@CAPBEPBE@Z		; icu_56::BytesTrie::skipValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipValue@BytesTrie@icu_56@@CAPBEPBE@Z
_TEXT	SEGMENT
_leadByte$ = -8						; size = 4
_pos$ = 8						; size = 4
?skipValue@BytesTrie@icu_56@@CAPBEPBE@Z PROC		; icu_56::BytesTrie::skipValue, COMDAT
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 380
	mov	eax, DWORD PTR _pos$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _leadByte$[ebp], ecx
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	mov	DWORD PTR _pos$[ebp], edx
; Line 381
	mov	eax, DWORD PTR _leadByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	call	?skipValue@BytesTrie@icu_56@@CAPBEPBEH@Z ; icu_56::BytesTrie::skipValue
	add	esp, 8
; Line 382
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipValue@BytesTrie@icu_56@@CAPBEPBE@Z ENDP		; icu_56::BytesTrie::skipValue
_TEXT	ENDS
PUBLIC	?skipDelta@BytesTrie@icu_56@@CAPBEPBE@Z		; icu_56::BytesTrie::skipDelta
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipDelta@BytesTrie@icu_56@@CAPBEPBE@Z
_TEXT	SEGMENT
_delta$ = -8						; size = 4
_pos$ = 8						; size = 4
?skipDelta@BytesTrie@icu_56@@CAPBEPBE@Z PROC		; icu_56::BytesTrie::skipDelta, COMDAT
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 388
	mov	eax, DWORD PTR _pos$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _delta$[ebp], ecx
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	mov	DWORD PTR _pos$[ebp], edx
; Line 389
	cmp	DWORD PTR _delta$[ebp], 192		; 000000c0H
	jl	SHORT $LN5@skipDelta
; Line 390
	cmp	DWORD PTR _delta$[ebp], 240		; 000000f0H
	jge	SHORT $LN4@skipDelta
; Line 391
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN5@skipDelta
$LN4@skipDelta:
; Line 392
	cmp	DWORD PTR _delta$[ebp], 254		; 000000feH
	jge	SHORT $LN2@skipDelta
; Line 393
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax
; Line 394
	jmp	SHORT $LN5@skipDelta
$LN2@skipDelta:
; Line 395
	mov	eax, DWORD PTR _delta$[ebp]
	and	eax, 1
	mov	ecx, DWORD PTR _pos$[ebp]
	lea	edx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR _pos$[ebp], edx
$LN5@skipDelta:
; Line 398
	mov	eax, DWORD PTR _pos$[ebp]
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?skipDelta@BytesTrie@icu_56@@CAPBEPBE@Z ENDP		; icu_56::BytesTrie::skipDelta
_TEXT	ENDS
PUBLIC	?valueResult@BytesTrie@icu_56@@CA?AW4UStringTrieResult@@H@Z ; icu_56::BytesTrie::valueResult
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?valueResult@BytesTrie@icu_56@@CA?AW4UStringTrieResult@@H@Z
_TEXT	SEGMENT
_node$ = 8						; size = 4
?valueResult@BytesTrie@icu_56@@CA?AW4UStringTrieResult@@H@Z PROC ; icu_56::BytesTrie::valueResult, COMDAT
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 402
	mov	eax, DWORD PTR _node$[ebp]
	and	eax, 1
	mov	ecx, 3
	sub	ecx, eax
	mov	eax, ecx
; Line 403
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?valueResult@BytesTrie@icu_56@@CA?AW4UStringTrieResult@@H@Z ENDP ; icu_56::BytesTrie::valueResult
_TEXT	ENDS
PUBLIC	??4Iterator@BytesTrie@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::BytesTrie::Iterator::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Iterator@BytesTrie@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Iterator@BytesTrie@icu_56@@QAEAAV012@ABV012@@Z PROC	; icu_56::BytesTrie::Iterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Iterator@BytesTrie@icu_56@@QAEAAV012@ABV012@@Z ENDP	; icu_56::BytesTrie::Iterator::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::Normalizer2::normalize
EXTRN	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\unicode\normalizer2.h
xdata$x	SEGMENT
__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T82799 = -300						; size = 4
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::Normalizer2::normalize, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T82799[ebp], 0
; Line 195
	lea	ecx, DWORD PTR _result$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 196
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UnicodeString@icu_56@@QAE@$$QAV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	ecx, DWORD PTR $T82799[ebp]
	or	ecx, 1
	mov	DWORD PTR $T82799[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@normalize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN9@normalize:
	DD	1
	DD	$LN8@normalize
$LN8@normalize:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@normalize
$LN6@normalize:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T82799[ebp]
	and	eax, 1
	je	$LN5@normalize
	and	DWORD PTR $T82799[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN5@normalize:
	ret	0
__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::Normalizer2::normalize
PUBLIC	??_7Normalizer2@icu_56@@6B@			; icu_56::Normalizer2::`vftable'
PUBLIC	??0Normalizer2@icu_56@@QAE@XZ			; icu_56::Normalizer2::Normalizer2
PUBLIC	??_R4Normalizer2@icu_56@@6B@			; icu_56::Normalizer2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNormalizer2@icu_56@@@8			; icu_56::Normalizer2 `RTTI Type Descriptor'
PUBLIC	??_R3Normalizer2@icu_56@@8			; icu_56::Normalizer2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Normalizer2@icu_56@@8			; icu_56::Normalizer2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Normalizer2@icu_56@@8		; icu_56::Normalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENormalizer2@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2::`vector deleting destructor'
EXTRN	?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::Normalizer2::getRawDecomposition
EXTRN	?composePair@Normalizer2@icu_56@@UBEHHH@Z:PROC	; icu_56::Normalizer2::composePair
EXTRN	?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z:PROC ; icu_56::Normalizer2::getCombiningClass
;	COMDAT ??_R1A@?0A@EA@Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Normalizer2@icu_56@@8 DD FLAT:??_R0?AVNormalizer2@icu_56@@@8 ; icu_56::Normalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R2Normalizer2@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Normalizer2@icu_56@@8 ; icu_56::Normalizer2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Normalizer2@icu_56@@8
rdata$r	SEGMENT
??_R3Normalizer2@icu_56@@8 DD 00H			; icu_56::Normalizer2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNormalizer2@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNormalizer2@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Normalizer2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNormalizer2@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Normalizer2@icu_56@@6B@
rdata$r	SEGMENT
??_R4Normalizer2@icu_56@@6B@ DD 00H			; icu_56::Normalizer2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNormalizer2@icu_56@@@8
	DD	FLAT:??_R3Normalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Normalizer2@icu_56@@6B@
CONST	SEGMENT
??_7Normalizer2@icu_56@@6B@ DD FLAT:??_R4Normalizer2@icu_56@@6B@ ; icu_56::Normalizer2::`vftable'
	DD	FLAT:??_ENormalizer2@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?composePair@Normalizer2@icu_56@@UBEHHH@Z
	DD	FLAT:?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Normalizer2@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Normalizer2@icu_56@@QAE@XZ PROC			; icu_56::Normalizer2::Normalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Normalizer2@icu_56@@QAE@XZ ENDP			; icu_56::Normalizer2::Normalizer2
_TEXT	ENDS
PUBLIC	??0Normalizer2@icu_56@@QAE@ABV01@@Z		; icu_56::Normalizer2::Normalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Normalizer2@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Normalizer2@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Normalizer2::Normalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Normalizer2@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Normalizer2::Normalizer2
_TEXT	ENDS
PUBLIC	??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Normalizer2::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Normalizer2::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Normalizer2::operator=
_TEXT	ENDS
PUBLIC	??_GNormalizer2@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2::`scalar deleting destructor'
EXTRN	??1Normalizer2@icu_56@@UAE@XZ:PROC		; icu_56::Normalizer2::~Normalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNormalizer2@icu_56@@UAEPAXI@Z PROC			; icu_56::Normalizer2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2@icu_56@@UAE@XZ		; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@13
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@13:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNormalizer2@icu_56@@UAEPAXI@Z ENDP			; icu_56::Normalizer2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENormalizer2@icu_56@@UAEPAXI@Z PROC			; icu_56::Normalizer2::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@13
	push	OFFSET ??1Normalizer2@icu_56@@UAE@XZ	; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@13
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@13:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@13
$LN3@vector@13:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2@icu_56@@UAE@XZ		; icu_56::Normalizer2::~Normalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@13
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@13:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@13:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENormalizer2@icu_56@@UAEPAXI@Z ENDP			; icu_56::Normalizer2::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7FilteredNormalizer2@icu_56@@6B@		; icu_56::FilteredNormalizer2::`vftable'
PUBLIC	??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z ; icu_56::FilteredNormalizer2::FilteredNormalizer2
PUBLIC	??_R4FilteredNormalizer2@icu_56@@6B@		; icu_56::FilteredNormalizer2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFilteredNormalizer2@icu_56@@@8		; icu_56::FilteredNormalizer2 `RTTI Type Descriptor'
PUBLIC	??_R3FilteredNormalizer2@icu_56@@8		; icu_56::FilteredNormalizer2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FilteredNormalizer2@icu_56@@8		; icu_56::FilteredNormalizer2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8	; icu_56::FilteredNormalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z	; icu_56::FilteredNormalizer2::`vector deleting destructor'
EXTRN	?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::normalize
EXTRN	?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::normalizeSecondAndAppend
EXTRN	?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::append
EXTRN	?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::FilteredNormalizer2::getDecomposition
EXTRN	?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:PROC ; icu_56::FilteredNormalizer2::getRawDecomposition
EXTRN	?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z:PROC ; icu_56::FilteredNormalizer2::composePair
EXTRN	?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z:PROC ; icu_56::FilteredNormalizer2::getCombiningClass
EXTRN	?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::isNormalized
EXTRN	?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::quickCheck
EXTRN	?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::FilteredNormalizer2::spanQuickCheckYes
EXTRN	?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::hasBoundaryBefore
EXTRN	?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::hasBoundaryAfter
EXTRN	?isInert@FilteredNormalizer2@icu_56@@UBECH@Z:PROC ; icu_56::FilteredNormalizer2::isInert
;	COMDAT ??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8 DD FLAT:??_R0?AVFilteredNormalizer2@icu_56@@@8 ; icu_56::FilteredNormalizer2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R2FilteredNormalizer2@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8 ; icu_56::FilteredNormalizer2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Normalizer2@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FilteredNormalizer2@icu_56@@8
rdata$r	SEGMENT
??_R3FilteredNormalizer2@icu_56@@8 DD 00H		; icu_56::FilteredNormalizer2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFilteredNormalizer2@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFilteredNormalizer2@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FilteredNormalizer2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFilteredNormalizer2@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FilteredNormalizer2@icu_56@@6B@
rdata$r	SEGMENT
??_R4FilteredNormalizer2@icu_56@@6B@ DD 00H		; icu_56::FilteredNormalizer2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFilteredNormalizer2@icu_56@@@8
	DD	FLAT:??_R3FilteredNormalizer2@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FilteredNormalizer2@icu_56@@6B@
CONST	SEGMENT
??_7FilteredNormalizer2@icu_56@@6B@ DD FLAT:??_R4FilteredNormalizer2@icu_56@@6B@ ; icu_56::FilteredNormalizer2::`vftable'
	DD	FLAT:??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z
	DD	FLAT:?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z
	DD	FLAT:?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z
	DD	FLAT:?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z
	DD	FLAT:?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z
	DD	FLAT:?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z
	DD	FLAT:?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z
	DD	FLAT:?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z
	DD	FLAT:?isInert@FilteredNormalizer2@icu_56@@UBECH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n2$ = 8						; size = 4
_filterSet$ = 12					; size = 4
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z PROC ; icu_56::FilteredNormalizer2::FilteredNormalizer2, COMDAT
; _this$ = ecx
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Normalizer2@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FilteredNormalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n2$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _filterSet$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z ENDP ; icu_56::FilteredNormalizer2::FilteredNormalizer2
_TEXT	ENDS
PUBLIC	??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z	; icu_56::FilteredNormalizer2::FilteredNormalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z PROC	; icu_56::FilteredNormalizer2::FilteredNormalizer2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Normalizer2@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FilteredNormalizer2@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::FilteredNormalizer2::FilteredNormalizer2
_TEXT	ENDS
PUBLIC	??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z	; icu_56::FilteredNormalizer2::`scalar deleting destructor'
EXTRN	??1FilteredNormalizer2@icu_56@@UAE@XZ:PROC	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z PROC		; icu_56::FilteredNormalizer2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FilteredNormalizer2@icu_56@@UAE@XZ	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@14
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@14:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z ENDP		; icu_56::FilteredNormalizer2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z PROC		; icu_56::FilteredNormalizer2::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@14
	push	OFFSET ??1FilteredNormalizer2@icu_56@@UAE@XZ ; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@14
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@14:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@14
$LN3@vector@14:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FilteredNormalizer2@icu_56@@UAE@XZ	; icu_56::FilteredNormalizer2::~FilteredNormalizer2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@14
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@14:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@14:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z ENDP		; icu_56::FilteredNormalizer2::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z		; icu_56::Mutex::Mutex
PUBLIC	??_FMutex@icu_56@@QAEXXZ			; icu_56::Mutex::`default constructor closure'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_FMutex@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_FMutex@icu_56@@QAEXXZ PROC				; icu_56::Mutex::`default constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Mutex@icu_56@@QAE@PAUUMutex@@@Z	; icu_56::Mutex::Mutex
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_FMutex@icu_56@@QAEXXZ ENDP				; icu_56::Mutex::`default constructor closure'
_TEXT	ENDS
EXTRN	_umtx_lock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mutex$ = 8						; size = 4
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z PROC			; icu_56::Mutex::Mutex, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\mutex.h
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mutex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_umtx_lock_56
	add	esp, 4
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z ENDP			; icu_56::Mutex::Mutex
_TEXT	ENDS
PUBLIC	??1Mutex@icu_56@@QAE@XZ				; icu_56::Mutex::~Mutex
EXTRN	_umtx_unlock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Mutex@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Mutex@icu_56@@QAE@XZ PROC				; icu_56::Mutex::~Mutex, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_umtx_unlock_56
	add	esp, 4
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Mutex@icu_56@@QAE@XZ ENDP				; icu_56::Mutex::~Mutex
_TEXT	ENDS
PUBLIC	?isHangul@Hangul@icu_56@@SACH@Z			; icu_56::Hangul::isHangul
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isHangul@Hangul@icu_56@@SACH@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_c$ = 8							; size = 4
?isHangul@Hangul@icu_56@@SACH@Z PROC			; icu_56::Hangul::isHangul, COMDAT
; File d:\mozilla\intl\icu\source\common\normalizer2impl.h
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 61
	cmp	DWORD PTR _c$[ebp], 44032		; 0000ac00H
	jl	SHORT $LN3@isHangul
	cmp	DWORD PTR _c$[ebp], 55204		; 0000d7a4H
	jge	SHORT $LN3@isHangul
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isHangul
$LN3@isHangul:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isHangul:
	mov	al, BYTE PTR tv66[ebp]
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isHangul@Hangul@icu_56@@SACH@Z ENDP			; icu_56::Hangul::isHangul
_TEXT	ENDS
PUBLIC	?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z	; icu_56::Hangul::isHangulWithoutJamoT
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z
_TEXT	SEGMENT
tv72 = -193						; size = 1
_c$ = 8							; size = 2
?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z PROC	; icu_56::Hangul::isHangulWithoutJamoT, COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	movzx	eax, WORD PTR _c$[ebp]
	sub	eax, 44032				; 0000ac00H
	mov	WORD PTR _c$[ebp], ax
; Line 66
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 11172				; 00002ba4H
	jge	SHORT $LN3@isHangulWi
	movzx	eax, WORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isHangulWi
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN4@isHangulWi
$LN3@isHangulWi:
	mov	BYTE PTR tv72[ebp], 0
$LN4@isHangulWi:
	mov	al, BYTE PTR tv72[ebp]
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z ENDP	; icu_56::Hangul::isHangulWithoutJamoT
_TEXT	ENDS
PUBLIC	?isJamoL@Hangul@icu_56@@SACH@Z			; icu_56::Hangul::isJamoL
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isJamoL@Hangul@icu_56@@SACH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?isJamoL@Hangul@icu_56@@SACH@Z PROC			; icu_56::Hangul::isJamoL, COMDAT
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 69
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 4352				; 00001100H
	cmp	eax, 19					; 00000013H
	setb	al
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isJamoL@Hangul@icu_56@@SACH@Z ENDP			; icu_56::Hangul::isJamoL
_TEXT	ENDS
PUBLIC	?isJamoV@Hangul@icu_56@@SACH@Z			; icu_56::Hangul::isJamoV
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isJamoV@Hangul@icu_56@@SACH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?isJamoV@Hangul@icu_56@@SACH@Z PROC			; icu_56::Hangul::isJamoV, COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 4449				; 00001161H
	cmp	eax, 21					; 00000015H
	setb	al
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isJamoV@Hangul@icu_56@@SACH@Z ENDP			; icu_56::Hangul::isJamoV
_TEXT	ENDS
PUBLIC	?decompose@Hangul@icu_56@@SAHHQA_W@Z		; icu_56::Hangul::decompose
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?decompose@Hangul@icu_56@@SAHHQA_W@Z
_TEXT	SEGMENT
_c2$ = -8						; size = 4
_c$ = 8							; size = 4
_buffer$ = 12						; size = 4
?decompose@Hangul@icu_56@@SAHHQA_W@Z PROC		; icu_56::Hangul::decompose, COMDAT
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 80
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 44032				; 0000ac00H
	mov	DWORD PTR _c$[ebp], eax
; Line 81
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _c2$[ebp], edx
; Line 82
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 83
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 21					; 00000015H
	idiv	ecx
	add	eax, 4352				; 00001100H
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [edx], ax
; Line 84
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 21					; 00000015H
	idiv	ecx
	add	edx, 4449				; 00001161H
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 85
	cmp	DWORD PTR _c2$[ebp], 0
	jne	SHORT $LN2@decompose
; Line 86
	mov	eax, 2
	jmp	SHORT $LN3@decompose
; Line 87
	jmp	SHORT $LN3@decompose
$LN2@decompose:
; Line 88
	mov	eax, DWORD PTR _c2$[ebp]
	add	eax, 4519				; 000011a7H
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 89
	mov	eax, 3
$LN3@decompose:
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?decompose@Hangul@icu_56@@SAHHQA_W@Z ENDP		; icu_56::Hangul::decompose
_TEXT	ENDS
PUBLIC	?getRawDecomposition@Hangul@icu_56@@SAXHQA_W@Z	; icu_56::Hangul::getRawDecomposition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRawDecomposition@Hangul@icu_56@@SAXHQA_W@Z
_TEXT	SEGMENT
_c2$ = -20						; size = 4
_orig$ = -8						; size = 4
_c$ = 8							; size = 4
_buffer$ = 12						; size = 4
?getRawDecomposition@Hangul@icu_56@@SAXHQA_W@Z PROC	; icu_56::Hangul::getRawDecomposition, COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 98
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _orig$[ebp], eax
; Line 99
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 44032				; 0000ac00H
	mov	DWORD PTR _c$[ebp], eax
; Line 100
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _c2$[ebp], edx
; Line 101
	cmp	DWORD PTR _c2$[ebp], 0
	jne	SHORT $LN2@getRawDeco
; Line 102
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 103
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 21					; 00000015H
	idiv	ecx
	add	eax, 4352				; 00001100H
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [edx], ax
; Line 104
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 21					; 00000015H
	idiv	ecx
	add	edx, 4449				; 00001161H
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 105
	jmp	SHORT $LN3@getRawDeco
$LN2@getRawDeco:
; Line 106
	mov	eax, DWORD PTR _orig$[ebp]
	sub	eax, DWORD PTR _c2$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [ecx], ax
; Line 107
	mov	eax, DWORD PTR _c2$[ebp]
	add	eax, 4519				; 000011a7H
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [ecx+2], ax
$LN3@getRawDeco:
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRawDecomposition@Hangul@icu_56@@SAXHQA_W@Z ENDP	; icu_56::Hangul::getRawDecomposition
_TEXT	ENDS
PUBLIC	??4Hangul@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Hangul::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Hangul@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Hangul@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Hangul::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Hangul@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Hangul::operator=
_TEXT	ENDS
PUBLIC	??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z ; icu_56::ReorderingBuffer::ReorderingBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ni$ = 8						; size = 4
_dest$ = 12						; size = 4
??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z PROC ; icu_56::ReorderingBuffer::ReorderingBuffer, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ni$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z ENDP ; icu_56::ReorderingBuffer::ReorderingBuffer
_TEXT	ENDS
PUBLIC	??1ReorderingBuffer@icu_56@@QAE@XZ		; icu_56::ReorderingBuffer::~ReorderingBuffer
EXTRN	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC ; icu_56::UnicodeString::releaseBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ReorderingBuffer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ReorderingBuffer@icu_56@@QAE@XZ PROC			; icu_56::ReorderingBuffer::~ReorderingBuffer, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@Reordering
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+8]
	sar	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z ; icu_56::UnicodeString::releaseBuffer
$LN2@Reordering:
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ReorderingBuffer@icu_56@@QAE@XZ ENDP			; icu_56::ReorderingBuffer::~ReorderingBuffer
_TEXT	ENDS
PUBLIC	?isEmpty@ReorderingBuffer@icu_56@@QBECXZ	; icu_56::ReorderingBuffer::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@ReorderingBuffer@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@ReorderingBuffer@icu_56@@QBECXZ PROC		; icu_56::ReorderingBuffer::isEmpty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+16]
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@ReorderingBuffer@icu_56@@QBECXZ ENDP		; icu_56::ReorderingBuffer::isEmpty
_TEXT	ENDS
PUBLIC	?length@ReorderingBuffer@icu_56@@QBEHXZ		; icu_56::ReorderingBuffer::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@ReorderingBuffer@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@ReorderingBuffer@icu_56@@QBEHXZ PROC		; icu_56::ReorderingBuffer::length, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@ReorderingBuffer@icu_56@@QBEHXZ ENDP		; icu_56::ReorderingBuffer::length
_TEXT	ENDS
PUBLIC	?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ	; icu_56::ReorderingBuffer::getStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ PROC	; icu_56::ReorderingBuffer::getStart, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ ENDP	; icu_56::ReorderingBuffer::getStart
_TEXT	ENDS
PUBLIC	?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ	; icu_56::ReorderingBuffer::getLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ PROC	; icu_56::ReorderingBuffer::getLimit, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ ENDP	; icu_56::ReorderingBuffer::getLimit
_TEXT	ENDS
PUBLIC	?getLastCC@ReorderingBuffer@icu_56@@QBEEXZ	; icu_56::ReorderingBuffer::getLastCC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLastCC@ReorderingBuffer@icu_56@@QBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLastCC@ReorderingBuffer@icu_56@@QBEEXZ PROC		; icu_56::ReorderingBuffer::getLastCC, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLastCC@ReorderingBuffer@icu_56@@QBEEXZ ENDP		; icu_56::ReorderingBuffer::getLastCC
_TEXT	ENDS
PUBLIC	?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z	; icu_56::ReorderingBuffer::setLastChar
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z PROC	; icu_56::ReorderingBuffer::setLastChar, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dx, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx-2], dx
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z ENDP	; icu_56::ReorderingBuffer::setLastChar
_TEXT	ENDS
PUBLIC	?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z ; icu_56::ReorderingBuffer::appendBMP
PUBLIC	?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z ; icu_56::ReorderingBuffer::append
EXTRN	?appendSupplementary@ReorderingBuffer@icu_56@@AAECHEAAW4UErrorCode@@@Z:PROC ; icu_56::ReorderingBuffer::appendSupplementary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_cc$ = 12						; size = 1
_errorCode$ = 16					; size = 4
?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z PROC ; icu_56::ReorderingBuffer::append, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN3@append
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _cc$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z ; icu_56::ReorderingBuffer::appendBMP
	mov	BYTE PTR tv75[ebp], al
	jmp	SHORT $LN4@append
$LN3@append:
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _cc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendSupplementary@ReorderingBuffer@icu_56@@AAECHEAAW4UErrorCode@@@Z ; icu_56::ReorderingBuffer::appendSupplementary
	mov	BYTE PTR tv75[ebp], al
$LN4@append:
	mov	al, BYTE PTR tv75[ebp]
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z ENDP ; icu_56::ReorderingBuffer::append
_TEXT	ENDS
EXTRN	?insert@ReorderingBuffer@icu_56@@AAEXHE@Z:PROC	; icu_56::ReorderingBuffer::insert
EXTRN	?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z:PROC ; icu_56::ReorderingBuffer::resize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_cc$ = 12						; size = 1
_errorCode$ = 16					; size = 4
?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z PROC ; icu_56::ReorderingBuffer::appendBMP, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN5@appendBMP
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z ; icu_56::ReorderingBuffer::resize
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@appendBMP
; Line 153
	xor	al, al
	jmp	SHORT $LN6@appendBMP
$LN5@appendBMP:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	movzx	edx, BYTE PTR _cc$[ebp]
	cmp	ecx, edx
	jle	SHORT $LN3@appendBMP
	movzx	eax, BYTE PTR _cc$[ebp]
	test	eax, eax
	jne	SHORT $LN4@appendBMP
$LN3@appendBMP:
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dx, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _cc$[ebp]
	mov	BYTE PTR [eax+24], cl
; Line 158
	movzx	eax, BYTE PTR _cc$[ebp]
	cmp	eax, 1
	jg	SHORT $LN2@appendBMP
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+12], edx
$LN2@appendBMP:
; Line 161
	jmp	SHORT $LN1@appendBMP
$LN4@appendBMP:
; Line 162
	movzx	eax, BYTE PTR _cc$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@ReorderingBuffer@icu_56@@AAEXHE@Z ; icu_56::ReorderingBuffer::insert
$LN1@appendBMP:
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 165
	mov	al, 1
$LN6@appendBMP:
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z ENDP ; icu_56::ReorderingBuffer::appendBMP
_TEXT	ENDS
PUBLIC	?setReorderingLimit@ReorderingBuffer@icu_56@@QAEXPA_W@Z ; icu_56::ReorderingBuffer::setReorderingLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setReorderingLimit@ReorderingBuffer@icu_56@@QAEXPA_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newLimit$ = 8						; size = 4
?setReorderingLimit@ReorderingBuffer@icu_56@@QAEXPA_W@Z PROC ; icu_56::ReorderingBuffer::setReorderingLimit, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR _newLimit$[ebp]
	sar	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLimit$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newLimit$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
; Line 175
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setReorderingLimit@ReorderingBuffer@icu_56@@QAEXPA_W@Z ENDP ; icu_56::ReorderingBuffer::setReorderingLimit
_TEXT	ENDS
PUBLIC	?copyReorderableSuffixTo@ReorderingBuffer@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::ReorderingBuffer::copyReorderableSuffixTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyReorderableSuffixTo@ReorderingBuffer@icu_56@@QBEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?copyReorderableSuffixTo@ReorderingBuffer@icu_56@@QBEXAAVUnicodeString@2@@Z PROC ; icu_56::ReorderingBuffer::copyReorderableSuffixTo, COMDAT
; _this$ = ecx
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ; icu_56::UnicodeString::setTo
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?copyReorderableSuffixTo@ReorderingBuffer@icu_56@@QBEXAAVUnicodeString@2@@Z ENDP ; icu_56::ReorderingBuffer::copyReorderableSuffixTo
_TEXT	ENDS
PUBLIC	?writeCodePoint@ReorderingBuffer@icu_56@@CAXPA_WH@Z ; icu_56::ReorderingBuffer::writeCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeCodePoint@ReorderingBuffer@icu_56@@CAXPA_WH@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_c$ = 12						; size = 4
?writeCodePoint@ReorderingBuffer@icu_56@@CAXPA_WH@Z PROC ; icu_56::ReorderingBuffer::writeCodePoint, COMDAT
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 196
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN2@writeCodeP
; Line 197
	mov	eax, DWORD PTR _p$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
; Line 198
	jmp	SHORT $LN3@writeCodeP
$LN2@writeCodeP:
; Line 199
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 200
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx+2], ax
$LN3@writeCodeP:
; Line 202
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?writeCodePoint@ReorderingBuffer@icu_56@@CAXPA_WH@Z ENDP ; icu_56::ReorderingBuffer::writeCodePoint
_TEXT	ENDS
PUBLIC	?setIterator@ReorderingBuffer@icu_56@@AAEXXZ	; icu_56::ReorderingBuffer::setIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setIterator@ReorderingBuffer@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setIterator@ReorderingBuffer@icu_56@@AAEXXZ PROC	; icu_56::ReorderingBuffer::setIterator, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+28], edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setIterator@ReorderingBuffer@icu_56@@AAEXXZ ENDP	; icu_56::ReorderingBuffer::setIterator
_TEXT	ENDS
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
PUBLIC	??_7Normalizer2Impl@icu_56@@6B@			; icu_56::Normalizer2Impl::`vftable'
PUBLIC	??0Normalizer2Impl@icu_56@@QAE@XZ		; icu_56::Normalizer2Impl::Normalizer2Impl
PUBLIC	??_R4Normalizer2Impl@icu_56@@6B@		; icu_56::Normalizer2Impl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNormalizer2Impl@icu_56@@@8		; icu_56::Normalizer2Impl `RTTI Type Descriptor'
PUBLIC	??_R3Normalizer2Impl@icu_56@@8			; icu_56::Normalizer2Impl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Normalizer2Impl@icu_56@@8			; icu_56::Normalizer2Impl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Normalizer2Impl@icu_56@@8		; icu_56::Normalizer2Impl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENormalizer2Impl@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2Impl::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@Normalizer2Impl@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Normalizer2Impl@icu_56@@8 DD FLAT:??_R0?AVNormalizer2Impl@icu_56@@@8 ; icu_56::Normalizer2Impl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Normalizer2Impl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Normalizer2Impl@icu_56@@8
rdata$r	SEGMENT
??_R2Normalizer2Impl@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Normalizer2Impl@icu_56@@8 ; icu_56::Normalizer2Impl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Normalizer2Impl@icu_56@@8
rdata$r	SEGMENT
??_R3Normalizer2Impl@icu_56@@8 DD 00H			; icu_56::Normalizer2Impl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Normalizer2Impl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNormalizer2Impl@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNormalizer2Impl@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Normalizer2Impl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNormalizer2Impl@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Normalizer2Impl@icu_56@@6B@
rdata$r	SEGMENT
??_R4Normalizer2Impl@icu_56@@6B@ DD 00H			; icu_56::Normalizer2Impl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNormalizer2Impl@icu_56@@@8
	DD	FLAT:??_R3Normalizer2Impl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Normalizer2Impl@icu_56@@6B@
CONST	SEGMENT
??_7Normalizer2Impl@icu_56@@6B@ DD FLAT:??_R4Normalizer2Impl@icu_56@@6B@ ; icu_56::Normalizer2Impl::`vftable'
	DD	FLAT:??_ENormalizer2Impl@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Normalizer2Impl@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Normalizer2Impl@icu_56@@QAE@XZ$0
__ehfuncinfo$??0Normalizer2Impl@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Normalizer2Impl@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Normalizer2Impl@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0Normalizer2Impl@icu_56@@QAE@XZ PROC			; icu_56::Normalizer2Impl::Normalizer2Impl, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Normalizer2Impl@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2Impl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+432], 0
; Line 222
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 223
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Normalizer2Impl@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0Normalizer2Impl@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Normalizer2Impl@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Normalizer2Impl@icu_56@@QAE@XZ ENDP			; icu_56::Normalizer2Impl::Normalizer2Impl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
_TEXT	ENDS
PUBLIC	?getNormTrie@Normalizer2Impl@icu_56@@QBEPBUUTrie2@@XZ ; icu_56::Normalizer2Impl::getNormTrie
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNormTrie@Normalizer2Impl@icu_56@@QBEPBUUTrie2@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNormTrie@Normalizer2Impl@icu_56@@QBEPBUUTrie2@@XZ PROC ; icu_56::Normalizer2Impl::getNormTrie, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\normalizer2impl.h
; Line 235
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNormTrie@Normalizer2Impl@icu_56@@QBEPBUUTrie2@@XZ ENDP ; icu_56::Normalizer2Impl::getNormTrie
_TEXT	ENDS
PUBLIC	?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z	; icu_56::Normalizer2Impl::getNorm16
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z
_TEXT	SEGMENT
tv148 = -220						; size = 4
tv149 = -216						; size = 4
tv150 = -212						; size = 4
tv151 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z PROC		; icu_56::Normalizer2Impl::getNorm16, COMDAT
; _this$ = ecx
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@getNorm16
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [ecx]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv151[ebp], eax
	jmp	$LN10@getNorm16
$LN9@getNorm16:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@getNorm16
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR [edx]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv150[ebp], edx
	jmp	$LN8@getNorm16
$LN7@getNorm16:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@getNorm16
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 128				; 00000080H
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN6@getNorm16
$LN5@getNorm16:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getNorm16
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv148[ebp], edx
	jmp	SHORT $LN4@getNorm16
$LN3@getNorm16:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv148[ebp], ecx
$LN4@getNorm16:
	mov	edx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv149[ebp], edx
$LN6@getNorm16:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv150[ebp], eax
$LN8@getNorm16:
	mov	ecx, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv151[ebp], ecx
$LN10@getNorm16:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv151[ebp]
	mov	ax, WORD PTR [ecx+edx*2]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z ENDP		; icu_56::Normalizer2Impl::getNorm16
_TEXT	ENDS
PUBLIC	?getCompQuickCheck@Normalizer2Impl@icu_56@@QBE?AW4UNormalizationCheckResult@@G@Z ; icu_56::Normalizer2Impl::getCompQuickCheck
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCompQuickCheck@Normalizer2Impl@icu_56@@QBE?AW4UNormalizationCheckResult@@G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getCompQuickCheck@Normalizer2Impl@icu_56@@QBE?AW4UNormalizationCheckResult@@G@Z PROC ; icu_56::Normalizer2Impl::getCompQuickCheck, COMDAT
; _this$ = ecx
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+16]
	cmp	eax, edx
	jl	SHORT $LN4@getCompQui
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65281				; 0000ff01H
	jl	SHORT $LN5@getCompQui
$LN4@getCompQui:
; Line 243
	mov	eax, 1
	jmp	SHORT $LN6@getCompQui
	jmp	SHORT $LN6@getCompQui
$LN5@getCompQui:
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	movzx	edx, WORD PTR _norm16$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN2@getCompQui
; Line 245
	mov	eax, 2
	jmp	SHORT $LN6@getCompQui
; Line 246
	jmp	SHORT $LN6@getCompQui
$LN2@getCompQui:
; Line 247
	xor	eax, eax
$LN6@getCompQui:
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCompQuickCheck@Normalizer2Impl@icu_56@@QBE?AW4UNormalizationCheckResult@@G@Z ENDP ; icu_56::Normalizer2Impl::getCompQuickCheck
_TEXT	ENDS
PUBLIC	?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z ; icu_56::Normalizer2Impl::isAlgorithmicNoNo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z
_TEXT	SEGMENT
tv72 = -205						; size = 1
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z PROC	; icu_56::Normalizer2Impl::isAlgorithmicNoNo, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+18]
	movzx	edx, WORD PTR _norm16$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN3@isAlgorith
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	cmp	eax, edx
	jge	SHORT $LN3@isAlgorith
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN4@isAlgorith
$LN3@isAlgorith:
	mov	BYTE PTR tv72[ebp], 0
$LN4@isAlgorith:
	mov	al, BYTE PTR tv72[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z ENDP	; icu_56::Normalizer2Impl::isAlgorithmicNoNo
_TEXT	ENDS
PUBLIC	?isCompNo@Normalizer2Impl@icu_56@@QBECG@Z	; icu_56::Normalizer2Impl::isCompNo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompNo@Normalizer2Impl@icu_56@@QBECG@Z
_TEXT	SEGMENT
tv72 = -205						; size = 1
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isCompNo@Normalizer2Impl@icu_56@@QBECG@Z PROC		; icu_56::Normalizer2Impl::isCompNo, COMDAT
; _this$ = ecx
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+16]
	movzx	edx, WORD PTR _norm16$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN3@isCompNo
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	cmp	eax, edx
	jge	SHORT $LN3@isCompNo
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN4@isCompNo
$LN3@isCompNo:
	mov	BYTE PTR tv72[ebp], 0
$LN4@isCompNo:
	mov	al, BYTE PTR tv72[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompNo@Normalizer2Impl@icu_56@@QBECG@Z ENDP		; icu_56::Normalizer2Impl::isCompNo
_TEXT	ENDS
PUBLIC	?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z	; icu_56::Normalizer2Impl::isDecompYes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z
_TEXT	SEGMENT
tv72 = -205						; size = 1
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z PROC	; icu_56::Normalizer2Impl::isDecompYes, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	eax, edx
	jl	SHORT $LN3@isDecompYe
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	movzx	edx, WORD PTR _norm16$[ebp]
	cmp	ecx, edx
	jle	SHORT $LN3@isDecompYe
	mov	BYTE PTR tv72[ebp], 0
	jmp	SHORT $LN4@isDecompYe
$LN3@isDecompYe:
	mov	BYTE PTR tv72[ebp], 1
$LN4@isDecompYe:
	mov	al, BYTE PTR tv72[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z ENDP	; icu_56::Normalizer2Impl::isDecompYes
_TEXT	ENDS
PUBLIC	?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z	; icu_56::Normalizer2Impl::getCCFromNoNo
PUBLIC	?getCC@Normalizer2Impl@icu_56@@QBEEG@Z		; icu_56::Normalizer2Impl::getCC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCC@Normalizer2Impl@icu_56@@QBEEG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getCC@Normalizer2Impl@icu_56@@QBEEG@Z PROC		; icu_56::Normalizer2Impl::getCC, COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 255
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65024				; 0000fe00H
	jl	SHORT $LN3@getCC
; Line 256
	mov	al, BYTE PTR _norm16$[ebp]
	jmp	SHORT $LN4@getCC
$LN3@getCC:
; Line 258
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+16]
	cmp	eax, edx
	jl	SHORT $LN1@getCC
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+18]
	movzx	edx, WORD PTR _norm16$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN2@getCC
$LN1@getCC:
; Line 259
	xor	al, al
	jmp	SHORT $LN4@getCC
$LN2@getCC:
; Line 261
	movzx	eax, WORD PTR _norm16$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z ; icu_56::Normalizer2Impl::getCCFromNoNo
$LN4@getCC:
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getCC@Normalizer2Impl@icu_56@@QBEEG@Z ENDP		; icu_56::Normalizer2Impl::getCC
_TEXT	ENDS
PUBLIC	?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z ; icu_56::Normalizer2Impl::getCCFromYesOrMaybe
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
_norm16$ = 8						; size = 2
?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z PROC ; icu_56::Normalizer2Impl::getCCFromYesOrMaybe, COMDAT
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 264
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65024				; 0000fe00H
	jl	SHORT $LN3@getCCFromY
	movzx	ecx, BYTE PTR _norm16$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	jmp	SHORT $LN4@getCCFromY
$LN3@getCCFromY:
	mov	DWORD PTR tv67[ebp], 0
$LN4@getCCFromY:
	mov	al, BYTE PTR tv67[ebp]
; Line 265
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z ENDP ; icu_56::Normalizer2Impl::getCCFromYesOrMaybe
_TEXT	ENDS
PUBLIC	?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::singleLeadMightHaveNonZeroFCD16
PUBLIC	?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z	; icu_56::Normalizer2Impl::getFCD16
EXTRN	?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z:PROC ; icu_56::Normalizer2Impl::getFCD16FromNormData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z PROC		; icu_56::Normalizer2Impl::getFCD16, COMDAT
; _this$ = ecx
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 273
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN6@getFCD16
; Line 274
	xor	eax, eax
	jmp	SHORT $LN7@getFCD16
	jmp	SHORT $LN5@getFCD16
$LN6@getFCD16:
; Line 275
	cmp	DWORD PTR _c$[ebp], 384			; 00000180H
	jge	SHORT $LN4@getFCD16
; Line 276
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	movzx	ax, BYTE PTR [eax+40]
	jmp	SHORT $LN7@getFCD16
	jmp	SHORT $LN5@getFCD16
$LN4@getFCD16:
; Line 277
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN5@getFCD16
; Line 278
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::singleLeadMightHaveNonZeroFCD16
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@getFCD16
	xor	eax, eax
	jmp	SHORT $LN7@getFCD16
$LN5@getFCD16:
; Line 280
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16FromNormData
$LN7@getFCD16:
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z ENDP		; icu_56::Normalizer2Impl::getFCD16
_TEXT	ENDS
PUBLIC	?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z ; icu_56::Normalizer2Impl::nextFCD16
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z
_TEXT	SEGMENT
_c2$ = -32						; size = 2
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_limit$ = 12						; size = 4
?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z PROC ; icu_56::Normalizer2Impl::nextFCD16, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 291
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 292
	cmp	DWORD PTR _c$[ebp], 384			; 00000180H
	jge	SHORT $LN4@nextFCD16
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	movzx	ax, BYTE PTR [eax+40]
	jmp	SHORT $LN5@nextFCD16
	jmp	SHORT $LN3@nextFCD16
$LN4@nextFCD16:
; Line 294
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::singleLeadMightHaveNonZeroFCD16
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@nextFCD16
; Line 295
	xor	eax, eax
	jmp	SHORT $LN5@nextFCD16
$LN3@nextFCD16:
; Line 298
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN1@nextFCD16
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _limit$[ebp]
	je	SHORT $LN1@nextFCD16
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _c2$[ebp], dx
	movzx	eax, WORD PTR _c2$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN1@nextFCD16
; Line 299
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _c2$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 300
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@nextFCD16:
; Line 302
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16FromNormData
$LN5@nextFCD16:
; Line 303
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z ENDP ; icu_56::Normalizer2Impl::nextFCD16
_TEXT	ENDS
PUBLIC	?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z ; icu_56::Normalizer2Impl::previousFCD16
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z
_TEXT	SEGMENT
_c2$73260 = -32						; size = 2
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_s$ = 12						; size = 4
?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z PROC ; icu_56::Normalizer2Impl::previousFCD16, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 2
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _c$[ebp], edx
; Line 312
	cmp	DWORD PTR _c$[ebp], 384			; 00000180H
	jge	SHORT $LN5@previousFC
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	movzx	ax, BYTE PTR [eax+40]
	jmp	SHORT $LN6@previousFC
$LN5@previousFC:
; Line 315
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	je	SHORT $LN4@previousFC
; Line 316
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::singleLeadMightHaveNonZeroFCD16
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@previousFC
; Line 317
	xor	eax, eax
	jmp	SHORT $LN6@previousFC
$LN3@previousFC:
; Line 319
	jmp	SHORT $LN2@previousFC
$LN4@previousFC:
; Line 321
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN2@previousFC
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dx, WORD PTR [ecx-2]
	mov	WORD PTR _c2$73260[ebp], dx
	movzx	eax, WORD PTR _c2$73260[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN2@previousFC
; Line 322
	movzx	eax, WORD PTR _c2$73260[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 323
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 2
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@previousFC:
; Line 326
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16FromNormData
$LN6@previousFC:
; Line 327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z ENDP ; icu_56::Normalizer2Impl::previousFCD16
_TEXT	ENDS
PUBLIC	?getFCD16FromBelow180@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16FromBelow180
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD16FromBelow180@Normalizer2Impl@icu_56@@QBEGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getFCD16FromBelow180@Normalizer2Impl@icu_56@@QBEGH@Z PROC ; icu_56::Normalizer2Impl::getFCD16FromBelow180, COMDAT
; _this$ = ecx
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	movzx	ax, BYTE PTR [eax+40]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getFCD16FromBelow180@Normalizer2Impl@icu_56@@QBEGH@Z ENDP ; icu_56::Normalizer2Impl::getFCD16FromBelow180
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z
_TEXT	SEGMENT
_bits$ = -17						; size = 1
_this$ = -8						; size = 4
_lead$ = 8						; size = 4
?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z PROC ; icu_56::Normalizer2Impl::singleLeadMightHaveNonZeroFCD16, COMDAT
; _this$ = ecx
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 334
	mov	eax, DWORD PTR _lead$[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	al, BYTE PTR [eax+edx]
	mov	BYTE PTR _bits$[ebp], al
; Line 335
	movzx	eax, BYTE PTR _bits$[ebp]
	test	eax, eax
	jne	SHORT $LN1@singleLead
	xor	al, al
	jmp	SHORT $LN2@singleLead
$LN1@singleLead:
; Line 336
	movzx	eax, BYTE PTR _bits$[ebp]
	mov	ecx, DWORD PTR _lead$[ebp]
	sar	ecx, 5
	and	ecx, 7
	sar	eax, cl
	and	eax, 1
$LN2@singleLead:
; Line 337
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z ENDP ; icu_56::Normalizer2Impl::singleLeadMightHaveNonZeroFCD16
_TEXT	ENDS
PUBLIC	?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ; icu_56::Normalizer2Impl::isDecompYesAndZeroCC
PUBLIC	?isDecompInert@Normalizer2Impl@icu_56@@QBECH@Z	; icu_56::Normalizer2Impl::isDecompInert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDecompInert@Normalizer2Impl@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?isDecompInert@Normalizer2Impl@icu_56@@QBECH@Z PROC	; icu_56::Normalizer2Impl::isDecompInert, COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getNorm16
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ; icu_56::Normalizer2Impl::isDecompYesAndZeroCC
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isDecompInert@Normalizer2Impl@icu_56@@QBECH@Z ENDP	; icu_56::Normalizer2Impl::isDecompInert
_TEXT	ENDS
PUBLIC	?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::hasCompBoundaryBefore
EXTRN	?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z:PROC ; icu_56::Normalizer2Impl::hasCompBoundaryBefore
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv75 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z PROC ; icu_56::Normalizer2Impl::hasCompBoundaryBefore, COMDAT
; _this$ = ecx
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 470
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jl	SHORT $LN3@hasCompBou
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getNorm16
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z ; icu_56::Normalizer2Impl::hasCompBoundaryBefore
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN3@hasCompBou
	mov	BYTE PTR tv75[ebp], 0
	jmp	SHORT $LN4@hasCompBou
$LN3@hasCompBou:
	mov	BYTE PTR tv75[ebp], 1
$LN4@hasCompBou:
	mov	al, BYTE PTR tv75[ebp]
; Line 471
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z ENDP ; icu_56::Normalizer2Impl::hasCompBoundaryBefore
_TEXT	ENDS
PUBLIC	?hasFCDBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::hasFCDBoundaryBefore
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasFCDBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv70 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?hasFCDBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z PROC ; icu_56::Normalizer2Impl::hasFCDBoundaryBefore, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _c$[ebp], 768			; 00000300H
	jl	SHORT $LN3@hasFCDBoun
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16
	movzx	ecx, ax
	cmp	ecx, 255				; 000000ffH
	jle	SHORT $LN3@hasFCDBoun
	mov	BYTE PTR tv70[ebp], 0
	jmp	SHORT $LN4@hasFCDBoun
$LN3@hasFCDBoun:
	mov	BYTE PTR tv70[ebp], 1
$LN4@hasFCDBoun:
	mov	al, BYTE PTR tv70[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasFCDBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z ENDP ; icu_56::Normalizer2Impl::hasFCDBoundaryBefore
_TEXT	ENDS
PUBLIC	?hasFCDBoundaryAfter@Normalizer2Impl@icu_56@@QBECH@Z ; icu_56::Normalizer2Impl::hasFCDBoundaryAfter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasFCDBoundaryAfter@Normalizer2Impl@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv72 = -217						; size = 1
_fcd16$ = -20						; size = 2
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?hasFCDBoundaryAfter@Normalizer2Impl@icu_56@@QBECH@Z PROC ; icu_56::Normalizer2Impl::hasFCDBoundaryAfter, COMDAT
; _this$ = ecx
; Line 475
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 476
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16
	mov	WORD PTR _fcd16$[ebp], ax
; Line 477
	movzx	eax, WORD PTR _fcd16$[ebp]
	cmp	eax, 1
	jle	SHORT $LN3@hasFCDBoun@2
	movzx	ecx, WORD PTR _fcd16$[ebp]
	and	ecx, 255				; 000000ffH
	je	SHORT $LN3@hasFCDBoun@2
	mov	BYTE PTR tv72[ebp], 0
	jmp	SHORT $LN4@hasFCDBoun@2
$LN3@hasFCDBoun@2:
	mov	BYTE PTR tv72[ebp], 1
$LN4@hasFCDBoun@2:
	mov	al, BYTE PTR tv72[ebp]
; Line 478
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasFCDBoundaryAfter@Normalizer2Impl@icu_56@@QBECH@Z ENDP ; icu_56::Normalizer2Impl::hasFCDBoundaryAfter
_TEXT	ENDS
PUBLIC	?isFCDInert@Normalizer2Impl@icu_56@@QBECH@Z	; icu_56::Normalizer2Impl::isFCDInert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFCDInert@Normalizer2Impl@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?isFCDInert@Normalizer2Impl@icu_56@@QBECH@Z PROC	; icu_56::Normalizer2Impl::isFCDInert, COMDAT
; _this$ = ecx
; Line 479
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z ; icu_56::Normalizer2Impl::getFCD16
	movzx	ecx, ax
	cmp	ecx, 1
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isFCDInert@Normalizer2Impl@icu_56@@QBECH@Z ENDP	; icu_56::Normalizer2Impl::isFCDInert
_TEXT	ENDS
PUBLIC	?isMaybe@Normalizer2Impl@icu_56@@ABECG@Z	; icu_56::Normalizer2Impl::isMaybe
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isMaybe@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
tv70 = -205						; size = 1
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isMaybe@Normalizer2Impl@icu_56@@ABECG@Z PROC		; icu_56::Normalizer2Impl::isMaybe, COMDAT
; _this$ = ecx
; Line 481
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	movzx	edx, WORD PTR _norm16$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN3@isMaybe
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65280				; 0000ff00H
	jg	SHORT $LN3@isMaybe
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN4@isMaybe
$LN3@isMaybe:
	mov	BYTE PTR tv70[ebp], 0
$LN4@isMaybe:
	mov	al, BYTE PTR tv70[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isMaybe@Normalizer2Impl@icu_56@@ABECG@Z ENDP		; icu_56::Normalizer2Impl::isMaybe
_TEXT	ENDS
PUBLIC	?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ; icu_56::Normalizer2Impl::isMaybeOrNonZeroCC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z PROC ; icu_56::Normalizer2Impl::isMaybeOrNonZeroCC, COMDAT
; _this$ = ecx
; Line 482
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	cmp	eax, edx
	setge	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ENDP ; icu_56::Normalizer2Impl::isMaybeOrNonZeroCC
_TEXT	ENDS
PUBLIC	?isInert@Normalizer2Impl@icu_56@@CACG@Z		; icu_56::Normalizer2Impl::isInert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInert@Normalizer2Impl@icu_56@@CACG@Z
_TEXT	SEGMENT
_norm16$ = 8						; size = 2
?isInert@Normalizer2Impl@icu_56@@CACG@Z PROC		; icu_56::Normalizer2Impl::isInert, COMDAT
; Line 483
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	movzx	eax, WORD PTR _norm16$[ebp]
	test	eax, eax
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInert@Normalizer2Impl@icu_56@@CACG@Z ENDP		; icu_56::Normalizer2Impl::isInert
_TEXT	ENDS
PUBLIC	?isJamoL@Normalizer2Impl@icu_56@@CACG@Z		; icu_56::Normalizer2Impl::isJamoL
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isJamoL@Normalizer2Impl@icu_56@@CACG@Z
_TEXT	SEGMENT
_norm16$ = 8						; size = 2
?isJamoL@Normalizer2Impl@icu_56@@CACG@Z PROC		; icu_56::Normalizer2Impl::isJamoL, COMDAT
; Line 484
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isJamoL@Normalizer2Impl@icu_56@@CACG@Z ENDP		; icu_56::Normalizer2Impl::isJamoL
_TEXT	ENDS
PUBLIC	?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z	; icu_56::Normalizer2Impl::isJamoVT
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z
_TEXT	SEGMENT
_norm16$ = 8						; size = 2
?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z PROC		; icu_56::Normalizer2Impl::isJamoVT, COMDAT
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65280				; 0000ff00H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z ENDP		; icu_56::Normalizer2Impl::isJamoVT
_TEXT	ENDS
PUBLIC	?isHangul@Normalizer2Impl@icu_56@@ABECG@Z	; icu_56::Normalizer2Impl::isHangul
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isHangul@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isHangul@Normalizer2Impl@icu_56@@ABECG@Z PROC		; icu_56::Normalizer2Impl::isHangul, COMDAT
; _this$ = ecx
; Line 486
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	eax, edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isHangul@Normalizer2Impl@icu_56@@ABECG@Z ENDP		; icu_56::Normalizer2Impl::isHangul
_TEXT	ENDS
PUBLIC	?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ; icu_56::Normalizer2Impl::isCompYesAndZeroCC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z PROC ; icu_56::Normalizer2Impl::isCompYesAndZeroCC, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+16]
	cmp	eax, edx
	setl	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ENDP ; icu_56::Normalizer2Impl::isCompYesAndZeroCC
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z PROC ; icu_56::Normalizer2Impl::isDecompYesAndZeroCC, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	eax, edx
	jl	SHORT $LN3@isDecompYe@2
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65280				; 0000ff00H
	je	SHORT $LN3@isDecompYe@2
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	edx, eax
	jg	SHORT $LN4@isDecompYe@2
	movzx	ecx, WORD PTR _norm16$[ebp]
	cmp	ecx, 65024				; 0000fe00H
	jle	SHORT $LN3@isDecompYe@2
$LN4@isDecompYe@2:
	mov	BYTE PTR tv76[ebp], 0
	jmp	SHORT $LN5@isDecompYe@2
$LN3@isDecompYe@2:
	mov	BYTE PTR tv76[ebp], 1
$LN5@isDecompYe@2:
	mov	al, BYTE PTR tv76[ebp]
; Line 501
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ENDP ; icu_56::Normalizer2Impl::isDecompYesAndZeroCC
_TEXT	ENDS
PUBLIC	?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ; icu_56::Normalizer2Impl::isMostDecompYesAndZeroCC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
tv72 = -205						; size = 1
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z PROC ; icu_56::Normalizer2Impl::isMostDecompYesAndZeroCC, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 508
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	eax, edx
	jl	SHORT $LN3@isMostDeco
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65024				; 0000fe00H
	je	SHORT $LN3@isMostDeco
	movzx	ecx, WORD PTR _norm16$[ebp]
	cmp	ecx, 65280				; 0000ff00H
	je	SHORT $LN3@isMostDeco
	mov	BYTE PTR tv72[ebp], 0
	jmp	SHORT $LN4@isMostDeco
$LN3@isMostDeco:
	mov	BYTE PTR tv72[ebp], 1
$LN4@isMostDeco:
	mov	al, BYTE PTR tv72[ebp]
; Line 509
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z ENDP ; icu_56::Normalizer2Impl::isMostDecompYesAndZeroCC
_TEXT	ENDS
PUBLIC	?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z ; icu_56::Normalizer2Impl::isDecompNoAlgorithmic
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z PROC ; icu_56::Normalizer2Impl::isDecompNoAlgorithmic, COMDAT
; _this$ = ecx
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+18]
	cmp	eax, edx
	setge	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z ENDP ; icu_56::Normalizer2Impl::isDecompNoAlgorithmic
_TEXT	ENDS
PUBLIC	?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z	; icu_56::Normalizer2Impl::getMapping
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z
_TEXT	SEGMENT
_mapping$ = -20						; size = 4
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z PROC	; icu_56::Normalizer2Impl::getCCFromNoNo, COMDAT
; _this$ = ecx
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 518
	movzx	eax, WORD PTR _norm16$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z ; icu_56::Normalizer2Impl::getMapping
	mov	DWORD PTR _mapping$[ebp], eax
; Line 519
	mov	eax, DWORD PTR _mapping$[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 128				; 00000080H
	je	SHORT $LN2@getCCFromN
; Line 520
	mov	eax, DWORD PTR _mapping$[ebp]
	mov	al, BYTE PTR [eax-2]
	jmp	SHORT $LN3@getCCFromN
; Line 521
	jmp	SHORT $LN3@getCCFromN
$LN2@getCCFromN:
; Line 522
	xor	al, al
$LN3@getCCFromN:
; Line 524
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z ENDP	; icu_56::Normalizer2Impl::getCCFromNoNo
_TEXT	ENDS
PUBLIC	?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z ; icu_56::Normalizer2Impl::mapAlgorithmic
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_norm16$ = 12						; size = 2
?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z PROC	; icu_56::Normalizer2Impl::mapAlgorithmic, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	movzx	eax, WORD PTR _norm16$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	sub	edx, 65					; 00000041H
	sub	eax, edx
; Line 531
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z ENDP	; icu_56::Normalizer2Impl::mapAlgorithmic
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z PROC	; icu_56::Normalizer2Impl::getMapping, COMDAT
; _this$ = ecx
; Line 534
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*2]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z ENDP	; icu_56::Normalizer2Impl::getMapping
_TEXT	ENDS
PUBLIC	?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z ; icu_56::Normalizer2Impl::getCompositionsListForDecompYes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z PROC ; icu_56::Normalizer2Impl::getCompositionsListForDecompYes, COMDAT
; _this$ = ecx
; Line 535
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 536
	movzx	eax, WORD PTR _norm16$[ebp]
	test	eax, eax
	je	SHORT $LN4@getComposi
	movzx	eax, WORD PTR _norm16$[ebp]
	cmp	eax, 65024				; 0000fe00H
	jl	SHORT $LN5@getComposi
$LN4@getComposi:
; Line 537
	xor	eax, eax
	jmp	SHORT $LN6@getComposi
	jmp	SHORT $LN6@getComposi
$LN5@getComposi:
; Line 538
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	cmp	eax, edx
	jge	SHORT $LN2@getComposi
; Line 539
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*2]
	jmp	SHORT $LN6@getComposi
; Line 540
	jmp	SHORT $LN6@getComposi
$LN2@getComposi:
; Line 541
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+20]
	shl	edx, 1
	sub	eax, edx
$LN6@getComposi:
; Line 543
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z ENDP ; icu_56::Normalizer2Impl::getCompositionsListForDecompYes
_TEXT	ENDS
PUBLIC	?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z ; icu_56::Normalizer2Impl::getCompositionsListForComposite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z
_TEXT	SEGMENT
_list$ = -20						; size = 4
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z PROC ; icu_56::Normalizer2Impl::getCompositionsListForComposite, COMDAT
; _this$ = ecx
; Line 544
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 545
	movzx	eax, WORD PTR _norm16$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _list$[ebp], eax
; Line 548
	mov	eax, DWORD PTR _list$[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _list$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
; Line 549
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z ENDP ; icu_56::Normalizer2Impl::getCompositionsListForComposite
_TEXT	ENDS
PUBLIC	?getCompositionsList@Normalizer2Impl@icu_56@@ABEPBGG@Z ; icu_56::Normalizer2Impl::getCompositionsList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCompositionsList@Normalizer2Impl@icu_56@@ABEPBGG@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
_norm16$ = 8						; size = 2
?getCompositionsList@Normalizer2Impl@icu_56@@ABEPBGG@Z PROC ; icu_56::Normalizer2Impl::getCompositionsList, COMDAT
; _this$ = ecx
; Line 554
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 557
	movzx	eax, WORD PTR _norm16$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z ; icu_56::Normalizer2Impl::isDecompYes
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@getComposi@2
	movzx	edx, WORD PTR _norm16$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z ; icu_56::Normalizer2Impl::getCompositionsListForDecompYes
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@getComposi@2
$LN3@getComposi@2:
	movzx	eax, WORD PTR _norm16$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z ; icu_56::Normalizer2Impl::getCompositionsListForComposite
	mov	DWORD PTR tv75[ebp], eax
$LN4@getComposi@2:
	mov	eax, DWORD PTR tv75[ebp]
; Line 558
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getCompositionsList@Normalizer2Impl@icu_56@@ABEPBGG@Z ENDP ; icu_56::Normalizer2Impl::getCompositionsList
_TEXT	ENDS
PUBLIC	??0Normalizer2Impl@icu_56@@QAE@ABV01@@Z		; icu_56::Normalizer2Impl::Normalizer2Impl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Normalizer2Impl@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Normalizer2Impl@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Normalizer2Impl::Normalizer2Impl, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Normalizer2Impl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR [eax+12], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+14]
	mov	WORD PTR [eax+14], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+16]
	mov	WORD PTR [eax+16], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+18]
	mov	WORD PTR [eax+18], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+20]
	mov	WORD PTR [eax+20], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 40					; 00000028H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 40					; 00000028H
	mov	ecx, 96					; 00000060H
	rep movsd
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+424]
	mov	edx, DWORD PTR [eax+428]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+424], ecx
	mov	DWORD PTR [eax+428], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	mov	DWORD PTR [eax+432], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Normalizer2Impl@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Normalizer2Impl::Normalizer2Impl
_TEXT	ENDS
PUBLIC	??4Normalizer2Impl@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Normalizer2Impl::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Normalizer2Impl@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S2$73329 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Normalizer2Impl@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::Normalizer2Impl::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR [eax+12], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+14]
	mov	WORD PTR [eax+14], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+16]
	mov	WORD PTR [eax+16], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+18]
	mov	WORD PTR [eax+18], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+20]
	mov	WORD PTR [eax+20], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	DWORD PTR _$S2$73329[ebp], 0
	jmp	SHORT $LN3@operator@5
$LN2@operator@5:
	mov	eax, DWORD PTR _$S2$73329[ebp]
	add	eax, 1
	mov	DWORD PTR _$S2$73329[ebp], eax
$LN3@operator@5:
	cmp	DWORD PTR _$S2$73329[ebp], 384		; 00000180H
	jae	SHORT $LN1@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S2$73329[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S2$73329[ebp]
	mov	dl, BYTE PTR [ecx+40]
	mov	BYTE PTR [eax+40], dl
	jmp	SHORT $LN2@operator@5
$LN1@operator@5:
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+424]
	mov	edx, DWORD PTR [eax+428]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+424], ecx
	mov	DWORD PTR [eax+428], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	mov	DWORD PTR [eax+432], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Normalizer2Impl@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::Normalizer2Impl::operator=
_TEXT	ENDS
PUBLIC	??_GNormalizer2Impl@icu_56@@UAEPAXI@Z		; icu_56::Normalizer2Impl::`scalar deleting destructor'
EXTRN	??1Normalizer2Impl@icu_56@@UAE@XZ:PROC		; icu_56::Normalizer2Impl::~Normalizer2Impl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNormalizer2Impl@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNormalizer2Impl@icu_56@@UAEPAXI@Z PROC		; icu_56::Normalizer2Impl::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2Impl@icu_56@@UAE@XZ	; icu_56::Normalizer2Impl::~Normalizer2Impl
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@15
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@15:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNormalizer2Impl@icu_56@@UAEPAXI@Z ENDP		; icu_56::Normalizer2Impl::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENormalizer2Impl@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENormalizer2Impl@icu_56@@UAEPAXI@Z PROC		; icu_56::Normalizer2Impl::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@15
	push	OFFSET ??1Normalizer2Impl@icu_56@@UAE@XZ ; icu_56::Normalizer2Impl::~Normalizer2Impl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	436					; 000001b4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@15
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@15:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@15
$LN3@vector@15:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Normalizer2Impl@icu_56@@UAE@XZ	; icu_56::Normalizer2Impl::~Normalizer2Impl
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@15
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@15:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@15:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENormalizer2Impl@icu_56@@UAEPAXI@Z ENDP		; icu_56::Normalizer2Impl::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4Normalizer2Factory@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Normalizer2Factory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Normalizer2Factory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Normalizer2Factory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::Normalizer2Factory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Normalizer2Factory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::Normalizer2Factory::operator=
_TEXT	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; File d:\mozilla\intl\icu\source\common\uinvchar.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
PUBLIC	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z	; icu_56::MaybeStackArray<char,40>::operator[]
PUBLIC	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
PUBLIC	??0CharString@icu_56@@QAE@XZ			; icu_56::CharString::CharString
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\charstr.h
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0
__ehfuncinfo$??0CharString@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CharString@icu_56@@QAE@XZ PROC			; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@XZ ENDP			; icu_56::CharString::CharString
PUBLIC	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
PUBLIC	??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ; icu_56::CharString::CharString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 43
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 44
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 45
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::CharString
PUBLIC	?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::CharString::append
PUBLIC	??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ; icu_56::CharString::CharString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z PROC	; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 47
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 48
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ENDP	; icu_56::CharString::CharString
PUBLIC	??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::CharString
EXTRN	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC ; icu_56::CharString::append
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_sLength$ = 12						; size = 4
_errorCode$ = 16					; size = 4
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z PROC	; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 51
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 52
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 53
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z ENDP	; icu_56::CharString::CharString
PUBLIC	??1CharString@icu_56@@QAE@XZ			; icu_56::CharString::~CharString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CharString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharString@icu_56@@QAE@XZ PROC			; icu_56::CharString::~CharString, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharString@icu_56@@QAE@XZ ENDP			; icu_56::CharString::~CharString
_TEXT	ENDS
PUBLIC	?isEmpty@CharString@icu_56@@QBECXZ		; icu_56::CharString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@CharString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@CharString@icu_56@@QBECXZ PROC			; icu_56::CharString::isEmpty, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@CharString@icu_56@@QBECXZ ENDP			; icu_56::CharString::isEmpty
_TEXT	ENDS
PUBLIC	?length@CharString@icu_56@@QBEHXZ		; icu_56::CharString::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@CharString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@CharString@icu_56@@QBEHXZ PROC			; icu_56::CharString::length, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@CharString@icu_56@@QBEHXZ ENDP			; icu_56::CharString::length
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z	; icu_56::MaybeStackArray<char,40>::operator[]
PUBLIC	??ACharString@icu_56@@QBEDH@Z			; icu_56::CharString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??ACharString@icu_56@@QBEDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??ACharString@icu_56@@QBEDH@Z PROC			; icu_56::CharString::operator[], COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	al, BYTE PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??ACharString@icu_56@@QBEDH@Z ENDP			; icu_56::CharString::operator[]
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
PUBLIC	?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ; icu_56::CharString::toStringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ PROC ; icu_56::CharString::toStringPiece, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ENDP ; icu_56::CharString::toStringPiece
_TEXT	ENDS
PUBLIC	?data@CharString@icu_56@@QBEPBDXZ		; icu_56::CharString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@CharString@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CharString@icu_56@@QBEPBDXZ PROC			; icu_56::CharString::data, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CharString@icu_56@@QBEPBDXZ ENDP			; icu_56::CharString::data
_TEXT	ENDS
PUBLIC	?data@CharString@icu_56@@QAEPADXZ		; icu_56::CharString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@CharString@icu_56@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CharString@icu_56@@QAEPADXZ PROC			; icu_56::CharString::data, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CharString@icu_56@@QAEPADXZ ENDP			; icu_56::CharString::data
_TEXT	ENDS
PUBLIC	?clear@CharString@icu_56@@QAEAAV12@XZ		; icu_56::CharString::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@CharString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@CharString@icu_56@@QAEAAV12@XZ PROC		; icu_56::CharString::clear, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@CharString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::CharString::clear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::append, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@StringPiece@icu_56@@QBEHXZ	; icu_56::StringPiece::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?data@StringPiece@icu_56@@QBEPBDXZ	; icu_56::StringPiece::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::append, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@CharString@icu_56@@QBEHXZ	; icu_56::CharString::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?data@CharString@icu_56@@QBEPBDXZ	; icu_56::CharString::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::append
_TEXT	ENDS
PUBLIC	?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z ; icu_56::Hashtable::init
EXTRN	_uhash_setKeyDeleter_56:PROC
EXTRN	_uprv_deleteUObject_56:PROC
EXTRN	_uhash_init_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keyHash$ = 8						; size = 4
_keyComp$ = 12						; size = 4
_valueComp$ = 16					; size = 4
_status$ = 20						; size = 4
?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z PROC ; icu_56::Hashtable::init, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\hash.h
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@init
; Line 111
	jmp	SHORT $LN3@init
$LN2@init:
; Line 113
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _valueComp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyComp$[ebp]
	push	edx
	mov	eax, DWORD PTR _keyHash$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	_uhash_init_56
	add	esp, 20					; 00000014H
; Line 114
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@init
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 116
	push	OFFSET _uprv_deleteUObject_56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uhash_setKeyDeleter_56
	add	esp, 8
$LN3@init:
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z ENDP ; icu_56::Hashtable::init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0Hashtable@icu_56@@QAE@P6ACTUElement@@0@Z1AAW4UErrorCode@@@Z ; icu_56::Hashtable::Hashtable
EXTRN	_uhash_hashUnicodeString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Hashtable@icu_56@@QAE@P6ACTUElement@@0@Z1AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keyComp$ = 8						; size = 4
_valueComp$ = 12					; size = 4
_status$ = 16						; size = 4
??0Hashtable@icu_56@@QAE@P6ACTUElement@@0@Z1AAW4UErrorCode@@@Z PROC ; icu_56::Hashtable::Hashtable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\hash.h
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 122
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _valueComp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyComp$[ebp]
	push	edx
	push	OFFSET _uhash_hashUnicodeString_56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z ; icu_56::Hashtable::init
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Hashtable@icu_56@@QAE@P6ACTUElement@@0@Z1AAW4UErrorCode@@@Z ENDP ; icu_56::Hashtable::Hashtable
_TEXT	ENDS
PUBLIC	??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z	; icu_56::Hashtable::Hashtable
EXTRN	_uhash_hashCaselessUnicodeString_56:PROC
EXTRN	_uhash_compareUnicodeString_56:PROC
EXTRN	_uhash_compareCaselessUnicodeString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv73 = -212						; size = 4
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_ignoreKeyCase$ = 8					; size = 1
_status$ = 12						; size = 4
??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z PROC	; icu_56::Hashtable::Hashtable, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 132
	movsx	eax, BYTE PTR _ignoreKeyCase$[ebp]
	test	eax, eax
	je	SHORT $LN3@Hashtable
	mov	DWORD PTR tv69[ebp], OFFSET _uhash_compareCaselessUnicodeString_56
	jmp	SHORT $LN4@Hashtable
$LN3@Hashtable:
	mov	DWORD PTR tv69[ebp], OFFSET _uhash_compareUnicodeString_56
$LN4@Hashtable:
	movsx	ecx, BYTE PTR _ignoreKeyCase$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@Hashtable
	mov	DWORD PTR tv73[ebp], OFFSET _uhash_hashCaselessUnicodeString_56
	jmp	SHORT $LN6@Hashtable
$LN5@Hashtable:
	mov	DWORD PTR tv73[ebp], OFFSET _uhash_hashUnicodeString_56
$LN6@Hashtable:
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv69[ebp]
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z ; icu_56::Hashtable::init
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z ENDP	; icu_56::Hashtable::Hashtable
_TEXT	ENDS
PUBLIC	??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z	; icu_56::Hashtable::Hashtable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z PROC	; icu_56::Hashtable::Hashtable, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 138
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uhash_hashUnicodeString_56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z ; icu_56::Hashtable::init
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP	; icu_56::Hashtable::Hashtable
_TEXT	ENDS
PUBLIC	??0Hashtable@icu_56@@QAE@XZ			; icu_56::Hashtable::Hashtable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Hashtable@icu_56@@QAE@XZ
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
??0Hashtable@icu_56@@QAE@XZ PROC			; icu_56::Hashtable::Hashtable, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 144
	mov	DWORD PTR _status$[ebp], 0
; Line 145
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uhash_hashUnicodeString_56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Hashtable@icu_56@@AAEXP6AHTUElement@@@ZP6AC00@Z2AAW4UErrorCode@@@Z ; icu_56::Hashtable::init
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Hashtable@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Hashtable@2:
	DD	1
	DD	$LN4@Hashtable@2
$LN4@Hashtable@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Hashtable@2
$LN3@Hashtable@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
??0Hashtable@icu_56@@QAE@XZ ENDP			; icu_56::Hashtable::Hashtable
_TEXT	ENDS
PUBLIC	??1Hashtable@icu_56@@QAE@XZ			; icu_56::Hashtable::~Hashtable
EXTRN	_uhash_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Hashtable@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Hashtable@icu_56@@QAE@XZ PROC			; icu_56::Hashtable::~Hashtable, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Hashtable@3
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uhash_close_56
	add	esp, 4
$LN2@Hashtable@3:
; Line 152
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Hashtable@icu_56@@QAE@XZ ENDP			; icu_56::Hashtable::~Hashtable
_TEXT	ENDS
PUBLIC	?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z ; icu_56::Hashtable::setValueDeleter
EXTRN	_uhash_setValueDeleter_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fn$ = 8						; size = 4
?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z PROC ; icu_56::Hashtable::setValueDeleter, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_setValueDeleter_56
	add	esp, 8
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z ENDP ; icu_56::Hashtable::setValueDeleter
_TEXT	ENDS
PUBLIC	?count@Hashtable@icu_56@@QBEHXZ			; icu_56::Hashtable::count
EXTRN	_uhash_count_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?count@Hashtable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?count@Hashtable@icu_56@@QBEHXZ PROC			; icu_56::Hashtable::count, COMDAT
; _this$ = ecx
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uhash_count_56
	add	esp, 4
; Line 160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?count@Hashtable@icu_56@@QBEHXZ ENDP			; icu_56::Hashtable::count
_TEXT	ENDS
PUBLIC	?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z ; icu_56::Hashtable::put
EXTRN	_uhash_put_56:PROC
EXTRN	??2UMemory@icu_56@@SAPAXI@Z:PROC		; icu_56::UMemory::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z$0
__ehfuncinfo$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T83092 = -236						; size = 4
$T83093 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_value$ = 12						; size = 4
_status$ = 16						; size = 4
?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z PROC ; icu_56::Hashtable::put, COMDAT
; _this$ = ecx
; Line 162
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	push	64					; 00000040H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T83093[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83093[ebp], 0
	je	SHORT $LN3@put
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83093[ebp]
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@put
$LN3@put:
	mov	DWORD PTR tv75[ebp], 0
$LN4@put:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T83092[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83092[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 164
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T83093[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z ENDP ; icu_56::Hashtable::put
PUBLIC	?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z ; icu_56::Hashtable::puti
EXTRN	_uhash_puti_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T83105 = -236						; size = 4
$T83106 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_value$ = 12						; size = 4
_status$ = 16						; size = 4
?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z PROC ; icu_56::Hashtable::puti, COMDAT
; _this$ = ecx
; Line 166
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	push	64					; 00000040H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T83106[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83106[ebp], 0
	je	SHORT $LN3@puti
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83106[ebp]
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@puti
$LN3@puti:
	mov	DWORD PTR tv75[ebp], 0
$LN4@puti:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T83105[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83105[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_uhash_puti_56
	add	esp, 16					; 00000010H
; Line 168
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T83106[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z ENDP ; icu_56::Hashtable::puti
PUBLIC	?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z ; icu_56::Hashtable::get
EXTRN	_uhash_get_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z PROC	; icu_56::Hashtable::get, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 171
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_get_56
	add	esp, 8
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z ENDP	; icu_56::Hashtable::get
_TEXT	ENDS
PUBLIC	?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z ; icu_56::Hashtable::geti
EXTRN	_uhash_geti_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z PROC	; icu_56::Hashtable::geti, COMDAT
; _this$ = ecx
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 175
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_geti_56
	add	esp, 8
; Line 176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z ENDP	; icu_56::Hashtable::geti
_TEXT	ENDS
PUBLIC	?remove@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@@Z ; icu_56::Hashtable::remove
EXTRN	_uhash_remove_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?remove@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@@Z PROC ; icu_56::Hashtable::remove, COMDAT
; _this$ = ecx
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_remove_56
	add	esp, 8
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@@Z ENDP ; icu_56::Hashtable::remove
_TEXT	ENDS
PUBLIC	?removei@Hashtable@icu_56@@QAEHABVUnicodeString@2@@Z ; icu_56::Hashtable::removei
EXTRN	_uhash_removei_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removei@Hashtable@icu_56@@QAEHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?removei@Hashtable@icu_56@@QAEHABVUnicodeString@2@@Z PROC ; icu_56::Hashtable::removei, COMDAT
; _this$ = ecx
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_removei_56
	add	esp, 8
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removei@Hashtable@icu_56@@QAEHABVUnicodeString@2@@Z ENDP ; icu_56::Hashtable::removei
_TEXT	ENDS
PUBLIC	?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z ; icu_56::Hashtable::find
EXTRN	_uhash_find_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z PROC ; icu_56::Hashtable::find, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_find_56
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z ENDP ; icu_56::Hashtable::find
_TEXT	ENDS
PUBLIC	?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z ; icu_56::Hashtable::nextElement
EXTRN	_uhash_nextElement_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pos$ = 8						; size = 4
?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z PROC ; icu_56::Hashtable::nextElement, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_nextElement_56
	add	esp, 8
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z ENDP ; icu_56::Hashtable::nextElement
_TEXT	ENDS
PUBLIC	?removeAll@Hashtable@icu_56@@QAEXXZ		; icu_56::Hashtable::removeAll
EXTRN	_uhash_removeAll_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeAll@Hashtable@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?removeAll@Hashtable@icu_56@@QAEXXZ PROC		; icu_56::Hashtable::removeAll, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uhash_removeAll_56
	add	esp, 4
; Line 196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?removeAll@Hashtable@icu_56@@QAEXXZ ENDP		; icu_56::Hashtable::removeAll
_TEXT	ENDS
PUBLIC	?setKeyComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z ; icu_56::Hashtable::setKeyComparator
EXTRN	_uhash_setKeyComparator_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setKeyComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keyComp$ = 8						; size = 4
?setKeyComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z PROC ; icu_56::Hashtable::setKeyComparator, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	eax, DWORD PTR _keyComp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_setKeyComparator_56
	add	esp, 8
; Line 200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setKeyComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z ENDP ; icu_56::Hashtable::setKeyComparator
_TEXT	ENDS
PUBLIC	?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z ; icu_56::Hashtable::setValueComparator
EXTRN	_uhash_setValueComparator_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_valueComp$ = 8						; size = 4
?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z PROC ; icu_56::Hashtable::setValueComparator, COMDAT
; _this$ = ecx
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR _valueComp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uhash_setValueComparator_56
	add	esp, 8
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z ENDP ; icu_56::Hashtable::setValueComparator
_TEXT	ENDS
PUBLIC	?equals@Hashtable@icu_56@@QBECABV12@@Z		; icu_56::Hashtable::equals
EXTRN	_uhash_equals_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@Hashtable@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
?equals@Hashtable@icu_56@@QBECABV12@@Z PROC		; icu_56::Hashtable::equals, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_uhash_equals_56
	add	esp, 8
; Line 208
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@Hashtable@icu_56@@QBECABV12@@Z ENDP		; icu_56::Hashtable::equals
_TEXT	ENDS
PUBLIC	??_C@_1BE@DKGONHI@?$AAi?$AAn?$AAc?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EA@KKFNFJCL@?$AAs?$AAr?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAr?$AAc?$AA?$DM?$AAU?$AAP?$AAR?$AAO?$AAP?$AAS?$AA_?$AAS?$AAR?$AAC?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z@4JA ; `icu_56::UnicodeSet_initInclusion'::`2'::__LINE__Var
PUBLIC	?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet_initInclusion
EXTRN	_ucln_common_registerCleanup_56:PROC
EXTRN	_ubidi_addPropertyStarts_56:PROC
EXTRN	_ubidi_getSingleton_56:PROC
EXTRN	?addCanonIterPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2Impl::addCanonIterPropertyStarts
EXTRN	?getNFKC_CFImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2Factory::getNFKC_CFImpl
EXTRN	?getNFKCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2Factory::getNFKCImpl
EXTRN	_ucase_addPropertyStarts_56:PROC
EXTRN	_ucase_getSingleton_56:PROC
EXTRN	?addPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2Impl::addPropertyStarts
EXTRN	?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Normalizer2Factory::getNFCImpl
EXTRN	_upropsvec_addPropertyStarts_56:PROC
EXTRN	_uchar_addPropertyStarts_56:PROC
EXTRN	?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z:PROC ; icu_56::UnicodeSet::ensureCapacity
EXTRN	??0UnicodeSet@icu_56@@QAE@XZ:PROC		; icu_56::UnicodeSet::UnicodeSet
EXTRN	__imp___wassert:PROC
_BSS	SEGMENT
_gInclusions DB	090H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_1BE@DKGONHI@?$AAi?$AAn?$AAc?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\common\uniset_props.cpp
CONST	SEGMENT
??_C@_1BE@DKGONHI@?$AAi?$AAn?$AAc?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@KKFNFJCL@?$AAs?$AAr?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAr?$AAc?$AA?$DM?$AAU?$AAP?$AAR?$AAO?$AAP?$AAS?$AA_?$AAS?$AAR?$AAC?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@KKFNFJCL@?$AAs?$AAr?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAr?$AAc?$AA?$DM?$AAU?$AAP?$AAR?$AAO?$AAP?$AAS?$AA_?$AAS?$AAR?$AAC?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?$AA@ DB 's'
	DB	00H, 'r', 00H, 'c', 00H, ' ', 00H, '>', 00H, '=', 00H, '0', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '<', 00H, 'U', 00H, 'P', 00H, 'R', 00H, 'O', 00H, 'P', 00H
	DB	'S', 00H, '_', 00H, 'S', 00H, 'R', 00H, 'C', 00H, '_', 00H, 'C'
	DB	00H, 'O', 00H, 'U', 00H, 'N', 00H, 'T', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, '_', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 's', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z@4JA DD 09cH ; `icu_56::UnicodeSet_initInclusion'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv204 = -360						; size = 4
tv90 = -360						; size = 4
tv86 = -360						; size = 4
$T83141 = -352						; size = 4
$T83142 = -340						; size = 4
$T83145 = -328						; size = 4
$T83146 = -316						; size = 4
_impl$74419 = -112					; size = 4
_impl$74416 = -100					; size = 4
_impl$74413 = -88					; size = 4
_impl$74410 = -76					; size = 4
_impl$74407 = -64					; size = 4
_sa$ = -52						; size = 24
_incl$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_status$ = 12						; size = 4
?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet_initInclusion, COMDAT
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 160
	cmp	DWORD PTR _src$[ebp], 0
	jl	SHORT $LN23@UnicodeSet
	cmp	DWORD PTR _src$[ebp], 12		; 0000000cH
	jl	SHORT $LN24@UnicodeSet
$LN23@UnicodeSet:
	mov	eax, DWORD PTR ?__LINE__Var@?1??UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z@4JA
	add	eax, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EA@KKFNFJCL@?$AAs?$AAr?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAr?$AAc?$AA?$DM?$AAU?$AAP?$AAR?$AAO?$AAP?$AAS?$AA_?$AAS?$AAR?$AAC?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@UnicodeSet:
; Line 161
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, OFFSET _gInclusions
	mov	DWORD PTR _incl$[ebp], eax
; Line 162
	mov	eax, DWORD PTR _incl$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN25@UnicodeSet
	mov	ecx, DWORD PTR ?__LINE__Var@?1??UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z@4JA
	add	ecx, 6
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BE@DKGONHI@?$AAi?$AAn?$AAc?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@UnicodeSet:
; Line 164
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T83142[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83142[ebp], 0
	je	SHORT $LN26@UnicodeSet
	mov	ecx, DWORD PTR $T83142[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN27@UnicodeSet
$LN26@UnicodeSet:
	mov	DWORD PTR tv86[ebp], 0
$LN27@UnicodeSet:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T83141[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _incl$[ebp]
	mov	edx, DWORD PTR $T83141[ebp]
	mov	DWORD PTR [ecx], edx
; Line 165
	mov	eax, DWORD PTR _incl$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN20@UnicodeSet
; Line 166
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 167
	jmp	$LN21@UnicodeSet
$LN20@UnicodeSet:
; Line 170
	mov	eax, DWORD PTR _incl$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _sa$[ebp], ecx
; Line 171
	mov	DWORD PTR _sa$[ebp+4], OFFSET __set_add
; Line 172
	mov	DWORD PTR _sa$[ebp+8], OFFSET __set_addRange
; Line 173
	mov	DWORD PTR _sa$[ebp+12], OFFSET __set_addString
; Line 174
	mov	DWORD PTR _sa$[ebp+16], 0
; Line 176
	mov	DWORD PTR _sa$[ebp+20], 0
; Line 178
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3072					; 00000c00H
	mov	ecx, DWORD PTR _incl$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::ensureCapacity
; Line 179
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv90[ebp], ecx
	cmp	DWORD PTR tv90[ebp], 10			; 0000000aH
	ja	$LN2@UnicodeSet
	mov	edx, DWORD PTR tv90[ebp]
	jmp	DWORD PTR $LN35@UnicodeSet[edx*4]
$LN17@UnicodeSet:
; Line 181
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_uchar_addPropertyStarts_56
	add	esp, 8
; Line 182
	jmp	$LN18@UnicodeSet
$LN16@UnicodeSet:
; Line 184
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_upropsvec_addPropertyStarts_56
	add	esp, 8
; Line 185
	jmp	$LN18@UnicodeSet
$LN15@UnicodeSet:
; Line 187
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_uchar_addPropertyStarts_56
	add	esp, 8
; Line 188
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_upropsvec_addPropertyStarts_56
	add	esp, 8
; Line 189
	jmp	$LN18@UnicodeSet
$LN14@UnicodeSet:
; Line 192
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Factory::getNFCImpl
	add	esp, 4
	mov	DWORD PTR _impl$74407[ebp], eax
; Line 193
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@UnicodeSet
; Line 194
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _impl$74407[ebp]
	call	?addPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Impl::addPropertyStarts
$LN13@UnicodeSet:
; Line 196
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_ucase_getSingleton_56
	push	eax
	call	_ucase_addPropertyStarts_56
	add	esp, 12					; 0000000cH
; Line 197
	jmp	$LN18@UnicodeSet
$LN12@UnicodeSet:
; Line 200
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Factory::getNFCImpl
	add	esp, 4
	mov	DWORD PTR _impl$74410[ebp], eax
; Line 201
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@UnicodeSet
; Line 202
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _impl$74410[ebp]
	call	?addPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Impl::addPropertyStarts
$LN11@UnicodeSet:
; Line 204
	jmp	$LN18@UnicodeSet
$LN10@UnicodeSet:
; Line 207
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getNFKCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Factory::getNFKCImpl
	add	esp, 4
	mov	DWORD PTR _impl$74413[ebp], eax
; Line 208
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@UnicodeSet
; Line 209
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _impl$74413[ebp]
	call	?addPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Impl::addPropertyStarts
$LN9@UnicodeSet:
; Line 211
	jmp	$LN18@UnicodeSet
$LN8@UnicodeSet:
; Line 214
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getNFKC_CFImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Factory::getNFKC_CFImpl
	add	esp, 4
	mov	DWORD PTR _impl$74416[ebp], eax
; Line 215
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@UnicodeSet
; Line 216
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _impl$74416[ebp]
	call	?addPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Impl::addPropertyStarts
$LN7@UnicodeSet:
; Line 218
	jmp	SHORT $LN18@UnicodeSet
$LN6@UnicodeSet:
; Line 221
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Factory::getNFCImpl
	add	esp, 4
	mov	DWORD PTR _impl$74419[ebp], eax
; Line 222
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@UnicodeSet
; Line 223
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _impl$74419[ebp]
	call	?addCanonIterPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2Impl::addCanonIterPropertyStarts
$LN5@UnicodeSet:
; Line 225
	jmp	SHORT $LN18@UnicodeSet
$LN4@UnicodeSet:
; Line 229
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_ucase_getSingleton_56
	push	eax
	call	_ucase_addPropertyStarts_56
	add	esp, 12					; 0000000cH
; Line 230
	jmp	SHORT $LN18@UnicodeSet
$LN3@UnicodeSet:
; Line 232
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sa$[ebp]
	push	ecx
	call	_ubidi_getSingleton_56
	push	eax
	call	_ubidi_addPropertyStarts_56
	add	esp, 12					; 0000000cH
; Line 233
	jmp	SHORT $LN18@UnicodeSet
$LN2@UnicodeSet:
; Line 235
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
$LN18@UnicodeSet:
; Line 239
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@UnicodeSet
; Line 240
	mov	eax, DWORD PTR _incl$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T83146[ebp], ecx
	mov	edx, DWORD PTR $T83146[ebp]
	mov	DWORD PTR $T83145[ebp], edx
	cmp	DWORD PTR $T83145[ebp], 0
	je	SHORT $LN28@UnicodeSet
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83145[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83145[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv204[ebp], eax
	jmp	SHORT $LN29@UnicodeSet
$LN28@UnicodeSet:
	mov	DWORD PTR tv204[ebp], 0
$LN29@UnicodeSet:
; Line 241
	mov	eax, DWORD PTR _incl$[ebp]
	mov	DWORD PTR [eax], 0
; Line 242
	jmp	SHORT $LN21@UnicodeSet
$LN1@UnicodeSet:
; Line 245
	mov	eax, DWORD PTR _incl$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _incl$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 246
	push	OFFSET _uset_cleanup
	push	10					; 0000000aH
	call	_ucln_common_registerCleanup_56
	add	esp, 8
$LN21@UnicodeSet:
; Line 247
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@UnicodeSet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN34@UnicodeSet:
	DD	1
	DD	$LN33@UnicodeSet
$LN33@UnicodeSet:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN31@UnicodeSet
$LN31@UnicodeSet:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	0
	npad	1
$LN35@UnicodeSet:
	DD	$LN17@UnicodeSet
	DD	$LN16@UnicodeSet
	DD	$LN2@UnicodeSet
	DD	$LN4@UnicodeSet
	DD	$LN3@UnicodeSet
	DD	$LN15@UnicodeSet
	DD	$LN14@UnicodeSet
	DD	$LN12@UnicodeSet
	DD	$LN10@UnicodeSet
	DD	$LN8@UnicodeSet
	DD	$LN6@UnicodeSet
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T83142[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet_initInclusion
EXTRN	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeSet::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __set_add
_TEXT	SEGMENT
_set$ = 8						; size = 4
_c$ = 12						; size = 4
__set_add PROC						; COMDAT
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 117
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__set_add ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __set_addRange
_TEXT	SEGMENT
_set$ = 8						; size = 4
_start$ = 12						; size = 4
_end$ = 16						; size = 4
__set_addRange PROC					; COMDAT
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 121
	mov	esi, esp
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__set_addRange ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z:PROC ; icu_56::UnicodeSet::add
EXTRN	??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC	; icu_56::UnicodeString::UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __set_addString
_TEXT	SEGMENT
$T74367 = -264						; size = 64
__$ArrayPad$ = -4					; size = 4
_set$ = 8						; size = 4
_str$ = 12						; size = 4
_length$ = 16						; size = 4
__set_addString PROC					; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 126
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	cmp	DWORD PTR _length$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR $T74367[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::add
	lea	ecx, DWORD PTR $T74367[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__set_addString ENDP
_TEXT	ENDS
_BSS	SEGMENT
_uni32Singleton DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _uset_cleanup
_TEXT	SEGMENT
tv91 = -268						; size = 4
tv78 = -268						; size = 4
$T83169 = -260						; size = 4
$T83170 = -248						; size = 4
$T83173 = -236						; size = 4
$T83174 = -224						; size = 4
_in$74375 = -20						; size = 4
_i$74371 = -8						; size = 4
_uset_cleanup PROC					; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	DWORD PTR _i$74371[ebp], 0
	jmp	SHORT $LN3@uset_clean
$LN2@uset_clean:
	mov	eax, DWORD PTR _i$74371[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74371[ebp], eax
$LN3@uset_clean:
	cmp	DWORD PTR _i$74371[ebp], 12		; 0000000cH
	jge	SHORT $LN1@uset_clean
; Line 134
	mov	eax, DWORD PTR _i$74371[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, OFFSET _gInclusions
	mov	DWORD PTR _in$74375[ebp], eax
; Line 135
	mov	eax, DWORD PTR _in$74375[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T83170[ebp], ecx
	mov	edx, DWORD PTR $T83170[ebp]
	mov	DWORD PTR $T83169[ebp], edx
	cmp	DWORD PTR $T83169[ebp], 0
	je	SHORT $LN6@uset_clean
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83169[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83169[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN7@uset_clean
$LN6@uset_clean:
	mov	DWORD PTR tv78[ebp], 0
$LN7@uset_clean:
; Line 136
	mov	eax, DWORD PTR _in$74375[ebp]
	mov	DWORD PTR [eax], 0
; Line 137
	mov	ecx, DWORD PTR _in$74375[ebp]
	add	ecx, 4
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 138
	jmp	$LN2@uset_clean
$LN1@uset_clean:
; Line 140
	mov	eax, DWORD PTR _uni32Singleton
	mov	DWORD PTR $T83174[ebp], eax
	mov	ecx, DWORD PTR $T83174[ebp]
	mov	DWORD PTR $T83173[ebp], ecx
	cmp	DWORD PTR $T83173[ebp], 0
	je	SHORT $LN8@uset_clean
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T83173[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T83173[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN9@uset_clean
$LN8@uset_clean:
	mov	DWORD PTR tv91[ebp], 0
$LN9@uset_clean:
; Line 141
	mov	DWORD PTR _uni32Singleton, 0
; Line 142
	mov	ecx, OFFSET _uni32InitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 143
	mov	al, 1
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uset_cleanup ENDP
_TEXT	ENDS
PUBLIC	??$umtx_initOnce@H@icu_56@@YAXAAUUInitOnce@0@P6AXHAAW4UErrorCode@@@ZH1@Z ; icu_56::umtx_initOnce<int>
PUBLIC	?__LINE__Var@?1??getInclusions@UnicodeSet@icu_56@@CAPBV23@HAAW4UErrorCode@@@Z@4JA@406ada55 ; `icu_56::UnicodeSet::getInclusions'::`2'::__LINE__Var
PUBLIC	?getInclusions@UnicodeSet@icu_56@@CAPBV12@HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::getInclusions
;	COMDAT ?__LINE__Var@?1??getInclusions@UnicodeSet@icu_56@@CAPBV23@HAAW4UErrorCode@@@Z@4JA@406ada55
_DATA	SEGMENT
?__LINE__Var@?1??getInclusions@UnicodeSet@icu_56@@CAPBV23@HAAW4UErrorCode@@@Z@4JA@406ada55 DD 0fbH ; `icu_56::UnicodeSet::getInclusions'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getInclusions@UnicodeSet@icu_56@@CAPBV12@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_src$ = 8						; size = 4
_status$ = 12						; size = 4
?getInclusions@UnicodeSet@icu_56@@CAPBV12@HAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::getInclusions, COMDAT
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 252
	cmp	DWORD PTR _src$[ebp], 0
	jl	SHORT $LN3@getInclusi
	cmp	DWORD PTR _src$[ebp], 12		; 0000000cH
	jl	SHORT $LN4@getInclusi
$LN3@getInclusi:
	mov	eax, DWORD PTR ?__LINE__Var@?1??getInclusions@UnicodeSet@icu_56@@CAPBV23@HAAW4UErrorCode@@@Z@4JA@406ada55
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EA@KKFNFJCL@?$AAs?$AAr?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAr?$AAc?$AA?$DM?$AAU?$AAP?$AAR?$AAO?$AAP?$AAS?$AA_?$AAS?$AAR?$AAC?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@getInclusi:
; Line 253
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, OFFSET _gInclusions
	mov	DWORD PTR _i$[ebp], eax
; Line 254
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	push	OFFSET ?UnicodeSet_initInclusion@icu_56@@YAXHAAW4UErrorCode@@@Z ; icu_56::UnicodeSet_initInclusion
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 4
	push	edx
	call	??$umtx_initOnce@H@icu_56@@YAXAAUUInitOnce@0@P6AXHAAW4UErrorCode@@@ZH1@Z ; icu_56::umtx_initOnce<int>
	add	esp, 16					; 00000010H
; Line 255
	mov	eax, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 256
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getInclusions@UnicodeSet@icu_56@@CAPBV12@HAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::getInclusions
_TEXT	ENDS
PUBLIC	??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet
PUBLIC	??_C@_1BI@EDBOAPPB@?$AA?$FL?$AA?3?$AAa?$AAg?$AAe?$AA?$DN?$AA3?$AA?4?$AA2?$AA?3?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@HAOELOAM@?$AAu?$AAn?$AAi?$AA3?$AA2?$AAS?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z@4JA ; `icu_56::createUni32Set'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
PUBLIC	?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z	; icu_56::createUni32Set
EXTRN	?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::freeze
;	COMDAT ??_C@_1BI@EDBOAPPB@?$AA?$FL?$AA?3?$AAa?$AAg?$AAe?$AA?$DN?$AA3?$AA?4?$AA2?$AA?3?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@EDBOAPPB@?$AA?$FL?$AA?3?$AAa?$AAg?$AAe?$AA?$DN?$AA3?$AA?4?$AA2?$AA?3?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, ':', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '=', 00H, '3', 00H
	DB	'.', 00H, '2', 00H, ':', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@HAOELOAM@?$AAu?$AAn?$AAi?$AA3?$AA2?$AAS?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@HAOELOAM@?$AAu?$AAn?$AAi?$AA3?$AA2?$AAS?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'u'
	DB	00H, 'n', 00H, 'i', 00H, '3', 00H, '2', 00H, 'S', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'o', 00H, 'n'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z@4JA DD 0104H ; `icu_56::createUni32Set'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z$1
__ehfuncinfo$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv86 = -328						; size = 4
tv95 = -324						; size = 4
tv131 = -320						; size = 4
$T83185 = -312						; size = 4
$T83186 = -300						; size = 4
$T83190 = -288						; size = 4
$T74450 = -276						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z PROC	; icu_56::createUni32Set, COMDAT
; Line 260
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T83190[ebp], 0
; Line 261
	cmp	DWORD PTR _uni32Singleton, 0
	je	SHORT $LN5@createUni3
	mov	eax, DWORD PTR ?__LINE__Var@?1??createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1CI@HAOELOAM@?$AAu?$AAn?$AAi?$AA3?$AA2?$AAS?$AAi?$AAn?$AAg?$AAl?$AAe?$AAt?$AAo?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@createUni3:
; Line 262
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T83186[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83186[ebp], 0
	je	SHORT $LN6@createUni3
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_1BI@EDBOAPPB@?$AA?$FL?$AA?3?$AAa?$AAg?$AAe?$AA?$DN?$AA3?$AA?4?$AA2?$AA?3?$AA?$FN?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T74450[ebp]
	call	??0UnicodeString@icu_56@@QAE@CPB_WH@Z	; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv95[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T83190[ebp]
	or	edx, 1
	mov	DWORD PTR $T83190[ebp], edx
	mov	eax, DWORD PTR tv95[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83186[ebp]
	call	??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN7@createUni3
$LN6@createUni3:
	mov	DWORD PTR tv86[ebp], 0
$LN7@createUni3:
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T83185[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T83185[ebp]
	mov	DWORD PTR _uni32Singleton, edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T83190[ebp]
	and	eax, 1
	je	SHORT $LN11@createUni3
	and	DWORD PTR $T83190[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T74450[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN11@createUni3:
; Line 263
	cmp	DWORD PTR _uni32Singleton, 0
	jne	SHORT $LN2@createUni3
; Line 264
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 265
	jmp	SHORT $LN1@createUni3
$LN2@createUni3:
; Line 266
	mov	ecx, DWORD PTR _uni32Singleton
	call	?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ ; icu_56::UnicodeSet::freeze
$LN1@createUni3:
; Line 268
	push	OFFSET _uset_cleanup
	push	10					; 0000000aH
	call	_ucln_common_registerCleanup_56
	add	esp, 8
; Line 269
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T83186[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T83190[ebp]
	and	eax, 1
	je	$LN10@createUni3
	and	DWORD PTR $T83190[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T74450[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN10@createUni3:
	ret	0
__ehhandler$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z ENDP	; icu_56::createUni32Set
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
PUBLIC	_uniset_getUnicode32Instance_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uniset_getUnicode32Instance_56
_TEXT	SEGMENT
_errorCode$ = 8						; size = 4
_uniset_getUnicode32Instance_56 PROC			; COMDAT
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 274
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ?createUni32Set@icu_56@@YAXAAW4UErrorCode@@@Z ; icu_56::createUni32Set
	push	OFFSET _uni32InitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
	add	esp, 12					; 0000000cH
; Line 275
	mov	eax, DWORD PTR _uni32Singleton
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uniset_getUnicode32Instance_56 ENDP
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPostInit
EXTRN	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPreInit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_errCode$ = 16						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z PROC ; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO
; Line 259
	jmp	SHORT $LN5@umtx_initO
$LN4@umtx_initO:
; Line 261
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPreInit
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	call	DWORD PTR _fp$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 265
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit
	add	esp, 4
; Line 266
	jmp	SHORT $LN5@umtx_initO
$LN3@umtx_initO:
; Line 268
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO
; Line 269
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO:
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ENDP ; icu_56::umtx_initOnce
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
PUBLIC	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
PUBLIC	??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`vftable'
PUBLIC	??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`vftable'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z:PROC ; icu_56::UnicodeSet::allocateStrings
EXTRN	_uprv_malloc_56:PROC
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; File d:\mozilla\intl\icu\source\common\uniset_props.cpp
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::UnicodeSet, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFilter@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 332
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@UnicodeSet@2
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN2@UnicodeSet@2
; Line 336
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 337
	jmp	SHORT $LN4@UnicodeSet@2
$LN2@UnicodeSet@2:
; Line 338
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::allocateStrings
; Line 339
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
$LN4@UnicodeSet@2:
; Line 343
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
__ehhandler$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::UnicodeSet
PUBLIC	?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPatternIgnoreSpace
EXTRN	?skipWhitespace@ICU_Utility@icu_56@@SAHABVUnicodeString@2@AAHC@Z:PROC ; icu_56::ICU_Utility::skipWhitespace
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T83217 = -268						; size = 4
$T83218 = -256						; size = 4
_i$ = -52						; size = 4
_pos$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyPattern, COMDAT
; _this$ = ecx
; Line 350
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	push	0
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0ParsePosition@icu_56@@QAE@H@Z	; icu_56::ParsePosition::ParsePosition
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 355
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPatternIgnoreSpace
; Line 356
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@applyPatte
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83217[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR $T83217[ebp]
	jmp	SHORT $LN3@applyPatte
$LN2@applyPatte:
; Line 358
	lea	ecx, DWORD PTR _pos$[ebp]
	call	?getIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getIndex
	mov	DWORD PTR _i$[ebp], eax
; Line 360
	push	1
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?skipWhitespace@ICU_Utility@icu_56@@SAHABVUnicodeString@2@AAHC@Z ; icu_56::ICU_Utility::skipWhitespace
	add	esp, 12					; 0000000cH
; Line 361
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _i$[ebp], eax
	je	SHORT $LN1@applyPatte
; Line 362
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@applyPatte:
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83218[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	eax, DWORD PTR $T83218[ebp]
$LN3@applyPatte:
; Line 365
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@applyPatte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN10@applyPatte:
	DD	2
	DD	$LN9@applyPatte
$LN9@applyPatte:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@applyPatte
	DD	-52					; ffffffccH
	DD	4
	DD	$LN7@applyPatte
$LN7@applyPatte:
	DB	105					; 00000069H
	DB	0
$LN6@applyPatte:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _pos$[ebp]
	jmp	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
__ehhandler$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyPattern
PUBLIC	?inVariable@RuleCharacterIterator@icu_56@@QBECXZ ; icu_56::RuleCharacterIterator::inVariable
PUBLIC	?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
PUBLIC	__$ArrayPad$
EXTRN	?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z:PROC ; icu_56::UnicodeSet::setPattern
EXTRN	??0RuleCharacterIterator@icu_56@@QAE@ABVUnicodeString@1@PBVSymbolTable@1@AAVParsePosition@1@@Z:PROC ; icu_56::RuleCharacterIterator::RuleCharacterIterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T83233 = -332						; size = 8
_chars$ = -124						; size = 20
_rebuiltPat$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_pos$ = 12						; size = 4
_symbols$ = 16						; size = 4
_status$ = 20						; size = 4
?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyPatternIgnoreSpace, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@applyPatte@2
; Line 373
	jmp	$LN5@applyPatte@2
$LN4@applyPatte@2:
; Line 375
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@applyPatte@2
; Line 376
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 30			; 0000001eH
; Line 377
	jmp	$LN5@applyPatte@2
$LN3@applyPatte@2:
; Line 381
	lea	ecx, DWORD PTR _rebuiltPat$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 382
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbols$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	lea	ecx, DWORD PTR _chars$[ebp]
	call	??0RuleCharacterIterator@icu_56@@QAE@ABVUnicodeString@1@PBVSymbolTable@1@AAVParsePosition@1@@Z ; icu_56::RuleCharacterIterator::RuleCharacterIterator
; Line 383
	mov	DWORD PTR $T83233[ebp], 0
	mov	DWORD PTR $T83233[ebp+4], 0
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83233[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T83233[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR _rebuiltPat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbols$[ebp]
	push	ecx
	lea	edx, DWORD PTR _chars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
; Line 384
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@applyPatte@2
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rebuiltPat$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	SHORT $LN5@applyPatte@2
$LN2@applyPatte@2:
; Line 385
	lea	ecx, DWORD PTR _chars$[ebp]
	call	?inVariable@RuleCharacterIterator@icu_56@@QBECXZ ; icu_56::RuleCharacterIterator::inVariable
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@applyPatte@2
; Line 387
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 388
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rebuiltPat$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	SHORT $LN5@applyPatte@2
$LN1@applyPatte@2:
; Line 390
	lea	eax, DWORD PTR _rebuiltPat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z ; icu_56::UnicodeSet::setPattern
; Line 391
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rebuiltPat$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN5@applyPatte@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@applyPatte@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN12@applyPatte@2:
	DD	2
	DD	$LN11@applyPatte@2
$LN11@applyPatte@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN8@applyPatte@2
	DD	-124					; ffffff84H
	DD	20					; 00000014H
	DD	$LN9@applyPatte@2
$LN9@applyPatte@2:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN8@applyPatte@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _rebuiltPat$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPatternIgnoreSpace@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@AAVParsePosition@2@PBVSymbolTable@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyPatternIgnoreSpace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?inVariable@RuleCharacterIterator@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?inVariable@RuleCharacterIterator@icu_56@@QBECXZ PROC	; icu_56::RuleCharacterIterator::inVariable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\ruleiter.h
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	setne	al
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?inVariable@RuleCharacterIterator@icu_56@@QBECXZ ENDP	; icu_56::RuleCharacterIterator::inVariable
_TEXT	ENDS
PUBLIC	?resemblesPropertyPattern@UnicodeSet@icu_56@@CACABVUnicodeString@2@H@Z ; icu_56::UnicodeSet::resemblesPropertyPattern
PUBLIC	?resemblesPattern@UnicodeSet@icu_56@@SACABVUnicodeString@2@H@Z ; icu_56::UnicodeSet::resemblesPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resemblesPattern@UnicodeSet@icu_56@@SACABVUnicodeString@2@H@Z
_TEXT	SEGMENT
tv78 = -193						; size = 1
_pattern$ = 8						; size = 4
_pos$ = 12						; size = 4
?resemblesPattern@UnicodeSet@icu_56@@SACABVUnicodeString@2@H@Z PROC ; icu_56::UnicodeSet::resemblesPattern, COMDAT
; File d:\mozilla\intl\icu\source\common\uniset_props.cpp
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	esi, DWORD PTR _pos$[ebp]
	add	esi, 1
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	jge	SHORT $LN3@resemblesP
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 91					; 0000005bH
	je	SHORT $LN4@resemblesP
$LN3@resemblesP:
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	?resemblesPropertyPattern@UnicodeSet@icu_56@@CACABVUnicodeString@2@H@Z ; icu_56::UnicodeSet::resemblesPropertyPattern
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@resemblesP
	mov	BYTE PTR tv78[ebp], 0
	jmp	SHORT $LN5@resemblesP
$LN4@resemblesP:
	mov	BYTE PTR tv78[ebp], 1
$LN5@resemblesP:
	mov	al, BYTE PTR tv78[ebp]
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?resemblesPattern@UnicodeSet@icu_56@@SACABVUnicodeString@2@H@Z ENDP ; icu_56::UnicodeSet::resemblesPattern
_TEXT	ENDS
PUBLIC	?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPropertyPattern
PUBLIC	?pointer@UnicodeSetPointer@icu_56@@QAEPAVUnicodeSet@2@XZ ; icu_56::UnicodeSetPointer::pointer
PUBLIC	?allocate@UnicodeSetPointer@icu_56@@QAECXZ	; icu_56::UnicodeSetPointer::allocate
PUBLIC	??1UnicodeSetPointer@icu_56@@QAE@XZ		; icu_56::UnicodeSetPointer::~UnicodeSetPointer
PUBLIC	?resemblesPropertyPattern@UnicodeSet@icu_56@@CACAAVRuleCharacterIterator@2@H@Z ; icu_56::UnicodeSet::resemblesPropertyPattern
PUBLIC	??_C@_1BFA@BMFHHMJ@?$AA?$CI?$AAl?$AAa?$AAs?$AAt?$AAI?$AAt?$AAe?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAl@ ; `string'
PUBLIC	?__LINE__Var@?1??applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@3@PBVSymbolTable@3@AAVUnicodeString@3@IP823@AEAAV23@H@ZAAW4UErrorCode@@@Z@4JA ; `icu_56::UnicodeSet::applyPattern'::`2'::__LINE__Var
PUBLIC	??0UnicodeSetPointer@icu_56@@QAE@XZ		; icu_56::UnicodeSetPointer::UnicodeSetPointer
PUBLIC	__$ArrayPad$
EXTRN	?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::_generatePattern
EXTRN	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z:PROC ; icu_56::UnicodeSet::_appendToPat
EXTRN	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeSet::operator=
EXTRN	?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::_toPattern
EXTRN	?skipIgnored@RuleCharacterIterator@icu_56@@QAEXH@Z:PROC ; icu_56::RuleCharacterIterator::skipIgnored
EXTRN	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z:PROC ; icu_56::UnicodeSet::_appendToPat
EXTRN	?setPos@RuleCharacterIterator@icu_56@@QAEXABUPos@12@@Z:PROC ; icu_56::RuleCharacterIterator::setPos
EXTRN	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z:PROC ; icu_56::RuleCharacterIterator::next
EXTRN	?getPos@RuleCharacterIterator@icu_56@@QBEXAAUPos@12@@Z:PROC ; icu_56::RuleCharacterIterator::getPos
EXTRN	?atEnd@RuleCharacterIterator@icu_56@@QBECXZ:PROC ; icu_56::RuleCharacterIterator::atEnd
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_C@_1BFA@BMFHHMJ@?$AA?$CI?$AAl?$AAa?$AAs?$AAt?$AAI?$AAt?$AAe?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAl@
CONST	SEGMENT
??_C@_1BFA@BMFHHMJ@?$AA?$CI?$AAl?$AAa?$AAs?$AAt?$AAI?$AAt?$AAe?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAl@ DB '('
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'o', 00H, 'p', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ')', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, '(', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 't', 00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '(', 00H, 'o', 00H, 'p', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '(', 00H, '(', 00H, 'U', 00H, 'C', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, ')', 00H, '0', 00H, 'x', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, 'D', 00H, ')', 00H, ' ', 00H, ')', 00H, ')', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, '(', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '2', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '(', 00H, 'o', 00H, 'p', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, 'o', 00H, 'p', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'(', 00H, '(', 00H, 'U', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ')', 00H, '0', 00H, 'x', 00H, '0', 00H, '0', 00H, '2', 00H
	DB	'D', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'o'
	DB	00H, 'p', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '(', 00H
	DB	'(', 00H, 'U', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ')'
	DB	00H, '0', 00H, 'x', 00H, '0', 00H, '0', 00H, '2', 00H, '6', 00H
	DB	')', 00H, ' ', 00H, ')', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@3@PBVSymbolTable@3@AAVUnicodeString@3@IP823@AEAAV23@H@ZAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@3@PBVSymbolTable@3@AAVUnicodeString@3@IP823@AEAAV23@H@ZAAW4UErrorCode@@@Z@4JA DD 01bcH ; `icu_56::UnicodeSet::applyPattern'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z$2
__ehfuncinfo$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv435 = -580						; size = 4
tv292 = -580						; size = 4
tv272 = -580						; size = 4
tv241 = -580						; size = 4
tv406 = -577						; size = 1
_anchor$74680 = -377					; size = 1
_ok$74668 = -365					; size = 1
_ms$74605 = -356					; size = 4
_m$74603 = -344						; size = 4
_setMode$74586 = -329					; size = 1
_nested$74585 = -320					; size = 4
_literal$74584 = -305					; size = 1
_c$74583 = -296						; size = 4
_invert$ = -281						; size = 1
_op$ = -272						; size = 2
_lastChar$ = -260					; size = 4
_mode$ = -245						; size = 1
_lastItem$ = -233					; size = 1
_backup$ = -224						; size = 12
_scratch$ = -204					; size = 4
_usePat$ = -189						; size = 1
_buf$ = -180						; size = 64
_patLocal$ = -108					; size = 64
_opts$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_chars$ = 8						; size = 4
_symbols$ = 12						; size = 4
_rebuiltPat$ = 16					; size = 4
_options$ = 20						; size = 4
_caseClosure$ = 24					; size = 8
_ec$ = 32						; size = 4
?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyPattern, COMDAT
; _this$ = ecx
; Line 444
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 568				; 00000238H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-580]
	mov	ecx, 142				; 0000008eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN88@applyPatte@3
	jmp	$LN89@applyPatte@3
$LN88@applyPatte@3:
; Line 452
	mov	DWORD PTR _opts$[ebp], 3
; Line 453
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 1
	je	SHORT $LN87@applyPatte@3
; Line 454
	mov	eax, DWORD PTR _opts$[ebp]
	or	eax, 4
	mov	DWORD PTR _opts$[ebp], eax
$LN87@applyPatte@3:
; Line 457
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 458
	mov	BYTE PTR _usePat$[ebp], 0
; Line 459
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??0UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 464
	mov	BYTE PTR _lastItem$[ebp], 0
	mov	BYTE PTR _mode$[ebp], 0
; Line 465
	mov	DWORD PTR _lastChar$[ebp], 0
; Line 466
	xor	eax, eax
	mov	WORD PTR _op$[ebp], ax
; Line 468
	mov	BYTE PTR _invert$[ebp], 0
; Line 470
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN86@applyPatte@3:
; Line 472
	movsx	eax, BYTE PTR _mode$[ebp]
	cmp	eax, 2
	je	$LN85@applyPatte@3
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?atEnd@RuleCharacterIterator@icu_56@@QBECXZ ; icu_56::RuleCharacterIterator::atEnd
	movsx	eax, al
	test	eax, eax
	jne	$LN85@applyPatte@3
; Line 476
	movsx	eax, BYTE PTR _lastItem$[ebp]
	test	eax, eax
	jne	SHORT $LN91@applyPatte@3
	movzx	ecx, WORD PTR _op$[ebp]
	test	ecx, ecx
	je	SHORT $LN92@applyPatte@3
$LN91@applyPatte@3:
	movsx	edx, BYTE PTR _lastItem$[ebp]
	cmp	edx, 1
	jne	SHORT $LN93@applyPatte@3
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	je	SHORT $LN92@applyPatte@3
	movzx	ecx, WORD PTR _op$[ebp]
	cmp	ecx, 45					; 0000002dH
	je	SHORT $LN92@applyPatte@3
$LN93@applyPatte@3:
	movsx	edx, BYTE PTR _lastItem$[ebp]
	cmp	edx, 2
	jne	SHORT $LN96@applyPatte@3
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	je	SHORT $LN92@applyPatte@3
	movzx	ecx, WORD PTR _op$[ebp]
	cmp	ecx, 45					; 0000002dH
	je	SHORT $LN92@applyPatte@3
	movzx	edx, WORD PTR _op$[ebp]
	cmp	edx, 38					; 00000026H
	je	SHORT $LN92@applyPatte@3
$LN96@applyPatte@3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@3@PBVSymbolTable@3@AAVUnicodeString@3@IP823@AEAAV23@H@ZAAW4UErrorCode@@@Z@4JA
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@DKHKKBJA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BFA@BMFHHMJ@?$AA?$CI?$AAl?$AAa?$AAs?$AAt?$AAI?$AAt?$AAe?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAl@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN92@applyPatte@3:
; Line 478
	mov	DWORD PTR _c$74583[ebp], 0
; Line 479
	mov	BYTE PTR _literal$74584[ebp], 0
; Line 480
	mov	DWORD PTR _nested$74585[ebp], 0
; Line 485
	mov	BYTE PTR _setMode$74586[ebp], 0
; Line 486
	mov	eax, DWORD PTR _opts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	push	ecx
	call	?resemblesPropertyPattern@UnicodeSet@icu_56@@CACAAVRuleCharacterIterator@2@H@Z ; icu_56::UnicodeSet::resemblesPropertyPattern
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN84@applyPatte@3
; Line 487
	mov	BYTE PTR _setMode$74586[ebp], 2
; Line 498
	jmp	$LN83@applyPatte@3
$LN84@applyPatte@3:
; Line 500
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?getPos@RuleCharacterIterator@icu_56@@QBEXAAUPos@12@@Z ; icu_56::RuleCharacterIterator::getPos
; Line 501
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$74584[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$74583[ebp], eax
; Line 502
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN82@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN82@applyPatte@3:
; Line 504
	cmp	DWORD PTR _c$74583[ebp], 91		; 0000005bH
	jne	$LN81@applyPatte@3
	movsx	eax, BYTE PTR _literal$74584[ebp]
	test	eax, eax
	jne	$LN81@applyPatte@3
; Line 505
	movsx	eax, BYTE PTR _mode$[ebp]
	cmp	eax, 1
	jne	SHORT $LN80@applyPatte@3
; Line 506
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?setPos@RuleCharacterIterator@icu_56@@QAEXABUPos@12@@Z ; icu_56::RuleCharacterIterator::setPos
; Line 507
	mov	BYTE PTR _setMode$74586[ebp], 1
; Line 508
	jmp	$LN79@applyPatte@3
$LN80@applyPatte@3:
; Line 510
	mov	BYTE PTR _mode$[ebp], 1
; Line 511
	push	91					; 0000005bH
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 512
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?getPos@RuleCharacterIterator@icu_56@@QBEXAAUPos@12@@Z ; icu_56::RuleCharacterIterator::getPos
; Line 513
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$74584[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$74583[ebp], eax
; Line 514
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN78@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN78@applyPatte@3:
; Line 515
	cmp	DWORD PTR _c$74583[ebp], 94		; 0000005eH
	jne	$LN77@applyPatte@3
	movsx	eax, BYTE PTR _literal$74584[ebp]
	test	eax, eax
	jne	$LN77@applyPatte@3
; Line 516
	mov	BYTE PTR _invert$[ebp], 1
; Line 517
	push	94					; 0000005eH
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 518
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?getPos@RuleCharacterIterator@icu_56@@QBEXAAUPos@12@@Z ; icu_56::RuleCharacterIterator::getPos
; Line 519
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$74584[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$74583[ebp], eax
; Line 520
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN77@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN77@applyPatte@3:
; Line 524
	cmp	DWORD PTR _c$74583[ebp], 45		; 0000002dH
	jne	SHORT $LN75@applyPatte@3
; Line 525
	mov	BYTE PTR _literal$74584[ebp], 1
; Line 527
	jmp	SHORT $LN79@applyPatte@3
$LN75@applyPatte@3:
; Line 528
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?setPos@RuleCharacterIterator@icu_56@@QAEXABUPos@12@@Z ; icu_56::RuleCharacterIterator::setPos
; Line 529
	jmp	$LN86@applyPatte@3
$LN79@applyPatte@3:
; Line 531
	jmp	$LN83@applyPatte@3
$LN81@applyPatte@3:
; Line 532
	cmp	DWORD PTR _symbols$[ebp], 0
	je	$LN83@applyPatte@3
; Line 533
	mov	esi, esp
	mov	eax, DWORD PTR _c$74583[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbols$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _symbols$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _m$74603[ebp], eax
; Line 534
	cmp	DWORD PTR _m$74603[ebp], 0
	je	SHORT $LN83@applyPatte@3
; Line 535
	push	0
	push	OFFSET ??_R0?AVUnicodeSet@icu_56@@@8
	push	OFFSET ??_R0?AVUnicodeFunctor@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _m$74603[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ms$74605[ebp], eax
; Line 536
	cmp	DWORD PTR _ms$74605[ebp], 0
	jne	SHORT $LN70@applyPatte@3
; Line 537
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 538
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN70@applyPatte@3:
; Line 542
	mov	eax, DWORD PTR _ms$74605[ebp]
	mov	DWORD PTR _nested$74585[ebp], eax
; Line 543
	mov	BYTE PTR _setMode$74586[ebp], 3
$LN83@applyPatte@3:
; Line 553
	movsx	eax, BYTE PTR _setMode$74586[ebp]
	test	eax, eax
	je	$LN69@applyPatte@3
; Line 554
	movsx	eax, BYTE PTR _lastItem$[ebp]
	cmp	eax, 1
	jne	$LN68@applyPatte@3
; Line 555
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	je	SHORT $LN67@applyPatte@3
; Line 557
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 558
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN67@applyPatte@3:
; Line 560
	mov	esi, esp
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 561
	push	0
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 562
	mov	BYTE PTR _lastItem$[ebp], 0
; Line 563
	xor	eax, eax
	mov	WORD PTR _op$[ebp], ax
$LN68@applyPatte@3:
; Line 566
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN65@applyPatte@3
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 38					; 00000026H
	jne	SHORT $LN66@applyPatte@3
$LN65@applyPatte@3:
; Line 567
	movzx	eax, WORD PTR _op$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
$LN66@applyPatte@3:
; Line 570
	cmp	DWORD PTR _nested$74585[ebp], 0
	jne	SHORT $LN64@applyPatte@3
; Line 572
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	?allocate@UnicodeSetPointer@icu_56@@QAECXZ ; icu_56::UnicodeSetPointer::allocate
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN63@applyPatte@3
; Line 573
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
; Line 574
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN63@applyPatte@3:
; Line 576
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	?pointer@UnicodeSetPointer@icu_56@@QAEPAVUnicodeSet@2@XZ ; icu_56::UnicodeSetPointer::pointer
	mov	DWORD PTR _nested$74585[ebp], eax
$LN64@applyPatte@3:
; Line 578
	mov	al, BYTE PTR _setMode$74586[ebp]
	mov	BYTE PTR tv241[ebp], al
	cmp	BYTE PTR tv241[ebp], 1
	je	SHORT $LN60@applyPatte@3
	cmp	BYTE PTR tv241[ebp], 2
	je	SHORT $LN59@applyPatte@3
	cmp	BYTE PTR tv241[ebp], 3
	je	$LN57@applyPatte@3
	jmp	$LN61@applyPatte@3
$LN60@applyPatte@3:
; Line 580
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _caseClosure$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _caseClosure$[ebp]
	push	edx
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _symbols$[ebp]
	push	edx
	mov	eax, DWORD PTR _chars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nested$74585[ebp]
	call	?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPattern
; Line 581
	jmp	SHORT $LN61@applyPatte@3
$LN59@applyPatte@3:
; Line 583
	mov	eax, DWORD PTR _opts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?skipIgnored@RuleCharacterIterator@icu_56@@QAEXH@Z ; icu_56::RuleCharacterIterator::skipIgnored
; Line 584
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _chars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _nested$74585[ebp]
	call	?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPropertyPattern
; Line 585
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN58@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN58@applyPatte@3:
; Line 586
	jmp	SHORT $LN61@applyPatte@3
$LN57@applyPatte@3:
; Line 588
	push	0
	lea	eax, DWORD PTR _patLocal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nested$74585[ebp]
	call	?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::_toPattern
$LN61@applyPatte@3:
; Line 592
	mov	BYTE PTR _usePat$[ebp], 1
; Line 594
	movsx	eax, BYTE PTR _mode$[ebp]
	test	eax, eax
	jne	SHORT $LN56@applyPatte@3
; Line 596
	mov	eax, DWORD PTR _nested$74585[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeSet::operator=
; Line 597
	mov	BYTE PTR _mode$[ebp], 2
; Line 598
	jmp	$LN85@applyPatte@3
$LN56@applyPatte@3:
; Line 601
	movzx	eax, WORD PTR _op$[ebp]
	mov	DWORD PTR tv272[ebp], eax
	cmp	DWORD PTR tv272[ebp], 0
	je	SHORT $LN51@applyPatte@3
	cmp	DWORD PTR tv272[ebp], 38		; 00000026H
	je	SHORT $LN52@applyPatte@3
	cmp	DWORD PTR tv272[ebp], 45		; 0000002dH
	je	SHORT $LN53@applyPatte@3
	jmp	SHORT $LN54@applyPatte@3
$LN53@applyPatte@3:
; Line 603
	mov	esi, esp
	mov	eax, DWORD PTR _nested$74585[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 604
	jmp	SHORT $LN54@applyPatte@3
$LN52@applyPatte@3:
; Line 606
	mov	esi, esp
	mov	eax, DWORD PTR _nested$74585[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 607
	jmp	SHORT $LN54@applyPatte@3
$LN51@applyPatte@3:
; Line 609
	mov	esi, esp
	mov	eax, DWORD PTR _nested$74585[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN54@applyPatte@3:
; Line 613
	xor	eax, eax
	mov	WORD PTR _op$[ebp], ax
; Line 614
	mov	BYTE PTR _lastItem$[ebp], 2
; Line 616
	jmp	$LN86@applyPatte@3
$LN69@applyPatte@3:
; Line 619
	movsx	eax, BYTE PTR _mode$[ebp]
	test	eax, eax
	jne	SHORT $LN50@applyPatte@3
; Line 621
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 622
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN50@applyPatte@3:
; Line 629
	movsx	eax, BYTE PTR _literal$74584[ebp]
	test	eax, eax
	jne	$LN49@applyPatte@3
; Line 630
	mov	eax, DWORD PTR _c$74583[ebp]
	mov	DWORD PTR tv292[ebp], eax
	mov	ecx, DWORD PTR tv292[ebp]
	sub	ecx, 36					; 00000024H
	mov	DWORD PTR tv292[ebp], ecx
	cmp	DWORD PTR tv292[ebp], 87		; 00000057H
	ja	$LN49@applyPatte@3
	mov	edx, DWORD PTR tv292[ebp]
	movzx	eax, BYTE PTR $LN110@applyPatte@3[edx]
	jmp	DWORD PTR $LN119@applyPatte@3[eax*4]
$LN46@applyPatte@3:
; Line 632
	movsx	eax, BYTE PTR _lastItem$[ebp]
	cmp	eax, 1
	jne	SHORT $LN45@applyPatte@3
; Line 633
	mov	esi, esp
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	push	0
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
$LN45@applyPatte@3:
; Line 637
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN44@applyPatte@3
; Line 638
	movzx	eax, WORD PTR _op$[ebp]
	mov	esi, esp
	push	eax
	movzx	ecx, WORD PTR _op$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 639
	movzx	eax, WORD PTR _op$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
	jmp	SHORT $LN43@applyPatte@3
$LN44@applyPatte@3:
; Line 640
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 38					; 00000026H
	jne	SHORT $LN43@applyPatte@3
; Line 642
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 643
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN43@applyPatte@3:
; Line 645
	push	93					; 0000005dH
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 646
	mov	BYTE PTR _mode$[ebp], 2
; Line 647
	jmp	$LN86@applyPatte@3
$LN41@applyPatte@3:
; Line 649
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	jne	$LN40@applyPatte@3
; Line 650
	movsx	eax, BYTE PTR _lastItem$[ebp]
	test	eax, eax
	je	SHORT $LN39@applyPatte@3
; Line 651
	mov	ax, WORD PTR _c$74583[ebp]
	mov	WORD PTR _op$[ebp], ax
; Line 652
	jmp	$LN86@applyPatte@3
; Line 653
	jmp	$LN40@applyPatte@3
$LN39@applyPatte@3:
; Line 655
	mov	esi, esp
	mov	eax, DWORD PTR _c$74583[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$74583[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 656
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$74584[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$74583[ebp], eax
; Line 657
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN37@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN37@applyPatte@3:
; Line 658
	cmp	DWORD PTR _c$74583[ebp], 93		; 0000005dH
	jne	SHORT $LN40@applyPatte@3
	movsx	eax, BYTE PTR _literal$74584[ebp]
	test	eax, eax
	jne	SHORT $LN40@applyPatte@3
; Line 659
	push	2
	push	OFFSET _HYPHEN_RIGHT_BRACE
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ; icu_56::UnicodeString::append
; Line 660
	mov	BYTE PTR _mode$[ebp], 2
; Line 661
	jmp	$LN86@applyPatte@3
$LN40@applyPatte@3:
; Line 666
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 667
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN35@applyPatte@3:
; Line 669
	movsx	eax, BYTE PTR _lastItem$[ebp]
	cmp	eax, 2
	jne	SHORT $LN34@applyPatte@3
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	jne	SHORT $LN34@applyPatte@3
; Line 670
	mov	ax, WORD PTR _c$74583[ebp]
	mov	WORD PTR _op$[ebp], ax
; Line 671
	jmp	$LN86@applyPatte@3
$LN34@applyPatte@3:
; Line 674
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 675
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN33@applyPatte@3:
; Line 678
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 679
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN32@applyPatte@3:
; Line 681
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	je	SHORT $LN31@applyPatte@3
; Line 683
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 684
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN31@applyPatte@3:
; Line 686
	movsx	eax, BYTE PTR _lastItem$[ebp]
	cmp	eax, 1
	jne	SHORT $LN30@applyPatte@3
; Line 687
	mov	esi, esp
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 688
	push	0
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
$LN30@applyPatte@3:
; Line 690
	mov	BYTE PTR _lastItem$[ebp], 0
; Line 691
	push	0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 693
	mov	BYTE PTR _ok$74668[ebp], 0
$LN29@applyPatte@3:
; Line 694
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?atEnd@RuleCharacterIterator@icu_56@@QBECXZ ; icu_56::RuleCharacterIterator::atEnd
	movsx	eax, al
	test	eax, eax
	jne	$LN28@applyPatte@3
; Line 695
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$74584[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$74583[ebp], eax
; Line 696
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN27@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN27@applyPatte@3:
; Line 697
	cmp	DWORD PTR _c$74583[ebp], 125		; 0000007dH
	jne	SHORT $LN26@applyPatte@3
	movsx	eax, BYTE PTR _literal$74584[ebp]
	test	eax, eax
	jne	SHORT $LN26@applyPatte@3
; Line 698
	mov	BYTE PTR _ok$74668[ebp], 1
; Line 699
	jmp	SHORT $LN28@applyPatte@3
$LN26@applyPatte@3:
; Line 701
	mov	eax, DWORD PTR _c$74583[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 702
	jmp	$LN29@applyPatte@3
$LN28@applyPatte@3:
; Line 703
	lea	ecx, DWORD PTR _buf$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	eax, 1
	jl	SHORT $LN24@applyPatte@3
	movsx	eax, BYTE PTR _ok$74668[ebp]
	test	eax, eax
	jne	SHORT $LN25@applyPatte@3
$LN24@applyPatte@3:
; Line 705
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 706
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN25@applyPatte@3:
; Line 712
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z ; icu_56::UnicodeSet::add
; Line 713
	push	123					; 0000007bH
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 714
	push	0
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 715
	push	125					; 0000007dH
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 716
	jmp	$LN86@applyPatte@3
$LN23@applyPatte@3:
; Line 725
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?getPos@RuleCharacterIterator@icu_56@@QBEXAAUPos@12@@Z ; icu_56::RuleCharacterIterator::getPos
; Line 726
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$74584[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$74583[ebp], eax
; Line 727
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@applyPatte@3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN22@applyPatte@3:
; Line 728
	cmp	DWORD PTR _c$74583[ebp], 93		; 0000005dH
	jne	SHORT $LN97@applyPatte@3
	movsx	eax, BYTE PTR _literal$74584[ebp]
	test	eax, eax
	jne	SHORT $LN97@applyPatte@3
	mov	BYTE PTR tv406[ebp], 1
	jmp	SHORT $LN98@applyPatte@3
$LN97@applyPatte@3:
	mov	BYTE PTR tv406[ebp], 0
$LN98@applyPatte@3:
	mov	cl, BYTE PTR tv406[ebp]
	mov	BYTE PTR _anchor$74680[ebp], cl
; Line 729
	cmp	DWORD PTR _symbols$[ebp], 0
	jne	SHORT $LN21@applyPatte@3
	movsx	eax, BYTE PTR _anchor$74680[ebp]
	test	eax, eax
	jne	SHORT $LN21@applyPatte@3
; Line 730
	mov	DWORD PTR _c$74583[ebp], 36		; 00000024H
; Line 731
	lea	eax, DWORD PTR _backup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?setPos@RuleCharacterIterator@icu_56@@QAEXABUPos@12@@Z ; icu_56::RuleCharacterIterator::setPos
; Line 732
	jmp	$LN49@applyPatte@3
$LN21@applyPatte@3:
; Line 734
	movsx	eax, BYTE PTR _anchor$74680[ebp]
	test	eax, eax
	je	$LN20@applyPatte@3
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	jne	SHORT $LN20@applyPatte@3
; Line 735
	movsx	eax, BYTE PTR _lastItem$[ebp]
	cmp	eax, 1
	jne	SHORT $LN19@applyPatte@3
; Line 736
	mov	esi, esp
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 737
	push	0
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
$LN19@applyPatte@3:
; Line 739
	push	65535					; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 740
	mov	BYTE PTR _usePat$[ebp], 1
; Line 741
	push	36					; 00000024H
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 742
	push	93					; 0000005dH
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 743
	mov	BYTE PTR _mode$[ebp], 2
; Line 744
	jmp	$LN86@applyPatte@3
$LN20@applyPatte@3:
; Line 747
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 748
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN49@applyPatte@3:
; Line 759
	mov	al, BYTE PTR _lastItem$[ebp]
	mov	BYTE PTR tv435[ebp], al
	cmp	BYTE PTR tv435[ebp], 0
	je	SHORT $LN15@applyPatte@3
	cmp	BYTE PTR tv435[ebp], 1
	je	SHORT $LN14@applyPatte@3
	cmp	BYTE PTR tv435[ebp], 2
	je	$LN10@applyPatte@3
	jmp	$LN16@applyPatte@3
$LN15@applyPatte@3:
; Line 761
	mov	BYTE PTR _lastItem$[ebp], 1
; Line 762
	mov	eax, DWORD PTR _c$74583[ebp]
	mov	DWORD PTR _lastChar$[ebp], eax
; Line 763
	jmp	$LN16@applyPatte@3
$LN14@applyPatte@3:
; Line 765
	movzx	eax, WORD PTR _op$[ebp]
	cmp	eax, 45					; 0000002dH
	jne	$LN13@applyPatte@3
; Line 766
	mov	eax, DWORD PTR _lastChar$[ebp]
	cmp	eax, DWORD PTR _c$74583[ebp]
	jl	SHORT $LN12@applyPatte@3
; Line 770
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 771
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN12@applyPatte@3:
; Line 773
	mov	esi, esp
	mov	eax, DWORD PTR _c$74583[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 774
	push	0
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 775
	movzx	eax, WORD PTR _op$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append
; Line 776
	push	0
	mov	eax, DWORD PTR _c$74583[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 777
	mov	BYTE PTR _lastItem$[ebp], 0
; Line 778
	xor	eax, eax
	mov	WORD PTR _op$[ebp], ax
; Line 779
	jmp	SHORT $LN11@applyPatte@3
$LN13@applyPatte@3:
; Line 780
	mov	esi, esp
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 781
	push	0
	mov	eax, DWORD PTR _lastChar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLocal$[ebp]
	push	ecx
	call	?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z ; icu_56::UnicodeSet::_appendToPat
	add	esp, 12					; 0000000cH
; Line 782
	mov	eax, DWORD PTR _c$74583[ebp]
	mov	DWORD PTR _lastChar$[ebp], eax
$LN11@applyPatte@3:
; Line 784
	jmp	SHORT $LN16@applyPatte@3
$LN10@applyPatte@3:
; Line 786
	movzx	eax, WORD PTR _op$[ebp]
	test	eax, eax
	je	SHORT $LN9@applyPatte@3
; Line 788
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 789
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN9@applyPatte@3:
; Line 791
	mov	eax, DWORD PTR _c$74583[ebp]
	mov	DWORD PTR _lastChar$[ebp], eax
; Line 792
	mov	BYTE PTR _lastItem$[ebp], 1
$LN16@applyPatte@3:
; Line 795
	jmp	$LN86@applyPatte@3
$LN85@applyPatte@3:
; Line 797
	movsx	eax, BYTE PTR _mode$[ebp]
	cmp	eax, 2
	je	SHORT $LN8@applyPatte@3
; Line 799
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 800
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	$LN89@applyPatte@3
$LN8@applyPatte@3:
; Line 803
	mov	eax, DWORD PTR _opts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?skipIgnored@RuleCharacterIterator@icu_56@@QAEXH@Z ; icu_56::RuleCharacterIterator::skipIgnored
; Line 811
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 2
	je	SHORT $LN7@applyPatte@3
; Line 812
	mov	esi, esp
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _caseClosure$[ebp+4]
	call	DWORD PTR _caseClosure$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@applyPatte@3
$LN7@applyPatte@3:
; Line 814
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 4
	je	SHORT $LN6@applyPatte@3
; Line 815
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _caseClosure$[ebp+4]
	call	DWORD PTR _caseClosure$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@applyPatte@3:
; Line 817
	movsx	eax, BYTE PTR _invert$[ebp]
	test	eax, eax
	je	SHORT $LN4@applyPatte@3
; Line 818
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@applyPatte@3:
; Line 823
	movsx	eax, BYTE PTR _usePat$[ebp]
	test	eax, eax
	je	SHORT $LN3@applyPatte@3
; Line 824
	lea	eax, DWORD PTR _patLocal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rebuiltPat$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::UnicodeString::append
; Line 825
	jmp	SHORT $LN2@applyPatte@3
$LN3@applyPatte@3:
; Line 826
	push	0
	mov	eax, DWORD PTR _rebuiltPat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z ; icu_56::UnicodeSet::_generatePattern
$LN2@applyPatte@3:
; Line 828
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@applyPatte@3
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@applyPatte@3
; Line 830
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@applyPatte@3:
; Line 832
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scratch$[ebp]
	call	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patLocal$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN89@applyPatte@3:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN118@applyPatte@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 580				; 00000244H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	3
$LN118@applyPatte@3:
	DD	5
	DD	$LN117@applyPatte@3
$LN117@applyPatte@3:
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN111@applyPatte@3
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$LN112@applyPatte@3
	DD	-204					; ffffff34H
	DD	4
	DD	$LN113@applyPatte@3
	DD	-224					; ffffff20H
	DD	12					; 0000000cH
	DD	$LN114@applyPatte@3
	DD	-305					; fffffecfH
	DD	1
	DD	$LN115@applyPatte@3
$LN115@applyPatte@3:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN114@applyPatte@3:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	0
$LN113@applyPatte@3:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
$LN112@applyPatte@3:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN111@applyPatte@3:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN119@applyPatte@3:
	DD	$LN23@applyPatte@3
	DD	$LN35@applyPatte@3
	DD	$LN41@applyPatte@3
	DD	$LN46@applyPatte@3
	DD	$LN33@applyPatte@3
	DD	$LN32@applyPatte@3
	DD	$LN49@applyPatte@3
$LN110@applyPatte@3:
	DB	0
	DB	6
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	3
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _patLocal$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _buf$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _scratch$[ebp]
	jmp	??1UnicodeSetPointer@icu_56@@QAE@XZ	; icu_56::UnicodeSetPointer::~UnicodeSetPointer
__ehhandler$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-584]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@PBVSymbolTable@2@AAVUnicodeString@2@IP812@AEAAV12@H@ZAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeSetPointer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeSetPointer@icu_56@@QAE@XZ PROC		; icu_56::UnicodeSetPointer::UnicodeSetPointer, COMDAT
; _this$ = ecx
; Line 414
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeSetPointer@icu_56@@QAE@XZ ENDP		; icu_56::UnicodeSetPointer::UnicodeSetPointer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1UnicodeSetPointer@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T83294 = -224						; size = 4
$T83295 = -212						; size = 4
_this$ = -8						; size = 4
??1UnicodeSetPointer@icu_56@@QAE@XZ PROC		; icu_56::UnicodeSetPointer::~UnicodeSetPointer, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T83295[ebp], ecx
	mov	edx, DWORD PTR $T83295[ebp]
	mov	DWORD PTR $T83294[ebp], edx
	cmp	DWORD PTR $T83294[ebp], 0
	je	SHORT $LN3@UnicodeSet@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83294[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83294[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@UnicodeSet@3
$LN3@UnicodeSet@3:
	mov	DWORD PTR tv74[ebp], 0
$LN1@UnicodeSet@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UnicodeSetPointer@icu_56@@QAE@XZ ENDP		; icu_56::UnicodeSetPointer::~UnicodeSetPointer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?pointer@UnicodeSetPointer@icu_56@@QAEPAVUnicodeSet@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?pointer@UnicodeSetPointer@icu_56@@QAEPAVUnicodeSet@2@XZ PROC ; icu_56::UnicodeSetPointer::pointer, COMDAT
; _this$ = ecx
; Line 416
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer@UnicodeSetPointer@icu_56@@QAEPAVUnicodeSet@2@XZ ENDP ; icu_56::UnicodeSetPointer::pointer
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?allocate@UnicodeSetPointer@icu_56@@QAECXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?allocate@UnicodeSetPointer@icu_56@@QAECXZ$0
__ehfuncinfo$?allocate@UnicodeSetPointer@icu_56@@QAECXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?allocate@UnicodeSetPointer@icu_56@@QAECXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?allocate@UnicodeSetPointer@icu_56@@QAECXZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T83302 = -236						; size = 4
$T83303 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?allocate@UnicodeSetPointer@icu_56@@QAECXZ PROC		; icu_56::UnicodeSetPointer::allocate, COMDAT
; _this$ = ecx
; Line 417
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?allocate@UnicodeSetPointer@icu_56@@QAECXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 418
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@allocate
; Line 419
	push	52					; 00000034H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T83303[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T83303[ebp], 0
	je	SHORT $LN4@allocate
	mov	ecx, DWORD PTR $T83303[ebp]
	call	??0UnicodeSet@icu_56@@QAE@XZ		; icu_56::UnicodeSet::UnicodeSet
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN5@allocate
$LN4@allocate:
	mov	DWORD PTR tv72[ebp], 0
$LN5@allocate:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T83302[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T83302[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@allocate:
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	setne	al
; Line 422
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?allocate@UnicodeSetPointer@icu_56@@QAECXZ$0:
	mov	eax, DWORD PTR $T83303[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?allocate@UnicodeSetPointer@icu_56@@QAECXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?allocate@UnicodeSetPointer@icu_56@@QAECXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?allocate@UnicodeSetPointer@icu_56@@QAECXZ ENDP		; icu_56::UnicodeSetPointer::allocate
PUBLIC	?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ch$74770 = -92						; size = 4
_end$74769 = -80					; size = 4
_start$74768 = -68					; size = 4
_j$74764 = -56						; size = 4
_limitRange$ = -44					; size = 4
_startHasProperty$ = -32				; size = 4
_inclusions$ = -20					; size = 4
_this$ = -8						; size = 4
_filter$ = 8						; size = 4
_context$ = 12						; size = 4
_src$ = 16						; size = 4
_status$ = 20						; size = 4
?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyFilter, COMDAT
; _this$ = ecx
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 876
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@applyFilte
	jmp	$LN15@applyFilte
$LN14@applyFilte:
; Line 887
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	call	?getInclusions@UnicodeSet@icu_56@@CAPBV12@HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::getInclusions
	add	esp, 8
	mov	DWORD PTR _inclusions$[ebp], eax
; Line 888
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@applyFilte
; Line 889
	jmp	$LN15@applyFilte
$LN13@applyFilte:
; Line 892
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 894
	mov	DWORD PTR _startHasProperty$[ebp], -1
; Line 895
	mov	eax, DWORD PTR _inclusions$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _inclusions$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limitRange$[ebp], eax
; Line 897
	mov	DWORD PTR _j$74764[ebp], 0
	jmp	SHORT $LN12@applyFilte
$LN11@applyFilte:
	mov	eax, DWORD PTR _j$74764[ebp]
	add	eax, 1
	mov	DWORD PTR _j$74764[ebp], eax
$LN12@applyFilte:
	mov	eax, DWORD PTR _j$74764[ebp]
	cmp	eax, DWORD PTR _limitRange$[ebp]
	jge	$LN10@applyFilte
; Line 899
	mov	esi, esp
	mov	eax, DWORD PTR _j$74764[ebp]
	push	eax
	mov	ecx, DWORD PTR _inclusions$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _inclusions$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$74768[ebp], eax
; Line 900
	mov	esi, esp
	mov	eax, DWORD PTR _j$74764[ebp]
	push	eax
	mov	ecx, DWORD PTR _inclusions$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _inclusions$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$74769[ebp], eax
; Line 903
	mov	eax, DWORD PTR _start$74768[ebp]
	mov	DWORD PTR _ch$74770[ebp], eax
	jmp	SHORT $LN9@applyFilte
$LN8@applyFilte:
	mov	eax, DWORD PTR _ch$74770[ebp]
	add	eax, 1
	mov	DWORD PTR _ch$74770[ebp], eax
$LN9@applyFilte:
	mov	eax, DWORD PTR _ch$74770[ebp]
	cmp	eax, DWORD PTR _end$74769[ebp]
	jg	SHORT $LN7@applyFilte
; Line 906
	mov	esi, esp
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ch$74770[ebp]
	push	ecx
	call	DWORD PTR _filter$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@applyFilte
; Line 907
	cmp	DWORD PTR _startHasProperty$[ebp], 0
	jge	SHORT $LN5@applyFilte
; Line 908
	mov	eax, DWORD PTR _ch$74770[ebp]
	mov	DWORD PTR _startHasProperty$[ebp], eax
$LN5@applyFilte:
; Line 909
	jmp	SHORT $LN4@applyFilte
$LN6@applyFilte:
; Line 910
	cmp	DWORD PTR _startHasProperty$[ebp], 0
	jl	SHORT $LN4@applyFilte
; Line 911
	mov	eax, DWORD PTR _ch$74770[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _startHasProperty$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 912
	mov	DWORD PTR _startHasProperty$[ebp], -1
$LN4@applyFilte:
; Line 914
	jmp	SHORT $LN8@applyFilte
$LN7@applyFilte:
; Line 915
	jmp	$LN11@applyFilte
$LN10@applyFilte:
; Line 916
	cmp	DWORD PTR _startHasProperty$[ebp], 0
	jl	SHORT $LN2@applyFilte
; Line 917
	mov	esi, esp
	push	1114111					; 0010ffffH
	mov	eax, DWORD PTR _startHasProperty$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@applyFilte:
; Line 919
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@applyFilte
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@applyFilte
; Line 921
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN15@applyFilte:
; Line 923
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyFilter
_TEXT	ENDS
PUBLIC	?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyIntPropertyValue
EXTRN	_uprops_getSource_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_c$74811 = -36						; size = 8
_script$74808 = -20					; size = 4
_this$ = -8						; size = 4
_prop$ = 8						; size = 4
_value$ = 12						; size = 4
_ec$ = 16						; size = 4
?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyIntPropertyValue, COMDAT
; _this$ = ecx
; Line 949
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 950
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN5@applyIntPr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@applyIntPr
$LN5@applyIntPr:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN7@applyIntPr
$LN6@applyIntPr:
; Line 952
	cmp	DWORD PTR _prop$[ebp], 8192		; 00002000H
	jne	SHORT $LN4@applyIntPr
; Line 953
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _value$[ebp]
	push	ecx
	push	OFFSET ?generalCategoryMaskFilter@icu_56@@YACHPAX@Z ; icu_56::generalCategoryMaskFilter
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyFilter
	jmp	SHORT $LN3@applyIntPr
$LN4@applyIntPr:
; Line 954
	cmp	DWORD PTR _prop$[ebp], 28672		; 00007000H
	jne	SHORT $LN2@applyIntPr
; Line 955
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _script$74808[ebp], eax
; Line 956
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _script$74808[ebp]
	push	ecx
	push	OFFSET ?scriptExtensionsFilter@icu_56@@YACHPAX@Z ; icu_56::scriptExtensionsFilter
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyFilter
; Line 957
	jmp	SHORT $LN3@applyIntPr
$LN2@applyIntPr:
; Line 958
	mov	eax, DWORD PTR _prop$[ebp]
	mov	DWORD PTR _c$74811[ebp], eax
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _c$74811[ebp+4], eax
; Line 959
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	call	_uprops_getSource_56
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR _c$74811[ebp]
	push	edx
	push	OFFSET ?intPropertyFilter@icu_56@@YACHPAX@Z ; icu_56::intPropertyFilter
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyFilter
$LN3@applyIntPr:
; Line 961
	mov	eax, DWORD PTR _this$[ebp]
$LN7@applyIntPr:
; Line 962
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@applyIntPr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN12@applyIntPr:
	DD	2
	DD	$LN11@applyIntPr
$LN11@applyIntPr:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@applyIntPr
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN10@applyIntPr
$LN10@applyIntPr:
	DB	99					; 00000063H
	DB	0
$LN9@applyIntPr:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyIntPropertyValue
_TEXT	ENDS
EXTRN	_u_charType_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?generalCategoryMaskFilter@icu_56@@YACHPAX@Z
_TEXT	SEGMENT
_value$ = -8						; size = 4
_ch$ = 8						; size = 4
_context$ = 12						; size = 4
?generalCategoryMaskFilter@icu_56@@YACHPAX@Z PROC	; icu_56::generalCategoryMaskFilter, COMDAT
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 843
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _value$[ebp], ecx
; Line 844
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_u_charType_56
	add	esp, 4
	movsx	ecx, al
	mov	edx, 1
	shl	edx, cl
	and	edx, DWORD PTR _value$[ebp]
	setne	al
; Line 845
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?generalCategoryMaskFilter@icu_56@@YACHPAX@Z ENDP	; icu_56::generalCategoryMaskFilter
_TEXT	ENDS
EXTRN	_u_getIntPropertyValue_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?intPropertyFilter@icu_56@@YACHPAX@Z
_TEXT	SEGMENT
_c$ = -8						; size = 4
_ch$ = 8						; size = 4
_context$ = 12						; size = 4
?intPropertyFilter@icu_56@@YACHPAX@Z PROC		; icu_56::intPropertyFilter, COMDAT
; Line 860
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 861
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 862
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	call	_u_getIntPropertyValue_56
	add	esp, 8
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	sete	al
; Line 863
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?intPropertyFilter@icu_56@@YACHPAX@Z ENDP		; icu_56::intPropertyFilter
_TEXT	ENDS
EXTRN	_uscript_hasScript_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?scriptExtensionsFilter@icu_56@@YACHPAX@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 4
_context$ = 12						; size = 4
?scriptExtensionsFilter@icu_56@@YACHPAX@Z PROC		; icu_56::scriptExtensionsFilter, COMDAT
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 866
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	call	_uscript_hasScript_56
	add	esp, 8
; Line 867
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?scriptExtensionsFilter@icu_56@@YACHPAX@Z ENDP		; icu_56::scriptExtensionsFilter
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPropertyAlias
EXTRN	?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::set
EXTRN	_uprv_compareASCIIPropertyNames_56:PROC
EXTRN	_u_versionFromString_56:PROC
EXTRN	_u_charFromName_56:PROC
EXTRN	__imp__strtod:PROC
EXTRN	_u_getPropertyValueEnum_56:PROC
EXTRN	_u_getPropertyEnum_56:PROC
EXTRN	?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::CharString::appendInvariantChars
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z$1
__ehfuncinfo$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv173 = -968						; size = 4
$T83330 = -960						; size = 4
$T83331 = -948						; size = 4
$T83332 = -936						; size = 4
$T83333 = -924						; size = 4
$T83334 = -912						; size = 4
$T83335 = -900						; size = 4
$T83336 = -888						; size = 4
$T83337 = -876						; size = 4
$T83338 = -864						; size = 4
$T83339 = -852						; size = 4
$T83340 = -840						; size = 4
$T83341 = -828						; size = 4
$T83342 = -816						; size = 4
$T83343 = -804						; size = 4
$T83345 = -792						; size = 4
$T83346 = -780						; size = 4
$T83347 = -768						; size = 4
$T83348 = -756						; size = 4
_version$74875 = -552					; size = 4
_buf$74872 = -540					; size = 128
_ch$74864 = -404					; size = 4
_buf$74861 = -392					; size = 128
_value$74856 = -256					; size = 8
_end$74855 = -240					; size = 4
_value$74842 = -228					; size = 8
_end$74841 = -212					; size = 4
_invert$ = -197						; size = 1
_mustNotBeEmpty$ = -185					; size = 1
_v$ = -176						; size = 4
_p$ = -164						; size = 4
_vname$ = -152						; size = 56
_pname$ = -88						; size = 56
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_prop$ = 8						; size = 4
_value$ = 12						; size = 4
_ec$ = 16						; size = 4
?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyPropertyAlias, COMDAT
; _this$ = ecx
; Line 967
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 956				; 000003bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-968]
	mov	ecx, 239				; 000000efH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 968
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN46@applyPrope
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isFrozen@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isFrozen
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN47@applyPrope
$LN46@applyPrope:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN48@applyPrope
$LN47@applyPrope:
; Line 978
	mov	ecx, DWORD PTR _prop$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN44@applyPrope
	mov	ecx, DWORD PTR _value$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN45@applyPrope
$LN44@applyPrope:
; Line 979
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN48@applyPrope
$LN45@applyPrope:
; Line 981
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??0CharString@icu_56@@QAE@XZ		; icu_56::CharString::CharString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??0CharString@icu_56@@QAE@XZ		; icu_56::CharString::CharString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 982
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CharString::appendInvariantChars
; Line 983
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CharString::appendInvariantChars
; Line 984
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN43@applyPrope
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83330[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83330[ebp]
	jmp	$LN48@applyPrope
$LN43@applyPrope:
; Line 988
	mov	BYTE PTR _mustNotBeEmpty$[ebp], 0
	mov	BYTE PTR _invert$[ebp], 0
; Line 990
	mov	ecx, DWORD PTR _value$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	test	eax, eax
	jle	$LN42@applyPrope
; Line 991
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	call	_u_getPropertyEnum_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 992
	cmp	DWORD PTR _p$[ebp], -1
	jne	SHORT $LN41@applyPrope
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83331[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83331[ebp]
	jmp	$LN48@applyPrope
$LN41@applyPrope:
; Line 995
	cmp	DWORD PTR _p$[ebp], 4101		; 00001005H
	jne	SHORT $LN40@applyPrope
; Line 996
	mov	DWORD PTR _p$[ebp], 8192		; 00002000H
$LN40@applyPrope:
; Line 1001
	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN37@applyPrope
	cmp	DWORD PTR _p$[ebp], 57			; 00000039H
	jl	SHORT $LN38@applyPrope
$LN37@applyPrope:
	cmp	DWORD PTR _p$[ebp], 4096		; 00001000H
	jl	SHORT $LN36@applyPrope
	cmp	DWORD PTR _p$[ebp], 4118		; 00001016H
	jl	SHORT $LN38@applyPrope
$LN36@applyPrope:
	cmp	DWORD PTR _p$[ebp], 8192		; 00002000H
	jl	$LN39@applyPrope
	cmp	DWORD PTR _p$[ebp], 8193		; 00002001H
	jge	$LN39@applyPrope
$LN38@applyPrope:
; Line 1002
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_u_getPropertyValueEnum_56
	add	esp, 8
	mov	DWORD PTR _v$[ebp], eax
; Line 1003
	cmp	DWORD PTR _v$[ebp], -1
	jne	$LN30@applyPrope
; Line 1007
	cmp	DWORD PTR _p$[ebp], 4098		; 00001002H
	je	SHORT $LN33@applyPrope
	cmp	DWORD PTR _p$[ebp], 4113		; 00001011H
	je	SHORT $LN33@applyPrope
	cmp	DWORD PTR _p$[ebp], 4112		; 00001010H
	jne	$LN34@applyPrope
$LN33@applyPrope:
; Line 1009
	mov	esi, esp
	lea	eax, DWORD PTR _end$74841[ebp]
	push	eax
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	call	DWORD PTR __imp__strtod
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _value$74842[ebp]
; Line 1010
	fld	QWORD PTR _value$74842[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _v$[ebp], eax
; Line 1011
	fild	DWORD PTR _v$[ebp]
	fld	QWORD PTR _value$74842[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN31@applyPrope
	cmp	DWORD PTR _v$[ebp], 0
	jl	SHORT $LN31@applyPrope
	mov	eax, DWORD PTR _end$74841[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN32@applyPrope
$LN31@applyPrope:
; Line 1013
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83332[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83332[ebp]
	jmp	$LN48@applyPrope
$LN32@applyPrope:
; Line 1017
	mov	BYTE PTR _mustNotBeEmpty$[ebp], 1
; Line 1018
	jmp	SHORT $LN30@applyPrope
$LN34@applyPrope:
; Line 1019
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83333[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83333[ebp]
	jmp	$LN48@applyPrope
$LN30@applyPrope:
; Line 1024
	jmp	$LN27@applyPrope
$LN39@applyPrope:
; Line 1026
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR tv173[ebp], eax
	cmp	DWORD PTR tv173[ebp], 16389		; 00004005H
	jg	SHORT $LN50@applyPrope
	cmp	DWORD PTR tv173[ebp], 16389		; 00004005H
	je	$LN24@applyPrope
	cmp	DWORD PTR tv173[ebp], 12288		; 00003000H
	je	SHORT $LN26@applyPrope
	cmp	DWORD PTR tv173[ebp], 16384		; 00004000H
	je	$LN19@applyPrope
	jmp	$LN15@applyPrope
$LN50@applyPrope:
	cmp	DWORD PTR tv173[ebp], 16395		; 0000400bH
	je	$LN21@applyPrope
	cmp	DWORD PTR tv173[ebp], 28672		; 00007000H
	je	$LN17@applyPrope
	jmp	$LN15@applyPrope
$LN26@applyPrope:
; Line 1030
	mov	esi, esp
	lea	eax, DWORD PTR _end$74855[ebp]
	push	eax
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	call	DWORD PTR __imp__strtod
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _value$74856[ebp]
; Line 1031
	mov	eax, DWORD PTR _end$74855[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN25@applyPrope
; Line 1032
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83334[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83334[ebp]
	jmp	$LN48@applyPrope
$LN25@applyPrope:
; Line 1034
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _value$74856[ebp]
	push	ecx
	push	OFFSET ?numericValueFilter@icu_56@@YACHPAX@Z ; icu_56::numericValueFilter
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyFilter
; Line 1035
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83335[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83335[ebp]
	jmp	$LN48@applyPrope
$LN24@applyPrope:
; Line 1042
	push	128					; 00000080H
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	lea	eax, DWORD PTR _buf$74861[ebp]
	push	eax
	call	?mungeCharName@icu_56@@YACPADPBDH@Z	; icu_56::mungeCharName
	add	esp, 12					; 0000000cH
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN23@applyPrope
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83336[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83336[ebp]
	jmp	$LN48@applyPrope
$LN23@applyPrope:
; Line 1043
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$74861[ebp]
	push	ecx
	push	2
	call	_u_charFromName_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ch$74864[ebp], eax
; Line 1044
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@applyPrope
; Line 1045
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1046
	mov	eax, DWORD PTR _ch$74864[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add
; Line 1047
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83337[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83337[ebp]
	jmp	$LN48@applyPrope
; Line 1048
	jmp	SHORT $LN21@applyPrope
$LN22@applyPrope:
; Line 1049
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83338[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83338[ebp]
	jmp	$LN48@applyPrope
$LN21@applyPrope:
; Line 1054
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83339[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83339[ebp]
	jmp	$LN48@applyPrope
$LN19@applyPrope:
; Line 1060
	push	128					; 00000080H
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	lea	eax, DWORD PTR _buf$74872[ebp]
	push	eax
	call	?mungeCharName@icu_56@@YACPADPBDH@Z	; icu_56::mungeCharName
	add	esp, 12					; 0000000cH
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@applyPrope
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83340[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83340[ebp]
	jmp	$LN48@applyPrope
$LN18@applyPrope:
; Line 1062
	lea	eax, DWORD PTR _buf$74872[ebp]
	push	eax
	lea	ecx, DWORD PTR _version$74875[ebp]
	push	ecx
	call	_u_versionFromString_56
	add	esp, 8
; Line 1063
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _version$74875[ebp]
	push	ecx
	push	OFFSET ?versionFilter@icu_56@@YACHPAX@Z	; icu_56::versionFilter
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyFilter@UnicodeSet@icu_56@@AAEXP6ACHPAX@Z0HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyFilter
; Line 1064
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83341[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83341[ebp]
	jmp	$LN48@applyPrope
$LN17@applyPrope:
; Line 1067
	lea	ecx, DWORD PTR _vname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	push	4106					; 0000100aH
	call	_u_getPropertyValueEnum_56
	add	esp, 8
	mov	DWORD PTR _v$[ebp], eax
; Line 1068
	cmp	DWORD PTR _v$[ebp], -1
	jne	SHORT $LN16@applyPrope
; Line 1069
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83342[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83342[ebp]
	jmp	$LN48@applyPrope
$LN16@applyPrope:
; Line 1072
	jmp	SHORT $LN27@applyPrope
$LN15@applyPrope:
; Line 1076
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83343[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83343[ebp]
	jmp	$LN48@applyPrope
$LN27@applyPrope:
; Line 1081
	jmp	$LN4@applyPrope
$LN42@applyPrope:
; Line 1084
	mov	DWORD PTR _p$[ebp], 8192		; 00002000H
; Line 1085
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_u_getPropertyValueEnum_56
	add	esp, 8
	mov	DWORD PTR _v$[ebp], eax
; Line 1086
	cmp	DWORD PTR _v$[ebp], -1
	jne	$LN4@applyPrope
; Line 1087
	mov	DWORD PTR _p$[ebp], 4106		; 0000100aH
; Line 1088
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_u_getPropertyValueEnum_56
	add	esp, 8
	mov	DWORD PTR _v$[ebp], eax
; Line 1089
	cmp	DWORD PTR _v$[ebp], -1
	jne	$LN4@applyPrope
; Line 1090
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	call	_u_getPropertyEnum_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 1091
	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN11@applyPrope
	cmp	DWORD PTR _p$[ebp], 57			; 00000039H
	jge	SHORT $LN11@applyPrope
; Line 1092
	mov	DWORD PTR _v$[ebp], 1
	jmp	$LN4@applyPrope
$LN11@applyPrope:
; Line 1093
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	push	OFFSET _ANY
	call	_uprv_compareASCIIPropertyNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@applyPrope
; Line 1094
	push	1114111					; 0010ffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeSet::set
; Line 1095
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83345[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83345[ebp]
	jmp	$LN48@applyPrope
	jmp	$LN4@applyPrope
$LN9@applyPrope:
; Line 1096
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	push	OFFSET _ASCII
	call	_uprv_compareASCIIPropertyNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@applyPrope
; Line 1097
	push	127					; 0000007fH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeSet::set
; Line 1098
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83346[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83346[ebp]
	jmp	$LN48@applyPrope
	jmp	SHORT $LN4@applyPrope
$LN7@applyPrope:
; Line 1099
	lea	ecx, DWORD PTR _pname$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	push	eax
	push	OFFSET _ASSIGNED
	call	_uprv_compareASCIIPropertyNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@applyPrope
; Line 1101
	mov	DWORD PTR _p$[ebp], 8192		; 00002000H
; Line 1102
	mov	DWORD PTR _v$[ebp], 1
; Line 1103
	mov	BYTE PTR _invert$[ebp], 1
; Line 1104
	jmp	SHORT $LN4@applyPrope
$LN5@applyPrope:
; Line 1105
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83347[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83347[ebp]
	jmp	$LN48@applyPrope
$LN4@applyPrope:
; Line 1111
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyIntPropertyValue
; Line 1112
	movsx	eax, BYTE PTR _invert$[ebp]
	test	eax, eax
	je	SHORT $LN3@applyPrope
; Line 1113
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@applyPrope:
; Line 1116
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@applyPrope
	movsx	eax, BYTE PTR _mustNotBeEmpty$[ebp]
	test	eax, eax
	je	SHORT $LN2@applyPrope
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@applyPrope
; Line 1119
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN2@applyPrope:
; Line 1122
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeSet@icu_56@@QBECXZ	; icu_56::UnicodeSet::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@applyPrope
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@applyPrope
; Line 1124
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@applyPrope:
; Line 1126
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83348[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pname$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T83348[ebp]
$LN48@applyPrope:
; Line 1127
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN63@applyPrope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 968				; 000003c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN63@applyPrope:
	DD	8
	DD	$LN62@applyPrope
$LN62@applyPrope:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN53@applyPrope
	DD	-152					; ffffff68H
	DD	56					; 00000038H
	DD	$LN54@applyPrope
	DD	-212					; ffffff2cH
	DD	4
	DD	$LN55@applyPrope
	DD	-240					; ffffff10H
	DD	4
	DD	$LN56@applyPrope
	DD	-256					; ffffff00H
	DD	8
	DD	$LN57@applyPrope
	DD	-392					; fffffe78H
	DD	128					; 00000080H
	DD	$LN58@applyPrope
	DD	-540					; fffffde4H
	DD	128					; 00000080H
	DD	$LN59@applyPrope
	DD	-552					; fffffdd8H
	DD	4
	DD	$LN60@applyPrope
$LN60@applyPrope:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN59@applyPrope:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN58@applyPrope:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN57@applyPrope:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN56@applyPrope:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN55@applyPrope:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN54@applyPrope:
	DB	118					; 00000076H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN53@applyPrope:
	DB	112					; 00000070H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _pname$[ebp]
	jmp	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
__unwindfunclet$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _vname$[ebp]
	jmp	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
__ehhandler$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-972]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyPropertyAlias
EXTRN	_u_getNumericValue_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?numericValueFilter@icu_56@@YACHPAX@Z
_TEXT	SEGMENT
tv67 = -193						; size = 1
_ch$ = 8						; size = 4
_context$ = 12						; size = 4
?numericValueFilter@icu_56@@YACHPAX@Z PROC		; icu_56::numericValueFilter, COMDAT
; Line 838
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 839
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_u_getNumericValue_56
	add	esp, 4
	mov	ecx, DWORD PTR _context$[ebp]
	fld	QWORD PTR [ecx]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@numericVal
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@numericVal
$LN3@numericVal:
	mov	BYTE PTR tv67[ebp], 0
$LN4@numericVal:
	mov	al, BYTE PTR tv67[ebp]
; Line 840
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?numericValueFilter@icu_56@@YACHPAX@Z ENDP		; icu_56::numericValueFilter
_TEXT	ENDS
EXTRN	_memcmp:PROC
EXTRN	_u_charAge_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?versionFilter@icu_56@@YACHPAX@Z
_TEXT	SEGMENT
tv76 = -217						; size = 1
_version$ = -20						; size = 4
_v$ = -8						; size = 4
_ch$ = 8						; size = 4
_context$ = 12						; size = 4
?versionFilter@icu_56@@YACHPAX@Z PROC			; icu_56::versionFilter, COMDAT
; Line 847
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 850
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	call	_u_charAge_56
	add	esp, 8
; Line 851
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _version$[ebp], eax
; Line 852
	push	4
	push	OFFSET ?none@?1??versionFilter@icu_56@@YACHPAX@Z@4QBEB
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN3@versionFil
	push	4
	mov	ecx, DWORD PTR _version$[ebp]
	push	ecx
	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN3@versionFil
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@versionFil
$LN3@versionFil:
	mov	BYTE PTR tv76[ebp], 0
$LN4@versionFil:
	mov	al, BYTE PTR tv76[ebp]
; Line 853
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@versionFil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@versionFil:
	DD	1
	DD	$LN6@versionFil
$LN6@versionFil:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@versionFil
$LN5@versionFil:
	DB	118					; 00000076H
	DB	0
?versionFilter@icu_56@@YACHPAX@Z ENDP			; icu_56::versionFilter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?mungeCharName@icu_56@@YACPADPBDH@Z
_TEXT	SEGMENT
tv68 = -220						; size = 4
_ch$ = -17						; size = 1
_j$ = -8						; size = 4
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_dstCapacity$ = 16					; size = 4
?mungeCharName@icu_56@@YACPADPBDH@Z PROC		; icu_56::mungeCharName, COMDAT
; Line 925
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 927
	mov	DWORD PTR _j$[ebp], 0
; Line 929
	mov	eax, DWORD PTR _dstCapacity$[ebp]
	sub	eax, 1
	mov	DWORD PTR _dstCapacity$[ebp], eax
$LN6@mungeCharN:
; Line 930
	mov	eax, DWORD PTR _src$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movsx	edx, BYTE PTR _ch$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax
	test	edx, edx
	je	SHORT $LN9@mungeCharN
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN10@mungeCharN
$LN9@mungeCharN:
	mov	DWORD PTR tv68[ebp], 0
$LN10@mungeCharN:
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN5@mungeCharN
; Line 931
	movsx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN4@mungeCharN
	cmp	DWORD PTR _j$[ebp], 0
	je	SHORT $LN3@mungeCharN
	cmp	DWORD PTR _j$[ebp], 0
	jle	SHORT $LN4@mungeCharN
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN4@mungeCharN
$LN3@mungeCharN:
; Line 932
	jmp	SHORT $LN6@mungeCharN
$LN4@mungeCharN:
; Line 934
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _dstCapacity$[ebp]
	jl	SHORT $LN2@mungeCharN
	xor	al, al
	jmp	SHORT $LN7@mungeCharN
$LN2@mungeCharN:
; Line 935
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	cl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
; Line 936
	jmp	SHORT $LN6@mungeCharN
$LN5@mungeCharN:
; Line 937
	cmp	DWORD PTR _j$[ebp], 0
	jle	SHORT $LN1@mungeCharN
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN1@mungeCharN
	mov	eax, DWORD PTR _j$[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN1@mungeCharN:
; Line 938
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax], 0
; Line 939
	mov	al, 1
$LN7@mungeCharN:
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?mungeCharName@icu_56@@YACPADPBDH@Z ENDP		; icu_56::mungeCharName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?resemblesPropertyPattern@UnicodeSet@icu_56@@CACABVUnicodeString@2@H@Z
_TEXT	SEGMENT
tv83 = -193						; size = 1
_pattern$ = 8						; size = 4
_pos$ = 12						; size = 4
?resemblesPropertyPattern@UnicodeSet@icu_56@@CACABVUnicodeString@2@H@Z PROC ; icu_56::UnicodeSet::resemblesPropertyPattern, COMDAT
; Line 1138
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1140
	mov	esi, DWORD PTR _pos$[ebp]
	add	esi, 5
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	jle	SHORT $LN1@resemblesP@2
; Line 1141
	xor	al, al
	jmp	SHORT $LN2@resemblesP@2
$LN1@resemblesP@2:
; Line 1145
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?isPOSIXOpen@icu_56@@YACABVUnicodeString@1@H@Z ; icu_56::isPOSIXOpen
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN4@resemblesP@2
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?isPerlOpen@icu_56@@YACABVUnicodeString@1@H@Z ; icu_56::isPerlOpen
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN4@resemblesP@2
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?isNameOpen@icu_56@@YACABVUnicodeString@1@H@Z ; icu_56::isNameOpen
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN4@resemblesP@2
	mov	BYTE PTR tv83[ebp], 0
	jmp	SHORT $LN5@resemblesP@2
$LN4@resemblesP@2:
	mov	BYTE PTR tv83[ebp], 1
$LN5@resemblesP@2:
	mov	al, BYTE PTR tv83[ebp]
$LN2@resemblesP@2:
; Line 1146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?resemblesPropertyPattern@UnicodeSet@icu_56@@CACABVUnicodeString@2@H@Z ENDP ; icu_56::UnicodeSet::resemblesPropertyPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isPerlOpen@icu_56@@YACABVUnicodeString@1@H@Z
_TEXT	SEGMENT
tv77 = -205						; size = 1
_c$ = -8						; size = 2
_pattern$ = 8						; size = 4
_pos$ = 12						; size = 4
?isPerlOpen@icu_56@@YACABVUnicodeString@1@H@Z PROC	; icu_56::isPerlOpen, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 288
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 92					; 0000005cH
	jne	SHORT $LN4@isPerlOpen
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$[ebp], ax
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 112				; 00000070H
	je	SHORT $LN3@isPerlOpen
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 80					; 00000050H
	jne	SHORT $LN4@isPerlOpen
$LN3@isPerlOpen:
	mov	BYTE PTR tv77[ebp], 1
	jmp	SHORT $LN5@isPerlOpen
$LN4@isPerlOpen:
	mov	BYTE PTR tv77[ebp], 0
$LN5@isPerlOpen:
	mov	al, BYTE PTR tv77[ebp]
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPerlOpen@icu_56@@YACABVUnicodeString@1@H@Z ENDP	; icu_56::isPerlOpen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isNameOpen@icu_56@@YACABVUnicodeString@1@H@Z
_TEXT	SEGMENT
tv75 = -193						; size = 1
_pattern$ = 8						; size = 4
_pos$ = 12						; size = 4
?isNameOpen@icu_56@@YACABVUnicodeString@1@H@Z PROC	; icu_56::isNameOpen, COMDAT
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 298
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 92					; 0000005cH
	jne	SHORT $LN3@isNameOpen
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	eax, ax
	cmp	eax, 78					; 0000004eH
	jne	SHORT $LN3@isNameOpen
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@isNameOpen
$LN3@isNameOpen:
	mov	BYTE PTR tv75[ebp], 0
$LN4@isNameOpen:
	mov	al, BYTE PTR tv75[ebp]
; Line 299
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNameOpen@icu_56@@YACABVUnicodeString@1@H@Z ENDP	; icu_56::isNameOpen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isPOSIXOpen@icu_56@@YACABVUnicodeString@1@H@Z
_TEXT	SEGMENT
tv75 = -193						; size = 1
_pattern$ = 8						; size = 4
_pos$ = 12						; size = 4
?isPOSIXOpen@icu_56@@YACABVUnicodeString@1@H@Z PROC	; icu_56::isPOSIXOpen, COMDAT
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 303
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 91					; 0000005bH
	jne	SHORT $LN3@isPOSIXOpe
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	eax, ax
	cmp	eax, 58					; 0000003aH
	jne	SHORT $LN3@isPOSIXOpe
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@isPOSIXOpe
$LN3@isPOSIXOpe:
	mov	BYTE PTR tv75[ebp], 0
$LN4@isPOSIXOpe:
	mov	al, BYTE PTR tv75[ebp]
; Line 304
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPOSIXOpen@icu_56@@YACABVUnicodeString@1@H@Z ENDP	; icu_56::isPOSIXOpen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?resemblesPropertyPattern@UnicodeSet@icu_56@@CACAAVRuleCharacterIterator@2@H@Z
_TEXT	SEGMENT
tv85 = -280						; size = 4
tv87 = -276						; size = 4
tv129 = -273						; size = 1
_d$74917 = -76						; size = 4
_c$ = -64						; size = 4
_pos$ = -52						; size = 12
_ec$ = -32						; size = 4
_literal$ = -17						; size = 1
_result$ = -5						; size = 1
_chars$ = 8						; size = 4
_iterOpts$ = 12						; size = 4
?resemblesPropertyPattern@UnicodeSet@icu_56@@CACAAVRuleCharacterIterator@2@H@Z PROC ; icu_56::UnicodeSet::resemblesPropertyPattern, COMDAT
; Line 1157
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1159
	mov	BYTE PTR _result$[ebp], 0
; Line 1160
	mov	DWORD PTR _ec$[ebp], 0
; Line 1161
	mov	eax, DWORD PTR _iterOpts$[ebp]
	and	eax, -3					; fffffffdH
	mov	DWORD PTR _iterOpts$[ebp], eax
; Line 1163
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?getPos@RuleCharacterIterator@icu_56@@QBEXAAUPos@12@@Z ; icu_56::RuleCharacterIterator::getPos
; Line 1164
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iterOpts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _c$[ebp], eax
; Line 1165
	cmp	DWORD PTR _c$[ebp], 91			; 0000005bH
	je	SHORT $LN1@resemblesP@3
	cmp	DWORD PTR _c$[ebp], 92			; 0000005cH
	jne	SHORT $LN2@resemblesP@3
$LN1@resemblesP@3:
; Line 1167
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _literal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iterOpts$[ebp]
	and	edx, -5					; fffffffbH
	push	edx
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?next@RuleCharacterIterator@icu_56@@QAEHHAACAAW4UErrorCode@@@Z ; icu_56::RuleCharacterIterator::next
	mov	DWORD PTR _d$74917[ebp], eax
; Line 1169
	cmp	DWORD PTR _c$[ebp], 91			; 0000005bH
	jne	SHORT $LN7@resemblesP@3
	xor	eax, eax
	cmp	DWORD PTR _d$74917[ebp], 58		; 0000003aH
	sete	al
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN8@resemblesP@3
$LN7@resemblesP@3:
	cmp	DWORD PTR _d$74917[ebp], 78		; 0000004eH
	je	SHORT $LN5@resemblesP@3
	cmp	DWORD PTR _d$74917[ebp], 112		; 00000070H
	je	SHORT $LN5@resemblesP@3
	cmp	DWORD PTR _d$74917[ebp], 80		; 00000050H
	je	SHORT $LN5@resemblesP@3
	mov	DWORD PTR tv85[ebp], 0
	jmp	SHORT $LN6@resemblesP@3
$LN5@resemblesP@3:
	mov	DWORD PTR tv85[ebp], 1
$LN6@resemblesP@3:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR tv87[ebp], ecx
$LN8@resemblesP@3:
	mov	dl, BYTE PTR tv87[ebp]
	mov	BYTE PTR _result$[ebp], dl
$LN2@resemblesP@3:
; Line 1171
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?setPos@RuleCharacterIterator@icu_56@@QAEXABUPos@12@@Z ; icu_56::RuleCharacterIterator::setPos
; Line 1172
	movsx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	je	SHORT $LN9@resemblesP@3
	mov	ecx, DWORD PTR _ec$[ebp]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@resemblesP@3
	mov	BYTE PTR tv129[ebp], 1
	jmp	SHORT $LN10@resemblesP@3
$LN9@resemblesP@3:
	mov	BYTE PTR tv129[ebp], 0
$LN10@resemblesP@3:
	mov	al, BYTE PTR tv129[ebp]
; Line 1173
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@resemblesP@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@resemblesP@3:
	DD	3
	DD	$LN14@resemblesP@3
$LN14@resemblesP@3:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN11@resemblesP@3
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@resemblesP@3
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN13@resemblesP@3
$LN13@resemblesP@3:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN12@resemblesP@3:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN11@resemblesP@3:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?resemblesPropertyPattern@UnicodeSet@icu_56@@CACAAVRuleCharacterIterator@2@H@Z ENDP ; icu_56::UnicodeSet::resemblesPropertyPattern
_TEXT	ENDS
PUBLIC	??_C@_02DOBBJKCB@na?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPropertyPattern
EXTRN	??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC ; icu_56::UnicodeString::UnicodeString
;	COMDAT ??_C@_02DOBBJKCB@na?$AA@
CONST	SEGMENT
??_C@_02DOBBJKCB@na?$AA@ DB 'na', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv252 = -540						; size = 4
tv180 = -536						; size = 4
tv156 = -536						; size = 4
$T74955 = -528						; size = 64
$T83418 = -456						; size = 4
_valueName$ = -252					; size = 64
_propName$ = -180					; size = 64
_equals$ = -108						; size = 4
_close$ = -96						; size = 4
_c$74936 = -84						; size = 2
_invert$ = -69						; size = 1
_isName$ = -57						; size = 1
_posix$ = -45						; size = 1
_pos$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_ppos$ = 12						; size = 4
_ec$ = 16						; size = 4
?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyPropertyPattern, COMDAT
; _this$ = ecx
; Line 1180
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1181
	mov	ecx, DWORD PTR _ppos$[ebp]
	call	?getIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getIndex
	mov	DWORD PTR _pos$[ebp], eax
; Line 1183
	mov	BYTE PTR _posix$[ebp], 0
; Line 1184
	mov	BYTE PTR _isName$[ebp], 0
; Line 1185
	mov	BYTE PTR _invert$[ebp], 0
; Line 1187
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@applyPrope@2
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@applyPrope@2
$LN18@applyPrope@2:
; Line 1190
	mov	esi, DWORD PTR _pos$[ebp]
	add	esi, 5
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	esi, eax
	jle	SHORT $LN17@applyPrope@2
; Line 1191
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@applyPrope@2
$LN17@applyPrope@2:
; Line 1196
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?isPOSIXOpen@icu_56@@YACABVUnicodeString@1@H@Z ; icu_56::isPOSIXOpen
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@applyPrope@2
; Line 1197
	mov	BYTE PTR _posix$[ebp], 1
; Line 1198
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax
; Line 1199
	push	0
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?skipWhitespace@ICU_Utility@icu_56@@SAHABVUnicodeString@2@AAHC@Z ; icu_56::ICU_Utility::skipWhitespace
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pos$[ebp], eax
; Line 1200
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _pos$[ebp], eax
	jge	SHORT $LN15@applyPrope@2
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	ecx, ax
	cmp	ecx, 94					; 0000005eH
	jne	SHORT $LN15@applyPrope@2
; Line 1201
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 1202
	mov	BYTE PTR _invert$[ebp], 1
$LN15@applyPrope@2:
; Line 1203
	jmp	$LN14@applyPrope@2
$LN16@applyPrope@2:
; Line 1204
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?isPerlOpen@icu_56@@YACABVUnicodeString@1@H@Z ; icu_56::isPerlOpen
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN12@applyPrope@2
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?isNameOpen@icu_56@@YACABVUnicodeString@1@H@Z ; icu_56::isNameOpen
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	$LN13@applyPrope@2
$LN12@applyPrope@2:
; Line 1205
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	mov	WORD PTR _c$74936[ebp], ax
; Line 1206
	movzx	eax, WORD PTR _c$74936[ebp]
	cmp	eax, 80					; 00000050H
	sete	cl
	mov	BYTE PTR _invert$[ebp], cl
; Line 1207
	movzx	eax, WORD PTR _c$74936[ebp]
	cmp	eax, 78					; 0000004eH
	sete	cl
	mov	BYTE PTR _isName$[ebp], cl
; Line 1208
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax
; Line 1209
	push	0
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	call	?skipWhitespace@ICU_Utility@icu_56@@SAHABVUnicodeString@2@AAHC@Z ; icu_56::ICU_Utility::skipWhitespace
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pos$[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _pos$[ebp], eax
	je	SHORT $LN10@applyPrope@2
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
	mov	edx, DWORD PTR tv156[ebp]
	push	edx
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?charAt@UnicodeString@icu_56@@QBE_WH@Z	; icu_56::UnicodeString::charAt
	movzx	eax, ax
	cmp	eax, 123				; 0000007bH
	je	SHORT $LN11@applyPrope@2
$LN10@applyPrope@2:
; Line 1212
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@applyPrope@2
$LN11@applyPrope@2:
; Line 1214
	jmp	SHORT $LN14@applyPrope@2
$LN13@applyPrope@2:
; Line 1216
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@applyPrope@2
$LN14@applyPrope@2:
; Line 1221
	movsx	eax, BYTE PTR _posix$[ebp]
	test	eax, eax
	je	SHORT $LN8@applyPrope@2
; Line 1222
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	push	2
	push	OFFSET _POSIX_CLOSE
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ; icu_56::UnicodeString::indexOf
	mov	DWORD PTR _close$[ebp], eax
; Line 1223
	jmp	SHORT $LN7@applyPrope@2
$LN8@applyPrope@2:
; Line 1224
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	push	125					; 0000007dH
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ; icu_56::UnicodeString::indexOf
	mov	DWORD PTR _close$[ebp], eax
$LN7@applyPrope@2:
; Line 1226
	cmp	DWORD PTR _close$[ebp], 0
	jge	SHORT $LN6@applyPrope@2
; Line 1228
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@applyPrope@2
$LN6@applyPrope@2:
; Line 1234
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ; icu_56::UnicodeString::indexOf
	mov	DWORD PTR _equals$[ebp], eax
; Line 1235
	lea	ecx, DWORD PTR _propName$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _valueName$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1236
	cmp	DWORD PTR _equals$[ebp], 0
	jl	SHORT $LN5@applyPrope@2
	mov	eax, DWORD PTR _equals$[ebp]
	cmp	eax, DWORD PTR _close$[ebp]
	jge	SHORT $LN5@applyPrope@2
	movsx	eax, BYTE PTR _isName$[ebp]
	test	eax, eax
	jne	SHORT $LN5@applyPrope@2
; Line 1238
	mov	esi, esp
	lea	eax, DWORD PTR _propName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _equals$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1239
	mov	esi, esp
	lea	eax, DWORD PTR _valueName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _close$[ebp]
	push	ecx
	mov	edx, DWORD PTR _equals$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1242
	jmp	$LN4@applyPrope@2
$LN5@applyPrope@2:
; Line 1244
	mov	esi, esp
	lea	eax, DWORD PTR _propName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _close$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1247
	movsx	eax, BYTE PTR _isName$[ebp]
	test	eax, eax
	je	SHORT $LN4@applyPrope@2
; Line 1253
	lea	eax, DWORD PTR _propName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _valueName$[ebp]
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
; Line 1254
	push	0
	push	2
	push	OFFSET ??_C@_02DOBBJKCB@na?$AA@
	lea	ecx, DWORD PTR $T74955[ebp]
	call	??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z ; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv180[ebp], eax
	mov	eax, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv252[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv252[ebp]
	push	ecx
	lea	ecx, DWORD PTR _propName$[ebp]
	call	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ; icu_56::UnicodeString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T74955[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN4@applyPrope@2:
; Line 1258
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _valueName$[ebp]
	push	ecx
	lea	edx, DWORD PTR _propName$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPropertyAlias@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@0AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPropertyAlias
; Line 1260
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@applyPrope@2
; Line 1261
	movsx	eax, BYTE PTR _invert$[ebp]
	test	eax, eax
	je	SHORT $LN1@applyPrope@2
; Line 1262
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@applyPrope@2:
; Line 1267
	movsx	eax, BYTE PTR _posix$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 1
	add	eax, DWORD PTR _close$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppos$[ebp]
	call	?setIndex@ParsePosition@icu_56@@QAEXH@Z	; icu_56::ParsePosition::setIndex
$LN2@applyPrope@2:
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T83418[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _valueName$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _propName$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR $T83418[ebp]
$LN19@applyPrope@2:
; Line 1271
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@applyPrope@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN29@applyPrope@2:
	DD	3
	DD	$LN28@applyPrope@2
$LN28@applyPrope@2:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN24@applyPrope@2
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$LN25@applyPrope@2
	DD	-252					; ffffff04H
	DD	64					; 00000040H
	DD	$LN26@applyPrope@2
$LN26@applyPrope@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN25@applyPrope@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN24@applyPrope@2:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _propName$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _valueName$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR $T74955[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__ehhandler$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyPropertyPattern
PUBLIC	__$ArrayPad$
EXTRN	?jumpahead@RuleCharacterIterator@icu_56@@QAEXH@Z:PROC ; icu_56::RuleCharacterIterator::jumpahead
EXTRN	?lookahead@RuleCharacterIterator@icu_56@@QBEAAVUnicodeString@2@AAV32@H@Z:PROC ; icu_56::RuleCharacterIterator::lookahead
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_pos$ = -116						; size = 12
_pattern$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_chars$ = 8						; size = 4
_rebuiltPat$ = 12					; size = 4
_ec$ = 16						; size = 4
?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::UnicodeSet::applyPropertyPattern, COMDAT
; _this$ = ecx
; Line 1284
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1285
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@applyPrope@3
	jmp	$LN4@applyPrope@3
$LN3@applyPrope@3:
; Line 1286
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1287
	push	-1
	lea	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?lookahead@RuleCharacterIterator@icu_56@@QBEAAVUnicodeString@2@AAV32@H@Z ; icu_56::RuleCharacterIterator::lookahead
; Line 1288
	push	0
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0ParsePosition@icu_56@@QAE@H@Z	; icu_56::ParsePosition::ParsePosition
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1289
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPropertyPattern@UnicodeSet@icu_56@@AAEAAV12@ABVUnicodeString@2@AAVParsePosition@2@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::applyPropertyPattern
; Line 1290
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@applyPrope@3
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	SHORT $LN4@applyPrope@3
$LN2@applyPrope@3:
; Line 1291
	lea	ecx, DWORD PTR _pos$[ebp]
	call	?getIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getIndex
	test	eax, eax
	jne	SHORT $LN1@applyPrope@3
; Line 1293
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65538			; 00010002H
; Line 1294
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	jmp	SHORT $LN4@applyPrope@3
$LN1@applyPrope@3:
; Line 1296
	lea	ecx, DWORD PTR _pos$[ebp]
	call	?getIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getIndex
	push	eax
	mov	ecx, DWORD PTR _chars$[ebp]
	call	?jumpahead@RuleCharacterIterator@icu_56@@QAEXH@Z ; icu_56::RuleCharacterIterator::jumpahead
; Line 1297
	lea	ecx, DWORD PTR _pos$[ebp]
	call	?getIndex@ParsePosition@icu_56@@QBEHXZ	; icu_56::ParsePosition::getIndex
	push	eax
	push	0
	lea	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rebuiltPat$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
; Line 1298
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
$LN4@applyPrope@3:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@applyPrope@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN12@applyPrope@3:
	DD	2
	DD	$LN11@applyPrope@3
$LN11@applyPrope@3:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN8@applyPrope@3
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN9@applyPrope@3
$LN9@applyPrope@3:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN8@applyPrope@3:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
__unwindfunclet$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _pos$[ebp]
	jmp	??1ParsePosition@icu_56@@UAE@XZ		; icu_56::ParsePosition::~ParsePosition
__ehhandler$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPropertyPattern@UnicodeSet@icu_56@@AAEXAAVRuleCharacterIterator@2@AAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UnicodeSet::applyPropertyPattern
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackArray<char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackArray<char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z PROC	; icu_56::MaybeStackArray<char,40>::operator[], COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z PROC	; icu_56::MaybeStackArray<char,40>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z ; icu_56::MaybeStackArray<char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherArray$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z PROC ; icu_56::MaybeStackArray<char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 353
	cmp	DWORD PTR _otherArray$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 354
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherArray$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 357
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z ENDP ; icu_56::MaybeStackArray<char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<char,40>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<char,40>::releaseArray
_TEXT	ENDS
PUBLIC	??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator==, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator=, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z ; icu_56::MaybeStackArray<char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z
_TEXT	SEGMENT
_p$79097 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z PROC ; icu_56::MaybeStackArray<char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$79097[ebp], eax
; Line 421
	cmp	DWORD PTR _p$79097[ebp], 0
	je	SHORT $LN5@resize
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$79097[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$79097[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize:
; Line 436
	mov	eax, DWORD PTR _p$79097[ebp]
	jmp	SHORT $LN7@resize
; Line 437
	jmp	SHORT $LN7@resize
$LN6@resize:
; Line 438
	xor	eax, eax
$LN7@resize:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z ENDP ; icu_56::MaybeStackArray<char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z ; icu_56::MaybeStackArray<char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z PROC ; icu_56::MaybeStackArray<char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 447
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN4@orphanOrCl
; Line 448
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
; Line 449
	jmp	SHORT $LN5@orphanOrCl
$LN4@orphanOrCl:
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN2@orphanOrCl
; Line 451
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN2@orphanOrCl:
; Line 453
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 457
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 458
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 460
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 462
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 464
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 466
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 467
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z ENDP ; icu_56::MaybeStackArray<char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$umtx_initOnce@H@icu_56@@YAXAAUUInitOnce@0@P6AXHAAW4UErrorCode@@@ZH1@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_context$ = 16						; size = 4
_errCode$ = 20						; size = 4
??$umtx_initOnce@H@icu_56@@YAXAAUUInitOnce@0@P6AXHAAW4UErrorCode@@@ZH1@Z PROC ; icu_56::umtx_initOnce<int>, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 289
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO@2
; Line 290
	jmp	SHORT $LN5@umtx_initO@2
$LN4@umtx_initO@2:
; Line 292
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO@2
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPreInit
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO@2
; Line 294
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _fp$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 295
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 296
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit
	add	esp, 4
; Line 297
	jmp	SHORT $LN5@umtx_initO@2
$LN3@umtx_initO@2:
; Line 299
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO@2
; Line 300
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO@2:
; Line 303
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$umtx_initOnce@H@icu_56@@YAXAAUUInitOnce@0@P6AXHAAW4UErrorCode@@@ZH1@Z ENDP ; icu_56::umtx_initOnce<int>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z PROC		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeFilter@icu_56@@UAEPAXI@Z
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z ENDP		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
END

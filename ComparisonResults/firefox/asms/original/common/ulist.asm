; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ulist.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_ulist_createEmptyList_56
EXTRN	_uprv_malloc_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\ulist.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ulist_createEmptyList_56
_TEXT	SEGMENT
_newList$ = -8						; size = 4
_status$ = 8						; size = 4
_ulist_createEmptyList_56 PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 36
	mov	DWORD PTR _newList$[ebp], 0
; Line 38
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN2@ulist_crea
; Line 39
	xor	eax, eax
	jmp	SHORT $LN3@ulist_crea
$LN2@ulist_crea:
; Line 42
	push	20					; 00000014H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newList$[ebp], eax
; Line 43
	cmp	DWORD PTR _newList$[ebp], 0
	jne	SHORT $LN1@ulist_crea
; Line 44
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 45
	xor	eax, eax
	jmp	SHORT $LN3@ulist_crea
$LN1@ulist_crea:
; Line 48
	mov	eax, DWORD PTR _newList$[ebp]
	mov	DWORD PTR [eax], 0
; Line 49
	mov	eax, DWORD PTR _newList$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 50
	mov	eax, DWORD PTR _newList$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 51
	mov	eax, DWORD PTR _newList$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 52
	mov	eax, DWORD PTR _newList$[ebp]
	mov	DWORD PTR [eax+16], -1
; Line 54
	mov	eax, DWORD PTR _newList$[ebp]
$LN3@ulist_crea:
; Line 55
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_createEmptyList_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_addItemEndList_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_addItemEndList_56
_TEXT	SEGMENT
_newItem$ = -8						; size = 4
_list$ = 8						; size = 4
_data$ = 12						; size = 4
_forceDelete$ = 16					; size = 1
_status$ = 20						; size = 4
_ulist_addItemEndList_56 PROC				; COMDAT
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 70
	mov	DWORD PTR _newItem$[ebp], 0
; Line 72
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN4@ulist_addI
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN4@ulist_addI
	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN5@ulist_addI
$LN4@ulist_addI:
; Line 73
	jmp	$LN6@ulist_addI
$LN5@ulist_addI:
; Line 76
	push	16					; 00000010H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newItem$[ebp], eax
; Line 77
	cmp	DWORD PTR _newItem$[ebp], 0
	jne	SHORT $LN3@ulist_addI
; Line 78
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 79
	jmp	SHORT $LN6@ulist_addI
$LN3@ulist_addI:
; Line 81
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 82
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	cl, BYTE PTR _forceDelete$[ebp]
	mov	BYTE PTR [eax+12], cl
; Line 84
	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@ulist_addI
; Line 85
	mov	eax, DWORD PTR _newItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	_ulist_addFirstItem
	add	esp, 8
; Line 86
	jmp	SHORT $LN1@ulist_addI
$LN2@ulist_addI:
; Line 87
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 88
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 89
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 90
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@ulist_addI:
; Line 93
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN6@ulist_addI:
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_addItemEndList_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ulist_addFirstItem
_TEXT	SEGMENT
_list$ = 8						; size = 4
_newItem$ = 12						; size = 4
_ulist_addFirstItem PROC				; COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 63
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 64
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 65
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 66
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_addFirstItem ENDP
_TEXT	ENDS
PUBLIC	_ulist_addItemBeginList_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_addItemBeginList_56
_TEXT	SEGMENT
_newItem$ = -8						; size = 4
_list$ = 8						; size = 4
_data$ = 12						; size = 4
_forceDelete$ = 16					; size = 1
_status$ = 20						; size = 4
_ulist_addItemBeginList_56 PROC				; COMDAT
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	mov	DWORD PTR _newItem$[ebp], 0
; Line 99
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN4@ulist_addI@2
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN4@ulist_addI@2
	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN5@ulist_addI@2
$LN4@ulist_addI@2:
; Line 100
	jmp	$LN6@ulist_addI@2
$LN5@ulist_addI@2:
; Line 103
	push	16					; 00000010H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newItem$[ebp], eax
; Line 104
	cmp	DWORD PTR _newItem$[ebp], 0
	jne	SHORT $LN3@ulist_addI@2
; Line 105
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 106
	jmp	SHORT $LN6@ulist_addI@2
$LN3@ulist_addI@2:
; Line 108
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 109
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	cl, BYTE PTR _forceDelete$[ebp]
	mov	BYTE PTR [eax+12], cl
; Line 111
	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@ulist_addI@2
; Line 112
	mov	eax, DWORD PTR _newItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	_ulist_addFirstItem
	add	esp, 8
; Line 113
	jmp	SHORT $LN1@ulist_addI@2
$LN2@ulist_addI@2:
; Line 114
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 115
	mov	eax, DWORD PTR _newItem$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 116
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 117
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _newItem$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 118
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+16], ecx
$LN1@ulist_addI@2:
; Line 121
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN6@ulist_addI@2:
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_addItemBeginList_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_containsString_56
EXTRN	_memcmp:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_containsString_56
_TEXT	SEGMENT
_pointer$ = -20						; size = 4
_result$ = -5						; size = 1
_list$ = 8						; size = 4
_data$ = 12						; size = 4
_length$ = 16						; size = 4
_ulist_containsString_56 PROC				; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 125
	mov	BYTE PTR _result$[ebp], 0
; Line 126
	mov	DWORD PTR _pointer$[ebp], 0
; Line 128
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN5@ulist_cont
	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN5@ulist_cont
; Line 129
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pointer$[ebp], ecx
$LN4@ulist_cont:
; Line 131
	cmp	DWORD PTR _pointer$[ebp], 0
	je	SHORT $LN5@ulist_cont
; Line 132
	mov	eax, DWORD PTR _pointer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _length$[ebp], eax
	jne	SHORT $LN2@ulist_cont
; Line 133
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pointer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@ulist_cont
; Line 134
	mov	BYTE PTR _result$[ebp], 1
; Line 135
	jmp	SHORT $LN5@ulist_cont
$LN2@ulist_cont:
; Line 139
	mov	eax, DWORD PTR _pointer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pointer$[ebp], ecx
; Line 140
	jmp	SHORT $LN4@ulist_cont
$LN5@ulist_cont:
; Line 143
	mov	al, BYTE PTR _result$[ebp]
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_containsString_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_getNext_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_getNext_56
_TEXT	SEGMENT
_curr$ = -8						; size = 4
_list$ = 8						; size = 4
_ulist_getNext_56 PROC					; COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 147
	mov	DWORD PTR _curr$[ebp], 0
; Line 149
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN1@ulist_getN
	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@ulist_getN
$LN1@ulist_getN:
; Line 150
	xor	eax, eax
	jmp	SHORT $LN3@ulist_getN
$LN2@ulist_getN:
; Line 153
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curr$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _curr$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 155
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 157
	mov	eax, DWORD PTR _curr$[ebp]
	mov	eax, DWORD PTR [eax]
$LN3@ulist_getN:
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_getNext_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_getListSize_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_getListSize_56
_TEXT	SEGMENT
_list$ = 8						; size = 4
_ulist_getListSize_56 PROC				; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 161
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN1@ulist_getL
; Line 162
	mov	eax, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [eax+12]
	jmp	SHORT $LN2@ulist_getL
$LN1@ulist_getL:
; Line 165
	or	eax, -1
$LN2@ulist_getL:
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_getListSize_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_resetList_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_resetList_56
_TEXT	SEGMENT
_list$ = 8						; size = 4
_ulist_resetList_56 PROC				; COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 169
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN2@ulist_rese
; Line 170
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 171
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN2@ulist_rese:
; Line 173
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_resetList_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_deleteList_56
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_deleteList_56
_TEXT	SEGMENT
_listPointer$7538 = -20					; size = 4
_listHead$ = -8						; size = 4
_list$ = 8						; size = 4
_ulist_deleteList_56 PROC				; COMDAT
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 176
	mov	DWORD PTR _listHead$[ebp], 0
; Line 178
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN5@ulist_dele
; Line 179
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _listHead$[ebp], ecx
$LN3@ulist_dele:
; Line 180
	cmp	DWORD PTR _listHead$[ebp], 0
	je	SHORT $LN2@ulist_dele
; Line 181
	mov	eax, DWORD PTR _listHead$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _listPointer$7538[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _listHead$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN1@ulist_dele
; Line 184
	mov	eax, DWORD PTR _listHead$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@ulist_dele:
; Line 187
	mov	eax, DWORD PTR _listHead$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 188
	mov	eax, DWORD PTR _listPointer$7538[ebp]
	mov	DWORD PTR _listHead$[ebp], eax
; Line 189
	jmp	SHORT $LN3@ulist_dele
$LN2@ulist_dele:
; Line 190
	mov	eax, DWORD PTR _list$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 191
	mov	DWORD PTR _list$[ebp], 0
$LN5@ulist_dele:
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_deleteList_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_close_keyword_values_iterator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_close_keyword_values_iterator_56
_TEXT	SEGMENT
_en$ = 8						; size = 4
_ulist_close_keyword_values_iterator_56 PROC		; COMDAT
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 196
	cmp	DWORD PTR _en$[ebp], 0
	je	SHORT $LN2@ulist_clos
; Line 197
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ulist_deleteList_56
	add	esp, 4
; Line 198
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN2@ulist_clos:
; Line 200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_close_keyword_values_iterator_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_count_keyword_values_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_count_keyword_values_56
_TEXT	SEGMENT
_en$ = 8						; size = 4
_status$ = 12						; size = 4
_ulist_count_keyword_values_56 PROC			; COMDAT
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 203
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@ulist_coun
; Line 204
	or	eax, -1
	jmp	SHORT $LN2@ulist_coun
$LN1@ulist_coun:
; Line 207
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ulist_getListSize_56
	add	esp, 4
$LN2@ulist_coun:
; Line 208
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_count_keyword_values_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_next_keyword_value_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_next_keyword_value_56
_TEXT	SEGMENT
_s$ = -8						; size = 4
_en$ = 8						; size = 4
_resultLength$ = 12					; size = 4
_status$ = 16						; size = 4
_ulist_next_keyword_value_56 PROC			; COMDAT
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 212
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN2@ulist_next
; Line 213
	xor	eax, eax
	jmp	SHORT $LN3@ulist_next
$LN2@ulist_next:
; Line 216
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ulist_getNext_56
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 217
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN1@ulist_next
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN1@ulist_next
; Line 218
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@ulist_next:
; Line 220
	mov	eax, DWORD PTR _s$[ebp]
$LN3@ulist_next:
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_next_keyword_value_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_reset_keyword_values_iterator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_reset_keyword_values_iterator_56
_TEXT	SEGMENT
_en$ = 8						; size = 4
_status$ = 12						; size = 4
_ulist_reset_keyword_values_iterator_56 PROC		; COMDAT
; Line 223
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 224
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@ulist_rese@2
; Line 225
	jmp	SHORT $LN2@ulist_rese@2
$LN1@ulist_rese@2:
; Line 228
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ulist_resetList_56
	add	esp, 4
$LN2@ulist_rese@2:
; Line 229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_reset_keyword_values_iterator_56 ENDP
_TEXT	ENDS
PUBLIC	_ulist_getListFromEnum_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ulist_getListFromEnum_56
_TEXT	SEGMENT
_en$ = 8						; size = 4
_ulist_getListFromEnum_56 PROC				; COMDAT
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _en$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 233
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ulist_getListFromEnum_56 ENDP
_TEXT	ENDS
END

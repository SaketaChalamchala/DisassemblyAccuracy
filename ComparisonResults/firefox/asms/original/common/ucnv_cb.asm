; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\ucnv_cb.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?kSubstituteChar1@?1??ucnv_cbToUWriteSub_56@@9@9 DW 01aH ; `ucnv_cbToUWriteSub_56'::`2'::kSubstituteChar1
	ORG $+2
?kSubstituteChar@?1??ucnv_cbToUWriteSub_56@@9@9 DW 0fffdH ; `ucnv_cbToUWriteSub_56'::`2'::kSubstituteChar
CONST	ENDS
PUBLIC	_ucnv_cbFromUWriteBytes_56
EXTRN	_ucnv_fromUWriteBytes_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\ucnv_cb.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ucnv_cbFromUWriteBytes_56
_TEXT	SEGMENT
_args$ = 8						; size = 4
_source$ = 12						; size = 4
_length$ = 16						; size = 4
_offsetIndex$ = 20					; size = 4
_err$ = 24						; size = 4
_ucnv_cbFromUWriteBytes_56 PROC				; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	mov	eax, DWORD PTR _err$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@ucnv_cbFro
; Line 42
	jmp	SHORT $LN2@ucnv_cbFro
$LN1@ucnv_cbFro:
; Line 50
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ucnv_fromUWriteBytes_56
	add	esp, 32					; 00000020H
$LN2@ucnv_cbFro:
; Line 51
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_cbFromUWriteBytes_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_cbFromUWriteUChars_56
EXTRN	_ucnv_fromUnicode_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_cbFromUWriteUChars_56
_TEXT	SEGMENT
_errBuffLen$8617 = -53					; size = 1
_err2$8616 = -44					; size = 4
_newTargetLimit$8615 = -32				; size = 4
_newTarget$8614 = -20					; size = 4
_oldTarget$ = -8					; size = 4
_args$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLimit$ = 16					; size = 4
_offsetIndex$ = 20					; size = 4
_err$ = 24						; size = 4
_ucnv_cbFromUWriteUChars_56 PROC			; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 74
	mov	eax, DWORD PTR _err$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN8@ucnv_cbFro@2
; Line 76
	jmp	$LN9@ucnv_cbFro@2
$LN8@ucnv_cbFro@2:
; Line 79
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _oldTarget$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ucnv_fromUnicode_56
	add	esp, 32					; 00000020H
; Line 90
	mov	eax, DWORD PTR _args$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN7@ucnv_cbFro@2
$LN6@ucnv_cbFro@2:
; Line 92
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _oldTarget$[ebp]
	je	SHORT $LN7@ucnv_cbFro@2
; Line 94
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _offsetIndex$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 4
	mov	edx, DWORD PTR _args$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 95
	mov	eax, DWORD PTR _oldTarget$[ebp]
	add	eax, 1
	mov	DWORD PTR _oldTarget$[ebp], eax
; Line 96
	jmp	SHORT $LN6@ucnv_cbFro@2
$LN7@ucnv_cbFro@2:
; Line 103
	mov	eax, DWORD PTR _err$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	$LN9@ucnv_cbFro@2
; Line 111
	mov	DWORD PTR _err2$8616[ebp], 0
; Line 115
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	dl, BYTE PTR [ecx+63]
	mov	BYTE PTR _errBuffLen$8617[ebp], dl
; Line 118
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movsx	edx, BYTE PTR _errBuffLen$8617[ebp]
	lea	eax, DWORD PTR [ecx+edx+76]
	mov	DWORD PTR _newTarget$8614[ebp], eax
; Line 121
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 108				; 0000006cH
	mov	DWORD PTR _newTargetLimit$8615[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _newTarget$8614[ebp]
	cmp	eax, DWORD PTR _newTargetLimit$8615[ebp]
	jb	SHORT $LN3@ucnv_cbFro@2
; Line 125
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 5
; Line 126
	jmp	SHORT $LN9@ucnv_cbFro@2
$LN3@ucnv_cbFro@2:
; Line 134
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+63], 0
; Line 143
	lea	eax, DWORD PTR _err2$8616[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _newTargetLimit$8615[ebp]
	push	eax
	lea	ecx, DWORD PTR _newTarget$8614[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ucnv_fromUnicode_56
	add	esp, 32					; 00000020H
; Line 149
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 76					; 0000004cH
	mov	edx, DWORD PTR _newTarget$8614[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+63], dl
; Line 151
	mov	eax, DWORD PTR _newTarget$8614[ebp]
	cmp	eax, DWORD PTR _newTargetLimit$8615[ebp]
	jae	SHORT $LN1@ucnv_cbFro@2
	cmp	DWORD PTR _err2$8616[ebp], 15		; 0000000fH
	jne	SHORT $LN9@ucnv_cbFro@2
$LN1@ucnv_cbFro@2:
; Line 157
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 5
$LN9@ucnv_cbFro@2:
; Line 172
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@ucnv_cbFro@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@ucnv_cbFro@2:
	DD	2
	DD	$LN13@ucnv_cbFro@2
$LN13@ucnv_cbFro@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@ucnv_cbFro@2
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN12@ucnv_cbFro@2
$LN12@ucnv_cbFro@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN11@ucnv_cbFro@2:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_ucnv_cbFromUWriteUChars_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_cbFromUWriteSub_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_cbFromUWriteSub_56
_TEXT	SEGMENT
_source$8638 = -32					; size = 4
_length$ = -20						; size = 4
_converter$ = -8					; size = 4
_args$ = 8						; size = 4
_offsetIndex$ = 12					; size = 4
_err$ = 16						; size = 4
_ucnv_cbFromUWriteSub_56 PROC				; COMDAT
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 182
	mov	eax, DWORD PTR _err$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@ucnv_cbFro@3
; Line 183
	jmp	$LN8@ucnv_cbFro@3
$LN7@ucnv_cbFro@3:
; Line 185
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _converter$[ebp], ecx
; Line 186
	mov	eax, DWORD PTR _converter$[ebp]
	movsx	ecx, BYTE PTR [eax+61]
	mov	DWORD PTR _length$[ebp], ecx
; Line 188
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN6@ucnv_cbFro@3
; Line 189
	jmp	$LN8@ucnv_cbFro@3
$LN6@ucnv_cbFro@3:
; Line 192
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN5@ucnv_cbFro@3
; Line 201
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _source$8638[ebp], ecx
; Line 202
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 1
	mov	eax, DWORD PTR _source$8638[ebp]
	sub	eax, edx
	push	eax
	lea	ecx, DWORD PTR _source$8638[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	call	_ucnv_cbFromUWriteUChars_56
	add	esp, 20					; 00000014H
; Line 203
	jmp	$LN8@ucnv_cbFro@3
$LN5@ucnv_cbFro@3:
; Line 206
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [edx+52], 0
	je	SHORT $LN4@ucnv_cbFro@3
; Line 207
	mov	esi, esp
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN8@ucnv_cbFro@3
$LN4@ucnv_cbFro@3:
; Line 209
	mov	eax, DWORD PTR _converter$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	test	ecx, ecx
	je	SHORT $LN2@ucnv_cbFro@3
	mov	eax, DWORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	cmp	ecx, 255				; 000000ffH
	jg	SHORT $LN2@ucnv_cbFro@3
; Line 216
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _converter$[ebp]
	add	edx, 66					; 00000042H
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	call	_ucnv_cbFromUWriteBytes_56
	add	esp, 20					; 00000014H
; Line 218
	jmp	SHORT $LN8@ucnv_cbFro@3
$LN2@ucnv_cbFro@3:
; Line 221
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	call	_ucnv_cbFromUWriteBytes_56
	add	esp, 20					; 00000014H
$LN8@ucnv_cbFro@3:
; Line 223
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ucnv_cbFro@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@ucnv_cbFro@3:
	DD	1
	DD	$LN11@ucnv_cbFro@3
$LN11@ucnv_cbFro@3:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@ucnv_cbFro@3
$LN10@ucnv_cbFro@3:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_ucnv_cbFromUWriteSub_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_cbToUWriteUChars_56
EXTRN	_ucnv_toUWriteUChars_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_cbToUWriteUChars_56
_TEXT	SEGMENT
_args$ = 8						; size = 4
_source$ = 12						; size = 4
_length$ = 16						; size = 4
_offsetIndex$ = 20					; size = 4
_err$ = 24						; size = 4
_ucnv_cbToUWriteUChars_56 PROC				; COMDAT
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _err$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@ucnv_cbToU
; Line 233
	jmp	SHORT $LN2@ucnv_cbToU
$LN1@ucnv_cbToU:
; Line 241
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ucnv_toUWriteUChars_56
	add	esp, 32					; 00000020H
$LN2@ucnv_cbToU:
; Line 242
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_cbToUWriteUChars_56 ENDP
_TEXT	ENDS
PUBLIC	_ucnv_cbToUWriteSub_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucnv_cbToUWriteSub_56
_TEXT	SEGMENT
_args$ = 8						; size = 4
_offsetIndex$ = 12					; size = 4
_err$ = 16						; size = 4
_ucnv_cbToUWriteSub_56 PROC				; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 252
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movsx	edx, BYTE PTR [ecx+62]
	cmp	edx, 1
	jne	SHORT $LN2@ucnv_cbToU@2
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, BYTE PTR [ecx+66]
	test	edx, edx
	je	SHORT $LN2@ucnv_cbToU@2
; Line 253
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	push	1
	push	OFFSET ?kSubstituteChar1@?1??ucnv_cbToUWriteSub_56@@9@9
	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	call	_ucnv_cbToUWriteUChars_56
	add	esp, 20					; 00000014H
; Line 254
	jmp	SHORT $LN3@ucnv_cbToU@2
$LN2@ucnv_cbToU@2:
; Line 255
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsetIndex$[ebp]
	push	ecx
	push	1
	push	OFFSET ?kSubstituteChar@?1??ucnv_cbToUWriteSub_56@@9@9
	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	call	_ucnv_cbToUWriteUChars_56
	add	esp, 20					; 00000014H
$LN3@ucnv_cbToU@2:
; Line 257
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucnv_cbToUWriteSub_56 ENDP
_TEXT	ENDS
END

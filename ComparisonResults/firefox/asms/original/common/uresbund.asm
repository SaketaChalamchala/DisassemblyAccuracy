; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\uresbund.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
EXTRN	_uenum_unextDefault_56:PROC
_BSS	SEGMENT
_cache	DD	01H DUP (?)
_resbMutex DB	020H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_gLocalesEnum DD 00H
	DD	00H
	DD	FLAT:?ures_loc_closeLocales@@YAXPAUUEnumeration@@@Z
	DD	FLAT:?ures_loc_countLocales@@YAHPAUUEnumeration@@PAW4UErrorCode@@@Z
	DD	FLAT:_uenum_unextDefault_56
	DD	FLAT:?ures_loc_nextLocale@@YAPBDPAUUEnumeration@@PAHPAW4UErrorCode@@@Z
	DD	FLAT:?ures_loc_resetLocales@@YAXPAUUEnumeration@@PAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33362 = -32					; size = 4
_len$33361 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33361[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33362[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33361[ebp]
	cmp	ecx, DWORD PTR _textLength$33362[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33361[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T79719 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T79719[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T79719[ebp]
	or	eax, 1
	mov	DWORD PTR $T79719[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??_7StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`vftable'
PUBLIC	??0StringEnumeration@icu_56@@QAE@ABV01@@Z	; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??_R4StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`vector deleting destructor'
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringEnumeration@icu_56@@6B@ DD 00H		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringEnumeration@icu_56@@@8
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7StringEnumeration@icu_56@@6B@ DD FLAT:??_R4StringEnumeration@icu_56@@6B@ ; icu_56::StringEnumeration::`vftable'
	DD	FLAT:??_EStringEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0StringEnumeration@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringEnumeration::StringEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringEnumeration@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringEnumeration::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$34070 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::StringEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
	mov	DWORD PTR _$S1$34070[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$34070[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$34070[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$34070[ebp], 32		; 00000020H
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$34070[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$34070[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::StringEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`scalar deleting destructor'
EXTRN	??1StringEnumeration@icu_56@@UAE@XZ:PROC	; icu_56::StringEnumeration::~StringEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	108					; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
PUBLIC	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z	; icu_56::MaybeStackArray<char,40>::operator[]
PUBLIC	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
PUBLIC	??0CharString@icu_56@@QAE@XZ			; icu_56::CharString::CharString
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\charstr.h
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0
__ehfuncinfo$??0CharString@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CharString@icu_56@@QAE@XZ PROC			; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@XZ ENDP			; icu_56::CharString::CharString
PUBLIC	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
PUBLIC	??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ; icu_56::CharString::CharString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 43
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 44
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 45
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::CharString
PUBLIC	?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::CharString::append
PUBLIC	??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ; icu_56::CharString::CharString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z PROC	; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 47
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 48
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ENDP	; icu_56::CharString::CharString
PUBLIC	??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::CharString
EXTRN	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC ; icu_56::CharString::append
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_sLength$ = 12						; size = 4
_errorCode$ = 16					; size = 4
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z PROC	; icu_56::CharString::CharString, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 51
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
; Line 52
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 53
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z ENDP	; icu_56::CharString::CharString
PUBLIC	??1CharString@icu_56@@QAE@XZ			; icu_56::CharString::~CharString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CharString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharString@icu_56@@QAE@XZ PROC			; icu_56::CharString::~CharString, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharString@icu_56@@QAE@XZ ENDP			; icu_56::CharString::~CharString
_TEXT	ENDS
PUBLIC	?isEmpty@CharString@icu_56@@QBECXZ		; icu_56::CharString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@CharString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@CharString@icu_56@@QBECXZ PROC			; icu_56::CharString::isEmpty, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@CharString@icu_56@@QBECXZ ENDP			; icu_56::CharString::isEmpty
_TEXT	ENDS
PUBLIC	?length@CharString@icu_56@@QBEHXZ		; icu_56::CharString::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@CharString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@CharString@icu_56@@QBEHXZ PROC			; icu_56::CharString::length, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@CharString@icu_56@@QBEHXZ ENDP			; icu_56::CharString::length
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z	; icu_56::MaybeStackArray<char,40>::operator[]
PUBLIC	??ACharString@icu_56@@QBEDH@Z			; icu_56::CharString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??ACharString@icu_56@@QBEDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??ACharString@icu_56@@QBEDH@Z PROC			; icu_56::CharString::operator[], COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	al, BYTE PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??ACharString@icu_56@@QBEDH@Z ENDP			; icu_56::CharString::operator[]
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
PUBLIC	?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ; icu_56::CharString::toStringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ PROC ; icu_56::CharString::toStringPiece, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@PBDH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ENDP ; icu_56::CharString::toStringPiece
_TEXT	ENDS
PUBLIC	?data@CharString@icu_56@@QBEPBDXZ		; icu_56::CharString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@CharString@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CharString@icu_56@@QBEPBDXZ PROC			; icu_56::CharString::data, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CharString@icu_56@@QBEPBDXZ ENDP			; icu_56::CharString::data
_TEXT	ENDS
PUBLIC	?data@CharString@icu_56@@QAEPADXZ		; icu_56::CharString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@CharString@icu_56@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CharString@icu_56@@QAEPADXZ PROC			; icu_56::CharString::data, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CharString@icu_56@@QAEPADXZ ENDP			; icu_56::CharString::data
_TEXT	ENDS
PUBLIC	?clear@CharString@icu_56@@QAEAAV12@XZ		; icu_56::CharString::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@CharString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@CharString@icu_56@@QAEAAV12@XZ PROC		; icu_56::CharString::clear, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,40>::operator[]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@CharString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::CharString::clear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::append, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@StringPiece@icu_56@@QBEHXZ	; icu_56::StringPiece::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?data@StringPiece@icu_56@@QBEPBDXZ	; icu_56::StringPiece::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z PROC ; icu_56::CharString::append, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@CharString@icu_56@@QBEHXZ	; icu_56::CharString::length
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?data@CharString@icu_56@@QBEPBDXZ	; icu_56::CharString::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::CharString::append
_TEXT	ENDS
PUBLIC	_ures_initStackObject_56
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_initStackObject_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_initStackObject_56 PROC				; COMDAT
; File d:\mozilla\intl\icu\source\common\uresbund.cpp
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 504
	push	152					; 00000098H
	push	0
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 505
	push	1
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z ; ures_setIsStackObject
	add	esp, 8
; Line 506
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_initStackObject_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_state$ = 12						; size = 1
?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z PROC	; ures_setIsStackObject, COMDAT
; Line 488
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 489
	movsx	eax, BYTE PTR _state$[ebp]
	test	eax, eax
	je	SHORT $LN2@ures_setIs
; Line 490
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 491
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+140], 0
; Line 492
	jmp	SHORT $LN3@ures_setIs
$LN2@ures_setIs:
; Line 493
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+136], 19700503		; 012c9b17H
; Line 494
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+140], 19641227		; 012bb38bH
$LN3@ures_setIs:
; Line 496
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z ENDP	; ures_setIsStackObject
_TEXT	ENDS
PUBLIC	_ures_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_close_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_close_56 PROC					; COMDAT
; Line 908
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 909
	push	1
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_closeBundle@@YAXPAUUResourceBundle@@C@Z ; ures_closeBundle
	add	esp, 8
; Line 910
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_close_56 ENDP
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_closeBundle@@YAXPAUUResourceBundle@@C@Z
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_freeBundleObj$ = 12					; size = 1
?ures_closeBundle@@YAXPAUUResourceBundle@@C@Z PROC	; ures_closeBundle, COMDAT
; Line 884
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 885
	cmp	DWORD PTR _resB$[ebp], 0
	je	SHORT $LN5@ures_close
; Line 886
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@ures_close
; Line 887
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?entryClose@@YAXPAUUResourceDataEntry@@@Z ; entryClose
	add	esp, 4
$LN3@ures_close:
; Line 889
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@ures_close
; Line 890
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@ures_close:
; Line 892
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_freeResPath@@YAXPAUUResourceBundle@@@Z ; ures_freeResPath
	add	esp, 4
; Line 894
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_isStackObject@@YACPBUUResourceBundle@@@Z ; ures_isStackObject
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@ures_close
	movsx	eax, BYTE PTR _freeBundleObj$[ebp]
	test	eax, eax
	je	SHORT $LN5@ures_close
; Line 895
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN5@ures_close:
; Line 904
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_closeBundle@@YAXPAUUResourceBundle@@C@Z ENDP	; ures_closeBundle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_isStackObject@@YACPBUUResourceBundle@@@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
_resB$ = 8						; size = 4
?ures_isStackObject@@YACPBUUResourceBundle@@@Z PROC	; ures_isStackObject, COMDAT
; Line 498
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 499
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+136], 19700503		; 012c9b17H
	jne	SHORT $LN3@ures_isSta
	mov	ecx, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [ecx+140], 19641227		; 012bb38bH
	jne	SHORT $LN3@ures_isSta
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@ures_isSta
$LN3@ures_isSta:
	mov	DWORD PTR tv68[ebp], 1
$LN4@ures_isSta:
	mov	al, BYTE PTR tv68[ebp]
; Line 500
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_isStackObject@@YACPBUUResourceBundle@@@Z ENDP	; ures_isStackObject
_TEXT	ENDS
EXTRN	_umtx_unlock_56:PROC
EXTRN	_umtx_lock_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?entryClose@@YAXPAUUResourceDataEntry@@@Z
_TEXT	SEGMENT
_resB$ = 8						; size = 4
?entryClose@@YAXPAUUResourceDataEntry@@@Z PROC		; entryClose, COMDAT
; Line 821
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 822
	push	OFFSET _resbMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 823
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?entryCloseInt@@YAXPAUUResourceDataEntry@@@Z ; entryCloseInt
	add	esp, 4
; Line 824
	push	OFFSET _resbMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 825
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?entryClose@@YAXPAUUResourceDataEntry@@@Z ENDP		; entryClose
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?entryCloseInt@@YAXPAUUResourceDataEntry@@@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_resB$ = 8						; size = 4
?entryCloseInt@@YAXPAUUResourceDataEntry@@@Z PROC	; entryCloseInt, COMDAT
; Line 788
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 789
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN2@entryClose:
; Line 791
	cmp	DWORD PTR _resB$[ebp], 0
	je	SHORT $LN3@entryClose
; Line 792
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[ebp], ecx
; Line 793
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	mov	edx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 813
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _resB$[ebp], eax
; Line 814
	jmp	SHORT $LN2@entryClose
$LN3@entryClose:
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?entryCloseInt@@YAXPAUUResourceDataEntry@@@Z ENDP	; entryCloseInt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_freeResPath@@YAXPAUUResourceBundle@@@Z
_TEXT	SEGMENT
_resB$ = 8						; size = 4
?ures_freeResPath@@YAXPAUUResourceBundle@@@Z PROC	; ures_freeResPath, COMDAT
; Line 874
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 875
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@ures_freeR
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	je	SHORT $LN1@ures_freeR
; Line 876
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@ures_freeR:
; Line 878
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 879
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 880
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_freeResPath@@YAXPAUUResourceBundle@@@Z ENDP	; ures_freeResPath
_TEXT	ENDS
PUBLIC	_ures_copyResb_56
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_copyResb_56
_TEXT	SEGMENT
_isStackObject$ = -5					; size = 1
_r$ = 8							; size = 4
_original$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_copyResb_56 PROC					; COMDAT
; Line 1209
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1211
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN7@ures_copyR
	mov	eax, DWORD PTR _r$[ebp]
	cmp	eax, DWORD PTR _original$[ebp]
	jne	SHORT $LN8@ures_copyR
$LN7@ures_copyR:
; Line 1212
	mov	eax, DWORD PTR _r$[ebp]
	jmp	$LN9@ures_copyR
$LN8@ures_copyR:
; Line 1214
	cmp	DWORD PTR _original$[ebp], 0
	je	$LN6@ures_copyR
; Line 1215
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN5@ures_copyR
; Line 1216
	mov	BYTE PTR _isStackObject$[ebp], 0
; Line 1217
	push	152					; 00000098H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 1219
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN4@ures_copyR
; Line 1220
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1221
	xor	eax, eax
	jmp	$LN9@ures_copyR
$LN4@ures_copyR:
; Line 1223
	jmp	SHORT $LN3@ures_copyR
$LN5@ures_copyR:
; Line 1224
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?ures_isStackObject@@YACPBUUResourceBundle@@@Z ; ures_isStackObject
	add	esp, 4
	mov	BYTE PTR _isStackObject$[ebp], al
; Line 1225
	push	0
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?ures_closeBundle@@YAXPAUUResourceBundle@@C@Z ; ures_closeBundle
	add	esp, 8
$LN3@ures_copyR:
; Line 1227
	push	1
	mov	eax, DWORD PTR _original$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	152					; 00000098H
	mov	ecx, DWORD PTR _original$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1228
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 1229
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 1230
	mov	eax, DWORD PTR _original$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@ures_copyR
; Line 1231
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _original$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _original$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ; ures_appendResPath
	add	esp, 16					; 00000010H
$LN2@ures_copyR:
; Line 1233
	movzx	eax, BYTE PTR _isStackObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z ; ures_setIsStackObject
	add	esp, 8
; Line 1234
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN6@ures_copyR
; Line 1235
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?entryIncrease@@YAXPAUUResourceDataEntry@@@Z ; entryIncrease
	add	esp, 4
$LN6@ures_copyR:
; Line 1238
	mov	eax, DWORD PTR _r$[ebp]
$LN9@ures_copyR:
; Line 1239
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_copyResb_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?entryIncrease@@YAXPAUUResourceDataEntry@@@Z
_TEXT	SEGMENT
_entry$ = 8						; size = 4
?entryIncrease@@YAXPAUUResourceDataEntry@@@Z PROC	; entryIncrease, COMDAT
; File d:\mozilla\intl\icu\source\common\uresbund.cpp
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	push	OFFSET _resbMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 94
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, 1
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN2@entryIncre:
; Line 95
	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@entryIncre
; Line 96
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _entry$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, 1
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 98
	jmp	SHORT $LN2@entryIncre
$LN1@entryIncre:
; Line 99
	push	OFFSET _resbMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?entryIncrease@@YAXPAUUResourceDataEntry@@@Z ENDP	; entryIncrease
_TEXT	ENDS
EXTRN	_uprv_realloc_56:PROC
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_temp$71554 = -20					; size = 4
_resPathLenOrig$ = -8					; size = 4
_resB$ = 8						; size = 4
_toAdd$ = 12						; size = 4
_lenToAdd$ = 16						; size = 4
_status$ = 20						; size = 4
?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z PROC ; ures_appendResPath, COMDAT
; Line 844
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 845
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _resPathLenOrig$[ebp], ecx
; Line 846
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN6@ures_appen
; Line 847
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 848
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx], 0
; Line 849
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+124], 0
$LN6@ures_appen:
; Line 851
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, DWORD PTR _lenToAdd$[ebp]
	mov	edx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [edx+124], ecx
; Line 852
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 1
	cmp	ecx, 64					; 00000040H
	jl	$LN5@ures_appen
; Line 853
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jne	SHORT $LN4@ures_appen
; Line 854
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 1
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 856
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@ures_appen
; Line 857
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 858
	jmp	SHORT $LN7@ures_appen
$LN3@ures_appen:
; Line 860
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 861
	jmp	SHORT $LN5@ures_appen
$LN4@ures_appen:
; Line 862
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _temp$71554[ebp], eax
; Line 864
	cmp	DWORD PTR _temp$71554[ebp], 0
	jne	SHORT $LN1@ures_appen
; Line 865
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 866
	jmp	SHORT $LN7@ures_appen
$LN1@ures_appen:
; Line 868
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR _temp$71554[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN5@ures_appen:
; Line 871
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR _resPathLenOrig$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN7@ures_appen:
; Line 872
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ENDP ; ures_appendResPath
_TEXT	ENDS
PUBLIC	_ures_getString_56
EXTRN	_res_getString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getString_56
_TEXT	SEGMENT
_s$ = -8						; size = 4
_resB$ = 8						; size = 4
_len$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_getString_56 PROC					; COMDAT
; Line 1245
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1247
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ures_getSt
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getSt
$LN3@ures_getSt:
; Line 1248
	xor	eax, eax
	jmp	SHORT $LN5@ures_getSt
$LN4@ures_getSt:
; Line 1250
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN2@ures_getSt
; Line 1251
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1252
	xor	eax, eax
	jmp	SHORT $LN5@ures_getSt
$LN2@ures_getSt:
; Line 1254
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$[ebp], eax
; Line 1255
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN1@ures_getSt
; Line 1256
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getSt:
; Line 1258
	mov	eax, DWORD PTR _s$[ebp]
$LN5@ures_getSt:
; Line 1259
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getString_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getUTF8String_56
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getUTF8String_56
_TEXT	SEGMENT
_s16$ = -20						; size = 4
_length16$ = -8						; size = 4
_resB$ = 8						; size = 4
_dest$ = 12						; size = 4
_pLength$ = 16						; size = 4
_forceCopy$ = 20					; size = 1
_status$ = 24						; size = 4
_ures_getUTF8String_56 PROC				; COMDAT
; Line 1327
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1329
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s16$[ebp], eax
; Line 1330
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _forceCopy$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s16$[ebp]
	push	edx
	call	?ures_toUTF8String@@YAPBDPB_WHPADPAHCPAW4UErrorCode@@@Z ; ures_toUTF8String
	add	esp, 24					; 00000018H
; Line 1331
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ures_getUT@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@ures_getUT@2:
	DD	1
	DD	$LN4@ures_getUT@2
$LN4@ures_getUT@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ures_getUT@2
$LN3@ures_getUT@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	49					; 00000031H
	DB	54					; 00000036H
	DB	0
_ures_getUTF8String_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	_u_strToUTF8_56:PROC
EXTRN	_u_terminateChars_56:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ures_toUTF8String@@YAPBDPB_WHPADPAHCPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_maxLength$71745 = -20					; size = 4
_capacity$ = -8						; size = 4
_s16$ = 8						; size = 4
_length16$ = 12						; size = 4
_dest$ = 16						; size = 4
_pLength$ = 20						; size = 4
_forceCopy$ = 24					; size = 1
_status$ = 28						; size = 4
?ures_toUTF8String@@YAPBDPB_WHPADPAHCPAW4UErrorCode@@@Z PROC ; ures_toUTF8String, COMDAT
; Line 1265
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1268
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@ures_toUTF
; Line 1269
	xor	eax, eax
	jmp	$LN14@ures_toUTF
$LN13@ures_toUTF:
; Line 1271
	cmp	DWORD PTR _pLength$[ebp], 0
	je	SHORT $LN12@ures_toUTF
; Line 1272
	mov	eax, DWORD PTR _pLength$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _capacity$[ebp], ecx
; Line 1273
	jmp	SHORT $LN11@ures_toUTF
$LN12@ures_toUTF:
; Line 1274
	mov	DWORD PTR _capacity$[ebp], 0
$LN11@ures_toUTF:
; Line 1276
	cmp	DWORD PTR _capacity$[ebp], 0
	jl	SHORT $LN9@ures_toUTF
	cmp	DWORD PTR _capacity$[ebp], 0
	jle	SHORT $LN10@ures_toUTF
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN10@ures_toUTF
$LN9@ures_toUTF:
; Line 1277
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1278
	xor	eax, eax
	jmp	$LN14@ures_toUTF
$LN10@ures_toUTF:
; Line 1281
	cmp	DWORD PTR _length16$[ebp], 0
	jne	SHORT $LN8@ures_toUTF
; Line 1283
	cmp	DWORD PTR _pLength$[ebp], 0
	je	SHORT $LN7@ures_toUTF
; Line 1284
	mov	eax, DWORD PTR _pLength$[ebp]
	mov	DWORD PTR [eax], 0
$LN7@ures_toUTF:
; Line 1286
	movsx	eax, BYTE PTR _forceCopy$[ebp]
	test	eax, eax
	je	SHORT $LN6@ures_toUTF
; Line 1287
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
; Line 1288
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	$LN14@ures_toUTF
; Line 1289
	jmp	SHORT $LN5@ures_toUTF
$LN6@ures_toUTF:
; Line 1290
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN14@ures_toUTF
$LN5@ures_toUTF:
; Line 1292
	jmp	SHORT $LN14@ures_toUTF
$LN8@ures_toUTF:
; Line 1294
	mov	eax, DWORD PTR _capacity$[ebp]
	cmp	eax, DWORD PTR _length16$[ebp]
	jge	SHORT $LN3@ures_toUTF
; Line 1296
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s16$[ebp]
	push	edx
	mov	eax, DWORD PTR _pLength$[ebp]
	push	eax
	push	0
	push	0
	call	_u_strToUTF8_56
	add	esp, 24					; 00000018H
	jmp	SHORT $LN14@ures_toUTF
$LN3@ures_toUTF:
; Line 1298
	movsx	eax, BYTE PTR _forceCopy$[ebp]
	test	eax, eax
	jne	SHORT $LN2@ures_toUTF
	cmp	DWORD PTR _length16$[ebp], 715827882	; 2aaaaaaaH
	jg	SHORT $LN2@ures_toUTF
; Line 1313
	mov	eax, DWORD PTR _length16$[ebp]
	imul	eax, 3
	add	eax, 1
	mov	DWORD PTR _maxLength$71745[ebp], eax
; Line 1314
	mov	eax, DWORD PTR _capacity$[ebp]
	cmp	eax, DWORD PTR _maxLength$71745[ebp]
	jle	SHORT $LN2@ures_toUTF
; Line 1315
	mov	eax, DWORD PTR _capacity$[ebp]
	sub	eax, DWORD PTR _maxLength$71745[ebp]
	add	eax, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _dest$[ebp], eax
; Line 1316
	mov	eax, DWORD PTR _maxLength$71745[ebp]
	mov	DWORD PTR _capacity$[ebp], eax
$LN2@ures_toUTF:
; Line 1319
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s16$[ebp]
	push	edx
	mov	eax, DWORD PTR _pLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_strToUTF8_56
	add	esp, 24					; 00000018H
$LN14@ures_toUTF:
; Line 1321
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_toUTF8String@@YAPBDPB_WHPADPAHCPAW4UErrorCode@@@Z ENDP ; ures_toUTF8String
_TEXT	ENDS
PUBLIC	_ures_getBinary_56
EXTRN	_res_getBinary_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getBinary_56
_TEXT	SEGMENT
_p$ = -8						; size = 4
_resB$ = 8						; size = 4
_len$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_getBinary_56 PROC					; COMDAT
; Line 1334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1336
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ures_getBi
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getBi
$LN3@ures_getBi:
; Line 1337
	xor	eax, eax
	jmp	SHORT $LN5@ures_getBi
$LN4@ures_getBi:
; Line 1339
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN2@ures_getBi
; Line 1340
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1341
	xor	eax, eax
	jmp	SHORT $LN5@ures_getBi
$LN2@ures_getBi:
; Line 1343
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getBinary_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
; Line 1344
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@ures_getBi
; Line 1345
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getBi:
; Line 1347
	mov	eax, DWORD PTR _p$[ebp]
$LN5@ures_getBi:
; Line 1348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getBinary_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getIntVector_56
EXTRN	_res_getIntVector_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getIntVector_56
_TEXT	SEGMENT
_p$ = -8						; size = 4
_resB$ = 8						; size = 4
_len$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_getIntVector_56 PROC				; COMDAT
; Line 1351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1353
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ures_getIn
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getIn
$LN3@ures_getIn:
; Line 1354
	xor	eax, eax
	jmp	SHORT $LN5@ures_getIn
$LN4@ures_getIn:
; Line 1356
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN2@ures_getIn
; Line 1357
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1358
	xor	eax, eax
	jmp	SHORT $LN5@ures_getIn
$LN2@ures_getIn:
; Line 1360
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
; Line 1361
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@ures_getIn
; Line 1362
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getIn:
; Line 1364
	mov	eax, DWORD PTR _p$[ebp]
$LN5@ures_getIn:
; Line 1365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getIntVector_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getInt_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getInt_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_status$ = 12						; size = 4
_ures_getInt_56 PROC					; COMDAT
; Line 1369
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1370
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ures_getIn@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getIn@2
$LN3@ures_getIn@2:
; Line 1371
	or	eax, -1
	jmp	SHORT $LN5@ures_getIn@2
$LN4@ures_getIn@2:
; Line 1373
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN2@ures_getIn@2
; Line 1374
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1375
	or	eax, -1
	jmp	SHORT $LN5@ures_getIn@2
$LN2@ures_getIn@2:
; Line 1377
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	cmp	ecx, 7
	je	SHORT $LN1@ures_getIn@2
; Line 1378
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
; Line 1379
	or	eax, -1
	jmp	SHORT $LN5@ures_getIn@2
$LN1@ures_getIn@2:
; Line 1381
	mov	eax, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [eax+128]
	shl	eax, 4
	sar	eax, 4
$LN5@ures_getIn@2:
; Line 1382
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getInt_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getUInt_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getUInt_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_status$ = 12						; size = 4
_ures_getUInt_56 PROC					; COMDAT
; Line 1384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1385
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ures_getUI
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getUI
$LN3@ures_getUI:
; Line 1386
	or	eax, -1
	jmp	SHORT $LN5@ures_getUI
$LN4@ures_getUI:
; Line 1388
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN2@ures_getUI
; Line 1389
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1390
	or	eax, -1
	jmp	SHORT $LN5@ures_getUI
$LN2@ures_getUI:
; Line 1392
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	cmp	ecx, 7
	je	SHORT $LN1@ures_getUI
; Line 1393
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
; Line 1394
	or	eax, -1
	jmp	SHORT $LN5@ures_getUI
$LN1@ures_getUI:
; Line 1396
	mov	eax, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [eax+128]
	and	eax, 268435455				; 0fffffffH
$LN5@ures_getUI:
; Line 1397
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getUInt_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getType_56
EXTRN	_res_getPublicType_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getType_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_getType_56 PROC					; COMDAT
; Line 1399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1400
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_getTy
; Line 1401
	or	eax, -1
	jmp	SHORT $LN2@ures_getTy
$LN1@ures_getTy:
; Line 1403
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_res_getPublicType_56
	add	esp, 4
$LN2@ures_getTy:
; Line 1404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getType_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getKey_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getKey_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_getKey_56 PROC					; COMDAT
; Line 1406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1407
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_getKe
; Line 1408
	xor	eax, eax
	jmp	SHORT $LN2@ures_getKe
$LN1@ures_getKe:
; Line 1411
	mov	eax, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [eax]
$LN2@ures_getKe:
; Line 1412
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getKey_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getSize_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getSize_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_getSize_56 PROC					; COMDAT
; Line 1414
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1415
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_getSi
; Line 1416
	xor	eax, eax
	jmp	SHORT $LN2@ures_getSi
$LN1@ures_getSi:
; Line 1419
	mov	eax, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [eax+148]
$LN2@ures_getSi:
; Line 1420
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getSize_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_resetIterator_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_resetIterator_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_resetIterator_56 PROC				; COMDAT
; Line 1434
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1435
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_reset
; Line 1436
	jmp	SHORT $LN2@ures_reset
$LN1@ures_reset:
; Line 1438
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+144], -1
$LN2@ures_reset:
; Line 1439
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_resetIterator_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_hasNext_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_hasNext_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_hasNext_56 PROC					; COMDAT
; Line 1441
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1442
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_hasNe
; Line 1443
	xor	al, al
	jmp	SHORT $LN2@ures_hasNe
$LN1@ures_hasNe:
; Line 1445
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	sub	ecx, 1
	mov	edx, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [edx+144], ecx
	setl	al
$LN2@ures_hasNe:
; Line 1446
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_hasNext_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getNextString_56
EXTRN	_res_getArrayItem_56:PROC
EXTRN	_res_getTableItemByIndex_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getNextString_56
_TEXT	SEGMENT
tv80 = -208						; size = 4
_r$ = -8						; size = 4
_resB$ = 8						; size = 4
_len$ = 12						; size = 4
_key$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getNextString_56 PROC				; COMDAT
; Line 1448
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1449
	mov	DWORD PTR _r$[ebp], -1
; Line 1451
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN14@ures_getNe
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@ures_getNe
$LN14@ures_getNe:
; Line 1452
	xor	eax, eax
	jmp	$LN16@ures_getNe
$LN15@ures_getNe:
; Line 1454
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN13@ures_getNe
; Line 1455
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1456
	xor	eax, eax
	jmp	$LN16@ures_getNe
$LN13@ures_getNe:
; Line 1459
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	sub	ecx, 1
	mov	edx, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [edx+144], ecx
	jne	SHORT $LN12@ures_getNe
; Line 1460
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1461
	jmp	$LN11@ures_getNe
$LN12@ures_getNe:
; Line 1462
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	add	ecx, 1
	mov	edx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [edx+144], ecx
; Line 1463
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR tv80[ebp], ecx
	cmp	DWORD PTR tv80[ebp], 14			; 0000000eH
	ja	$LN1@ures_getNe
	mov	edx, DWORD PTR tv80[ebp]
	movzx	eax, BYTE PTR $LN18@ures_getNe[edx]
	jmp	DWORD PTR $LN19@ures_getNe[eax*4]
$LN8@ures_getNe:
; Line 1466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	jmp	$LN16@ures_getNe
$LN7@ures_getNe:
; Line 1470
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getTableItemByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1474
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ; ures_getStringWithAlias
	add	esp, 20					; 00000014H
	jmp	$LN16@ures_getNe
$LN5@ures_getNe:
; Line 1477
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getArrayItem_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 1481
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ; ures_getStringWithAlias
	add	esp, 20					; 00000014H
	jmp	SHORT $LN16@ures_getNe
$LN3@ures_getNe:
; Line 1483
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ; ures_getStringWithAlias
	add	esp, 20					; 00000014H
	jmp	SHORT $LN16@ures_getNe
$LN2@ures_getNe:
; Line 1487
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getNe:
; Line 1489
	xor	eax, eax
	jmp	SHORT $LN16@ures_getNe
$LN11@ures_getNe:
; Line 1493
	xor	eax, eax
$LN16@ures_getNe:
; Line 1494
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@ures_getNe:
	DD	$LN8@ures_getNe
	DD	$LN2@ures_getNe
	DD	$LN7@ures_getNe
	DD	$LN3@ures_getNe
	DD	$LN5@ures_getNe
	DD	$LN1@ures_getNe
$LN18@ures_getNe:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	2
	DB	2
	DB	0
	DB	1
	DB	4
	DB	4
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
_ures_getNextString_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getByIndex_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_tempRes$71817 = -20					; size = 4
_result$71816 = -8					; size = 4
_resB$ = 8						; size = 4
_r$ = 12						; size = 4
_sIndex$ = 16						; size = 4
_len$ = 20						; size = 4
_status$ = 24						; size = 4
?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z PROC ; ures_getStringWithAlias, COMDAT
; Line 1422
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1423
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 28					; 0000001cH
	cmp	eax, 3
	jne	SHORT $LN2@ures_getSt@2
; Line 1424
	mov	DWORD PTR _result$71816[ebp], 0
; Line 1425
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _sIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _tempRes$71817[ebp], eax
; Line 1426
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tempRes$71817[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$71816[ebp], eax
; Line 1427
	mov	eax, DWORD PTR _tempRes$71817[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1428
	mov	eax, DWORD PTR _result$71816[ebp]
	jmp	SHORT $LN3@ures_getSt@2
; Line 1429
	jmp	SHORT $LN3@ures_getSt@2
$LN2@ures_getSt@2:
; Line 1430
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getString_56
	add	esp, 12					; 0000000cH
$LN3@ures_getSt@2:
; Line 1432
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ENDP ; ures_getStringWithAlias
_TEXT	ENDS
PUBLIC	_ures_getNextResource_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getNextResource_56
_TEXT	SEGMENT
tv80 = -220						; size = 4
_r$ = -20						; size = 4
_key$ = -8						; size = 4
_resB$ = 8						; size = 4
_fillIn$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_getNextResource_56 PROC				; COMDAT
; Line 1496
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1497
	mov	DWORD PTR _key$[ebp], 0
; Line 1498
	mov	DWORD PTR _r$[ebp], -1
; Line 1500
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN12@ures_getNe@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@ures_getNe@2
$LN12@ures_getNe@2:
; Line 1502
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN14@ures_getNe@2
$LN13@ures_getNe@2:
; Line 1504
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN11@ures_getNe@2
; Line 1505
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1507
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN14@ures_getNe@2
$LN11@ures_getNe@2:
; Line 1510
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	sub	ecx, 1
	mov	edx, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [edx+144], ecx
	jne	SHORT $LN10@ures_getNe@2
; Line 1511
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1513
	jmp	$LN9@ures_getNe@2
$LN10@ures_getNe@2:
; Line 1514
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	add	ecx, 1
	mov	edx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [edx+144], ecx
; Line 1515
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR tv80[ebp], ecx
	cmp	DWORD PTR tv80[ebp], 14			; 0000000eH
	ja	$LN1@ures_getNe@2
	mov	edx, DWORD PTR tv80[ebp]
	movzx	eax, BYTE PTR $LN16@ures_getNe@2[edx]
	jmp	DWORD PTR $LN20@ures_getNe@2[eax*4]
$LN6@ures_getNe@2:
; Line 1521
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fillIn$[ebp]
	push	edx
	call	_ures_copyResb_56
	add	esp, 12					; 0000000cH
	jmp	$LN14@ures_getNe@2
$LN5@ures_getNe@2:
; Line 1525
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getTableItemByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1529
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	jmp	SHORT $LN14@ures_getNe@2
$LN3@ures_getNe@2:
; Line 1532
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getArrayItem_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 1536
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	jmp	SHORT $LN14@ures_getNe@2
$LN1@ures_getNe@2:
; Line 1539
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	SHORT $LN14@ures_getNe@2
$LN9@ures_getNe@2:
; Line 1543
	mov	eax, DWORD PTR _fillIn$[ebp]
$LN14@ures_getNe@2:
; Line 1544
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@ures_getNe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@ures_getNe@2:
	DD	1
	DD	$LN18@ures_getNe@2
$LN18@ures_getNe@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN17@ures_getNe@2
$LN17@ures_getNe@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN20@ures_getNe@2:
	DD	$LN6@ures_getNe@2
	DD	$LN5@ures_getNe@2
	DD	$LN3@ures_getNe@2
	DD	$LN1@ures_getNe@2
$LN16@ures_getNe@2:
	DB	0
	DB	0
	DB	1
	DB	3
	DB	1
	DB	1
	DB	0
	DB	0
	DB	2
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
_ures_getNextResource_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	_ures_openDirect_56
PUBLIC	??_C@_07IJKDDGAJ@ICUDATA?$AA@			; `string'
PUBLIC	??_C@_06NHEDFFBA@LOCALE?$AA@			; `string'
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	__$ArrayPad$
EXTRN	_res_countArrayItems_56:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_T_CString_integerToString_56:PROC
EXTRN	_res_findResource_56:PROC
EXTRN	_strcmp:PROC
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	_strlen:PROC
EXTRN	_res_getAlias_56:PROC
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJKDDGAJ@ICUDATA?$AA@
CONST	SEGMENT
??_C@_07IJKDDGAJ@ICUDATA?$AA@ DB 'ICUDATA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NHEDFFBA@LOCALE?$AA@
CONST	SEGMENT
??_C@_06NHEDFFBA@LOCALE?$AA@ DB 'LOCALE', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv363 = -1152						; size = 4
_usedLen$71694 = -952					; size = 4
_len$71692 = -940					; size = 4
_buf$71691 = -928					; size = 256
_myPath$71654 = -664					; size = 4
_pathBuf$71653 = -652					; size = 4
_stackPath$71652 = -640					; size = 256
_dataEntry$71651 = -376					; size = 4
_type$71639 = -364					; size = 4
_aKey$71626 = -352					; size = 4
_mainRes$71623 = -340					; size = 4
_intStatus$71622 = -328					; size = 4
_temp$71621 = -316					; size = 4
_result$71620 = -304					; size = 4
_capacity$71598 = -292					; size = 4
_keyPath$71597 = -280					; size = 4
_locale$71596 = -268					; size = 4
_path$71595 = -256					; size = 4
_chAlias$71594 = -244					; size = 4
_stackAlias$71593 = -232				; size = 200
_alias$71591 = -24					; size = 4
_len$71590 = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_rdata$ = 8						; size = 4
_r$ = 12						; size = 4
_key$ = 16						; size = 4
_idx$ = 20						; size = 4
_realData$ = 24						; size = 4
_parent$ = 28						; size = 4
_noAlias$ = 32						; size = 4
_resB$ = 36						; size = 4
_status$ = 40						; size = 4
?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z PROC ; init_resb_result, COMDAT
; Line 916
	push	ebp
	mov	ebp, esp
	sub	esp, 1152				; 00000480H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1152]
	mov	ecx, 288				; 00000120H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 917
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN67@init_resb_
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN68@init_resb_
$LN67@init_resb_:
; Line 918
	mov	eax, DWORD PTR _resB$[ebp]
	jmp	$LN69@init_resb_
$LN68@init_resb_:
; Line 920
	cmp	DWORD PTR _parent$[ebp], 0
	jne	SHORT $LN66@init_resb_
; Line 921
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 922
	xor	eax, eax
	jmp	$LN69@init_resb_
$LN66@init_resb_:
; Line 924
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 28					; 0000001cH
	cmp	eax, 3
	jne	$LN65@init_resb_
; Line 925
	cmp	DWORD PTR _noAlias$[ebp], 256		; 00000100H
	jge	$LN64@init_resb_
; Line 926
	mov	DWORD PTR _len$71590[ebp], 0
; Line 927
	lea	eax, DWORD PTR _len$71590[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rdata$[ebp]
	push	edx
	call	_res_getAlias_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _alias$71591[ebp], eax
; Line 928
	cmp	DWORD PTR _len$71590[ebp], 0
	jle	$LN63@init_resb_
; Line 931
	mov	DWORD PTR _chAlias$71594[ebp], 0
	mov	DWORD PTR _path$71595[ebp], 0
	mov	DWORD PTR _locale$71596[ebp], 0
	mov	DWORD PTR _keyPath$71597[ebp], 0
; Line 947
	mov	eax, DWORD PTR _len$71590[ebp]
	add	eax, 1
	mov	DWORD PTR _len$71590[ebp], eax
; Line 948
	mov	eax, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN62@init_resb_
; Line 949
	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _capacity$71598[ebp], eax
; Line 950
	jmp	SHORT $LN61@init_resb_
$LN62@init_resb_:
; Line 951
	mov	DWORD PTR _capacity$71598[ebp], 0
$LN61@init_resb_:
; Line 953
	mov	eax, DWORD PTR _capacity$71598[ebp]
	cmp	eax, DWORD PTR _len$71590[ebp]
	jge	SHORT $LN60@init_resb_
; Line 954
	mov	eax, DWORD PTR _len$71590[ebp]
	mov	DWORD PTR _capacity$71598[ebp], eax
$LN60@init_resb_:
; Line 956
	cmp	DWORD PTR _capacity$71598[ebp], 200	; 000000c8H
	jg	SHORT $LN59@init_resb_
; Line 957
	mov	DWORD PTR _capacity$71598[ebp], 200	; 000000c8H
; Line 958
	lea	eax, DWORD PTR _stackAlias$71593[ebp]
	mov	DWORD PTR _chAlias$71594[ebp], eax
; Line 959
	jmp	SHORT $LN58@init_resb_
$LN59@init_resb_:
; Line 960
	mov	eax, DWORD PTR _capacity$71598[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _chAlias$71594[ebp], eax
; Line 962
	cmp	DWORD PTR _chAlias$71594[ebp], 0
	jne	SHORT $LN58@init_resb_
; Line 963
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 964
	xor	eax, eax
	jmp	$LN69@init_resb_
$LN58@init_resb_:
; Line 967
	mov	eax, DWORD PTR _len$71590[ebp]
	push	eax
	mov	ecx, DWORD PTR _chAlias$71594[ebp]
	push	ecx
	mov	edx, DWORD PTR _alias$71591[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 969
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	$LN56@init_resb_
; Line 971
	push	47					; 0000002fH
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	add	eax, 1
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _locale$71596[ebp], eax
; Line 972
	cmp	DWORD PTR _locale$71596[ebp], 0
	jne	SHORT $LN55@init_resb_
; Line 973
	push	0
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _locale$71596[ebp], eax
; Line 974
	jmp	SHORT $LN54@init_resb_
$LN55@init_resb_:
; Line 975
	mov	eax, DWORD PTR _locale$71596[ebp]
	mov	BYTE PTR [eax], 0
; Line 976
	mov	eax, DWORD PTR _locale$71596[ebp]
	add	eax, 1
	mov	DWORD PTR _locale$71596[ebp], eax
$LN54@init_resb_:
; Line 978
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	add	eax, 1
	mov	DWORD PTR _path$71595[ebp], eax
; Line 979
	push	OFFSET ??_C@_06NHEDFFBA@LOCALE?$AA@
	mov	eax, DWORD PTR _path$71595[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN53@init_resb_
; Line 983
	mov	eax, DWORD PTR _locale$71596[ebp]
	mov	DWORD PTR _keyPath$71597[ebp], eax
; Line 984
	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _locale$71596[ebp], edx
; Line 985
	mov	eax, DWORD PTR _realData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _path$71595[ebp], ecx
; Line 986
	jmp	SHORT $LN52@init_resb_
$LN53@init_resb_:
; Line 987
	push	OFFSET ??_C@_07IJKDDGAJ@ICUDATA?$AA@
	mov	eax, DWORD PTR _path$71595[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN51@init_resb_
; Line 988
	mov	DWORD PTR _path$71595[ebp], 0
$LN51@init_resb_:
; Line 990
	push	47					; 0000002fH
	mov	eax, DWORD PTR _locale$71596[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _keyPath$71597[ebp], eax
; Line 991
	cmp	DWORD PTR _keyPath$71597[ebp], 0
	je	SHORT $LN52@init_resb_
; Line 992
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	mov	BYTE PTR [eax], 0
; Line 993
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	add	eax, 1
	mov	DWORD PTR _keyPath$71597[ebp], eax
$LN52@init_resb_:
; Line 996
	jmp	SHORT $LN49@init_resb_
$LN56@init_resb_:
; Line 998
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	mov	DWORD PTR _locale$71596[ebp], eax
; Line 999
	push	47					; 0000002fH
	mov	eax, DWORD PTR _locale$71596[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _keyPath$71597[ebp], eax
; Line 1000
	cmp	DWORD PTR _keyPath$71597[ebp], 0
	je	SHORT $LN48@init_resb_
; Line 1001
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	mov	BYTE PTR [eax], 0
; Line 1002
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	add	eax, 1
	mov	DWORD PTR _keyPath$71597[ebp], eax
$LN48@init_resb_:
; Line 1004
	mov	eax, DWORD PTR _realData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _path$71595[ebp], ecx
$LN49@init_resb_:
; Line 1011
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR _result$71620[ebp], eax
; Line 1012
	mov	DWORD PTR _temp$71621[ebp], 0
; Line 1013
	mov	DWORD PTR _intStatus$71622[ebp], 0
; Line 1014
	lea	eax, DWORD PTR _intStatus$71622[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$71596[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$71595[ebp]
	push	edx
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _mainRes$71623[ebp], eax
; Line 1015
	mov	eax, DWORD PTR _intStatus$71622[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN47@init_resb_
; Line 1016
	cmp	DWORD PTR _keyPath$71597[ebp], 0
	jne	$LN46@init_resb_
; Line 1024
	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _aKey$71626[ebp], ecx
; Line 1025
	cmp	DWORD PTR _aKey$71626[ebp], 0
	je	SHORT $LN45@init_resb_
; Line 1026
	mov	eax, DWORD PTR _aKey$71626[ebp]
	push	eax
	mov	ecx, DWORD PTR _chAlias$71594[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1027
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	mov	DWORD PTR _aKey$71626[ebp], eax
; Line 1028
	lea	eax, DWORD PTR _temp$71621[ebp]
	push	eax
	lea	ecx, DWORD PTR _aKey$71626[ebp]
	push	ecx
	mov	edx, DWORD PTR _mainRes$71623[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _mainRes$71623[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_findResource_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1029
	jmp	SHORT $LN44@init_resb_
$LN45@init_resb_:
; Line 1030
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _r$[ebp], ecx
$LN44@init_resb_:
; Line 1032
	cmp	DWORD PTR _key$[ebp], 0
	je	$LN43@init_resb_
; Line 1036
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _len$71590[ebp], eax
; Line 1037
	mov	eax, DWORD PTR _len$71590[ebp]
	cmp	eax, DWORD PTR _capacity$71598[ebp]
	jle	SHORT $LN42@init_resb_
; Line 1038
	mov	eax, DWORD PTR _len$71590[ebp]
	mov	DWORD PTR _capacity$71598[ebp], eax
; Line 1039
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	lea	ecx, DWORD PTR _stackAlias$71593[ebp]
	cmp	eax, ecx
	jne	SHORT $LN41@init_resb_
; Line 1040
	mov	eax, DWORD PTR _capacity$71598[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _chAlias$71594[ebp], eax
; Line 1041
	jmp	SHORT $LN40@init_resb_
$LN41@init_resb_:
; Line 1042
	mov	eax, DWORD PTR _capacity$71598[ebp]
	push	eax
	mov	ecx, DWORD PTR _chAlias$71594[ebp]
	push	ecx
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _chAlias$71594[ebp], eax
$LN40@init_resb_:
; Line 1044
	cmp	DWORD PTR _chAlias$71594[ebp], 0
	jne	SHORT $LN42@init_resb_
; Line 1045
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1046
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1047
	xor	eax, eax
	jmp	$LN69@init_resb_
$LN42@init_resb_:
; Line 1050
	push	1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _len$71590[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1051
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	mov	DWORD PTR _aKey$71626[ebp], eax
; Line 1052
	lea	eax, DWORD PTR _temp$71621[ebp]
	push	eax
	lea	ecx, DWORD PTR _aKey$71626[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_findResource_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
	jmp	SHORT $LN38@init_resb_
$LN43@init_resb_:
; Line 1053
	cmp	DWORD PTR _idx$[ebp], -1
	je	SHORT $LN38@init_resb_
; Line 1056
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 28					; 0000001cH
	mov	DWORD PTR _type$71639[ebp], eax
; Line 1057
	cmp	DWORD PTR _type$71639[ebp], 2
	je	SHORT $LN35@init_resb_
	cmp	DWORD PTR _type$71639[ebp], 5
	je	SHORT $LN35@init_resb_
	cmp	DWORD PTR _type$71639[ebp], 4
	jne	SHORT $LN36@init_resb_
$LN35@init_resb_:
; Line 1058
	lea	eax, DWORD PTR _aKey$71626[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getTableItemByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1059
	jmp	SHORT $LN38@init_resb_
$LN36@init_resb_:
; Line 1060
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mainRes$71623[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getArrayItem_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
$LN38@init_resb_:
; Line 1063
	cmp	DWORD PTR _r$[ebp], -1
	je	SHORT $LN33@init_resb_
; Line 1064
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _noAlias$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	push	eax
	mov	ecx, DWORD PTR _mainRes$71623[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	-1
	mov	eax, DWORD PTR _temp$71621[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mainRes$71623[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	mov	DWORD PTR _result$71620[ebp], eax
; Line 1065
	jmp	SHORT $LN32@init_resb_
$LN33@init_resb_:
; Line 1066
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 1067
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR _result$71620[ebp], eax
$LN32@init_resb_:
; Line 1069
	jmp	$LN31@init_resb_
$LN46@init_resb_:
; Line 1077
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _dataEntry$71651[ebp], ecx
; Line 1079
	lea	eax, DWORD PTR _stackPath$71652[ebp]
	mov	DWORD PTR _pathBuf$71653[ebp], eax
	mov	eax, DWORD PTR _pathBuf$71653[ebp]
	mov	DWORD PTR _myPath$71654[ebp], eax
; Line 1080
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 256				; 00000100H
	jbe	SHORT $LN30@init_resb_
; Line 1081
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _pathBuf$71653[ebp], eax
; Line 1082
	cmp	DWORD PTR _pathBuf$71653[ebp], 0
	jne	SHORT $LN30@init_resb_
; Line 1083
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1084
	xor	eax, eax
	jmp	$LN69@init_resb_
$LN30@init_resb_:
; Line 1087
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	push	eax
	mov	ecx, DWORD PTR _pathBuf$71653[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1088
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	mov	DWORD PTR _result$71620[ebp], eax
$LN28@init_resb_:
; Line 1091
	mov	eax, DWORD PTR _dataEntry$71651[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _r$[ebp], ecx
$LN25@init_resb_:
; Line 1093
	mov	eax, DWORD PTR _myPath$71654[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN24@init_resb_
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN24@init_resb_
; Line 1094
	lea	eax, DWORD PTR _temp$71621[ebp]
	push	eax
	lea	ecx, DWORD PTR _myPath$71654[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataEntry$71651[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_findResource_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1095
	cmp	DWORD PTR _r$[ebp], -1
	je	SHORT $LN23@init_resb_
; Line 1096
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _noAlias$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _result$71620[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataEntry$71651[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _temp$71621[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataEntry$71651[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	mov	DWORD PTR _resB$[ebp], eax
; Line 1097
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR _result$71620[ebp], eax
; Line 1098
	cmp	DWORD PTR _result$71620[ebp], 0
	je	SHORT $LN22@init_resb_
; Line 1099
	mov	eax, DWORD PTR _result$71620[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _r$[ebp], ecx
; Line 1100
	mov	eax, DWORD PTR _result$71620[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _dataEntry$71651[ebp], ecx
$LN22@init_resb_:
; Line 1102
	jmp	SHORT $LN21@init_resb_
$LN23@init_resb_:
; Line 1103
	jmp	SHORT $LN24@init_resb_
$LN21@init_resb_:
; Line 1105
	jmp	$LN25@init_resb_
$LN24@init_resb_:
; Line 1106
	mov	eax, DWORD PTR _dataEntry$71651[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _dataEntry$71651[ebp], ecx
; Line 1107
	mov	eax, DWORD PTR _keyPath$71597[ebp]
	push	eax
	mov	ecx, DWORD PTR _pathBuf$71653[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1108
	mov	eax, DWORD PTR _pathBuf$71653[ebp]
	mov	DWORD PTR _myPath$71654[ebp], eax
; Line 1109
	cmp	DWORD PTR _r$[ebp], -1
	jne	SHORT $LN26@init_resb_
	cmp	DWORD PTR _dataEntry$71651[ebp], 0
	jne	$LN28@init_resb_
$LN26@init_resb_:
; Line 1110
	cmp	DWORD PTR _r$[ebp], -1
	jne	SHORT $LN19@init_resb_
; Line 1111
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 1112
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR _result$71620[ebp], eax
$LN19@init_resb_:
; Line 1114
	mov	eax, DWORD PTR _pathBuf$71653[ebp]
	lea	ecx, DWORD PTR _stackPath$71652[ebp]
	cmp	eax, ecx
	je	SHORT $LN31@init_resb_
; Line 1115
	mov	eax, DWORD PTR _pathBuf$71653[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN31@init_resb_:
; Line 1118
	jmp	SHORT $LN17@init_resb_
$LN47@init_resb_:
; Line 1119
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _intStatus$71622[ebp]
	mov	DWORD PTR [eax], ecx
$LN17@init_resb_:
; Line 1121
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	lea	ecx, DWORD PTR _stackAlias$71593[ebp]
	cmp	eax, ecx
	je	SHORT $LN16@init_resb_
; Line 1122
	mov	eax, DWORD PTR _chAlias$71594[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN16@init_resb_:
; Line 1124
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	cmp	eax, DWORD PTR _result$71620[ebp]
	je	SHORT $LN15@init_resb_
; Line 1125
	mov	eax, DWORD PTR _mainRes$71623[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN15@init_resb_:
; Line 1127
	mov	eax, DWORD PTR _result$71620[ebp]
	jmp	$LN69@init_resb_
; Line 1129
	jmp	SHORT $LN14@init_resb_
$LN63@init_resb_:
; Line 1131
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1132
	mov	eax, DWORD PTR _resB$[ebp]
	jmp	$LN69@init_resb_
$LN14@init_resb_:
; Line 1134
	jmp	SHORT $LN65@init_resb_
$LN64@init_resb_:
; Line 1135
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 24			; 00000018H
; Line 1136
	mov	eax, DWORD PTR _resB$[ebp]
	jmp	$LN69@init_resb_
$LN65@init_resb_:
; Line 1139
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN12@init_resb_
; Line 1140
	push	152					; 00000098H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _resB$[ebp], eax
; Line 1142
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN11@init_resb_
; Line 1143
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1144
	xor	eax, eax
	jmp	$LN69@init_resb_
$LN11@init_resb_:
; Line 1146
	push	0
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z ; ures_setIsStackObject
	add	esp, 8
; Line 1147
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 1148
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 1149
	jmp	SHORT $LN10@init_resb_
$LN12@init_resb_:
; Line 1150
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN9@init_resb_
; Line 1151
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?entryClose@@YAXPAUUResourceDataEntry@@@Z ; entryClose
	add	esp, 4
$LN9@init_resb_:
; Line 1153
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN8@init_resb_
; Line 1154
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN8@init_resb_:
; Line 1167
	mov	eax, DWORD PTR _parent$[ebp]
	cmp	eax, DWORD PTR _resB$[ebp]
	je	SHORT $LN10@init_resb_
; Line 1168
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_freeResPath@@YAXPAUUResourceBundle@@@Z ; ures_freeResPath
	add	esp, 4
$LN10@init_resb_:
; Line 1171
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR _realData$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1172
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?entryIncrease@@YAXPAUUResourceDataEntry@@@Z ; entryIncrease
	add	esp, 4
; Line 1173
	mov	eax, DWORD PTR _resB$[ebp]
	mov	BYTE PTR [eax+132], 0
; Line 1174
	mov	eax, DWORD PTR _resB$[ebp]
	mov	BYTE PTR [eax+133], 0
; Line 1175
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+144], -1
; Line 1176
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1178
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR _parent$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 1179
	mov	eax, DWORD PTR _parent$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN6@init_resb_
	mov	eax, DWORD PTR _parent$[ebp]
	cmp	eax, DWORD PTR _resB$[ebp]
	je	SHORT $LN6@init_resb_
; Line 1180
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parent$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _parent$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ; ures_appendResPath
	add	esp, 16					; 00000010H
$LN6@init_resb_:
; Line 1182
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN5@init_resb_
; Line 1183
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ; ures_appendResPath
	add	esp, 16					; 00000010H
; Line 1184
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movsx	ecx, BYTE PTR [eax+ecx-1]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN4@init_resb_
; Line 1185
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	call	?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ; ures_appendResPath
	add	esp, 16					; 00000010H
$LN4@init_resb_:
; Line 1186
	jmp	SHORT $LN3@init_resb_
$LN5@init_resb_:
; Line 1187
	cmp	DWORD PTR _idx$[ebp], 0
	jl	SHORT $LN3@init_resb_
; Line 1189
	push	10					; 0000000aH
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$71691[ebp]
	push	ecx
	call	_T_CString_integerToString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _len$71692[ebp], eax
; Line 1190
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$71692[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$71691[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ; ures_appendResPath
	add	esp, 16					; 00000010H
; Line 1191
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movsx	ecx, BYTE PTR [eax+ecx-1]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN3@init_resb_
; Line 1192
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	call	?ures_appendResPath@@YAXPAUUResourceBundle@@PBDHPAW4UErrorCode@@@Z ; ures_appendResPath
	add	esp, 16					; 00000010H
$LN3@init_resb_:
; Line 1197
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _resB$[ebp]
	cmp	eax, DWORD PTR [ecx+16]
	jne	SHORT $LN71@init_resb_
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR tv363[ebp], eax
	jmp	SHORT $LN72@init_resb_
$LN71@init_resb_:
	mov	DWORD PTR tv363[ebp], 0
$LN72@init_resb_:
	mov	ecx, DWORD PTR tv363[ebp]
	mov	DWORD PTR _usedLen$71694[ebp], ecx
; Line 1198
	mov	eax, 64					; 00000040H
	sub	eax, DWORD PTR _usedLen$71694[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _usedLen$71694[ebp]
	mov	edx, DWORD PTR _resB$[ebp]
	lea	eax, DWORD PTR [edx+ecx+60]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1201
	mov	eax, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1202
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 1204
	push	1
	mov	eax, DWORD PTR _rdata$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	40					; 00000028H
	mov	ecx, DWORD PTR _rdata$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1205
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_countArrayItems_56
	add	esp, 8
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [ecx+148], eax
; Line 1206
	mov	eax, DWORD PTR _resB$[ebp]
$LN69@init_resb_:
; Line 1207
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN82@init_resb_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1152				; 00000480H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN82@init_resb_:
	DD	8
	DD	$LN81@init_resb_
$LN81@init_resb_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN73@init_resb_
	DD	-232					; ffffff18H
	DD	200					; 000000c8H
	DD	$LN74@init_resb_
	DD	-316					; fffffec4H
	DD	4
	DD	$LN75@init_resb_
	DD	-328					; fffffeb8H
	DD	4
	DD	$LN76@init_resb_
	DD	-352					; fffffea0H
	DD	4
	DD	$LN77@init_resb_
	DD	-640					; fffffd80H
	DD	256					; 00000100H
	DD	$LN78@init_resb_
	DD	-664					; fffffd68H
	DD	4
	DD	$LN79@init_resb_
	DD	-928					; fffffc60H
	DD	256					; 00000100H
	DD	$LN80@init_resb_
$LN80@init_resb_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN79@init_resb_:
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN78@init_resb_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN77@init_resb_:
	DB	97					; 00000061H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN76@init_resb_:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN75@init_resb_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN74@init_resb_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN73@init_resb_:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ENDP ; init_resb_result
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ures_getByIndex_56
_TEXT	SEGMENT
tv75 = -220						; size = 4
_r$ = -20						; size = 4
_key$ = -8						; size = 4
_resB$ = 8						; size = 4
_indexR$ = 12						; size = 4
_fillIn$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getByIndex_56 PROC				; COMDAT
; File d:\mozilla\intl\icu\source\common\uresbund.cpp
; Line 1546
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1547
	mov	DWORD PTR _key$[ebp], 0
; Line 1548
	mov	DWORD PTR _r$[ebp], -1
; Line 1550
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN12@ures_getBy
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@ures_getBy
$LN12@ures_getBy:
; Line 1552
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN14@ures_getBy
$LN13@ures_getBy:
; Line 1554
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN11@ures_getBy
; Line 1555
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1557
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN14@ures_getBy
$LN11@ures_getBy:
; Line 1560
	cmp	DWORD PTR _indexR$[ebp], 0
	jl	$LN10@ures_getBy
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	cmp	ecx, DWORD PTR _indexR$[ebp]
	jle	$LN10@ures_getBy
; Line 1561
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR tv75[ebp], ecx
	cmp	DWORD PTR tv75[ebp], 14			; 0000000eH
	ja	$LN2@ures_getBy
	mov	edx, DWORD PTR tv75[ebp]
	movzx	eax, BYTE PTR $LN16@ures_getBy[edx]
	jmp	DWORD PTR $LN20@ures_getBy[eax*4]
$LN7@ures_getBy:
; Line 1567
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fillIn$[ebp]
	push	edx
	call	_ures_copyResb_56
	add	esp, 12					; 0000000cH
	jmp	$LN14@ures_getBy
$LN6@ures_getBy:
; Line 1571
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _indexR$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1575
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _indexR$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	jmp	SHORT $LN14@ures_getBy
$LN4@ures_getBy:
; Line 1578
	mov	eax, DWORD PTR _indexR$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getArrayItem_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 1582
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _indexR$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	jmp	SHORT $LN14@ures_getBy
$LN2@ures_getBy:
; Line 1585
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	SHORT $LN14@ures_getBy
; Line 1587
	jmp	SHORT $LN1@ures_getBy
$LN10@ures_getBy:
; Line 1588
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN1@ures_getBy:
; Line 1591
	mov	eax, DWORD PTR _fillIn$[ebp]
$LN14@ures_getBy:
; Line 1592
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@ures_getBy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN19@ures_getBy:
	DD	1
	DD	$LN18@ures_getBy
$LN18@ures_getBy:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN17@ures_getBy
$LN17@ures_getBy:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN20@ures_getBy:
	DD	$LN7@ures_getBy
	DD	$LN6@ures_getBy
	DD	$LN4@ures_getBy
	DD	$LN2@ures_getBy
$LN16@ures_getBy:
	DB	0
	DB	0
	DB	1
	DB	3
	DB	1
	DB	1
	DB	0
	DB	0
	DB	2
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
_ures_getByIndex_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getStringByIndex_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getStringByIndex_56
_TEXT	SEGMENT
tv75 = -220						; size = 4
_r$ = -20						; size = 4
_key$ = -8						; size = 4
_resB$ = 8						; size = 4
_indexS$ = 12						; size = 4
_len$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getStringByIndex_56 PROC				; COMDAT
; Line 1594
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1595
	mov	DWORD PTR _key$[ebp], 0
; Line 1596
	mov	DWORD PTR _r$[ebp], -1
; Line 1598
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN14@ures_getSt@3
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@ures_getSt@3
$LN14@ures_getSt@3:
; Line 1599
	xor	eax, eax
	jmp	$LN16@ures_getSt@3
$LN15@ures_getSt@3:
; Line 1601
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN13@ures_getSt@3
; Line 1602
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1603
	xor	eax, eax
	jmp	$LN16@ures_getSt@3
$LN13@ures_getSt@3:
; Line 1606
	cmp	DWORD PTR _indexS$[ebp], 0
	jl	$LN12@ures_getSt@3
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	cmp	ecx, DWORD PTR _indexS$[ebp]
	jle	$LN12@ures_getSt@3
; Line 1607
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR tv75[ebp], ecx
	cmp	DWORD PTR tv75[ebp], 14			; 0000000eH
	ja	$LN2@ures_getSt@3
	mov	edx, DWORD PTR tv75[ebp]
	movzx	eax, BYTE PTR $LN18@ures_getSt@3[edx]
	jmp	DWORD PTR $LN22@ures_getSt@3[eax*4]
$LN9@ures_getSt@3:
; Line 1610
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	jmp	$LN16@ures_getSt@3
$LN8@ures_getSt@3:
; Line 1614
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _indexS$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1618
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _indexS$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	call	?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ; ures_getStringWithAlias
	add	esp, 20					; 00000014H
	jmp	$LN16@ures_getSt@3
$LN6@ures_getSt@3:
; Line 1621
	mov	eax, DWORD PTR _indexS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getArrayItem_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 1625
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _indexS$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	call	?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ; ures_getStringWithAlias
	add	esp, 20					; 00000014H
	jmp	SHORT $LN16@ures_getSt@3
$LN4@ures_getSt@3:
; Line 1627
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _indexS$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	?ures_getStringWithAlias@@YAPB_WPBUUResourceBundle@@IHPAHPAW4UErrorCode@@@Z ; ures_getStringWithAlias
	add	esp, 20					; 00000014H
	jmp	SHORT $LN16@ures_getSt@3
$LN3@ures_getSt@3:
; Line 1631
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
; Line 1632
	jmp	SHORT $LN10@ures_getSt@3
$LN2@ures_getSt@3:
; Line 1635
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
$LN10@ures_getSt@3:
; Line 1638
	jmp	SHORT $LN1@ures_getSt@3
$LN12@ures_getSt@3:
; Line 1639
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN1@ures_getSt@3:
; Line 1641
	xor	eax, eax
$LN16@ures_getSt@3:
; Line 1642
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@ures_getSt@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN21@ures_getSt@3:
	DD	1
	DD	$LN20@ures_getSt@3
$LN20@ures_getSt@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN19@ures_getSt@3
$LN19@ures_getSt@3:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN22@ures_getSt@3:
	DD	$LN9@ures_getSt@3
	DD	$LN3@ures_getSt@3
	DD	$LN8@ures_getSt@3
	DD	$LN4@ures_getSt@3
	DD	$LN6@ures_getSt@3
	DD	$LN2@ures_getSt@3
$LN18@ures_getSt@3:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	2
	DB	2
	DB	0
	DB	1
	DB	4
	DB	4
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
_ures_getStringByIndex_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getUTF8StringByIndex_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getUTF8StringByIndex_56
_TEXT	SEGMENT
_s16$ = -20						; size = 4
_length16$ = -8						; size = 4
_resB$ = 8						; size = 4
_idx$ = 12						; size = 4
_dest$ = 16						; size = 4
_pLength$ = 20						; size = 4
_forceCopy$ = 24					; size = 1
_status$ = 28						; size = 4
_ures_getUTF8StringByIndex_56 PROC			; COMDAT
; Line 1649
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1651
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s16$[ebp], eax
; Line 1652
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _forceCopy$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s16$[ebp]
	push	edx
	call	?ures_toUTF8String@@YAPBDPB_WHPADPAHCPAW4UErrorCode@@@Z ; ures_toUTF8String
	add	esp, 24					; 00000018H
; Line 1653
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ures_getUT@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@ures_getUT@3:
	DD	1
	DD	$LN4@ures_getUT@3
$LN4@ures_getUT@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ures_getUT@3
$LN3@ures_getUT@3:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	49					; 00000031H
	DB	54					; 00000036H
	DB	0
_ures_getUTF8StringByIndex_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_findSubResource_56
PUBLIC	_ures_open_56
PUBLIC	_ures_findResource_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_findResource_56
_TEXT	SEGMENT
_length$ = -92						; size = 4
_localeEnd$ = -80					; size = 4
_locale$ = -68						; size = 4
_save$ = -56						; size = 4
_pathToResource$ = -44					; size = 4
_packageName$ = -32					; size = 4
_result$ = -20						; size = 4
_first$ = -8						; size = 4
_path$ = 8						; size = 4
_fillIn$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_findResource_56 PROC				; COMDAT
; Line 1661
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1662
	mov	DWORD PTR _first$[ebp], 0
; Line 1663
	mov	eax, DWORD PTR _fillIn$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1664
	mov	DWORD PTR _packageName$[ebp], 0
; Line 1665
	mov	DWORD PTR _pathToResource$[ebp], 0
	mov	DWORD PTR _save$[ebp], 0
; Line 1666
	mov	DWORD PTR _locale$[ebp], 0
	mov	DWORD PTR _localeEnd$[ebp], 0
; Line 1669
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN9@ures_findR
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@ures_findR
$LN9@ures_findR:
; Line 1670
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN11@ures_findR
$LN10@ures_findR:
; Line 1673
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 1674
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _pathToResource$[ebp], eax
	mov	ecx, DWORD PTR _pathToResource$[ebp]
	mov	DWORD PTR _save$[ebp], ecx
; Line 1676
	cmp	DWORD PTR _pathToResource$[ebp], 0
	jne	SHORT $LN8@ures_findR
; Line 1677
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1678
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN11@ures_findR
$LN8@ures_findR:
; Line 1680
	push	1
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	eax, DWORD PTR _pathToResource$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1682
	mov	eax, DWORD PTR _pathToResource$[ebp]
	mov	DWORD PTR _locale$[ebp], eax
; Line 1683
	mov	eax, DWORD PTR _pathToResource$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN7@ures_findR
; Line 1684
	mov	eax, DWORD PTR _pathToResource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pathToResource$[ebp], eax
; Line 1685
	mov	eax, DWORD PTR _pathToResource$[ebp]
	mov	DWORD PTR _packageName$[ebp], eax
; Line 1686
	push	47					; 0000002fH
	mov	eax, DWORD PTR _pathToResource$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _pathToResource$[ebp], eax
; Line 1687
	cmp	DWORD PTR _pathToResource$[ebp], 0
	jne	SHORT $LN6@ures_findR
; Line 1688
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1689
	jmp	SHORT $LN7@ures_findR
$LN6@ures_findR:
; Line 1690
	mov	eax, DWORD PTR _pathToResource$[ebp]
	mov	BYTE PTR [eax], 0
; Line 1691
	mov	eax, DWORD PTR _pathToResource$[ebp]
	add	eax, 1
	mov	DWORD PTR _locale$[ebp], eax
$LN7@ures_findR:
; Line 1695
	push	47					; 0000002fH
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _localeEnd$[ebp], eax
; Line 1696
	cmp	DWORD PTR _localeEnd$[ebp], 0
	je	SHORT $LN4@ures_findR
; Line 1697
	mov	eax, DWORD PTR _localeEnd$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@ures_findR:
; Line 1700
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _packageName$[ebp]
	push	edx
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _first$[ebp], eax
; Line 1702
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ures_findR
; Line 1703
	cmp	DWORD PTR _localeEnd$[ebp], 0
	je	SHORT $LN2@ures_findR
; Line 1704
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _localeEnd$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _first$[ebp]
	push	eax
	call	_ures_findSubResource_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 1705
	jmp	SHORT $LN1@ures_findR
$LN2@ures_findR:
; Line 1706
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _first$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fillIn$[ebp]
	push	edx
	call	_ures_copyResb_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$[ebp], eax
$LN1@ures_findR:
; Line 1708
	mov	eax, DWORD PTR _first$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN3@ures_findR:
; Line 1710
	mov	eax, DWORD PTR _save$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1711
	mov	eax, DWORD PTR _result$[ebp]
$LN11@ures_findR:
; Line 1712
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_findResource_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ures_findSubResource_56
_TEXT	SEGMENT
_key$ = -32						; size = 4
_result$ = -20						; size = 4
_res$ = -8						; size = 4
_resB$ = 8						; size = 4
_path$ = 12						; size = 4
_fillIn$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_findSubResource_56 PROC				; COMDAT
; Line 1716
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1717
	mov	DWORD PTR _res$[ebp], -1
; Line 1718
	mov	eax, DWORD PTR _fillIn$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1721
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN6@ures_findS
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ures_findS
$LN6@ures_findS:
; Line 1722
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN8@ures_findS
$LN5@ures_findS:
; Line 1729
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_findResource_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _res$[ebp], eax
; Line 1730
	cmp	DWORD PTR _res$[ebp], -1
	je	SHORT $LN2@ures_findS
; Line 1731
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	mov	DWORD PTR _result$[ebp], eax
; Line 1732
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR _resB$[ebp], eax
; Line 1733
	jmp	SHORT $LN4@ures_findS
$LN2@ures_findS:
; Line 1734
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 1735
	jmp	SHORT $LN3@ures_findS
$LN4@ures_findS:
; Line 1737
	mov	eax, DWORD PTR _path$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@ures_findS
$LN3@ures_findS:
; Line 1739
	mov	eax, DWORD PTR _result$[ebp]
$LN8@ures_findS:
; Line 1740
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ures_findS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@ures_findS:
	DD	1
	DD	$LN11@ures_findS
$LN11@ures_findS:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@ures_findS
$LN10@ures_findS:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_ures_findSubResource_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getByKeyWithFallback_56
PUBLIC	__$ArrayPad$
PUBLIC	_ures_getStringByKeyWithFallback_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getStringByKeyWithFallback_56
_TEXT	SEGMENT
_length$ = -184						; size = 4
_retVal$ = -172						; size = 4
_stack$ = -160						; size = 152
__$ArrayPad$ = -4					; size = 4
_resB$ = 8						; size = 4
_inKey$ = 12						; size = 4
_len$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getStringByKeyWithFallback_56 PROC		; COMDAT
; Line 1745
	push	ebp
	mov	ebp, esp
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1748
	mov	DWORD PTR _retVal$[ebp], 0
; Line 1749
	lea	eax, DWORD PTR _stack$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 1750
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stack$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inKey$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
; Line 1752
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _length$[ebp]
	push	ecx
	lea	edx, DWORD PTR _stack$[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retVal$[ebp], eax
; Line 1753
	lea	eax, DWORD PTR _stack$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1754
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ures_getSt@4
; Line 1755
	xor	eax, eax
	jmp	SHORT $LN4@ures_getSt@4
$LN3@ures_getSt@4:
; Line 1757
	cmp	DWORD PTR _length$[ebp], 3
	jne	SHORT $LN2@ures_getSt@4
	mov	eax, DWORD PTR _retVal$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 8709				; 00002205H
	jne	SHORT $LN2@ures_getSt@4
	mov	eax, DWORD PTR _retVal$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 8709				; 00002205H
	jne	SHORT $LN2@ures_getSt@4
	mov	eax, DWORD PTR _retVal$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 8709				; 00002205H
	jne	SHORT $LN2@ures_getSt@4
; Line 1758
	mov	DWORD PTR _retVal$[ebp], 0
; Line 1759
	mov	DWORD PTR _length$[ebp], 0
; Line 1760
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN2@ures_getSt@4:
; Line 1762
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN1@ures_getSt@4
; Line 1763
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ures_getSt@4:
; Line 1765
	mov	eax, DWORD PTR _retVal$[ebp]
$LN4@ures_getSt@4:
; Line 1766
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ures_getSt@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@ures_getSt@4:
	DD	2
	DD	$LN8@ures_getSt@4
$LN8@ures_getSt@4:
	DD	-160					; ffffff60H
	DD	152					; 00000098H
	DD	$LN6@ures_getSt@4
	DD	-184					; ffffff48H
	DD	4
	DD	$LN7@ures_getSt@4
$LN7@ures_getSt@4:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN6@ures_getSt@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_ures_getStringByKeyWithFallback_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_04NBFCGMPH@root?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	_uloc_getDefault_56:PROC
EXTRN	??0StringPiece@icu_56@@QAE@PBD@Z:PROC		; icu_56::StringPiece::StringPiece
;	COMDAT ??_C@_04NBFCGMPH@root?$AA@
CONST	SEGMENT
??_C@_04NBFCGMPH@root?$AA@ DB 'root', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ures_getByKeyWithFallback_56
_TEXT	SEGMENT
$T79997 = -392						; size = 8
$T79998 = -376						; size = 4
_len$72050 = -172					; size = 4
_resPath$72049 = -160					; size = 4
_myPath$72048 = -148					; size = 4
_path$72047 = -136					; size = 56
_dataEntry$72046 = -72					; size = 4
_key$72044 = -60					; size = 4
_type$ = -48						; size = 4
_helper$ = -36						; size = 4
_rootRes$ = -24						; size = 4
_res$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_resB$ = 8						; size = 4
_inKey$ = 12						; size = 4
_fillIn$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getByKeyWithFallback_56 PROC			; COMDAT
; Line 1803
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1804
	mov	DWORD PTR _res$[ebp], -1
	mov	DWORD PTR _rootRes$[ebp], -1
; Line 1806
	mov	DWORD PTR _helper$[ebp], 0
; Line 1808
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN23@ures_getBy@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN24@ures_getBy@2
$LN23@ures_getBy@2:
; Line 1809
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN25@ures_getBy@2
$LN24@ures_getBy@2:
; Line 1811
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN22@ures_getBy@2
; Line 1812
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1813
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN25@ures_getBy@2
$LN22@ures_getBy@2:
; Line 1816
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR _type$[ebp], ecx
; Line 1817
	cmp	DWORD PTR _type$[ebp], 2
	je	SHORT $LN20@ures_getBy@2
	cmp	DWORD PTR _type$[ebp], 5
	je	SHORT $LN20@ures_getBy@2
	cmp	DWORD PTR _type$[ebp], 4
	jne	$LN21@ures_getBy@2
$LN20@ures_getBy@2:
; Line 1818
	mov	eax, DWORD PTR _inKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z ; getTableItemByKeyPath
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _res$[ebp], eax
; Line 1819
	mov	eax, DWORD PTR _inKey$[ebp]
	mov	DWORD PTR _key$72044[ebp], eax
; Line 1820
	cmp	DWORD PTR _res$[ebp], -1
	jne	$LN19@ures_getBy@2
; Line 1821
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _dataEntry$72046[ebp], ecx
; Line 1822
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	??0CharString@icu_56@@QAE@XZ		; icu_56::CharString::CharString
; Line 1823
	mov	DWORD PTR _myPath$72048[ebp], 0
; Line 1824
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _resPath$72049[ebp], ecx
; Line 1825
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _len$72050[ebp], ecx
$LN18@ures_getBy@2:
; Line 1826
	cmp	DWORD PTR _res$[ebp], -1
	jne	$LN17@ures_getBy@2
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN17@ures_getBy@2
; Line 1827
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _dataEntry$72046[ebp], ecx
; Line 1828
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _rootRes$[ebp], ecx
; Line 1830
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	$LN16@ures_getBy@2
; Line 1831
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	?clear@CharString@icu_56@@QAEAAV12@XZ	; icu_56::CharString::clear
; Line 1832
	cmp	DWORD PTR _len$72050[ebp], 0
	jle	SHORT $LN15@ures_getBy@2
; Line 1833
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$72050[ebp]
	push	ecx
	mov	edx, DWORD PTR _resPath$72049[ebp]
	push	edx
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z ; icu_56::CharString::append
$LN15@ures_getBy@2:
; Line 1835
	mov	eax, DWORD PTR _inKey$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T79997[ebp]
	call	??0StringPiece@icu_56@@QAE@PBD@Z	; icu_56::StringPiece::StringPiece
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T79997[ebp]
	push	edx
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 1836
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@ures_getBy@2
; Line 1837
	mov	eax, DWORD PTR _helper$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1838
	mov	eax, DWORD PTR _fillIn$[ebp]
	mov	DWORD PTR $T79998[ebp], eax
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T79998[ebp]
	jmp	$LN25@ures_getBy@2
$LN14@ures_getBy@2:
; Line 1840
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	mov	DWORD PTR _myPath$72048[ebp], eax
; Line 1841
	mov	eax, DWORD PTR _inKey$[ebp]
	mov	DWORD PTR _key$72044[ebp], eax
$LN13@ures_getBy@2:
; Line 1843
	lea	eax, DWORD PTR _key$72044[ebp]
	push	eax
	lea	ecx, DWORD PTR _myPath$72048[ebp]
	push	ecx
	mov	edx, DWORD PTR _rootRes$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_findResource_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _res$[ebp], eax
; Line 1844
	mov	eax, DWORD PTR _res$[ebp]
	shr	eax, 28					; 0000001cH
	cmp	eax, 3
	jne	SHORT $LN12@ures_getBy@2
	mov	eax, DWORD PTR _myPath$72048[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@ures_getBy@2
; Line 1846
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _helper$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	push	eax
	push	-1
	push	0
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dataEntry$72046[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	mov	DWORD PTR _helper$[ebp], eax
; Line 1848
	cmp	DWORD PTR _helper$[ebp], 0
	je	SHORT $LN9@ures_getBy@2
; Line 1849
	mov	eax, DWORD PTR _helper$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _dataEntry$72046[ebp], ecx
; Line 1850
	mov	eax, DWORD PTR _helper$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _rootRes$[ebp], ecx
; Line 1851
	mov	eax, DWORD PTR _helper$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _resPath$72049[ebp], ecx
; Line 1852
	mov	eax, DWORD PTR _helper$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _len$72050[ebp], ecx
; Line 1854
	jmp	SHORT $LN12@ures_getBy@2
$LN9@ures_getBy@2:
; Line 1855
	jmp	SHORT $LN16@ures_getBy@2
$LN12@ures_getBy@2:
; Line 1858
	mov	eax, DWORD PTR _myPath$72048[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN13@ures_getBy@2
$LN16@ures_getBy@2:
; Line 1860
	jmp	$LN18@ures_getBy@2
$LN17@ures_getBy@2:
; Line 1862
	cmp	DWORD PTR _res$[ebp], -1
	je	SHORT $LN7@ures_getBy@2
; Line 1864
	call	_uloc_getDefault_56
	push	eax
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ures_getBy@2
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@ures_getBy@2
$LN5@ures_getBy@2:
; Line 1865
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
; Line 1866
	jmp	SHORT $LN4@ures_getBy@2
$LN6@ures_getBy@2:
; Line 1867
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -128			; ffffff80H
$LN4@ures_getBy@2:
; Line 1870
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _inKey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataEntry$72046[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	mov	DWORD PTR _fillIn$[ebp], eax
; Line 1871
	jmp	SHORT $LN3@ures_getBy@2
$LN7@ures_getBy@2:
; Line 1872
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN3@ures_getBy@2:
; Line 1874
	lea	ecx, DWORD PTR _path$72047[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	jmp	SHORT $LN2@ures_getBy@2
$LN19@ures_getBy@2:
; Line 1875
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _key$72044[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	mov	DWORD PTR _fillIn$[ebp], eax
$LN2@ures_getBy@2:
; Line 1878
	jmp	SHORT $LN1@ures_getBy@2
$LN21@ures_getBy@2:
; Line 1879
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getBy@2:
; Line 1881
	mov	eax, DWORD PTR _helper$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1882
	mov	eax, DWORD PTR _fillIn$[ebp]
$LN25@ures_getBy@2:
; Line 1883
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@ures_getBy@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN31@ures_getBy@2:
	DD	3
	DD	$LN30@ures_getBy@2
$LN30@ures_getBy@2:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN27@ures_getBy@2
	DD	-136					; ffffff78H
	DD	56					; 00000038H
	DD	$LN28@ures_getBy@2
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN29@ures_getBy@2
$LN29@ures_getBy@2:
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN28@ures_getBy@2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN27@ures_getBy@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_ures_getByKeyWithFallback_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_res_getTableItemByKey_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z$0
__ehfuncinfo$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z
_TEXT	SEGMENT
$T80007 = -404						; size = 8
$T80008 = -388						; size = 4
$T80009 = -376						; size = 4
$T80010 = -364						; size = 4
_pathP$72019 = -160					; size = 4
_t$72018 = -148						; size = 4
_nextPathPart$72015 = -136				; size = 4
_type$ = -124						; size = 4
_pathPart$ = -112					; size = 4
_errorCode$ = -100					; size = 4
_path$ = -88						; size = 56
_resource$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pResData$ = 8						; size = 4
_table$ = 12						; size = 4
_key$ = 16						; size = 4
?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z PROC	; getTableItemByKeyPath, COMDAT
; Line 1771
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1772
	mov	eax, DWORD PTR _table$[ebp]
	mov	DWORD PTR _resource$[ebp], eax
; Line 1773
	lea	ecx, DWORD PTR _path$[ebp]
	call	??0CharString@icu_56@@QAE@XZ		; icu_56::CharString::CharString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1774
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 1775
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80007[ebp]
	call	??0StringPiece@icu_56@@QAE@PBD@Z	; icu_56::StringPiece::StringPiece
	lea	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T80007[ebp]
	push	edx
	lea	ecx, DWORD PTR _path$[ebp]
	call	?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z ; icu_56::CharString::append
; Line 1776
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@getTableIt
	mov	DWORD PTR $T80008[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T80008[ebp]
	jmp	$LN9@getTableIt
$LN8@getTableIt:
; Line 1777
	lea	ecx, DWORD PTR _path$[ebp]
	call	?data@CharString@icu_56@@QAEPADXZ	; icu_56::CharString::data
	mov	DWORD PTR _pathPart$[ebp], eax
; Line 1778
	mov	eax, DWORD PTR _resource$[ebp]
	shr	eax, 28					; 0000001cH
	mov	DWORD PTR _type$[ebp], eax
$LN7@getTableIt:
; Line 1779
	mov	eax, DWORD PTR _pathPart$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN6@getTableIt
	cmp	DWORD PTR _resource$[ebp], -1
	je	$LN6@getTableIt
	cmp	DWORD PTR _type$[ebp], 2
	je	SHORT $LN5@getTableIt
	cmp	DWORD PTR _type$[ebp], 5
	je	SHORT $LN5@getTableIt
	cmp	DWORD PTR _type$[ebp], 4
	je	SHORT $LN5@getTableIt
	cmp	DWORD PTR _type$[ebp], 8
	je	SHORT $LN5@getTableIt
	cmp	DWORD PTR _type$[ebp], 9
	jne	$LN6@getTableIt
$LN5@getTableIt:
; Line 1780
	push	47					; 0000002fH
	mov	eax, DWORD PTR _pathPart$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _nextPathPart$72015[ebp], eax
; Line 1781
	cmp	DWORD PTR _nextPathPart$72015[ebp], 0
	je	SHORT $LN3@getTableIt
; Line 1782
	mov	eax, DWORD PTR _nextPathPart$72015[ebp]
	mov	BYTE PTR [eax], 0
; Line 1783
	mov	eax, DWORD PTR _nextPathPart$72015[ebp]
	add	eax, 1
	mov	DWORD PTR _nextPathPart$72015[ebp], eax
; Line 1784
	jmp	SHORT $LN2@getTableIt
$LN3@getTableIt:
; Line 1785
	push	0
	mov	eax, DWORD PTR _pathPart$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _nextPathPart$72015[ebp], eax
$LN2@getTableIt:
; Line 1788
	mov	eax, DWORD PTR _pathPart$[ebp]
	mov	DWORD PTR _pathP$72019[ebp], eax
; Line 1789
	lea	eax, DWORD PTR _pathP$72019[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$72018[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	mov	eax, DWORD PTR _pResData$[ebp]
	push	eax
	call	_res_getTableItemByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$[ebp], eax
; Line 1790
	mov	eax, DWORD PTR _resource$[ebp]
	shr	eax, 28					; 0000001cH
	mov	DWORD PTR _type$[ebp], eax
; Line 1791
	mov	eax, DWORD PTR _nextPathPart$72015[ebp]
	mov	DWORD PTR _pathPart$[ebp], eax
; Line 1792
	jmp	$LN7@getTableIt
$LN6@getTableIt:
; Line 1793
	mov	eax, DWORD PTR _pathPart$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@getTableIt
; Line 1794
	mov	DWORD PTR $T80009[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T80009[ebp]
	jmp	SHORT $LN9@getTableIt
$LN1@getTableIt:
; Line 1796
	mov	eax, DWORD PTR _resource$[ebp]
	mov	DWORD PTR $T80010[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
	mov	eax, DWORD PTR $T80010[ebp]
$LN9@getTableIt:
; Line 1797
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@getTableIt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN18@getTableIt:
	DD	4
	DD	$LN17@getTableIt
$LN17@getTableIt:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN12@getTableIt
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN13@getTableIt
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN14@getTableIt
	DD	-160					; ffffff60H
	DD	4
	DD	$LN15@getTableIt
$LN15@getTableIt:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	0
$LN14@getTableIt:
	DB	116					; 00000074H
	DB	0
$LN13@getTableIt:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN12@getTableIt:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z$0:
	lea	ecx, DWORD PTR _path$[ebp]
	jmp	??1CharString@icu_56@@QAE@XZ		; icu_56::CharString::~CharString
__ehhandler$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getTableItemByKeyPath@@YAIPBUResourceData@@IPBD@Z ENDP	; getTableItemByKeyPath
PUBLIC	_ures_getByKey_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getByKey_56
_TEXT	SEGMENT
_rd$72095 = -68						; size = 4
_t$72092 = -56						; size = 4
_type$ = -44						; size = 4
_key$ = -32						; size = 4
_realData$ = -20					; size = 4
_res$ = -8						; size = 4
_resB$ = 8						; size = 4
_inKey$ = 12						; size = 4
_fillIn$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getByKey_56 PROC					; COMDAT
; Line 1886
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1887
	mov	DWORD PTR _res$[ebp], -1
; Line 1888
	mov	DWORD PTR _realData$[ebp], 0
; Line 1889
	mov	eax, DWORD PTR _inKey$[ebp]
	mov	DWORD PTR _key$[ebp], eax
; Line 1891
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN11@ures_getBy@3
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@ures_getBy@3
$LN11@ures_getBy@3:
; Line 1892
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN13@ures_getBy@3
$LN12@ures_getBy@3:
; Line 1894
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN10@ures_getBy@3
; Line 1895
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1896
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	$LN13@ures_getBy@3
$LN10@ures_getBy@3:
; Line 1899
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR _type$[ebp], ecx
; Line 1900
	cmp	DWORD PTR _type$[ebp], 2
	je	SHORT $LN8@ures_getBy@3
	cmp	DWORD PTR _type$[ebp], 5
	je	SHORT $LN8@ures_getBy@3
	cmp	DWORD PTR _type$[ebp], 4
	jne	$LN9@ures_getBy@3
$LN8@ures_getBy@3:
; Line 1902
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$72092[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _res$[ebp], eax
; Line 1903
	cmp	DWORD PTR _res$[ebp], -1
	jne	$LN7@ures_getBy@3
; Line 1904
	mov	eax, DWORD PTR _inKey$[ebp]
	mov	DWORD PTR _key$[ebp], eax
; Line 1905
	mov	eax, DWORD PTR _resB$[ebp]
	movsx	ecx, BYTE PTR [eax+132]
	cmp	ecx, 1
	jne	SHORT $LN6@ures_getBy@3
; Line 1906
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	push	ecx
	lea	edx, DWORD PTR _realData$[ebp]
	push	edx
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	call	?getFallbackData@@YAPBUResourceData@@PBUUResourceBundle@@PAPBDPAPAUUResourceDataEntry@@PAIPAW4UErrorCode@@@Z ; getFallbackData
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rd$72095[ebp], eax
; Line 1907
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ures_getBy@3
; Line 1909
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _realData$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	mov	eax, DWORD PTR _rd$72095[ebp]
	push	eax
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	jmp	SHORT $LN13@ures_getBy@3
; Line 1910
	jmp	SHORT $LN4@ures_getBy@3
$LN5@ures_getBy@3:
; Line 1911
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN4@ures_getBy@3:
; Line 1913
	jmp	SHORT $LN3@ures_getBy@3
$LN6@ures_getBy@3:
; Line 1914
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN3@ures_getBy@3:
; Line 1916
	jmp	SHORT $LN2@ures_getBy@3
$LN7@ures_getBy@3:
; Line 1917
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fillIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?init_resb_result@@YAPAUUResourceBundle@@PBUResourceData@@IPBDHPAUUResourceDataEntry@@PBU1@HPAU1@PAW4UErrorCode@@@Z ; init_resb_result
	add	esp, 36					; 00000024H
	jmp	SHORT $LN13@ures_getBy@3
$LN2@ures_getBy@3:
; Line 1933
	jmp	SHORT $LN1@ures_getBy@3
$LN9@ures_getBy@3:
; Line 1934
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getBy@3:
; Line 1936
	mov	eax, DWORD PTR _fillIn$[ebp]
$LN13@ures_getBy@3:
; Line 1937
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ures_getBy@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@ures_getBy@3:
	DD	4
	DD	$LN19@ures_getBy@3
$LN19@ures_getBy@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN15@ures_getBy@3
	DD	-20					; ffffffecH
	DD	4
	DD	$LN16@ures_getBy@3
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN17@ures_getBy@3
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN18@ures_getBy@3
$LN18@ures_getBy@3:
	DB	116					; 00000074H
	DB	0
$LN17@ures_getBy@3:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN16@ures_getBy@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN15@ures_getBy@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ures_getByKey_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFallbackData@@YAPBUResourceData@@PBUUResourceBundle@@PAPBDPAPAUUResourceDataEntry@@PAIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -32						; size = 4
_indexR$ = -20						; size = 4
_resB$ = -8						; size = 4
_resBundle$ = 8						; size = 4
_resTag$ = 12						; size = 4
_realData$ = 16						; size = 4
_res$ = 20						; size = 4
_status$ = 24						; size = 4
?getFallbackData@@YAPBUResourceData@@PBUUResourceBundle@@PAPBDPAPAUUResourceDataEntry@@PAIPAW4UErrorCode@@@Z PROC ; getFallbackData, COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	eax, DWORD PTR _resBundle$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _resB$[ebp], ecx
; Line 108
	mov	DWORD PTR _indexR$[ebp], -1
; Line 109
	mov	DWORD PTR _i$[ebp], 0
; Line 110
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax], -1
; Line 111
	cmp	DWORD PTR _resB$[ebp], 0
	je	$LN13@getFallbac
; Line 112
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN12@getFallbac
; Line 113
	mov	eax, DWORD PTR _resTag$[ebp]
	push	eax
	lea	ecx, DWORD PTR _indexR$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByKey_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [edx], eax
; Line 114
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@getFallbac:
; Line 116
	mov	eax, DWORD PTR _resBundle$[ebp]
	movsx	ecx, BYTE PTR [eax+132]
	cmp	ecx, 1
	jne	SHORT $LN11@getFallbac
$LN10@getFallbac:
; Line 117
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN11@getFallbac
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN11@getFallbac
; Line 118
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _resB$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN8@getFallbac
; Line 120
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 121
	mov	eax, DWORD PTR _resTag$[ebp]
	push	eax
	lea	ecx, DWORD PTR _indexR$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByKey_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [edx], eax
$LN8@getFallbac:
; Line 123
	jmp	SHORT $LN10@getFallbac
$LN11@getFallbac:
; Line 126
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@getFallbac
; Line 127
	cmp	DWORD PTR _i$[ebp], 1
	jle	SHORT $LN6@getFallbac
; Line 128
	call	_uloc_getDefault_56
	push	eax
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@getFallbac
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@getFallbac
$LN4@getFallbac:
; Line 129
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
; Line 130
	jmp	SHORT $LN6@getFallbac
$LN5@getFallbac:
; Line 131
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -128			; ffffff80H
$LN6@getFallbac:
; Line 134
	mov	eax, DWORD PTR _realData$[ebp]
	mov	ecx, DWORD PTR _resB$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 135
	mov	eax, DWORD PTR _resB$[ebp]
	add	eax, 20					; 00000014H
	jmp	SHORT $LN14@getFallbac
; Line 136
	jmp	SHORT $LN2@getFallbac
$LN7@getFallbac:
; Line 137
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 138
	xor	eax, eax
	jmp	SHORT $LN14@getFallbac
$LN2@getFallbac:
; Line 140
	jmp	SHORT $LN14@getFallbac
$LN13@getFallbac:
; Line 141
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 142
	xor	eax, eax
$LN14@getFallbac:
; Line 144
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@getFallbac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@getFallbac:
	DD	1
	DD	$LN17@getFallbac
$LN17@getFallbac:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN16@getFallbac
$LN16@getFallbac:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	82					; 00000052H
	DB	0
?getFallbackData@@YAPBUResourceData@@PBUUResourceBundle@@PAPBDPAPAUUResourceDataEntry@@PAIPAW4UErrorCode@@@Z ENDP ; getFallbackData
_TEXT	ENDS
PUBLIC	_ures_getStringByKey_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getStringByKey_56
_TEXT	SEGMENT
tv148 = -316						; size = 4
tv129 = -316						; size = 4
_tempRes$72146 = -116					; size = 4
_result$72145 = -104					; size = 4
_tempRes$72133 = -92					; size = 4
_result$72132 = -80					; size = 4
_rd$72123 = -68						; size = 4
_t$72120 = -56						; size = 4
_type$ = -44						; size = 4
_key$ = -32						; size = 4
_realData$ = -20					; size = 4
_res$ = -8						; size = 4
_resB$ = 8						; size = 4
_inKey$ = 12						; size = 4
_len$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getStringByKey_56 PROC				; COMDAT
; Line 1939
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1940
	mov	DWORD PTR _res$[ebp], -1
; Line 1941
	mov	DWORD PTR _realData$[ebp], 0
; Line 1942
	mov	eax, DWORD PTR _inKey$[ebp]
	mov	DWORD PTR _key$[ebp], eax
; Line 1944
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN21@ures_getSt@5
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@ures_getSt@5
$LN21@ures_getSt@5:
; Line 1945
	xor	eax, eax
	jmp	$LN23@ures_getSt@5
$LN22@ures_getSt@5:
; Line 1947
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN20@ures_getSt@5
; Line 1948
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1949
	xor	eax, eax
	jmp	$LN23@ures_getSt@5
$LN20@ures_getSt@5:
; Line 1952
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR _type$[ebp], ecx
; Line 1953
	cmp	DWORD PTR _type$[ebp], 2
	je	SHORT $LN18@ures_getSt@5
	cmp	DWORD PTR _type$[ebp], 5
	je	SHORT $LN18@ures_getSt@5
	cmp	DWORD PTR _type$[ebp], 4
	jne	$LN19@ures_getSt@5
$LN18@ures_getSt@5:
; Line 1954
	mov	DWORD PTR _t$72120[ebp], 0
; Line 1956
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$72120[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _res$[ebp], eax
; Line 1958
	cmp	DWORD PTR _res$[ebp], -1
	jne	$LN17@ures_getSt@5
; Line 1959
	mov	eax, DWORD PTR _inKey$[ebp]
	mov	DWORD PTR _key$[ebp], eax
; Line 1960
	mov	eax, DWORD PTR _resB$[ebp]
	movsx	ecx, BYTE PTR [eax+132]
	cmp	ecx, 1
	jne	$LN16@ures_getSt@5
; Line 1961
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	push	ecx
	lea	edx, DWORD PTR _realData$[ebp]
	push	edx
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resB$[ebp]
	push	ecx
	call	?getFallbackData@@YAPBUResourceData@@PBUUResourceBundle@@PAPBDPAPAUUResourceDataEntry@@PAIPAW4UErrorCode@@@Z ; getFallbackData
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rd$72123[ebp], eax
; Line 1962
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN15@ures_getSt@5
; Line 1963
	mov	eax, DWORD PTR _res$[ebp]
	shr	eax, 28					; 0000001cH
	mov	DWORD PTR tv129[ebp], eax
	cmp	DWORD PTR tv129[ebp], 0
	je	SHORT $LN12@ures_getSt@5
	cmp	DWORD PTR tv129[ebp], 3
	je	SHORT $LN11@ures_getSt@5
	cmp	DWORD PTR tv129[ebp], 6
	je	SHORT $LN12@ures_getSt@5
	jmp	SHORT $LN10@ures_getSt@5
$LN12@ures_getSt@5:
; Line 1966
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rd$72123[ebp]
	push	edx
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	jmp	$LN23@ures_getSt@5
$LN11@ures_getSt@5:
; Line 1969
	mov	DWORD PTR _result$72132[ebp], 0
; Line 1970
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _inKey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _tempRes$72133[ebp], eax
; Line 1971
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tempRes$72133[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$72132[ebp], eax
; Line 1972
	mov	eax, DWORD PTR _tempRes$72133[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1973
	mov	eax, DWORD PTR _result$72132[ebp]
	jmp	$LN23@ures_getSt@5
$LN10@ures_getSt@5:
; Line 1976
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
; Line 1978
	jmp	SHORT $LN9@ures_getSt@5
$LN15@ures_getSt@5:
; Line 1979
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN9@ures_getSt@5:
; Line 1981
	jmp	SHORT $LN8@ures_getSt@5
$LN16@ures_getSt@5:
; Line 1982
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN8@ures_getSt@5:
; Line 1984
	jmp	$LN7@ures_getSt@5
$LN17@ures_getSt@5:
; Line 1985
	mov	eax, DWORD PTR _res$[ebp]
	shr	eax, 28					; 0000001cH
	mov	DWORD PTR tv148[ebp], eax
	cmp	DWORD PTR tv148[ebp], 0
	je	SHORT $LN4@ures_getSt@5
	cmp	DWORD PTR tv148[ebp], 3
	je	SHORT $LN3@ures_getSt@5
	cmp	DWORD PTR tv148[ebp], 6
	je	SHORT $LN4@ures_getSt@5
	jmp	SHORT $LN2@ures_getSt@5
$LN4@ures_getSt@5:
; Line 1988
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN23@ures_getSt@5
$LN3@ures_getSt@5:
; Line 1991
	mov	DWORD PTR _result$72145[ebp], 0
; Line 1992
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _inKey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resB$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _tempRes$72146[ebp], eax
; Line 1993
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tempRes$72146[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$72145[ebp], eax
; Line 1994
	mov	eax, DWORD PTR _tempRes$72146[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1995
	mov	eax, DWORD PTR _result$72145[ebp]
	jmp	SHORT $LN23@ures_getSt@5
$LN2@ures_getSt@5:
; Line 1998
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN7@ures_getSt@5:
; Line 2015
	jmp	SHORT $LN1@ures_getSt@5
$LN19@ures_getSt@5:
; Line 2016
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 17			; 00000011H
$LN1@ures_getSt@5:
; Line 2018
	xor	eax, eax
$LN23@ures_getSt@5:
; Line 2019
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@ures_getSt@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN30@ures_getSt@5:
	DD	4
	DD	$LN29@ures_getSt@5
$LN29@ures_getSt@5:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN25@ures_getSt@5
	DD	-20					; ffffffecH
	DD	4
	DD	$LN26@ures_getSt@5
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN27@ures_getSt@5
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN28@ures_getSt@5
$LN28@ures_getSt@5:
	DB	116					; 00000074H
	DB	0
$LN27@ures_getSt@5:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN26@ures_getSt@5:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN25@ures_getSt@5:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ures_getStringByKey_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getUTF8StringByKey_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getUTF8StringByKey_56
_TEXT	SEGMENT
_s16$ = -20						; size = 4
_length16$ = -8						; size = 4
_resB$ = 8						; size = 4
_key$ = 12						; size = 4
_dest$ = 16						; size = 4
_pLength$ = 20						; size = 4
_forceCopy$ = 24					; size = 1
_status$ = 28						; size = 4
_ures_getUTF8StringByKey_56 PROC			; COMDAT
; Line 2026
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2028
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s16$[ebp], eax
; Line 2029
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _forceCopy$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length16$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s16$[ebp]
	push	edx
	call	?ures_toUTF8String@@YAPBDPB_WHPADPAHCPAW4UErrorCode@@@Z ; ures_toUTF8String
	add	esp, 24					; 00000018H
; Line 2030
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ures_getUT@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@ures_getUT@4:
	DD	1
	DD	$LN4@ures_getUT@4
$LN4@ures_getUT@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ures_getUT@4
$LN3@ures_getUT@4:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	49					; 00000031H
	DB	54					; 00000036H
	DB	0
_ures_getUTF8StringByKey_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getLocaleInternal_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getLocaleInternal_56
_TEXT	SEGMENT
_resourceBundle$ = 8					; size = 4
_status$ = 12						; size = 4
_ures_getLocaleInternal_56 PROC				; COMDAT
; Line 2040
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2041
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ures_getLo
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getLo
$LN3@ures_getLo:
; Line 2042
	xor	eax, eax
	jmp	SHORT $LN5@ures_getLo
$LN4@ures_getLo:
; Line 2044
	cmp	DWORD PTR _resourceBundle$[ebp], 0
	jne	SHORT $LN2@ures_getLo
; Line 2045
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2046
	xor	eax, eax
	jmp	SHORT $LN5@ures_getLo
; Line 2047
	jmp	SHORT $LN5@ures_getLo
$LN2@ures_getLo:
; Line 2048
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx]
$LN5@ures_getLo:
; Line 2050
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getLocaleInternal_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getLocale_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getLocale_56
_TEXT	SEGMENT
_resourceBundle$ = 8					; size = 4
_status$ = 12						; size = 4
_ures_getLocale_56 PROC					; COMDAT
; Line 2055
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2056
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resourceBundle$[ebp]
	push	ecx
	call	_ures_getLocaleInternal_56
	add	esp, 8
; Line 2057
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getLocale_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getLocaleByType_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getLocaleByType_56
_TEXT	SEGMENT
tv70 = -196						; size = 4
_resourceBundle$ = 8					; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_getLocaleByType_56 PROC				; COMDAT
; Line 2063
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2064
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN8@ures_getLo@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@ures_getLo@2
$LN8@ures_getLo@2:
; Line 2065
	xor	eax, eax
	jmp	SHORT $LN10@ures_getLo@2
$LN9@ures_getLo@2:
; Line 2067
	cmp	DWORD PTR _resourceBundle$[ebp], 0
	jne	SHORT $LN7@ures_getLo@2
; Line 2068
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2069
	xor	eax, eax
	jmp	SHORT $LN10@ures_getLo@2
; Line 2070
	jmp	SHORT $LN10@ures_getLo@2
$LN7@ures_getLo@2:
; Line 2071
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN3@ures_getLo@2
	cmp	DWORD PTR tv70[ebp], 1
	je	SHORT $LN2@ures_getLo@2
	jmp	SHORT $LN1@ures_getLo@2
$LN3@ures_getLo@2:
; Line 2073
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN10@ures_getLo@2
$LN2@ures_getLo@2:
; Line 2075
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN10@ures_getLo@2
$LN1@ures_getLo@2:
; Line 2078
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2079
	xor	eax, eax
$LN10@ures_getLo@2:
; Line 2082
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getLocaleByType_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getName_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getName_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_ures_getName_56 PROC					; COMDAT
; Line 2084
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2085
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_getNa
; Line 2086
	xor	eax, eax
	jmp	SHORT $LN2@ures_getNa
$LN1@ures_getNa:
; Line 2089
	mov	eax, DWORD PTR _resB$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx]
$LN2@ures_getNa:
; Line 2090
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getName_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ures_open_56
_TEXT	SEGMENT
_path$ = 8						; size = 4
_localeID$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_open_56 PROC					; COMDAT
; Line 2158
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2159
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	push	0
	call	?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z ; ures_openWithType
	add	esp, 20					; 00000014H
; Line 2160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_open_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_uloc_getBaseName_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv154 = -389						; size = 1
_isStackObject$ = -189					; size = 1
_canonLocaleID$72201 = -180				; size = 157
_entry$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_r$ = 8							; size = 4
_path$ = 12						; size = 4
_localeID$ = 16						; size = 4
_openType$ = 20						; size = 4
_status$ = 24						; size = 4
?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z PROC ; ures_openWithType, COMDAT
; Line 2104
	push	ebp
	mov	ebp, esp
	sub	esp, 392				; 00000188H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 98					; 00000062H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2105
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@ures_openW
; Line 2106
	xor	eax, eax
	jmp	$LN11@ures_openW
$LN10@ures_openW:
; Line 2110
	cmp	DWORD PTR _openType$[ebp], 2
	je	SHORT $LN9@ures_openW
; Line 2113
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _canonLocaleID$72201[ebp]
	push	ecx
	mov	edx, DWORD PTR _localeID$[ebp]
	push	edx
	call	_uloc_getBaseName_56
	add	esp, 16					; 00000010H
; Line 2114
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN7@ures_openW
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], -124			; ffffff84H
	jne	SHORT $LN8@ures_openW
$LN7@ures_openW:
; Line 2115
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2116
	xor	eax, eax
	jmp	$LN11@ures_openW
$LN8@ures_openW:
; Line 2118
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _openType$[ebp]
	push	ecx
	lea	edx, DWORD PTR _canonLocaleID$72201[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z ; entryOpen
	add	esp, 16					; 00000010H
	mov	DWORD PTR _entry$[ebp], eax
; Line 2119
	jmp	SHORT $LN6@ures_openW
$LN9@ures_openW:
; Line 2120
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?entryOpenDirect@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; entryOpenDirect
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _entry$[ebp], eax
$LN6@ures_openW:
; Line 2122
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ures_openW
; Line 2123
	xor	eax, eax
	jmp	$LN11@ures_openW
$LN5@ures_openW:
; Line 2125
	cmp	DWORD PTR _entry$[ebp], 0
	jne	SHORT $LN4@ures_openW
; Line 2126
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 2127
	xor	eax, eax
	jmp	$LN11@ures_openW
$LN4@ures_openW:
; Line 2131
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN3@ures_openW
; Line 2132
	push	152					; 00000098H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 2133
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN2@ures_openW
; Line 2134
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	?entryClose@@YAXPAUUResourceDataEntry@@@Z ; entryClose
	add	esp, 4
; Line 2135
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2136
	xor	eax, eax
	jmp	$LN11@ures_openW
$LN2@ures_openW:
; Line 2138
	mov	BYTE PTR _isStackObject$[ebp], 0
; Line 2139
	jmp	SHORT $LN1@ures_openW
$LN3@ures_openW:
; Line 2140
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?ures_isStackObject@@YACPBUUResourceBundle@@@Z ; ures_isStackObject
	add	esp, 4
	mov	BYTE PTR _isStackObject$[ebp], al
; Line 2141
	push	0
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?ures_closeBundle@@YAXPAUUResourceBundle@@C@Z ; ures_closeBundle
	add	esp, 8
$LN1@ures_openW:
; Line 2143
	push	152					; 00000098H
	push	0
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2144
	movzx	eax, BYTE PTR _isStackObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	?ures_setIsStackObject@@YAXPAUUResourceBundle@@C@Z ; ures_setIsStackObject
	add	esp, 8
; Line 2146
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 2147
	push	1
	mov	eax, DWORD PTR _entry$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	40					; 00000028H
	mov	ecx, DWORD PTR _entry$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2148
	cmp	DWORD PTR _openType$[ebp], 2
	je	SHORT $LN13@ures_openW
	mov	eax, DWORD PTR _r$[ebp]
	movsx	ecx, BYTE PTR [eax+56]
	test	ecx, ecx
	jne	SHORT $LN13@ures_openW
	mov	BYTE PTR tv154[ebp], 1
	jmp	SHORT $LN14@ures_openW
$LN13@ures_openW:
	mov	BYTE PTR tv154[ebp], 0
$LN14@ures_openW:
	mov	edx, DWORD PTR _r$[ebp]
	mov	al, BYTE PTR tv154[ebp]
	mov	BYTE PTR [edx+132], al
; Line 2149
	mov	eax, DWORD PTR _r$[ebp]
	mov	BYTE PTR [eax+133], 1
; Line 2150
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+128], edx
; Line 2151
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_countArrayItems_56
	add	esp, 8
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [ecx+148], eax
; Line 2152
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR [eax+144], -1
; Line 2154
	mov	eax, DWORD PTR _r$[ebp]
$LN11@ures_openW:
; Line 2155
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@ures_openW
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@ures_openW:
	DD	1
	DD	$LN16@ures_openW
$LN16@ures_openW:
	DD	-180					; ffffff4cH
	DD	157					; 0000009dH
	DD	$LN15@ures_openW
$LN15@ures_openW:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z ENDP ; ures_openWithType
_TEXT	ENDS
PUBLIC	??_C@_08ELIGIEOD@usrdt56l?$AA@			; `string'
PUBLIC	??_C@_1DK@GEKGCHJK@?$AAo?$AAp?$AAe?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAU?$AAR?$AAE?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AA_?$AAD?$AAI?$AAR?$AAE?$AAC?$AAT?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FO@EGODLIOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z@4JA@8166c1fe ; `entryOpen'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	__imp__strncpy:PROC
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_08ELIGIEOD@usrdt56l?$AA@
CONST	SEGMENT
??_C@_08ELIGIEOD@usrdt56l?$AA@ DB 'usrdt56l', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@GEKGCHJK@?$AAo?$AAp?$AAe?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAU?$AAR?$AAE?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AA_?$AAD?$AAI?$AAR?$AAE?$AAC?$AAT?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@GEKGCHJK@?$AAo?$AAp?$AAe?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAU?$AAR?$AAE?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AA_?$AAD?$AAI?$AAR?$AAE?$AAC?$AAT?$AA?$AA@ DB 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'n', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R'
	DB	00H, 'E', 00H, 'S', 00H, '_', 00H, 'O', 00H, 'P', 00H, 'E', 00H
	DB	'N', 00H, '_', 00H, 'D', 00H, 'I', 00H, 'R', 00H, 'E', 00H, 'C'
	DB	00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@EGODLIOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FO@EGODLIOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'b', 00H, 'u'
	DB	00H, 'n', 00H, 'd', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z@4JA@8166c1fe
_DATA	SEGMENT
?__LINE__Var@?1??entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z@4JA@8166c1fe DD 025bH ; `entryOpen'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_u1$71478 = -392					; size = 4
_usrStatus$71477 = -380					; size = 4
_usrDataPath$ = -368					; size = 96
_name$ = -264						; size = 157
_usingUSRData$ = -93					; size = 1
_hasChopped$ = -81					; size = 1
_hasRealData$ = -69					; size = 1
_isRoot$ = -57						; size = 1
_isDefault$ = -45					; size = 1
_t1$ = -36						; size = 4
_r$ = -24						; size = 4
_intStatus$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
_localeID$ = 12						; size = 4
_openType$ = 16						; size = 4
_status$ = 20						; size = 4
?entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z PROC ; entryOpen, COMDAT
; Line 603
	push	ebp
	mov	ebp, esp
	sub	esp, 588				; 0000024cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-588]
	mov	ecx, 147				; 00000093H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 604
	cmp	DWORD PTR _openType$[ebp], 2
	jne	SHORT $LN34@entryOpen
	mov	eax, DWORD PTR ?__LINE__Var@?1??entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z@4JA@8166c1fe
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FO@EGODLIOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1DK@GEKGCHJK@?$AAo?$AAp?$AAe?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAU?$AAR?$AAE?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AA_?$AAD?$AAI?$AAR?$AAE?$AAC?$AAT?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@entryOpen:
; Line 605
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 606
	mov	DWORD PTR _r$[ebp], 0
; Line 607
	mov	DWORD PTR _t1$[ebp], 0
; Line 608
	mov	BYTE PTR _isDefault$[ebp], 0
; Line 609
	mov	BYTE PTR _isRoot$[ebp], 0
; Line 610
	mov	BYTE PTR _hasRealData$[ebp], 0
; Line 611
	mov	BYTE PTR _hasChopped$[ebp], 1
; Line 612
	mov	BYTE PTR _usingUSRData$[ebp], 0
; Line 617
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?initCache@@YAXPAW4UErrorCode@@@Z	; initCache
	add	esp, 4
; Line 619
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN31@entryOpen
; Line 620
	xor	eax, eax
	jmp	$LN32@entryOpen
$LN31@entryOpen:
; Line 623
	push	1
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	156					; 0000009cH
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 624
	mov	BYTE PTR _name$[ebp+156], 0
; Line 626
	movsx	eax, BYTE PTR _usingUSRData$[ebp]
	test	eax, eax
	je	SHORT $LN30@entryOpen
; Line 627
	cmp	DWORD PTR _path$[ebp], 0
	jne	SHORT $LN29@entryOpen
; Line 628
	push	OFFSET ??_C@_08ELIGIEOD@usrdt56l?$AA@
	lea	eax, DWORD PTR _usrDataPath$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 629
	jmp	SHORT $LN30@entryOpen
$LN29@entryOpen:
; Line 630
	push	1
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	95					; 0000005fH
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	lea	edx, DWORD PTR _usrDataPath$[ebp]
	push	edx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 631
	mov	BYTE PTR _usrDataPath$[ebp], 117	; 00000075H
; Line 632
	mov	BYTE PTR _usrDataPath$[ebp+1], 115	; 00000073H
; Line 633
	mov	BYTE PTR _usrDataPath$[ebp+2], 114	; 00000072H
; Line 634
	mov	BYTE PTR _usrDataPath$[ebp+95], 0
$LN30@entryOpen:
; Line 638
	push	OFFSET _resbMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 641
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _isDefault$[ebp]
	push	ecx
	lea	edx, DWORD PTR _hasChopped$[ebp]
	push	edx
	lea	eax, DWORD PTR _isRoot$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?findFirstExisting@@YAPAUUResourceDataEntry@@PBDPADPAC22PAW4UErrorCode@@@Z ; findFirstExisting
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 643
	cmp	DWORD PTR _r$[ebp], 0
	je	$LN27@entryOpen
; Line 644
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _t1$[ebp], eax
; Line 645
	mov	BYTE PTR _hasRealData$[ebp], 1
; Line 646
	movsx	eax, BYTE PTR _usingUSRData$[ebp]
	test	eax, eax
	je	SHORT $LN26@entryOpen
; Line 647
	mov	DWORD PTR _usrStatus$71477[ebp], 0
; Line 648
	lea	eax, DWORD PTR _usrStatus$71477[ebp]
	push	eax
	lea	ecx, DWORD PTR _usrDataPath$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t1$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _u1$71478[ebp], eax
; Line 649
	cmp	DWORD PTR _u1$71478[ebp], 0
	je	SHORT $LN26@entryOpen
; Line 650
	mov	eax, DWORD PTR _u1$71478[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN24@entryOpen
; Line 651
	mov	eax, DWORD PTR _u1$71478[ebp]
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 652
	mov	eax, DWORD PTR _u1$71478[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 653
	jmp	SHORT $LN26@entryOpen
$LN24@entryOpen:
; Line 655
	mov	eax, DWORD PTR _u1$71478[ebp]
	mov	DWORD PTR [eax+64], 0
$LN26@entryOpen:
; Line 659
	movsx	eax, BYTE PTR _hasChopped$[ebp]
	test	eax, eax
	je	SHORT $LN27@entryOpen
	movsx	eax, BYTE PTR _isRoot$[ebp]
	test	eax, eax
	jne	SHORT $LN27@entryOpen
; Line 660
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _usrDataPath$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _usingUSRData$[ebp]
	push	edx
	push	157					; 0000009dH
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t1$[ebp]
	push	ecx
	call	?loadParentsExceptRoot@@YACAAPAUUResourceDataEntry@@QADHC1PAW4UErrorCode@@@Z ; loadParentsExceptRoot
	add	esp, 24					; 00000018H
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN27@entryOpen
; Line 661
	jmp	$finishUnlock$71485
	jmp	$finishUnlock$71485
$LN27@entryOpen:
; Line 668
	cmp	DWORD PTR _r$[ebp], 0
	jne	$LN19@entryOpen
	cmp	DWORD PTR _openType$[ebp], 0
	jne	$LN19@entryOpen
	movsx	eax, BYTE PTR _isDefault$[ebp]
	test	eax, eax
	jne	$LN19@entryOpen
	movsx	eax, BYTE PTR _isRoot$[ebp]
	test	eax, eax
	jne	$LN19@entryOpen
; Line 670
	call	_uloc_getDefault_56
	push	eax
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 671
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _isDefault$[ebp]
	push	ecx
	lea	edx, DWORD PTR _hasChopped$[ebp]
	push	edx
	lea	eax, DWORD PTR _isRoot$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?findFirstExisting@@YAPAUUResourceDataEntry@@PBDPADPAC22PAW4UErrorCode@@@Z ; findFirstExisting
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 672
	mov	DWORD PTR _intStatus$[ebp], -127	; ffffff81H
; Line 673
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN19@entryOpen
; Line 674
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _t1$[ebp], eax
; Line 675
	mov	BYTE PTR _hasRealData$[ebp], 1
; Line 676
	mov	BYTE PTR _isDefault$[ebp], 1
; Line 678
	movsx	eax, BYTE PTR _hasChopped$[ebp]
	test	eax, eax
	je	SHORT $LN19@entryOpen
	movsx	eax, BYTE PTR _isRoot$[ebp]
	test	eax, eax
	jne	SHORT $LN19@entryOpen
; Line 679
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _usrDataPath$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _usingUSRData$[ebp]
	push	edx
	push	157					; 0000009dH
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t1$[ebp]
	push	ecx
	call	?loadParentsExceptRoot@@YACAAPAUUResourceDataEntry@@QADHC1PAW4UErrorCode@@@Z ; loadParentsExceptRoot
	add	esp, 24					; 00000018H
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN19@entryOpen
; Line 680
	jmp	$finishUnlock$71485
	jmp	$finishUnlock$71485
$LN19@entryOpen:
; Line 688
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN14@entryOpen
; Line 689
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 690
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _isDefault$[ebp]
	push	ecx
	lea	edx, DWORD PTR _hasChopped$[ebp]
	push	edx
	lea	eax, DWORD PTR _isRoot$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?findFirstExisting@@YAPAUUResourceDataEntry@@PBDPADPAC22PAW4UErrorCode@@@Z ; findFirstExisting
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 691
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN13@entryOpen
; Line 692
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _t1$[ebp], eax
; Line 693
	mov	DWORD PTR _intStatus$[ebp], -127	; ffffff81H
; Line 694
	mov	BYTE PTR _hasRealData$[ebp], 1
; Line 695
	jmp	SHORT $LN12@entryOpen
$LN13@entryOpen:
; Line 696
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 697
	jmp	$finishUnlock$71485
	jmp	$finishUnlock$71485
$LN12@entryOpen:
; Line 699
	jmp	SHORT $LN5@entryOpen
$LN14@entryOpen:
; Line 700
	movsx	eax, BYTE PTR _isRoot$[ebp]
	test	eax, eax
	jne	SHORT $LN5@entryOpen
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@entryOpen
	mov	eax, DWORD PTR _t1$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN5@entryOpen
	mov	eax, DWORD PTR _r$[ebp]
	movsx	ecx, BYTE PTR [eax+56]
	test	ecx, ecx
	jne	SHORT $LN5@entryOpen
; Line 701
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t1$[ebp]
	push	ecx
	call	?insertRootBundle@@YACAAPAUUResourceDataEntry@@PAW4UErrorCode@@@Z ; insertRootBundle
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN8@entryOpen
; Line 702
	jmp	SHORT $finishUnlock$71485
	jmp	SHORT $finishUnlock$71485
$LN8@entryOpen:
; Line 704
	movsx	eax, BYTE PTR _hasRealData$[ebp]
	test	eax, eax
	jne	SHORT $LN5@entryOpen
; Line 705
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR [eax+68], -127		; ffffff81H
$LN5@entryOpen:
; Line 710
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $finishUnlock$71485
	movsx	eax, BYTE PTR _isRoot$[ebp]
	test	eax, eax
	jne	SHORT $finishUnlock$71485
	mov	eax, DWORD PTR _t1$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $finishUnlock$71485
; Line 711
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+64]
	add	edx, 1
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+64], edx
; Line 712
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _t1$[ebp], ecx
; Line 713
	jmp	SHORT $LN5@entryOpen
$finishUnlock$71485:
; Line 716
	push	OFFSET _resbMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@entryOpen
; Line 719
	cmp	DWORD PTR _intStatus$[ebp], 0
	je	SHORT $LN2@entryOpen
; Line 720
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _intStatus$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@entryOpen:
; Line 722
	mov	eax, DWORD PTR _r$[ebp]
	jmp	SHORT $LN32@entryOpen
; Line 723
	jmp	SHORT $LN32@entryOpen
$LN3@entryOpen:
; Line 724
	xor	eax, eax
$LN32@entryOpen:
; Line 726
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@entryOpen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 588				; 0000024cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN44@entryOpen:
	DD	8
	DD	$LN43@entryOpen
$LN43@entryOpen:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN35@entryOpen
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN36@entryOpen
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN37@entryOpen
	DD	-57					; ffffffc7H
	DD	1
	DD	$LN38@entryOpen
	DD	-81					; ffffffafH
	DD	1
	DD	$LN39@entryOpen
	DD	-264					; fffffef8H
	DD	157					; 0000009dH
	DD	$LN40@entryOpen
	DD	-368					; fffffe90H
	DD	96					; 00000060H
	DD	$LN41@entryOpen
	DD	-380					; fffffe84H
	DD	4
	DD	$LN42@entryOpen
$LN42@entryOpen:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN41@entryOpen:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN40@entryOpen:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN39@entryOpen:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN38@entryOpen:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
$LN37@entryOpen:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN36@entryOpen:
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$LN35@entryOpen:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?entryOpen@@YAPAUUResourceDataEntry@@PBD0W4UResOpenType@@PAW4UErrorCode@@@Z ENDP ; entryOpen
_TEXT	ENDS
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
_BSS	SEGMENT
_gCacheInitOnce DQ 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT ?initCache@@YAXPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_status$ = 8						; size = 4
?initCache@@YAXPAW4UErrorCode@@@Z PROC			; initCache, COMDAT
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 277
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ?createCache@@YAXAAW4UErrorCode@@@Z ; createCache
	push	OFFSET _gCacheInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
	add	esp, 12					; 0000000cH
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initCache@@YAXPAW4UErrorCode@@@Z ENDP			; initCache
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPostInit
EXTRN	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPreInit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_errCode$ = 16						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z PROC ; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO
; Line 259
	jmp	SHORT $LN5@umtx_initO
$LN4@umtx_initO:
; Line 261
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPreInit
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	call	DWORD PTR _fp$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 265
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit
	add	esp, 4
; Line 266
	jmp	SHORT $LN5@umtx_initO
$LN3@umtx_initO:
; Line 268
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO
; Line 269
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO:
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ENDP ; icu_56::umtx_initOnce
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
PUBLIC	??_C@_1BG@EFAOBGPF@?$AAc?$AAa?$AAc?$AAh?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??createCache@@YAXAAW4UErrorCode@@@Z@4JA@8166c1fe ; `createCache'::`2'::__LINE__Var
EXTRN	_ucln_common_registerCleanup_56:PROC
EXTRN	_uhash_open_56:PROC
;	COMDAT ??_C@_1BG@EFAOBGPF@?$AAc?$AAa?$AAc?$AAh?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\common\uresbund.cpp
CONST	SEGMENT
??_C@_1BG@EFAOBGPF@?$AAc?$AAa?$AAc?$AAh?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c'
	DB	00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??createCache@@YAXAAW4UErrorCode@@@Z@4JA@8166c1fe
_DATA	SEGMENT
?__LINE__Var@?1??createCache@@YAXAAW4UErrorCode@@@Z@4JA@8166c1fe DD 010eH ; `createCache'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?createCache@@YAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_status$ = 8						; size = 4
?createCache@@YAXAAW4UErrorCode@@@Z PROC		; createCache, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 271
	cmp	DWORD PTR _cache, 0
	je	SHORT $LN3@createCach
	mov	eax, DWORD PTR ?__LINE__Var@?1??createCache@@YAXAAW4UErrorCode@@@Z@4JA@8166c1fe
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FO@EGODLIOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BG@EFAOBGPF@?$AAc?$AAa?$AAc?$AAh?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@createCach:
; Line 272
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ?compareEntries@@YACTUElement@@0@Z ; compareEntries
	push	OFFSET ?hashEntry@@YAHTUElement@@@Z	; hashEntry
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cache, eax
; Line 273
	push	OFFSET ?ures_cleanup@@YACXZ		; ures_cleanup
	push	20					; 00000014H
	call	_ucln_common_registerCleanup_56
	add	esp, 8
; Line 274
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createCache@@YAXAAW4UErrorCode@@@Z ENDP		; createCache
_TEXT	ENDS
EXTRN	_uhash_hashChars_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashEntry@@YAHTUElement@@@Z
_TEXT	SEGMENT
_pathkey$ = -32						; size = 4
_namekey$ = -20						; size = 4
_b$ = -8						; size = 4
_parm$ = 8						; size = 4
?hashEntry@@YAHTUElement@@@Z PROC			; hashEntry, COMDAT
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	mov	eax, DWORD PTR _parm$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _namekey$[ebp], ecx
; Line 56
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pathkey$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _namekey$[ebp]
	push	eax
	call	_uhash_hashChars_56
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _pathkey$[ebp]
	push	ecx
	call	_uhash_hashChars_56
	add	esp, 4
	imul	eax, 37					; 00000025H
	add	eax, esi
; Line 58
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@hashEntry
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@hashEntry:
	DD	2
	DD	$LN5@hashEntry
$LN5@hashEntry:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@hashEntry
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@hashEntry
$LN4@hashEntry:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN3@hashEntry:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
?hashEntry@@YAHTUElement@@@Z ENDP			; hashEntry
_TEXT	ENDS
EXTRN	_uhash_compareChars_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareEntries@@YACTUElement@@0@Z
_TEXT	SEGMENT
tv76 = -265						; size = 1
_path2$ = -68						; size = 4
_path1$ = -56						; size = 4
_name2$ = -44						; size = 4
_name1$ = -32						; size = 4
_b2$ = -20						; size = 4
_b1$ = -8						; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
?compareEntries@@YACTUElement@@0@Z PROC			; compareEntries, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	mov	eax, DWORD PTR _p1$[ebp]
	mov	DWORD PTR _b1$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _p2$[ebp]
	mov	DWORD PTR _b2$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _b1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _name1$[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _b2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _name2$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _b1$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _path1$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _b2$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _path2$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _name2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name1$[ebp]
	push	ecx
	call	_uhash_compareChars_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@compareEnt
	mov	eax, DWORD PTR _path2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path1$[ebp]
	push	ecx
	call	_uhash_compareChars_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@compareEnt
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@compareEnt
$LN3@compareEnt:
	mov	BYTE PTR tv76[ebp], 0
$LN4@compareEnt:
	mov	al, BYTE PTR tv76[ebp]
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@compareEnt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@compareEnt:
	DD	4
	DD	$LN9@compareEnt
$LN9@compareEnt:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@compareEnt
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@compareEnt
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN7@compareEnt
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN8@compareEnt
$LN8@compareEnt:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	50					; 00000032H
	DB	0
$LN7@compareEnt:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	49					; 00000031H
	DB	0
$LN6@compareEnt:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN5@compareEnt:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
?compareEntries@@YACTUElement@@0@Z ENDP			; compareEntries
_TEXT	ENDS
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
EXTRN	_uhash_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_cleanup@@YACXZ
_TEXT	SEGMENT
?ures_cleanup@@YACXZ PROC				; ures_cleanup, COMDAT
; Line 259
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 260
	cmp	DWORD PTR _cache, 0
	je	SHORT $LN1@ures_clean
; Line 261
	call	?ures_flushCache@@YAHXZ			; ures_flushCache
; Line 262
	mov	eax, DWORD PTR _cache
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 263
	mov	DWORD PTR _cache, 0
$LN1@ures_clean:
; Line 265
	mov	ecx, OFFSET _gCacheInitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 266
	mov	al, 1
; Line 267
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_cleanup@@YACXZ ENDP				; ures_cleanup
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
_TEXT	ENDS
EXTRN	_uhash_removeElement_56:PROC
EXTRN	_uhash_nextElement_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_flushCache@@YAHXZ
_TEXT	SEGMENT
_deletedMore$ = -53					; size = 1
_e$ = -44						; size = 4
_rbDeletedNum$ = -32					; size = 4
_pos$ = -20						; size = 4
_resB$ = -8						; size = 4
?ures_flushCache@@YAHXZ PROC				; ures_flushCache, COMDAT
; File d:\mozilla\intl\icu\source\common\uresbund.cpp
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 174
	mov	DWORD PTR _rbDeletedNum$[ebp], 0
; Line 181
	push	OFFSET _resbMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 182
	cmp	DWORD PTR _cache, 0
	jne	SHORT $LN6@ures_flush
; Line 183
	push	OFFSET _resbMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 184
	xor	eax, eax
	jmp	SHORT $LN8@ures_flush
$LN6@ures_flush:
; Line 188
	mov	BYTE PTR _deletedMore$[ebp], 0
; Line 190
	mov	DWORD PTR _pos$[ebp], -1
$LN3@ures_flush:
; Line 191
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cache
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _e$[ebp], eax
	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN5@ures_flush
; Line 193
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _resB$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR _resB$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jne	SHORT $LN1@ures_flush
; Line 204
	mov	eax, DWORD PTR _rbDeletedNum$[ebp]
	add	eax, 1
	mov	DWORD PTR _rbDeletedNum$[ebp], eax
; Line 205
	mov	BYTE PTR _deletedMore$[ebp], 1
; Line 206
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cache
	push	ecx
	call	_uhash_removeElement_56
	add	esp, 8
; Line 207
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	?free_entry@@YAXPAUUResourceDataEntry@@@Z ; free_entry
	add	esp, 4
$LN1@ures_flush:
; Line 209
	jmp	SHORT $LN3@ures_flush
$LN5@ures_flush:
; Line 214
	movsx	eax, BYTE PTR _deletedMore$[ebp]
	test	eax, eax
	jne	SHORT $LN6@ures_flush
; Line 215
	push	OFFSET _resbMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 217
	mov	eax, DWORD PTR _rbDeletedNum$[ebp]
$LN8@ures_flush:
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ures_flush
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@ures_flush:
	DD	1
	DD	$LN11@ures_flush
$LN11@ures_flush:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@ures_flush
$LN10@ures_flush:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?ures_flushCache@@YAHXZ ENDP				; ures_flushCache
_TEXT	ENDS
EXTRN	_res_unload_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?free_entry@@YAXPAUUResourceDataEntry@@@Z
_TEXT	SEGMENT
_alias$ = -8						; size = 4
_entry$ = 8						; size = 4
?free_entry@@YAXPAUUResourceDataEntry@@@Z PROC		; free_entry, COMDAT
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 149
	mov	eax, DWORD PTR _entry$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_unload_56
	add	esp, 4
; Line 150
	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@free_entry
	mov	eax, DWORD PTR _entry$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN6@free_entry
; Line 151
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN6@free_entry:
; Line 153
	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN5@free_entry
; Line 154
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN5@free_entry:
; Line 156
	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN4@free_entry
; Line 157
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+64]
	sub	edx, 1
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+64], edx
$LN4@free_entry:
; Line 159
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _alias$[ebp], ecx
; Line 160
	cmp	DWORD PTR _alias$[ebp], 0
	je	SHORT $LN3@free_entry
$LN2@free_entry:
; Line 161
	mov	eax, DWORD PTR _alias$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@free_entry
; Line 162
	mov	eax, DWORD PTR _alias$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _alias$[ebp], ecx
; Line 163
	jmp	SHORT $LN2@free_entry
$LN1@free_entry:
; Line 164
	mov	eax, DWORD PTR _alias$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	mov	edx, DWORD PTR _alias$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN3@free_entry:
; Line 166
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 167
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?free_entry@@YAXPAUUResourceDataEntry@@@Z ENDP		; free_entry
_TEXT	ENDS
PUBLIC	??_C@_07OJBLMIMJ@?$CF?$CFALIAS?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	_uhash_put_56:PROC
EXTRN	_res_getResource_56:PROC
EXTRN	_res_load_56:PROC
EXTRN	_uprv_strdup_56:PROC
EXTRN	_uhash_get_56:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_07OJBLMIMJ@?$CF?$CFALIAS?$AA@
CONST	SEGMENT
??_C@_07OJBLMIMJ@?$CF?$CFALIAS?$AA@ DB '%%ALIAS', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_cacheStatus$71359 = -284				; size = 4
_oldR$71356 = -272					; size = 4
_alias$71354 = -260					; size = 4
_poolIndexes$71346 = -248				; size = 4
_aliasres$71343 = -236					; size = 4
_aliasLen$ = -224					; size = 4
_aliasName$ = -212					; size = 100
_name$ = -104						; size = 4
_find$ = -92						; size = 72
_r$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_localeID$ = 8						; size = 4
_path$ = 12						; size = 4
_status$ = 16						; size = 4
?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z PROC ; init_entry, COMDAT
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 480				; 000001e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-480]
	mov	ecx, 120				; 00000078H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 308
	mov	DWORD PTR _r$[ebp], 0
; Line 312
	mov	BYTE PTR _aliasName$[ebp], 0
	push	99					; 00000063H
	push	0
	lea	eax, DWORD PTR _aliasName$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 313
	mov	DWORD PTR _aliasLen$[ebp], 0
; Line 317
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN27@init_entry
; Line 318
	xor	eax, eax
	jmp	$LN28@init_entry
$LN27@init_entry:
; Line 322
	cmp	DWORD PTR _localeID$[ebp], 0
	jne	SHORT $LN26@init_entry
; Line 323
	call	_uloc_getDefault_56
	mov	DWORD PTR _name$[ebp], eax
	jmp	SHORT $LN25@init_entry
$LN26@init_entry:
; Line 324
	mov	eax, DWORD PTR _localeID$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN24@init_entry
; Line 325
	mov	DWORD PTR _name$[ebp], OFFSET ??_C@_04NBFCGMPH@root?$AA@
; Line 326
	jmp	SHORT $LN25@init_entry
$LN24@init_entry:
; Line 327
	mov	eax, DWORD PTR _localeID$[ebp]
	mov	DWORD PTR _name$[ebp], eax
$LN25@init_entry:
; Line 330
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR _find$[ebp], eax
; Line 331
	mov	eax, DWORD PTR _path$[ebp]
	mov	DWORD PTR _find$[ebp+4], eax
; Line 338
	lea	eax, DWORD PTR _find$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cache
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 339
	cmp	DWORD PTR _r$[ebp], 0
	jne	$LN22@init_entry
; Line 341
	push	72					; 00000048H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 342
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN21@init_entry
; Line 343
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 344
	xor	eax, eax
	jmp	$LN28@init_entry
$LN21@init_entry:
; Line 347
	push	72					; 00000048H
	push	0
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 350
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	?setEntryName@@YAXPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z ; setEntryName
	add	esp, 12					; 0000000cH
; Line 351
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@init_entry
; Line 352
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 353
	xor	eax, eax
	jmp	$LN28@init_entry
$LN20@init_entry:
; Line 356
	cmp	DWORD PTR _path$[ebp], 0
	je	SHORT $LN19@init_entry
; Line 357
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_uprv_strdup_56
	add	esp, 4
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 358
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN19@init_entry
; Line 359
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 360
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 361
	xor	eax, eax
	jmp	$LN28@init_entry
$LN19@init_entry:
; Line 366
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_load_56
	add	esp, 16					; 00000010H
; Line 368
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@init_entry
; Line 370
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -128			; ffffff80H
; Line 371
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR [eax+68], -128		; ffffff80H
; Line 372
	jmp	$LN16@init_entry
$LN17@init_entry:
; Line 374
	mov	eax, DWORD PTR _r$[ebp]
	movsx	ecx, BYTE PTR [eax+58]
	test	ecx, ecx
	je	$LN15@init_entry
; Line 375
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?getPoolEntry@@YAPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z ; getPoolEntry
	add	esp, 8
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 376
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@init_entry
; Line 377
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 4
	mov	DWORD PTR _poolIndexes$71346[ebp], edx
; Line 378
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _poolIndexes$71346[ebp]
	mov	eax, DWORD PTR [ecx+32]
	cmp	eax, DWORD PTR [edx+28]
	jne	SHORT $LN13@init_entry
; Line 379
	mov	eax, DWORD PTR _poolIndexes$71346[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _poolIndexes$71346[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 380
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR [ecx+28]
	mov	DWORD PTR [edx+44], eax
; Line 381
	jmp	SHORT $LN12@init_entry
$LN13@init_entry:
; Line 382
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [ecx+68], 3
$LN12@init_entry:
; Line 384
	jmp	SHORT $LN15@init_entry
$LN14@init_entry:
; Line 385
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+68], edx
$LN15@init_entry:
; Line 388
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN16@init_entry
; Line 391
	push	OFFSET ??_C@_07OJBLMIMJ@?$CF?$CFALIAS?$AA@
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getResource_56
	add	esp, 8
	mov	DWORD PTR _aliasres$71343[ebp], eax
; Line 392
	cmp	DWORD PTR _aliasres$71343[ebp], -1
	je	SHORT $LN16@init_entry
; Line 393
	lea	eax, DWORD PTR _aliasLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aliasres$71343[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _alias$71354[ebp], eax
; Line 394
	cmp	DWORD PTR _alias$71354[ebp], 0
	je	SHORT $LN16@init_entry
	cmp	DWORD PTR _aliasLen$[ebp], 0
	jle	SHORT $LN16@init_entry
; Line 395
	mov	eax, DWORD PTR _aliasLen$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _aliasName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _alias$71354[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 396
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	lea	edx, DWORD PTR _aliasName$[ebp]
	push	edx
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN16@init_entry:
; Line 403
	mov	DWORD PTR _oldR$71356[ebp], 0
; Line 404
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cache
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _oldR$71356[ebp], eax
	cmp	DWORD PTR _oldR$71356[ebp], 0
	jne	SHORT $LN7@init_entry
; Line 406
	mov	DWORD PTR _cacheStatus$71359[ebp], 0
; Line 407
	lea	eax, DWORD PTR _cacheStatus$71359[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _cache
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 408
	mov	eax, DWORD PTR _cacheStatus$71359[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@init_entry
; Line 409
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _cacheStatus$71359[ebp]
	mov	DWORD PTR [eax], ecx
; Line 410
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?free_entry@@YAXPAUUResourceDataEntry@@@Z ; free_entry
	add	esp, 4
; Line 411
	mov	DWORD PTR _r$[ebp], 0
$LN6@init_entry:
; Line 413
	jmp	SHORT $LN22@init_entry
$LN7@init_entry:
; Line 416
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?free_entry@@YAXPAUUResourceDataEntry@@@Z ; free_entry
	add	esp, 4
; Line 417
	mov	eax, DWORD PTR _oldR$71356[ebp]
	mov	DWORD PTR _r$[ebp], eax
$LN22@init_entry:
; Line 422
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN4@init_entry
$LN3@init_entry:
; Line 424
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@init_entry
; Line 425
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _r$[ebp], ecx
; Line 426
	jmp	SHORT $LN3@init_entry
$LN2@init_entry:
; Line 427
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, 1
	mov	edx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 430
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN4@init_entry
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@init_entry
; Line 431
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax], edx
$LN4@init_entry:
; Line 434
	mov	eax, DWORD PTR _r$[ebp]
$LN28@init_entry:
; Line 435
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@init_entry
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 480				; 000001e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN35@init_entry:
	DD	4
	DD	$LN34@init_entry
$LN34@init_entry:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN30@init_entry
	DD	-212					; ffffff2cH
	DD	100					; 00000064H
	DD	$LN31@init_entry
	DD	-224					; ffffff20H
	DD	4
	DD	$LN32@init_entry
	DD	-284					; fffffee4H
	DD	4
	DD	$LN33@init_entry
$LN33@init_entry:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN32@init_entry:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN31@init_entry:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN30@init_entry:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ENDP ; init_entry
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setEntryName@@YAXPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_len$ = -8						; size = 4
_res$ = 8						; size = 4
_name$ = 12						; size = 4
_status$ = 16						; size = 4
?setEntryName@@YAXPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z PROC ; setEntryName, COMDAT
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 283
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 284
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@setEntryNa
	mov	eax, DWORD PTR _res$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN5@setEntryNa
; Line 285
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN5@setEntryNa:
; Line 287
	cmp	DWORD PTR _len$[ebp], 3
	jge	SHORT $LN4@setEntryNa
; Line 288
	mov	eax, DWORD PTR _res$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 290
	jmp	SHORT $LN3@setEntryNa
$LN4@setEntryNa:
; Line 291
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@setEntryNa:
; Line 293
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@setEntryNa
; Line 294
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 295
	jmp	SHORT $LN6@setEntryNa
$LN2@setEntryNa:
; Line 296
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strcpy
	add	esp, 8
$LN6@setEntryNa:
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setEntryName@@YAXPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z ENDP ; setEntryName
_TEXT	ENDS
PUBLIC	??_C@_04CJIJKHMO@pool?$AA@			; `string'
;	COMDAT ??_C@_04CJIJKHMO@pool?$AA@
CONST	SEGMENT
??_C@_04CJIJKHMO@pool?$AA@ DB 'pool', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getPoolEntry@@YAPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_poolBundle$ = -8					; size = 4
_path$ = 8						; size = 4
_status$ = 12						; size = 4
?getPoolEntry@@YAPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z PROC ; getPoolEntry, COMDAT
; Line 438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 439
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	push	OFFSET ??_C@_04CJIJKHMO@pool?$AA@
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _poolBundle$[ebp], eax
; Line 442
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getPoolEnt
	cmp	DWORD PTR _poolBundle$[ebp], 0
	je	SHORT $LN1@getPoolEnt
	mov	eax, DWORD PTR _poolBundle$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN1@getPoolEnt
	mov	eax, DWORD PTR _poolBundle$[ebp]
	movsx	ecx, BYTE PTR [eax+57]
	test	ecx, ecx
	jne	SHORT $LN2@getPoolEnt
$LN1@getPoolEnt:
; Line 443
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN2@getPoolEnt:
; Line 445
	mov	eax, DWORD PTR _poolBundle$[ebp]
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getPoolEntry@@YAPAUUResourceDataEntry@@PBDPAW4UErrorCode@@@Z ENDP ; getPoolEntry
_TEXT	ENDS
EXTRN	__imp__strncmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findFirstExisting@@YAPAUUResourceDataEntry@@PBDPADPAC22PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_defaultLoc$ = -32					; size = 4
_hasRealData$ = -17					; size = 1
_r$ = -8						; size = 4
_path$ = 8						; size = 4
_name$ = 12						; size = 4
_isRoot$ = 16						; size = 4
_hasChopped$ = 20					; size = 4
_isDefault$ = 24					; size = 4
_status$ = 28						; size = 4
?findFirstExisting@@YAPAUUResourceDataEntry@@PBDPADPAC22PAW4UErrorCode@@@Z PROC ; findFirstExisting, COMDAT
; Line 452
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 453
	mov	DWORD PTR _r$[ebp], 0
; Line 454
	mov	BYTE PTR _hasRealData$[ebp], 0
; Line 455
	call	_uloc_getDefault_56
	mov	DWORD PTR _defaultLoc$[ebp], eax
; Line 456
	mov	eax, DWORD PTR _hasChopped$[ebp]
	mov	BYTE PTR [eax], 1
$LN5@findFirstE:
; Line 458
	mov	eax, DWORD PTR _hasChopped$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN4@findFirstE
	movsx	eax, BYTE PTR _hasRealData$[ebp]
	test	eax, eax
	jne	$LN4@findFirstE
; Line 459
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 461
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@findFirstE
; Line 462
	xor	eax, eax
	jmp	$LN6@findFirstE
$LN3@findFirstE:
; Line 464
	push	1
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	mov	ecx, DWORD PTR _defaultLoc$[ebp]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _defaultLoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	sete	dl
	mov	eax, DWORD PTR _isDefault$[ebp]
	mov	BYTE PTR [eax], dl
; Line 465
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+68], 0
	sete	cl
	mov	BYTE PTR _hasRealData$[ebp], cl
; Line 466
	movsx	eax, BYTE PTR _hasRealData$[ebp]
	test	eax, eax
	jne	SHORT $LN2@findFirstE
; Line 472
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	mov	edx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 474
	mov	DWORD PTR _r$[ebp], 0
; Line 475
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -128			; ffffff80H
; Line 476
	jmp	SHORT $LN1@findFirstE
$LN2@findFirstE:
; Line 477
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN1@findFirstE:
; Line 480
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	sete	cl
	mov	edx, DWORD PTR _isRoot$[ebp]
	mov	BYTE PTR [edx], cl
; Line 483
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?chopLocale@@YACPAD@Z			; chopLocale
	add	esp, 4
	mov	ecx, DWORD PTR _hasChopped$[ebp]
	mov	BYTE PTR [ecx], al
; Line 484
	jmp	$LN5@findFirstE
$LN4@findFirstE:
; Line 485
	mov	eax, DWORD PTR _r$[ebp]
$LN6@findFirstE:
; Line 486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?findFirstExisting@@YAPAUUResourceDataEntry@@PBDPADPAC22PAW4UErrorCode@@@Z ENDP ; findFirstExisting
_TEXT	ENDS
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?chopLocale@@YACPAD@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_name$ = 8						; size = 4
?chopLocale@@YACPAD@Z PROC				; chopLocale, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	push	95					; 0000005fH
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
; Line 81
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN1@chopLocale
; Line 82
	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 0
; Line 83
	mov	al, 1
	jmp	SHORT $LN2@chopLocale
$LN1@chopLocale:
; Line 86
	xor	al, al
$LN2@chopLocale:
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?chopLocale@@YACPAD@Z ENDP				; chopLocale
_TEXT	ENDS
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
PUBLIC	??_C@_08GILJLIB@?$CF?$CFParent?$AA@		; `string'
PUBLIC	??_C@_0P@DIIEJICA@?$CF?$CFParentIsRoot?$AA@	; `string'
;	COMDAT ??_C@_08GILJLIB@?$CF?$CFParent?$AA@
; File d:\mozilla\intl\icu\source\common\uresbund.cpp
CONST	SEGMENT
??_C@_08GILJLIB@?$CF?$CFParent?$AA@ DB '%%Parent', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DIIEJICA@?$CF?$CFParentIsRoot?$AA@
CONST	SEGMENT
??_C@_0P@DIIEJICA@?$CF?$CFParentIsRoot?$AA@ DB '%%ParentIsRoot', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?loadParentsExceptRoot@@YACAAPAUUResourceDataEntry@@QADHC1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_usrStatus$71434 = -92					; size = 4
_u2$71433 = -80						; size = 4
_t2$71431 = -68						; size = 4
_parentStatus$71430 = -56				; size = 4
_parentLocaleName$71427 = -44				; size = 4
_parentLocaleLen$71426 = -32				; size = 4
_parentRes$71423 = -20					; size = 4
_hasChopped$ = -5					; size = 1
_t1$ = 8						; size = 4
_name$ = 12						; size = 4
_nameCapacity$ = 16					; size = 4
_usingUSRData$ = 20					; size = 1
_usrDataPath$ = 24					; size = 4
_status$ = 28						; size = 4
?loadParentsExceptRoot@@YACAAPAUUResourceDataEntry@@QADHC1PAW4UErrorCode@@@Z PROC ; loadParentsExceptRoot, COMDAT
; Line 511
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 512
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@loadParent
	xor	al, al
	jmp	$LN12@loadParent
$LN11@loadParent:
; Line 513
	mov	BYTE PTR _hasChopped$[ebp], 1
$LN10@loadParent:
; Line 515
	movsx	eax, BYTE PTR _hasChopped$[ebp]
	test	eax, eax
	je	$LN9@loadParent
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+8], 0
	jne	$LN9@loadParent
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+56]
	test	edx, edx
	jne	$LN9@loadParent
	push	OFFSET ??_C@_0P@DIIEJICA@?$CF?$CFParentIsRoot?$AA@
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getResource_56
	add	esp, 8
	cmp	eax, -1
	jne	$LN9@loadParent
; Line 516
	push	OFFSET ??_C@_08GILJLIB@?$CF?$CFParent?$AA@
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getResource_56
	add	esp, 8
	mov	DWORD PTR _parentRes$71423[ebp], eax
; Line 517
	cmp	DWORD PTR _parentRes$71423[ebp], -1
	je	SHORT $LN8@loadParent
; Line 518
	mov	DWORD PTR _parentLocaleLen$71426[ebp], 0
; Line 519
	lea	eax, DWORD PTR _parentLocaleLen$71426[ebp]
	push	eax
	mov	ecx, DWORD PTR _parentRes$71423[ebp]
	push	ecx
	mov	edx, DWORD PTR _t1$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _parentLocaleName$71427[ebp], eax
; Line 520
	cmp	DWORD PTR _parentLocaleName$71427[ebp], 0
	je	SHORT $LN8@loadParent
	cmp	DWORD PTR _parentLocaleLen$71426[ebp], 0
	jle	SHORT $LN8@loadParent
	mov	eax, DWORD PTR _parentLocaleLen$71426[ebp]
	cmp	eax, DWORD PTR _nameCapacity$[ebp]
	jge	SHORT $LN8@loadParent
; Line 521
	mov	eax, DWORD PTR _parentLocaleLen$71426[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _parentLocaleName$71427[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 522
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@loadParent
; Line 523
	mov	al, 1
	jmp	$LN12@loadParent
$LN8@loadParent:
; Line 528
	mov	DWORD PTR _parentStatus$71430[ebp], 0
; Line 529
	lea	eax, DWORD PTR _parentStatus$71430[ebp]
	push	eax
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t2$71431[ebp], eax
; Line 530
	mov	eax, DWORD PTR _parentStatus$71430[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@loadParent
; Line 531
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _parentStatus$71430[ebp]
	mov	DWORD PTR [eax], ecx
; Line 532
	xor	al, al
	jmp	$LN12@loadParent
$LN5@loadParent:
; Line 534
	mov	DWORD PTR _u2$71433[ebp], 0
; Line 535
	mov	DWORD PTR _usrStatus$71434[ebp], 0
; Line 536
	movsx	eax, BYTE PTR _usingUSRData$[ebp]
	test	eax, eax
	je	SHORT $LN4@loadParent
; Line 537
	lea	eax, DWORD PTR _usrStatus$71434[ebp]
	push	eax
	mov	ecx, DWORD PTR _usrDataPath$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _u2$71433[ebp], eax
$LN4@loadParent:
; Line 540
	movsx	eax, BYTE PTR _usingUSRData$[ebp]
	test	eax, eax
	je	SHORT $LN3@loadParent
	mov	eax, DWORD PTR _usrStatus$71434[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@loadParent
	mov	eax, DWORD PTR _u2$71433[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN3@loadParent
; Line 541
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _u2$71433[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 542
	mov	eax, DWORD PTR _u2$71433[ebp]
	mov	ecx, DWORD PTR _t2$71431[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 543
	jmp	SHORT $LN2@loadParent
$LN3@loadParent:
; Line 544
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _t2$71431[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 545
	movsx	eax, BYTE PTR _usingUSRData$[ebp]
	test	eax, eax
	je	SHORT $LN2@loadParent
; Line 547
	mov	eax, DWORD PTR _u2$71433[ebp]
	mov	DWORD PTR [eax+64], 0
$LN2@loadParent:
; Line 550
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR _t2$71431[ebp]
	mov	DWORD PTR [eax], ecx
; Line 551
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?chopLocale@@YACPAD@Z			; chopLocale
	add	esp, 4
	mov	BYTE PTR _hasChopped$[ebp], al
; Line 552
	jmp	$LN10@loadParent
$LN9@loadParent:
; Line 553
	mov	al, 1
$LN12@loadParent:
; Line 554
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@loadParent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN18@loadParent:
	DD	3
	DD	$LN17@loadParent
$LN17@loadParent:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN14@loadParent
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN15@loadParent
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN16@loadParent
$LN16@loadParent:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN15@loadParent:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN14@loadParent:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?loadParentsExceptRoot@@YACAAPAUUResourceDataEntry@@QADHC1PAW4UErrorCode@@@Z ENDP ; loadParentsExceptRoot
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?insertRootBundle@@YACAAPAUUResourceDataEntry@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_t2$ = -20						; size = 4
_parentStatus$ = -8					; size = 4
_t1$ = 8						; size = 4
_status$ = 12						; size = 4
?insertRootBundle@@YACAAPAUUResourceDataEntry@@PAW4UErrorCode@@@Z PROC ; insertRootBundle, COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 558
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@insertRoot
	xor	al, al
	jmp	SHORT $LN3@insertRoot
$LN2@insertRoot:
; Line 559
	mov	DWORD PTR _parentStatus$[ebp], 0
; Line 560
	lea	eax, DWORD PTR _parentStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t2$[ebp], eax
; Line 561
	mov	eax, DWORD PTR _parentStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@insertRoot
; Line 562
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _parentStatus$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 563
	xor	al, al
	jmp	SHORT $LN3@insertRoot
$LN1@insertRoot:
; Line 565
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _t2$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 566
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR _t2$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 567
	mov	al, 1
$LN3@insertRoot:
; Line 568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@insertRoot
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@insertRoot:
	DD	1
	DD	$LN6@insertRoot
$LN6@insertRoot:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@insertRoot
$LN5@insertRoot:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?insertRootBundle@@YACAAPAUUResourceDataEntry@@PAW4UErrorCode@@@Z ENDP ; insertRootBundle
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?entryOpenDirect@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_name$71520 = -192					; size = 157
_t1$ = -24						; size = 4
_r$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
_localeID$ = 12						; size = 4
_status$ = 16						; size = 4
?entryOpenDirect@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z PROC ; entryOpenDirect, COMDAT
; Line 735
	push	ebp
	mov	ebp, esp
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 736
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?initCache@@YAXPAW4UErrorCode@@@Z	; initCache
	add	esp, 4
; Line 737
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@entryOpenD
; Line 738
	xor	eax, eax
	jmp	$LN13@entryOpenD
$LN12@entryOpenD:
; Line 741
	push	OFFSET _resbMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 743
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _localeID$[ebp]
	push	edx
	call	?init_entry@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ; init_entry
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 744
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@entryOpenD
; Line 745
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN10@entryOpenD
; Line 746
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	mov	edx, DWORD PTR _r$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 747
	mov	DWORD PTR _r$[ebp], 0
$LN10@entryOpenD:
; Line 749
	jmp	SHORT $LN9@entryOpenD
$LN11@entryOpenD:
; Line 750
	mov	DWORD PTR _r$[ebp], 0
$LN9@entryOpenD:
; Line 755
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _t1$[ebp], eax
; Line 758
	cmp	DWORD PTR _r$[ebp], 0
	je	$LN8@entryOpenD
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN8@entryOpenD
	mov	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	$LN8@entryOpenD
	mov	eax, DWORD PTR _r$[ebp]
	movsx	ecx, BYTE PTR [eax+56]
	test	ecx, ecx
	jne	$LN8@entryOpenD
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 157				; 0000009dH
	jae	$LN8@entryOpenD
; Line 760
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$71520[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 762
	lea	eax, DWORD PTR _name$71520[ebp]
	push	eax
	call	?chopLocale@@YACPAD@Z			; chopLocale
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@entryOpenD
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	lea	eax, DWORD PTR _name$71520[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@entryOpenD
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _name$71520[ebp]
	push	ecx
	lea	edx, DWORD PTR _t1$[ebp]
	push	edx
	call	?loadParentsExceptRoot@@YACAAPAUUResourceDataEntry@@QADHC1PAW4UErrorCode@@@Z ; loadParentsExceptRoot
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN7@entryOpenD
$LN6@entryOpenD:
; Line 763
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@entryOpenD
	mov	eax, DWORD PTR _t1$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN7@entryOpenD
; Line 764
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t1$[ebp]
	push	ecx
	call	?insertRootBundle@@YACAAPAUUResourceDataEntry@@PAW4UErrorCode@@@Z ; insertRootBundle
	add	esp, 8
$LN7@entryOpenD:
; Line 767
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@entryOpenD
; Line 768
	mov	DWORD PTR _r$[ebp], 0
$LN8@entryOpenD:
; Line 772
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN3@entryOpenD
$LN2@entryOpenD:
; Line 774
	mov	eax, DWORD PTR _t1$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@entryOpenD
; Line 775
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+64]
	add	edx, 1
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+64], edx
; Line 776
	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _t1$[ebp], ecx
; Line 777
	jmp	SHORT $LN2@entryOpenD
$LN3@entryOpenD:
; Line 779
	push	OFFSET _resbMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 780
	mov	eax, DWORD PTR _r$[ebp]
$LN13@entryOpenD:
; Line 781
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@entryOpenD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@entryOpenD:
	DD	2
	DD	$LN17@entryOpenD
$LN17@entryOpenD:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@entryOpenD
	DD	-192					; ffffff40H
	DD	157					; 0000009dH
	DD	$LN16@entryOpenD
$LN16@entryOpenD:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN15@entryOpenD:
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
?entryOpenDirect@@YAPAUUResourceDataEntry@@PBD0PAW4UErrorCode@@@Z ENDP ; entryOpenDirect
_TEXT	ENDS
PUBLIC	_ures_openNoDefault_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_openNoDefault_56
_TEXT	SEGMENT
_path$ = 8						; size = 4
_localeID$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_openNoDefault_56 PROC				; COMDAT
; Line 2163
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2164
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	push	0
	call	?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z ; ures_openWithType
	add	esp, 20					; 00000014H
; Line 2165
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_openNoDefault_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ures_openDirect_56
_TEXT	SEGMENT
_path$ = 8						; size = 4
_localeID$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_openDirect_56 PROC				; COMDAT
; Line 2172
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2173
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	push	0
	call	?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z ; ures_openWithType
	add	esp, 20					; 00000014H
; Line 2174
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_openDirect_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_openFillIn_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_openFillIn_56
_TEXT	SEGMENT
_r$ = 8							; size = 4
_path$ = 12						; size = 4
_localeID$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_openFillIn_56 PROC				; COMDAT
; Line 2183
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2184
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ures_openF
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN1@ures_openF
; Line 2185
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2186
	jmp	SHORT $LN2@ures_openF
$LN1@ures_openF:
; Line 2188
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	call	?ures_openWithType@@YAPAUUResourceBundle@@PAU1@PBD1W4UResOpenType@@PAW4UErrorCode@@@Z ; ures_openWithType
	add	esp, 20					; 00000014H
$LN2@ures_openF:
; Line 2189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_openFillIn_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ures_countArrayItems_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_countArrayItems_56
_TEXT	SEGMENT
_result$72248 = -172					; size = 4
_resData$ = -160					; size = 152
__$ArrayPad$ = -4					; size = 4
_resourceBundle$ = 8					; size = 4
_resourceKey$ = 12					; size = 4
_status$ = 16						; size = 4
_ures_countArrayItems_56 PROC				; COMDAT
; Line 2199
	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2201
	lea	eax, DWORD PTR _resData$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2202
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN4@ures_count
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ures_count
$LN4@ures_count:
; Line 2203
	xor	eax, eax
	jmp	$LN6@ures_count
$LN5@ures_count:
; Line 2205
	cmp	DWORD PTR _resourceBundle$[ebp], 0
	jne	SHORT $LN3@ures_count
; Line 2206
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2207
	xor	eax, eax
	jmp	SHORT $LN6@ures_count
$LN3@ures_count:
; Line 2209
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _resData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resourceKey$[ebp]
	push	edx
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2211
	cmp	DWORD PTR _resData$[ebp+20], 0
	je	SHORT $LN2@ures_count
; Line 2212
	mov	eax, DWORD PTR _resData$[ebp+128]
	push	eax
	lea	ecx, DWORD PTR _resData$[ebp+20]
	push	ecx
	call	_res_countArrayItems_56
	add	esp, 8
	mov	DWORD PTR _result$72248[ebp], eax
; Line 2213
	lea	eax, DWORD PTR _resData$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2214
	mov	eax, DWORD PTR _result$72248[ebp]
	jmp	SHORT $LN6@ures_count
; Line 2215
	jmp	SHORT $LN6@ures_count
$LN2@ures_count:
; Line 2216
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 2217
	lea	eax, DWORD PTR _resData$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2218
	xor	eax, eax
$LN6@ures_count:
; Line 2220
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ures_count
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@ures_count:
	DD	1
	DD	$LN9@ures_count
$LN9@ures_count:
	DD	-160					; ffffff60H
	DD	152					; 00000098H
	DD	$LN8@ures_count
$LN8@ures_count:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_ures_countArrayItems_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_07NGFJPNPN@Version?$AA@			; `string'
PUBLIC	_ures_getVersionNumberInternal_56
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGFJPNPN@Version?$AA@
CONST	SEGMENT
??_C@_07NGFJPNPN@Version?$AA@ DB 'Version', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ures_getVersionNumberInternal_56
_TEXT	SEGMENT
tv73 = -244						; size = 4
_minor_version$72258 = -44				; size = 4
_len$72257 = -32					; size = 4
_minor_len$72256 = -20					; size = 4
_status$72255 = -8					; size = 4
_resourceBundle$ = 8					; size = 4
_ures_getVersionNumberInternal_56 PROC			; COMDAT
; Line 2234
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2235
	cmp	DWORD PTR _resourceBundle$[ebp], 0
	jne	SHORT $LN5@ures_getVe
	xor	eax, eax
	jmp	$LN6@ures_getVe
$LN5@ures_getVe:
; Line 2237
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	$LN4@ures_getVe
; Line 2241
	mov	DWORD PTR _status$72255[ebp], 0
; Line 2242
	mov	DWORD PTR _minor_len$72256[ebp], 0
; Line 2245
	lea	eax, DWORD PTR _status$72255[ebp]
	push	eax
	lea	ecx, DWORD PTR _minor_len$72256[ebp]
	push	ecx
	push	OFFSET ??_C@_07NGFJPNPN@Version?$AA@
	mov	edx, DWORD PTR _resourceBundle$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _minor_version$72258[ebp], eax
; Line 2252
	cmp	DWORD PTR _minor_len$72256[ebp], 0
	jle	SHORT $LN8@ures_getVe
	mov	eax, DWORD PTR _minor_len$72256[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN9@ures_getVe
$LN8@ures_getVe:
	mov	DWORD PTR tv73[ebp], 1
$LN9@ures_getVe:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _len$72257[ebp], ecx
; Line 2258
	mov	eax, DWORD PTR _len$72257[ebp]
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _resourceBundle$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 2260
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@ures_getVe
; Line 2261
	xor	eax, eax
	jmp	SHORT $LN6@ures_getVe
$LN3@ures_getVe:
; Line 2264
	cmp	DWORD PTR _minor_len$72256[ebp], 0
	jle	SHORT $LN2@ures_getVe
; Line 2265
	mov	eax, DWORD PTR _minor_len$72256[ebp]
	push	eax
	mov	ecx, DWORD PTR _resourceBundle$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _minor_version$72258[ebp]
	push	eax
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 2266
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _len$72257[ebp]
	mov	BYTE PTR [ecx+edx], 0
; Line 2268
	jmp	SHORT $LN4@ures_getVe
$LN2@ures_getVe:
; Line 2269
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN4@ures_getVe:
; Line 2273
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	mov	eax, DWORD PTR [eax+8]
$LN6@ures_getVe:
; Line 2274
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@ures_getVe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@ures_getVe:
	DD	2
	DD	$LN12@ures_getVe
$LN12@ures_getVe:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN10@ures_getVe
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@ures_getVe
$LN11@ures_getVe:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN10@ures_getVe:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ures_getVersionNumberInternal_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getVersionNumber_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getVersionNumber_56
_TEXT	SEGMENT
_resourceBundle$ = 8					; size = 4
_ures_getVersionNumber_56 PROC				; COMDAT
; Line 2278
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2279
	mov	eax, DWORD PTR _resourceBundle$[ebp]
	push	eax
	call	_ures_getVersionNumberInternal_56
	add	esp, 4
; Line 2280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getVersionNumber_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getVersion_56
EXTRN	_u_versionFromString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getVersion_56
_TEXT	SEGMENT
_resB$ = 8						; size = 4
_versionInfo$ = 12					; size = 4
_ures_getVersion_56 PROC				; COMDAT
; Line 2282
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2283
	cmp	DWORD PTR _resB$[ebp], 0
	jne	SHORT $LN1@ures_getVe@2
	jmp	SHORT $LN2@ures_getVe@2
$LN1@ures_getVe@2:
; Line 2285
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getVersionNumberInternal_56
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _versionInfo$[ebp]
	push	ecx
	call	_u_versionFromString_56
	add	esp, 8
$LN2@ures_getVe@2:
; Line 2286
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_getVersion_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_loc_closeLocales@@YAXPAUUEnumeration@@@Z
_TEXT	SEGMENT
_ctx$ = -8						; size = 4
_enumerator$ = 8					; size = 4
?ures_loc_closeLocales@@YAXPAUUEnumeration@@@Z PROC	; ures_loc_closeLocales, COMDAT
; Line 2303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2304
	mov	eax, DWORD PTR _enumerator$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ctx$[ebp], ecx
; Line 2305
	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2306
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2307
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2308
	mov	eax, DWORD PTR _enumerator$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_loc_closeLocales@@YAXPAUUEnumeration@@@Z ENDP	; ures_loc_closeLocales
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_loc_countLocales@@YAHPAUUEnumeration@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ctx$ = -8						; size = 4
_en$ = 8						; size = 4
___formal$ = 12						; size = 4
?ures_loc_countLocales@@YAHPAUUEnumeration@@PAW4UErrorCode@@@Z PROC ; ures_loc_countLocales, COMDAT
; Line 2312
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2313
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ctx$[ebp], ecx
; Line 2314
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
; Line 2315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_loc_countLocales@@YAHPAUUEnumeration@@PAW4UErrorCode@@@Z ENDP ; ures_loc_countLocales
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_loc_nextLocale@@YAPBDPAUUEnumeration@@PAHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_len$ = -56						; size = 4
_result$ = -44						; size = 4
_k$ = -32						; size = 4
_res$ = -20						; size = 4
_ctx$ = -8						; size = 4
_en$ = 8						; size = 4
_resultLength$ = 12					; size = 4
_status$ = 16						; size = 4
?ures_loc_nextLocale@@YAPBDPAUUEnumeration@@PAHPAW4UErrorCode@@@Z PROC ; ures_loc_nextLocale, COMDAT
; Line 2320
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2321
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ctx$[ebp], ecx
; Line 2322
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _res$[ebp], eax
; Line 2323
	mov	DWORD PTR _k$[ebp], 0
; Line 2324
	mov	DWORD PTR _result$[ebp], 0
; Line 2325
	mov	DWORD PTR _len$[ebp], 0
; Line 2326
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_hasNext_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ures_loc_n
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	add	ecx, 152				; 00000098H
	push	ecx
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _k$[ebp], eax
	cmp	DWORD PTR _k$[ebp], 0
	je	SHORT $LN2@ures_loc_n
; Line 2327
	mov	eax, DWORD PTR _k$[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 2328
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
$LN2@ures_loc_n:
; Line 2330
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN1@ures_loc_n
; Line 2331
	mov	eax, DWORD PTR _resultLength$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ures_loc_n:
; Line 2333
	mov	eax, DWORD PTR _result$[ebp]
; Line 2334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_loc_nextLocale@@YAPBDPAUUEnumeration@@PAHPAW4UErrorCode@@@Z ENDP ; ures_loc_nextLocale
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ures_loc_resetLocales@@YAXPAUUEnumeration@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_en$ = 8						; size = 4
___formal$ = 12						; size = 4
?ures_loc_resetLocales@@YAXPAUUEnumeration@@PAW4UErrorCode@@@Z PROC ; ures_loc_resetLocales, COMDAT
; Line 2338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2339
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _res$[ebp], ecx
; Line 2340
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_resetIterator_56
	add	esp, 4
; Line 2341
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ures_loc_resetLocales@@YAXPAUUEnumeration@@PAW4UErrorCode@@@Z ENDP ; ures_loc_resetLocales
_TEXT	ENDS
PUBLIC	??_C@_0BB@HHHDICBP@InstalledLocales?$AA@	; `string'
PUBLIC	??_C@_09BLDIAEDF@res_index?$AA@			; `string'
PUBLIC	_ures_openAvailableLocales_56
;	COMDAT ??_C@_0BB@HHHDICBP@InstalledLocales?$AA@
CONST	SEGMENT
??_C@_0BB@HHHDICBP@InstalledLocales?$AA@ DB 'InstalledLocales', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLDIAEDF@res_index?$AA@
CONST	SEGMENT
??_C@_09BLDIAEDF@res_index?$AA@ DB 'res_index', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ures_openAvailableLocales_56
_TEXT	SEGMENT
_myContext$ = -32					; size = 4
_en$ = -20						; size = 4
_idx$ = -8						; size = 4
_path$ = 8						; size = 4
_status$ = 12						; size = 4
_ures_openAvailableLocales_56 PROC			; COMDAT
; Line 2357
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2358
	mov	DWORD PTR _idx$[ebp], 0
; Line 2359
	mov	DWORD PTR _en$[ebp], 0
; Line 2360
	mov	DWORD PTR _myContext$[ebp], 0
; Line 2362
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ures_openA
; Line 2363
	xor	eax, eax
	jmp	$LN6@ures_openA
$LN5@ures_openA:
; Line 2365
	push	304					; 00000130H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _myContext$[ebp], eax
; Line 2366
	push	28					; 0000001cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _en$[ebp], eax
; Line 2367
	cmp	DWORD PTR _en$[ebp], 0
	je	SHORT $LN3@ures_openA
	cmp	DWORD PTR _myContext$[ebp], 0
	jne	SHORT $LN4@ures_openA
$LN3@ures_openA:
; Line 2368
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2369
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2370
	mov	eax, DWORD PTR _myContext$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2371
	xor	eax, eax
	jmp	$LN6@ures_openA
$LN4@ures_openA:
; Line 2373
	push	1
	push	OFFSET _gLocalesEnum
	call	_uprv_checkValidMemory
	add	esp, 8
	push	28					; 0000001cH
	push	OFFSET _gLocalesEnum
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2375
	mov	eax, DWORD PTR _myContext$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2376
	mov	eax, DWORD PTR _myContext$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2377
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_09BLDIAEDF@res_index?$AA@
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _idx$[ebp], eax
; Line 2378
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _myContext$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BB@HHHDICBP@InstalledLocales?$AA@
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2379
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ures_openA
; Line 2384
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR _myContext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2385
	jmp	SHORT $LN1@ures_openA
$LN2@ures_openA:
; Line 2389
	mov	eax, DWORD PTR _myContext$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2390
	mov	eax, DWORD PTR _myContext$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2391
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2392
	mov	DWORD PTR _en$[ebp], 0
$LN1@ures_openA:
; Line 2395
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2397
	mov	eax, DWORD PTR _en$[ebp]
$LN6@ures_openA:
; Line 2398
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ures_openAvailableLocales_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_01NEMOKFLO@?$DN?$AA@			; `string'
PUBLIC	??_C@_01EOFPKCAF@?$EA?$AA@			; `string'
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ures_getFunctionalEquivalent_56
EXTRN	_uprv_min_56:PROC
EXTRN	_strcat:PROC
EXTRN	_uloc_getParent_56:PROC
EXTRN	_uenum_close_56:PROC
EXTRN	_uloc_getKeywordValue_56:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_01NEMOKFLO@?$DN?$AA@
CONST	SEGMENT
??_C@_01NEMOKFLO@?$DN?$AA@ DB '=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EOFPKCAF@?$EA?$AA@
CONST	SEGMENT
??_C@_01EOFPKCAF@?$EA?$AA@ DB '@', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ures_getFunctionalEquivalent_56
_TEXT	SEGMENT
_copyLength$72438 = -7676				; size = 4
_defLen$72422 = -7664					; size = 4
_defUstr$72421 = -7652					; size = 4
_defLen$72405 = -7640					; size = 4
_defUstr$72404 = -7628					; size = 4
_defLen$72388 = -7616					; size = 4
_defUstr$72387 = -7604					; size = 4
_locEnum$72375 = -7592					; size = 4
_length$ = -7580					; size = 4
_subStatus$ = -7568					; size = 4
_res$ = -7556						; size = 4
_bund2$ = -7544						; size = 152
_bund1$ = -7384						; size = 152
_full$ = -7224						; size = 1024
_parent$ = -6192					; size = 1024
_found$ = -5160						; size = 1024
_base$ = -4128						; size = 1024
_defLoc$ = -3096					; size = 1024
_defVal$ = -2064					; size = 1024
_kwVal$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_result$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
_path$ = 16						; size = 4
_resName$ = 20						; size = 4
_keyword$ = 24						; size = 4
_locid$ = 28						; size = 4
_isAvailable$ = 32					; size = 4
_omitDefault$ = 36					; size = 1
_status$ = 40						; size = 4
_ures_getFunctionalEquivalent_56 PROC			; COMDAT
; Line 2414
	push	ebp
	mov	ebp, esp
	mov	eax, 7872				; 00001ec0H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-7872]
	mov	ecx, 1968				; 000007b0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2415
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _kwVal$[ebp], al
	push	1023					; 000003ffH
	push	0
	lea	eax, DWORD PTR _kwVal$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2416
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _defVal$[ebp], al
	push	1023					; 000003ffH
	push	0
	lea	eax, DWORD PTR _defVal$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2417
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _defLoc$[ebp], al
	push	1023					; 000003ffH
	push	0
	lea	eax, DWORD PTR _defLoc$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2418
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _base$[ebp], al
	push	1023					; 000003ffH
	push	0
	lea	eax, DWORD PTR _base$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2421
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _full$[ebp], al
	push	1023					; 000003ffH
	push	0
	lea	eax, DWORD PTR _full$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2423
	mov	DWORD PTR _res$[ebp], 0
; Line 2424
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2425
	mov	DWORD PTR _length$[ebp], 0
; Line 2426
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN59@ures_getFu
	xor	eax, eax
	jmp	$LN60@ures_getFu
$LN59@ures_getFu:
; Line 2427
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	push	1023					; 000003ffH
	lea	ecx, DWORD PTR _kwVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyword$[ebp]
	push	edx
	mov	eax, DWORD PTR _locid$[ebp]
	push	eax
	call	_uloc_getKeywordValue_56
	add	esp, 20					; 00000014H
; Line 2428
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	lea	eax, DWORD PTR _kwVal$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN58@ures_getFu
; Line 2429
	mov	BYTE PTR _kwVal$[ebp], 0
$LN58@ures_getFu:
; Line 2431
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	push	1023					; 000003ffH
	lea	ecx, DWORD PTR _base$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locid$[ebp]
	push	edx
	call	_uloc_getBaseName_56
	add	esp, 16					; 00000010H
; Line 2436
	lea	eax, DWORD PTR _bund1$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2437
	lea	eax, DWORD PTR _bund2$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2440
	lea	eax, DWORD PTR _base$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2441
	lea	eax, DWORD PTR _base$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2443
	cmp	DWORD PTR _isAvailable$[ebp], 0
	je	SHORT $LN57@ures_getFu
; Line 2444
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	_ures_openAvailableLocales_56
	add	esp, 8
	mov	DWORD PTR _locEnum$72375[ebp], eax
; Line 2445
	mov	eax, DWORD PTR _isAvailable$[ebp]
	mov	BYTE PTR [eax], 1
; Line 2446
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN56@ures_getFu
; Line 2447
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locEnum$72375[ebp]
	push	edx
	call	?isLocaleInList@@YACPAUUEnumeration@@PBDPAW4UErrorCode@@@Z ; isLocaleInList
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _isAvailable$[ebp]
	mov	BYTE PTR [ecx], al
$LN56@ures_getFu:
; Line 2449
	mov	eax, DWORD PTR _locEnum$72375[ebp]
	push	eax
	call	_uenum_close_56
	add	esp, 4
$LN57@ures_getFu:
; Line 2452
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN54@ures_getFu
; Line 2453
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _subStatus$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 2454
	xor	eax, eax
	jmp	$LN60@ures_getFu
$LN54@ures_getFu:
; Line 2458
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2459
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _res$[ebp], eax
; Line 2461
	cmp	DWORD PTR _subStatus$[ebp], -128	; ffffff80H
	je	SHORT $LN50@ures_getFu
	cmp	DWORD PTR _subStatus$[ebp], -127	; ffffff81H
	jne	SHORT $LN51@ures_getFu
$LN50@ures_getFu:
	cmp	DWORD PTR _isAvailable$[ebp], 0
	je	SHORT $LN51@ures_getFu
; Line 2463
	mov	eax, DWORD PTR _isAvailable$[ebp]
	mov	BYTE PTR [eax], 0
$LN51@ures_getFu:
; Line 2465
	mov	DWORD PTR _isAvailable$[ebp], 0
; Line 2470
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN49@ures_getFu
; Line 2471
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _subStatus$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN48@ures_getFu
$LN49@ures_getFu:
; Line 2472
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN48@ures_getFu
; Line 2473
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bund1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resName$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2474
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN48@ures_getFu
; Line 2482
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defLen$72388[ebp]
	push	ecx
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	lea	edx, DWORD PTR _bund1$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _defUstr$72387[ebp], eax
; Line 2483
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN48@ures_getFu
	cmp	DWORD PTR _defLen$72388[ebp], 0
	je	SHORT $LN48@ures_getFu
; Line 2484
	mov	eax, DWORD PTR _defUstr$72387[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _defVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _defUstr$72387[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 2489
	lea	eax, DWORD PTR _parent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defLoc$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2490
	movsx	eax, BYTE PTR _kwVal$[ebp]
	test	eax, eax
	jne	SHORT $LN48@ures_getFu
; Line 2491
	lea	eax, DWORD PTR _defVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kwVal$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN48@ures_getFu:
; Line 2501
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2503
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN43@ures_getFu
; Line 2504
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	_ures_getLocaleByType_56
	add	esp, 12					; 0000000cH
	push	eax
	lea	edx, DWORD PTR _found$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN43@ures_getFu:
; Line 2507
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	lea	edx, DWORD PTR _found$[ebp]
	push	edx
	call	_uloc_getParent_56
	add	esp, 16					; 00000010H
; Line 2508
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2509
	movsx	eax, BYTE PTR _defVal$[ebp]
	test	eax, eax
	jne	SHORT $LN52@ures_getFu
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	SHORT $LN52@ures_getFu
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN52@ures_getFu
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	$LN54@ures_getFu
$LN52@ures_getFu:
; Line 2512
	lea	eax, DWORD PTR _base$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2513
	lea	eax, DWORD PTR _base$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN41@ures_getFu:
; Line 2516
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2517
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _res$[ebp], eax
; Line 2518
	cmp	DWORD PTR _subStatus$[ebp], -128	; ffffff80H
	jne	SHORT $LN38@ures_getFu
	cmp	DWORD PTR _isAvailable$[ebp], 0
	je	SHORT $LN38@ures_getFu
; Line 2519
	mov	eax, DWORD PTR _isAvailable$[ebp]
	mov	BYTE PTR [eax], 0
$LN38@ures_getFu:
; Line 2521
	mov	DWORD PTR _isAvailable$[ebp], 0
; Line 2527
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN37@ures_getFu
; Line 2528
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _subStatus$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN36@ures_getFu
$LN37@ures_getFu:
; Line 2529
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN36@ures_getFu
; Line 2530
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bund1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resName$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2534
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN36@ures_getFu
; Line 2535
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bund2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _kwVal$[ebp]
	push	edx
	lea	eax, DWORD PTR _bund1$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2539
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN36@ures_getFu
; Line 2544
	lea	eax, DWORD PTR _parent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _full$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2545
	movsx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	jne	SHORT $LN32@ures_getFu
; Line 2546
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	lea	eax, DWORD PTR _full$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN32@ures_getFu:
; Line 2549
	lea	eax, DWORD PTR _defLoc$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _full$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	esi, eax
	jbe	$LN36@ures_getFu
; Line 2557
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defLen$72405[ebp]
	push	ecx
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	lea	edx, DWORD PTR _bund1$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _defUstr$72404[ebp], eax
; Line 2558
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN36@ures_getFu
	cmp	DWORD PTR _defLen$72405[ebp], 0
	je	SHORT $LN36@ures_getFu
; Line 2559
	mov	eax, DWORD PTR _defUstr$72404[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _defVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _defUstr$72404[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 2564
	lea	eax, DWORD PTR _full$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defLoc$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN36@ures_getFu:
; Line 2581
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2583
	lea	eax, DWORD PTR _parent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2584
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	push	1023					; 000003ffH
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	lea	edx, DWORD PTR _found$[ebp]
	push	edx
	call	_uloc_getParent_56
	add	esp, 16					; 00000010H
; Line 2585
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2586
	movsx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	jne	SHORT $LN39@ures_getFu
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	SHORT $LN39@ures_getFu
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	$LN41@ures_getFu
$LN39@ures_getFu:
; Line 2588
	movsx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	jne	$LN27@ures_getFu
	lea	eax, DWORD PTR _defVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kwVal$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN27@ures_getFu
; Line 2592
	lea	eax, DWORD PTR _defVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kwVal$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2593
	lea	eax, DWORD PTR _base$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2594
	lea	eax, DWORD PTR _base$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN26@ures_getFu:
; Line 2597
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2598
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _res$[ebp], eax
; Line 2599
	cmp	DWORD PTR _subStatus$[ebp], -128	; ffffff80H
	jne	SHORT $LN23@ures_getFu
	cmp	DWORD PTR _isAvailable$[ebp], 0
	je	SHORT $LN23@ures_getFu
; Line 2600
	mov	eax, DWORD PTR _isAvailable$[ebp]
	mov	BYTE PTR [eax], 0
$LN23@ures_getFu:
; Line 2602
	mov	DWORD PTR _isAvailable$[ebp], 0
; Line 2608
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN22@ures_getFu
; Line 2609
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _subStatus$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN21@ures_getFu
$LN22@ures_getFu:
; Line 2610
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN21@ures_getFu
; Line 2611
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bund1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resName$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2612
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN21@ures_getFu
; Line 2613
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bund2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _kwVal$[ebp]
	push	edx
	lea	eax, DWORD PTR _bund1$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2614
	cmp	DWORD PTR _subStatus$[ebp], 0
	jne	$LN21@ures_getFu
; Line 2619
	lea	eax, DWORD PTR _parent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _full$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2620
	movsx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	jne	SHORT $LN17@ures_getFu
; Line 2621
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	lea	eax, DWORD PTR _full$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN17@ures_getFu:
; Line 2625
	lea	eax, DWORD PTR _defLoc$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _full$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	esi, eax
	jbe	$LN21@ures_getFu
; Line 2633
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defLen$72422[ebp]
	push	ecx
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	lea	edx, DWORD PTR _bund1$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _defUstr$72421[ebp], eax
; Line 2634
	mov	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN21@ures_getFu
	cmp	DWORD PTR _defLen$72422[ebp], 0
	je	SHORT $LN21@ures_getFu
; Line 2635
	mov	eax, DWORD PTR _defUstr$72421[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _defVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _defUstr$72421[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 2640
	lea	eax, DWORD PTR _full$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defLoc$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN21@ures_getFu:
; Line 2651
	mov	DWORD PTR _subStatus$[ebp], 0
; Line 2653
	lea	eax, DWORD PTR _parent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2654
	lea	eax, DWORD PTR _subStatus$[ebp]
	push	eax
	push	1023					; 000003ffH
	lea	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	lea	edx, DWORD PTR _found$[ebp]
	push	edx
	call	_uloc_getParent_56
	add	esp, 16					; 00000010H
; Line 2655
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2656
	movsx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	jne	SHORT $LN27@ures_getFu
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	SHORT $LN27@ures_getFu
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	$LN26@ures_getFu
$LN27@ures_getFu:
; Line 2659
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN13@ures_getFu
; Line 2660
	movsx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	jne	SHORT $LN12@ures_getFu
; Line 2664
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
	jmp	SHORT $LN11@ures_getFu
$LN12@ures_getFu:
; Line 2665
	movsx	eax, BYTE PTR _omitDefault$[ebp]
	test	eax, eax
	je	SHORT $LN11@ures_getFu
; Line 2669
	lea	eax, DWORD PTR _defLoc$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR _full$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	esi, eax
	ja	SHORT $LN11@ures_getFu
; Line 2671
	lea	eax, DWORD PTR _defVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kwVal$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@ures_getFu
; Line 2676
	mov	BYTE PTR _kwVal$[ebp], 0
$LN11@ures_getFu:
; Line 2680
	lea	eax, DWORD PTR _full$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2681
	movsx	eax, BYTE PTR _kwVal$[ebp]
	test	eax, eax
	je	SHORT $LN7@ures_getFu
; Line 2682
	push	OFFSET ??_C@_01EOFPKCAF@?$EA?$AA@
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2683
	mov	eax, DWORD PTR _keyword$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 2684
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2685
	lea	eax, DWORD PTR _kwVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN13@ures_getFu
$LN7@ures_getFu:
; Line 2686
	movsx	eax, BYTE PTR _omitDefault$[ebp]
	test	eax, eax
	jne	SHORT $LN13@ures_getFu
; Line 2687
	push	OFFSET ??_C@_01EOFPKCAF@?$EA?$AA@
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2688
	mov	eax, DWORD PTR _keyword$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 2689
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2690
	lea	eax, DWORD PTR _defVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _found$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN13@ures_getFu:
; Line 2695
	lea	eax, DWORD PTR _bund1$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2696
	lea	eax, DWORD PTR _bund2$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2698
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
; Line 2700
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ures_getFu
; Line 2701
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	call	_uprv_min_56
	add	esp, 8
	mov	DWORD PTR _copyLength$72438[ebp], eax
; Line 2702
	cmp	DWORD PTR _copyLength$72438[ebp], 0
	jle	SHORT $LN3@ures_getFu
; Line 2703
	push	1
	lea	eax, DWORD PTR _found$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _copyLength$72438[ebp]
	push	ecx
	lea	edx, DWORD PTR _found$[ebp]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ures_getFu:
; Line 2705
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN2@ures_getFu
; Line 2706
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN2@ures_getFu:
; Line 2708
	jmp	SHORT $LN1@ures_getFu
$LN4@ures_getFu:
; Line 2709
	mov	DWORD PTR _length$[ebp], 0
; Line 2710
	mov	eax, DWORD PTR _result$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@ures_getFu:
; Line 2712
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resultCapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
$LN60@ures_getFu:
; Line 2713
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN76@ures_getFu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 7872				; 00001ec0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN76@ures_getFu:
	DD	13					; 0000000dH
	DD	$LN75@ures_getFu
$LN75@ures_getFu:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN62@ures_getFu
	DD	-2064					; fffff7f0H
	DD	1024					; 00000400H
	DD	$LN63@ures_getFu
	DD	-3096					; fffff3e8H
	DD	1024					; 00000400H
	DD	$LN64@ures_getFu
	DD	-4128					; ffffefe0H
	DD	1024					; 00000400H
	DD	$LN65@ures_getFu
	DD	-5160					; ffffebd8H
	DD	1024					; 00000400H
	DD	$LN66@ures_getFu
	DD	-6192					; ffffe7d0H
	DD	1024					; 00000400H
	DD	$LN67@ures_getFu
	DD	-7224					; ffffe3c8H
	DD	1024					; 00000400H
	DD	$LN68@ures_getFu
	DD	-7384					; ffffe328H
	DD	152					; 00000098H
	DD	$LN69@ures_getFu
	DD	-7544					; ffffe288H
	DD	152					; 00000098H
	DD	$LN70@ures_getFu
	DD	-7568					; ffffe270H
	DD	4
	DD	$LN71@ures_getFu
	DD	-7616					; ffffe240H
	DD	4
	DD	$LN72@ures_getFu
	DD	-7640					; ffffe228H
	DD	4
	DD	$LN73@ures_getFu
	DD	-7664					; ffffe210H
	DD	4
	DD	$LN74@ures_getFu
$LN74@ures_getFu:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN73@ures_getFu:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN72@ures_getFu:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN71@ures_getFu:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN70@ures_getFu:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	50					; 00000032H
	DB	0
$LN69@ures_getFu:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	49					; 00000031H
	DB	0
$LN68@ures_getFu:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN67@ures_getFu:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN66@ures_getFu:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN65@ures_getFu:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	0
$LN64@ures_getFu:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN63@ures_getFu:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN62@ures_getFu:
	DB	107					; 0000006bH
	DB	119					; 00000077H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_ures_getFunctionalEquivalent_56 ENDP
_TEXT	ENDS
EXTRN	_uenum_next_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLocaleInList@@YACPAUUEnumeration@@PBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_loc$ = -8						; size = 4
_locEnum$ = 8						; size = 4
_locToSearch$ = 12					; size = 4
_status$ = 16						; size = 4
?isLocaleInList@@YACPAUUEnumeration@@PBDPAW4UErrorCode@@@Z PROC ; isLocaleInList, COMDAT
; Line 2400
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@isLocaleIn:
; Line 2402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _locEnum$[ebp]
	push	ecx
	call	_uenum_next_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _loc$[ebp], eax
	cmp	DWORD PTR _loc$[ebp], 0
	je	SHORT $LN2@isLocaleIn
; Line 2403
	mov	eax, DWORD PTR _locToSearch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@isLocaleIn
; Line 2404
	mov	al, 1
	jmp	SHORT $LN4@isLocaleIn
$LN1@isLocaleIn:
; Line 2406
	jmp	SHORT $LN3@isLocaleIn
$LN2@isLocaleIn:
; Line 2407
	xor	al, al
$LN4@isLocaleIn:
; Line 2408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLocaleInList@@YACPAUUEnumeration@@PBDPAW4UErrorCode@@@Z ENDP ; isLocaleInList
_TEXT	ENDS
PUBLIC	??_C@_08OKEMGDJB@private?9?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ures_getKeywordValues_56
EXTRN	_uloc_openKeywordList_56:PROC
;	COMDAT ??_C@_08OKEMGDJB@private?9?$AA@
CONST	SEGMENT
??_C@_08OKEMGDJB@private?9?$AA@ DB 'private-', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ures_getKeywordValues_56
_TEXT	SEGMENT
_kLen$72480 = -4564					; size = 4
_i$72471 = -4552					; size = 4
_k$72470 = -4540					; size = 4
_subStatus$72464 = -4528				; size = 4
_subPtr$72463 = -4516					; size = 4
_bund$72462 = -4504					; size = 4
_subItem$ = -4492					; size = 152
_item$ = -4332						; size = 152
_locs$ = -4172						; size = 4
_locLen$ = -4160					; size = 4
_locale$ = -4148					; size = 4
_valuesCount$ = -4136					; size = 4
_valuesList$ = -4124					; size = 2048
_valuesIndex$ = -2068					; size = 4
_valuesBuf$ = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
_keyword$ = 12						; size = 4
_status$ = 16						; size = 4
_ures_getKeywordValues_56 PROC				; COMDAT
; Line 2717
	push	ebp
	mov	ebp, esp
	mov	eax, 4760				; 00001298H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4760]
	mov	ecx, 1190				; 000004a6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2722
	mov	DWORD PTR _valuesIndex$[ebp], 0
; Line 2724
	mov	DWORD PTR _valuesCount$[ebp], 0
; Line 2729
	mov	DWORD PTR _locs$[ebp], 0
; Line 2734
	lea	eax, DWORD PTR _item$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2735
	lea	eax, DWORD PTR _subItem$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2736
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	_ures_openAvailableLocales_56
	add	esp, 8
	mov	DWORD PTR _locs$[ebp], eax
; Line 2738
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@ures_getKe@2
; Line 2739
	lea	eax, DWORD PTR _item$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2740
	lea	eax, DWORD PTR _subItem$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2741
	xor	eax, eax
	jmp	$LN18@ures_getKe@2
$LN17@ures_getKe@2:
; Line 2744
	mov	BYTE PTR _valuesBuf$[ebp], 0
; Line 2745
	mov	BYTE PTR _valuesBuf$[ebp+1], 0
$LN16@ures_getKe@2:
; Line 2747
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _locLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locs$[ebp]
	push	edx
	call	_uenum_next_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _locale$[ebp], eax
	cmp	DWORD PTR _locale$[ebp], 0
	je	$LN15@ures_getKe@2
; Line 2748
	mov	DWORD PTR _bund$72462[ebp], 0
; Line 2749
	mov	DWORD PTR _subPtr$72463[ebp], 0
; Line 2750
	mov	DWORD PTR _subStatus$72464[ebp], 0
; Line 2751
	lea	eax, DWORD PTR _subStatus$72464[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bund$72462[ebp], eax
; Line 2760
	lea	eax, DWORD PTR _subStatus$72464[ebp]
	push	eax
	lea	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyword$[ebp]
	push	edx
	mov	eax, DWORD PTR _bund$72462[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2762
	cmp	DWORD PTR _bund$72462[ebp], 0
	je	SHORT $LN13@ures_getKe@2
	mov	eax, DWORD PTR _subStatus$72464[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@ures_getKe@2
$LN13@ures_getKe@2:
; Line 2767
	mov	eax, DWORD PTR _bund$72462[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2768
	mov	DWORD PTR _bund$72462[ebp], 0
; Line 2769
	jmp	$LN16@ures_getKe@2
$LN12@ures_getKe@2:
; Line 2773
	lea	eax, DWORD PTR _subStatus$72464[ebp]
	push	eax
	lea	ecx, DWORD PTR _subItem$[ebp]
	push	ecx
	lea	edx, DWORD PTR _item$[ebp]
	push	edx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _subPtr$72463[ebp], eax
	cmp	DWORD PTR _subPtr$72463[ebp], 0
	je	$LN11@ures_getKe@2
	mov	eax, DWORD PTR _subStatus$72464[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN11@ures_getKe@2
; Line 2776
	mov	eax, DWORD PTR _subPtr$72463[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _k$72470[ebp], eax
; Line 2782
	cmp	DWORD PTR _k$72470[ebp], 0
	je	SHORT $LN9@ures_getKe@2
	mov	eax, DWORD PTR _k$72470[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN9@ures_getKe@2
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	eax, DWORD PTR _k$72470[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@ures_getKe@2
	push	1
	mov	eax, DWORD PTR _k$72470[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_08OKEMGDJB@private?9?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	8
	push	OFFSET ??_C@_08OKEMGDJB@private?9?$AA@
	mov	ecx, DWORD PTR _k$72470[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN10@ures_getKe@2
$LN9@ures_getKe@2:
; Line 2784
	jmp	$LN12@ures_getKe@2
$LN10@ures_getKe@2:
; Line 2786
	mov	DWORD PTR _i$72471[ebp], 0
	jmp	SHORT $LN8@ures_getKe@2
$LN7@ures_getKe@2:
	mov	eax, DWORD PTR _i$72471[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72471[ebp], eax
$LN8@ures_getKe@2:
	mov	eax, DWORD PTR _i$72471[ebp]
	cmp	eax, DWORD PTR _valuesCount$[ebp]
	jge	SHORT $LN6@ures_getKe@2
; Line 2787
	mov	eax, DWORD PTR _k$72470[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$72471[ebp]
	mov	edx, DWORD PTR _valuesList$[ebp+ecx*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@ures_getKe@2
; Line 2788
	mov	DWORD PTR _k$72470[ebp], 0
; Line 2789
	jmp	SHORT $LN6@ures_getKe@2
$LN5@ures_getKe@2:
; Line 2791
	jmp	SHORT $LN7@ures_getKe@2
$LN6@ures_getKe@2:
; Line 2792
	cmp	DWORD PTR _k$72470[ebp], 0
	je	$LN4@ures_getKe@2
; Line 2793
	mov	eax, DWORD PTR _k$72470[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _kLen$72480[ebp], eax
; Line 2795
	cmp	DWORD PTR _valuesCount$[ebp], 511	; 000001ffH
	jge	SHORT $LN2@ures_getKe@2
	mov	eax, DWORD PTR _kLen$72480[ebp]
	mov	ecx, DWORD PTR _valuesIndex$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	cmp	edx, 2048				; 00000800H
	jl	SHORT $LN3@ures_getKe@2
$LN2@ures_getKe@2:
; Line 2796
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2797
	jmp	SHORT $LN4@ures_getKe@2
$LN3@ures_getKe@2:
; Line 2798
	mov	eax, DWORD PTR _k$72470[ebp]
	push	eax
	mov	ecx, DWORD PTR _valuesIndex$[ebp]
	lea	edx, DWORD PTR _valuesBuf$[ebp+ecx]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 2799
	mov	eax, DWORD PTR _valuesIndex$[ebp]
	lea	ecx, DWORD PTR _valuesBuf$[ebp+eax]
	mov	edx, DWORD PTR _valuesCount$[ebp]
	mov	DWORD PTR _valuesList$[ebp+edx*4], ecx
	mov	eax, DWORD PTR _valuesCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _valuesCount$[ebp], eax
; Line 2800
	mov	eax, DWORD PTR _valuesIndex$[ebp]
	add	eax, DWORD PTR _kLen$72480[ebp]
	mov	DWORD PTR _valuesIndex$[ebp], eax
; Line 2805
	mov	eax, DWORD PTR _valuesIndex$[ebp]
	mov	BYTE PTR _valuesBuf$[ebp+eax], 0
	mov	ecx, DWORD PTR _valuesIndex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _valuesIndex$[ebp], ecx
$LN4@ures_getKe@2:
; Line 2808
	jmp	$LN12@ures_getKe@2
$LN11@ures_getKe@2:
; Line 2809
	mov	eax, DWORD PTR _bund$72462[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2810
	jmp	$LN16@ures_getKe@2
$LN15@ures_getKe@2:
; Line 2811
	mov	eax, DWORD PTR _valuesIndex$[ebp]
	mov	BYTE PTR _valuesBuf$[ebp+eax], 0
	mov	ecx, DWORD PTR _valuesIndex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _valuesIndex$[ebp], ecx
; Line 2813
	lea	eax, DWORD PTR _item$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2814
	lea	eax, DWORD PTR _subItem$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2815
	mov	eax, DWORD PTR _locs$[ebp]
	push	eax
	call	_uenum_close_56
	add	esp, 4
; Line 2820
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _valuesIndex$[ebp]
	push	ecx
	lea	edx, DWORD PTR _valuesBuf$[ebp]
	push	edx
	call	_uloc_openKeywordList_56
	add	esp, 12					; 0000000cH
$LN18@ures_getKe@2:
; Line 2821
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@ures_getKe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4760				; 00001298H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN29@ures_getKe@2:
	DD	6
	DD	$LN28@ures_getKe@2
$LN28@ures_getKe@2:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN22@ures_getKe@2
	DD	-4124					; ffffefe4H
	DD	2048					; 00000800H
	DD	$LN23@ures_getKe@2
	DD	-4160					; ffffefc0H
	DD	4
	DD	$LN24@ures_getKe@2
	DD	-4332					; ffffef14H
	DD	152					; 00000098H
	DD	$LN25@ures_getKe@2
	DD	-4492					; ffffee74H
	DD	152					; 00000098H
	DD	$LN26@ures_getKe@2
	DD	-4528					; ffffee50H
	DD	4
	DD	$LN27@ures_getKe@2
$LN27@ures_getKe@2:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN26@ures_getKe@2:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN25@ures_getKe@2:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN24@ures_getKe@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN23@ures_getKe@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN22@ures_getKe@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_ures_getKeywordValues_56 ENDP
_TEXT	ENDS
PUBLIC	_ures_getVersionByKey_56
EXTRN	_u_versionFromUString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ures_getVersionByKey_56
_TEXT	SEGMENT
_len$ = -20						; size = 4
_str$ = -8						; size = 4
_res$ = 8						; size = 4
_key$ = 12						; size = 4
_ver$ = 16						; size = 4
_status$ = 20						; size = 4
_ures_getVersionByKey_56 PROC				; COMDAT
; Line 2886
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2889
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _str$[ebp], eax
; Line 2890
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ures_getVe@3
; Line 2891
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ver$[ebp]
	push	ecx
	call	_u_versionFromUString_56
	add	esp, 8
$LN2@ures_getVe@3:
; Line 2893
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ures_getVe@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@ures_getVe@3:
	DD	1
	DD	$LN5@ures_getVe@3
$LN5@ures_getVe@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@ures_getVe@3
$LN4@ures_getVe@3:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_ures_getVersionByKey_56 ENDP
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,40>::~MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackArray<char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackArray<char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,40>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z PROC	; icu_56::MaybeStackArray<char,40>::operator[], COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z PROC	; icu_56::MaybeStackArray<char,40>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z ; icu_56::MaybeStackArray<char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherArray$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z PROC ; icu_56::MaybeStackArray<char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 353
	cmp	DWORD PTR _otherArray$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 354
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherArray$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 357
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z ENDP ; icu_56::MaybeStackArray<char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<char,40>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<char,40>::releaseArray
_TEXT	ENDS
PUBLIC	??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator==, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>, COMDAT
; _this$ = ecx
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::MaybeStackArray<char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackArray<char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z PROC	; icu_56::MaybeStackArray<char,40>::operator=, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z ENDP	; icu_56::MaybeStackArray<char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z ; icu_56::MaybeStackArray<char,40>::resize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z
_TEXT	SEGMENT
_p$76620 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z PROC ; icu_56::MaybeStackArray<char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$76620[ebp], eax
; Line 421
	cmp	DWORD PTR _p$76620[ebp], 0
	je	SHORT $LN5@resize
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$76620[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,40>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$76620[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize:
; Line 436
	mov	eax, DWORD PTR _p$76620[ebp]
	jmp	SHORT $LN7@resize
; Line 437
	jmp	SHORT $LN7@resize
$LN6@resize:
; Line 438
	xor	eax, eax
$LN7@resize:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z ENDP ; icu_56::MaybeStackArray<char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z ; icu_56::MaybeStackArray<char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z PROC ; icu_56::MaybeStackArray<char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 447
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN4@orphanOrCl
; Line 448
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
; Line 449
	jmp	SHORT $LN5@orphanOrCl
$LN4@orphanOrCl:
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN2@orphanOrCl
; Line 451
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN2@orphanOrCl:
; Line 453
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 457
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 458
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 460
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 462
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 464
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 466
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 467
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z ENDP ; icu_56::MaybeStackArray<char,40>::orphanOrClone
_TEXT	ENDS
END

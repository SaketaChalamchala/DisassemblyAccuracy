; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\common\rbbi.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
_fTrace	DB	01H DUP (?)
	ALIGN	4

?classID@?1??getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::RuleBasedBreakIterator::getStaticClassID'::`2'::classID
	ALIGN	4

?debugInitDone@?1??init@RuleBasedBreakIterator@icu_56@@IAEXXZ@4CA DB 01H DUP (?) ; `icu_56::RuleBasedBreakIterator::init'::`2'::debugInitDone
	ALIGN	4

_gLanguageBreakFactories DD 01H DUP (?)
_gLanguageBreakFactoriesInitOnce DQ 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?c@?7??setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z@4_WB DW 00H ; `icu_56::RuleBasedBreakIterator::setText'::`8'::c
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2UMemory@icu_56@@SAPAXIPAX@Z			; icu_56::UMemory::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2UMemory@icu_56@@SAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_ptr$ = 12						; size = 4
??2UMemory@icu_56@@SAPAXIPAX@Z PROC			; icu_56::UMemory::operator new, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\uobject.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ptr$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2UMemory@icu_56@@SAPAXIPAX@Z ENDP			; icu_56::UMemory::operator new
_TEXT	ENDS
PUBLIC	??3UMemory@icu_56@@SAXPAX0@Z			; icu_56::UMemory::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3UMemory@icu_56@@SAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3UMemory@icu_56@@SAXPAX0@Z PROC			; icu_56::UMemory::operator delete, COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3UMemory@icu_56@@SAXPAX0@Z ENDP			; icu_56::UMemory::operator delete
_TEXT	ENDS
PUBLIC	??4UMemory@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UMemory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UMemory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UMemory::operator=
_TEXT	ENDS
PUBLIC	??_7UObject@icu_56@@6B@				; icu_56::UObject::`vftable'
PUBLIC	??0UObject@icu_56@@QAE@XZ			; icu_56::UObject::UObject
PUBLIC	??_R4UObject@icu_56@@6B@			; icu_56::UObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UObject@icu_56@@6B@
rdata$r	SEGMENT
??_R4UObject@icu_56@@6B@ DD 00H				; icu_56::UObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUObject@icu_56@@@8
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UObject@icu_56@@6B@
CONST	SEGMENT
??_7UObject@icu_56@@6B@ DD FLAT:??_R4UObject@icu_56@@6B@ ; icu_56::UObject::`vftable'
	DD	FLAT:??_EUObject@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UObject@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UObject@icu_56@@QAE@XZ PROC				; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UObject@icu_56@@QAE@XZ ENDP				; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??0UObject@icu_56@@QAE@ABV01@@Z			; icu_56::UObject::UObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UObject@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UObject@icu_56@@QAE@ABV01@@Z PROC			; icu_56::UObject::UObject, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UObject
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@UObject
$LN3@UObject:
	mov	DWORD PTR tv68[ebp], 0
$LN4@UObject:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UObject@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UObject@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::UObject::UObject
_TEXT	ENDS
PUBLIC	??4UObject@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::UObject::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UObject::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UObject::operator=
_TEXT	ENDS
PUBLIC	??_GUObject@icu_56@@UAEPAXI@Z			; icu_56::UObject::`scalar deleting destructor'
EXTRN	??3UMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete
EXTRN	??1UObject@icu_56@@UAE@XZ:PROC			; icu_56::UObject::~UObject
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_VUMemory@icu_56@@SAXPAX@Z:PROC		; icu_56::UMemory::operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUObject@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUObject@icu_56@@UAEPAXI@Z PROC			; icu_56::UObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UObject@icu_56@@UAE@XZ	; icu_56::UObject::~UObject
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUObject@icu_56@@UAEPAXI@Z ENDP			; icu_56::UObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Replaceable@icu_56@@6B@			; icu_56::Replaceable::`vftable'
PUBLIC	??0Replaceable@icu_56@@QAE@ABV01@@Z		; icu_56::Replaceable::Replaceable
PUBLIC	??_R4Replaceable@icu_56@@6B@			; icu_56::Replaceable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`vector deleting destructor'
EXTRN	__purecall:PROC
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Replaceable@icu_56@@6B@
rdata$r	SEGMENT
??_R4Replaceable@icu_56@@6B@ DD 00H			; icu_56::Replaceable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceable@icu_56@@@8
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Replaceable@icu_56@@6B@
CONST	SEGMENT
??_7Replaceable@icu_56@@6B@ DD FLAT:??_R4Replaceable@icu_56@@6B@ ; icu_56::Replaceable::`vftable'
	DD	FLAT:??_EReplaceable@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Replaceable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Replaceable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Replaceable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::Replaceable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Replaceable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Replaceable::operator=
_TEXT	ENDS
PUBLIC	??_GReplaceable@icu_56@@UAEPAXI@Z		; icu_56::Replaceable::`scalar deleting destructor'
EXTRN	??1Replaceable@icu_56@@UAE@XZ:PROC		; icu_56::Replaceable::~Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EReplaceable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EReplaceable@icu_56@@UAEPAXI@Z PROC			; icu_56::Replaceable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Replaceable@icu_56@@UAE@XZ	; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Replaceable@icu_56@@UAE@XZ		; icu_56::Replaceable::~Replaceable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReplaceable@icu_56@@UAEPAXI@Z ENDP			; icu_56::Replaceable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0Replaceable@icu_56@@IAE@XZ			; icu_56::Replaceable::Replaceable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Replaceable@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Replaceable@icu_56@@IAE@XZ PROC			; icu_56::Replaceable::Replaceable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rep.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Replaceable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Replaceable@icu_56@@IAE@XZ ENDP			; icu_56::Replaceable::Replaceable
_TEXT	ENDS
PUBLIC	?length@Replaceable@icu_56@@QBEHXZ		; icu_56::Replaceable::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@Replaceable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@Replaceable@icu_56@@QBEHXZ PROC			; icu_56::Replaceable::length, COMDAT
; _this$ = ecx
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Replaceable@icu_56@@QBEHXZ ENDP			; icu_56::Replaceable::length
_TEXT	ENDS
PUBLIC	?charAt@Replaceable@icu_56@@QBE_WH@Z		; icu_56::Replaceable::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@Replaceable@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@Replaceable@icu_56@@QBE_WH@Z PROC		; icu_56::Replaceable::charAt, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@Replaceable@icu_56@@QBE_WH@Z ENDP		; icu_56::Replaceable::charAt
_TEXT	ENDS
PUBLIC	?char32At@Replaceable@icu_56@@QBEHH@Z		; icu_56::Replaceable::char32At
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?char32At@Replaceable@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?char32At@Replaceable@icu_56@@QBEHH@Z PROC		; icu_56::Replaceable::char32At, COMDAT
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?char32At@Replaceable@icu_56@@QBEHH@Z ENDP		; icu_56::Replaceable::char32At
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@XZ			; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StringPiece@icu_56@@QAE@XZ PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\stringpiece.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0StringPiece@icu_56@@QAE@XZ ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	??0StringPiece@icu_56@@QAE@PBDH@Z		; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringPiece@icu_56@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
_len$ = 12						; size = 4
??0StringPiece@icu_56@@QAE@PBDH@Z PROC			; icu_56::StringPiece::StringPiece, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringPiece@icu_56@@QAE@PBDH@Z ENDP			; icu_56::StringPiece::StringPiece
_TEXT	ENDS
PUBLIC	?data@StringPiece@icu_56@@QBEPBDXZ		; icu_56::StringPiece::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@StringPiece@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@StringPiece@icu_56@@QBEPBDXZ PROC			; icu_56::StringPiece::data, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@StringPiece@icu_56@@QBEPBDXZ ENDP			; icu_56::StringPiece::data
_TEXT	ENDS
PUBLIC	?size@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::size, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::size
_TEXT	ENDS
PUBLIC	?length@StringPiece@icu_56@@QBEHXZ		; icu_56::StringPiece::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringPiece@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringPiece@icu_56@@QBEHXZ PROC			; icu_56::StringPiece::length, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringPiece@icu_56@@QBEHXZ ENDP			; icu_56::StringPiece::length
_TEXT	ENDS
PUBLIC	?empty@StringPiece@icu_56@@QBECXZ		; icu_56::StringPiece::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@StringPiece@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@StringPiece@icu_56@@QBECXZ PROC			; icu_56::StringPiece::empty, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@StringPiece@icu_56@@QBECXZ ENDP			; icu_56::StringPiece::empty
_TEXT	ENDS
PUBLIC	?clear@StringPiece@icu_56@@QAEXXZ		; icu_56::StringPiece::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@StringPiece@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@StringPiece@icu_56@@QAEXXZ PROC			; icu_56::StringPiece::clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@StringPiece@icu_56@@QAEXXZ ENDP			; icu_56::StringPiece::clear
_TEXT	ENDS
PUBLIC	?set@StringPiece@icu_56@@QAEXPBDH@Z		; icu_56::StringPiece::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@StringPiece@icu_56@@QAEXPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_xdata$ = 8						; size = 4
_len$ = 12						; size = 4
?set@StringPiece@icu_56@@QAEXPBDH@Z PROC		; icu_56::StringPiece::set, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xdata$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?set@StringPiece@icu_56@@QAEXPBDH@Z ENDP		; icu_56::StringPiece::set
_TEXT	ENDS
PUBLIC	?remove_prefix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_prefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_prefix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_prefix, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@remove_pre
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@remove_pre
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _n$[ebp], ecx
$LN1@remove_pre:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN3@remove_pre:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_prefix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_prefix
_TEXT	ENDS
PUBLIC	?remove_suffix@StringPiece@icu_56@@QAEXH@Z	; icu_56::StringPiece::remove_suffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove_suffix@StringPiece@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z PROC		; icu_56::StringPiece::remove_suffix, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN4@remove_suf
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN2@remove_suf
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 176
	jmp	SHORT $LN4@remove_suf
$LN2@remove_suf:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@remove_suf:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?remove_suffix@StringPiece@icu_56@@QAEXH@Z ENDP		; icu_56::StringPiece::remove_suffix
_TEXT	ENDS
PUBLIC	?substr@StringPiece@icu_56@@QBE?AV12@HH@Z	; icu_56::StringPiece::substr
EXTRN	??0StringPiece@icu_56@@QAE@ABV01@HH@Z:PROC	; icu_56::StringPiece::StringPiece
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@StringPiece@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
_len$ = 16						; size = 4
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z PROC		; icu_56::StringPiece::substr, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0StringPiece@icu_56@@QAE@ABV01@HH@Z	; icu_56::StringPiece::StringPiece
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z ENDP		; icu_56::StringPiece::substr
_TEXT	ENDS
PUBLIC	??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringPiece::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::StringPiece::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::StringPiece::operator=
_TEXT	ENDS
PUBLIC	??_7ByteSink@icu_56@@6B@			; icu_56::ByteSink::`vftable'
PUBLIC	??0ByteSink@icu_56@@QAE@XZ			; icu_56::ByteSink::ByteSink
PUBLIC	??_R4ByteSink@icu_56@@6B@			; icu_56::ByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`vector deleting destructor'
EXTRN	?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:PROC ; icu_56::ByteSink::GetAppendBuffer
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\common\unicode\bytestream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4ByteSink@icu_56@@6B@ DD 00H			; icu_56::ByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVByteSink@icu_56@@@8
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ByteSink@icu_56@@6B@
CONST	SEGMENT
??_7ByteSink@icu_56@@6B@ DD FLAT:??_R4ByteSink@icu_56@@6B@ ; icu_56::ByteSink::`vftable'
	DD	FLAT:??_EByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ByteSink@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ByteSink@icu_56@@QAE@XZ PROC				; icu_56::ByteSink::ByteSink, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ByteSink@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ByteSink@icu_56@@QAE@XZ ENDP				; icu_56::ByteSink::ByteSink
_TEXT	ENDS
PUBLIC	??_GByteSink@icu_56@@UAEPAXI@Z			; icu_56::ByteSink::`scalar deleting destructor'
EXTRN	??1ByteSink@icu_56@@UAE@XZ:PROC			; icu_56::ByteSink::~ByteSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EByteSink@icu_56@@UAEPAXI@Z PROC			; icu_56::ByteSink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1ByteSink@icu_56@@UAE@XZ	; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ByteSink@icu_56@@UAE@XZ		; icu_56::ByteSink::~ByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EByteSink@icu_56@@UAEPAXI@Z ENDP			; icu_56::ByteSink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesWritten
_TEXT	ENDS
PUBLIC	?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	; icu_56::CheckedArrayByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ PROC	; icu_56::CheckedArrayByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ ENDP	; icu_56::CheckedArrayByteSink::Overflowed
_TEXT	ENDS
PUBLIC	?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ PROC ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ ENDP ; icu_56::CheckedArrayByteSink::NumberOfBytesAppended
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=
EXTRN	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:PROC ; icu_56::UnicodeString::moveFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z PROC	; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\unistr.h
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1916
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z ; icu_56::UnicodeString::moveFrom
; Line 1917
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z ENDP	; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?swap@icu_56@@YAXAAVUnicodeString@1@0@Z		; icu_56::swap
EXTRN	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:PROC	; icu_56::UnicodeString::swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@icu_56@@YAXAAVUnicodeString@1@0@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z PROC		; icu_56::swap, COMDAT
; Line 1945
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1946
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?swap@UnicodeString@icu_56@@QAEXAAV12@@Z ; icu_56::UnicodeString::swap
; Line 1947
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z ENDP		; icu_56::swap
_TEXT	ENDS
PUBLIC	??_GUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`scalar deleting destructor'
EXTRN	??1UnicodeString@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeString::~UnicodeString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeString@icu_56@@UAE@XZ		; icu_56::UnicodeString::~UnicodeString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?length@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::length
PUBLIC	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z	; icu_56::UnicodeString::pinIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z PROC		; icu_56::UnicodeString::pinIndex, COMDAT
; _this$ = ecx
; Line 3730
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3732
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndex
; Line 3733
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@pinIndex
$LN3@pinIndex:
; Line 3734
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [ecx], eax
	jle	SHORT $LN4@pinIndex
; Line 3735
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@pinIndex:
; Line 3737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ENDP		; icu_56::UnicodeString::pinIndex
_TEXT	ENDS
PUBLIC	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z	; icu_56::UnicodeString::pinIndices
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z PROC	; icu_56::UnicodeString::pinIndices, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$[ebp], eax
; Line 3745
	mov	eax, DWORD PTR _start$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN6@pinIndices
; Line 3746
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN5@pinIndices
$LN6@pinIndices:
; Line 3747
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jle	SHORT $LN5@pinIndices
; Line 3748
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@pinIndices:
; Line 3750
	mov	eax, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@pinIndices
; Line 3751
	mov	eax, DWORD PTR __length$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN7@pinIndices
$LN3@pinIndices:
; Line 3752
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	cmp	DWORD PTR [edx], ecx
	jle	SHORT $LN7@pinIndices
; Line 3753
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __length$[ebp]
	mov	DWORD PTR [edx], ecx
$LN7@pinIndices:
; Line 3755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ENDP	; icu_56::UnicodeString::pinIndices
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3758
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3760
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt
$LN3@getArraySt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ	; icu_56::UnicodeString::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ PROC	; icu_56::UnicodeString::getArrayStart, COMDAT
; _this$ = ecx
; Line 3764
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3766
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getArraySt@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@getArraySt@2
$LN3@getArraySt@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv76[ebp], ecx
$LN4@getArraySt@2:
	mov	eax, DWORD PTR tv76[ebp]
; Line 3767
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ENDP	; icu_56::UnicodeString::getArrayStart
_TEXT	ENDS
PUBLIC	??_7UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`vftable'
PUBLIC	??0UnicodeString@icu_56@@QAE@XZ			; icu_56::UnicodeString::UnicodeString
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeString@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeString@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeString@icu_56@@QAE@XZ PROC			; icu_56::UnicodeString::UnicodeString, COMDAT
; _this$ = ecx
; Line 3774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Replaceable@icu_56@@IAE@XZ		; icu_56::Replaceable::Replaceable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeString@icu_56@@6B@
; Line 3775
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 3776
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeString@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeString::UnicodeString
_TEXT	ENDS
PUBLIC	?hasShortLength@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::hasShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasShortLength@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasShortLength@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::hasShortLength, COMDAT
; _this$ = ecx
; Line 3782
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3783
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	setge	al
; Line 3784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasShortLength@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::hasShortLength
_TEXT	ENDS
PUBLIC	?getShortLength@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getShortLength@UnicodeString@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getShortLength@UnicodeString@icu_56@@ABEHXZ PROC	; icu_56::UnicodeString::getShortLength, COMDAT
; _this$ = ecx
; Line 3787
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3790
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	sar	eax, 5
; Line 3791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getShortLength@UnicodeString@icu_56@@ABEHXZ ENDP	; icu_56::UnicodeString::getShortLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?length@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::length, COMDAT
; _this$ = ecx
; Line 3794
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3795
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasShortLength@UnicodeString@icu_56@@ABECXZ ; icu_56::UnicodeString::hasShortLength
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@length
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getShortLength@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::getShortLength
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@length
$LN3@length:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv73[ebp], edx
$LN4@length:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::length
_TEXT	ENDS
PUBLIC	?getCapacity@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?getCapacity@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::getCapacity, COMDAT
; _this$ = ecx
; Line 3799
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN3@getCapacit
	mov	DWORD PTR tv73[ebp], 29			; 0000001dH
	jmp	SHORT $LN4@getCapacit
$LN3@getCapacit:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv73[ebp], eax
$LN4@getCapacit:
	mov	eax, DWORD PTR tv73[ebp]
; Line 3802
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::getCapacity
_TEXT	ENDS
PUBLIC	?hashCode@UnicodeString@icu_56@@QBEHXZ		; icu_56::UnicodeString::hashCode
EXTRN	?doHashCode@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::doHashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@UnicodeString@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@UnicodeString@icu_56@@QBEHXZ PROC		; icu_56::UnicodeString::hashCode, COMDAT
; _this$ = ecx
; Line 3806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doHashCode@UnicodeString@icu_56@@ABEHXZ ; icu_56::UnicodeString::doHashCode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@UnicodeString@icu_56@@QBEHXZ ENDP		; icu_56::UnicodeString::hashCode
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isBogus, COMDAT
; _this$ = ecx
; Line 3810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+4]
	and	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isBogus
_TEXT	ENDS
PUBLIC	?isWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isWritable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isWritable@UnicodeString@icu_56@@ABECXZ PROC		; icu_56::UnicodeString::isWritable, COMDAT
; _this$ = ecx
; Line 3814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isWritable@UnicodeString@icu_56@@ABECXZ ENDP		; icu_56::UnicodeString::isWritable
_TEXT	ENDS
PUBLIC	?isBufferWritable@UnicodeString@icu_56@@ABECXZ	; icu_56::UnicodeString::isBufferWritable
EXTRN	?refCount@UnicodeString@icu_56@@ABEHXZ:PROC	; icu_56::UnicodeString::refCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferWritable@UnicodeString@icu_56@@ABECXZ
_TEXT	SEGMENT
tv79 = -205						; size = 1
_this$ = -8						; size = 4
?isBufferWritable@UnicodeString@icu_56@@ABECXZ PROC	; icu_56::UnicodeString::isBufferWritable, COMDAT
; _this$ = ecx
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3821
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 25					; 00000019H
	jne	SHORT $LN4@isBufferWr
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+4]
	and	eax, 4
	je	SHORT $LN3@isBufferWr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?refCount@UnicodeString@icu_56@@ABEHXZ	; icu_56::UnicodeString::refCount
	cmp	eax, 1
	jne	SHORT $LN4@isBufferWr
$LN3@isBufferWr:
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@isBufferWr
$LN4@isBufferWr:
	mov	BYTE PTR tv79[ebp], 0
$LN5@isBufferWr:
	mov	al, BYTE PTR tv79[ebp]
; Line 3822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferWritable@UnicodeString@icu_56@@ABECXZ ENDP	; icu_56::UnicodeString::isBufferWritable
_TEXT	ENDS
PUBLIC	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ	; icu_56::UnicodeString::getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ PROC		; icu_56::UnicodeString::getBuffer, COMDAT
; _this$ = ecx
; Line 3825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3826
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 17					; 00000011H
	je	SHORT $LN4@getBuffer
; Line 3827
	xor	eax, eax
	jmp	SHORT $LN5@getBuffer
	jmp	SHORT $LN5@getBuffer
$LN4@getBuffer:
; Line 3828
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 2
	je	SHORT $LN2@getBuffer
; Line 3829
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6
	jmp	SHORT $LN5@getBuffer
; Line 3830
	jmp	SHORT $LN5@getBuffer
$LN2@getBuffer:
; Line 3831
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN5@getBuffer:
; Line 3833
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ENDP		; icu_56::UnicodeString::getBuffer
_TEXT	ENDS
PUBLIC	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
EXTRN	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC	; icu_56::UnicodeString::doCompare, COMDAT
; _this$ = ecx
; Line 3844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3845
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompare
; Line 3846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompare
; Line 3847
	jmp	SHORT $LN3@doCompare
$LN2@doCompare:
; Line 3848
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3849
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
$LN3@doCompare:
; Line 3851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::doCompare
_TEXT	ENDS
PUBLIC	??8UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator==
EXTRN	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:PROC ; icu_56::UnicodeString::doEquals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv85 = -229						; size = 1
_textLength$33251 = -32					; size = 4
_len$33250 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??8UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator==, COMDAT
; _this$ = ecx
; Line 3855
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3856
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
; Line 3857
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	jmp	SHORT $LN3@operator
; Line 3858
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 3859
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _len$33250[ebp], eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _textLength$33251[ebp], eax
; Line 3860
	mov	ecx, DWORD PTR _text$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	ecx, DWORD PTR _len$33250[ebp]
	cmp	ecx, DWORD PTR _textLength$33251[ebp]
	jne	SHORT $LN5@operator
	mov	edx, DWORD PTR _len$33250[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z ; icu_56::UnicodeString::doEquals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv85[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv85[ebp]
$LN3@operator:
; Line 3862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator==
_TEXT	ENDS
PUBLIC	??9UnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??9UnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator!=, COMDAT
; _this$ = ecx
; Line 3866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UnicodeString@icu_56@@QBECABV01@@Z	; icu_56::UnicodeString::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator!=
_TEXT	ENDS
PUBLIC	??OUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??OUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??OUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>, COMDAT
; _this$ = ecx
; Line 3870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>
_TEXT	ENDS
PUBLIC	??MUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??MUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??MUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<, COMDAT
; _this$ = ecx
; Line 3874
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<
_TEXT	ENDS
PUBLIC	??PUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator>=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??PUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??PUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator>=, COMDAT
; _this$ = ecx
; Line 3878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, -1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??PUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator>=
_TEXT	ENDS
PUBLIC	??NUnicodeString@icu_56@@QBECABV01@@Z		; icu_56::UnicodeString::operator<=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??NUnicodeString@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
??NUnicodeString@icu_56@@QBECABV01@@Z PROC		; icu_56::UnicodeString::operator<=, COMDAT
; _this$ = ecx
; Line 3882
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	cmp	ecx, 1
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??NUnicodeString@icu_56@@QBECABV01@@Z ENDP		; icu_56::UnicodeString::operator<=
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compare@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compare@UnicodeString@icu_56@@QBECPB_WH@Z PROC		; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3897
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compare@UnicodeString@icu_56@@QBECPB_WH@Z ENDP		; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_W@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z	; icu_56::UnicodeString::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC	; icu_56::UnicodeString::compare, COMDAT
; _this$ = ecx
; Line 3919
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP	; icu_56::UnicodeString::compare
_TEXT	ENDS
PUBLIC	?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareBetween, COMDAT
; _this$ = ecx
; Line 3927
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3928
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareBetween
_TEXT	ENDS
PUBLIC	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
EXTRN	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:PROC ; icu_56::UnicodeString::doCompareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z PROC ; icu_56::UnicodeString::doCompareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3936
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3937
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCompareC
; Line 3938
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCompareC
; Line 3939
	jmp	SHORT $LN3@doCompareC
$LN2@doCompareC:
; Line 3940
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 3941
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	edx, DWORD PTR _thisLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
$LN3@doCompareC:
; Line 3943
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::doCompareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3947
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3953
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3958
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3966
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ; icu_56::UnicodeString::compareCodePointOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z PROC ; icu_56::UnicodeString::compareCodePointOrder, COMDAT
; _this$ = ecx
; Line 3980
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrder
_TEXT	ENDS
PUBLIC	?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compareCodePointOrderBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z PROC ; icu_56::UnicodeString::compareCodePointOrderBetween, COMDAT
; _this$ = ecx
; Line 3988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3989
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompareCodePointOrder
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z ENDP ; icu_56::UnicodeString::compareCodePointOrderBetween
_TEXT	ENDS
PUBLIC	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
EXTRN	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:PROC ; icu_56::UnicodeString::doCaseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_thisLength$ = 12					; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::doCaseCompare, COMDAT
; _this$ = ecx
; Line 3998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3999
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@doCaseComp
; Line 4000
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	sete	al
	jmp	SHORT $LN3@doCaseComp
; Line 4001
	jmp	SHORT $LN3@doCaseComp
$LN2@doCaseComp:
; Line 4002
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4003
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	eax, DWORD PTR _thisLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
$LN3@doCaseComp:
; Line 4005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::doCaseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_options$ = 12						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4008
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4009
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4010
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4017
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4018
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_options$ = 16						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4024
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4034
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4035
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_options$ = 20						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4041
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4042
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ; icu_56::UnicodeString::caseCompare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
_options$ = 28						; size = 4
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z PROC	; icu_56::UnicodeString::caseCompare, COMDAT
; _this$ = ecx
; Line 4051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4052
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4053
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z ENDP	; icu_56::UnicodeString::caseCompare
_TEXT	ENDS
PUBLIC	?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ; icu_56::UnicodeString::caseCompareBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
_options$ = 28						; size = 4
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z PROC ; icu_56::UnicodeString::caseCompareBetween, COMDAT
; _this$ = ecx
; Line 4061
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4062
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLimit$[ebp]
	sub	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z ; icu_56::UnicodeString::doCaseCompare
; Line 4063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z ENDP ; icu_56::UnicodeString::caseCompareBetween
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4072
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@indexOf
; Line 4073
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4074
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@indexOf
; Line 4075
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	jmp	SHORT $LN3@indexOf
$LN2@indexOf:
; Line 4078
	or	eax, -1
$LN3@indexOf:
; Line 4079
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4083
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4088
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4090
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4096
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4102
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::indexOf
EXTRN	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC	; icu_56::UnicodeString::doIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_W@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?indexOf@UnicodeString@icu_56@@QBEH_W@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?indexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?indexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4135
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4136
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doIndexOf
; Line 4138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?indexOf@UnicodeString@icu_56@@QBEHHH@Z		; icu_56::UnicodeString::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?indexOf@UnicodeString@icu_56@@QBEHHH@Z PROC		; icu_56::UnicodeString::indexOf, COMDAT
; _this$ = ecx
; Line 4142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4143
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::indexOf
; Line 4145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?indexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP		; icu_56::UnicodeString::indexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ; icu_56::UnicodeString::lastIndexOf
EXTRN	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:PROC ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
__length$ = 20						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
_start$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4158
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLength$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4160
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
_start$ = 20						; size = 4
__length$ = 24						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z PROC ; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4169
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lastIndexO
; Line 4170
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4171
	cmp	DWORD PTR _srcLength$[ebp], 0
	jle	SHORT $LN2@lastIndexO
; Line 4172
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z ; icu_56::UnicodeString::lastIndexOf
	jmp	SHORT $LN3@lastIndexO
$LN2@lastIndexO:
; Line 4175
	or	eax, -1
$LN3@lastIndexO:
; Line 4176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ENDP ; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4187
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z ; icu_56::UnicodeString::lastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z	; icu_56::UnicodeString::lastIndexOf
EXTRN	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:PROC ; icu_56::UnicodeString::doLastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
__length$ = 16						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4205
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z PROC		; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z ENDP		; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 2
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4220
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z ; icu_56::UnicodeString::doLastIndexOf
; Line 4222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z	; icu_56::UnicodeString::lastIndexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_start$ = 12						; size = 4
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z PROC	; icu_56::UnicodeString::lastIndexOf, COMDAT
; _this$ = ecx
; Line 4226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4227
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z ; icu_56::UnicodeString::lastIndexOf
; Line 4229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z ENDP	; icu_56::UnicodeString::lastIndexOf
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z ; icu_56::UnicodeString::compare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::startsWith
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4242
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4243
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith
; Line 4244
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith:
; Line 4246
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::startsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::startsWith, COMDAT
; _this$ = ecx
; Line 4250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4251
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@startsWith@2
; Line 4252
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@startsWith@2:
; Line 4254
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::startsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4260
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	esi, eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4266
	lea	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z ; icu_56::UnicodeString::pinIndices
; Line 4268
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4273
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4274
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith
; Line 4275
	mov	eax, DWORD PTR _srcChars$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith:
; Line 4278
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	eax, al
	test	eax, eax
	sete	al
; Line 4279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z	; icu_56::UnicodeString::endsWith
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z PROC	; icu_56::UnicodeString::endsWith, COMDAT
; _this$ = ecx
; Line 4284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4285
	cmp	DWORD PTR _srcLength$[ebp], 0
	jge	SHORT $LN1@endsWith@2
; Line 4286
	mov	eax, DWORD PTR _srcStart$[ebp]
	mov	ecx, DWORD PTR _srcChars$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _srcLength$[ebp], eax
$LN1@endsWith@2:
; Line 4289
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z ; icu_56::UnicodeString::doCompare
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 4290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z ENDP	; icu_56::UnicodeString::endsWith
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ; icu_56::UnicodeString::replace
EXTRN	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:PROC ; icu_56::UnicodeString::doReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChars$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLength$ = 24					; size = 4
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z	; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_srcChar$ = 16						; size = 2
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z PROC	; icu_56::UnicodeString::replace, COMDAT
; _this$ = ecx
; Line 4328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z ENDP	; icu_56::UnicodeString::replace
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4334
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replaceBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_srcText$ = 16						; size = 4
_srcStart$ = 20						; size = 4
_srcLimit$ = 24						; size = 4
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z PROC ; icu_56::UnicodeString::replaceBetween, COMDAT
; _this$ = ecx
; Line 4342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLimit$[ebp]
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ENDP ; icu_56::UnicodeString::replaceBetween
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ; icu_56::UnicodeString::findAndReplace
EXTRN	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:PROC ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_oldText$ = 8						; size = 4
_newText$ = 12						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4347
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4348
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ; icu_56::UnicodeString::findAndReplace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_oldText$ = 16						; size = 4
_newText$ = 20						; size = 4
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z PROC ; icu_56::UnicodeString::findAndReplace, COMDAT
; _this$ = ecx
; Line 4355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4356
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _oldText$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z ; icu_56::UnicodeString::findAndReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z ENDP ; icu_56::UnicodeString::findAndReplace
_TEXT	ENDS
PUBLIC	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z PROC	; icu_56::UnicodeString::doExtract, COMDAT
; _this$ = ecx
; Line 4365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _target$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::doExtract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z	; icu_56::UnicodeString::extract
EXTRN	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:PROC ; icu_56::UnicodeString::doExtract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
_targetStart$ = 20					; size = 4
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _targetStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR __length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z	; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_target$ = 16						; size = 4
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4378
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR __length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z ; icu_56::UnicodeString::doExtract
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z	; icu_56::UnicodeString::extract
EXTRN	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:PROC ; icu_56::UnicodeString::extract
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
_dst$ = 16						; size = 4
_codepage$ = 20						; size = 4
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z PROC	; icu_56::UnicodeString::extract, COMDAT
; _this$ = ecx
; Line 4388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4390
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	neg	ecx
	sbb	ecx, ecx
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z ; icu_56::UnicodeString::extract
; Line 4391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z ENDP	; icu_56::UnicodeString::extract
_TEXT	ENDS
PUBLIC	?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ; icu_56::UnicodeString::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstStart$ = 20						; size = 4
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z PROC ; icu_56::UnicodeString::extractBetween, COMDAT
; _this$ = ecx
; Line 4399
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4400
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4401
	lea	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4402
	mov	eax, DWORD PTR _dstStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z ; icu_56::UnicodeString::doExtract
; Line 4403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z ENDP ; icu_56::UnicodeString::extractBetween
_TEXT	ENDS
PUBLIC	?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubStringBetween
EXTRN	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC ; icu_56::UnicodeString::tempSubString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T80691 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z PROC ; icu_56::UnicodeString::tempSubStringBetween, COMDAT
; _this$ = ecx
; Line 4406
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T80691[ebp], 0
; Line 4407
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ; icu_56::UnicodeString::tempSubString
	mov	eax, DWORD PTR $T80691[ebp]
	or	eax, 1
	mov	DWORD PTR $T80691[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 4408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z ENDP ; icu_56::UnicodeString::tempSubStringBetween
_TEXT	ENDS
PUBLIC	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z	; icu_56::UnicodeString::doCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?doCharAt@UnicodeString@icu_56@@ABE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z PROC		; icu_56::UnicodeString::doCharAt, COMDAT
; _this$ = ecx
; Line 4412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4413
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jae	SHORT $LN2@doCharAt
; Line 4414
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ ; icu_56::UnicodeString::getArrayStart
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN3@doCharAt
; Line 4415
	jmp	SHORT $LN3@doCharAt
$LN2@doCharAt:
; Line 4416
	mov	eax, 65535				; 0000ffffH
$LN3@doCharAt:
; Line 4418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ENDP		; icu_56::UnicodeString::doCharAt
_TEXT	ENDS
PUBLIC	?charAt@UnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::charAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charAt@UnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?charAt@UnicodeString@icu_56@@QBE_WH@Z PROC		; icu_56::UnicodeString::charAt, COMDAT
; _this$ = ecx
; Line 4422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?charAt@UnicodeString@icu_56@@QBE_WH@Z ENDP		; icu_56::UnicodeString::charAt
_TEXT	ENDS
PUBLIC	??AUnicodeString@icu_56@@QBE_WH@Z		; icu_56::UnicodeString::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUnicodeString@icu_56@@QBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
??AUnicodeString@icu_56@@QBE_WH@Z PROC			; icu_56::UnicodeString::operator[], COMDAT
; _this$ = ecx
; Line 4426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doCharAt@UnicodeString@icu_56@@ABE_WH@Z ; icu_56::UnicodeString::doCharAt
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUnicodeString@icu_56@@QBE_WH@Z ENDP			; icu_56::UnicodeString::operator[]
_TEXT	ENDS
PUBLIC	?isEmpty@UnicodeString@icu_56@@QBECXZ		; icu_56::UnicodeString::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UnicodeString@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UnicodeString@icu_56@@QBECXZ PROC		; icu_56::UnicodeString::isEmpty, COMDAT
; _this$ = ecx
; Line 4429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4431
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sar	ecx, 5
	test	ecx, ecx
	sete	al
; Line 4432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UnicodeString@icu_56@@QBECXZ ENDP		; icu_56::UnicodeString::isEmpty
_TEXT	ENDS
PUBLIC	?setZeroLength@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setZeroLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setZeroLength@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setZeroLength@UnicodeString@icu_56@@AAEXXZ PROC	; icu_56::UnicodeString::setZeroLength, COMDAT
; _this$ = ecx
; Line 4438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4439
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4440
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setZeroLength@UnicodeString@icu_56@@AAEXXZ ENDP	; icu_56::UnicodeString::setZeroLength
_TEXT	ENDS
PUBLIC	?setShortLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setShortLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setShortLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z PROC	; icu_56::UnicodeString::setShortLength, COMDAT
; _this$ = ecx
; Line 4443
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4446
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 5
	or	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 4447
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setShortLength@UnicodeString@icu_56@@AAEXH@Z ENDP	; icu_56::UnicodeString::setShortLength
_TEXT	ENDS
PUBLIC	?setLength@UnicodeString@icu_56@@AAEXH@Z	; icu_56::UnicodeString::setLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLength@UnicodeString@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setLength@UnicodeString@icu_56@@AAEXH@Z PROC		; icu_56::UnicodeString::setLength, COMDAT
; _this$ = ecx
; Line 4450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4451
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jg	SHORT $LN2@setLength
; Line 4452
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setShortLength
; Line 4453
	jmp	SHORT $LN3@setLength
$LN2@setLength:
; Line 4454
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	or	ecx, 65504				; 0000ffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@setLength:
; Line 4457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setLength@UnicodeString@icu_56@@AAEXH@Z ENDP		; icu_56::UnicodeString::setLength
_TEXT	ENDS
PUBLIC	?setToEmpty@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::setToEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEmpty@UnicodeString@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEmpty@UnicodeString@icu_56@@AAEXXZ PROC		; icu_56::UnicodeString::setToEmpty, COMDAT
; _this$ = ecx
; Line 4460
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4461
	mov	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 4462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEmpty@UnicodeString@icu_56@@AAEXXZ ENDP		; icu_56::UnicodeString::setToEmpty
_TEXT	ENDS
PUBLIC	?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z	; icu_56::UnicodeString::setArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_array$ = 8						; size = 4
_len$ = 12						; size = 4
_capacity$ = 16						; size = 4
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z PROC	; icu_56::UnicodeString::setArray, COMDAT
; _this$ = ecx
; Line 4465
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4466
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _array$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 4468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z ENDP	; icu_56::UnicodeString::setArray
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??4UnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4473
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	??4UnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator=
EXTRN	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:PROC ; icu_56::UnicodeString::replace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??4UnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator=, COMDAT
; _this$ = ecx
; Line 4477
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator=
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::setTo
EXTRN	?unBogus@UnicodeString@icu_56@@AAEXXZ:PROC	; icu_56::UnicodeString::unBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4484
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4485
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4492
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4493
	lea	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z ; icu_56::UnicodeString::pinIndex
; Line 4494
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	sub	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	eax, DWORD PTR _srcStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
; Line 4495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::setTo
EXTRN	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:PROC ; icu_56::UnicodeString::copyFrom
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4500
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z ; icu_56::UnicodeString::copyFrom
; Line 4501
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4506
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4508
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4513
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4514
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4515
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeString::setTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z PROC		; icu_56::UnicodeString::setTo, COMDAT
; _this$ = ecx
; Line 4520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4522
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
; Line 4523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z ENDP		; icu_56::UnicodeString::setTo
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	; icu_56::UnicodeString::append
EXTRN	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:PROC ; icu_56::UnicodeString::doAppend
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcStart$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4539
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChars$ = 8						; size = 4
_srcLength$ = 12					; size = 4
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4544
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	?append@UnicodeString@icu_56@@QAEAAV12@_W@Z	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcChar$ = 8						; size = 2
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z PROC	; icu_56::UnicodeString::append, COMDAT
; _this$ = ecx
; Line 4548
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ENDP	; icu_56::UnicodeString::append
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@_W@Z		; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
??YUnicodeString@icu_56@@QAEAAV01@_W@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4552
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@_W@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@H@Z		; icu_56::UnicodeString::operator+=
EXTRN	?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC	; icu_56::UnicodeString::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@H@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4556
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@UnicodeString@icu_56@@QAEAAV12@H@Z ; icu_56::UnicodeString::append
; Line 4557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_srcText$ = 8						; size = 4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeString::operator+=, COMDAT
; _this$ = ecx
; Line 4561
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z ; icu_56::UnicodeString::doAppend
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeString::operator+=
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcText$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _srcText$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	eax, DWORD PTR _srcText$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcStart$ = 16						; size = 4
_srcLength$ = 20					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4580
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcChars$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChars$ = 12						; size = 4
_srcLength$ = 16					; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4586
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _srcChars$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 2
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	0
	lea	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::insert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_srcChar$ = 12						; size = 4
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::insert, COMDAT
; _this$ = ecx
; Line 4596
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _srcChar$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z ; icu_56::UnicodeString::replace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::insert
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4601
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 4604
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setToEmpty@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setToEmpty
; Line 4605
	jmp	SHORT $LN1@remove
$LN2@remove:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setZeroLength@UnicodeString@icu_56@@AAEXXZ ; icu_56::UnicodeString::setZeroLength
$LN1@remove:
; Line 4608
	mov	eax, DWORD PTR _this$[ebp]
; Line 4609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::remove, COMDAT
; _this$ = ecx
; Line 4614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4615
	cmp	DWORD PTR _start$[ebp], 0
	jg	SHORT $LN1@remove@2
	cmp	DWORD PTR __length$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@remove@2
; Line 4617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove
	jmp	SHORT $LN2@remove@2
$LN1@remove@2:
; Line 4619
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
$LN2@remove@2:
; Line 4620
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::remove
_TEXT	ENDS
PUBLIC	?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::removeBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::removeBetween, COMDAT
; _this$ = ecx
; Line 4625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::removeBetween
_TEXT	ENDS
PUBLIC	?truncate@UnicodeString@icu_56@@QAECH@Z		; icu_56::UnicodeString::truncate
PUBLIC	?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::retainBetween, COMDAT
; _this$ = ecx
; Line 4628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4629
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?truncate@UnicodeString@icu_56@@QAECH@Z	; icu_56::UnicodeString::truncate
; Line 4630
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z ; icu_56::UnicodeString::doReplace
; Line 4631
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::retainBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@UnicodeString@icu_56@@QAECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_targetLength$ = 8					; size = 4
?truncate@UnicodeString@icu_56@@QAECH@Z PROC		; icu_56::UnicodeString::truncate, COMDAT
; _this$ = ecx
; Line 4635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBogus@UnicodeString@icu_56@@QBECXZ	; icu_56::UnicodeString::isBogus
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@truncate
	cmp	DWORD PTR _targetLength$[ebp], 0
	jne	SHORT $LN4@truncate
; Line 4638
	mov	ecx, DWORD PTR _this$[ebp]
	call	?unBogus@UnicodeString@icu_56@@AAEXXZ	; icu_56::UnicodeString::unBogus
; Line 4639
	xor	al, al
	jmp	SHORT $LN5@truncate
	jmp	SHORT $LN5@truncate
$LN4@truncate:
; Line 4640
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	cmp	DWORD PTR _targetLength$[ebp], eax
	jae	SHORT $LN2@truncate
; Line 4641
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setLength@UnicodeString@icu_56@@AAEXH@Z ; icu_56::UnicodeString::setLength
; Line 4642
	mov	al, 1
	jmp	SHORT $LN5@truncate
; Line 4643
	jmp	SHORT $LN5@truncate
$LN2@truncate:
; Line 4644
	xor	al, al
$LN5@truncate:
; Line 4646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@UnicodeString@icu_56@@QAECH@Z ENDP		; icu_56::UnicodeString::truncate
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@XZ	; icu_56::UnicodeString::reverse
EXTRN	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:PROC ; icu_56::UnicodeString::doReverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ PROC		; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ ENDP		; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z	; icu_56::UnicodeString::reverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
__length$ = 12						; size = 4
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z PROC	; icu_56::UnicodeString::reverse, COMDAT
; _this$ = ecx
; Line 4655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z ; icu_56::UnicodeString::doReverse
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z ENDP	; icu_56::UnicodeString::reverse
_TEXT	ENDS
PUBLIC	??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::ForwardCharacterIterator::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z PROC ; icu_56::ForwardCharacterIterator::operator=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\chariter.h
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z ENDP ; icu_56::ForwardCharacterIterator::operator=
_TEXT	ENDS
PUBLIC	??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z ; icu_56::ForwardCharacterIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::ForwardCharacterIterator::operator!=, COMDAT
; _this$ = ecx
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 688
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 689
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::ForwardCharacterIterator::operator!=
_TEXT	ENDS
PUBLIC	?setToStart@CharacterIterator@icu_56@@QAEHXZ	; icu_56::CharacterIterator::setToStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToStart@CharacterIterator@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToStart@CharacterIterator@icu_56@@QAEHXZ PROC	; icu_56::CharacterIterator::setToStart, COMDAT
; _this$ = ecx
; Line 692
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 693
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 694
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToStart@CharacterIterator@icu_56@@QAEHXZ ENDP	; icu_56::CharacterIterator::setToStart
_TEXT	ENDS
PUBLIC	?setToEnd@CharacterIterator@icu_56@@QAEHXZ	; icu_56::CharacterIterator::setToEnd
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToEnd@CharacterIterator@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToEnd@CharacterIterator@icu_56@@QAEHXZ PROC		; icu_56::CharacterIterator::setToEnd, COMDAT
; _this$ = ecx
; Line 697
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 698
	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToEnd@CharacterIterator@icu_56@@QAEHXZ ENDP		; icu_56::CharacterIterator::setToEnd
_TEXT	ENDS
PUBLIC	?startIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::startIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?startIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?startIndex@CharacterIterator@icu_56@@QBEHXZ PROC	; icu_56::CharacterIterator::startIndex, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 703
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 704
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?startIndex@CharacterIterator@icu_56@@QBEHXZ ENDP	; icu_56::CharacterIterator::startIndex
_TEXT	ENDS
PUBLIC	?endIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::endIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?endIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?endIndex@CharacterIterator@icu_56@@QBEHXZ PROC		; icu_56::CharacterIterator::endIndex, COMDAT
; _this$ = ecx
; Line 707
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 708
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 709
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?endIndex@CharacterIterator@icu_56@@QBEHXZ ENDP		; icu_56::CharacterIterator::endIndex
_TEXT	ENDS
PUBLIC	?getIndex@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::getIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIndex@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIndex@CharacterIterator@icu_56@@QBEHXZ PROC		; icu_56::CharacterIterator::getIndex, COMDAT
; _this$ = ecx
; Line 712
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 713
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 714
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIndex@CharacterIterator@icu_56@@QBEHXZ ENDP		; icu_56::CharacterIterator::getIndex
_TEXT	ENDS
PUBLIC	?getLength@CharacterIterator@icu_56@@QBEHXZ	; icu_56::CharacterIterator::getLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLength@CharacterIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLength@CharacterIterator@icu_56@@QBEHXZ PROC	; icu_56::CharacterIterator::getLength, COMDAT
; _this$ = ecx
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 718
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 719
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLength@CharacterIterator@icu_56@@QBEHXZ ENDP	; icu_56::CharacterIterator::getLength
_TEXT	ENDS
PUBLIC	??_7StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`vftable'
PUBLIC	??0StringEnumeration@icu_56@@QAE@ABV01@@Z	; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??_R4StringEnumeration@icu_56@@6B@		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`vector deleting destructor'
EXTRN	??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::UnicodeString::UnicodeString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4StringEnumeration@icu_56@@6B@ DD 00H		; icu_56::StringEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringEnumeration@icu_56@@@8
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7StringEnumeration@icu_56@@6B@ DD FLAT:??_R4StringEnumeration@icu_56@@6B@ ; icu_56::StringEnumeration::`vftable'
	DD	FLAT:??_EStringEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:__purecall
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0StringEnumeration@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringEnumeration::StringEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeString@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeString::UnicodeString
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UObject@icu_56@@UAE@XZ		; icu_56::UObject::~UObject
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringEnumeration@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringEnumeration::StringEnumeration
PUBLIC	??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::StringEnumeration::operator=
EXTRN	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::UnicodeString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$34127 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::StringEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeString::operator=
	mov	DWORD PTR _$S1$34127[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$34127[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$34127[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$34127[ebp], 32		; 00000020H
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$34127[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$34127[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::StringEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GStringEnumeration@icu_56@@UAEPAXI@Z		; icu_56::StringEnumeration::`scalar deleting destructor'
EXTRN	??1StringEnumeration@icu_56@@UAE@XZ:PROC	; icu_56::StringEnumeration::~StringEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EStringEnumeration@icu_56@@UAEPAXI@Z PROC		; icu_56::StringEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	108					; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringEnumeration@icu_56@@UAE@XZ	; icu_56::StringEnumeration::~StringEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringEnumeration@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9Locale@icu_56@@QBECABV01@@Z			; icu_56::Locale::operator!=
EXTRN	??8Locale@icu_56@@QBECABV01@@Z:PROC		; icu_56::Locale::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Locale@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Locale@icu_56@@QBECABV01@@Z PROC			; icu_56::Locale::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\locid.h
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 772
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Locale@icu_56@@QBECABV01@@Z		; icu_56::Locale::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 773
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Locale@icu_56@@QBECABV01@@Z ENDP			; icu_56::Locale::operator!=
_TEXT	ENDS
PUBLIC	?getCountry@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getCountry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCountry@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCountry@Locale@icu_56@@QBEPBDXZ PROC		; icu_56::Locale::getCountry, COMDAT
; _this$ = ecx
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 778
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 22					; 00000016H
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCountry@Locale@icu_56@@QBEPBDXZ ENDP		; icu_56::Locale::getCountry
_TEXT	ENDS
PUBLIC	?getLanguage@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getLanguage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLanguage@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLanguage@Locale@icu_56@@QBEPBDXZ PROC		; icu_56::Locale::getLanguage, COMDAT
; _this$ = ecx
; Line 783
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLanguage@Locale@icu_56@@QBEPBDXZ ENDP		; icu_56::Locale::getLanguage
_TEXT	ENDS
PUBLIC	?getScript@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getScript
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getScript@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getScript@Locale@icu_56@@QBEPBDXZ PROC			; icu_56::Locale::getScript, COMDAT
; _this$ = ecx
; Line 789
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 790
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getScript@Locale@icu_56@@QBEPBDXZ ENDP			; icu_56::Locale::getScript
_TEXT	ENDS
PUBLIC	?getVariant@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getVariant
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getVariant@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getVariant@Locale@icu_56@@QBEPBDXZ PROC		; icu_56::Locale::getVariant, COMDAT
; _this$ = ecx
; Line 795
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 796
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+196]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
; Line 797
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getVariant@Locale@icu_56@@QBEPBDXZ ENDP		; icu_56::Locale::getVariant
_TEXT	ENDS
PUBLIC	?getName@Locale@icu_56@@QBEPBDXZ		; icu_56::Locale::getName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@Locale@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@Locale@icu_56@@QBEPBDXZ PROC			; icu_56::Locale::getName, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
; Line 803
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@Locale@icu_56@@QBEPBDXZ ENDP			; icu_56::Locale::getName
_TEXT	ENDS
PUBLIC	?isBogus@Locale@icu_56@@QBECXZ			; icu_56::Locale::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@Locale@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@Locale@icu_56@@QBECXZ PROC			; icu_56::Locale::isBogus, COMDAT
; _this$ = ecx
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+200]
; Line 808
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@Locale@icu_56@@QBECXZ ENDP			; icu_56::Locale::isBogus
_TEXT	ENDS
PUBLIC	??9BreakIterator@icu_56@@QBECABV01@@Z		; icu_56::BreakIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9BreakIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9BreakIterator@icu_56@@QBECABV01@@Z PROC		; icu_56::BreakIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\brkiter.h
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9BreakIterator@icu_56@@QBECABV01@@Z ENDP		; icu_56::BreakIterator::operator!=
_TEXT	ENDS
PUBLIC	??_7BreakIterator@icu_56@@6B@			; icu_56::BreakIterator::`vftable'
PUBLIC	??0BreakIterator@icu_56@@IAE@ABV01@@Z		; icu_56::BreakIterator::BreakIterator
PUBLIC	??_R4BreakIterator@icu_56@@6B@			; icu_56::BreakIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBreakIterator@icu_56@@@8		; icu_56::BreakIterator `RTTI Type Descriptor'
PUBLIC	??_R3BreakIterator@icu_56@@8			; icu_56::BreakIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BreakIterator@icu_56@@8			; icu_56::BreakIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BreakIterator@icu_56@@8		; icu_56::BreakIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EBreakIterator@icu_56@@UAEPAXI@Z		; icu_56::BreakIterator::`vector deleting destructor'
EXTRN	?getRuleStatus@BreakIterator@icu_56@@UBEHXZ:PROC ; icu_56::BreakIterator::getRuleStatus
EXTRN	?getRuleStatusVec@BreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z:PROC ; icu_56::BreakIterator::getRuleStatusVec
;	COMDAT ??_R1A@?0A@EA@BreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BreakIterator@icu_56@@8 DD FLAT:??_R0?AVBreakIterator@icu_56@@@8 ; icu_56::BreakIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R2BreakIterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BreakIterator@icu_56@@8 ; icu_56::BreakIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R3BreakIterator@icu_56@@8 DD 00H			; icu_56::BreakIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2BreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBreakIterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBreakIterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BreakIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBreakIterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4BreakIterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4BreakIterator@icu_56@@6B@ DD 00H			; icu_56::BreakIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBreakIterator@icu_56@@@8
	DD	FLAT:??_R3BreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7BreakIterator@icu_56@@6B@
CONST	SEGMENT
??_7BreakIterator@icu_56@@6B@ DD FLAT:??_R4BreakIterator@icu_56@@6B@ ; icu_56::BreakIterator::`vftable'
	DD	FLAT:??_EBreakIterator@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getRuleStatus@BreakIterator@icu_56@@UBEHXZ
	DD	FLAT:?getRuleStatusVec@BreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0BreakIterator@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0BreakIterator@icu_56@@IAE@ABV01@@Z PROC		; icu_56::BreakIterator::BreakIterator, COMDAT
; _this$ = ecx
; Line 625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BreakIterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0BreakIterator@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::BreakIterator::BreakIterator
_TEXT	ENDS
PUBLIC	??_GBreakIterator@icu_56@@UAEPAXI@Z		; icu_56::BreakIterator::`scalar deleting destructor'
EXTRN	??1BreakIterator@icu_56@@UAE@XZ:PROC		; icu_56::BreakIterator::~BreakIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBreakIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GBreakIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::BreakIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBreakIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::BreakIterator::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EBreakIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EBreakIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::BreakIterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1BreakIterator@icu_56@@UAE@XZ	; icu_56::BreakIterator::~BreakIterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	320					; 00000140H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EBreakIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::BreakIterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isBufferClone@BreakIterator@icu_56@@QAECXZ	; icu_56::BreakIterator::isBufferClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBufferClone@BreakIterator@icu_56@@QAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBufferClone@BreakIterator@icu_56@@QAECXZ PROC	; icu_56::BreakIterator::isBufferClone, COMDAT
; _this$ = ecx
; Line 644
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 645
	xor	al, al
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBufferClone@BreakIterator@icu_56@@QAECXZ ENDP	; icu_56::BreakIterator::isBufferClone
_TEXT	ENDS
PUBLIC	??1RuleBasedBreakIterator@icu_56@@UAE@XZ	; icu_56::RuleBasedBreakIterator::~RuleBasedBreakIterator
PUBLIC	??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z	; icu_56::RuleBasedBreakIterator::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z PROC	; icu_56::RuleBasedBreakIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RuleBasedBreakIterator@icu_56@@UAE@XZ ; icu_56::RuleBasedBreakIterator::~RuleBasedBreakIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z ENDP	; icu_56::RuleBasedBreakIterator::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z	; icu_56::RuleBasedBreakIterator::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z PROC	; icu_56::RuleBasedBreakIterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1RuleBasedBreakIterator@icu_56@@UAE@XZ ; icu_56::RuleBasedBreakIterator::~RuleBasedBreakIterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	376					; 00000178H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RuleBasedBreakIterator@icu_56@@UAE@XZ ; icu_56::RuleBasedBreakIterator::~RuleBasedBreakIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z ENDP	; icu_56::RuleBasedBreakIterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9RuleBasedBreakIterator@icu_56@@QBECABVBreakIterator@1@@Z ; icu_56::RuleBasedBreakIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9RuleBasedBreakIterator@icu_56@@QBECABVBreakIterator@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9RuleBasedBreakIterator@icu_56@@QBECABVBreakIterator@1@@Z PROC ; icu_56::RuleBasedBreakIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\rbbi.h
; Line 774
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 775
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 776
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9RuleBasedBreakIterator@icu_56@@QBECABVBreakIterator@1@@Z ENDP ; icu_56::RuleBasedBreakIterator::operator!=
_TEXT	ENDS
PUBLIC	??_7UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`vftable'
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@XZ		; icu_56::UnicodeFunctor::UnicodeFunctor
PUBLIC	??_R4UnicodeFunctor@icu_56@@6B@			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFunctor::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFunctor@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeFunctor@icu_56@@6B@ DD 00H			; icu_56::UnicodeFunctor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFunctor@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeFunctor@icu_56@@6B@ DD FLAT:??_R4UnicodeFunctor@icu_56@@6B@ ; icu_56::UnicodeFunctor::`vftable'
	DD	FLAT:??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFunctor@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFunctor::UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFunctor::UnicodeFunctor, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UObject@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFunctor@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFunctor::UnicodeFunctor
_TEXT	ENDS
PUBLIC	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFunctor::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeFunctor::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeFunctor::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFunctor@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFunctor::`scalar deleting destructor'
EXTRN	??1UnicodeFunctor@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFunctor::~UnicodeFunctor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFunctor@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFunctor::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFunctor@icu_56@@UAE@XZ	; icu_56::UnicodeFunctor::~UnicodeFunctor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFunctor::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`vftable'
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@XZ		; icu_56::UnicodeMatcher::UnicodeMatcher
PUBLIC	??_R4UnicodeMatcher@icu_56@@6B@			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeMatcher@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeMatcher@icu_56@@6B@ DD 00H			; icu_56::UnicodeMatcher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeMatcher@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeMatcher@icu_56@@6B@ DD FLAT:??_R4UnicodeMatcher@icu_56@@6B@ ; icu_56::UnicodeMatcher::`vftable'
	DD	FLAT:??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@XZ PROC			; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeMatcher@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeMatcher::UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeMatcher::UnicodeMatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeMatcher@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeMatcher::UnicodeMatcher
_TEXT	ENDS
PUBLIC	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeMatcher::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeMatcher::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeMatcher::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeMatcher@icu_56@@UAEPAXI@Z		; icu_56::UnicodeMatcher::`scalar deleting destructor'
EXTRN	??1UnicodeMatcher@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeMatcher::~UnicodeMatcher
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeMatcher@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeMatcher::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeMatcher@icu_56@@UAE@XZ	; icu_56::UnicodeMatcher::~UnicodeMatcher
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeMatcher::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
_TEXT	ENDS
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`vftable'
PUBLIC	??0UnicodeFilter@icu_56@@QAE@XZ			; icu_56::UnicodeFilter::UnicodeFilter
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_EUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`vector deleting destructor'
PUBLIC	??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeFilter@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeFilter::matches
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeFilter@icu_56@@@8
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeFilter::`vftable'
	DD	FLAT:??_EUnicodeFilter@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeFilter@icu_56@@QAE@XZ PROC			; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeFilter@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??0UnicodeFilter@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeFilter::UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeFilter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeFilter::UnicodeFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@UnicodeFil
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@UnicodeFil
$LN3@UnicodeFil:
	mov	DWORD PTR tv90[ebp], 0
$LN4@UnicodeFil:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeFilter::UnicodeFilter
_TEXT	ENDS
PUBLIC	??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeFilter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::UnicodeFilter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@operator@3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@operator@3
$LN3@operator@3:
	mov	DWORD PTR tv84[ebp], 0
$LN4@operator@3:
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::UnicodeFilter::operator=
_TEXT	ENDS
PUBLIC	??_GUnicodeFilter@icu_56@@UAEPAXI@Z		; icu_56::UnicodeFilter::`scalar deleting destructor'
EXTRN	??1UnicodeFilter@icu_56@@UAE@XZ:PROC		; icu_56::UnicodeFilter::~UnicodeFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@10
	push	OFFSET ??1UnicodeFilter@icu_56@@UAE@XZ	; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_VUMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete[]
	add	esp, 4
$LN2@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@10
$LN3@vector@10:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeFilter@icu_56@@UAE@XZ		; icu_56::UnicodeFilter::~UnicodeFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	add	esp, 4
$LN1@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@10:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeFilter@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9UnicodeSet@icu_56@@QBECABV01@@Z		; icu_56::UnicodeSet::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UnicodeSet@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_o$ = 8							; size = 4
??9UnicodeSet@icu_56@@QBECABV01@@Z PROC			; icu_56::UnicodeSet::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\uniset.h
; Line 1651
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1652
	mov	esi, esp
	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UnicodeSet@icu_56@@QBECABV01@@Z ENDP			; icu_56::UnicodeSet::operator!=
_TEXT	ENDS
PUBLIC	?isFrozen@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isFrozen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFrozen@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
?isFrozen@UnicodeSet@icu_56@@QBECXZ PROC		; icu_56::UnicodeSet::isFrozen, COMDAT
; _this$ = ecx
; Line 1655
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@isFrozen
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jne	SHORT $LN3@isFrozen
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN4@isFrozen
$LN3@isFrozen:
	mov	BYTE PTR tv68[ebp], 1
$LN4@isFrozen:
	mov	al, BYTE PTR tv68[ebp]
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFrozen@UnicodeSet@icu_56@@QBECXZ ENDP		; icu_56::UnicodeSet::isFrozen
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECHH@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECHH@Z:PROC	; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?containsSome@UnicodeSet@icu_56@@QBECHH@Z PROC		; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1659
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1660
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECHH@Z ; icu_56::UnicodeSet::containsNone
	movsx	edx, al
	test	edx, edx
	sete	al
; Line 1661
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?containsSome@UnicodeSet@icu_56@@QBECHH@Z ENDP		; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z	; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z PROC	; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1664
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z ENDP	; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsSome
EXTRN	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:PROC ; icu_56::UnicodeSet::containsNone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::UnicodeSet::containsSome, COMDAT
; _this$ = ecx
; Line 1667
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1668
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsNone
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1669
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::UnicodeSet::containsSome
_TEXT	ENDS
PUBLIC	?isBogus@UnicodeSet@icu_56@@QBECXZ		; icu_56::UnicodeSet::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@UnicodeSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@UnicodeSet@icu_56@@QBECXZ PROC			; icu_56::UnicodeSet::isBogus, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1672
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+48]
	and	eax, 1
; Line 1673
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@UnicodeSet@icu_56@@QBECXZ ENDP			; icu_56::UnicodeSet::isBogus
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1675
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1676
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1677
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ; icu_56::UnicodeSet::fromUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z
_TEXT	SEGMENT
_uset$ = 8						; size = 4
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z PROC	; icu_56::UnicodeSet::fromUSet, COMDAT
; Line 1679
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1680
	mov	eax, DWORD PTR _uset$[ebp]
; Line 1681
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z ENDP	; icu_56::UnicodeSet::fromUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1683
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1684
	mov	eax, DWORD PTR _this$[ebp]
; Line 1685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ	; icu_56::UnicodeSet::toUSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ PROC		; icu_56::UnicodeSet::toUSet, COMDAT
; _this$ = ecx
; Line 1687
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1688
	mov	eax, DWORD PTR _this$[ebp]
; Line 1689
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ ENDP		; icu_56::UnicodeSet::toUSet
_TEXT	ENDS
PUBLIC	?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
EXTRN	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::span
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::span, COMDAT
; _this$ = ecx
; Line 1691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1692
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1693
	cmp	DWORD PTR _start$[ebp], 0
	jge	SHORT $LN3@span
; Line 1694
	mov	DWORD PTR _start$[ebp], 0
	jmp	SHORT $LN2@span
$LN3@span:
; Line 1695
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@span
; Line 1696
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN2@span:
; Line 1698
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sLength$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	mov	edx, DWORD PTR _start$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::span
	add	eax, DWORD PTR _start$[ebp]
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::span
_TEXT	ENDS
PUBLIC	?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
EXTRN	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:PROC ; icu_56::UnicodeSet::spanBack
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z
_TEXT	SEGMENT
_sLength$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_limit$ = 12						; size = 4
_spanCondition$ = 16					; size = 4
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z PROC ; icu_56::UnicodeSet::spanBack, COMDAT
; _this$ = ecx
; Line 1701
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1702
	mov	ecx, DWORD PTR _s$[ebp]
	call	?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length
	mov	DWORD PTR _sLength$[ebp], eax
; Line 1703
	cmp	DWORD PTR _limit$[ebp], 0
	jge	SHORT $LN3@spanBack
; Line 1704
	mov	DWORD PTR _limit$[ebp], 0
	jmp	SHORT $LN2@spanBack
$LN3@spanBack:
; Line 1705
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _sLength$[ebp]
	jle	SHORT $LN2@spanBack
; Line 1706
	mov	eax, DWORD PTR _sLength$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN2@spanBack:
; Line 1708
	mov	eax, DWORD PTR _spanCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ; icu_56::UnicodeString::getBuffer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z ; icu_56::UnicodeSet::spanBack
; Line 1709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z ENDP ; icu_56::UnicodeSet::spanBack
_TEXT	ENDS
PUBLIC	?size@UVector@icu_56@@QBEHXZ			; icu_56::UVector::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@UVector@icu_56@@QBEHXZ PROC			; icu_56::UVector::size, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\uvector.h
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 353
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@UVector@icu_56@@QBEHXZ ENDP			; icu_56::UVector::size
_TEXT	ENDS
PUBLIC	?isEmpty@UVector@icu_56@@QBECXZ			; icu_56::UVector::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@UVector@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@UVector@icu_56@@QBECXZ PROC			; icu_56::UVector::isEmpty, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@UVector@icu_56@@QBECXZ ENDP			; icu_56::UVector::isEmpty
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECPAX@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHPAXH@Z:PROC	; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECPAX@Z PROC		; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHPAXH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECPAX@Z ENDP		; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?contains@UVector@icu_56@@QBECH@Z		; icu_56::UVector::contains
EXTRN	?indexOf@UVector@icu_56@@QBEHHH@Z:PROC		; icu_56::UVector::indexOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@UVector@icu_56@@QBECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
?contains@UVector@icu_56@@QBECH@Z PROC			; icu_56::UVector::contains, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 364
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOf@UVector@icu_56@@QBEHHH@Z	; icu_56::UVector::indexOf
	test	eax, eax
	setge	al
; Line 365
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@UVector@icu_56@@QBECH@Z ENDP			; icu_56::UVector::contains
_TEXT	ENDS
PUBLIC	?firstElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::firstElement
EXTRN	?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC	; icu_56::UVector::elementAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?firstElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?firstElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::firstElement, COMDAT
; _this$ = ecx
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?firstElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::firstElement
_TEXT	ENDS
PUBLIC	?lastElement@UVector@icu_56@@QBEPAXXZ		; icu_56::UVector::lastElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElement@UVector@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElement@UVector@icu_56@@QBEPAXXZ PROC		; icu_56::UVector::lastElement, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElement@UVector@icu_56@@QBEPAXXZ ENDP		; icu_56::UVector::lastElement
_TEXT	ENDS
PUBLIC	?lastElementi@UVector@icu_56@@QBEHXZ		; icu_56::UVector::lastElementi
EXTRN	?elementAti@UVector@icu_56@@QBEHH@Z:PROC	; icu_56::UVector::elementAti
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lastElementi@UVector@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lastElementi@UVector@icu_56@@QBEHXZ PROC		; icu_56::UVector::lastElementi, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
; Line 377
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lastElementi@UVector@icu_56@@QBEHXZ ENDP		; icu_56::UVector::lastElementi
_TEXT	ENDS
PUBLIC	??AUVector@icu_56@@QBEPAXH@Z			; icu_56::UVector::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AUVector@icu_56@@QBEPAXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AUVector@icu_56@@QBEPAXH@Z PROC			; icu_56::UVector::operator[], COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
; Line 381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??AUVector@icu_56@@QBEPAXH@Z ENDP			; icu_56::UVector::operator[]
_TEXT	ENDS
PUBLIC	??9UVector@icu_56@@QAECABV01@@Z			; icu_56::UVector::operator!=
EXTRN	??8UVector@icu_56@@QAECABV01@@Z:PROC		; icu_56::UVector::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9UVector@icu_56@@QAECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9UVector@icu_56@@QAECABV01@@Z PROC			; icu_56::UVector::operator!=, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 384
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8UVector@icu_56@@QAECABV01@@Z		; icu_56::UVector::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9UVector@icu_56@@QAECABV01@@Z ENDP			; icu_56::UVector::operator!=
_TEXT	ENDS
PUBLIC	?empty@UStack@icu_56@@QBECXZ			; icu_56::UStack::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@UStack@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@UStack@icu_56@@QBECXZ PROC			; icu_56::UStack::empty, COMDAT
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isEmpty@UVector@icu_56@@QBECXZ		; icu_56::UVector::isEmpty
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@UStack@icu_56@@QBECXZ ENDP			; icu_56::UStack::empty
_TEXT	ENDS
PUBLIC	?peek@UStack@icu_56@@QBEPAXXZ			; icu_56::UStack::peek
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peek@UStack@icu_56@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peek@UStack@icu_56@@QBEPAXXZ PROC			; icu_56::UStack::peek, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElement@UVector@icu_56@@QBEPAXXZ	; icu_56::UVector::lastElement
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peek@UStack@icu_56@@QBEPAXXZ ENDP			; icu_56::UStack::peek
_TEXT	ENDS
PUBLIC	?peeki@UStack@icu_56@@QBEHXZ			; icu_56::UStack::peeki
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?peeki@UStack@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peeki@UStack@icu_56@@QBEHXZ PROC			; icu_56::UStack::peeki, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lastElementi@UVector@icu_56@@QBEHXZ	; icu_56::UVector::lastElementi
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peeki@UStack@icu_56@@QBEHXZ ENDP			; icu_56::UStack::peeki
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 403
	mov	eax, DWORD PTR _obj$[ebp]
; Line 404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z	; icu_56::UStack::push
EXTRN	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::addElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_status$ = 12						; size = 4
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z PROC	; icu_56::UStack::push, COMDAT
; _this$ = ecx
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::UVector::addElement
; Line 408
	mov	eax, DWORD PTR _i$[ebp]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z ENDP	; icu_56::UStack::push
_TEXT	ENDS
PUBLIC	??_7SymbolTable@icu_56@@6B@			; icu_56::SymbolTable::`vftable'
PUBLIC	??0SymbolTable@icu_56@@QAE@XZ			; icu_56::SymbolTable::SymbolTable
PUBLIC	??_R4SymbolTable@icu_56@@6B@			; icu_56::SymbolTable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSymbolTable@icu_56@@@8			; icu_56::SymbolTable `RTTI Type Descriptor'
PUBLIC	??_R3SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SymbolTable@icu_56@@8			; icu_56::SymbolTable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SymbolTable@icu_56@@8		; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESymbolTable@icu_56@@UAEPAXI@Z		; icu_56::SymbolTable::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SymbolTable@icu_56@@8 DD FLAT:??_R0?AVSymbolTable@icu_56@@@8 ; icu_56::SymbolTable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R2SymbolTable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SymbolTable@icu_56@@8 ; icu_56::SymbolTable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SymbolTable@icu_56@@8
rdata$r	SEGMENT
??_R3SymbolTable@icu_56@@8 DD 00H			; icu_56::SymbolTable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSymbolTable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSymbolTable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SymbolTable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSymbolTable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SymbolTable@icu_56@@6B@
rdata$r	SEGMENT
??_R4SymbolTable@icu_56@@6B@ DD 00H			; icu_56::SymbolTable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSymbolTable@icu_56@@@8
	DD	FLAT:??_R3SymbolTable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SymbolTable@icu_56@@6B@
CONST	SEGMENT
??_7SymbolTable@icu_56@@6B@ DD FLAT:??_R4SymbolTable@icu_56@@6B@ ; icu_56::SymbolTable::`vftable'
	DD	FLAT:??_ESymbolTable@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0SymbolTable@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SymbolTable@icu_56@@QAE@XZ PROC			; icu_56::SymbolTable::SymbolTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0SymbolTable@icu_56@@QAE@XZ ENDP			; icu_56::SymbolTable::SymbolTable
_TEXT	ENDS
PUBLIC	??0SymbolTable@icu_56@@QAE@ABV01@@Z		; icu_56::SymbolTable::SymbolTable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SymbolTable@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0SymbolTable@icu_56@@QAE@ABV01@@Z PROC		; icu_56::SymbolTable::SymbolTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SymbolTable@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0SymbolTable@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::SymbolTable::SymbolTable
_TEXT	ENDS
PUBLIC	??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::SymbolTable::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::SymbolTable::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::SymbolTable::operator=
_TEXT	ENDS
PUBLIC	??_GSymbolTable@icu_56@@UAEPAXI@Z		; icu_56::SymbolTable::`scalar deleting destructor'
EXTRN	??1SymbolTable@icu_56@@UAE@XZ:PROC		; icu_56::SymbolTable::~SymbolTable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSymbolTable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSymbolTable@icu_56@@UAEPAXI@Z PROC			; icu_56::SymbolTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SymbolTable@icu_56@@UAE@XZ		; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSymbolTable@icu_56@@UAEPAXI@Z ENDP			; icu_56::SymbolTable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESymbolTable@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESymbolTable@icu_56@@UAEPAXI@Z PROC			; icu_56::SymbolTable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@11
	push	OFFSET ??1SymbolTable@icu_56@@UAE@XZ	; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@11
$LN3@vector@11:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SymbolTable@icu_56@@UAE@XZ		; icu_56::SymbolTable::~SymbolTable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@11:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESymbolTable@icu_56@@UAEPAXI@Z ENDP			; icu_56::SymbolTable::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ ; icu_56::RuleBasedBreakIterator::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ PROC ; icu_56::RuleBasedBreakIterator::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\common\rbbi.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ ENDP ; icu_56::RuleBasedBreakIterator::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ ; icu_56::RuleBasedBreakIterator::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ PROC ; icu_56::RuleBasedBreakIterator::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ ; icu_56::RuleBasedBreakIterator::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ ENDP ; icu_56::RuleBasedBreakIterator::getDynamicClassID
_TEXT	ENDS
PUBLIC	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ	; icu_56::RuleBasedBreakIterator::init
PUBLIC	??_7RuleBasedBreakIterator@icu_56@@6B@		; icu_56::RuleBasedBreakIterator::`vftable'
PUBLIC	??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
PUBLIC	??_R4RuleBasedBreakIterator@icu_56@@6B@		; icu_56::RuleBasedBreakIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRuleBasedBreakIterator@icu_56@@@8	; icu_56::RuleBasedBreakIterator `RTTI Type Descriptor'
PUBLIC	??_R3RuleBasedBreakIterator@icu_56@@8		; icu_56::RuleBasedBreakIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RuleBasedBreakIterator@icu_56@@8		; icu_56::RuleBasedBreakIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RuleBasedBreakIterator@icu_56@@8	; icu_56::RuleBasedBreakIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z ; icu_56::RuleBasedBreakIterator::operator==
PUBLIC	?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ ; icu_56::RuleBasedBreakIterator::clone
PUBLIC	?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ ; icu_56::RuleBasedBreakIterator::getText
PUBLIC	?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::getUText
PUBLIC	?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::setText
PUBLIC	?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z ; icu_56::RuleBasedBreakIterator::setText
PUBLIC	?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z ; icu_56::RuleBasedBreakIterator::adoptText
PUBLIC	?first@RuleBasedBreakIterator@icu_56@@UAEHXZ	; icu_56::RuleBasedBreakIterator::first
PUBLIC	?last@RuleBasedBreakIterator@icu_56@@UAEHXZ	; icu_56::RuleBasedBreakIterator::last
PUBLIC	?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ	; icu_56::RuleBasedBreakIterator::previous
PUBLIC	?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z	; icu_56::RuleBasedBreakIterator::next
PUBLIC	?next@RuleBasedBreakIterator@icu_56@@UAEHXZ	; icu_56::RuleBasedBreakIterator::next
PUBLIC	?current@RuleBasedBreakIterator@icu_56@@UBEHXZ	; icu_56::RuleBasedBreakIterator::current
PUBLIC	?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z ; icu_56::RuleBasedBreakIterator::following
PUBLIC	?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z ; icu_56::RuleBasedBreakIterator::preceding
PUBLIC	?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z ; icu_56::RuleBasedBreakIterator::isBoundary
PUBLIC	?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ ; icu_56::RuleBasedBreakIterator::getRuleStatus
PUBLIC	?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::getRuleStatusVec
PUBLIC	?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::createBufferClone
PUBLIC	?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::refreshInputText
PUBLIC	?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ	; icu_56::RuleBasedBreakIterator::hashCode
PUBLIC	?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ ; icu_56::RuleBasedBreakIterator::getRules
PUBLIC	?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z ; icu_56::RuleBasedBreakIterator::getBinaryRules
PUBLIC	?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ	; icu_56::RuleBasedBreakIterator::reset
PUBLIC	?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z ; icu_56::RuleBasedBreakIterator::setBreakType
EXTRN	??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@AAW4UErrorCode@@@Z:PROC ; icu_56::RBBIDataWrapper::RBBIDataWrapper
EXTRN	??2UMemory@icu_56@@SAPAXI@Z:PROC		; icu_56::UMemory::operator new
EXTRN	??0BreakIterator@icu_56@@IAE@XZ:PROC		; icu_56::BreakIterator::BreakIterator
;	COMDAT ??_R1A@?0A@EA@RuleBasedBreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RuleBasedBreakIterator@icu_56@@8 DD FLAT:??_R0?AVRuleBasedBreakIterator@icu_56@@@8 ; icu_56::RuleBasedBreakIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RuleBasedBreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2RuleBasedBreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R2RuleBasedBreakIterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@RuleBasedBreakIterator@icu_56@@8 ; icu_56::RuleBasedBreakIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BreakIterator@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3RuleBasedBreakIterator@icu_56@@8
rdata$r	SEGMENT
??_R3RuleBasedBreakIterator@icu_56@@8 DD 00H		; icu_56::RuleBasedBreakIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RuleBasedBreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRuleBasedBreakIterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleBasedBreakIterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RuleBasedBreakIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleBasedBreakIterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RuleBasedBreakIterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4RuleBasedBreakIterator@icu_56@@6B@ DD 00H		; icu_56::RuleBasedBreakIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRuleBasedBreakIterator@icu_56@@@8
	DD	FLAT:??_R3RuleBasedBreakIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7RuleBasedBreakIterator@icu_56@@6B@
CONST	SEGMENT
??_7RuleBasedBreakIterator@icu_56@@6B@ DD FLAT:??_R4RuleBasedBreakIterator@icu_56@@6B@ ; icu_56::RuleBasedBreakIterator::`vftable'
	DD	FLAT:??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ
	DD	FLAT:??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z
	DD	FLAT:?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ
	DD	FLAT:?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ
	DD	FLAT:?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z
	DD	FLAT:?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z
	DD	FLAT:?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z
	DD	FLAT:?first@RuleBasedBreakIterator@icu_56@@UAEHXZ
	DD	FLAT:?last@RuleBasedBreakIterator@icu_56@@UAEHXZ
	DD	FLAT:?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ
	DD	FLAT:?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z
	DD	FLAT:?next@RuleBasedBreakIterator@icu_56@@UAEHXZ
	DD	FLAT:?current@RuleBasedBreakIterator@icu_56@@UBEHXZ
	DD	FLAT:?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z
	DD	FLAT:?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z
	DD	FLAT:?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z
	DD	FLAT:?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ
	DD	FLAT:?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z
	DD	FLAT:?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z
	DD	FLAT:?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z
	DD	FLAT:?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ
	DD	FLAT:?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ
	DD	FLAT:?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z
	DD	FLAT:?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ
	DD	FLAT:?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -244						; size = 4
$T80943 = -236						; size = 4
$T80944 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_status$ = 12						; size = 4
??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@XZ		; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 66
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 67
	push	136					; 00000088H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T80944[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T80944[ebp], 0
	je	SHORT $LN5@RuleBasedB
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T80944[ebp]
	call	??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@AAW4UErrorCode@@@Z ; icu_56::RBBIDataWrapper::RBBIDataWrapper
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN6@RuleBasedB
$LN5@RuleBasedB:
	mov	DWORD PTR tv91[ebp], 0
$LN6@RuleBasedB:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T80943[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T80943[ebp]
	mov	DWORD PTR [eax+336], ecx
; Line 68
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RuleBasedB
	jmp	SHORT $LN3@RuleBasedB
$LN2@RuleBasedB:
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	jne	SHORT $LN3@RuleBasedB
; Line 70
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@RuleBasedB:
; Line 73
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T80944[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
EXTRN	??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z:PROC ; icu_56::RBBIDataWrapper::RBBIDataWrapper
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\rbbi.cpp
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv92 = -244						; size = 4
$T80959 = -236						; size = 4
$T80960 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
___formal$ = 12						; size = 4
_status$ = 16						; size = 4
??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@XZ		; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 81
	push	136					; 00000088H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T80960[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T80960[ebp], 0
	je	SHORT $LN5@RuleBasedB@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T80960[ebp]
	call	??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z ; icu_56::RBBIDataWrapper::RBBIDataWrapper
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN6@RuleBasedB@2
$LN5@RuleBasedB@2:
	mov	DWORD PTR tv92[ebp], 0
$LN6@RuleBasedB@2:
	mov	edx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T80959[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T80959[ebp]
	mov	DWORD PTR [eax+336], ecx
; Line 82
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RuleBasedB@2
	jmp	SHORT $LN3@RuleBasedB@2
$LN2@RuleBasedB@2:
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	jne	SHORT $LN3@RuleBasedB@2
; Line 84
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@RuleBasedB@2:
; Line 87
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T80960[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
PUBLIC	??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv132 = -256						; size = 4
$T80973 = -248						; size = 4
$T80974 = -236						; size = 4
_data$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_compiledRules$ = 8					; size = 4
_ruleLength$ = 12					; size = 4
_status$ = 16						; size = 4
??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@XZ		; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 98
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@RuleBasedB@3
; Line 99
	jmp	$LN7@RuleBasedB@3
$LN6@RuleBasedB@3:
; Line 101
	cmp	DWORD PTR _compiledRules$[ebp], 0
	je	SHORT $LN4@RuleBasedB@3
	cmp	DWORD PTR _ruleLength$[ebp], 96		; 00000060H
	jae	SHORT $LN5@RuleBasedB@3
$LN4@RuleBasedB@3:
; Line 102
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 103
	jmp	$LN7@RuleBasedB@3
$LN5@RuleBasedB@3:
; Line 105
	mov	eax, DWORD PTR _compiledRules$[ebp]
	mov	DWORD PTR _data$[ebp], eax
; Line 106
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _ruleLength$[ebp]
	jbe	SHORT $LN3@RuleBasedB@3
; Line 107
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 108
	jmp	$LN7@RuleBasedB@3
$LN3@RuleBasedB@3:
; Line 110
	push	136					; 00000088H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T80974[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T80974[ebp], 0
	je	SHORT $LN9@RuleBasedB@3
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T80974[ebp]
	call	??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z ; icu_56::RBBIDataWrapper::RBBIDataWrapper
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN10@RuleBasedB@3
$LN9@RuleBasedB@3:
	mov	DWORD PTR tv132[ebp], 0
$LN10@RuleBasedB@3:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR $T80973[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T80973[ebp]
	mov	DWORD PTR [eax+336], ecx
; Line 111
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RuleBasedB@3
	jmp	SHORT $LN7@RuleBasedB@3
$LN2@RuleBasedB@3:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	jne	SHORT $LN7@RuleBasedB@3
; Line 113
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN7@RuleBasedB@3:
; Line 116
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T80974[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
PUBLIC	??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
EXTRN	??0RBBIDataWrapper@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z:PROC ; icu_56::RBBIDataWrapper::RBBIDataWrapper
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -244						; size = 4
$T80987 = -236						; size = 4
$T80988 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_udm$ = 8						; size = 4
_status$ = 12						; size = 4
??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@XZ		; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 128
	push	136					; 00000088H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T80988[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T80988[ebp], 0
	je	SHORT $LN5@RuleBasedB@4
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _udm$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T80988[ebp]
	call	??0RBBIDataWrapper@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z ; icu_56::RBBIDataWrapper::RBBIDataWrapper
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN6@RuleBasedB@4
$LN5@RuleBasedB@4:
	mov	DWORD PTR tv91[ebp], 0
$LN6@RuleBasedB@4:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T80987[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T80987[ebp]
	mov	DWORD PTR [eax+336], ecx
; Line 129
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RuleBasedB@4
	jmp	SHORT $LN3@RuleBasedB@4
$LN2@RuleBasedB@4:
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	jne	SHORT $LN3@RuleBasedB@4
; Line 131
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@RuleBasedB@4:
; Line 134
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T80988[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
PUBLIC	??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::RuleBasedBreakIterator::operator=
PUBLIC	??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
EXTRN	?createRuleBasedBreakIterator@RBBIRuleBuilder@icu_56@@SAPAVBreakIterator@2@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::RBBIRuleBuilder::createRuleBasedBreakIterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv141 = -256						; size = 4
$T81001 = -248						; size = 4
$T81002 = -236						; size = 4
_bi$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rules$ = 8						; size = 4
_parseError$ = 12					; size = 4
_status$ = 16						; size = 4
??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 146
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@XZ		; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 147
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 148
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RuleBasedB@5
	jmp	$LN3@RuleBasedB@5
$LN2@RuleBasedB@5:
; Line 150
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rules$[ebp]
	push	edx
	call	?createRuleBasedBreakIterator@RBBIRuleBuilder@icu_56@@SAPAVBreakIterator@2@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RBBIRuleBuilder::createRuleBasedBreakIterator
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bi$[ebp], eax
; Line 155
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@RuleBasedB@5
; Line 156
	mov	eax, DWORD PTR _bi$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::RuleBasedBreakIterator::operator=
; Line 157
	mov	eax, DWORD PTR _bi$[ebp]
	mov	DWORD PTR $T81002[ebp], eax
	mov	ecx, DWORD PTR $T81002[ebp]
	mov	DWORD PTR $T81001[ebp], ecx
	cmp	DWORD PTR $T81001[ebp], 0
	je	SHORT $LN5@RuleBasedB@5
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T81001[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T81001[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN3@RuleBasedB@5
$LN5@RuleBasedB@5:
	mov	DWORD PTR tv141[ebp], 0
$LN3@RuleBasedB@5:
; Line 159
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??0RuleBasedBreakIterator@icu_56@@QAE@XZ	; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\rbbi.cpp
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@XZ$0
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0RuleBasedBreakIterator@icu_56@@QAE@XZ PROC		; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 168
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@XZ		; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 169
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 170
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@QAE@XZ ENDP		; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
PUBLIC	??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z	; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z PROC	; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BreakIterator@icu_56@@IAE@ABV01@@Z	; icu_56::BreakIterator::BreakIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
; Line 182
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ; icu_56::RuleBasedBreakIterator::init
; Line 183
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::RuleBasedBreakIterator::operator=
; Line 184
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
EXTRN	_uprv_free_56:PROC
EXTRN	?removeReference@RBBIDataWrapper@icu_56@@QAEXXZ:PROC ; icu_56::RBBIDataWrapper::removeReference
EXTRN	_utext_close_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RuleBasedBreakIterator@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RuleBasedBreakIterator@icu_56@@UAE@XZ$0
__ehfuncinfo$??1RuleBasedBreakIterator@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1RuleBasedBreakIterator@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1RuleBasedBreakIterator@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv199 = -340						; size = 4
tv184 = -340						; size = 4
tv157 = -340						; size = 4
tv144 = -340						; size = 4
tv131 = -340						; size = 4
$T81034 = -332						; size = 4
$T81035 = -320						; size = 4
$T81038 = -308						; size = 4
$T81039 = -296						; size = 4
$T81042 = -284						; size = 4
$T81043 = -272						; size = 4
$T81046 = -260						; size = 4
$T81047 = -248						; size = 4
$T81050 = -236						; size = 4
$T81051 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1RuleBasedBreakIterator@icu_56@@UAE@XZ PROC		; icu_56::RuleBasedBreakIterator::~RuleBasedBreakIterator, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RuleBasedBreakIterator@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleBasedBreakIterator@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+328]
	je	SHORT $LN5@RuleBasedB@6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+332]
	je	SHORT $LN5@RuleBasedB@6
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T81035[ebp], ecx
	mov	edx, DWORD PTR $T81035[ebp]
	mov	DWORD PTR $T81034[ebp], edx
	cmp	DWORD PTR $T81034[ebp], 0
	je	SHORT $LN8@RuleBasedB@6
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81034[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81034[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN5@RuleBasedB@6
$LN8@RuleBasedB@6:
	mov	DWORD PTR tv131[ebp], 0
$LN5@RuleBasedB@6:
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	DWORD PTR $T81039[ebp], ecx
	mov	edx, DWORD PTR $T81039[ebp]
	mov	DWORD PTR $T81038[ebp], edx
	cmp	DWORD PTR $T81038[ebp], 0
	je	SHORT $LN10@RuleBasedB@6
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81038[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81038[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN11@RuleBasedB@6
$LN10@RuleBasedB@6:
	mov	DWORD PTR tv144[ebp], 0
$LN11@RuleBasedB@6:
; Line 197
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
; Line 198
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	mov	DWORD PTR $T81043[ebp], ecx
	mov	edx, DWORD PTR $T81043[ebp]
	mov	DWORD PTR $T81042[ebp], edx
	cmp	DWORD PTR $T81042[ebp], 0
	je	SHORT $LN12@RuleBasedB@6
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81042[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81042[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN13@RuleBasedB@6
$LN12@RuleBasedB@6:
	mov	DWORD PTR tv157[ebp], 0
$LN13@RuleBasedB@6:
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_close_56
	add	esp, 4
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN4@RuleBasedB@6
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?removeReference@RBBIDataWrapper@icu_56@@QAEXXZ ; icu_56::RBBIDataWrapper::removeReference
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+336], 0
$LN4@RuleBasedB@6:
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	SHORT $LN3@RuleBasedB@6
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0
$LN3@RuleBasedB@6:
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN2@RuleBasedB@6
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR $T81047[ebp], ecx
	mov	edx, DWORD PTR $T81047[ebp]
	mov	DWORD PTR $T81046[ebp], edx
	cmp	DWORD PTR $T81046[ebp], 0
	je	SHORT $LN14@RuleBasedB@6
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81046[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81046[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv184[ebp], eax
	jmp	SHORT $LN15@RuleBasedB@6
$LN14@RuleBasedB@6:
	mov	DWORD PTR tv184[ebp], 0
$LN15@RuleBasedB@6:
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
$LN2@RuleBasedB@6:
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	je	SHORT $LN6@RuleBasedB@6
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	mov	DWORD PTR $T81051[ebp], ecx
	mov	edx, DWORD PTR $T81051[ebp]
	mov	DWORD PTR $T81050[ebp], edx
	cmp	DWORD PTR $T81050[ebp], 0
	je	SHORT $LN16@RuleBasedB@6
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81050[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81050[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN17@RuleBasedB@6
$LN16@RuleBasedB@6:
	mov	DWORD PTR tv199[ebp], 0
$LN17@RuleBasedB@6:
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
$LN6@RuleBasedB@6:
; Line 219
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RuleBasedBreakIterator@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BreakIterator@icu_56@@UAE@XZ		; icu_56::BreakIterator::~BreakIterator
__ehhandler$??1RuleBasedBreakIterator@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RuleBasedBreakIterator@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RuleBasedBreakIterator@icu_56@@UAE@XZ ENDP		; icu_56::RuleBasedBreakIterator::~RuleBasedBreakIterator
EXTRN	?addReference@RBBIDataWrapper@icu_56@@QAEPAV12@XZ:PROC ; icu_56::RBBIDataWrapper::addReference
EXTRN	_utext_clone_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv151 = -268						; size = 4
tv83 = -268						; size = 4
$T81063 = -260						; size = 4
$T81064 = -248						; size = 4
$T81067 = -236						; size = 4
$T81068 = -224						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::RuleBasedBreakIterator::operator=, COMDAT
; _this$ = ecx
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN6@operator@4
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN7@operator@4
$LN6@operator@4:
; Line 230
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	mov	DWORD PTR [eax+372], edx
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN5@operator@4
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR $T81064[ebp], ecx
	mov	edx, DWORD PTR $T81064[ebp]
	mov	DWORD PTR $T81063[ebp], edx
	cmp	DWORD PTR $T81063[ebp], 0
	je	SHORT $LN9@operator@4
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81063[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81063[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN10@operator@4
$LN9@operator@4:
	mov	DWORD PTR tv83[ebp], 0
$LN10@operator@4:
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
$LN5@operator@4:
; Line 237
	mov	DWORD PTR _status$[ebp], 0
; Line 238
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_clone_56
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+320], eax
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+328]
	je	SHORT $LN4@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+332]
	je	SHORT $LN4@operator@4
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T81068[ebp], ecx
	mov	edx, DWORD PTR $T81068[ebp]
	mov	DWORD PTR $T81067[ebp], edx
	cmp	DWORD PTR $T81067[ebp], 0
	je	SHORT $LN11@operator@4
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81067[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81067[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN4@operator@4
$LN11@operator@4:
	mov	DWORD PTR tv151[ebp], 0
$LN4@operator@4:
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
; Line 245
	mov	eax, DWORD PTR _that$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN3@operator@4
; Line 249
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax
$LN3@operator@4:
; Line 252
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN2@operator@4
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?removeReference@RBBIDataWrapper@icu_56@@QAEXXZ ; icu_56::RBBIDataWrapper::removeReference
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+336], 0
$LN2@operator@4:
; Line 256
	mov	eax, DWORD PTR _that$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN1@operator@4
; Line 257
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?addReference@RBBIDataWrapper@icu_56@@QAEPAV12@XZ ; icu_56::RBBIDataWrapper::addReference
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+336], eax
$LN1@operator@4:
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
$LN7@operator@4:
; Line 261
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@operator@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN15@operator@4:
	DD	1
	DD	$LN14@operator@4
$LN14@operator@4:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN13@operator@4
$LN13@operator@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::RuleBasedBreakIterator::operator=
_TEXT	ENDS
PUBLIC	?strstr@@YAPADPADPBD@Z				; strstr
PUBLIC	??_C@_05IMBNNINJ@trace?$AA@			; `string'
PUBLIC	??_C@_0M@NMJCIPMM@U_RBBIDEBUG?$AA@		; `string'
EXTRN	__imp__getenv:PROC
EXTRN	_utext_openUChars_56:PROC
;	COMDAT ??_C@_05IMBNNINJ@trace?$AA@
CONST	SEGMENT
??_C@_05IMBNNINJ@trace?$AA@ DB 'trace', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NMJCIPMM@U_RBBIDEBUG?$AA@
CONST	SEGMENT
??_C@_0M@NMJCIPMM@U_RBBIDEBUG?$AA@ DB 'U_RBBIDEBUG', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?init@RuleBasedBreakIterator@icu_56@@IAEXXZ
_TEXT	SEGMENT
_debugEnv$72673 = -32					; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
?init@RuleBasedBreakIterator@icu_56@@IAEXXZ PROC	; icu_56::RuleBasedBreakIterator::init, COMDAT
; _this$ = ecx
; Line 271
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 272
	mov	DWORD PTR _status$[ebp], 0
; Line 273
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	call	_utext_openUChars_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
; Line 276
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+336], 0
; Line 278
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 1
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 1
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0
; Line 287
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
; Line 290
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
; Line 294
	movsx	eax, BYTE PTR ?debugInitDone@?1??init@RuleBasedBreakIterator@icu_56@@IAEXXZ@4CA
	test	eax, eax
	jne	SHORT $LN3@init
; Line 295
	mov	esi, esp
	push	OFFSET ??_C@_0M@NMJCIPMM@U_RBBIDEBUG?$AA@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _debugEnv$72673[ebp], eax
; Line 296
	cmp	DWORD PTR _debugEnv$72673[ebp], 0
	je	SHORT $LN1@init
	push	OFFSET ??_C@_05IMBNNINJ@trace?$AA@
	mov	eax, DWORD PTR _debugEnv$72673[ebp]
	push	eax
	call	?strstr@@YAPADPADPBD@Z			; strstr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@init
; Line 297
	mov	BYTE PTR _fTrace, 1
$LN1@init:
; Line 299
	mov	BYTE PTR ?debugInitDone@?1??init@RuleBasedBreakIterator@icu_56@@IAEXXZ@4CA, 1
$LN3@init:
; Line 302
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@init:
	DD	1
	DD	$LN6@init
$LN6@init:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@init
$LN5@init:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?init@RuleBasedBreakIterator@icu_56@@IAEXXZ ENDP	; icu_56::RuleBasedBreakIterator::init
_TEXT	ENDS
EXTRN	__imp__strstr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strstr@@YAPADPADPBD@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__SubStr$ = 12						; size = 4
?strstr@@YAPADPADPBD@Z PROC				; strstr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __SubStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strstr@@YAPADPADPBD@Z ENDP				; strstr
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\rbbi.cpp
xdata$x	SEGMENT
__unwindtable$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ$0
__ehfuncinfo$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T81084 = -236						; size = 4
$T81085 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ PROC ; icu_56::RuleBasedBreakIterator::clone, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 315
	push	376					; 00000178H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81085[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81085[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T81085[ebp]
	call	??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z ; icu_56::RuleBasedBreakIterator::RuleBasedBreakIterator
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T81084[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T81084[ebp]
; Line 316
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ$0:
	mov	eax, DWORD PTR $T81085[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ ENDP ; icu_56::RuleBasedBreakIterator::clone
EXTRN	??8RBBIDataWrapper@icu_56@@QBECABV01@@Z:PROC	; icu_56::RBBIDataWrapper::operator==
EXTRN	_utext_equals_56:PROC
EXTRN	__imp_??9type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z
_TEXT	SEGMENT
_that2$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z PROC ; icu_56::RuleBasedBreakIterator::operator==, COMDAT
; _this$ = ecx
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@operator@5
; Line 325
	xor	al, al
	jmp	SHORT $LN5@operator@5
$LN4@operator@5:
; Line 328
	mov	eax, DWORD PTR _that$[ebp]
	mov	DWORD PTR _that2$[ebp], eax
; Line 330
	mov	eax, DWORD PTR _that2$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_equals_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator@5
; Line 333
	xor	al, al
	jmp	SHORT $LN5@operator@5
$LN3@operator@5:
; Line 339
	mov	eax, DWORD PTR _that2$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+336]
	cmp	edx, DWORD PTR [ecx+336]
	je	SHORT $LN1@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN2@operator@5
	mov	eax, DWORD PTR _that2$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN2@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	push	ecx
	mov	edx, DWORD PTR _that2$[ebp]
	mov	ecx, DWORD PTR [edx+336]
	call	??8RBBIDataWrapper@icu_56@@QBECABV01@@Z	; icu_56::RBBIDataWrapper::operator==
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator@5
$LN1@operator@5:
; Line 341
	mov	al, 1
	jmp	SHORT $LN5@operator@5
$LN2@operator@5:
; Line 343
	xor	al, al
$LN5@operator@5:
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z ENDP ; icu_56::RuleBasedBreakIterator::operator==
_TEXT	ENDS
EXTRN	?hashCode@RBBIDataWrapper@icu_56@@QAEHXZ:PROC	; icu_56::RBBIDataWrapper::hashCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ
_TEXT	SEGMENT
_hash$ = -20						; size = 4
_this$ = -8						; size = 4
?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ PROC	; icu_56::RuleBasedBreakIterator::hashCode, COMDAT
; _this$ = ecx
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	DWORD PTR _hash$[ebp], 0
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN1@hashCode
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?hashCode@RBBIDataWrapper@icu_56@@QAEHXZ ; icu_56::RBBIDataWrapper::hashCode
	mov	DWORD PTR _hash$[ebp], eax
$LN1@hashCode:
; Line 356
	mov	eax, DWORD PTR _hash$[ebp]
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ ENDP	; icu_56::RuleBasedBreakIterator::hashCode
_TEXT	ENDS
EXTRN	??0UCharCharacterIterator@icu_56@@QAE@PB_WH@Z:PROC ; icu_56::UCharCharacterIterator::UCharCharacterIterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv150 = -268						; size = 4
tv91 = -268						; size = 4
$T81101 = -260						; size = 4
$T81102 = -248						; size = 4
$T81105 = -236						; size = 4
$T81106 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ut$ = 8						; size = 4
_status$ = 12						; size = 4
?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::setText, COMDAT
; _this$ = ecx
; Line 360
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 361
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@setText
; Line 362
	jmp	$LN5@setText
$LN4@setText:
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 365
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _ut$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_clone_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+332], 0
	jne	$LN3@setText
; Line 375
	push	24					; 00000018H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81102[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81102[ebp], 0
	je	SHORT $LN7@setText
	push	0
	push	OFFSET ?c@?7??setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z@4_WB
	mov	ecx, DWORD PTR $T81102[ebp]
	call	??0UCharCharacterIterator@icu_56@@QAE@PB_WH@Z ; icu_56::UCharCharacterIterator::UCharCharacterIterator
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@setText
$LN7@setText:
	mov	DWORD PTR tv91[ebp], 0
$LN8@setText:
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T81101[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T81101[ebp]
	mov	DWORD PTR [ecx+332], edx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+332], 0
	jne	SHORT $LN3@setText
; Line 377
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 378
	jmp	$LN5@setText
$LN3@setText:
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+328]
	je	SHORT $LN1@setText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+332]
	je	SHORT $LN1@setText
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T81106[ebp], ecx
	mov	edx, DWORD PTR $T81106[ebp]
	mov	DWORD PTR $T81105[ebp], edx
	cmp	DWORD PTR $T81105[ebp], 0
	je	SHORT $LN9@setText
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81105[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81105[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN1@setText
$LN9@setText:
	mov	DWORD PTR tv150[ebp], 0
$LN1@setText:
; Line 386
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+332]
	mov	DWORD PTR [eax+324], edx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@setText:
; Line 389
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T81102[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::setText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_fillIn$ = 8						; size = 4
_status$ = 12						; size = 4
?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::getUText, COMDAT
; _this$ = ecx
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 393
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _fillIn$[ebp]
	push	eax
	call	_utext_clone_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _result$[ebp], eax
; Line 394
	mov	eax, DWORD PTR _result$[ebp]
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::getUText
_TEXT	ENDS
EXTRN	?getRuleSourceString@RBBIDataWrapper@icu_56@@QBEABVUnicodeString@2@XZ:PROC ; icu_56::RBBIDataWrapper::getRuleSourceString
_BSS	SEGMENT
?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B DD 01H DUP (?) ; `icu_56::RuleBasedBreakIterator::getRules'::`7'::s
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ$0
__ehfuncinfo$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
tv77 = -244						; size = 4
$T81120 = -236						; size = 4
$T81121 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ PROC ; icu_56::RuleBasedBreakIterator::getRules, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN3@getRules
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	call	?getRuleSourceString@RBBIDataWrapper@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::RBBIDataWrapper::getRuleSourceString
	jmp	SHORT $LN4@getRules
; Line 406
	jmp	SHORT $LN4@getRules
$LN3@getRules:
; Line 408
	cmp	DWORD PTR ?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B, 0
	jne	SHORT $LN1@getRules
; Line 413
	push	64					; 00000040H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81121[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81121[ebp], 0
	je	SHORT $LN6@getRules
	mov	ecx, DWORD PTR $T81121[ebp]
	call	??0UnicodeString@icu_56@@QAE@XZ		; icu_56::UnicodeString::UnicodeString
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@getRules
$LN6@getRules:
	mov	DWORD PTR tv77[ebp], 0
$LN7@getRules:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T81120[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T81120[ebp]
	mov	DWORD PTR ?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B, ecx
$LN1@getRules:
; Line 415
	mov	eax, DWORD PTR ?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B
$LN4@getRules:
; Line 417
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ$0:
	mov	eax, DWORD PTR $T81121[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ ENDP ; icu_56::RuleBasedBreakIterator::getRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ PROC ; icu_56::RuleBasedBreakIterator::getText, COMDAT
; _this$ = ecx
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+324]
; Line 429
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ ENDP ; icu_56::RuleBasedBreakIterator::getText
_TEXT	ENDS
EXTRN	_utext_openCharacterIterator_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T81135 = -236						; size = 4
$T81136 = -224						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_newText$ = 8						; size = 4
?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z PROC ; icu_56::RuleBasedBreakIterator::adoptText, COMDAT
; _this$ = ecx
; Line 437
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+328]
	je	SHORT $LN4@adoptText
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+332]
	je	SHORT $LN4@adoptText
; Line 441
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T81136[ebp], ecx
	mov	edx, DWORD PTR $T81136[ebp]
	mov	DWORD PTR $T81135[ebp], edx
	cmp	DWORD PTR $T81135[ebp], 0
	je	SHORT $LN7@adoptText
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81135[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81135[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN4@adoptText
$LN7@adoptText:
	mov	DWORD PTR tv89[ebp], 0
$LN4@adoptText:
; Line 444
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newText$[ebp]
	mov	DWORD PTR [eax+324], ecx
; Line 445
	mov	DWORD PTR _status$[ebp], 0
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 447
	cmp	DWORD PTR _newText$[ebp], 0
	je	SHORT $LN2@adoptText
	mov	ecx, DWORD PTR _newText$[ebp]
	call	?startIndex@CharacterIterator@icu_56@@QBEHXZ ; icu_56::CharacterIterator::startIndex
	test	eax, eax
	je	SHORT $LN3@adoptText
$LN2@adoptText:
; Line 450
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	call	_utext_openUChars_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 451
	jmp	SHORT $LN1@adoptText
$LN3@adoptText:
; Line 452
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_openCharacterIterator_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
$LN1@adoptText:
; Line 454
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 455
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@adoptText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@adoptText:
	DD	1
	DD	$LN10@adoptText
$LN10@adoptText:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@adoptText
$LN9@adoptText:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z ENDP ; icu_56::RuleBasedBreakIterator::adoptText
_TEXT	ENDS
EXTRN	?setText@StringCharacterIterator@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::StringCharacterIterator::setText
EXTRN	??0StringCharacterIterator@icu_56@@QAE@ABVUnicodeString@1@@Z:PROC ; icu_56::StringCharacterIterator::StringCharacterIterator
EXTRN	_utext_openConstUnicodeString_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z$0
__ehfuncinfo$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv144 = -280						; size = 4
tv84 = -280						; size = 4
$T81144 = -272						; size = 4
$T81145 = -260						; size = 4
$T81148 = -248						; size = 4
$T81149 = -236						; size = 4
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_newText$ = 8						; size = 4
?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z PROC ; icu_56::RuleBasedBreakIterator::setText, COMDAT
; _this$ = ecx
; Line 463
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 464
	mov	DWORD PTR _status$[ebp], 0
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 466
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_openConstUnicodeString_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 472
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+328], 0
	jne	SHORT $LN3@setText@2
; Line 473
	push	88					; 00000058H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81145[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81145[ebp], 0
	je	SHORT $LN6@setText@2
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T81145[ebp]
	call	??0StringCharacterIterator@icu_56@@QAE@ABVUnicodeString@1@@Z ; icu_56::StringCharacterIterator::StringCharacterIterator
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@setText@2
$LN6@setText@2:
	mov	DWORD PTR tv84[ebp], 0
$LN7@setText@2:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T81144[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T81144[ebp]
	mov	DWORD PTR [edx+328], eax
; Line 474
	jmp	SHORT $LN2@setText@2
$LN3@setText@2:
; Line 475
	mov	eax, DWORD PTR _newText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+328]
	call	?setText@StringCharacterIterator@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::StringCharacterIterator::setText
$LN2@setText@2:
; Line 478
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+328]
	je	SHORT $LN1@setText@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+332]
	je	SHORT $LN1@setText@2
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T81149[ebp], ecx
	mov	edx, DWORD PTR $T81149[ebp]
	mov	DWORD PTR $T81148[ebp], edx
	cmp	DWORD PTR $T81148[ebp], 0
	je	SHORT $LN8@setText@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81148[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81148[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN1@setText@2
$LN8@setText@2:
	mov	DWORD PTR tv144[ebp], 0
$LN1@setText@2:
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	mov	DWORD PTR [eax+324], edx
; Line 484
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 485
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@setText@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN14@setText@2:
	DD	1
	DD	$LN13@setText@2
$LN13@setText@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@setText@2
$LN11@setText@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z$0:
	mov	eax, DWORD PTR $T81145[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z ENDP ; icu_56::RuleBasedBreakIterator::setText
EXTRN	_utext_setNativeIndex_56:PROC
EXTRN	_utext_getNativeIndex_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv159 = -228						; size = 8
_pos$ = -24						; size = 8
_this$ = -8						; size = 4
_input$ = 8						; size = 4
_status$ = 12						; size = 4
?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::refreshInputText, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 495
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@refreshInp
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN5@refreshInp
$LN4@refreshInp:
; Line 498
	cmp	DWORD PTR _input$[ebp], 0
	jne	SHORT $LN3@refreshInp
; Line 499
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 500
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN5@refreshInp
$LN3@refreshInp:
; Line 502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _pos$[ebp], eax
	mov	DWORD PTR _pos$[ebp+4], edx
; Line 504
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_clone_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 505
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@refreshInp
; Line 506
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN5@refreshInp
$LN2@refreshInp:
; Line 508
	mov	eax, DWORD PTR _pos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR tv159[ebp], eax
	mov	DWORD PTR tv159[ebp+4], edx
	mov	edx, DWORD PTR tv159[ebp]
	cmp	edx, DWORD PTR _pos$[ebp]
	jne	SHORT $LN7@refreshInp
	mov	eax, DWORD PTR tv159[ebp+4]
	cmp	eax, DWORD PTR _pos$[ebp+4]
	je	SHORT $LN1@refreshInp
$LN7@refreshInp:
; Line 514
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@refreshInp:
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
$LN5@refreshInp:
; Line 517
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::refreshInputText
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?first@RuleBasedBreakIterator@icu_56@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?first@RuleBasedBreakIterator@icu_56@@UAEHXZ PROC	; icu_56::RuleBasedBreakIterator::first, COMDAT
; _this$ = ecx
; Line 524
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 525
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 526
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 527
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 1
; Line 531
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 532
	xor	eax, eax
; Line 533
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?first@RuleBasedBreakIterator@icu_56@@UAEHXZ ENDP	; icu_56::RuleBasedBreakIterator::first
_TEXT	ENDS
EXTRN	_utext_nativeLength_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?last@RuleBasedBreakIterator@icu_56@@UAEHXZ
_TEXT	SEGMENT
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
?last@RuleBasedBreakIterator@icu_56@@UAEHXZ PROC	; icu_56::RuleBasedBreakIterator::last, COMDAT
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 540
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 541
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	jne	SHORT $LN1@last
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 543
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 1
; Line 544
	or	eax, -1
	jmp	SHORT $LN2@last
$LN1@last:
; Line 547
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 0
; Line 548
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR _pos$[ebp], eax
; Line 549
	mov	eax, DWORD PTR _pos$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 550
	mov	eax, DWORD PTR _pos$[ebp]
$LN2@last:
; Line 551
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?last@RuleBasedBreakIterator@icu_56@@UAEHXZ ENDP	; icu_56::RuleBasedBreakIterator::last
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z PROC	; icu_56::RuleBasedBreakIterator::next, COMDAT
; _this$ = ecx
; Line 562
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 563
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN4@next:
; Line 564
	cmp	DWORD PTR _n$[ebp], 0
	jle	SHORT $LN2@next
; Line 565
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 566
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 567
	jmp	SHORT $LN4@next
$LN2@next:
; Line 568
	cmp	DWORD PTR _n$[ebp], 0
	jge	SHORT $LN1@next
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 570
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 571
	jmp	SHORT $LN2@next
$LN1@next:
; Line 572
	mov	eax, DWORD PTR _result$[ebp]
; Line 573
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z ENDP	; icu_56::RuleBasedBreakIterator::next
_TEXT	ENDS
PUBLIC	?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z ; icu_56::RuleBasedBreakIterator::checkDictionary
PUBLIC	?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handleNext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@RuleBasedBreakIterator@icu_56@@UAEHXZ
_TEXT	SEGMENT
_result$ = -44						; size = 4
_startPos$ = -32					; size = 4
_pos$72802 = -20					; size = 4
_this$ = -8						; size = 4
?next@RuleBasedBreakIterator@icu_56@@UAEHXZ PROC	; icu_56::RuleBasedBreakIterator::next, COMDAT
; _this$ = ecx
; Line 579
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 582
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	SHORT $LN4@next@2
; Line 583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+360], ecx
	jge	SHORT $LN3@next@2
; Line 584
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], ecx
; Line 585
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _pos$72802[ebp], ecx
; Line 586
	mov	eax, DWORD PTR _pos$72802[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 587
	mov	eax, DWORD PTR _pos$72802[ebp]
	jmp	SHORT $LN5@next@2
; Line 589
	jmp	SHORT $LN4@next@2
$LN3@next@2:
; Line 590
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@next@2:
; Line 594
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$[ebp], eax
; Line 595
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0
; Line 596
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handleNext
	mov	DWORD PTR _result$[ebp], eax
; Line 597
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+348], 0
	jbe	SHORT $LN1@next@2
; Line 598
	push	0
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z ; icu_56::RuleBasedBreakIterator::checkDictionary
	mov	DWORD PTR _result$[ebp], eax
$LN1@next@2:
; Line 600
	mov	eax, DWORD PTR _result$[ebp]
$LN5@next@2:
; Line 601
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?next@RuleBasedBreakIterator@icu_56@@UAEHXZ ENDP	; icu_56::RuleBasedBreakIterator::next
_TEXT	ENDS
PUBLIC	?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handlePrevious
EXTRN	_utext_previous32_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ
_TEXT	SEGMENT
tv181 = -296						; size = 4
tv174 = -292						; size = 4
_breakTagValid$ = -89					; size = 1
_lastTag$ = -80						; size = 4
_lastResult$ = -68					; size = 4
_start$ = -56						; size = 4
_pos$72816 = -44					; size = 4
_startPos$ = -32					; size = 4
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ PROC	; icu_56::RuleBasedBreakIterator::previous, COMDAT
; _this$ = ecx
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 613
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	$LN14@previous
; Line 614
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	jle	SHORT $LN13@previous
; Line 615
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], ecx
; Line 618
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	jg	SHORT $LN12@previous
; Line 619
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 0
$LN12@previous:
; Line 621
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _pos$72816[ebp], ecx
; Line 622
	mov	eax, DWORD PTR _pos$72816[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 623
	mov	eax, DWORD PTR _pos$72816[ebp]
	jmp	$LN15@previous
; Line 625
	jmp	SHORT $LN14@previous
$LN13@previous:
; Line 626
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@previous:
; Line 631
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	SHORT $LN9@previous
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startPos$[ebp], eax
	cmp	DWORD PTR _startPos$[ebp], 0
	jne	SHORT $LN10@previous
$LN9@previous:
; Line 632
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 633
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 1
; Line 634
	or	eax, -1
	jmp	$LN15@previous
$LN10@previous:
; Line 637
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN7@previous
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN8@previous
$LN7@previous:
; Line 638
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handlePrevious
	mov	DWORD PTR _result$[ebp], eax
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+348], 0
	jbe	SHORT $LN6@previous
; Line 640
	push	1
	mov	eax, DWORD PTR _startPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z ; icu_56::RuleBasedBreakIterator::checkDictionary
	mov	DWORD PTR _result$[ebp], eax
$LN6@previous:
; Line 642
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN15@previous
$LN8@previous:
; Line 652
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$[ebp], eax
; Line 654
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN17@previous
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN17@previous
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv174[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv174[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv174[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv181[ebp], edx
	jmp	SHORT $LN18@previous
$LN17@previous:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv181[ebp], eax
$LN18@previous:
; Line 655
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handlePrevious
	mov	DWORD PTR _lastResult$[ebp], eax
; Line 656
	cmp	DWORD PTR _lastResult$[ebp], -1
	jne	SHORT $LN5@previous
; Line 657
	mov	DWORD PTR _lastResult$[ebp], 0
; Line 658
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN5@previous:
; Line 660
	mov	eax, DWORD PTR _lastResult$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 661
	mov	DWORD PTR _lastTag$[ebp], 0
; Line 662
	mov	BYTE PTR _breakTagValid$[ebp], 0
$LN4@previous:
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 670
	cmp	DWORD PTR _result$[ebp], -1
	je	SHORT $LN1@previous
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jl	SHORT $LN2@previous
$LN1@previous:
; Line 671
	jmp	SHORT $LN3@previous
$LN2@previous:
; Line 673
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR _lastResult$[ebp], eax
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+340]
	mov	DWORD PTR _lastTag$[ebp], ecx
; Line 675
	mov	BYTE PTR _breakTagValid$[ebp], 1
; Line 676
	jmp	SHORT $LN4@previous
$LN3@previous:
; Line 687
	mov	eax, DWORD PTR _lastResult$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 688
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lastTag$[ebp]
	mov	DWORD PTR [eax+340], ecx
; Line 689
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _breakTagValid$[ebp]
	mov	BYTE PTR [eax+344], cl
; Line 694
	mov	eax, DWORD PTR _lastResult$[ebp]
$LN15@previous:
; Line 695
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ ENDP	; icu_56::RuleBasedBreakIterator::previous
_TEXT	ENDS
EXTRN	_utext_next32_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z
_TEXT	SEGMENT
tv394 = -292						; size = 8
tv572 = -284						; size = 8
tv391 = -284						; size = 8
tv255 = -284						; size = 4
tv248 = -280						; size = 4
tv201 = -280						; size = 4
_result$72865 = -80					; size = 4
_result$72863 = -68					; size = 4
_oldresult$72859 = -56					; size = 4
_result$72853 = -44					; size = 4
_result$ = -32						; size = 4
_pos$72848 = -20					; size = 4
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z PROC	; icu_56::RuleBasedBreakIterator::following, COMDAT
; _this$ = ecx
; Line 703
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 707
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	SHORT $LN20@following
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR tv391[ebp], esi
	mov	DWORD PTR tv391[ebp+4], edi
	mov	DWORD PTR tv394[ebp], eax
	mov	DWORD PTR tv394[ebp+4], edx
	mov	edx, DWORD PTR tv391[ebp+4]
	cmp	edx, DWORD PTR tv394[ebp+4]
	jl	SHORT $LN21@following
	jg	SHORT $LN20@following
	mov	eax, DWORD PTR tv391[ebp]
	cmp	eax, DWORD PTR tv394[ebp]
	jb	SHORT $LN21@following
$LN20@following:
; Line 708
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 709
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN22@following
	jmp	SHORT $LN19@following
$LN21@following:
; Line 711
	cmp	DWORD PTR _offset$[ebp], 0
	jge	SHORT $LN19@following
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN22@following
$LN19@following:
; Line 717
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 718
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _offset$[ebp], eax
; Line 724
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	$LN17@following
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jl	$LN16@following
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [eax+ecx*4-4]
	jge	SHORT $LN16@following
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
$LN15@following:
; Line 729
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [eax+ecx*4]
	jl	SHORT $LN14@following
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], ecx
; Line 731
	jmp	SHORT $LN15@following
$LN14@following:
; Line 732
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _pos$72848[ebp], ecx
; Line 733
	mov	eax, DWORD PTR _pos$72848[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 734
	mov	eax, DWORD PTR _pos$72848[ebp]
	jmp	$LN22@following
; Line 736
	jmp	SHORT $LN17@following
$LN16@following:
; Line 737
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@following:
; Line 745
	mov	DWORD PTR _result$[ebp], 0
; Line 747
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	cmp	DWORD PTR [ecx+16], 0
	je	$LN12@following
; Line 749
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 754
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN24@following
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN24@following
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR [edx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR tv201[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR [ecx+40], edx
	jmp	SHORT $LN25@following
$LN24@following:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv201[ebp], eax
$LN25@following:
; Line 756
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handlePrevious
; Line 757
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72853[ebp], eax
$LN11@following:
; Line 758
	mov	eax, DWORD PTR _result$72853[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jg	SHORT $LN10@following
; Line 759
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72853[ebp], eax
; Line 760
	jmp	SHORT $LN11@following
$LN10@following:
; Line 761
	mov	eax, DWORD PTR _result$72853[ebp]
	jmp	$LN22@following
$LN12@following:
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	cmp	DWORD PTR [ecx+12], 0
	je	$LN9@following
; Line 765
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 766
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN26@following
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN26@following
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv248[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv248[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv248[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv255[ebp], edx
	jmp	SHORT $LN27@following
$LN26@following:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv255[ebp], eax
$LN27@following:
; Line 768
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handleNext
; Line 772
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _oldresult$72859[ebp], eax
$LN8@following:
; Line 773
	mov	eax, DWORD PTR _oldresult$72859[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jle	SHORT $LN7@following
; Line 774
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72863[ebp], eax
; Line 775
	mov	eax, DWORD PTR _result$72863[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jg	SHORT $LN6@following
; Line 776
	mov	eax, DWORD PTR _oldresult$72859[ebp]
	jmp	$LN22@following
$LN6@following:
; Line 778
	mov	eax, DWORD PTR _result$72863[ebp]
	mov	DWORD PTR _oldresult$72859[ebp], eax
; Line 779
	jmp	SHORT $LN8@following
$LN7@following:
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72865[ebp], eax
; Line 781
	mov	eax, DWORD PTR _result$72865[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jg	SHORT $LN5@following
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN22@following
$LN5@following:
; Line 784
	mov	eax, DWORD PTR _result$72865[ebp]
	jmp	$LN22@following
$LN9@following:
; Line 795
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 797
	cmp	DWORD PTR _offset$[ebp], 0
	je	SHORT $LN3@following
	cmp	DWORD PTR _offset$[ebp], 1
	jne	SHORT $LN4@following
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR tv572[ebp], eax
	mov	DWORD PTR tv572[ebp+4], edx
	mov	edx, DWORD PTR tv572[ebp]
	or	edx, DWORD PTR tv572[ebp+4]
	jne	SHORT $LN4@following
$LN3@following:
; Line 798
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN22@following
$LN4@following:
; Line 800
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN2@following:
; Line 802
	cmp	DWORD PTR _result$[ebp], -1
	je	SHORT $LN1@following
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jg	SHORT $LN1@following
; Line 803
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 804
	jmp	SHORT $LN2@following
$LN1@following:
; Line 806
	mov	eax, DWORD PTR _result$[ebp]
$LN22@following:
; Line 807
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z ENDP	; icu_56::RuleBasedBreakIterator::following
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z
_TEXT	SEGMENT
tv485 = -280						; size = 8
tv482 = -272						; size = 8
tv294 = -272						; size = 8
tv272 = -272						; size = 4
tv245 = -272						; size = 8
tv196 = -272						; size = 8
tv340 = -268						; size = 4
tv265 = -268						; size = 4
tv227 = -268						; size = 4
_result$72907 = -68					; size = 4
_result$72905 = -56					; size = 4
_oldresult$72901 = -44					; size = 4
_result$72894 = -32					; size = 4
_newOffset$72888 = -20					; size = 4
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z PROC	; icu_56::RuleBasedBreakIterator::preceding, COMDAT
; _this$ = ecx
; Line 815
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 819
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	SHORT $LN18@preceding
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR tv482[ebp], esi
	mov	DWORD PTR tv482[ebp+4], edi
	mov	DWORD PTR tv485[ebp], eax
	mov	DWORD PTR tv485[ebp+4], edx
	mov	edx, DWORD PTR tv482[ebp+4]
	cmp	edx, DWORD PTR tv485[ebp+4]
	jl	SHORT $LN19@preceding
	jg	SHORT $LN18@preceding
	mov	eax, DWORD PTR tv482[ebp]
	cmp	eax, DWORD PTR tv485[ebp]
	jbe	SHORT $LN19@preceding
$LN18@preceding:
; Line 820
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN20@preceding
	jmp	SHORT $LN17@preceding
$LN19@preceding:
; Line 822
	cmp	DWORD PTR _offset$[ebp], 0
	jge	SHORT $LN17@preceding
; Line 823
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN20@preceding
$LN17@preceding:
; Line 828
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 829
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	DWORD PTR _offset$[ebp], eax
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	$LN15@preceding
; Line 837
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jle	$LN14@preceding
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [eax+ecx*4-4]
	jg	$LN14@preceding
; Line 838
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
$LN13@preceding:
; Line 840
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+356]
	jge	SHORT $LN12@preceding
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [eax+ecx*4]
	jle	SHORT $LN12@preceding
; Line 841
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], ecx
	jmp	SHORT $LN13@preceding
$LN12@preceding:
; Line 842
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], ecx
; Line 845
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	jg	SHORT $LN11@preceding
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 0
$LN11@preceding:
; Line 848
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	eax, DWORD PTR [eax+ecx*4]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 849
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	mov	eax, DWORD PTR [eax+ecx*4]
	jmp	$LN20@preceding
; Line 851
	jmp	SHORT $LN15@preceding
$LN14@preceding:
; Line 852
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@preceding:
; Line 860
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	cmp	DWORD PTR [ecx+12], 0
	je	$LN9@preceding
; Line 862
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 863
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN22@preceding
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv196[ebp], eax
	mov	DWORD PTR tv196[ebp+4], edx
	jmp	SHORT $LN23@preceding
$LN22@preceding:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv196[ebp], eax
	mov	DWORD PTR tv196[ebp+4], edx
$LN23@preceding:
	mov	ecx, DWORD PTR tv196[ebp]
	mov	DWORD PTR _newOffset$72888[ebp], ecx
; Line 864
	mov	eax, DWORD PTR _newOffset$72888[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	je	$LN8@preceding
; Line 870
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN24@preceding
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN24@preceding
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR [edx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR tv227[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR [ecx+40], edx
	jmp	SHORT $LN25@preceding
$LN24@preceding:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv227[ebp], eax
$LN25@preceding:
; Line 871
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN26@preceding
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv245[ebp], eax
	mov	DWORD PTR tv245[ebp+4], edx
	jmp	SHORT $LN27@preceding
$LN26@preceding:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv245[ebp], eax
	mov	DWORD PTR tv245[ebp+4], edx
$LN27@preceding:
	mov	ecx, DWORD PTR tv245[ebp]
	mov	DWORD PTR _offset$[ebp], ecx
$LN8@preceding:
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN28@preceding
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN28@preceding
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv265[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv265[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv265[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv272[ebp], edx
	jmp	SHORT $LN29@preceding
$LN28@preceding:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv272[ebp], eax
$LN29@preceding:
; Line 880
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handleNext
; Line 881
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN30@preceding
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv294[ebp], eax
	mov	DWORD PTR tv294[ebp+4], edx
	jmp	SHORT $LN31@preceding
$LN30@preceding:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv294[ebp], eax
	mov	DWORD PTR tv294[ebp+4], edx
$LN31@preceding:
	mov	ecx, DWORD PTR tv294[ebp]
	mov	DWORD PTR _result$72894[ebp], ecx
$LN7@preceding:
; Line 882
	mov	eax, DWORD PTR _result$72894[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jl	SHORT $LN6@preceding
; Line 883
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72894[ebp], eax
; Line 884
	jmp	SHORT $LN7@preceding
$LN6@preceding:
; Line 885
	mov	eax, DWORD PTR _result$72894[ebp]
	jmp	$LN20@preceding
$LN9@preceding:
; Line 887
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	cmp	DWORD PTR [ecx+16], 0
	je	$LN5@preceding
; Line 893
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN32@preceding
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN32@preceding
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR [edx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR tv340[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR [ecx+40], edx
	jmp	SHORT $LN33@preceding
$LN32@preceding:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv340[ebp], eax
$LN33@preceding:
; Line 897
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ; icu_56::RuleBasedBreakIterator::handlePrevious
; Line 902
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _oldresult$72901[ebp], eax
$LN4@preceding:
; Line 903
	mov	eax, DWORD PTR _oldresult$72901[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jge	SHORT $LN3@preceding
; Line 904
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72905[ebp], eax
; Line 905
	mov	eax, DWORD PTR _result$72905[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jl	SHORT $LN2@preceding
; Line 906
	mov	eax, DWORD PTR _oldresult$72901[ebp]
	jmp	SHORT $LN20@preceding
$LN2@preceding:
; Line 908
	mov	eax, DWORD PTR _result$72905[ebp]
	mov	DWORD PTR _oldresult$72901[ebp], eax
; Line 909
	jmp	SHORT $LN4@preceding
$LN3@preceding:
; Line 910
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$72907[ebp], eax
; Line 911
	mov	eax, DWORD PTR _result$72907[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jl	SHORT $LN1@preceding
; Line 912
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN20@preceding
$LN1@preceding:
; Line 914
	mov	eax, DWORD PTR _result$72907[ebp]
	jmp	SHORT $LN20@preceding
$LN5@preceding:
; Line 918
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 919
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@preceding:
; Line 920
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z ENDP	; icu_56::RuleBasedBreakIterator::preceding
_TEXT	ENDS
EXTRN	_utext_previous32From_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z
_TEXT	SEGMENT
tv219 = -244						; size = 8
tv216 = -236						; size = 8
tv157 = -236						; size = 8
_result$ = -29						; size = 1
_backOne$ = -20						; size = 4
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z PROC	; icu_56::RuleBasedBreakIterator::isBoundary, COMDAT
; _this$ = ecx
; Line 929
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 931
	cmp	DWORD PTR _offset$[ebp], 0
	jne	SHORT $LN4@isBoundary
; Line 932
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 933
	mov	al, 1
	jmp	$LN5@isBoundary
$LN4@isBoundary:
; Line 936
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	cmp	DWORD PTR _offset$[ebp], eax
	jne	SHORT $LN3@isBoundary
; Line 937
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 938
	mov	al, 1
	jmp	$LN5@isBoundary
$LN3@isBoundary:
; Line 942
	cmp	DWORD PTR _offset$[ebp], 0
	jge	SHORT $LN2@isBoundary
; Line 943
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 944
	xor	al, al
	jmp	$LN5@isBoundary
$LN2@isBoundary:
; Line 947
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR tv216[ebp], esi
	mov	DWORD PTR tv216[ebp+4], edi
	mov	DWORD PTR tv219[ebp], eax
	mov	DWORD PTR tv219[ebp+4], edx
	mov	edx, DWORD PTR tv216[ebp+4]
	cmp	edx, DWORD PTR tv219[ebp+4]
	jl	SHORT $LN1@isBoundary
	jg	SHORT $LN9@isBoundary
	mov	eax, DWORD PTR tv216[ebp]
	cmp	eax, DWORD PTR tv219[ebp]
	jbe	SHORT $LN1@isBoundary
$LN9@isBoundary:
; Line 948
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 949
	xor	al, al
	jmp	$LN5@isBoundary
$LN1@isBoundary:
; Line 955
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32From_56
	add	esp, 12					; 0000000cH
; Line 956
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN7@isBoundary
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv157[ebp], eax
	mov	DWORD PTR tv157[ebp+4], edx
	jmp	SHORT $LN8@isBoundary
$LN7@isBoundary:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv157[ebp], eax
	mov	DWORD PTR tv157[ebp+4], edx
$LN8@isBoundary:
	mov	ecx, DWORD PTR tv157[ebp]
	mov	DWORD PTR _backOne$[ebp], ecx
; Line 957
	mov	esi, esp
	mov	eax, DWORD PTR _backOne$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _offset$[ebp]
	sete	cl
	mov	BYTE PTR _result$[ebp], cl
; Line 958
	mov	al, BYTE PTR _result$[ebp]
$LN5@isBoundary:
; Line 959
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z ENDP	; icu_56::RuleBasedBreakIterator::isBoundary
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?current@RuleBasedBreakIterator@icu_56@@UBEHXZ
_TEXT	SEGMENT
tv81 = -224						; size = 8
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
?current@RuleBasedBreakIterator@icu_56@@UBEHXZ PROC	; icu_56::RuleBasedBreakIterator::current, COMDAT
; _this$ = ecx
; Line 965
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 966
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN3@current
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv81[ebp], eax
	mov	DWORD PTR tv81[ebp+4], edx
	jmp	SHORT $LN4@current
$LN3@current:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	mov	DWORD PTR tv81[ebp+4], edx
$LN4@current:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 967
	mov	eax, DWORD PTR _pos$[ebp]
; Line 968
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?current@RuleBasedBreakIterator@icu_56@@UBEHXZ ENDP	; icu_56::RuleBasedBreakIterator::current
_TEXT	ENDS
PUBLIC	??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@	; `string'
PUBLIC	??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@ ; `string'
PUBLIC	??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?1??handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA ; `icu_56::RuleBasedBreakIterator::handleNext'::`2'::__LINE__Var
PUBLIC	??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@	; `string'
PUBLIC	??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@		; `string'
PUBLIC	??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@		; `string'
PUBLIC	??_C@_0BF@CHIKCOEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4ld?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0CJ@PLMEEDH@Handle?5Next?5?5?5pos?5?5?5char?5?5state?5@ ; `string'
EXTRN	__imp___wassert:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp__puts:PROC
;	COMDAT ??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@
CONST	SEGMENT
??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@ DB 'result = %d', 0aH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@
CONST	SEGMENT
??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@ DB 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H
	DB	'y', 00H, '<', 00H, 'f', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, '-', 00H, '>', 00H, 'f', 00H, 'H', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'f', 00H, 'C'
	DB	00H, 'a', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'r', 00H, 'b', 00H, 'b', 00H, 'i', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA DD 03e4H ; `icu_56::RuleBasedBreakIterator::handleNext'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@
CONST	SEGMENT
??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@ DB '%3d  %3d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@
CONST	SEGMENT
??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@ DB '%5x  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@
CONST	SEGMENT
??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@ DB '"%c"  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CHIKCOEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4ld?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BF@CHIKCOEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4ld?5?5?5?$AA@ DB '     '
	DB	'        %4ld   ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PLMEEDH@Handle?5Next?5?5?5pos?5?5?5char?5?5state?5@
CONST	SEGMENT
??_C@_0CJ@PLMEEDH@Handle?5Next?5?5?5pos?5?5?5char?5?5state?5@ DB 'Handle '
	DB	'Next   pos   char  state category', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z
_TEXT	SEGMENT
tv902 = -452						; size = 8
tv824 = -452						; size = 8
tv739 = -452						; size = 8
tv454 = -452						; size = 8
tv351 = -452						; size = 8
tv304 = -452						; size = 8
tv92 = -452						; size = 8
tv436 = -448						; size = 4
tv389 = -448						; size = 4
tv177 = -448						; size = 4
tv154 = -448						; size = 4
___offset$73019 = -248					; size = 8
___offset$73013 = -232					; size = 8
_r$73004 = -216						; size = 4
___offset$72997 = -204					; size = 8
___offset$72970 = -188					; size = 4
___lead16$72968 = -176					; size = 2
_tableRowLen$ = -164					; size = 4
_tableData$ = -152					; size = 4
_lookAheadHardBreak$ = -137				; size = 1
_lookaheadResult$ = -128				; size = 4
_initialPosition$ = -116				; size = 4
_result$ = -104						; size = 4
_lookaheadTagIdx$ = -92					; size = 4
_lookaheadStatus$ = -80					; size = 4
_c$ = -68						; size = 4
_row$ = -56						; size = 4
_mode$ = -44						; size = 4
_category$ = -32					; size = 2
_state$ = -20						; size = 4
_this$ = -8						; size = 4
_statetable$ = 8					; size = 4
?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z PROC ; icu_56::RuleBasedBreakIterator::handleNext, COMDAT
; _this$ = ecx
; Line 996
	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 998
	xor	eax, eax
	mov	WORD PTR _category$[ebp], ax
; Line 1003
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
; Line 1004
	mov	DWORD PTR _lookaheadTagIdx$[ebp], 0
; Line 1005
	mov	DWORD PTR _result$[ebp], 0
; Line 1006
	mov	DWORD PTR _initialPosition$[ebp], 0
; Line 1007
	mov	DWORD PTR _lookaheadResult$[ebp], 0
; Line 1008
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 1
	setne	dl
	mov	BYTE PTR _lookAheadHardBreak$[ebp], dl
; Line 1009
	mov	eax, DWORD PTR _statetable$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _tableData$[ebp], eax
; Line 1010
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _tableRowLen$[ebp], ecx
; Line 1013
	movsx	eax, BYTE PTR _fTrace
	test	eax, eax
	je	SHORT $LN40@handleNext
; Line 1014
	mov	esi, esp
	push	OFFSET ??_C@_0CJ@PLMEEDH@Handle?5Next?5?5?5pos?5?5?5char?5?5state?5@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN40@handleNext:
; Line 1019
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 1
; Line 1020
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 1023
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN43@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR tv92[ebp+4], edx
	jmp	SHORT $LN44@handleNext
$LN43@handleNext:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR tv92[ebp+4], edx
$LN44@handleNext:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR _initialPosition$[ebp], ecx
; Line 1024
	mov	eax, DWORD PTR _initialPosition$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN45@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN45@handleNext
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR [edx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR tv154[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR [ecx+40], edx
	jmp	SHORT $LN46@handleNext
$LN45@handleNext:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv154[ebp], eax
$LN46@handleNext:
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR _c$[ebp], ecx
; Line 1026
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN38@handleNext
	cmp	DWORD PTR _c$[ebp], -1
	jne	SHORT $LN39@handleNext
$LN38@handleNext:
; Line 1027
	or	eax, -1
	jmp	$LN41@handleNext
$LN39@handleNext:
; Line 1031
	mov	DWORD PTR _state$[ebp], 1
; Line 1034
	mov	eax, DWORD PTR _tableRowLen$[ebp]
	imul	eax, DWORD PTR _state$[ebp]
	add	eax, DWORD PTR _tableData$[ebp]
	mov	DWORD PTR _row$[ebp], eax
; Line 1037
	mov	DWORD PTR _mode$[ebp], 1
; Line 1038
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2
	je	SHORT $LN36@handleNext
; Line 1039
	mov	eax, 2
	mov	WORD PTR _category$[ebp], ax
; Line 1040
	mov	DWORD PTR _mode$[ebp], 0
$LN36@handleNext:
; Line 1047
	cmp	DWORD PTR _c$[ebp], -1
	jne	SHORT $LN34@handleNext
; Line 1049
	cmp	DWORD PTR _mode$[ebp], 2
	jne	SHORT $LN33@handleNext
; Line 1053
	mov	eax, DWORD PTR _lookaheadResult$[ebp]
	cmp	eax, DWORD PTR _result$[ebp]
	jle	SHORT $LN32@handleNext
; Line 1057
	mov	eax, DWORD PTR _lookaheadResult$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1058
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lookaheadTagIdx$[ebp]
	mov	DWORD PTR [eax+340], ecx
; Line 1059
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
$LN32@handleNext:
; Line 1061
	jmp	$LN35@handleNext
$LN33@handleNext:
; Line 1064
	mov	DWORD PTR _mode$[ebp], 2
; Line 1065
	mov	eax, 1
	mov	WORD PTR _category$[ebp], ax
$LN34@handleNext:
; Line 1073
	cmp	DWORD PTR _mode$[ebp], 1
	jne	$LN31@handleNext
; Line 1079
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN30@handleNext
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN47@handleNext
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN47@handleNext
	mov	DWORD PTR tv177[ebp], 320		; 00000140H
	jmp	SHORT $LN48@handleNext
$LN47@handleNext:
	mov	DWORD PTR tv177[ebp], 0
$LN48@handleNext:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv177[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN29@handleNext
$LN30@handleNext:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN28@handleNext
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$72968[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$72968[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$72968[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$72970[ebp], eax
	cmp	DWORD PTR ___offset$72970[ebp], 0
	jle	SHORT $LN27@handleNext
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$72970[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN26@handleNext
$LN27@handleNext:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN26@handleNext:
	jmp	SHORT $LN29@handleNext
$LN28@handleNext:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN29@handleNext:
; Line 1086
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, 16384				; 00004000H
	je	SHORT $LN31@handleNext
; Line 1087
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+348], ecx
; Line 1089
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, -16385				; ffffbfffH
	mov	WORD PTR _category$[ebp], ax
$LN31@handleNext:
; Line 1094
	movsx	eax, BYTE PTR _fTrace
	test	eax, eax
	je	$LN23@handleNext
; Line 1095
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	esi, esp
	push	edx
	push	eax
	push	OFFSET ??_C@_0BF@CHIKCOEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4ld?5?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1096
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	jl	SHORT $LN22@handleNext
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jge	SHORT $LN22@handleNext
; Line 1097
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET ??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1098
	jmp	SHORT $LN21@handleNext
$LN22@handleNext:
; Line 1099
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET ??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@handleNext:
; Line 1101
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	push	OFFSET ??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@handleNext:
; Line 1111
	movzx	eax, WORD PTR _category$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	ecx, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx+12]
	jb	SHORT $LN49@handleNext
	mov	edx, DWORD PTR ?__LINE__Var@?1??handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA
	add	edx, 115				; 00000073H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@handleNext:
; Line 1112
	movzx	eax, WORD PTR _category$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+8]
	mov	DWORD PTR _state$[ebp], edx
; Line 1115
	mov	eax, DWORD PTR _tableRowLen$[ebp]
	imul	eax, DWORD PTR _state$[ebp]
	add	eax, DWORD PTR _tableData$[ebp]
	mov	DWORD PTR _row$[ebp], eax
; Line 1118
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	ecx, -1
	jne	$LN20@handleNext
; Line 1120
	cmp	DWORD PTR _mode$[ebp], 0
	je	$LN19@handleNext
; Line 1121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN50@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv304[ebp], eax
	mov	DWORD PTR tv304[ebp+4], edx
	jmp	SHORT $LN51@handleNext
$LN50@handleNext:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv304[ebp], eax
	mov	DWORD PTR tv304[ebp+4], edx
$LN51@handleNext:
	mov	ecx, DWORD PTR tv304[ebp]
	mov	DWORD PTR _result$[ebp], ecx
$LN19@handleNext:
; Line 1123
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+340], ecx
$LN20@handleNext:
; Line 1126
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	test	ecx, ecx
	je	$LN18@handleNext
; Line 1128
	cmp	DWORD PTR _lookaheadStatus$[ebp], 0
	je	$LN17@handleNext
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	ecx, DWORD PTR _lookaheadStatus$[ebp]
	jne	$LN17@handleNext
; Line 1130
	mov	eax, DWORD PTR _lookaheadResult$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lookaheadTagIdx$[ebp]
	mov	DWORD PTR [eax+340], ecx
; Line 1132
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
; Line 1134
	movsx	eax, BYTE PTR _lookAheadHardBreak$[ebp]
	test	eax, eax
	je	$LN16@handleNext
; Line 1135
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$72997[ebp], eax
	mov	DWORD PTR ___offset$72997[ebp+4], edx
	cmp	DWORD PTR ___offset$72997[ebp+4], 0
	jl	SHORT $LN15@handleNext
	jg	SHORT $LN60@handleNext
	cmp	DWORD PTR ___offset$72997[ebp], 0
	jb	SHORT $LN15@handleNext
$LN60@handleNext:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv739[ebp], eax
	mov	DWORD PTR tv739[ebp+4], edx
	mov	edx, DWORD PTR ___offset$72997[ebp+4]
	cmp	edx, DWORD PTR tv739[ebp+4]
	jg	SHORT $LN15@handleNext
	jl	SHORT $LN61@handleNext
	mov	eax, DWORD PTR ___offset$72997[ebp]
	cmp	eax, DWORD PTR tv739[ebp]
	ja	SHORT $LN15@handleNext
$LN61@handleNext:
	mov	eax, DWORD PTR ___offset$72997[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN14@handleNext
$LN15@handleNext:
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN14@handleNext:
; Line 1136
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN41@handleNext
$LN16@handleNext:
; Line 1140
	jmp	$continueOn$73002
	jmp	$continueOn$73002
$LN17@handleNext:
; Line 1143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN52@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv351[ebp], eax
	mov	DWORD PTR tv351[ebp+4], edx
	jmp	SHORT $LN53@handleNext
$LN52@handleNext:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv351[ebp], eax
	mov	DWORD PTR tv351[ebp+4], edx
$LN53@handleNext:
	mov	ecx, DWORD PTR tv351[ebp]
	mov	DWORD PTR _r$73004[ebp], ecx
; Line 1144
	mov	eax, DWORD PTR _r$73004[ebp]
	mov	DWORD PTR _lookaheadResult$[ebp], eax
; Line 1145
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _lookaheadStatus$[ebp], ecx
; Line 1146
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _lookaheadTagIdx$[ebp], ecx
; Line 1147
	jmp	SHORT $continueOn$73002
	jmp	SHORT $continueOn$73002
$LN18@handleNext:
; Line 1151
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $continueOn$73002
; Line 1154
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
$continueOn$73002:
; Line 1158
	cmp	DWORD PTR _state$[ebp], 0
	jne	SHORT $LN10@handleNext
; Line 1162
	jmp	$LN35@handleNext
$LN10@handleNext:
; Line 1169
	cmp	DWORD PTR _mode$[ebp], 1
	jne	$LN9@handleNext
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN54@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN54@handleNext
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR [edx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR tv389[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR [ecx+40], edx
	jmp	SHORT $LN55@handleNext
$LN54@handleNext:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv389[ebp], eax
$LN55@handleNext:
	mov	ecx, DWORD PTR tv389[ebp]
	mov	DWORD PTR _c$[ebp], ecx
; Line 1171
	jmp	SHORT $LN8@handleNext
$LN9@handleNext:
; Line 1172
	cmp	DWORD PTR _mode$[ebp], 0
	jne	SHORT $LN8@handleNext
; Line 1173
	mov	DWORD PTR _mode$[ebp], 1
$LN8@handleNext:
; Line 1178
	jmp	$LN36@handleNext
$LN35@handleNext:
; Line 1185
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _initialPosition$[ebp]
	jne	$LN6@handleNext
; Line 1186
	mov	eax, DWORD PTR _initialPosition$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$73013[ebp], eax
	mov	DWORD PTR ___offset$73013[ebp+4], edx
	cmp	DWORD PTR ___offset$73013[ebp+4], 0
	jl	SHORT $LN5@handleNext
	jg	SHORT $LN62@handleNext
	cmp	DWORD PTR ___offset$73013[ebp], 0
	jb	SHORT $LN5@handleNext
$LN62@handleNext:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv824[ebp], eax
	mov	DWORD PTR tv824[ebp+4], edx
	mov	edx, DWORD PTR ___offset$73013[ebp+4]
	cmp	edx, DWORD PTR tv824[ebp+4]
	jg	SHORT $LN5@handleNext
	jl	SHORT $LN63@handleNext
	mov	eax, DWORD PTR ___offset$73013[ebp]
	cmp	eax, DWORD PTR tv824[ebp]
	ja	SHORT $LN5@handleNext
$LN63@handleNext:
	mov	eax, DWORD PTR ___offset$73013[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN4@handleNext
$LN5@handleNext:
	mov	eax, DWORD PTR _initialPosition$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN4@handleNext:
; Line 1187
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN56@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN56@handleNext
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR [edx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR tv436[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR [ecx+40], edx
	jmp	SHORT $LN57@handleNext
$LN56@handleNext:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv436[ebp], eax
$LN57@handleNext:
; Line 1188
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN58@handleNext
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv454[ebp], eax
	mov	DWORD PTR tv454[ebp+4], edx
	jmp	SHORT $LN59@handleNext
$LN58@handleNext:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv454[ebp], eax
	mov	DWORD PTR tv454[ebp+4], edx
$LN59@handleNext:
	mov	ecx, DWORD PTR tv454[ebp]
	mov	DWORD PTR _result$[ebp], ecx
$LN6@handleNext:
; Line 1192
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$73019[ebp], eax
	mov	DWORD PTR ___offset$73019[ebp+4], edx
	cmp	DWORD PTR ___offset$73019[ebp+4], 0
	jl	SHORT $LN3@handleNext
	jg	SHORT $LN64@handleNext
	cmp	DWORD PTR ___offset$73019[ebp], 0
	jb	SHORT $LN3@handleNext
$LN64@handleNext:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv902[ebp], eax
	mov	DWORD PTR tv902[ebp+4], edx
	mov	edx, DWORD PTR ___offset$73019[ebp+4]
	cmp	edx, DWORD PTR tv902[ebp+4]
	jg	SHORT $LN3@handleNext
	jl	SHORT $LN65@handleNext
	mov	eax, DWORD PTR ___offset$73019[ebp]
	cmp	eax, DWORD PTR tv902[ebp]
	ja	SHORT $LN3@handleNext
$LN65@handleNext:
	mov	eax, DWORD PTR ___offset$73019[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN2@handleNext
$LN3@handleNext:
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN2@handleNext:
; Line 1194
	movsx	eax, BYTE PTR _fTrace
	test	eax, eax
	je	SHORT $LN1@handleNext
; Line 1195
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	push	OFFSET ??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@handleNext:
; Line 1198
	mov	eax, DWORD PTR _result$[ebp]
$LN41@handleNext:
; Line 1199
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ENDP ; icu_56::RuleBasedBreakIterator::handleNext
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA ; `icu_56::RuleBasedBreakIterator::handlePrevious'::`2'::__LINE__Var
PUBLIC	??_C@_0BE@JHAHEGBC@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4d?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0CN@HJKPBAFK@Handle?5Previous?5?5?5pos?5?5?5char?5?5st@ ; `string'
;	COMDAT ?__LINE__Var@?1??handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA DD 04bdH ; `icu_56::RuleBasedBreakIterator::handlePrevious'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@JHAHEGBC@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4d?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BE@JHAHEGBC@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4d?5?5?5?$AA@ DB '      '
	DB	'       %4d   ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HJKPBAFK@Handle?5Previous?5?5?5pos?5?5?5char?5?5st@
CONST	SEGMENT
??_C@_0CN@HJKPBAFK@Handle?5Previous?5?5?5pos?5?5?5char?5?5st@ DB 'Handle '
	DB	'Previous   pos   char  state category', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z
_TEXT	SEGMENT
tv1042 = -432						; size = 8
tv962 = -432						; size = 8
tv876 = -432						; size = 8
tv738 = -432						; size = 8
tv503 = -432						; size = 8
tv485 = -432						; size = 4
tv441 = -432						; size = 4
tv408 = -432						; size = 8
tv365 = -432						; size = 8
tv225 = -432						; size = 4
tv172 = -432						; size = 4
tv145 = -432						; size = 8
tv94 = -432						; size = 8
tv478 = -428						; size = 4
tv434 = -428						; size = 4
tv236 = -428						; size = 4
tv218 = -428						; size = 4
tv165 = -428						; size = 4
___offset$73114 = -228					; size = 8
___offset$73108 = -212					; size = 8
_r$73099 = -196						; size = 4
___offset$73092 = -184					; size = 8
___offset$73070 = -168					; size = 4
___lead16$73068 = -156					; size = 2
___offset$73055 = -144					; size = 8
_lookAheadHardBreak$ = -125				; size = 1
_lookaheadResult$ = -116				; size = 4
_initialPosition$ = -104				; size = 4
_result$ = -92						; size = 4
_lookaheadStatus$ = -80					; size = 4
_c$ = -68						; size = 4
_row$ = -56						; size = 4
_mode$ = -44						; size = 4
_category$ = -32					; size = 2
_state$ = -20						; size = 4
_this$ = -8						; size = 4
_statetable$ = 8					; size = 4
?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z PROC ; icu_56::RuleBasedBreakIterator::handlePrevious, COMDAT
; _this$ = ecx
; Line 1213
	push	ebp
	mov	ebp, esp
	sub	esp, 432				; 000001b0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 108				; 0000006cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1215
	xor	eax, eax
	mov	WORD PTR _category$[ebp], ax
; Line 1219
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
; Line 1220
	mov	DWORD PTR _result$[ebp], 0
; Line 1221
	mov	DWORD PTR _initialPosition$[ebp], 0
; Line 1222
	mov	DWORD PTR _lookaheadResult$[ebp], 0
; Line 1223
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 1
	setne	dl
	mov	BYTE PTR _lookAheadHardBreak$[ebp], dl
; Line 1226
	movsx	eax, BYTE PTR _fTrace
	test	eax, eax
	je	SHORT $LN43@handlePrev
; Line 1227
	mov	esi, esp
	push	OFFSET ??_C@_0CN@HJKPBAFK@Handle?5Previous?5?5?5pos?5?5?5char?5?5st@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN43@handlePrev:
; Line 1235
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 0
; Line 1236
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 1239
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	$LN41@handlePrev
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	$LN41@handlePrev
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN46@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR tv94[ebp+4], edx
	jmp	SHORT $LN47@handlePrev
$LN46@handlePrev:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR tv94[ebp+4], edx
$LN47@handlePrev:
	mov	ecx, DWORD PTR tv94[ebp]
	or	ecx, DWORD PTR tv94[ebp+4]
	jne	SHORT $LN42@handlePrev
$LN41@handlePrev:
; Line 1240
	or	eax, -1
	jmp	$LN44@handlePrev
$LN42@handlePrev:
; Line 1244
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN48@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv145[ebp], eax
	mov	DWORD PTR tv145[ebp+4], edx
	jmp	SHORT $LN49@handlePrev
$LN48@handlePrev:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv145[ebp], eax
	mov	DWORD PTR tv145[ebp+4], edx
$LN49@handlePrev:
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR _initialPosition$[ebp], ecx
; Line 1245
	mov	eax, DWORD PTR _initialPosition$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1246
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN50@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN50@handlePrev
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv165[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv165[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv165[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv172[ebp], edx
	jmp	SHORT $LN51@handlePrev
$LN50@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv172[ebp], eax
$LN51@handlePrev:
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR _c$[ebp], edx
; Line 1249
	mov	DWORD PTR _state$[ebp], 1
; Line 1251
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR _statetable$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	mov	DWORD PTR _row$[ebp], eax
; Line 1252
	mov	eax, 3
	mov	WORD PTR _category$[ebp], ax
; Line 1253
	mov	DWORD PTR _mode$[ebp], 1
; Line 1254
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2
	je	SHORT $LN39@handlePrev
; Line 1255
	mov	eax, 2
	mov	WORD PTR _category$[ebp], ax
; Line 1256
	mov	DWORD PTR _mode$[ebp], 0
$LN39@handlePrev:
; Line 1263
	cmp	DWORD PTR _c$[ebp], -1
	jne	$LN37@handlePrev
; Line 1265
	cmp	DWORD PTR _mode$[ebp], 2
	jne	$LN36@handlePrev
; Line 1269
	mov	eax, DWORD PTR _lookaheadResult$[ebp]
	cmp	eax, DWORD PTR _result$[ebp]
	jge	SHORT $LN35@handlePrev
; Line 1273
	mov	eax, DWORD PTR _lookaheadResult$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1274
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
	jmp	$LN34@handlePrev
$LN35@handlePrev:
; Line 1275
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _initialPosition$[ebp]
	jne	$LN34@handlePrev
; Line 1278
	mov	eax, DWORD PTR _initialPosition$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$73055[ebp], eax
	mov	DWORD PTR ___offset$73055[ebp+4], edx
	cmp	DWORD PTR ___offset$73055[ebp+4], 0
	jl	SHORT $LN32@handlePrev
	jg	SHORT $LN67@handlePrev
	cmp	DWORD PTR ___offset$73055[ebp], 0
	jb	SHORT $LN32@handlePrev
$LN67@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv738[ebp], eax
	mov	DWORD PTR tv738[ebp+4], edx
	mov	edx, DWORD PTR ___offset$73055[ebp+4]
	cmp	edx, DWORD PTR tv738[ebp+4]
	jg	SHORT $LN32@handlePrev
	jl	SHORT $LN68@handlePrev
	mov	eax, DWORD PTR ___offset$73055[ebp]
	cmp	eax, DWORD PTR tv738[ebp]
	ja	SHORT $LN32@handlePrev
$LN68@handlePrev:
	mov	eax, DWORD PTR ___offset$73055[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN31@handlePrev
$LN32@handlePrev:
	mov	eax, DWORD PTR _initialPosition$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN31@handlePrev:
; Line 1279
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN52@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN52@handlePrev
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv218[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv218[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv218[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv225[ebp], edx
	jmp	SHORT $LN34@handlePrev
$LN52@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv225[ebp], eax
$LN34@handlePrev:
; Line 1281
	jmp	$LN38@handlePrev
$LN36@handlePrev:
; Line 1284
	mov	DWORD PTR _mode$[ebp], 2
; Line 1285
	mov	eax, 1
	mov	WORD PTR _category$[ebp], ax
$LN37@handlePrev:
; Line 1293
	cmp	DWORD PTR _mode$[ebp], 1
	jne	$LN30@handlePrev
; Line 1299
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN29@handlePrev
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN54@handlePrev
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN54@handlePrev
	mov	DWORD PTR tv236[ebp], 320		; 00000140H
	jmp	SHORT $LN55@handlePrev
$LN54@handlePrev:
	mov	DWORD PTR tv236[ebp], 0
$LN55@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv236[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN28@handlePrev
$LN29@handlePrev:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN27@handlePrev
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73068[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73068[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73068[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73070[ebp], eax
	cmp	DWORD PTR ___offset$73070[ebp], 0
	jle	SHORT $LN26@handlePrev
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73070[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN25@handlePrev
$LN26@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN25@handlePrev:
	jmp	SHORT $LN28@handlePrev
$LN27@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN28@handlePrev:
; Line 1306
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, 16384				; 00004000H
	je	SHORT $LN30@handlePrev
; Line 1307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+348], ecx
; Line 1309
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, -16385				; ffffbfffH
	mov	WORD PTR _category$[ebp], ax
$LN30@handlePrev:
; Line 1314
	movsx	eax, BYTE PTR _fTrace
	test	eax, eax
	je	$LN22@handlePrev
; Line 1315
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_getNativeIndex_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BE@JHAHEGBC@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4d?5?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1316
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	jl	SHORT $LN21@handlePrev
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jge	SHORT $LN21@handlePrev
; Line 1317
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET ??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1318
	jmp	SHORT $LN20@handlePrev
$LN21@handlePrev:
; Line 1319
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET ??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@handlePrev:
; Line 1321
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	push	OFFSET ??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@handlePrev:
; Line 1331
	movzx	eax, WORD PTR _category$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	ecx, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx+12]
	jb	SHORT $LN56@handlePrev
	mov	edx, DWORD PTR ?__LINE__Var@?1??handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA
	add	edx, 118				; 00000076H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN56@handlePrev:
; Line 1332
	movzx	eax, WORD PTR _category$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+8]
	mov	DWORD PTR _state$[ebp], edx
; Line 1334
	mov	eax, DWORD PTR _statetable$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR _statetable$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	mov	DWORD PTR _row$[ebp], eax
; Line 1336
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	ecx, -1
	jne	$LN19@handlePrev
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN57@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv365[ebp], eax
	mov	DWORD PTR tv365[ebp+4], edx
	jmp	SHORT $LN58@handlePrev
$LN57@handlePrev:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv365[ebp], eax
	mov	DWORD PTR tv365[ebp+4], edx
$LN58@handlePrev:
	mov	ecx, DWORD PTR tv365[ebp]
	mov	DWORD PTR _result$[ebp], ecx
$LN19@handlePrev:
; Line 1341
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	test	ecx, ecx
	je	$LN18@handlePrev
; Line 1343
	cmp	DWORD PTR _lookaheadStatus$[ebp], 0
	je	$LN17@handlePrev
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	ecx, DWORD PTR _lookaheadStatus$[ebp]
	jne	$LN17@handlePrev
; Line 1345
	mov	eax, DWORD PTR _lookaheadResult$[ebp]
	mov	DWORD PTR _result$[ebp], eax
; Line 1346
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
; Line 1348
	movsx	eax, BYTE PTR _lookAheadHardBreak$[ebp]
	test	eax, eax
	je	$LN16@handlePrev
; Line 1349
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$73092[ebp], eax
	mov	DWORD PTR ___offset$73092[ebp+4], edx
	cmp	DWORD PTR ___offset$73092[ebp+4], 0
	jl	SHORT $LN15@handlePrev
	jg	SHORT $LN69@handlePrev
	cmp	DWORD PTR ___offset$73092[ebp], 0
	jb	SHORT $LN15@handlePrev
$LN69@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv876[ebp], eax
	mov	DWORD PTR tv876[ebp+4], edx
	mov	edx, DWORD PTR ___offset$73092[ebp+4]
	cmp	edx, DWORD PTR tv876[ebp+4]
	jg	SHORT $LN15@handlePrev
	jl	SHORT $LN70@handlePrev
	mov	eax, DWORD PTR ___offset$73092[ebp]
	cmp	eax, DWORD PTR tv876[ebp]
	ja	SHORT $LN15@handlePrev
$LN70@handlePrev:
	mov	eax, DWORD PTR ___offset$73092[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN14@handlePrev
$LN15@handlePrev:
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN14@handlePrev:
; Line 1350
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN44@handlePrev
$LN16@handlePrev:
; Line 1354
	jmp	$continueOn$73097
	jmp	$continueOn$73097
$LN17@handlePrev:
; Line 1357
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN59@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv408[ebp], eax
	mov	DWORD PTR tv408[ebp+4], edx
	jmp	SHORT $LN60@handlePrev
$LN59@handlePrev:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv408[ebp], eax
	mov	DWORD PTR tv408[ebp+4], edx
$LN60@handlePrev:
	mov	ecx, DWORD PTR tv408[ebp]
	mov	DWORD PTR _r$73099[ebp], ecx
; Line 1358
	mov	eax, DWORD PTR _r$73099[ebp]
	mov	DWORD PTR _lookaheadResult$[ebp], eax
; Line 1359
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _lookaheadStatus$[ebp], ecx
; Line 1360
	jmp	SHORT $continueOn$73097
	jmp	SHORT $continueOn$73097
$LN18@handlePrev:
; Line 1364
	mov	eax, DWORD PTR _row$[ebp]
	movsx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $continueOn$73097
; Line 1367
	mov	DWORD PTR _lookaheadStatus$[ebp], 0
$continueOn$73097:
; Line 1371
	cmp	DWORD PTR _state$[ebp], 0
	jne	SHORT $LN10@handlePrev
; Line 1375
	jmp	$LN38@handlePrev
$LN10@handlePrev:
; Line 1382
	cmp	DWORD PTR _mode$[ebp], 1
	jne	$LN9@handlePrev
; Line 1383
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN61@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN61@handlePrev
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv434[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv434[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv434[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv441[ebp], edx
	jmp	SHORT $LN62@handlePrev
$LN61@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv441[ebp], eax
$LN62@handlePrev:
	mov	edx, DWORD PTR tv441[ebp]
	mov	DWORD PTR _c$[ebp], edx
; Line 1384
	jmp	SHORT $LN8@handlePrev
$LN9@handlePrev:
; Line 1385
	cmp	DWORD PTR _mode$[ebp], 0
	jne	SHORT $LN8@handlePrev
; Line 1386
	mov	DWORD PTR _mode$[ebp], 1
$LN8@handlePrev:
; Line 1389
	jmp	$LN39@handlePrev
$LN38@handlePrev:
; Line 1396
	mov	eax, DWORD PTR _result$[ebp]
	cmp	eax, DWORD PTR _initialPosition$[ebp]
	jne	$LN6@handlePrev
; Line 1397
	mov	eax, DWORD PTR _initialPosition$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$73108[ebp], eax
	mov	DWORD PTR ___offset$73108[ebp+4], edx
	cmp	DWORD PTR ___offset$73108[ebp+4], 0
	jl	SHORT $LN5@handlePrev
	jg	SHORT $LN71@handlePrev
	cmp	DWORD PTR ___offset$73108[ebp], 0
	jb	SHORT $LN5@handlePrev
$LN71@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv962[ebp], eax
	mov	DWORD PTR tv962[ebp+4], edx
	mov	edx, DWORD PTR ___offset$73108[ebp+4]
	cmp	edx, DWORD PTR tv962[ebp+4]
	jg	SHORT $LN5@handlePrev
	jl	SHORT $LN72@handlePrev
	mov	eax, DWORD PTR ___offset$73108[ebp]
	cmp	eax, DWORD PTR tv962[ebp]
	ja	SHORT $LN5@handlePrev
$LN72@handlePrev:
	mov	eax, DWORD PTR ___offset$73108[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN4@handlePrev
$LN5@handlePrev:
	mov	eax, DWORD PTR _initialPosition$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN4@handlePrev:
; Line 1398
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN63@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN63@handlePrev
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv478[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv478[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv478[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv485[ebp], edx
	jmp	SHORT $LN64@handlePrev
$LN63@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv485[ebp], eax
$LN64@handlePrev:
; Line 1399
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN65@handlePrev
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv503[ebp], eax
	mov	DWORD PTR tv503[ebp+4], edx
	jmp	SHORT $LN66@handlePrev
$LN65@handlePrev:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv503[ebp], eax
	mov	DWORD PTR tv503[ebp+4], edx
$LN66@handlePrev:
	mov	ecx, DWORD PTR tv503[ebp]
	mov	DWORD PTR _result$[ebp], ecx
$LN6@handlePrev:
; Line 1403
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$73114[ebp], eax
	mov	DWORD PTR ___offset$73114[ebp+4], edx
	cmp	DWORD PTR ___offset$73114[ebp+4], 0
	jl	SHORT $LN3@handlePrev
	jg	SHORT $LN73@handlePrev
	cmp	DWORD PTR ___offset$73114[ebp], 0
	jb	SHORT $LN3@handlePrev
$LN73@handlePrev:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv1042[ebp], eax
	mov	DWORD PTR tv1042[ebp+4], edx
	mov	edx, DWORD PTR ___offset$73114[ebp+4]
	cmp	edx, DWORD PTR tv1042[ebp+4]
	jg	SHORT $LN3@handlePrev
	jl	SHORT $LN74@handlePrev
	mov	eax, DWORD PTR ___offset$73114[ebp]
	cmp	eax, DWORD PTR tv1042[ebp]
	ja	SHORT $LN3@handlePrev
$LN74@handlePrev:
	mov	eax, DWORD PTR ___offset$73114[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN2@handlePrev
$LN3@handlePrev:
	mov	eax, DWORD PTR _result$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN2@handlePrev:
; Line 1405
	movsx	eax, BYTE PTR _fTrace
	test	eax, eax
	je	SHORT $LN1@handlePrev
; Line 1406
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	push	OFFSET ??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@handlePrev:
; Line 1409
	mov	eax, DWORD PTR _result$[ebp]
$LN44@handlePrev:
; Line 1410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z ENDP ; icu_56::RuleBasedBreakIterator::handlePrevious
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ PROC	; icu_56::RuleBasedBreakIterator::reset, COMDAT
; _this$ = ecx
; Line 1415
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1416
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	SHORT $LN1@reset
; Line 1417
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@reset:
; Line 1419
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0
; Line 1420
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0
; Line 1421
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0
; Line 1422
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
; Line 1423
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ ENDP	; icu_56::RuleBasedBreakIterator::reset
_TEXT	ENDS
PUBLIC	??_C@_1JC@FMHHAABE@?$AAf?$AAL?$AAa?$AAs?$AAt?$AAR?$AAu?$AAl?$AAe?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAL?$AAa@ ; `string'
PUBLIC	??_C@_1BC@HPDBKOEJ@?$AAp?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAp?$AAb?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA ; `icu_56::RuleBasedBreakIterator::makeRuleStatusValid'::`2'::__LINE__Var
PUBLIC	?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ ; icu_56::RuleBasedBreakIterator::makeRuleStatusValid
;	COMDAT ??_C@_1JC@FMHHAABE@?$AAf?$AAL?$AAa?$AAs?$AAt?$AAR?$AAu?$AAl?$AAe?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAL?$AAa@
CONST	SEGMENT
??_C@_1JC@FMHHAABE@?$AAf?$AAL?$AAa?$AAs?$AAt?$AAR?$AAu?$AAl?$AAe?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAL?$AAa@ DB 'f'
	DB	00H, 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'R', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u'
	DB	00H, 's', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'f', 00H, 'L', 00H, 'a', 00H, 's', 00H
	DB	't', 00H, 'R', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, 'I', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'f'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's'
	DB	00H, 'M', 00H, 'a', 00H, 'x', 00H, 'I', 00H, 'd', 00H, 'x', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@HPDBKOEJ@?$AAp?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAp?$AAb?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@HPDBKOEJ@?$AAp?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAp?$AAb?$AA?$AA@ DB 'p'
	DB	00H, 'a', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'p', 00H
	DB	'b', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA DD 05a0H ; `icu_56::RuleBasedBreakIterator::makeRuleStatusValid'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ
_TEXT	SEGMENT
_pb$73133 = -32						; size = 4
_pa$73131 = -20						; size = 4
_this$ = -8						; size = 4
?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ PROC ; icu_56::RuleBasedBreakIterator::makeRuleStatusValid, COMDAT
; _this$ = ecx
; Line 1440
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1441
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+344]
	test	ecx, ecx
	jne	$LN6@makeRuleSt
; Line 1443
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	SHORT $LN4@makeRuleSt
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@makeRuleSt
$LN4@makeRuleSt:
; Line 1445
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
; Line 1446
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+344], 1
; Line 1447
	jmp	$LN6@makeRuleSt
$LN5@makeRuleSt:
; Line 1449
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pa$73131[ebp], eax
; Line 1450
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1451
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+356], 0
	jle	SHORT $LN2@makeRuleSt
; Line 1452
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@makeRuleSt:
; Line 1454
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pb$73133[ebp], eax
; Line 1455
	mov	eax, DWORD PTR _pa$73131[ebp]
	cmp	eax, DWORD PTR _pb$73133[ebp]
	je	SHORT $LN6@makeRuleSt
; Line 1458
	mov	eax, DWORD PTR _pa$73131[ebp]
	cmp	eax, DWORD PTR _pb$73133[ebp]
	je	SHORT $LN6@makeRuleSt
	mov	ecx, DWORD PTR ?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA
	add	ecx, 18					; 00000012H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1BC@HPDBKOEJ@?$AAp?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAp?$AAb?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@makeRuleSt:
; Line 1462
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+340], 0
	jl	SHORT $LN10@makeRuleSt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+340]
	cmp	ecx, DWORD PTR [edx+28]
	jl	SHORT $LN7@makeRuleSt
$LN10@makeRuleSt:
	mov	edx, DWORD PTR ?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA
	add	edx, 22					; 00000016H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1JC@FMHHAABE@?$AAf?$AAL?$AAa?$AAs?$AAt?$AAR?$AAu?$AAl?$AAe?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAL?$AAa@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@makeRuleSt:
; Line 1463
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ ENDP ; icu_56::RuleBasedBreakIterator::makeRuleStatusValid
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ
_TEXT	SEGMENT
_tagVal$ = -44						; size = 4
_idx$ = -32						; size = 4
_nonConstThis$ = -20					; size = 4
_this$ = -8						; size = 4
?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ PROC ; icu_56::RuleBasedBreakIterator::getRuleStatus, COMDAT
; _this$ = ecx
; Line 1466
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1467
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _nonConstThis$[ebp], eax
; Line 1468
	mov	ecx, DWORD PTR _nonConstThis$[ebp]
	call	?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ ; icu_56::RuleBasedBreakIterator::makeRuleStatusValid
; Line 1473
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+340]
	mov	ecx, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+340]
	add	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _idx$[ebp], edx
; Line 1474
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _tagVal$[ebp], ecx
; Line 1476
	mov	eax, DWORD PTR _tagVal$[ebp]
; Line 1477
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ ENDP ; icu_56::RuleBasedBreakIterator::getRuleStatus
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -56						; size = 4
_numValsToCopy$ = -44					; size = 4
_numVals$ = -32						; size = 4
_nonConstThis$ = -20					; size = 4
_this$ = -8						; size = 4
_fillInVec$ = 8						; size = 4
_capacity$ = 12						; size = 4
_status$ = 16						; size = 4
?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::getRuleStatusVec, COMDAT
; _this$ = ecx
; Line 1484
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1485
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getRuleSta
; Line 1486
	xor	eax, eax
	jmp	$LN6@getRuleSta
$LN5@getRuleSta:
; Line 1489
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _nonConstThis$[ebp], eax
; Line 1490
	mov	ecx, DWORD PTR _nonConstThis$[ebp]
	call	?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ ; icu_56::RuleBasedBreakIterator::makeRuleStatusValid
; Line 1491
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+340]
	mov	ecx, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _numVals$[ebp], edx
; Line 1492
	mov	eax, DWORD PTR _numVals$[ebp]
	mov	DWORD PTR _numValsToCopy$[ebp], eax
; Line 1493
	mov	eax, DWORD PTR _numVals$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jle	SHORT $LN4@getRuleSta
; Line 1494
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 1495
	mov	eax, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR _numValsToCopy$[ebp], eax
$LN4@getRuleSta:
; Line 1498
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@getRuleSta
$LN2@getRuleSta:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@getRuleSta:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numValsToCopy$[ebp]
	jge	SHORT $LN1@getRuleSta
; Line 1499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+340]
	add	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _fillInVec$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR [esi+edx*4], eax
; Line 1500
	jmp	SHORT $LN2@getRuleSta
$LN1@getRuleSta:
; Line 1501
	mov	eax, DWORD PTR _numVals$[ebp]
$LN6@getRuleSta:
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::getRuleStatusVec
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z
_TEXT	SEGMENT
_retPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z PROC ; icu_56::RuleBasedBreakIterator::getBinaryRules, COMDAT
; _this$ = ecx
; Line 1513
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1514
	mov	DWORD PTR _retPtr$[ebp], 0
; Line 1515
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1517
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN1@getBinaryR
; Line 1518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _retPtr$[ebp], edx
; Line 1519
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx
$LN1@getBinaryR:
; Line 1521
	mov	eax, DWORD PTR _retPtr$[ebp]
; Line 1522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z ENDP ; icu_56::RuleBasedBreakIterator::getBinaryRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_clonedBI$ = -20					; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
_bufferSize$ = 12					; size = 4
_status$ = 16						; size = 4
?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z PROC ; icu_56::RuleBasedBreakIterator::createBufferClone, COMDAT
; _this$ = ecx
; Line 1528
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1529
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@createBuff
; Line 1530
	xor	eax, eax
	jmp	SHORT $LN5@createBuff
$LN4@createBuff:
; Line 1533
	mov	eax, DWORD PTR _bufferSize$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@createBuff
; Line 1534
	mov	eax, DWORD PTR _bufferSize$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1535
	xor	eax, eax
	jmp	SHORT $LN5@createBuff
$LN3@createBuff:
; Line 1538
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _clonedBI$[ebp], eax
; Line 1539
	cmp	DWORD PTR _clonedBI$[ebp], 0
	jne	SHORT $LN2@createBuff
; Line 1540
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1541
	jmp	SHORT $LN1@createBuff
$LN2@createBuff:
; Line 1542
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -126			; ffffff82H
$LN1@createBuff:
; Line 1544
	mov	eax, DWORD PTR _clonedBI$[ebp]
$LN5@createBuff:
; Line 1545
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z ENDP ; icu_56::RuleBasedBreakIterator::createBufferClone
_TEXT	ENDS
PUBLIC	??_C@_1EC@PLHCKIME@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?1??checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z@4JA ; `icu_56::RuleBasedBreakIterator::checkDictionary'::`2'::__LINE__Var
PUBLIC	?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z ; icu_56::RuleBasedBreakIterator::getLanguageBreakEngine
EXTRN	??1UStack@icu_56@@UAE@XZ:PROC			; icu_56::UStack::~UStack
EXTRN	_uprv_malloc_56:PROC
EXTRN	_utext_current32_56:PROC
EXTRN	??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC	; icu_56::UStack::UStack
;	COMDAT ??_C@_1EC@PLHCKIME@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1EC@PLHCKIME@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ@ DB 'f'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 'k', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'b', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'k', 00H, 's', 00H, '.', 00H, 's'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z@4JA DD 062aH ; `icu_56::RuleBasedBreakIterator::checkDictionary'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z$0
__ehfuncinfo$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z
_TEXT	SEGMENT
tv680 = -592						; size = 8
tv504 = -592						; size = 8
tv401 = -592						; size = 4
tv375 = -592						; size = 4
tv349 = -592						; size = 4
tv321 = -592						; size = 8
tv138 = -592						; size = 4
tv951 = -588						; size = 4
tv944 = -588						; size = 4
tv793 = -588						; size = 4
tv700 = -588						; size = 4
tv596 = -588						; size = 4
tv515 = -588						; size = 4
tv411 = -588						; size = 4
tv394 = -588						; size = 4
tv368 = -588						; size = 4
tv342 = -588						; size = 4
tv237 = -588						; size = 4
tv155 = -588						; size = 4
tv131 = -588						; size = 4
tv74 = -588						; size = 4
tv71 = -588						; size = 4
$T81314 = -580						; size = 4
$T81315 = -568						; size = 4
$T81318 = -556						; size = 4
_i$73350 = -352						; size = 4
_out$73348 = -340					; size = 4
_totalBreaks$73342 = -328				; size = 4
___offset$73330 = -316					; size = 4
___lead16$73328 = -304					; size = 2
_lbe$73320 = -292					; size = 4
___offset$73311 = -280					; size = 4
___lead16$73309 = -268					; size = 2
___offset$73288 = -256					; size = 4
___lead16$73286 = -244					; size = 2
___offset$73271 = -232					; size = 4
___lead16$73269 = -220					; size = 2
___offset$73251 = -208					; size = 4
___lead16$73249 = -196					; size = 2
___offset$73227 = -184					; size = 4
___lead16$73225 = -172					; size = 2
___offset$73206 = -160					; size = 4
___lead16$73204 = -148					; size = 2
_c$ = -136						; size = 4
_foundBreakCount$ = -124				; size = 4
_breaks$ = -112						; size = 24
_status$ = -80						; size = 4
_current$ = -68						; size = 4
_category$ = -56					; size = 2
_rangeEnd$ = -44					; size = 4
_rangeStart$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_startPos$ = 8						; size = 4
_endPos$ = 12						; size = 4
_reverse$ = 16						; size = 1
?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z PROC ; icu_56::RuleBasedBreakIterator::checkDictionary, COMDAT
; _this$ = ecx
; Line 1578
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 580				; 00000244H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-592]
	mov	ecx, 145				; 00000091H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1580
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1585
	mov	eax, DWORD PTR _endPos$[ebp]
	sub	eax, DWORD PTR _startPos$[ebp]
	cmp	eax, 1
	jg	SHORT $LN77@checkDicti
; Line 1586
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	SHORT $LN80@checkDicti
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN81@checkDicti
$LN80@checkDicti:
	mov	edx, DWORD PTR _endPos$[ebp]
	mov	DWORD PTR tv71[ebp], edx
$LN81@checkDicti:
	mov	eax, DWORD PTR tv71[ebp]
	jmp	$LN78@checkDicti
$LN77@checkDicti:
; Line 1592
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	SHORT $LN82@checkDicti
	mov	ecx, DWORD PTR _endPos$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN83@checkDicti
$LN82@checkDicti:
	mov	edx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv74[ebp], edx
$LN83@checkDicti:
	mov	eax, DWORD PTR tv74[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 1593
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	$LN76@checkDicti
; Line 1594
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN84@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN84@checkDicti
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv131[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN76@checkDicti
$LN84@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv138[ebp], eax
$LN76@checkDicti:
; Line 1597
	mov	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _rangeStart$[ebp], eax
; Line 1598
	mov	eax, DWORD PTR _endPos$[ebp]
	mov	DWORD PTR _rangeEnd$[ebp], eax
; Line 1602
	mov	DWORD PTR _status$[ebp], 0
; Line 1603
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UStack::UStack
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1604
	mov	DWORD PTR _foundBreakCount$[ebp], 0
; Line 1605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 1607
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN75@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN86@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN86@checkDicti
	mov	DWORD PTR tv155[ebp], 320		; 00000140H
	jmp	SHORT $LN87@checkDicti
$LN86@checkDicti:
	mov	DWORD PTR tv155[ebp], 0
$LN87@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv155[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN74@checkDicti
$LN75@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN73@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73204[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73204[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73204[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73206[ebp], eax
	cmp	DWORD PTR ___offset$73206[ebp], 0
	jle	SHORT $LN72@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73206[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN71@checkDicti
$LN72@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN71@checkDicti:
	jmp	SHORT $LN74@checkDicti
$LN73@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN74@checkDicti:
; Line 1614
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, 16384				; 00004000H
	je	$LN69@checkDicti
; Line 1615
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	$LN54@checkDicti
$LN67@checkDicti:
; Line 1617
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_next32_56
	add	esp, 4
; Line 1618
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 1619
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN64@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN88@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN88@checkDicti
	mov	DWORD PTR tv237[ebp], 320		; 00000140H
	jmp	SHORT $LN89@checkDicti
$LN88@checkDicti:
	mov	DWORD PTR tv237[ebp], 0
$LN89@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv237[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN66@checkDicti
$LN64@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN62@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73225[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73225[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73225[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73227[ebp], eax
	cmp	DWORD PTR ___offset$73227[ebp], 0
	jle	SHORT $LN61@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73227[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN60@checkDicti
$LN61@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN60@checkDicti:
	jmp	SHORT $LN66@checkDicti
$LN62@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN66@checkDicti:
; Line 1620
	cmp	DWORD PTR _c$[ebp], -1
	je	SHORT $LN65@checkDicti
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, 16384				; 00004000H
	jne	$LN67@checkDicti
$LN65@checkDicti:
; Line 1622
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN90@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv321[ebp], eax
	mov	DWORD PTR tv321[ebp+4], edx
	jmp	SHORT $LN91@checkDicti
$LN90@checkDicti:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv321[ebp], eax
	mov	DWORD PTR tv321[ebp+4], edx
$LN91@checkDicti:
	mov	ecx, DWORD PTR tv321[ebp]
	mov	DWORD PTR _rangeEnd$[ebp], ecx
; Line 1623
	cmp	DWORD PTR _c$[ebp], -1
	jne	$LN57@checkDicti
; Line 1626
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN92@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN92@checkDicti
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv342[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv342[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv342[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv349[ebp], edx
	jmp	SHORT $LN93@checkDicti
$LN92@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv349[ebp], eax
$LN93@checkDicti:
	mov	edx, DWORD PTR tv349[ebp]
	mov	DWORD PTR _c$[ebp], edx
; Line 1628
	jmp	$LN56@checkDicti
$LN57@checkDicti:
; Line 1629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN94@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN94@checkDicti
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv368[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv368[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv368[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv375[ebp], edx
	jmp	SHORT $LN95@checkDicti
$LN94@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv375[ebp], eax
$LN95@checkDicti:
	mov	edx, DWORD PTR tv375[ebp]
	mov	DWORD PTR _c$[ebp], edx
$LN56@checkDicti:
; Line 1632
	jmp	$LN55@checkDicti
$LN54@checkDicti:
; Line 1634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	cmp	DWORD PTR [ecx+40], 0
	jle	SHORT $LN96@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN96@checkDicti
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	DWORD PTR tv394[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR tv394[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv394[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv401[ebp], edx
	jmp	SHORT $LN97@checkDicti
$LN96@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv401[ebp], eax
$LN97@checkDicti:
	mov	edx, DWORD PTR tv401[ebp]
	mov	DWORD PTR _c$[ebp], edx
; Line 1635
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN51@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN98@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN98@checkDicti
	mov	DWORD PTR tv411[ebp], 320		; 00000140H
	jmp	SHORT $LN99@checkDicti
$LN98@checkDicti:
	mov	DWORD PTR tv411[ebp], 0
$LN99@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv411[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN53@checkDicti
$LN51@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN49@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73249[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73249[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73249[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73251[ebp], eax
	cmp	DWORD PTR ___offset$73251[ebp], 0
	jle	SHORT $LN48@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73251[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN47@checkDicti
$LN48@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN47@checkDicti:
	jmp	SHORT $LN53@checkDicti
$LN49@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN53@checkDicti:
; Line 1637
	cmp	DWORD PTR _c$[ebp], -1
	je	SHORT $LN52@checkDicti
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, 16384				; 00004000H
	jne	$LN54@checkDicti
$LN52@checkDicti:
; Line 1639
	cmp	DWORD PTR _c$[ebp], -1
	jne	SHORT $LN44@checkDicti
; Line 1641
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 1643
	jmp	SHORT $LN43@checkDicti
$LN44@checkDicti:
; Line 1644
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_next32_56
	add	esp, 4
; Line 1645
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
$LN43@checkDicti:
; Line 1647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN100@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv504[ebp], eax
	mov	DWORD PTR tv504[ebp+4], edx
	jmp	SHORT $LN101@checkDicti
$LN100@checkDicti:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv504[ebp], eax
	mov	DWORD PTR tv504[ebp+4], edx
$LN101@checkDicti:
	mov	ecx, DWORD PTR tv504[ebp]
	mov	DWORD PTR _rangeStart$[ebp], ecx
$LN55@checkDicti:
; Line 1649
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN42@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN102@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN102@checkDicti
	mov	DWORD PTR tv515[ebp], 320		; 00000140H
	jmp	SHORT $LN103@checkDicti
$LN102@checkDicti:
	mov	DWORD PTR tv515[ebp], 0
$LN103@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv515[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN69@checkDicti
$LN42@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN40@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73269[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73269[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73269[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73271[ebp], eax
	cmp	DWORD PTR ___offset$73271[ebp], 0
	jle	SHORT $LN39@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73271[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN38@checkDicti
$LN39@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN38@checkDicti:
	jmp	SHORT $LN69@checkDicti
$LN40@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN69@checkDicti:
; Line 1657
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	$LN29@checkDicti
; Line 1658
	mov	eax, DWORD PTR _rangeStart$[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 1659
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 1660
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN35@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN104@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN104@checkDicti
	mov	DWORD PTR tv596[ebp], 320		; 00000140H
	jmp	SHORT $LN105@checkDicti
$LN104@checkDicti:
	mov	DWORD PTR tv596[ebp], 0
$LN105@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv596[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN29@checkDicti
$LN35@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN33@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73286[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73286[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73286[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73288[ebp], eax
	cmp	DWORD PTR ___offset$73288[ebp], 0
	jle	SHORT $LN32@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73288[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN31@checkDicti
$LN32@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN31@checkDicti:
	jmp	SHORT $LN29@checkDicti
$LN33@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN29@checkDicti:
; Line 1662
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN28@checkDicti
$LN27@checkDicti:
; Line 1663
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	ecx, DWORD PTR [ecx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN106@checkDicti
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	eax, DWORD PTR [eax+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv680[ebp], eax
	mov	DWORD PTR tv680[ebp+4], edx
	jmp	SHORT $LN107@checkDicti
$LN106@checkDicti:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv680[ebp], eax
	mov	DWORD PTR tv680[ebp+4], edx
$LN107@checkDicti:
	mov	ecx, DWORD PTR tv680[ebp]
	mov	DWORD PTR _current$[ebp], ecx
	mov	edx, DWORD PTR _current$[ebp]
	cmp	edx, DWORD PTR _rangeEnd$[ebp]
	jge	$LN26@checkDicti
	movzx	eax, WORD PTR _category$[ebp]
	and	eax, 16384				; 00004000H
	jne	$LN26@checkDicti
; Line 1664
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_next32_56
	add	esp, 4
; Line 1665
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 1666
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN25@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN108@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN108@checkDicti
	mov	DWORD PTR tv700[ebp], 320		; 00000140H
	jmp	SHORT $LN109@checkDicti
$LN108@checkDicti:
	mov	DWORD PTR tv700[ebp], 0
$LN109@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv700[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN24@checkDicti
$LN25@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN23@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73309[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73309[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73309[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73311[ebp], eax
	cmp	DWORD PTR ___offset$73311[ebp], 0
	jle	SHORT $LN22@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73311[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN21@checkDicti
$LN22@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN21@checkDicti:
	jmp	SHORT $LN24@checkDicti
$LN23@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN24@checkDicti:
; Line 1667
	jmp	$LN27@checkDicti
$LN26@checkDicti:
; Line 1668
	mov	eax, DWORD PTR _current$[ebp]
	cmp	eax, DWORD PTR _rangeEnd$[ebp]
	jl	SHORT $LN19@checkDicti
; Line 1669
	jmp	$LN28@checkDicti
$LN19@checkDicti:
; Line 1674
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z ; icu_56::RuleBasedBreakIterator::getLanguageBreakEngine
	mov	DWORD PTR _lbe$73320[ebp], eax
; Line 1678
	cmp	DWORD PTR _lbe$73320[ebp], 0
	je	SHORT $LN18@checkDicti
; Line 1679
	mov	esi, esp
	lea	eax, DWORD PTR _breaks$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	push	edx
	push	0
	mov	eax, DWORD PTR _rangeEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rangeStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	push	eax
	mov	ecx, DWORD PTR _lbe$73320[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbe$73320[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _foundBreakCount$[ebp]
	mov	DWORD PTR _foundBreakCount$[ebp], eax
$LN18@checkDicti:
; Line 1683
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_current32_56
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 1684
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN17@checkDicti
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jl	SHORT $LN110@checkDicti
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	jg	SHORT $LN110@checkDicti
	mov	DWORD PTR tv793[ebp], 320		; 00000140H
	jmp	SHORT $LN111@checkDicti
$LN110@checkDicti:
	mov	DWORD PTR tv793[ebp], 0
$LN111@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	add	edx, DWORD PTR tv793[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	$LN16@checkDicti
$LN17@checkDicti:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	$LN15@checkDicti
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	WORD PTR ___lead16$73328[ebp], ax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	movzx	edx, WORD PTR ___lead16$73328[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	movzx	eax, WORD PTR ___lead16$73328[ebp]
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	movzx	eax, WORD PTR _category$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___offset$73330[ebp], eax
	cmp	DWORD PTR ___offset$73330[ebp], 0
	jle	SHORT $LN14@checkDicti
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1023				; 000003ffH
	sar	edx, 5
	add	edx, DWORD PTR ___offset$73330[ebp]
	mov	eax, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [eax+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	and	eax, 31					; 0000001fH
	lea	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [ecx+32]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _category$[ebp], cx
	jmp	SHORT $LN13@checkDicti
$LN14@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN13@checkDicti:
	jmp	SHORT $LN16@checkDicti
$LN15@checkDicti:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	mov	dx, WORD PTR [ecx+52]
	mov	WORD PTR _category$[ebp], dx
$LN16@checkDicti:
; Line 1685
	jmp	$LN29@checkDicti
$LN28@checkDicti:
; Line 1689
	cmp	DWORD PTR _foundBreakCount$[ebp], 0
	jle	$LN11@checkDicti
; Line 1690
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	cmp	DWORD PTR _foundBreakCount$[ebp], eax
	je	SHORT $LN112@checkDicti
	mov	eax, DWORD PTR ?__LINE__Var@?1??checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z@4JA
	add	eax, 112				; 00000070H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EC@PLHCKIME@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN112@checkDicti:
; Line 1691
	mov	eax, DWORD PTR _foundBreakCount$[ebp]
	mov	DWORD PTR _totalBreaks$73342[ebp], eax
; Line 1692
	push	0
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
	cmp	DWORD PTR _startPos$[ebp], eax
	jge	SHORT $LN10@checkDicti
; Line 1693
	mov	eax, DWORD PTR _totalBreaks$73342[ebp]
	add	eax, 1
	mov	DWORD PTR _totalBreaks$73342[ebp], eax
$LN10@checkDicti:
; Line 1695
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	?peeki@UStack@icu_56@@QBEHXZ		; icu_56::UStack::peeki
	cmp	DWORD PTR _endPos$[ebp], eax
	jle	SHORT $LN9@checkDicti
; Line 1696
	mov	eax, DWORD PTR _totalBreaks$73342[ebp]
	add	eax, 1
	mov	DWORD PTR _totalBreaks$73342[ebp], eax
$LN9@checkDicti:
; Line 1698
	mov	eax, DWORD PTR _totalBreaks$73342[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+352], eax
; Line 1699
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	$LN11@checkDicti
; Line 1700
	mov	DWORD PTR _out$73348[ebp], 0
; Line 1701
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _totalBreaks$73342[ebp]
	mov	DWORD PTR [eax+356], ecx
; Line 1702
	push	0
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
	cmp	DWORD PTR _startPos$[ebp], eax
	jge	SHORT $LN7@checkDicti
; Line 1703
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	mov	edx, DWORD PTR _out$73348[ebp]
	mov	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _out$73348[ebp]
	add	ecx, 1
	mov	DWORD PTR _out$73348[ebp], ecx
$LN7@checkDicti:
; Line 1705
	mov	DWORD PTR _i$73350[ebp], 0
	jmp	SHORT $LN6@checkDicti
$LN5@checkDicti:
	mov	eax, DWORD PTR _i$73350[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73350[ebp], eax
$LN6@checkDicti:
	mov	eax, DWORD PTR _i$73350[ebp]
	cmp	eax, DWORD PTR _foundBreakCount$[ebp]
	jge	SHORT $LN4@checkDicti
; Line 1706
	mov	eax, DWORD PTR _i$73350[ebp]
	push	eax
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	?elementAti@UVector@icu_56@@QBEHH@Z	; icu_56::UVector::elementAti
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	ecx, DWORD PTR _out$73348[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	edx, DWORD PTR _out$73348[ebp]
	add	edx, 1
	mov	DWORD PTR _out$73348[ebp], edx
; Line 1707
	jmp	SHORT $LN5@checkDicti
$LN4@checkDicti:
; Line 1708
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	mov	edx, DWORD PTR _out$73348[ebp]
	mov	eax, DWORD PTR _endPos$[ebp]
	cmp	eax, DWORD PTR [ecx+edx*4-4]
	jle	SHORT $LN3@checkDicti
; Line 1709
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	mov	edx, DWORD PTR _out$73348[ebp]
	mov	eax, DWORD PTR _endPos$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
$LN3@checkDicti:
; Line 1714
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	SHORT $LN2@checkDicti
; Line 1715
	mov	esi, esp
	mov	eax, DWORD PTR _endPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T81314[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	??1UStack@icu_56@@UAE@XZ		; icu_56::UStack::~UStack
	mov	eax, DWORD PTR $T81314[ebp]
	jmp	$LN78@checkDicti
; Line 1717
	jmp	SHORT $LN11@checkDicti
$LN2@checkDicti:
; Line 1718
	mov	esi, esp
	mov	eax, DWORD PTR _startPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T81315[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	??1UStack@icu_56@@UAE@XZ		; icu_56::UStack::~UStack
	mov	eax, DWORD PTR $T81315[ebp]
	jmp	SHORT $LN78@checkDicti
$LN11@checkDicti:
; Line 1726
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	SHORT $LN113@checkDicti
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv944[ebp], ecx
	jmp	SHORT $LN114@checkDicti
$LN113@checkDicti:
	mov	edx, DWORD PTR _endPos$[ebp]
	mov	DWORD PTR tv944[ebp], edx
$LN114@checkDicti:
	mov	eax, DWORD PTR tv944[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
; Line 1727
	movsx	eax, BYTE PTR _reverse$[ebp]
	test	eax, eax
	je	SHORT $LN115@checkDicti
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv951[ebp], ecx
	jmp	SHORT $LN116@checkDicti
$LN115@checkDicti:
	mov	edx, DWORD PTR _endPos$[ebp]
	mov	DWORD PTR tv951[ebp], edx
$LN116@checkDicti:
	mov	eax, DWORD PTR tv951[ebp]
	mov	DWORD PTR $T81318[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _breaks$[ebp]
	call	??1UStack@icu_56@@UAE@XZ		; icu_56::UStack::~UStack
	mov	eax, DWORD PTR $T81318[ebp]
$LN78@checkDicti:
; Line 1728
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN122@checkDicti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 592				; 00000250H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN122@checkDicti:
	DD	2
	DD	$LN121@checkDicti
$LN121@checkDicti:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN118@checkDicti
	DD	-112					; ffffff90H
	DD	24					; 00000018H
	DD	$LN119@checkDicti
$LN119@checkDicti:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	0
$LN118@checkDicti:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z$0:
	lea	ecx, DWORD PTR _breaks$[ebp]
	jmp	??1UStack@icu_56@@UAE@XZ		; icu_56::UStack::~UStack
__ehhandler$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-596]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z ENDP ; icu_56::RuleBasedBreakIterator::checkDictionary
EXTRN	?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z:PROC ; icu_56::UVector::insertElementAt
EXTRN	??0UnhandledEngine@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::UnhandledEngine::UnhandledEngine
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$1
__ehfuncinfo$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z
_TEXT	SEGMENT
tv203 = -352						; size = 4
tv172 = -352						; size = 4
tv92 = -352						; size = 4
tv75 = -352						; size = 4
$T81334 = -344						; size = 4
$T81335 = -332						; size = 4
$T81338 = -320						; size = 4
$T81339 = -308						; size = 4
$T81342 = -296						; size = 4
$T81343 = -284						; size = 4
$T81346 = -272						; size = 4
$T81347 = -260						; size = 4
_i$ = -56						; size = 4
_status$ = -44						; size = 4
_lbe$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_c$ = 8							; size = 4
?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z PROC ; icu_56::RuleBasedBreakIterator::getLanguageBreakEngine, COMDAT
; _this$ = ecx
; Line 1803
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1804
	mov	DWORD PTR _lbe$[ebp], 0
; Line 1805
	mov	DWORD PTR _status$[ebp], 0
; Line 1807
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	jne	$LN10@getLanguag
; Line 1808
	push	24					; 00000018H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81335[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81335[ebp], 0
	je	SHORT $LN13@getLanguag
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T81335[ebp]
	call	??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UStack::UStack
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN14@getLanguag
$LN13@getLanguag:
	mov	DWORD PTR tv75[ebp], 0
$LN14@getLanguag:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T81334[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T81334[ebp]
	mov	DWORD PTR [edx+364], eax
; Line 1809
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN8@getLanguag
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@getLanguag
$LN8@getLanguag:
; Line 1810
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR $T81339[ebp], ecx
	mov	edx, DWORD PTR $T81339[ebp]
	mov	DWORD PTR $T81338[ebp], edx
	cmp	DWORD PTR $T81338[ebp], 0
	je	SHORT $LN15@getLanguag
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81338[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81338[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN16@getLanguag
$LN15@getLanguag:
	mov	DWORD PTR tv92[ebp], 0
$LN16@getLanguag:
; Line 1811
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
; Line 1812
	xor	eax, eax
	jmp	$LN11@getLanguag
$LN10@getLanguag:
; Line 1816
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	mov	DWORD PTR _i$[ebp], eax
$LN7@getLanguag:
; Line 1817
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	js	SHORT $LN6@getLanguag
; Line 1818
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	mov	DWORD PTR _lbe$[ebp], eax
; Line 1819
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _lbe$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbe$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@getLanguag
; Line 1820
	mov	eax, DWORD PTR _lbe$[ebp]
	jmp	$LN11@getLanguag
$LN5@getLanguag:
; Line 1822
	jmp	SHORT $LN7@getLanguag
$LN6@getLanguag:
; Line 1826
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	?getLanguageBreakEngineFromFactory@icu_56@@YAPBVLanguageBreakEngine@1@HH@Z ; icu_56::getLanguageBreakEngineFromFactory
	add	esp, 8
	mov	DWORD PTR _lbe$[ebp], eax
; Line 1829
	cmp	DWORD PTR _lbe$[ebp], 0
	je	SHORT $LN4@getLanguag
; Line 1830
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+364]
	call	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
; Line 1833
	mov	eax, DWORD PTR _lbe$[ebp]
	jmp	$LN11@getLanguag
$LN4@getLanguag:
; Line 1838
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jne	$LN3@getLanguag
; Line 1839
	push	20					; 00000014H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81343[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T81343[ebp], 0
	je	SHORT $LN17@getLanguag
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T81343[ebp]
	call	??0UnhandledEngine@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UnhandledEngine::UnhandledEngine
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN18@getLanguag
$LN17@getLanguag:
	mov	DWORD PTR tv172[ebp], 0
$LN18@getLanguag:
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR $T81342[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T81342[ebp]
	mov	DWORD PTR [edx+368], eax
; Line 1840
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getLanguag
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jne	SHORT $LN2@getLanguag
; Line 1841
	mov	DWORD PTR _status$[ebp], 7
$LN2@getLanguag:
; Line 1845
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+368]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z ; icu_56::UVector::insertElementAt
; Line 1847
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@getLanguag
; Line 1848
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	mov	DWORD PTR $T81347[ebp], ecx
	mov	edx, DWORD PTR $T81347[ebp]
	mov	DWORD PTR $T81346[ebp], edx
	cmp	DWORD PTR $T81346[ebp], 0
	je	SHORT $LN19@getLanguag
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T81346[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T81346[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN20@getLanguag
$LN19@getLanguag:
	mov	DWORD PTR tv203[ebp], 0
$LN20@getLanguag:
; Line 1849
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0
; Line 1850
	xor	eax, eax
	jmp	SHORT $LN11@getLanguag
$LN3@getLanguag:
; Line 1856
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+368]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1858
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+368]
$LN11@getLanguag:
; Line 1859
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@getLanguag
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN26@getLanguag:
	DD	1
	DD	$LN25@getLanguag
$LN25@getLanguag:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN23@getLanguag
$LN23@getLanguag:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$0:
	mov	eax, DWORD PTR $T81335[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$1:
	mov	eax, DWORD PTR $T81343[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z ENDP ; icu_56::RuleBasedBreakIterator::getLanguageBreakEngine
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ; icu_56::umtx_initOnce
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLanguageBreakEngineFromFactory@icu_56@@YAPBVLanguageBreakEngine@1@HH@Z
_TEXT	SEGMENT
_factory$73400 = -32					; size = 4
_lbe$ = -20						; size = 4
_i$ = -8						; size = 4
_c$ = 8							; size = 4
_breakType$ = 12					; size = 4
?getLanguageBreakEngineFromFactory@icu_56@@YAPBVLanguageBreakEngine@1@HH@Z PROC ; icu_56::getLanguageBreakEngineFromFactory, COMDAT
; Line 1777
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1778
	push	OFFSET ?initLanguageFactories@icu_56@@YAXXZ ; icu_56::initLanguageFactories
	push	OFFSET _gLanguageBreakFactoriesInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ; icu_56::umtx_initOnce
	add	esp, 8
; Line 1779
	cmp	DWORD PTR _gLanguageBreakFactories, 0
	jne	SHORT $LN4@getLanguag@2
; Line 1780
	xor	eax, eax
	jmp	SHORT $LN5@getLanguag@2
$LN4@getLanguag@2:
; Line 1783
	mov	ecx, DWORD PTR _gLanguageBreakFactories
	call	?size@UVector@icu_56@@QBEHXZ		; icu_56::UVector::size
	mov	DWORD PTR _i$[ebp], eax
; Line 1784
	mov	DWORD PTR _lbe$[ebp], 0
$LN3@getLanguag@2:
; Line 1785
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	js	SHORT $LN2@getLanguag@2
; Line 1786
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gLanguageBreakFactories
	call	?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt
	mov	DWORD PTR _factory$73400[ebp], eax
; Line 1787
	mov	esi, esp
	mov	eax, DWORD PTR _breakType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _factory$73400[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _factory$73400[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lbe$[ebp], eax
; Line 1788
	cmp	DWORD PTR _lbe$[ebp], 0
	je	SHORT $LN1@getLanguag@2
; Line 1789
	jmp	SHORT $LN2@getLanguag@2
$LN1@getLanguag@2:
; Line 1791
	jmp	SHORT $LN3@getLanguag@2
$LN2@getLanguag@2:
; Line 1792
	mov	eax, DWORD PTR _lbe$[ebp]
$LN5@getLanguag@2:
; Line 1793
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getLanguageBreakEngineFromFactory@icu_56@@YAPBVLanguageBreakEngine@1@HH@Z ENDP ; icu_56::getLanguageBreakEngineFromFactory
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPostInit
EXTRN	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC ; icu_56::umtx_initImplPreInit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z PROC	; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 246
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	jne	SHORT $LN2@umtx_initO
; Line 247
	jmp	SHORT $LN3@umtx_initO
$LN2@umtx_initO:
; Line 249
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPreInit
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 250
	mov	esi, esp
	call	DWORD PTR _fp$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 251
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit
	add	esp, 4
$LN3@umtx_initO:
; Line 253
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ENDP	; icu_56::umtx_initOnce
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
PUBLIC	??_C@_1DK@NEHJOPFH@?$AAg?$AAL?$AAa?$AAn?$AAg?$AAu?$AAa?$AAg?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??initLanguageFactories@icu_56@@YAXXZ@4JA@9c7d53cf ; `icu_56::initLanguageFactories'::`2'::__LINE__Var
EXTRN	_ucln_common_registerCleanup_56:PROC
EXTRN	??0ICULanguageBreakFactory@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::ICULanguageBreakFactory::ICULanguageBreakFactory
EXTRN	??0UStack@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:PROC ; icu_56::UStack::UStack
;	COMDAT ??_C@_1DK@NEHJOPFH@?$AAg?$AAL?$AAa?$AAn?$AAg?$AAu?$AAa?$AAg?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\common\rbbi.cpp
CONST	SEGMENT
??_C@_1DK@NEHJOPFH@?$AAg?$AAL?$AAa?$AAn?$AAg?$AAu?$AAa?$AAg?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'L', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'u', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, 'B', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'k'
	DB	00H, 'F', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??initLanguageFactories@icu_56@@YAXXZ@4JA@9c7d53cf
_DATA	SEGMENT
?__LINE__Var@?1??initLanguageFactories@icu_56@@YAXXZ@4JA@9c7d53cf DD 06ddH ; `icu_56::initLanguageFactories'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initLanguageFactories@icu_56@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$1
__ehfuncinfo$?initLanguageFactories@icu_56@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?initLanguageFactories@icu_56@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initLanguageFactories@icu_56@@YAXXZ
_TEXT	SEGMENT
tv93 = -280						; size = 4
tv80 = -280						; size = 4
$T81370 = -272						; size = 4
$T81371 = -260						; size = 4
$T81374 = -248						; size = 4
$T81375 = -236						; size = 4
_builtIn$73385 = -32					; size = 4
_status$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?initLanguageFactories@icu_56@@YAXXZ PROC		; icu_56::initLanguageFactories, COMDAT
; Line 1757
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initLanguageFactories@icu_56@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1758
	mov	DWORD PTR _status$[ebp], 0
; Line 1759
	cmp	DWORD PTR _gLanguageBreakFactories, 0
	je	SHORT $LN4@initLangua
	mov	eax, DWORD PTR ?__LINE__Var@?1??initLanguageFactories@icu_56@@YAXXZ@4JA@9c7d53cf
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1DK@NEHJOPFH@?$AAg?$AAL?$AAa?$AAn?$AAg?$AAu?$AAa?$AAg?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@initLangua:
; Line 1760
	push	24					; 00000018H
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81371[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81371[ebp], 0
	je	SHORT $LN5@initLangua
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET __deleteFactory
	mov	ecx, DWORD PTR $T81371[ebp]
	call	??0UStack@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z ; icu_56::UStack::UStack
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN6@initLangua
$LN5@initLangua:
	mov	DWORD PTR tv80[ebp], 0
$LN6@initLangua:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T81370[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T81370[ebp]
	mov	DWORD PTR _gLanguageBreakFactories, edx
; Line 1761
	cmp	DWORD PTR _gLanguageBreakFactories, 0
	je	$LN1@initLangua
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@initLangua
; Line 1762
	push	8
	call	??2UMemory@icu_56@@SAPAXI@Z		; icu_56::UMemory::operator new
	add	esp, 4
	mov	DWORD PTR $T81375[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T81375[ebp], 0
	je	SHORT $LN7@initLangua
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T81375[ebp]
	call	??0ICULanguageBreakFactory@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::ICULanguageBreakFactory::ICULanguageBreakFactory
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN8@initLangua
$LN7@initLangua:
	mov	DWORD PTR tv93[ebp], 0
$LN8@initLangua:
	mov	ecx, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T81374[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T81374[ebp]
	mov	DWORD PTR _builtIn$73385[ebp], edx
; Line 1763
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _builtIn$73385[ebp]
	push	ecx
	mov	ecx, DWORD PTR _gLanguageBreakFactories
	call	?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z ; icu_56::UStack::push
$LN1@initLangua:
; Line 1771
	push	OFFSET _breakiterator_cleanup_dict
	push	2
	call	_ucln_common_registerCleanup_56
	add	esp, 8
; Line 1772
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@initLangua
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@initLangua:
	DD	1
	DD	$LN13@initLangua
$LN13@initLangua:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@initLangua
$LN11@initLangua:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$0:
	mov	eax, DWORD PTR $T81371[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$1:
	mov	eax, DWORD PTR $T81375[ebp]
	push	eax
	call	??3UMemory@icu_56@@SAXPAX@Z		; icu_56::UMemory::operator delete
	pop	ecx
	ret	0
__ehhandler$?initLanguageFactories@icu_56@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initLanguageFactories@icu_56@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?initLanguageFactories@icu_56@@YAXXZ ENDP		; icu_56::initLanguageFactories
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _breakiterator_cleanup_dict
_TEXT	SEGMENT
tv75 = -220						; size = 4
$T81391 = -212						; size = 4
$T81392 = -200						; size = 4
_breakiterator_cleanup_dict PROC			; COMDAT
; Line 1740
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1741
	cmp	DWORD PTR _gLanguageBreakFactories, 0
	je	SHORT $LN1@breakitera
; Line 1742
	mov	eax, DWORD PTR _gLanguageBreakFactories
	mov	DWORD PTR $T81392[ebp], eax
	mov	ecx, DWORD PTR $T81392[ebp]
	mov	DWORD PTR $T81391[ebp], ecx
	cmp	DWORD PTR $T81391[ebp], 0
	je	SHORT $LN4@breakitera
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T81391[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T81391[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@breakitera
$LN4@breakitera:
	mov	DWORD PTR tv75[ebp], 0
$LN5@breakitera:
; Line 1743
	mov	DWORD PTR _gLanguageBreakFactories, 0
$LN1@breakitera:
; Line 1745
	mov	ecx, OFFSET _gLanguageBreakFactoriesInitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 1746
	mov	al, 1
; Line 1747
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_breakiterator_cleanup_dict ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __deleteFactory
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T81399 = -212						; size = 4
$T81400 = -200						; size = 4
_obj$ = 8						; size = 4
__deleteFactory PROC					; COMDAT
; File d:\mozilla\intl\icu\source\common\rbbi.cpp
; Line 1751
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1752
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR $T81400[ebp], eax
	mov	ecx, DWORD PTR $T81400[ebp]
	mov	DWORD PTR $T81399[ebp], ecx
	cmp	DWORD PTR $T81399[ebp], 0
	je	SHORT $LN3@deleteFact
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T81399[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T81399[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN1@deleteFact
$LN3@deleteFact:
	mov	DWORD PTR tv70[ebp], 0
$LN1@deleteFact:
; Line 1753
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__deleteFactory ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_type$ = 8						; size = 4
?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z PROC ; icu_56::RuleBasedBreakIterator::setBreakType, COMDAT
; _this$ = ecx
; Line 1867
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1868
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax+372], ecx
; Line 1869
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1870
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z ENDP ; icu_56::RuleBasedBreakIterator::setBreakType
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Line 1502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeFilter@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z PROC		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeFilter@icu_56@@UAEPAXI@Z
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z ENDP		; [thunk]:icu_56::UnicodeFilter::`vector deleting destructor'
_TEXT	ENDS
END
